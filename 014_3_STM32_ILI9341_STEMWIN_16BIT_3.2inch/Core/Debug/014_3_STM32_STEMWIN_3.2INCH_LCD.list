
014_3_STM32_STEMWIN_3.2INCH_LCD.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000fc80  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002e5c  0800fe08  0800fe08  0001fe08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08012c64  08012c64  000301f8  2**0
                  CONTENTS
  4 .ARM          00000008  08012c64  08012c64  00022c64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08012c6c  08012c6c  000301f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08012c6c  08012c6c  00022c6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08012c70  08012c70  00022c70  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001f8  20000000  08012c74  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00002c34  200001f8  08012e6c  000301f8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20002e2c  08012e6c  00032e2c  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  000301f8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00009645  00000000  00000000  00030226  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001e97  00000000  00000000  0003986b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000007b8  00000000  00000000  0003b708  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000006b0  00000000  00000000  0003bec0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000238fe  00000000  00000000  0003c570  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000095bc  00000000  00000000  0005fe6e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000d0d8c  00000000  00000000  0006942a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000d2  00000000  00000000  0013a1b6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001dec  00000000  00000000  0013a288  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	200001f8 	.word	0x200001f8
 80001a4:	00000000 	.word	0x00000000
 80001a8:	0800fdf0 	.word	0x0800fdf0

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	200001fc 	.word	0x200001fc
 80001c4:	0800fdf0 	.word	0x0800fdf0

080001c8 <strlen>:
 80001c8:	4603      	mov	r3, r0
 80001ca:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001ce:	2a00      	cmp	r2, #0
 80001d0:	d1fb      	bne.n	80001ca <strlen+0x2>
 80001d2:	1a18      	subs	r0, r3, r0
 80001d4:	3801      	subs	r0, #1
 80001d6:	4770      	bx	lr

080001d8 <__aeabi_uldivmod>:
 80001d8:	b953      	cbnz	r3, 80001f0 <__aeabi_uldivmod+0x18>
 80001da:	b94a      	cbnz	r2, 80001f0 <__aeabi_uldivmod+0x18>
 80001dc:	2900      	cmp	r1, #0
 80001de:	bf08      	it	eq
 80001e0:	2800      	cmpeq	r0, #0
 80001e2:	bf1c      	itt	ne
 80001e4:	f04f 31ff 	movne.w	r1, #4294967295
 80001e8:	f04f 30ff 	movne.w	r0, #4294967295
 80001ec:	f000 b974 	b.w	80004d8 <__aeabi_idiv0>
 80001f0:	f1ad 0c08 	sub.w	ip, sp, #8
 80001f4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001f8:	f000 f806 	bl	8000208 <__udivmoddi4>
 80001fc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000200:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000204:	b004      	add	sp, #16
 8000206:	4770      	bx	lr

08000208 <__udivmoddi4>:
 8000208:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800020c:	9d08      	ldr	r5, [sp, #32]
 800020e:	4604      	mov	r4, r0
 8000210:	468e      	mov	lr, r1
 8000212:	2b00      	cmp	r3, #0
 8000214:	d14d      	bne.n	80002b2 <__udivmoddi4+0xaa>
 8000216:	428a      	cmp	r2, r1
 8000218:	4694      	mov	ip, r2
 800021a:	d969      	bls.n	80002f0 <__udivmoddi4+0xe8>
 800021c:	fab2 f282 	clz	r2, r2
 8000220:	b152      	cbz	r2, 8000238 <__udivmoddi4+0x30>
 8000222:	fa01 f302 	lsl.w	r3, r1, r2
 8000226:	f1c2 0120 	rsb	r1, r2, #32
 800022a:	fa20 f101 	lsr.w	r1, r0, r1
 800022e:	fa0c fc02 	lsl.w	ip, ip, r2
 8000232:	ea41 0e03 	orr.w	lr, r1, r3
 8000236:	4094      	lsls	r4, r2
 8000238:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800023c:	0c21      	lsrs	r1, r4, #16
 800023e:	fbbe f6f8 	udiv	r6, lr, r8
 8000242:	fa1f f78c 	uxth.w	r7, ip
 8000246:	fb08 e316 	mls	r3, r8, r6, lr
 800024a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800024e:	fb06 f107 	mul.w	r1, r6, r7
 8000252:	4299      	cmp	r1, r3
 8000254:	d90a      	bls.n	800026c <__udivmoddi4+0x64>
 8000256:	eb1c 0303 	adds.w	r3, ip, r3
 800025a:	f106 30ff 	add.w	r0, r6, #4294967295
 800025e:	f080 811f 	bcs.w	80004a0 <__udivmoddi4+0x298>
 8000262:	4299      	cmp	r1, r3
 8000264:	f240 811c 	bls.w	80004a0 <__udivmoddi4+0x298>
 8000268:	3e02      	subs	r6, #2
 800026a:	4463      	add	r3, ip
 800026c:	1a5b      	subs	r3, r3, r1
 800026e:	b2a4      	uxth	r4, r4
 8000270:	fbb3 f0f8 	udiv	r0, r3, r8
 8000274:	fb08 3310 	mls	r3, r8, r0, r3
 8000278:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800027c:	fb00 f707 	mul.w	r7, r0, r7
 8000280:	42a7      	cmp	r7, r4
 8000282:	d90a      	bls.n	800029a <__udivmoddi4+0x92>
 8000284:	eb1c 0404 	adds.w	r4, ip, r4
 8000288:	f100 33ff 	add.w	r3, r0, #4294967295
 800028c:	f080 810a 	bcs.w	80004a4 <__udivmoddi4+0x29c>
 8000290:	42a7      	cmp	r7, r4
 8000292:	f240 8107 	bls.w	80004a4 <__udivmoddi4+0x29c>
 8000296:	4464      	add	r4, ip
 8000298:	3802      	subs	r0, #2
 800029a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800029e:	1be4      	subs	r4, r4, r7
 80002a0:	2600      	movs	r6, #0
 80002a2:	b11d      	cbz	r5, 80002ac <__udivmoddi4+0xa4>
 80002a4:	40d4      	lsrs	r4, r2
 80002a6:	2300      	movs	r3, #0
 80002a8:	e9c5 4300 	strd	r4, r3, [r5]
 80002ac:	4631      	mov	r1, r6
 80002ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002b2:	428b      	cmp	r3, r1
 80002b4:	d909      	bls.n	80002ca <__udivmoddi4+0xc2>
 80002b6:	2d00      	cmp	r5, #0
 80002b8:	f000 80ef 	beq.w	800049a <__udivmoddi4+0x292>
 80002bc:	2600      	movs	r6, #0
 80002be:	e9c5 0100 	strd	r0, r1, [r5]
 80002c2:	4630      	mov	r0, r6
 80002c4:	4631      	mov	r1, r6
 80002c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002ca:	fab3 f683 	clz	r6, r3
 80002ce:	2e00      	cmp	r6, #0
 80002d0:	d14a      	bne.n	8000368 <__udivmoddi4+0x160>
 80002d2:	428b      	cmp	r3, r1
 80002d4:	d302      	bcc.n	80002dc <__udivmoddi4+0xd4>
 80002d6:	4282      	cmp	r2, r0
 80002d8:	f200 80f9 	bhi.w	80004ce <__udivmoddi4+0x2c6>
 80002dc:	1a84      	subs	r4, r0, r2
 80002de:	eb61 0303 	sbc.w	r3, r1, r3
 80002e2:	2001      	movs	r0, #1
 80002e4:	469e      	mov	lr, r3
 80002e6:	2d00      	cmp	r5, #0
 80002e8:	d0e0      	beq.n	80002ac <__udivmoddi4+0xa4>
 80002ea:	e9c5 4e00 	strd	r4, lr, [r5]
 80002ee:	e7dd      	b.n	80002ac <__udivmoddi4+0xa4>
 80002f0:	b902      	cbnz	r2, 80002f4 <__udivmoddi4+0xec>
 80002f2:	deff      	udf	#255	; 0xff
 80002f4:	fab2 f282 	clz	r2, r2
 80002f8:	2a00      	cmp	r2, #0
 80002fa:	f040 8092 	bne.w	8000422 <__udivmoddi4+0x21a>
 80002fe:	eba1 010c 	sub.w	r1, r1, ip
 8000302:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000306:	fa1f fe8c 	uxth.w	lr, ip
 800030a:	2601      	movs	r6, #1
 800030c:	0c20      	lsrs	r0, r4, #16
 800030e:	fbb1 f3f7 	udiv	r3, r1, r7
 8000312:	fb07 1113 	mls	r1, r7, r3, r1
 8000316:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 800031a:	fb0e f003 	mul.w	r0, lr, r3
 800031e:	4288      	cmp	r0, r1
 8000320:	d908      	bls.n	8000334 <__udivmoddi4+0x12c>
 8000322:	eb1c 0101 	adds.w	r1, ip, r1
 8000326:	f103 38ff 	add.w	r8, r3, #4294967295
 800032a:	d202      	bcs.n	8000332 <__udivmoddi4+0x12a>
 800032c:	4288      	cmp	r0, r1
 800032e:	f200 80cb 	bhi.w	80004c8 <__udivmoddi4+0x2c0>
 8000332:	4643      	mov	r3, r8
 8000334:	1a09      	subs	r1, r1, r0
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb1 f0f7 	udiv	r0, r1, r7
 800033c:	fb07 1110 	mls	r1, r7, r0, r1
 8000340:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000344:	fb0e fe00 	mul.w	lr, lr, r0
 8000348:	45a6      	cmp	lr, r4
 800034a:	d908      	bls.n	800035e <__udivmoddi4+0x156>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 31ff 	add.w	r1, r0, #4294967295
 8000354:	d202      	bcs.n	800035c <__udivmoddi4+0x154>
 8000356:	45a6      	cmp	lr, r4
 8000358:	f200 80bb 	bhi.w	80004d2 <__udivmoddi4+0x2ca>
 800035c:	4608      	mov	r0, r1
 800035e:	eba4 040e 	sub.w	r4, r4, lr
 8000362:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000366:	e79c      	b.n	80002a2 <__udivmoddi4+0x9a>
 8000368:	f1c6 0720 	rsb	r7, r6, #32
 800036c:	40b3      	lsls	r3, r6
 800036e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000372:	ea4c 0c03 	orr.w	ip, ip, r3
 8000376:	fa20 f407 	lsr.w	r4, r0, r7
 800037a:	fa01 f306 	lsl.w	r3, r1, r6
 800037e:	431c      	orrs	r4, r3
 8000380:	40f9      	lsrs	r1, r7
 8000382:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000386:	fa00 f306 	lsl.w	r3, r0, r6
 800038a:	fbb1 f8f9 	udiv	r8, r1, r9
 800038e:	0c20      	lsrs	r0, r4, #16
 8000390:	fa1f fe8c 	uxth.w	lr, ip
 8000394:	fb09 1118 	mls	r1, r9, r8, r1
 8000398:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 800039c:	fb08 f00e 	mul.w	r0, r8, lr
 80003a0:	4288      	cmp	r0, r1
 80003a2:	fa02 f206 	lsl.w	r2, r2, r6
 80003a6:	d90b      	bls.n	80003c0 <__udivmoddi4+0x1b8>
 80003a8:	eb1c 0101 	adds.w	r1, ip, r1
 80003ac:	f108 3aff 	add.w	sl, r8, #4294967295
 80003b0:	f080 8088 	bcs.w	80004c4 <__udivmoddi4+0x2bc>
 80003b4:	4288      	cmp	r0, r1
 80003b6:	f240 8085 	bls.w	80004c4 <__udivmoddi4+0x2bc>
 80003ba:	f1a8 0802 	sub.w	r8, r8, #2
 80003be:	4461      	add	r1, ip
 80003c0:	1a09      	subs	r1, r1, r0
 80003c2:	b2a4      	uxth	r4, r4
 80003c4:	fbb1 f0f9 	udiv	r0, r1, r9
 80003c8:	fb09 1110 	mls	r1, r9, r0, r1
 80003cc:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80003d0:	fb00 fe0e 	mul.w	lr, r0, lr
 80003d4:	458e      	cmp	lr, r1
 80003d6:	d908      	bls.n	80003ea <__udivmoddi4+0x1e2>
 80003d8:	eb1c 0101 	adds.w	r1, ip, r1
 80003dc:	f100 34ff 	add.w	r4, r0, #4294967295
 80003e0:	d26c      	bcs.n	80004bc <__udivmoddi4+0x2b4>
 80003e2:	458e      	cmp	lr, r1
 80003e4:	d96a      	bls.n	80004bc <__udivmoddi4+0x2b4>
 80003e6:	3802      	subs	r0, #2
 80003e8:	4461      	add	r1, ip
 80003ea:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80003ee:	fba0 9402 	umull	r9, r4, r0, r2
 80003f2:	eba1 010e 	sub.w	r1, r1, lr
 80003f6:	42a1      	cmp	r1, r4
 80003f8:	46c8      	mov	r8, r9
 80003fa:	46a6      	mov	lr, r4
 80003fc:	d356      	bcc.n	80004ac <__udivmoddi4+0x2a4>
 80003fe:	d053      	beq.n	80004a8 <__udivmoddi4+0x2a0>
 8000400:	b15d      	cbz	r5, 800041a <__udivmoddi4+0x212>
 8000402:	ebb3 0208 	subs.w	r2, r3, r8
 8000406:	eb61 010e 	sbc.w	r1, r1, lr
 800040a:	fa01 f707 	lsl.w	r7, r1, r7
 800040e:	fa22 f306 	lsr.w	r3, r2, r6
 8000412:	40f1      	lsrs	r1, r6
 8000414:	431f      	orrs	r7, r3
 8000416:	e9c5 7100 	strd	r7, r1, [r5]
 800041a:	2600      	movs	r6, #0
 800041c:	4631      	mov	r1, r6
 800041e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000422:	f1c2 0320 	rsb	r3, r2, #32
 8000426:	40d8      	lsrs	r0, r3
 8000428:	fa0c fc02 	lsl.w	ip, ip, r2
 800042c:	fa21 f303 	lsr.w	r3, r1, r3
 8000430:	4091      	lsls	r1, r2
 8000432:	4301      	orrs	r1, r0
 8000434:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000438:	fa1f fe8c 	uxth.w	lr, ip
 800043c:	fbb3 f0f7 	udiv	r0, r3, r7
 8000440:	fb07 3610 	mls	r6, r7, r0, r3
 8000444:	0c0b      	lsrs	r3, r1, #16
 8000446:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 800044a:	fb00 f60e 	mul.w	r6, r0, lr
 800044e:	429e      	cmp	r6, r3
 8000450:	fa04 f402 	lsl.w	r4, r4, r2
 8000454:	d908      	bls.n	8000468 <__udivmoddi4+0x260>
 8000456:	eb1c 0303 	adds.w	r3, ip, r3
 800045a:	f100 38ff 	add.w	r8, r0, #4294967295
 800045e:	d22f      	bcs.n	80004c0 <__udivmoddi4+0x2b8>
 8000460:	429e      	cmp	r6, r3
 8000462:	d92d      	bls.n	80004c0 <__udivmoddi4+0x2b8>
 8000464:	3802      	subs	r0, #2
 8000466:	4463      	add	r3, ip
 8000468:	1b9b      	subs	r3, r3, r6
 800046a:	b289      	uxth	r1, r1
 800046c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000470:	fb07 3316 	mls	r3, r7, r6, r3
 8000474:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000478:	fb06 f30e 	mul.w	r3, r6, lr
 800047c:	428b      	cmp	r3, r1
 800047e:	d908      	bls.n	8000492 <__udivmoddi4+0x28a>
 8000480:	eb1c 0101 	adds.w	r1, ip, r1
 8000484:	f106 38ff 	add.w	r8, r6, #4294967295
 8000488:	d216      	bcs.n	80004b8 <__udivmoddi4+0x2b0>
 800048a:	428b      	cmp	r3, r1
 800048c:	d914      	bls.n	80004b8 <__udivmoddi4+0x2b0>
 800048e:	3e02      	subs	r6, #2
 8000490:	4461      	add	r1, ip
 8000492:	1ac9      	subs	r1, r1, r3
 8000494:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000498:	e738      	b.n	800030c <__udivmoddi4+0x104>
 800049a:	462e      	mov	r6, r5
 800049c:	4628      	mov	r0, r5
 800049e:	e705      	b.n	80002ac <__udivmoddi4+0xa4>
 80004a0:	4606      	mov	r6, r0
 80004a2:	e6e3      	b.n	800026c <__udivmoddi4+0x64>
 80004a4:	4618      	mov	r0, r3
 80004a6:	e6f8      	b.n	800029a <__udivmoddi4+0x92>
 80004a8:	454b      	cmp	r3, r9
 80004aa:	d2a9      	bcs.n	8000400 <__udivmoddi4+0x1f8>
 80004ac:	ebb9 0802 	subs.w	r8, r9, r2
 80004b0:	eb64 0e0c 	sbc.w	lr, r4, ip
 80004b4:	3801      	subs	r0, #1
 80004b6:	e7a3      	b.n	8000400 <__udivmoddi4+0x1f8>
 80004b8:	4646      	mov	r6, r8
 80004ba:	e7ea      	b.n	8000492 <__udivmoddi4+0x28a>
 80004bc:	4620      	mov	r0, r4
 80004be:	e794      	b.n	80003ea <__udivmoddi4+0x1e2>
 80004c0:	4640      	mov	r0, r8
 80004c2:	e7d1      	b.n	8000468 <__udivmoddi4+0x260>
 80004c4:	46d0      	mov	r8, sl
 80004c6:	e77b      	b.n	80003c0 <__udivmoddi4+0x1b8>
 80004c8:	3b02      	subs	r3, #2
 80004ca:	4461      	add	r1, ip
 80004cc:	e732      	b.n	8000334 <__udivmoddi4+0x12c>
 80004ce:	4630      	mov	r0, r6
 80004d0:	e709      	b.n	80002e6 <__udivmoddi4+0xde>
 80004d2:	4464      	add	r4, ip
 80004d4:	3802      	subs	r0, #2
 80004d6:	e742      	b.n	800035e <__udivmoddi4+0x156>

080004d8 <__aeabi_idiv0>:
 80004d8:	4770      	bx	lr
 80004da:	bf00      	nop

080004dc <GUI_X_Config>:
*
* Purpose:
*   Called during the initialization process in order to set up the
*   available memory for the GUI.
*/
void GUI_X_Config(void) {
 80004dc:	b580      	push	{r7, lr}
 80004de:	af00      	add	r7, sp, #0
  //
  static U32 aMemory[GUI_NUMBYTES / 4];
  //
  // Assign memory to emWin
  //
  GUI_ALLOC_AssignMemory(aMemory, GUI_NUMBYTES);
 80004e0:	f44f 5120 	mov.w	r1, #10240	; 0x2800
 80004e4:	4803      	ldr	r0, [pc, #12]	; (80004f4 <GUI_X_Config+0x18>)
 80004e6:	f00b f819 	bl	800b51c <GUI_ALLOC_AssignMemory>
  //
  // Set default font
  //
  GUI_SetDefaultFont(GUI_FONT_6X8);
 80004ea:	4803      	ldr	r0, [pc, #12]	; (80004f8 <GUI_X_Config+0x1c>)
 80004ec:	f00a f944 	bl	800a778 <GUI_SetDefaultFont>
}
 80004f0:	bf00      	nop
 80004f2:	bd80      	pop	{r7, pc}
 80004f4:	20000214 	.word	0x20000214
 80004f8:	0800ffc4 	.word	0x0800ffc4

080004fc <GUI_X_GetTime>:
  Some timing dependent routines require a GetTime
  and delay function. Default time unit (tick), normally is
  1 ms.
*/

GUI_TIMER_TIME GUI_X_GetTime(void) { 
 80004fc:	b480      	push	{r7}
 80004fe:	af00      	add	r7, sp, #0
  return OS_TimeMS; 
 8000500:	4b03      	ldr	r3, [pc, #12]	; (8000510 <GUI_X_GetTime+0x14>)
 8000502:	681b      	ldr	r3, [r3, #0]
}
 8000504:	4618      	mov	r0, r3
 8000506:	46bd      	mov	sp, r7
 8000508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800050c:	4770      	bx	lr
 800050e:	bf00      	nop
 8000510:	20002a14 	.word	0x20002a14

08000514 <GUI_X_Init>:
*     GUI_X_Init() is called from GUI_Init is a possibility to init
*     some hardware which needs to be up and running before the GUI.
*     If not required, leave this routine blank.
*/

void GUI_X_Init(void) {}
 8000514:	b480      	push	{r7}
 8000516:	af00      	add	r7, sp, #0
 8000518:	bf00      	nop
 800051a:	46bd      	mov	sp, r7
 800051c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000520:	4770      	bx	lr

08000522 <LcdWriteReg>:
*
* Function description:
*   Sets display register
*/
static void LcdWriteReg(U16 Data)
{
 8000522:	b480      	push	{r7}
 8000524:	b083      	sub	sp, #12
 8000526:	af00      	add	r7, sp, #0
 8000528:	4603      	mov	r3, r0
 800052a:	80fb      	strh	r3, [r7, #6]
	LCD_REG = Data;
 800052c:	f04f 42c0 	mov.w	r2, #1610612736	; 0x60000000
 8000530:	88fb      	ldrh	r3, [r7, #6]
 8000532:	8013      	strh	r3, [r2, #0]
}
 8000534:	bf00      	nop
 8000536:	370c      	adds	r7, #12
 8000538:	46bd      	mov	sp, r7
 800053a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800053e:	4770      	bx	lr

08000540 <LcdWriteData>:
*
* Function description:
*   Writes a value to a display register
*/
static void LcdWriteData(U16 Data)
{
 8000540:	b480      	push	{r7}
 8000542:	b083      	sub	sp, #12
 8000544:	af00      	add	r7, sp, #0
 8000546:	4603      	mov	r3, r0
 8000548:	80fb      	strh	r3, [r7, #6]
	LCD_RAM = Data;
 800054a:	4a04      	ldr	r2, [pc, #16]	; (800055c <LcdWriteData+0x1c>)
 800054c:	88fb      	ldrh	r3, [r7, #6]
 800054e:	8013      	strh	r3, [r2, #0]
}
 8000550:	bf00      	nop
 8000552:	370c      	adds	r7, #12
 8000554:	46bd      	mov	sp, r7
 8000556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800055a:	4770      	bx	lr
 800055c:	60020000 	.word	0x60020000

08000560 <LcdWriteDataMultiple>:
*       LcdWriteDataMultiple
*
* Function description:
*   Writes multiple values to a display register.
*/
static void LcdWriteDataMultiple(U16 * pData, int NumItems) {
 8000560:	b480      	push	{r7}
 8000562:	b083      	sub	sp, #12
 8000564:	af00      	add	r7, sp, #0
 8000566:	6078      	str	r0, [r7, #4]
 8000568:	6039      	str	r1, [r7, #0]

	while (NumItems--)
 800056a:	e005      	b.n	8000578 <LcdWriteDataMultiple+0x18>
	{
		LCD_RAM = *pData++;
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	1c9a      	adds	r2, r3, #2
 8000570:	607a      	str	r2, [r7, #4]
 8000572:	4a07      	ldr	r2, [pc, #28]	; (8000590 <LcdWriteDataMultiple+0x30>)
 8000574:	881b      	ldrh	r3, [r3, #0]
 8000576:	8013      	strh	r3, [r2, #0]
	while (NumItems--)
 8000578:	683b      	ldr	r3, [r7, #0]
 800057a:	1e5a      	subs	r2, r3, #1
 800057c:	603a      	str	r2, [r7, #0]
 800057e:	2b00      	cmp	r3, #0
 8000580:	d1f4      	bne.n	800056c <LcdWriteDataMultiple+0xc>
	}
}
 8000582:	bf00      	nop
 8000584:	bf00      	nop
 8000586:	370c      	adds	r7, #12
 8000588:	46bd      	mov	sp, r7
 800058a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800058e:	4770      	bx	lr
 8000590:	60020000 	.word	0x60020000

08000594 <LcdInit>:
  while (NumItems--) {
    // ... TBD by user
  }
}

void LcdInit(void) {
 8000594:	b580      	push	{r7, lr}
 8000596:	af00      	add	r7, sp, #0

    HAL_Delay(5);
 8000598:	2005      	movs	r0, #5
 800059a:	f000 fdaf 	bl	80010fc <HAL_Delay>

    LcdWriteReg(ILI9341_DISPLAY_OFF);
 800059e:	2028      	movs	r0, #40	; 0x28
 80005a0:	f7ff ffbf 	bl	8000522 <LcdWriteReg>

    LcdWriteReg(ILI9341_POWERA);
 80005a4:	20cb      	movs	r0, #203	; 0xcb
 80005a6:	f7ff ffbc 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x39);
 80005aa:	2039      	movs	r0, #57	; 0x39
 80005ac:	f7ff ffc8 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x2C);
 80005b0:	202c      	movs	r0, #44	; 0x2c
 80005b2:	f7ff ffc5 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x00);
 80005b6:	2000      	movs	r0, #0
 80005b8:	f7ff ffc2 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x34);
 80005bc:	2034      	movs	r0, #52	; 0x34
 80005be:	f7ff ffbf 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x02);
 80005c2:	2002      	movs	r0, #2
 80005c4:	f7ff ffbc 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_POWERB);
 80005c8:	20cf      	movs	r0, #207	; 0xcf
 80005ca:	f7ff ffaa 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x00);
 80005ce:	2000      	movs	r0, #0
 80005d0:	f7ff ffb6 	bl	8000540 <LcdWriteData>
    LcdWriteData(0xC1);
 80005d4:	20c1      	movs	r0, #193	; 0xc1
 80005d6:	f7ff ffb3 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x30);
 80005da:	2030      	movs	r0, #48	; 0x30
 80005dc:	f7ff ffb0 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_DTCA);
 80005e0:	20e8      	movs	r0, #232	; 0xe8
 80005e2:	f7ff ff9e 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x85);
 80005e6:	2085      	movs	r0, #133	; 0x85
 80005e8:	f7ff ffaa 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x00);
 80005ec:	2000      	movs	r0, #0
 80005ee:	f7ff ffa7 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x78);
 80005f2:	2078      	movs	r0, #120	; 0x78
 80005f4:	f7ff ffa4 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_DTCB);
 80005f8:	20ea      	movs	r0, #234	; 0xea
 80005fa:	f7ff ff92 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x00);
 80005fe:	2000      	movs	r0, #0
 8000600:	f7ff ff9e 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x00);
 8000604:	2000      	movs	r0, #0
 8000606:	f7ff ff9b 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_POWER_SEQ);
 800060a:	20ed      	movs	r0, #237	; 0xed
 800060c:	f7ff ff89 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x64);
 8000610:	2064      	movs	r0, #100	; 0x64
 8000612:	f7ff ff95 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x03);
 8000616:	2003      	movs	r0, #3
 8000618:	f7ff ff92 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x12);
 800061c:	2012      	movs	r0, #18
 800061e:	f7ff ff8f 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x81);
 8000622:	2081      	movs	r0, #129	; 0x81
 8000624:	f7ff ff8c 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_PRC);
 8000628:	20f7      	movs	r0, #247	; 0xf7
 800062a:	f7ff ff7a 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x20);
 800062e:	2020      	movs	r0, #32
 8000630:	f7ff ff86 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_POWER1);
 8000634:	20c0      	movs	r0, #192	; 0xc0
 8000636:	f7ff ff74 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x23);
 800063a:	2023      	movs	r0, #35	; 0x23
 800063c:	f7ff ff80 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_POWER2);
 8000640:	20c1      	movs	r0, #193	; 0xc1
 8000642:	f7ff ff6e 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x10);
 8000646:	2010      	movs	r0, #16
 8000648:	f7ff ff7a 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_VCOM1);
 800064c:	20c5      	movs	r0, #197	; 0xc5
 800064e:	f7ff ff68 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x3E);
 8000652:	203e      	movs	r0, #62	; 0x3e
 8000654:	f7ff ff74 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x28);
 8000658:	2028      	movs	r0, #40	; 0x28
 800065a:	f7ff ff71 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_VCOM2);
 800065e:	20c7      	movs	r0, #199	; 0xc7
 8000660:	f7ff ff5f 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x86);
 8000664:	2086      	movs	r0, #134	; 0x86
 8000666:	f7ff ff6b 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_MAC);
 800066a:	2036      	movs	r0, #54	; 0x36
 800066c:	f7ff ff59 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x48);
 8000670:	2048      	movs	r0, #72	; 0x48
 8000672:	f7ff ff65 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_PIXEL_FORMAT);
 8000676:	203a      	movs	r0, #58	; 0x3a
 8000678:	f7ff ff53 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x55);
 800067c:	2055      	movs	r0, #85	; 0x55
 800067e:	f7ff ff5f 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_FRC);
 8000682:	20b1      	movs	r0, #177	; 0xb1
 8000684:	f7ff ff4d 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x00);
 8000688:	2000      	movs	r0, #0
 800068a:	f7ff ff59 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x18);
 800068e:	2018      	movs	r0, #24
 8000690:	f7ff ff56 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_DFC);
 8000694:	20b6      	movs	r0, #182	; 0xb6
 8000696:	f7ff ff44 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x08);
 800069a:	2008      	movs	r0, #8
 800069c:	f7ff ff50 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x82);
 80006a0:	2082      	movs	r0, #130	; 0x82
 80006a2:	f7ff ff4d 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x27);
 80006a6:	2027      	movs	r0, #39	; 0x27
 80006a8:	f7ff ff4a 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_3GAMMA_EN);
 80006ac:	20f2      	movs	r0, #242	; 0xf2
 80006ae:	f7ff ff38 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x00);
 80006b2:	2000      	movs	r0, #0
 80006b4:	f7ff ff44 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_COLUMN_ADDR);
 80006b8:	202a      	movs	r0, #42	; 0x2a
 80006ba:	f7ff ff32 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x00);
 80006be:	2000      	movs	r0, #0
 80006c0:	f7ff ff3e 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x00);
 80006c4:	2000      	movs	r0, #0
 80006c6:	f7ff ff3b 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x00);
 80006ca:	2000      	movs	r0, #0
 80006cc:	f7ff ff38 	bl	8000540 <LcdWriteData>
    LcdWriteData(0xEF);
 80006d0:	20ef      	movs	r0, #239	; 0xef
 80006d2:	f7ff ff35 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_PAGE_ADDR);
 80006d6:	202b      	movs	r0, #43	; 0x2b
 80006d8:	f7ff ff23 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x00);
 80006dc:	2000      	movs	r0, #0
 80006de:	f7ff ff2f 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x00);
 80006e2:	2000      	movs	r0, #0
 80006e4:	f7ff ff2c 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x01);
 80006e8:	2001      	movs	r0, #1
 80006ea:	f7ff ff29 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x3F);
 80006ee:	203f      	movs	r0, #63	; 0x3f
 80006f0:	f7ff ff26 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_GAMMA);
 80006f4:	2026      	movs	r0, #38	; 0x26
 80006f6:	f7ff ff14 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x01);
 80006fa:	2001      	movs	r0, #1
 80006fc:	f7ff ff20 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_PGAMMA);
 8000700:	20e0      	movs	r0, #224	; 0xe0
 8000702:	f7ff ff0e 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x0F);
 8000706:	200f      	movs	r0, #15
 8000708:	f7ff ff1a 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x31);
 800070c:	2031      	movs	r0, #49	; 0x31
 800070e:	f7ff ff17 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x2B);
 8000712:	202b      	movs	r0, #43	; 0x2b
 8000714:	f7ff ff14 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x0C);
 8000718:	200c      	movs	r0, #12
 800071a:	f7ff ff11 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x0E);
 800071e:	200e      	movs	r0, #14
 8000720:	f7ff ff0e 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x08);
 8000724:	2008      	movs	r0, #8
 8000726:	f7ff ff0b 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x4E);
 800072a:	204e      	movs	r0, #78	; 0x4e
 800072c:	f7ff ff08 	bl	8000540 <LcdWriteData>
    LcdWriteData(0xF1);
 8000730:	20f1      	movs	r0, #241	; 0xf1
 8000732:	f7ff ff05 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x37);
 8000736:	2037      	movs	r0, #55	; 0x37
 8000738:	f7ff ff02 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x07);
 800073c:	2007      	movs	r0, #7
 800073e:	f7ff feff 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x10);
 8000742:	2010      	movs	r0, #16
 8000744:	f7ff fefc 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x03);
 8000748:	2003      	movs	r0, #3
 800074a:	f7ff fef9 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x0E);
 800074e:	200e      	movs	r0, #14
 8000750:	f7ff fef6 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x09);
 8000754:	2009      	movs	r0, #9
 8000756:	f7ff fef3 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x00);
 800075a:	2000      	movs	r0, #0
 800075c:	f7ff fef0 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_NGAMMA);
 8000760:	20e1      	movs	r0, #225	; 0xe1
 8000762:	f7ff fede 	bl	8000522 <LcdWriteReg>
    LcdWriteData(0x00);
 8000766:	2000      	movs	r0, #0
 8000768:	f7ff feea 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x0E);
 800076c:	200e      	movs	r0, #14
 800076e:	f7ff fee7 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x14);
 8000772:	2014      	movs	r0, #20
 8000774:	f7ff fee4 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x03);
 8000778:	2003      	movs	r0, #3
 800077a:	f7ff fee1 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x11);
 800077e:	2011      	movs	r0, #17
 8000780:	f7ff fede 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x07);
 8000784:	2007      	movs	r0, #7
 8000786:	f7ff fedb 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x31);
 800078a:	2031      	movs	r0, #49	; 0x31
 800078c:	f7ff fed8 	bl	8000540 <LcdWriteData>
    LcdWriteData(0xC1);
 8000790:	20c1      	movs	r0, #193	; 0xc1
 8000792:	f7ff fed5 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x48);
 8000796:	2048      	movs	r0, #72	; 0x48
 8000798:	f7ff fed2 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x08);
 800079c:	2008      	movs	r0, #8
 800079e:	f7ff fecf 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x0F);
 80007a2:	200f      	movs	r0, #15
 80007a4:	f7ff fecc 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x0C);
 80007a8:	200c      	movs	r0, #12
 80007aa:	f7ff fec9 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x31);
 80007ae:	2031      	movs	r0, #49	; 0x31
 80007b0:	f7ff fec6 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x36);
 80007b4:	2036      	movs	r0, #54	; 0x36
 80007b6:	f7ff fec3 	bl	8000540 <LcdWriteData>
    LcdWriteData(0x0F);
 80007ba:	200f      	movs	r0, #15
 80007bc:	f7ff fec0 	bl	8000540 <LcdWriteData>

    LcdWriteReg(ILI9341_SLEEP_OUT);
 80007c0:	2011      	movs	r0, #17
 80007c2:	f7ff feae 	bl	8000522 <LcdWriteReg>
    HAL_Delay(100);
 80007c6:	2064      	movs	r0, #100	; 0x64
 80007c8:	f000 fc98 	bl	80010fc <HAL_Delay>

    LcdWriteReg(ILI9341_DISPLAY_ON);
 80007cc:	2029      	movs	r0, #41	; 0x29
 80007ce:	f7ff fea8 	bl	8000522 <LcdWriteReg>
    LcdWriteReg(ILI9341_GRAM);
 80007d2:	202c      	movs	r0, #44	; 0x2c
 80007d4:	f7ff fea5 	bl	8000522 <LcdWriteReg>

}
 80007d8:	bf00      	nop
 80007da:	bd80      	pop	{r7, pc}

080007dc <LCD_X_Config>:
* Function description:
*   Called during the initialization process in order to set up the
*   display driver configuration.
*
*/
void LCD_X_Config(void) {
 80007dc:	b580      	push	{r7, lr}
 80007de:	b0a0      	sub	sp, #128	; 0x80
 80007e0:	af00      	add	r7, sp, #0
  GUI_DEVICE * pDevice;
  CONFIG_FLEXCOLOR Config = {0};
 80007e2:	f107 0368 	add.w	r3, r7, #104	; 0x68
 80007e6:	2200      	movs	r2, #0
 80007e8:	601a      	str	r2, [r3, #0]
 80007ea:	605a      	str	r2, [r3, #4]
 80007ec:	609a      	str	r2, [r3, #8]
 80007ee:	60da      	str	r2, [r3, #12]
 80007f0:	611a      	str	r2, [r3, #16]
  GUI_PORT_API PortAPI = {0};
 80007f2:	463b      	mov	r3, r7
 80007f4:	2268      	movs	r2, #104	; 0x68
 80007f6:	2100      	movs	r1, #0
 80007f8:	4618      	mov	r0, r3
 80007fa:	f00f faa7 	bl	800fd4c <memset>
  //
  // Set display driver and color conversion
  //
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);//16bit color flexcolor driver
 80007fe:	2300      	movs	r3, #0
 8000800:	2200      	movs	r2, #0
 8000802:	4914      	ldr	r1, [pc, #80]	; (8000854 <LCD_X_Config+0x78>)
 8000804:	4814      	ldr	r0, [pc, #80]	; (8000858 <LCD_X_Config+0x7c>)
 8000806:	f009 ff39 	bl	800a67c <GUI_DEVICE_CreateAndLink>
 800080a:	67f8      	str	r0, [r7, #124]	; 0x7c
  //
  // Display driver configuration, required for Lin-driver
  //
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 800080c:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8000810:	21f0      	movs	r1, #240	; 0xf0
 8000812:	2000      	movs	r0, #0
 8000814:	f007 fe54 	bl	80084c0 <LCD_SetSizeEx>
  LCD_SetVSizeEx(0, VXSIZE_PHYS, VYSIZE_PHYS);
 8000818:	f44f 72a0 	mov.w	r2, #320	; 0x140
 800081c:	21f0      	movs	r1, #240	; 0xf0
 800081e:	2000      	movs	r0, #0
 8000820:	f007 fe36 	bl	8008490 <LCD_SetVSizeEx>
  //
  // Orientation
  //
  Config.Orientation = GUI_SWAP_XY;
 8000824:	2304      	movs	r3, #4
 8000826:	673b      	str	r3, [r7, #112]	; 0x70
  GUIDRV_FlexColor_Config(pDevice, &Config);
 8000828:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800082c:	4619      	mov	r1, r3
 800082e:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 8000830:	f007 fdcd 	bl	80083ce <GUIDRV_FlexColor_Config>
  //
  // Set controller and operation mode
  //
  PortAPI.pfWrite16_A0  = LcdWriteReg;
 8000834:	4b09      	ldr	r3, [pc, #36]	; (800085c <LCD_X_Config+0x80>)
 8000836:	623b      	str	r3, [r7, #32]
  PortAPI.pfWrite16_A1  = LcdWriteData;
 8000838:	4b09      	ldr	r3, [pc, #36]	; (8000860 <LCD_X_Config+0x84>)
 800083a:	627b      	str	r3, [r7, #36]	; 0x24
  PortAPI.pfWriteM16_A1 = LcdWriteDataMultiple;
 800083c:	4b09      	ldr	r3, [pc, #36]	; (8000864 <LCD_X_Config+0x88>)
 800083e:	62fb      	str	r3, [r7, #44]	; 0x2c


  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66709, GUIDRV_FLEXCOLOR_M16C0B16);//ILI9341, 16bit color, 16 bit bus, no cache
 8000840:	4639      	mov	r1, r7
 8000842:	4b09      	ldr	r3, [pc, #36]	; (8000868 <LCD_X_Config+0x8c>)
 8000844:	4a09      	ldr	r2, [pc, #36]	; (800086c <LCD_X_Config+0x90>)
 8000846:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 8000848:	f007 fddf 	bl	800840a <GUIDRV_FlexColor_SetFunc>
}
 800084c:	bf00      	nop
 800084e:	3780      	adds	r7, #128	; 0x80
 8000850:	46bd      	mov	sp, r7
 8000852:	bd80      	pop	{r7, pc}
 8000854:	080120bc 	.word	0x080120bc
 8000858:	08011f08 	.word	0x08011f08
 800085c:	08000523 	.word	0x08000523
 8000860:	08000541 	.word	0x08000541
 8000864:	08000561 	.word	0x08000561
 8000868:	08007d91 	.word	0x08007d91
 800086c:	080076f5 	.word	0x080076f5

08000870 <LCD_X_DisplayDriver>:
* Return Value:
*   < -1 - Error
*     -1 - Command not handled
*      0 - Ok
*/
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
 8000870:	b580      	push	{r7, lr}
 8000872:	b086      	sub	sp, #24
 8000874:	af00      	add	r7, sp, #0
 8000876:	60f8      	str	r0, [r7, #12]
 8000878:	60b9      	str	r1, [r7, #8]
 800087a:	607a      	str	r2, [r7, #4]
  int r;
  (void) LayerIndex;
  (void) pData;
  
  switch (Cmd) {
 800087c:	68bb      	ldr	r3, [r7, #8]
 800087e:	2b01      	cmp	r3, #1
 8000880:	d103      	bne.n	800088a <LCD_X_DisplayDriver+0x1a>
  case LCD_X_INITCONTROLLER: {
	LcdInit();	//ili9341 init code
 8000882:	f7ff fe87 	bl	8000594 <LcdInit>
    return 0;
 8000886:	2300      	movs	r3, #0
 8000888:	e003      	b.n	8000892 <LCD_X_DisplayDriver+0x22>
  }
  default:
    r = -1;
 800088a:	f04f 33ff 	mov.w	r3, #4294967295
 800088e:	617b      	str	r3, [r7, #20]
  }
  return r;
 8000890:	697b      	ldr	r3, [r7, #20]
}
 8000892:	4618      	mov	r0, r3
 8000894:	3718      	adds	r7, #24
 8000896:	46bd      	mov	sp, r7
 8000898:	bd80      	pop	{r7, pc}
	...

0800089c <_cbDialog>:

/*********************************************************************
*
*       _cbDialog
*/
static void _cbDialog(WM_MESSAGE * pMsg) {
 800089c:	b580      	push	{r7, lr}
 800089e:	b084      	sub	sp, #16
 80008a0:	af00      	add	r7, sp, #0
 80008a2:	6078      	str	r0, [r7, #4]
  WM_HWIN hItem;
  // USER START (Optionally insert additional variables)
  // USER END

  switch (pMsg->MsgId) {
 80008a4:	687b      	ldr	r3, [r7, #4]
 80008a6:	681b      	ldr	r3, [r3, #0]
 80008a8:	2b1d      	cmp	r3, #29
 80008aa:	d118      	bne.n	80008de <_cbDialog+0x42>
  case WM_INIT_DIALOG:
    //
    // Initialization of 'ADC Value:'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_0);
 80008ac:	687b      	ldr	r3, [r7, #4]
 80008ae:	685b      	ldr	r3, [r3, #4]
 80008b0:	f640 0102 	movw	r1, #2050	; 0x802
 80008b4:	4618      	mov	r0, r3
 80008b6:	f003 ffdf 	bl	8004878 <WM_GetDialogItem>
 80008ba:	60f8      	str	r0, [r7, #12]
    TEXT_SetFont(hItem, GUI_FONT_13_1);
 80008bc:	490c      	ldr	r1, [pc, #48]	; (80008f0 <_cbDialog+0x54>)
 80008be:	68f8      	ldr	r0, [r7, #12]
 80008c0:	f002 f8fd 	bl	8002abe <TEXT_SetFont>
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
 80008c4:	687b      	ldr	r3, [r7, #4]
 80008c6:	685b      	ldr	r3, [r3, #4]
 80008c8:	f640 0103 	movw	r1, #2051	; 0x803
 80008cc:	4618      	mov	r0, r3
 80008ce:	f003 ffd3 	bl	8004878 <WM_GetDialogItem>
 80008d2:	60f8      	str	r0, [r7, #12]
    TEXT_SetFont(hItem, GUI_FONT_20_ASCII);
 80008d4:	4907      	ldr	r1, [pc, #28]	; (80008f4 <_cbDialog+0x58>)
 80008d6:	68f8      	ldr	r0, [r7, #12]
 80008d8:	f002 f8f1 	bl	8002abe <TEXT_SetFont>
    // USER START (Optionally insert additional code for further widget initialization)
    // USER END
    break;
 80008dc:	e003      	b.n	80008e6 <_cbDialog+0x4a>
  // USER START (Optionally insert additional message handling)
  // USER END
  default:
    WM_DefaultProc(pMsg);
 80008de:	6878      	ldr	r0, [r7, #4]
 80008e0:	f005 fc3c 	bl	800615c <WM_DefaultProc>
    break;
 80008e4:	bf00      	nop
  }
}
 80008e6:	bf00      	nop
 80008e8:	3710      	adds	r7, #16
 80008ea:	46bd      	mov	sp, r7
 80008ec:	bd80      	pop	{r7, pc}
 80008ee:	bf00      	nop
 80008f0:	080117ec 	.word	0x080117ec
 80008f4:	08010fa8 	.word	0x08010fa8

080008f8 <MainLCDTask>:
*/
/*********************************************************************
*
*       CreateSTemWin_Demo
*/
WM_HWIN MainLCDTask(void) {
 80008f8:	b580      	push	{r7, lr}
 80008fa:	b090      	sub	sp, #64	; 0x40
 80008fc:	af02      	add	r7, sp, #8
  char i=0,x=0;
 80008fe:	2300      	movs	r3, #0
 8000900:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8000904:	2300      	movs	r3, #0
 8000906:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  WM_HWIN hGraph;
  PROGBAR_Handle   	hPbar;
  TEXT_Handle	   	hText1,hText2;
  GRAPH_DATA_Handle hData;

  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), _cbDialog, WM_HBKWIN, 0, 0);
 800090a:	f003 ff4f 	bl	80047ac <WM_GetDesktopWindow>
 800090e:	4603      	mov	r3, r0
 8000910:	2200      	movs	r2, #0
 8000912:	9201      	str	r2, [sp, #4]
 8000914:	2200      	movs	r2, #0
 8000916:	9200      	str	r2, [sp, #0]
 8000918:	4a4c      	ldr	r2, [pc, #304]	; (8000a4c <MainLCDTask+0x154>)
 800091a:	2106      	movs	r1, #6
 800091c:	484c      	ldr	r0, [pc, #304]	; (8000a50 <MainLCDTask+0x158>)
 800091e:	f003 fba5 	bl	800406c <GUI_CreateDialogBox>
 8000922:	62f8      	str	r0, [r7, #44]	; 0x2c

  hPbar = WM_GetDialogItem(hWin, ID_PROGBAR_0);
 8000924:	f640 0104 	movw	r1, #2052	; 0x804
 8000928:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800092a:	f003 ffa5 	bl	8004878 <WM_GetDialogItem>
 800092e:	62b8      	str	r0, [r7, #40]	; 0x28

  hText1 = WM_GetDialogItem(hWin, ID_TEXT_1);
 8000930:	f640 0103 	movw	r1, #2051	; 0x803
 8000934:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000936:	f003 ff9f 	bl	8004878 <WM_GetDialogItem>
 800093a:	6278      	str	r0, [r7, #36]	; 0x24

  hText2 = WM_GetDialogItem(hWin, ID_TEXT_2);
 800093c:	f640 0105 	movw	r1, #2053	; 0x805
 8000940:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000942:	f003 ff99 	bl	8004878 <WM_GetDialogItem>
 8000946:	6238      	str	r0, [r7, #32]

  hGraph = WM_GetDialogItem(hWin, ID_GRAPH_0);
 8000948:	f640 0101 	movw	r1, #2049	; 0x801
 800094c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800094e:	f003 ff93 	bl	8004878 <WM_GetDialogItem>
 8000952:	61f8      	str	r0, [r7, #28]


  hData = GRAPH_DATA_YT_Create(GUI_RED, 200, NULL, 0);
 8000954:	2300      	movs	r3, #0
 8000956:	2200      	movs	r2, #0
 8000958:	21c8      	movs	r1, #200	; 0xc8
 800095a:	483e      	ldr	r0, [pc, #248]	; (8000a54 <MainLCDTask+0x15c>)
 800095c:	f002 fb7e 	bl	800305c <GRAPH_DATA_YT_Create>
 8000960:	61b8      	str	r0, [r7, #24]
  GRAPH_DATA_YT_SetAlign(hData, GRAPH_ALIGN_LEFT);
 8000962:	2101      	movs	r1, #1
 8000964:	69b8      	ldr	r0, [r7, #24]
 8000966:	f002 fbd0 	bl	800310a <GRAPH_DATA_YT_SetAlign>
  GRAPH_AttachData(hGraph, hData);
 800096a:	69b9      	ldr	r1, [r7, #24]
 800096c:	69f8      	ldr	r0, [r7, #28]
 800096e:	f002 ff9a 	bl	80038a6 <GRAPH_AttachData>

  GRAPH_SetGridVis(hGraph, 1);
 8000972:	2101      	movs	r1, #1
 8000974:	69f8      	ldr	r0, [r7, #28]
 8000976:	f002 ffb8 	bl	80038ea <GRAPH_SetGridVis>
  GRAPH_SetBorder(hGraph, 30, 0, 0, 0);
 800097a:	2300      	movs	r3, #0
 800097c:	9300      	str	r3, [sp, #0]
 800097e:	2300      	movs	r3, #0
 8000980:	2200      	movs	r2, #0
 8000982:	211e      	movs	r1, #30
 8000984:	69f8      	ldr	r0, [r7, #28]
 8000986:	f002 ffc8 	bl	800391a <GRAPH_SetBorder>

  while(1)
  {
	 PROGBAR_SetValue(hPbar, i++);
 800098a:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800098e:	1c5a      	adds	r2, r3, #1
 8000990:	f887 2037 	strb.w	r2, [r7, #55]	; 0x37
 8000994:	4619      	mov	r1, r3
 8000996:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8000998:	f002 f9fd 	bl	8002d96 <PROGBAR_SetValue>
     if(i>100) i = 0;
 800099c:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 80009a0:	2b64      	cmp	r3, #100	; 0x64
 80009a2:	d902      	bls.n	80009aa <MainLCDTask+0xb2>
 80009a4:	2300      	movs	r3, #0
 80009a6:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

     HAL_ADC_Start(&hadc1);
 80009aa:	482b      	ldr	r0, [pc, #172]	; (8000a58 <MainLCDTask+0x160>)
 80009ac:	f000 fc0e 	bl	80011cc <HAL_ADC_Start>
     HAL_ADC_PollForConversion(&hadc1, 50);
 80009b0:	2132      	movs	r1, #50	; 0x32
 80009b2:	4829      	ldr	r0, [pc, #164]	; (8000a58 <MainLCDTask+0x160>)
 80009b4:	f000 fd03 	bl	80013be <HAL_ADC_PollForConversion>
     ADC_Value = HAL_ADC_GetValue(&hadc1);
 80009b8:	4827      	ldr	r0, [pc, #156]	; (8000a58 <MainLCDTask+0x160>)
 80009ba:	f000 fd84 	bl	80014c6 <HAL_ADC_GetValue>
 80009be:	4603      	mov	r3, r0
 80009c0:	617b      	str	r3, [r7, #20]
     HAL_ADC_Stop(&hadc1);
 80009c2:	4825      	ldr	r0, [pc, #148]	; (8000a58 <MainLCDTask+0x160>)
 80009c4:	f000 fcc8 	bl	8001358 <HAL_ADC_Stop>
     itoa(ADC_Value,str,10);
 80009c8:	463b      	mov	r3, r7
 80009ca:	220a      	movs	r2, #10
 80009cc:	4619      	mov	r1, r3
 80009ce:	6978      	ldr	r0, [r7, #20]
 80009d0:	f00f f992 	bl	800fcf8 <itoa>
     TEXT_SetText(hText1, str);
 80009d4:	463b      	mov	r3, r7
 80009d6:	4619      	mov	r1, r3
 80009d8:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80009da:	f002 f883 	bl	8002ae4 <TEXT_SetText>

     itoa(StopTime,str,10);
 80009de:	463b      	mov	r3, r7
 80009e0:	220a      	movs	r2, #10
 80009e2:	4619      	mov	r1, r3
 80009e4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80009e6:	f00f f987 	bl	800fcf8 <itoa>
     TEXT_SetText(hText2, str);
 80009ea:	463b      	mov	r3, r7
 80009ec:	4619      	mov	r1, r3
 80009ee:	6a38      	ldr	r0, [r7, #32]
 80009f0:	f002 f878 	bl	8002ae4 <TEXT_SetText>

     x++;
 80009f4:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 80009f8:	3301      	adds	r3, #1
 80009fa:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
     if(x>200)
 80009fe:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8000a02:	2bc8      	cmp	r3, #200	; 0xc8
 8000a04:	d905      	bls.n	8000a12 <MainLCDTask+0x11a>
     {
    	 x=0;
 8000a06:	2300      	movs	r3, #0
 8000a08:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
    	 GRAPH_DATA_YT_Clear(hData);
 8000a0c:	69b8      	ldr	r0, [r7, #24]
 8000a0e:	f002 fb90 	bl	8003132 <GRAPH_DATA_YT_Clear>
     }

     GRAPH_DATA_YT_AddValue(hData, ADC_Value/20);
 8000a12:	697b      	ldr	r3, [r7, #20]
 8000a14:	4a11      	ldr	r2, [pc, #68]	; (8000a5c <MainLCDTask+0x164>)
 8000a16:	fb82 1203 	smull	r1, r2, r2, r3
 8000a1a:	10d2      	asrs	r2, r2, #3
 8000a1c:	17db      	asrs	r3, r3, #31
 8000a1e:	1ad3      	subs	r3, r2, r3
 8000a20:	b21b      	sxth	r3, r3
 8000a22:	4619      	mov	r1, r3
 8000a24:	69b8      	ldr	r0, [r7, #24]
 8000a26:	f002 fb55 	bl	80030d4 <GRAPH_DATA_YT_AddValue>


	 HAL_Delay(100);
 8000a2a:	2064      	movs	r0, #100	; 0x64
 8000a2c:	f000 fb66 	bl	80010fc <HAL_Delay>

	 StartTime = HAL_GetTick();
 8000a30:	f000 fb58 	bl	80010e4 <HAL_GetTick>
 8000a34:	4603      	mov	r3, r0
 8000a36:	613b      	str	r3, [r7, #16]
	 GUI_Exec();
 8000a38:	f00a f892 	bl	800ab60 <GUI_Exec>
	 StopTime = HAL_GetTick() - StartTime;
 8000a3c:	f000 fb52 	bl	80010e4 <HAL_GetTick>
 8000a40:	4602      	mov	r2, r0
 8000a42:	693b      	ldr	r3, [r7, #16]
 8000a44:	1ad3      	subs	r3, r2, r3
 8000a46:	633b      	str	r3, [r7, #48]	; 0x30
  {
 8000a48:	e79f      	b.n	800098a <MainLCDTask+0x92>
 8000a4a:	bf00      	nop
 8000a4c:	0800089d 	.word	0x0800089d
 8000a50:	0800fe84 	.word	0x0800fe84
 8000a54:	ffff0000 	.word	0xffff0000
 8000a58:	20002a18 	.word	0x20002a18
 8000a5c:	66666667 	.word	0x66666667

08000a60 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000a60:	b580      	push	{r7, lr}
 8000a62:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000a64:	f000 fad8 	bl	8001018 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000a68:	f000 f80e 	bl	8000a88 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000a6c:	f000 f8dc 	bl	8000c28 <MX_GPIO_Init>
  MX_ADC1_Init();
 8000a70:	f000 f874 	bl	8000b5c <MX_ADC1_Init>
  MX_CRC_Init();
 8000a74:	f000 f8c4 	bl	8000c00 <MX_CRC_Init>
  MX_FSMC_Init();
 8000a78:	f000 f91a 	bl	8000cb0 <MX_FSMC_Init>
  /* USER CODE BEGIN 2 */
  GUI_Init();
 8000a7c:	f009 feee 	bl	800a85c <GUI_Init>
  MainLCDTask();
 8000a80:	f7ff ff3a 	bl	80008f8 <MainLCDTask>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000a84:	e7fe      	b.n	8000a84 <main+0x24>
	...

08000a88 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000a88:	b580      	push	{r7, lr}
 8000a8a:	b094      	sub	sp, #80	; 0x50
 8000a8c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000a8e:	f107 0320 	add.w	r3, r7, #32
 8000a92:	2230      	movs	r2, #48	; 0x30
 8000a94:	2100      	movs	r1, #0
 8000a96:	4618      	mov	r0, r3
 8000a98:	f00f f958 	bl	800fd4c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000a9c:	f107 030c 	add.w	r3, r7, #12
 8000aa0:	2200      	movs	r2, #0
 8000aa2:	601a      	str	r2, [r3, #0]
 8000aa4:	605a      	str	r2, [r3, #4]
 8000aa6:	609a      	str	r2, [r3, #8]
 8000aa8:	60da      	str	r2, [r3, #12]
 8000aaa:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000aac:	2300      	movs	r3, #0
 8000aae:	60bb      	str	r3, [r7, #8]
 8000ab0:	4b28      	ldr	r3, [pc, #160]	; (8000b54 <SystemClock_Config+0xcc>)
 8000ab2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000ab4:	4a27      	ldr	r2, [pc, #156]	; (8000b54 <SystemClock_Config+0xcc>)
 8000ab6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000aba:	6413      	str	r3, [r2, #64]	; 0x40
 8000abc:	4b25      	ldr	r3, [pc, #148]	; (8000b54 <SystemClock_Config+0xcc>)
 8000abe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000ac0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000ac4:	60bb      	str	r3, [r7, #8]
 8000ac6:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ac8:	2300      	movs	r3, #0
 8000aca:	607b      	str	r3, [r7, #4]
 8000acc:	4b22      	ldr	r3, [pc, #136]	; (8000b58 <SystemClock_Config+0xd0>)
 8000ace:	681b      	ldr	r3, [r3, #0]
 8000ad0:	4a21      	ldr	r2, [pc, #132]	; (8000b58 <SystemClock_Config+0xd0>)
 8000ad2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000ad6:	6013      	str	r3, [r2, #0]
 8000ad8:	4b1f      	ldr	r3, [pc, #124]	; (8000b58 <SystemClock_Config+0xd0>)
 8000ada:	681b      	ldr	r3, [r3, #0]
 8000adc:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000ae0:	607b      	str	r3, [r7, #4]
 8000ae2:	687b      	ldr	r3, [r7, #4]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000ae4:	2301      	movs	r3, #1
 8000ae6:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000ae8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000aec:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000aee:	2302      	movs	r3, #2
 8000af0:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000af2:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000af6:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000af8:	2304      	movs	r3, #4
 8000afa:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8000afc:	23a8      	movs	r3, #168	; 0xa8
 8000afe:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b00:	2302      	movs	r3, #2
 8000b02:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8000b04:	2304      	movs	r3, #4
 8000b06:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b08:	f107 0320 	add.w	r3, r7, #32
 8000b0c:	4618      	mov	r0, r3
 8000b0e:	f001 f9a3 	bl	8001e58 <HAL_RCC_OscConfig>
 8000b12:	4603      	mov	r3, r0
 8000b14:	2b00      	cmp	r3, #0
 8000b16:	d001      	beq.n	8000b1c <SystemClock_Config+0x94>
  {
    Error_Handler();
 8000b18:	f000 f92a 	bl	8000d70 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b1c:	230f      	movs	r3, #15
 8000b1e:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b20:	2302      	movs	r3, #2
 8000b22:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000b24:	2300      	movs	r3, #0
 8000b26:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b28:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000b2c:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b2e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000b32:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b34:	f107 030c 	add.w	r3, r7, #12
 8000b38:	2105      	movs	r1, #5
 8000b3a:	4618      	mov	r0, r3
 8000b3c:	f001 fbfa 	bl	8002334 <HAL_RCC_ClockConfig>
 8000b40:	4603      	mov	r3, r0
 8000b42:	2b00      	cmp	r3, #0
 8000b44:	d001      	beq.n	8000b4a <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8000b46:	f000 f913 	bl	8000d70 <Error_Handler>
  }
}
 8000b4a:	bf00      	nop
 8000b4c:	3750      	adds	r7, #80	; 0x50
 8000b4e:	46bd      	mov	sp, r7
 8000b50:	bd80      	pop	{r7, pc}
 8000b52:	bf00      	nop
 8000b54:	40023800 	.word	0x40023800
 8000b58:	40007000 	.word	0x40007000

08000b5c <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000b5c:	b580      	push	{r7, lr}
 8000b5e:	b084      	sub	sp, #16
 8000b60:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000b62:	463b      	mov	r3, r7
 8000b64:	2200      	movs	r2, #0
 8000b66:	601a      	str	r2, [r3, #0]
 8000b68:	605a      	str	r2, [r3, #4]
 8000b6a:	609a      	str	r2, [r3, #8]
 8000b6c:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN ADC1_Init 1 */

  /* USER CODE END ADC1_Init 1 */
  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8000b6e:	4b21      	ldr	r3, [pc, #132]	; (8000bf4 <MX_ADC1_Init+0x98>)
 8000b70:	4a21      	ldr	r2, [pc, #132]	; (8000bf8 <MX_ADC1_Init+0x9c>)
 8000b72:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8000b74:	4b1f      	ldr	r3, [pc, #124]	; (8000bf4 <MX_ADC1_Init+0x98>)
 8000b76:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8000b7a:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000b7c:	4b1d      	ldr	r3, [pc, #116]	; (8000bf4 <MX_ADC1_Init+0x98>)
 8000b7e:	2200      	movs	r2, #0
 8000b80:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8000b82:	4b1c      	ldr	r3, [pc, #112]	; (8000bf4 <MX_ADC1_Init+0x98>)
 8000b84:	2200      	movs	r2, #0
 8000b86:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000b88:	4b1a      	ldr	r3, [pc, #104]	; (8000bf4 <MX_ADC1_Init+0x98>)
 8000b8a:	2200      	movs	r2, #0
 8000b8c:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000b8e:	4b19      	ldr	r3, [pc, #100]	; (8000bf4 <MX_ADC1_Init+0x98>)
 8000b90:	2200      	movs	r2, #0
 8000b92:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000b96:	4b17      	ldr	r3, [pc, #92]	; (8000bf4 <MX_ADC1_Init+0x98>)
 8000b98:	2200      	movs	r2, #0
 8000b9a:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000b9c:	4b15      	ldr	r3, [pc, #84]	; (8000bf4 <MX_ADC1_Init+0x98>)
 8000b9e:	4a17      	ldr	r2, [pc, #92]	; (8000bfc <MX_ADC1_Init+0xa0>)
 8000ba0:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000ba2:	4b14      	ldr	r3, [pc, #80]	; (8000bf4 <MX_ADC1_Init+0x98>)
 8000ba4:	2200      	movs	r2, #0
 8000ba6:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8000ba8:	4b12      	ldr	r3, [pc, #72]	; (8000bf4 <MX_ADC1_Init+0x98>)
 8000baa:	2201      	movs	r2, #1
 8000bac:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8000bae:	4b11      	ldr	r3, [pc, #68]	; (8000bf4 <MX_ADC1_Init+0x98>)
 8000bb0:	2200      	movs	r2, #0
 8000bb2:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000bb6:	4b0f      	ldr	r3, [pc, #60]	; (8000bf4 <MX_ADC1_Init+0x98>)
 8000bb8:	2201      	movs	r2, #1
 8000bba:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000bbc:	480d      	ldr	r0, [pc, #52]	; (8000bf4 <MX_ADC1_Init+0x98>)
 8000bbe:	f000 fac1 	bl	8001144 <HAL_ADC_Init>
 8000bc2:	4603      	mov	r3, r0
 8000bc4:	2b00      	cmp	r3, #0
 8000bc6:	d001      	beq.n	8000bcc <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8000bc8:	f000 f8d2 	bl	8000d70 <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000bcc:	2300      	movs	r3, #0
 8000bce:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8000bd0:	2301      	movs	r3, #1
 8000bd2:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000bd4:	2300      	movs	r3, #0
 8000bd6:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000bd8:	463b      	mov	r3, r7
 8000bda:	4619      	mov	r1, r3
 8000bdc:	4805      	ldr	r0, [pc, #20]	; (8000bf4 <MX_ADC1_Init+0x98>)
 8000bde:	f000 fc7f 	bl	80014e0 <HAL_ADC_ConfigChannel>
 8000be2:	4603      	mov	r3, r0
 8000be4:	2b00      	cmp	r3, #0
 8000be6:	d001      	beq.n	8000bec <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8000be8:	f000 f8c2 	bl	8000d70 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000bec:	bf00      	nop
 8000bee:	3710      	adds	r7, #16
 8000bf0:	46bd      	mov	sp, r7
 8000bf2:	bd80      	pop	{r7, pc}
 8000bf4:	20002a18 	.word	0x20002a18
 8000bf8:	40012000 	.word	0x40012000
 8000bfc:	0f000001 	.word	0x0f000001

08000c00 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8000c00:	b580      	push	{r7, lr}
 8000c02:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000c04:	4b06      	ldr	r3, [pc, #24]	; (8000c20 <MX_CRC_Init+0x20>)
 8000c06:	4a07      	ldr	r2, [pc, #28]	; (8000c24 <MX_CRC_Init+0x24>)
 8000c08:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000c0a:	4805      	ldr	r0, [pc, #20]	; (8000c20 <MX_CRC_Init+0x20>)
 8000c0c:	f000 ff6b 	bl	8001ae6 <HAL_CRC_Init>
 8000c10:	4603      	mov	r3, r0
 8000c12:	2b00      	cmp	r3, #0
 8000c14:	d001      	beq.n	8000c1a <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 8000c16:	f000 f8ab 	bl	8000d70 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000c1a:	bf00      	nop
 8000c1c:	bd80      	pop	{r7, pc}
 8000c1e:	bf00      	nop
 8000c20:	20002a60 	.word	0x20002a60
 8000c24:	40023000 	.word	0x40023000

08000c28 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000c28:	b480      	push	{r7}
 8000c2a:	b085      	sub	sp, #20
 8000c2c:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000c2e:	2300      	movs	r3, #0
 8000c30:	60fb      	str	r3, [r7, #12]
 8000c32:	4b1e      	ldr	r3, [pc, #120]	; (8000cac <MX_GPIO_Init+0x84>)
 8000c34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c36:	4a1d      	ldr	r2, [pc, #116]	; (8000cac <MX_GPIO_Init+0x84>)
 8000c38:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c3c:	6313      	str	r3, [r2, #48]	; 0x30
 8000c3e:	4b1b      	ldr	r3, [pc, #108]	; (8000cac <MX_GPIO_Init+0x84>)
 8000c40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c42:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000c46:	60fb      	str	r3, [r7, #12]
 8000c48:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000c4a:	2300      	movs	r3, #0
 8000c4c:	60bb      	str	r3, [r7, #8]
 8000c4e:	4b17      	ldr	r3, [pc, #92]	; (8000cac <MX_GPIO_Init+0x84>)
 8000c50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c52:	4a16      	ldr	r2, [pc, #88]	; (8000cac <MX_GPIO_Init+0x84>)
 8000c54:	f043 0301 	orr.w	r3, r3, #1
 8000c58:	6313      	str	r3, [r2, #48]	; 0x30
 8000c5a:	4b14      	ldr	r3, [pc, #80]	; (8000cac <MX_GPIO_Init+0x84>)
 8000c5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c5e:	f003 0301 	and.w	r3, r3, #1
 8000c62:	60bb      	str	r3, [r7, #8]
 8000c64:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000c66:	2300      	movs	r3, #0
 8000c68:	607b      	str	r3, [r7, #4]
 8000c6a:	4b10      	ldr	r3, [pc, #64]	; (8000cac <MX_GPIO_Init+0x84>)
 8000c6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c6e:	4a0f      	ldr	r2, [pc, #60]	; (8000cac <MX_GPIO_Init+0x84>)
 8000c70:	f043 0310 	orr.w	r3, r3, #16
 8000c74:	6313      	str	r3, [r2, #48]	; 0x30
 8000c76:	4b0d      	ldr	r3, [pc, #52]	; (8000cac <MX_GPIO_Init+0x84>)
 8000c78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c7a:	f003 0310 	and.w	r3, r3, #16
 8000c7e:	607b      	str	r3, [r7, #4]
 8000c80:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c82:	2300      	movs	r3, #0
 8000c84:	603b      	str	r3, [r7, #0]
 8000c86:	4b09      	ldr	r3, [pc, #36]	; (8000cac <MX_GPIO_Init+0x84>)
 8000c88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c8a:	4a08      	ldr	r2, [pc, #32]	; (8000cac <MX_GPIO_Init+0x84>)
 8000c8c:	f043 0308 	orr.w	r3, r3, #8
 8000c90:	6313      	str	r3, [r2, #48]	; 0x30
 8000c92:	4b06      	ldr	r3, [pc, #24]	; (8000cac <MX_GPIO_Init+0x84>)
 8000c94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c96:	f003 0308 	and.w	r3, r3, #8
 8000c9a:	603b      	str	r3, [r7, #0]
 8000c9c:	683b      	ldr	r3, [r7, #0]

}
 8000c9e:	bf00      	nop
 8000ca0:	3714      	adds	r7, #20
 8000ca2:	46bd      	mov	sp, r7
 8000ca4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ca8:	4770      	bx	lr
 8000caa:	bf00      	nop
 8000cac:	40023800 	.word	0x40023800

08000cb0 <MX_FSMC_Init>:

/* FSMC initialization function */
static void MX_FSMC_Init(void)
{
 8000cb0:	b580      	push	{r7, lr}
 8000cb2:	b088      	sub	sp, #32
 8000cb4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN FSMC_Init 0 */

  /* USER CODE END FSMC_Init 0 */

  FSMC_NORSRAM_TimingTypeDef Timing = {0};
 8000cb6:	1d3b      	adds	r3, r7, #4
 8000cb8:	2200      	movs	r2, #0
 8000cba:	601a      	str	r2, [r3, #0]
 8000cbc:	605a      	str	r2, [r3, #4]
 8000cbe:	609a      	str	r2, [r3, #8]
 8000cc0:	60da      	str	r2, [r3, #12]
 8000cc2:	611a      	str	r2, [r3, #16]
 8000cc4:	615a      	str	r2, [r3, #20]
 8000cc6:	619a      	str	r2, [r3, #24]

  /* USER CODE END FSMC_Init 1 */

  /** Perform the SRAM1 memory initialization sequence
  */
  hsram1.Instance = FSMC_NORSRAM_DEVICE;
 8000cc8:	4b27      	ldr	r3, [pc, #156]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000cca:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
 8000cce:	601a      	str	r2, [r3, #0]
  hsram1.Extended = FSMC_NORSRAM_EXTENDED_DEVICE;
 8000cd0:	4b25      	ldr	r3, [pc, #148]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000cd2:	4a26      	ldr	r2, [pc, #152]	; (8000d6c <MX_FSMC_Init+0xbc>)
 8000cd4:	605a      	str	r2, [r3, #4]
  /* hsram1.Init */
  hsram1.Init.NSBank = FSMC_NORSRAM_BANK1;
 8000cd6:	4b24      	ldr	r3, [pc, #144]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000cd8:	2200      	movs	r2, #0
 8000cda:	609a      	str	r2, [r3, #8]
  hsram1.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
 8000cdc:	4b22      	ldr	r3, [pc, #136]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000cde:	2200      	movs	r2, #0
 8000ce0:	60da      	str	r2, [r3, #12]
  hsram1.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
 8000ce2:	4b21      	ldr	r3, [pc, #132]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000ce4:	2200      	movs	r2, #0
 8000ce6:	611a      	str	r2, [r3, #16]
  hsram1.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
 8000ce8:	4b1f      	ldr	r3, [pc, #124]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000cea:	2210      	movs	r2, #16
 8000cec:	615a      	str	r2, [r3, #20]
  hsram1.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
 8000cee:	4b1e      	ldr	r3, [pc, #120]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000cf0:	2200      	movs	r2, #0
 8000cf2:	619a      	str	r2, [r3, #24]
  hsram1.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
 8000cf4:	4b1c      	ldr	r3, [pc, #112]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000cf6:	2200      	movs	r2, #0
 8000cf8:	61da      	str	r2, [r3, #28]
  hsram1.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
 8000cfa:	4b1b      	ldr	r3, [pc, #108]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000cfc:	2200      	movs	r2, #0
 8000cfe:	621a      	str	r2, [r3, #32]
  hsram1.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
 8000d00:	4b19      	ldr	r3, [pc, #100]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000d02:	2200      	movs	r2, #0
 8000d04:	625a      	str	r2, [r3, #36]	; 0x24
  hsram1.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
 8000d06:	4b18      	ldr	r3, [pc, #96]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000d08:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000d0c:	629a      	str	r2, [r3, #40]	; 0x28
  hsram1.Init.WaitSignal = FSMC_WAIT_SIGNAL_DISABLE;
 8000d0e:	4b16      	ldr	r3, [pc, #88]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000d10:	2200      	movs	r2, #0
 8000d12:	62da      	str	r2, [r3, #44]	; 0x2c
  hsram1.Init.ExtendedMode = FSMC_EXTENDED_MODE_DISABLE;
 8000d14:	4b14      	ldr	r3, [pc, #80]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000d16:	2200      	movs	r2, #0
 8000d18:	631a      	str	r2, [r3, #48]	; 0x30
  hsram1.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
 8000d1a:	4b13      	ldr	r3, [pc, #76]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000d1c:	2200      	movs	r2, #0
 8000d1e:	635a      	str	r2, [r3, #52]	; 0x34
  hsram1.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;
 8000d20:	4b11      	ldr	r3, [pc, #68]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000d22:	2200      	movs	r2, #0
 8000d24:	639a      	str	r2, [r3, #56]	; 0x38
  hsram1.Init.PageSize = FSMC_PAGE_SIZE_NONE;
 8000d26:	4b10      	ldr	r3, [pc, #64]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000d28:	2200      	movs	r2, #0
 8000d2a:	645a      	str	r2, [r3, #68]	; 0x44
  /* Timing */
  Timing.AddressSetupTime = 15;
 8000d2c:	230f      	movs	r3, #15
 8000d2e:	607b      	str	r3, [r7, #4]
  Timing.AddressHoldTime = 15;
 8000d30:	230f      	movs	r3, #15
 8000d32:	60bb      	str	r3, [r7, #8]
  Timing.DataSetupTime = 255;
 8000d34:	23ff      	movs	r3, #255	; 0xff
 8000d36:	60fb      	str	r3, [r7, #12]
  Timing.BusTurnAroundDuration = 15;
 8000d38:	230f      	movs	r3, #15
 8000d3a:	613b      	str	r3, [r7, #16]
  Timing.CLKDivision = 16;
 8000d3c:	2310      	movs	r3, #16
 8000d3e:	617b      	str	r3, [r7, #20]
  Timing.DataLatency = 17;
 8000d40:	2311      	movs	r3, #17
 8000d42:	61bb      	str	r3, [r7, #24]
  Timing.AccessMode = FSMC_ACCESS_MODE_A;
 8000d44:	2300      	movs	r3, #0
 8000d46:	61fb      	str	r3, [r7, #28]
  /* ExtTiming */

  if (HAL_SRAM_Init(&hsram1, &Timing, NULL) != HAL_OK)
 8000d48:	1d3b      	adds	r3, r7, #4
 8000d4a:	2200      	movs	r2, #0
 8000d4c:	4619      	mov	r1, r3
 8000d4e:	4806      	ldr	r0, [pc, #24]	; (8000d68 <MX_FSMC_Init+0xb8>)
 8000d50:	f001 fcdc 	bl	800270c <HAL_SRAM_Init>
 8000d54:	4603      	mov	r3, r0
 8000d56:	2b00      	cmp	r3, #0
 8000d58:	d001      	beq.n	8000d5e <MX_FSMC_Init+0xae>
  {
    Error_Handler( );
 8000d5a:	f000 f809 	bl	8000d70 <Error_Handler>
  }

  /* USER CODE BEGIN FSMC_Init 2 */

  /* USER CODE END FSMC_Init 2 */
}
 8000d5e:	bf00      	nop
 8000d60:	3720      	adds	r7, #32
 8000d62:	46bd      	mov	sp, r7
 8000d64:	bd80      	pop	{r7, pc}
 8000d66:	bf00      	nop
 8000d68:	20002a68 	.word	0x20002a68
 8000d6c:	a0000104 	.word	0xa0000104

08000d70 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000d70:	b480      	push	{r7}
 8000d72:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000d74:	b672      	cpsid	i
}
 8000d76:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000d78:	e7fe      	b.n	8000d78 <Error_Handler+0x8>
	...

08000d7c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000d7c:	b480      	push	{r7}
 8000d7e:	b083      	sub	sp, #12
 8000d80:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000d82:	2300      	movs	r3, #0
 8000d84:	607b      	str	r3, [r7, #4]
 8000d86:	4b10      	ldr	r3, [pc, #64]	; (8000dc8 <HAL_MspInit+0x4c>)
 8000d88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d8a:	4a0f      	ldr	r2, [pc, #60]	; (8000dc8 <HAL_MspInit+0x4c>)
 8000d8c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000d90:	6453      	str	r3, [r2, #68]	; 0x44
 8000d92:	4b0d      	ldr	r3, [pc, #52]	; (8000dc8 <HAL_MspInit+0x4c>)
 8000d94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d96:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000d9a:	607b      	str	r3, [r7, #4]
 8000d9c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000d9e:	2300      	movs	r3, #0
 8000da0:	603b      	str	r3, [r7, #0]
 8000da2:	4b09      	ldr	r3, [pc, #36]	; (8000dc8 <HAL_MspInit+0x4c>)
 8000da4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000da6:	4a08      	ldr	r2, [pc, #32]	; (8000dc8 <HAL_MspInit+0x4c>)
 8000da8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000dac:	6413      	str	r3, [r2, #64]	; 0x40
 8000dae:	4b06      	ldr	r3, [pc, #24]	; (8000dc8 <HAL_MspInit+0x4c>)
 8000db0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000db2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000db6:	603b      	str	r3, [r7, #0]
 8000db8:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000dba:	bf00      	nop
 8000dbc:	370c      	adds	r7, #12
 8000dbe:	46bd      	mov	sp, r7
 8000dc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dc4:	4770      	bx	lr
 8000dc6:	bf00      	nop
 8000dc8:	40023800 	.word	0x40023800

08000dcc <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8000dcc:	b580      	push	{r7, lr}
 8000dce:	b08a      	sub	sp, #40	; 0x28
 8000dd0:	af00      	add	r7, sp, #0
 8000dd2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000dd4:	f107 0314 	add.w	r3, r7, #20
 8000dd8:	2200      	movs	r2, #0
 8000dda:	601a      	str	r2, [r3, #0]
 8000ddc:	605a      	str	r2, [r3, #4]
 8000dde:	609a      	str	r2, [r3, #8]
 8000de0:	60da      	str	r2, [r3, #12]
 8000de2:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8000de4:	687b      	ldr	r3, [r7, #4]
 8000de6:	681b      	ldr	r3, [r3, #0]
 8000de8:	4a17      	ldr	r2, [pc, #92]	; (8000e48 <HAL_ADC_MspInit+0x7c>)
 8000dea:	4293      	cmp	r3, r2
 8000dec:	d127      	bne.n	8000e3e <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8000dee:	2300      	movs	r3, #0
 8000df0:	613b      	str	r3, [r7, #16]
 8000df2:	4b16      	ldr	r3, [pc, #88]	; (8000e4c <HAL_ADC_MspInit+0x80>)
 8000df4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000df6:	4a15      	ldr	r2, [pc, #84]	; (8000e4c <HAL_ADC_MspInit+0x80>)
 8000df8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000dfc:	6453      	str	r3, [r2, #68]	; 0x44
 8000dfe:	4b13      	ldr	r3, [pc, #76]	; (8000e4c <HAL_ADC_MspInit+0x80>)
 8000e00:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000e02:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000e06:	613b      	str	r3, [r7, #16]
 8000e08:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000e0a:	2300      	movs	r3, #0
 8000e0c:	60fb      	str	r3, [r7, #12]
 8000e0e:	4b0f      	ldr	r3, [pc, #60]	; (8000e4c <HAL_ADC_MspInit+0x80>)
 8000e10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e12:	4a0e      	ldr	r2, [pc, #56]	; (8000e4c <HAL_ADC_MspInit+0x80>)
 8000e14:	f043 0301 	orr.w	r3, r3, #1
 8000e18:	6313      	str	r3, [r2, #48]	; 0x30
 8000e1a:	4b0c      	ldr	r3, [pc, #48]	; (8000e4c <HAL_ADC_MspInit+0x80>)
 8000e1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e1e:	f003 0301 	and.w	r3, r3, #1
 8000e22:	60fb      	str	r3, [r7, #12]
 8000e24:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA0-WKUP     ------> ADC1_IN0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000e26:	2301      	movs	r3, #1
 8000e28:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000e2a:	2303      	movs	r3, #3
 8000e2c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e2e:	2300      	movs	r3, #0
 8000e30:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000e32:	f107 0314 	add.w	r3, r7, #20
 8000e36:	4619      	mov	r1, r3
 8000e38:	4805      	ldr	r0, [pc, #20]	; (8000e50 <HAL_ADC_MspInit+0x84>)
 8000e3a:	f000 fe71 	bl	8001b20 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8000e3e:	bf00      	nop
 8000e40:	3728      	adds	r7, #40	; 0x28
 8000e42:	46bd      	mov	sp, r7
 8000e44:	bd80      	pop	{r7, pc}
 8000e46:	bf00      	nop
 8000e48:	40012000 	.word	0x40012000
 8000e4c:	40023800 	.word	0x40023800
 8000e50:	40020000 	.word	0x40020000

08000e54 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8000e54:	b480      	push	{r7}
 8000e56:	b085      	sub	sp, #20
 8000e58:	af00      	add	r7, sp, #0
 8000e5a:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8000e5c:	687b      	ldr	r3, [r7, #4]
 8000e5e:	681b      	ldr	r3, [r3, #0]
 8000e60:	4a0b      	ldr	r2, [pc, #44]	; (8000e90 <HAL_CRC_MspInit+0x3c>)
 8000e62:	4293      	cmp	r3, r2
 8000e64:	d10d      	bne.n	8000e82 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000e66:	2300      	movs	r3, #0
 8000e68:	60fb      	str	r3, [r7, #12]
 8000e6a:	4b0a      	ldr	r3, [pc, #40]	; (8000e94 <HAL_CRC_MspInit+0x40>)
 8000e6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e6e:	4a09      	ldr	r2, [pc, #36]	; (8000e94 <HAL_CRC_MspInit+0x40>)
 8000e70:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000e74:	6313      	str	r3, [r2, #48]	; 0x30
 8000e76:	4b07      	ldr	r3, [pc, #28]	; (8000e94 <HAL_CRC_MspInit+0x40>)
 8000e78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e7a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000e7e:	60fb      	str	r3, [r7, #12]
 8000e80:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000e82:	bf00      	nop
 8000e84:	3714      	adds	r7, #20
 8000e86:	46bd      	mov	sp, r7
 8000e88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e8c:	4770      	bx	lr
 8000e8e:	bf00      	nop
 8000e90:	40023000 	.word	0x40023000
 8000e94:	40023800 	.word	0x40023800

08000e98 <HAL_FSMC_MspInit>:

}

static uint32_t FSMC_Initialized = 0;

static void HAL_FSMC_MspInit(void){
 8000e98:	b580      	push	{r7, lr}
 8000e9a:	b086      	sub	sp, #24
 8000e9c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FSMC_MspInit 0 */

  /* USER CODE END FSMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8000e9e:	1d3b      	adds	r3, r7, #4
 8000ea0:	2200      	movs	r2, #0
 8000ea2:	601a      	str	r2, [r3, #0]
 8000ea4:	605a      	str	r2, [r3, #4]
 8000ea6:	609a      	str	r2, [r3, #8]
 8000ea8:	60da      	str	r2, [r3, #12]
 8000eaa:	611a      	str	r2, [r3, #16]
  if (FSMC_Initialized) {
 8000eac:	4b1c      	ldr	r3, [pc, #112]	; (8000f20 <HAL_FSMC_MspInit+0x88>)
 8000eae:	681b      	ldr	r3, [r3, #0]
 8000eb0:	2b00      	cmp	r3, #0
 8000eb2:	d131      	bne.n	8000f18 <HAL_FSMC_MspInit+0x80>
    return;
  }
  FSMC_Initialized = 1;
 8000eb4:	4b1a      	ldr	r3, [pc, #104]	; (8000f20 <HAL_FSMC_MspInit+0x88>)
 8000eb6:	2201      	movs	r2, #1
 8000eb8:	601a      	str	r2, [r3, #0]

  /* Peripheral clock enable */
  __HAL_RCC_FSMC_CLK_ENABLE();
 8000eba:	2300      	movs	r3, #0
 8000ebc:	603b      	str	r3, [r7, #0]
 8000ebe:	4b19      	ldr	r3, [pc, #100]	; (8000f24 <HAL_FSMC_MspInit+0x8c>)
 8000ec0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000ec2:	4a18      	ldr	r2, [pc, #96]	; (8000f24 <HAL_FSMC_MspInit+0x8c>)
 8000ec4:	f043 0301 	orr.w	r3, r3, #1
 8000ec8:	6393      	str	r3, [r2, #56]	; 0x38
 8000eca:	4b16      	ldr	r3, [pc, #88]	; (8000f24 <HAL_FSMC_MspInit+0x8c>)
 8000ecc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000ece:	f003 0301 	and.w	r3, r3, #1
 8000ed2:	603b      	str	r3, [r7, #0]
 8000ed4:	683b      	ldr	r3, [r7, #0]
  PD1   ------> FSMC_D3
  PD4   ------> FSMC_NOE
  PD5   ------> FSMC_NWE
  PD7   ------> FSMC_NE1
  */
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8000ed6:	f64f 7380 	movw	r3, #65408	; 0xff80
 8000eda:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14
                          |GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000edc:	2302      	movs	r3, #2
 8000ede:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ee4:	2303      	movs	r3, #3
 8000ee6:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FSMC;
 8000ee8:	230c      	movs	r3, #12
 8000eea:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000eec:	1d3b      	adds	r3, r7, #4
 8000eee:	4619      	mov	r1, r3
 8000ef0:	480d      	ldr	r0, [pc, #52]	; (8000f28 <HAL_FSMC_MspInit+0x90>)
 8000ef2:	f000 fe15 	bl	8001b20 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 8000ef6:	f64c 73b3 	movw	r3, #53171	; 0xcfb3
 8000efa:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_7;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000efc:	2302      	movs	r3, #2
 8000efe:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f00:	2300      	movs	r3, #0
 8000f02:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f04:	2303      	movs	r3, #3
 8000f06:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FSMC;
 8000f08:	230c      	movs	r3, #12
 8000f0a:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000f0c:	1d3b      	adds	r3, r7, #4
 8000f0e:	4619      	mov	r1, r3
 8000f10:	4806      	ldr	r0, [pc, #24]	; (8000f2c <HAL_FSMC_MspInit+0x94>)
 8000f12:	f000 fe05 	bl	8001b20 <HAL_GPIO_Init>
 8000f16:	e000      	b.n	8000f1a <HAL_FSMC_MspInit+0x82>
    return;
 8000f18:	bf00      	nop

  /* USER CODE BEGIN FSMC_MspInit 1 */

  /* USER CODE END FSMC_MspInit 1 */
}
 8000f1a:	3718      	adds	r7, #24
 8000f1c:	46bd      	mov	sp, r7
 8000f1e:	bd80      	pop	{r7, pc}
 8000f20:	20002ab8 	.word	0x20002ab8
 8000f24:	40023800 	.word	0x40023800
 8000f28:	40021000 	.word	0x40021000
 8000f2c:	40020c00 	.word	0x40020c00

08000f30 <HAL_SRAM_MspInit>:

void HAL_SRAM_MspInit(SRAM_HandleTypeDef* hsram){
 8000f30:	b580      	push	{r7, lr}
 8000f32:	b082      	sub	sp, #8
 8000f34:	af00      	add	r7, sp, #0
 8000f36:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SRAM_MspInit 0 */

  /* USER CODE END SRAM_MspInit 0 */
  HAL_FSMC_MspInit();
 8000f38:	f7ff ffae 	bl	8000e98 <HAL_FSMC_MspInit>
  /* USER CODE BEGIN SRAM_MspInit 1 */

  /* USER CODE END SRAM_MspInit 1 */
}
 8000f3c:	bf00      	nop
 8000f3e:	3708      	adds	r7, #8
 8000f40:	46bd      	mov	sp, r7
 8000f42:	bd80      	pop	{r7, pc}

08000f44 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000f44:	b480      	push	{r7}
 8000f46:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000f48:	e7fe      	b.n	8000f48 <NMI_Handler+0x4>

08000f4a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000f4a:	b480      	push	{r7}
 8000f4c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000f4e:	e7fe      	b.n	8000f4e <HardFault_Handler+0x4>

08000f50 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000f50:	b480      	push	{r7}
 8000f52:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000f54:	e7fe      	b.n	8000f54 <MemManage_Handler+0x4>

08000f56 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000f56:	b480      	push	{r7}
 8000f58:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000f5a:	e7fe      	b.n	8000f5a <BusFault_Handler+0x4>

08000f5c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000f5c:	b480      	push	{r7}
 8000f5e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000f60:	e7fe      	b.n	8000f60 <UsageFault_Handler+0x4>

08000f62 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000f62:	b480      	push	{r7}
 8000f64:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000f66:	bf00      	nop
 8000f68:	46bd      	mov	sp, r7
 8000f6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f6e:	4770      	bx	lr

08000f70 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000f70:	b480      	push	{r7}
 8000f72:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000f74:	bf00      	nop
 8000f76:	46bd      	mov	sp, r7
 8000f78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f7c:	4770      	bx	lr

08000f7e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000f7e:	b480      	push	{r7}
 8000f80:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000f82:	bf00      	nop
 8000f84:	46bd      	mov	sp, r7
 8000f86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f8a:	4770      	bx	lr

08000f8c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000f8c:	b580      	push	{r7, lr}
 8000f8e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000f90:	f000 f894 	bl	80010bc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000f94:	bf00      	nop
 8000f96:	bd80      	pop	{r7, pc}

08000f98 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000f98:	b480      	push	{r7}
 8000f9a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000f9c:	4b08      	ldr	r3, [pc, #32]	; (8000fc0 <SystemInit+0x28>)
 8000f9e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000fa2:	4a07      	ldr	r2, [pc, #28]	; (8000fc0 <SystemInit+0x28>)
 8000fa4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000fa8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8000fac:	4b04      	ldr	r3, [pc, #16]	; (8000fc0 <SystemInit+0x28>)
 8000fae:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000fb2:	609a      	str	r2, [r3, #8]
#endif
}
 8000fb4:	bf00      	nop
 8000fb6:	46bd      	mov	sp, r7
 8000fb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fbc:	4770      	bx	lr
 8000fbe:	bf00      	nop
 8000fc0:	e000ed00 	.word	0xe000ed00

08000fc4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000fc4:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000ffc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000fc8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000fca:	e003      	b.n	8000fd4 <LoopCopyDataInit>

08000fcc <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000fcc:	4b0c      	ldr	r3, [pc, #48]	; (8001000 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000fce:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000fd0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000fd2:	3104      	adds	r1, #4

08000fd4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000fd4:	480b      	ldr	r0, [pc, #44]	; (8001004 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000fd6:	4b0c      	ldr	r3, [pc, #48]	; (8001008 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000fd8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000fda:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000fdc:	d3f6      	bcc.n	8000fcc <CopyDataInit>
  ldr  r2, =_sbss
 8000fde:	4a0b      	ldr	r2, [pc, #44]	; (800100c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000fe0:	e002      	b.n	8000fe8 <LoopFillZerobss>

08000fe2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000fe2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000fe4:	f842 3b04 	str.w	r3, [r2], #4

08000fe8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000fe8:	4b09      	ldr	r3, [pc, #36]	; (8001010 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000fea:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000fec:	d3f9      	bcc.n	8000fe2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000fee:	f7ff ffd3 	bl	8000f98 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ff2:	f00e fe45 	bl	800fc80 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000ff6:	f7ff fd33 	bl	8000a60 <main>
  bx  lr    
 8000ffa:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8000ffc:	20020000 	.word	0x20020000
  ldr  r3, =_sidata
 8001000:	08012c74 	.word	0x08012c74
  ldr  r0, =_sdata
 8001004:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001008:	200001f8 	.word	0x200001f8
  ldr  r2, =_sbss
 800100c:	200001f8 	.word	0x200001f8
  ldr  r3, = _ebss
 8001010:	20002e2c 	.word	0x20002e2c

08001014 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001014:	e7fe      	b.n	8001014 <ADC_IRQHandler>
	...

08001018 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001018:	b580      	push	{r7, lr}
 800101a:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800101c:	4b0e      	ldr	r3, [pc, #56]	; (8001058 <HAL_Init+0x40>)
 800101e:	681b      	ldr	r3, [r3, #0]
 8001020:	4a0d      	ldr	r2, [pc, #52]	; (8001058 <HAL_Init+0x40>)
 8001022:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001026:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8001028:	4b0b      	ldr	r3, [pc, #44]	; (8001058 <HAL_Init+0x40>)
 800102a:	681b      	ldr	r3, [r3, #0]
 800102c:	4a0a      	ldr	r2, [pc, #40]	; (8001058 <HAL_Init+0x40>)
 800102e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001032:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001034:	4b08      	ldr	r3, [pc, #32]	; (8001058 <HAL_Init+0x40>)
 8001036:	681b      	ldr	r3, [r3, #0]
 8001038:	4a07      	ldr	r2, [pc, #28]	; (8001058 <HAL_Init+0x40>)
 800103a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800103e:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001040:	2003      	movs	r0, #3
 8001042:	f000 fd1d 	bl	8001a80 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8001046:	2000      	movs	r0, #0
 8001048:	f000 f808 	bl	800105c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800104c:	f7ff fe96 	bl	8000d7c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8001050:	2300      	movs	r3, #0
}
 8001052:	4618      	mov	r0, r3
 8001054:	bd80      	pop	{r7, pc}
 8001056:	bf00      	nop
 8001058:	40023c00 	.word	0x40023c00

0800105c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800105c:	b580      	push	{r7, lr}
 800105e:	b082      	sub	sp, #8
 8001060:	af00      	add	r7, sp, #0
 8001062:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8001064:	4b12      	ldr	r3, [pc, #72]	; (80010b0 <HAL_InitTick+0x54>)
 8001066:	681a      	ldr	r2, [r3, #0]
 8001068:	4b12      	ldr	r3, [pc, #72]	; (80010b4 <HAL_InitTick+0x58>)
 800106a:	781b      	ldrb	r3, [r3, #0]
 800106c:	4619      	mov	r1, r3
 800106e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001072:	fbb3 f3f1 	udiv	r3, r3, r1
 8001076:	fbb2 f3f3 	udiv	r3, r2, r3
 800107a:	4618      	mov	r0, r3
 800107c:	f000 fd27 	bl	8001ace <HAL_SYSTICK_Config>
 8001080:	4603      	mov	r3, r0
 8001082:	2b00      	cmp	r3, #0
 8001084:	d001      	beq.n	800108a <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8001086:	2301      	movs	r3, #1
 8001088:	e00e      	b.n	80010a8 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800108a:	687b      	ldr	r3, [r7, #4]
 800108c:	2b0f      	cmp	r3, #15
 800108e:	d80a      	bhi.n	80010a6 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001090:	2200      	movs	r2, #0
 8001092:	6879      	ldr	r1, [r7, #4]
 8001094:	f04f 30ff 	mov.w	r0, #4294967295
 8001098:	f000 fcfd 	bl	8001a96 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 800109c:	4a06      	ldr	r2, [pc, #24]	; (80010b8 <HAL_InitTick+0x5c>)
 800109e:	687b      	ldr	r3, [r7, #4]
 80010a0:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80010a2:	2300      	movs	r3, #0
 80010a4:	e000      	b.n	80010a8 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 80010a6:	2301      	movs	r3, #1
}
 80010a8:	4618      	mov	r0, r3
 80010aa:	3708      	adds	r7, #8
 80010ac:	46bd      	mov	sp, r7
 80010ae:	bd80      	pop	{r7, pc}
 80010b0:	20000000 	.word	0x20000000
 80010b4:	20000008 	.word	0x20000008
 80010b8:	20000004 	.word	0x20000004

080010bc <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80010bc:	b480      	push	{r7}
 80010be:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80010c0:	4b06      	ldr	r3, [pc, #24]	; (80010dc <HAL_IncTick+0x20>)
 80010c2:	781b      	ldrb	r3, [r3, #0]
 80010c4:	461a      	mov	r2, r3
 80010c6:	4b06      	ldr	r3, [pc, #24]	; (80010e0 <HAL_IncTick+0x24>)
 80010c8:	681b      	ldr	r3, [r3, #0]
 80010ca:	4413      	add	r3, r2
 80010cc:	4a04      	ldr	r2, [pc, #16]	; (80010e0 <HAL_IncTick+0x24>)
 80010ce:	6013      	str	r3, [r2, #0]
}
 80010d0:	bf00      	nop
 80010d2:	46bd      	mov	sp, r7
 80010d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010d8:	4770      	bx	lr
 80010da:	bf00      	nop
 80010dc:	20000008 	.word	0x20000008
 80010e0:	20002abc 	.word	0x20002abc

080010e4 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80010e4:	b480      	push	{r7}
 80010e6:	af00      	add	r7, sp, #0
  return uwTick;
 80010e8:	4b03      	ldr	r3, [pc, #12]	; (80010f8 <HAL_GetTick+0x14>)
 80010ea:	681b      	ldr	r3, [r3, #0]
}
 80010ec:	4618      	mov	r0, r3
 80010ee:	46bd      	mov	sp, r7
 80010f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010f4:	4770      	bx	lr
 80010f6:	bf00      	nop
 80010f8:	20002abc 	.word	0x20002abc

080010fc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80010fc:	b580      	push	{r7, lr}
 80010fe:	b084      	sub	sp, #16
 8001100:	af00      	add	r7, sp, #0
 8001102:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8001104:	f7ff ffee 	bl	80010e4 <HAL_GetTick>
 8001108:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 800110a:	687b      	ldr	r3, [r7, #4]
 800110c:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800110e:	68fb      	ldr	r3, [r7, #12]
 8001110:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001114:	d005      	beq.n	8001122 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8001116:	4b0a      	ldr	r3, [pc, #40]	; (8001140 <HAL_Delay+0x44>)
 8001118:	781b      	ldrb	r3, [r3, #0]
 800111a:	461a      	mov	r2, r3
 800111c:	68fb      	ldr	r3, [r7, #12]
 800111e:	4413      	add	r3, r2
 8001120:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8001122:	bf00      	nop
 8001124:	f7ff ffde 	bl	80010e4 <HAL_GetTick>
 8001128:	4602      	mov	r2, r0
 800112a:	68bb      	ldr	r3, [r7, #8]
 800112c:	1ad3      	subs	r3, r2, r3
 800112e:	68fa      	ldr	r2, [r7, #12]
 8001130:	429a      	cmp	r2, r3
 8001132:	d8f7      	bhi.n	8001124 <HAL_Delay+0x28>
  {
  }
}
 8001134:	bf00      	nop
 8001136:	bf00      	nop
 8001138:	3710      	adds	r7, #16
 800113a:	46bd      	mov	sp, r7
 800113c:	bd80      	pop	{r7, pc}
 800113e:	bf00      	nop
 8001140:	20000008 	.word	0x20000008

08001144 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8001144:	b580      	push	{r7, lr}
 8001146:	b084      	sub	sp, #16
 8001148:	af00      	add	r7, sp, #0
 800114a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 800114c:	2300      	movs	r3, #0
 800114e:	73fb      	strb	r3, [r7, #15]
  
  /* Check ADC handle */
  if(hadc == NULL)
 8001150:	687b      	ldr	r3, [r7, #4]
 8001152:	2b00      	cmp	r3, #0
 8001154:	d101      	bne.n	800115a <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 8001156:	2301      	movs	r3, #1
 8001158:	e033      	b.n	80011c2 <HAL_ADC_Init+0x7e>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 800115a:	687b      	ldr	r3, [r7, #4]
 800115c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800115e:	2b00      	cmp	r3, #0
 8001160:	d109      	bne.n	8001176 <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8001162:	6878      	ldr	r0, [r7, #4]
 8001164:	f7ff fe32 	bl	8000dcc <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8001168:	687b      	ldr	r3, [r7, #4]
 800116a:	2200      	movs	r2, #0
 800116c:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 800116e:	687b      	ldr	r3, [r7, #4]
 8001170:	2200      	movs	r2, #0
 8001172:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8001176:	687b      	ldr	r3, [r7, #4]
 8001178:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800117a:	f003 0310 	and.w	r3, r3, #16
 800117e:	2b00      	cmp	r3, #0
 8001180:	d118      	bne.n	80011b4 <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8001182:	687b      	ldr	r3, [r7, #4]
 8001184:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001186:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800118a:	f023 0302 	bic.w	r3, r3, #2
 800118e:	f043 0202 	orr.w	r2, r3, #2
 8001192:	687b      	ldr	r3, [r7, #4]
 8001194:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);
    
    /* Set ADC parameters */
    ADC_Init(hadc);
 8001196:	6878      	ldr	r0, [r7, #4]
 8001198:	f000 fac4 	bl	8001724 <ADC_Init>
    
    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 800119c:	687b      	ldr	r3, [r7, #4]
 800119e:	2200      	movs	r2, #0
 80011a0:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 80011a2:	687b      	ldr	r3, [r7, #4]
 80011a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011a6:	f023 0303 	bic.w	r3, r3, #3
 80011aa:	f043 0201 	orr.w	r2, r3, #1
 80011ae:	687b      	ldr	r3, [r7, #4]
 80011b0:	641a      	str	r2, [r3, #64]	; 0x40
 80011b2:	e001      	b.n	80011b8 <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 80011b4:	2301      	movs	r3, #1
 80011b6:	73fb      	strb	r3, [r7, #15]
  }
  
  /* Release Lock */
  __HAL_UNLOCK(hadc);
 80011b8:	687b      	ldr	r3, [r7, #4]
 80011ba:	2200      	movs	r2, #0
 80011bc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Return function status */
  return tmp_hal_status;
 80011c0:	7bfb      	ldrb	r3, [r7, #15]
}
 80011c2:	4618      	mov	r0, r3
 80011c4:	3710      	adds	r7, #16
 80011c6:	46bd      	mov	sp, r7
 80011c8:	bd80      	pop	{r7, pc}
	...

080011cc <HAL_ADC_Start>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
{
 80011cc:	b480      	push	{r7}
 80011ce:	b085      	sub	sp, #20
 80011d0:	af00      	add	r7, sp, #0
 80011d2:	6078      	str	r0, [r7, #4]
  __IO uint32_t counter = 0U;
 80011d4:	2300      	movs	r3, #0
 80011d6:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
  
  /* Process locked */
  __HAL_LOCK(hadc);
 80011d8:	687b      	ldr	r3, [r7, #4]
 80011da:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80011de:	2b01      	cmp	r3, #1
 80011e0:	d101      	bne.n	80011e6 <HAL_ADC_Start+0x1a>
 80011e2:	2302      	movs	r3, #2
 80011e4:	e0a5      	b.n	8001332 <HAL_ADC_Start+0x166>
 80011e6:	687b      	ldr	r3, [r7, #4]
 80011e8:	2201      	movs	r2, #1
 80011ea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during 
  Tstab time the ADC's stabilization */
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 80011ee:	687b      	ldr	r3, [r7, #4]
 80011f0:	681b      	ldr	r3, [r3, #0]
 80011f2:	689b      	ldr	r3, [r3, #8]
 80011f4:	f003 0301 	and.w	r3, r3, #1
 80011f8:	2b01      	cmp	r3, #1
 80011fa:	d018      	beq.n	800122e <HAL_ADC_Start+0x62>
  {  
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 80011fc:	687b      	ldr	r3, [r7, #4]
 80011fe:	681b      	ldr	r3, [r3, #0]
 8001200:	689a      	ldr	r2, [r3, #8]
 8001202:	687b      	ldr	r3, [r7, #4]
 8001204:	681b      	ldr	r3, [r3, #0]
 8001206:	f042 0201 	orr.w	r2, r2, #1
 800120a:	609a      	str	r2, [r3, #8]
    
    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800120c:	4b4c      	ldr	r3, [pc, #304]	; (8001340 <HAL_ADC_Start+0x174>)
 800120e:	681b      	ldr	r3, [r3, #0]
 8001210:	4a4c      	ldr	r2, [pc, #304]	; (8001344 <HAL_ADC_Start+0x178>)
 8001212:	fba2 2303 	umull	r2, r3, r2, r3
 8001216:	0c9a      	lsrs	r2, r3, #18
 8001218:	4613      	mov	r3, r2
 800121a:	005b      	lsls	r3, r3, #1
 800121c:	4413      	add	r3, r2
 800121e:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8001220:	e002      	b.n	8001228 <HAL_ADC_Start+0x5c>
    {
      counter--;
 8001222:	68bb      	ldr	r3, [r7, #8]
 8001224:	3b01      	subs	r3, #1
 8001226:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8001228:	68bb      	ldr	r3, [r7, #8]
 800122a:	2b00      	cmp	r3, #0
 800122c:	d1f9      	bne.n	8001222 <HAL_ADC_Start+0x56>
    }
  }
  
  /* Start conversion if ADC is effectively enabled */
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 800122e:	687b      	ldr	r3, [r7, #4]
 8001230:	681b      	ldr	r3, [r3, #0]
 8001232:	689b      	ldr	r3, [r3, #8]
 8001234:	f003 0301 	and.w	r3, r3, #1
 8001238:	2b01      	cmp	r3, #1
 800123a:	d179      	bne.n	8001330 <HAL_ADC_Start+0x164>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 800123c:	687b      	ldr	r3, [r7, #4]
 800123e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001240:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001244:	f023 0301 	bic.w	r3, r3, #1
 8001248:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800124c:	687b      	ldr	r3, [r7, #4]
 800124e:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);
    
    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8001250:	687b      	ldr	r3, [r7, #4]
 8001252:	681b      	ldr	r3, [r3, #0]
 8001254:	685b      	ldr	r3, [r3, #4]
 8001256:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800125a:	2b00      	cmp	r3, #0
 800125c:	d007      	beq.n	800126e <HAL_ADC_Start+0xa2>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 800125e:	687b      	ldr	r3, [r7, #4]
 8001260:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001262:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8001266:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 800126a:	687b      	ldr	r3, [r7, #4]
 800126c:	641a      	str	r2, [r3, #64]	; 0x40
    }
    
    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800126e:	687b      	ldr	r3, [r7, #4]
 8001270:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001272:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001276:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800127a:	d106      	bne.n	800128a <HAL_ADC_Start+0xbe>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 800127c:	687b      	ldr	r3, [r7, #4]
 800127e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001280:	f023 0206 	bic.w	r2, r3, #6
 8001284:	687b      	ldr	r3, [r7, #4]
 8001286:	645a      	str	r2, [r3, #68]	; 0x44
 8001288:	e002      	b.n	8001290 <HAL_ADC_Start+0xc4>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 800128a:	687b      	ldr	r3, [r7, #4]
 800128c:	2200      	movs	r2, #0
 800128e:	645a      	str	r2, [r3, #68]	; 0x44
    } 

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	2200      	movs	r2, #0
 8001294:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8001298:	4b2b      	ldr	r3, [pc, #172]	; (8001348 <HAL_ADC_Start+0x17c>)
 800129a:	60fb      	str	r3, [r7, #12]

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 800129c:	687b      	ldr	r3, [r7, #4]
 800129e:	681b      	ldr	r3, [r3, #0]
 80012a0:	f06f 0222 	mvn.w	r2, #34	; 0x22
 80012a4:	601a      	str	r2, [r3, #0]
    
    /* Check if Multimode enabled */
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 80012a6:	68fb      	ldr	r3, [r7, #12]
 80012a8:	685b      	ldr	r3, [r3, #4]
 80012aa:	f003 031f 	and.w	r3, r3, #31
 80012ae:	2b00      	cmp	r3, #0
 80012b0:	d12a      	bne.n	8001308 <HAL_ADC_Start+0x13c>
    {
#if defined(ADC2) && defined(ADC3)
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 80012b2:	687b      	ldr	r3, [r7, #4]
 80012b4:	681b      	ldr	r3, [r3, #0]
 80012b6:	4a25      	ldr	r2, [pc, #148]	; (800134c <HAL_ADC_Start+0x180>)
 80012b8:	4293      	cmp	r3, r2
 80012ba:	d015      	beq.n	80012e8 <HAL_ADC_Start+0x11c>
 80012bc:	687b      	ldr	r3, [r7, #4]
 80012be:	681b      	ldr	r3, [r3, #0]
 80012c0:	4a23      	ldr	r2, [pc, #140]	; (8001350 <HAL_ADC_Start+0x184>)
 80012c2:	4293      	cmp	r3, r2
 80012c4:	d105      	bne.n	80012d2 <HAL_ADC_Start+0x106>
 80012c6:	4b20      	ldr	r3, [pc, #128]	; (8001348 <HAL_ADC_Start+0x17c>)
 80012c8:	685b      	ldr	r3, [r3, #4]
 80012ca:	f003 031f 	and.w	r3, r3, #31
 80012ce:	2b00      	cmp	r3, #0
 80012d0:	d00a      	beq.n	80012e8 <HAL_ADC_Start+0x11c>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 80012d2:	687b      	ldr	r3, [r7, #4]
 80012d4:	681b      	ldr	r3, [r3, #0]
 80012d6:	4a1f      	ldr	r2, [pc, #124]	; (8001354 <HAL_ADC_Start+0x188>)
 80012d8:	4293      	cmp	r3, r2
 80012da:	d129      	bne.n	8001330 <HAL_ADC_Start+0x164>
 80012dc:	4b1a      	ldr	r3, [pc, #104]	; (8001348 <HAL_ADC_Start+0x17c>)
 80012de:	685b      	ldr	r3, [r3, #4]
 80012e0:	f003 0310 	and.w	r3, r3, #16
 80012e4:	2b00      	cmp	r3, #0
 80012e6:	d123      	bne.n	8001330 <HAL_ADC_Start+0x164>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 80012e8:	687b      	ldr	r3, [r7, #4]
 80012ea:	681b      	ldr	r3, [r3, #0]
 80012ec:	689b      	ldr	r3, [r3, #8]
 80012ee:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80012f2:	2b00      	cmp	r3, #0
 80012f4:	d11c      	bne.n	8001330 <HAL_ADC_Start+0x164>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 80012f6:	687b      	ldr	r3, [r7, #4]
 80012f8:	681b      	ldr	r3, [r3, #0]
 80012fa:	689a      	ldr	r2, [r3, #8]
 80012fc:	687b      	ldr	r3, [r7, #4]
 80012fe:	681b      	ldr	r3, [r3, #0]
 8001300:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8001304:	609a      	str	r2, [r3, #8]
 8001306:	e013      	b.n	8001330 <HAL_ADC_Start+0x164>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8001308:	687b      	ldr	r3, [r7, #4]
 800130a:	681b      	ldr	r3, [r3, #0]
 800130c:	4a0f      	ldr	r2, [pc, #60]	; (800134c <HAL_ADC_Start+0x180>)
 800130e:	4293      	cmp	r3, r2
 8001310:	d10e      	bne.n	8001330 <HAL_ADC_Start+0x164>
 8001312:	687b      	ldr	r3, [r7, #4]
 8001314:	681b      	ldr	r3, [r3, #0]
 8001316:	689b      	ldr	r3, [r3, #8]
 8001318:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800131c:	2b00      	cmp	r3, #0
 800131e:	d107      	bne.n	8001330 <HAL_ADC_Start+0x164>
      {
        /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8001320:	687b      	ldr	r3, [r7, #4]
 8001322:	681b      	ldr	r3, [r3, #0]
 8001324:	689a      	ldr	r2, [r3, #8]
 8001326:	687b      	ldr	r3, [r7, #4]
 8001328:	681b      	ldr	r3, [r3, #0]
 800132a:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800132e:	609a      	str	r2, [r3, #8]
      }
    }
  }
  
  /* Return function status */
  return HAL_OK;
 8001330:	2300      	movs	r3, #0
}
 8001332:	4618      	mov	r0, r3
 8001334:	3714      	adds	r7, #20
 8001336:	46bd      	mov	sp, r7
 8001338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800133c:	4770      	bx	lr
 800133e:	bf00      	nop
 8001340:	20000000 	.word	0x20000000
 8001344:	431bde83 	.word	0x431bde83
 8001348:	40012300 	.word	0x40012300
 800134c:	40012000 	.word	0x40012000
 8001350:	40012100 	.word	0x40012100
 8001354:	40012200 	.word	0x40012200

08001358 <HAL_ADC_Stop>:
  *         the configuration information for the specified ADC.
  *
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
{
 8001358:	b480      	push	{r7}
 800135a:	b083      	sub	sp, #12
 800135c:	af00      	add	r7, sp, #0
 800135e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8001360:	687b      	ldr	r3, [r7, #4]
 8001362:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001366:	2b01      	cmp	r3, #1
 8001368:	d101      	bne.n	800136e <HAL_ADC_Stop+0x16>
 800136a:	2302      	movs	r3, #2
 800136c:	e021      	b.n	80013b2 <HAL_ADC_Stop+0x5a>
 800136e:	687b      	ldr	r3, [r7, #4]
 8001370:	2201      	movs	r2, #1
 8001372:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Stop potential conversion on going, on regular and injected groups */
  /* Disable ADC peripheral */
  __HAL_ADC_DISABLE(hadc);
 8001376:	687b      	ldr	r3, [r7, #4]
 8001378:	681b      	ldr	r3, [r3, #0]
 800137a:	689a      	ldr	r2, [r3, #8]
 800137c:	687b      	ldr	r3, [r7, #4]
 800137e:	681b      	ldr	r3, [r3, #0]
 8001380:	f022 0201 	bic.w	r2, r2, #1
 8001384:	609a      	str	r2, [r3, #8]
  
  /* Check if ADC is effectively disabled */
  if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 8001386:	687b      	ldr	r3, [r7, #4]
 8001388:	681b      	ldr	r3, [r3, #0]
 800138a:	689b      	ldr	r3, [r3, #8]
 800138c:	f003 0301 	and.w	r3, r3, #1
 8001390:	2b00      	cmp	r3, #0
 8001392:	d109      	bne.n	80013a8 <HAL_ADC_Stop+0x50>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8001394:	687b      	ldr	r3, [r7, #4]
 8001396:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001398:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800139c:	f023 0301 	bic.w	r3, r3, #1
 80013a0:	f043 0201 	orr.w	r2, r3, #1
 80013a4:	687b      	ldr	r3, [r7, #4]
 80013a6:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_READY);
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80013a8:	687b      	ldr	r3, [r7, #4]
 80013aa:	2200      	movs	r2, #0
 80013ac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 80013b0:	2300      	movs	r3, #0
}
 80013b2:	4618      	mov	r0, r3
 80013b4:	370c      	adds	r7, #12
 80013b6:	46bd      	mov	sp, r7
 80013b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013bc:	4770      	bx	lr

080013be <HAL_ADC_PollForConversion>:
  *         the configuration information for the specified ADC.
  * @param  Timeout Timeout value in millisecond.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
{
 80013be:	b580      	push	{r7, lr}
 80013c0:	b084      	sub	sp, #16
 80013c2:	af00      	add	r7, sp, #0
 80013c4:	6078      	str	r0, [r7, #4]
 80013c6:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0U;
 80013c8:	2300      	movs	r3, #0
 80013ca:	60fb      	str	r3, [r7, #12]
  /* each conversion:                                                       */
  /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
  /* several ranks and polling for end of each conversion.                  */
  /* For code simplicity sake, this particular case is generalized to       */
  /* ADC configured in DMA mode and polling for end of each conversion.     */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80013cc:	687b      	ldr	r3, [r7, #4]
 80013ce:	681b      	ldr	r3, [r3, #0]
 80013d0:	689b      	ldr	r3, [r3, #8]
 80013d2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80013d6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80013da:	d113      	bne.n	8001404 <HAL_ADC_PollForConversion+0x46>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 80013dc:	687b      	ldr	r3, [r7, #4]
 80013de:	681b      	ldr	r3, [r3, #0]
 80013e0:	689b      	ldr	r3, [r3, #8]
 80013e2:	f403 7380 	and.w	r3, r3, #256	; 0x100
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80013e6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80013ea:	d10b      	bne.n	8001404 <HAL_ADC_PollForConversion+0x46>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80013ec:	687b      	ldr	r3, [r7, #4]
 80013ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013f0:	f043 0220 	orr.w	r2, r3, #32
 80013f4:	687b      	ldr	r3, [r7, #4]
 80013f6:	641a      	str	r2, [r3, #64]	; 0x40
    
    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 80013f8:	687b      	ldr	r3, [r7, #4]
 80013fa:	2200      	movs	r2, #0
 80013fc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
    return HAL_ERROR;
 8001400:	2301      	movs	r3, #1
 8001402:	e05c      	b.n	80014be <HAL_ADC_PollForConversion+0x100>
  }

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8001404:	f7ff fe6e 	bl	80010e4 <HAL_GetTick>
 8001408:	60f8      	str	r0, [r7, #12]

  /* Check End of conversion flag */
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 800140a:	e01a      	b.n	8001442 <HAL_ADC_PollForConversion+0x84>
  {
    /* Check if timeout is disabled (set to infinite wait) */
    if(Timeout != HAL_MAX_DELAY)
 800140c:	683b      	ldr	r3, [r7, #0]
 800140e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001412:	d016      	beq.n	8001442 <HAL_ADC_PollForConversion+0x84>
    {
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8001414:	683b      	ldr	r3, [r7, #0]
 8001416:	2b00      	cmp	r3, #0
 8001418:	d007      	beq.n	800142a <HAL_ADC_PollForConversion+0x6c>
 800141a:	f7ff fe63 	bl	80010e4 <HAL_GetTick>
 800141e:	4602      	mov	r2, r0
 8001420:	68fb      	ldr	r3, [r7, #12]
 8001422:	1ad3      	subs	r3, r2, r3
 8001424:	683a      	ldr	r2, [r7, #0]
 8001426:	429a      	cmp	r2, r3
 8001428:	d20b      	bcs.n	8001442 <HAL_ADC_PollForConversion+0x84>
      {
        /* Update ADC state machine to timeout */
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 800142a:	687b      	ldr	r3, [r7, #4]
 800142c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800142e:	f043 0204 	orr.w	r2, r3, #4
 8001432:	687b      	ldr	r3, [r7, #4]
 8001434:	641a      	str	r2, [r3, #64]	; 0x40
        
        /* Process unlocked */
        __HAL_UNLOCK(hadc);
 8001436:	687b      	ldr	r3, [r7, #4]
 8001438:	2200      	movs	r2, #0
 800143a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
        
        return HAL_TIMEOUT;
 800143e:	2303      	movs	r3, #3
 8001440:	e03d      	b.n	80014be <HAL_ADC_PollForConversion+0x100>
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8001442:	687b      	ldr	r3, [r7, #4]
 8001444:	681b      	ldr	r3, [r3, #0]
 8001446:	681b      	ldr	r3, [r3, #0]
 8001448:	f003 0302 	and.w	r3, r3, #2
 800144c:	2b02      	cmp	r3, #2
 800144e:	d1dd      	bne.n	800140c <HAL_ADC_PollForConversion+0x4e>
      }
    }
  }
  
  /* Clear regular group conversion flag */
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8001450:	687b      	ldr	r3, [r7, #4]
 8001452:	681b      	ldr	r3, [r3, #0]
 8001454:	f06f 0212 	mvn.w	r2, #18
 8001458:	601a      	str	r2, [r3, #0]
  
  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 800145a:	687b      	ldr	r3, [r7, #4]
 800145c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800145e:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8001462:	687b      	ldr	r3, [r7, #4]
 8001464:	641a      	str	r2, [r3, #64]	; 0x40
  /* by external trigger, continuous mode or scan sequence on going.          */
  /* Note: On STM32F4, there is no independent flag of end of sequence.       */
  /*       The test of scan sequence on going is done either with scan        */
  /*       sequence disabled or with end of conversion flag set to            */
  /*       of end of sequence.                                                */
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	681b      	ldr	r3, [r3, #0]
 800146a:	689b      	ldr	r3, [r3, #8]
 800146c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001470:	2b00      	cmp	r3, #0
 8001472:	d123      	bne.n	80014bc <HAL_ADC_PollForConversion+0xfe>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8001474:	687b      	ldr	r3, [r7, #4]
 8001476:	7e1b      	ldrb	r3, [r3, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8001478:	2b00      	cmp	r3, #0
 800147a:	d11f      	bne.n	80014bc <HAL_ADC_PollForConversion+0xfe>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800147c:	687b      	ldr	r3, [r7, #4]
 800147e:	681b      	ldr	r3, [r3, #0]
 8001480:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001482:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8001486:	2b00      	cmp	r3, #0
 8001488:	d006      	beq.n	8001498 <HAL_ADC_PollForConversion+0xda>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 800148a:	687b      	ldr	r3, [r7, #4]
 800148c:	681b      	ldr	r3, [r3, #0]
 800148e:	689b      	ldr	r3, [r3, #8]
 8001490:	f403 6380 	and.w	r3, r3, #1024	; 0x400
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8001494:	2b00      	cmp	r3, #0
 8001496:	d111      	bne.n	80014bc <HAL_ADC_PollForConversion+0xfe>
  {
    /* Set ADC state */
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 8001498:	687b      	ldr	r3, [r7, #4]
 800149a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800149c:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80014a0:	687b      	ldr	r3, [r7, #4]
 80014a2:	641a      	str	r2, [r3, #64]	; 0x40
    
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 80014a4:	687b      	ldr	r3, [r7, #4]
 80014a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80014a8:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80014ac:	2b00      	cmp	r3, #0
 80014ae:	d105      	bne.n	80014bc <HAL_ADC_PollForConversion+0xfe>
    { 
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 80014b0:	687b      	ldr	r3, [r7, #4]
 80014b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80014b4:	f043 0201 	orr.w	r2, r3, #1
 80014b8:	687b      	ldr	r3, [r7, #4]
 80014ba:	641a      	str	r2, [r3, #64]	; 0x40
    }
  }
  
  /* Return ADC state */
  return HAL_OK;
 80014bc:	2300      	movs	r3, #0
}
 80014be:	4618      	mov	r0, r3
 80014c0:	3710      	adds	r7, #16
 80014c2:	46bd      	mov	sp, r7
 80014c4:	bd80      	pop	{r7, pc}

080014c6 <HAL_ADC_GetValue>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval Converted value
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
{       
 80014c6:	b480      	push	{r7}
 80014c8:	b083      	sub	sp, #12
 80014ca:	af00      	add	r7, sp, #0
 80014cc:	6078      	str	r0, [r7, #4]
  /* Return the selected ADC converted value */ 
  return hadc->Instance->DR;
 80014ce:	687b      	ldr	r3, [r7, #4]
 80014d0:	681b      	ldr	r3, [r3, #0]
 80014d2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 80014d4:	4618      	mov	r0, r3
 80014d6:	370c      	adds	r7, #12
 80014d8:	46bd      	mov	sp, r7
 80014da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014de:	4770      	bx	lr

080014e0 <HAL_ADC_ConfigChannel>:
  *         the configuration information for the specified ADC.
  * @param  sConfig ADC configuration structure. 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 80014e0:	b480      	push	{r7}
 80014e2:	b085      	sub	sp, #20
 80014e4:	af00      	add	r7, sp, #0
 80014e6:	6078      	str	r0, [r7, #4]
 80014e8:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 80014ea:	2300      	movs	r3, #0
 80014ec:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 80014ee:	687b      	ldr	r3, [r7, #4]
 80014f0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80014f4:	2b01      	cmp	r3, #1
 80014f6:	d101      	bne.n	80014fc <HAL_ADC_ConfigChannel+0x1c>
 80014f8:	2302      	movs	r3, #2
 80014fa:	e105      	b.n	8001708 <HAL_ADC_ConfigChannel+0x228>
 80014fc:	687b      	ldr	r3, [r7, #4]
 80014fe:	2201      	movs	r2, #1
 8001500:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 8001504:	683b      	ldr	r3, [r7, #0]
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	2b09      	cmp	r3, #9
 800150a:	d925      	bls.n	8001558 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800150c:	687b      	ldr	r3, [r7, #4]
 800150e:	681b      	ldr	r3, [r3, #0]
 8001510:	68d9      	ldr	r1, [r3, #12]
 8001512:	683b      	ldr	r3, [r7, #0]
 8001514:	681b      	ldr	r3, [r3, #0]
 8001516:	b29b      	uxth	r3, r3
 8001518:	461a      	mov	r2, r3
 800151a:	4613      	mov	r3, r2
 800151c:	005b      	lsls	r3, r3, #1
 800151e:	4413      	add	r3, r2
 8001520:	3b1e      	subs	r3, #30
 8001522:	2207      	movs	r2, #7
 8001524:	fa02 f303 	lsl.w	r3, r2, r3
 8001528:	43da      	mvns	r2, r3
 800152a:	687b      	ldr	r3, [r7, #4]
 800152c:	681b      	ldr	r3, [r3, #0]
 800152e:	400a      	ands	r2, r1
 8001530:	60da      	str	r2, [r3, #12]
    
    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8001532:	687b      	ldr	r3, [r7, #4]
 8001534:	681b      	ldr	r3, [r3, #0]
 8001536:	68d9      	ldr	r1, [r3, #12]
 8001538:	683b      	ldr	r3, [r7, #0]
 800153a:	689a      	ldr	r2, [r3, #8]
 800153c:	683b      	ldr	r3, [r7, #0]
 800153e:	681b      	ldr	r3, [r3, #0]
 8001540:	b29b      	uxth	r3, r3
 8001542:	4618      	mov	r0, r3
 8001544:	4603      	mov	r3, r0
 8001546:	005b      	lsls	r3, r3, #1
 8001548:	4403      	add	r3, r0
 800154a:	3b1e      	subs	r3, #30
 800154c:	409a      	lsls	r2, r3
 800154e:	687b      	ldr	r3, [r7, #4]
 8001550:	681b      	ldr	r3, [r3, #0]
 8001552:	430a      	orrs	r2, r1
 8001554:	60da      	str	r2, [r3, #12]
 8001556:	e022      	b.n	800159e <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8001558:	687b      	ldr	r3, [r7, #4]
 800155a:	681b      	ldr	r3, [r3, #0]
 800155c:	6919      	ldr	r1, [r3, #16]
 800155e:	683b      	ldr	r3, [r7, #0]
 8001560:	681b      	ldr	r3, [r3, #0]
 8001562:	b29b      	uxth	r3, r3
 8001564:	461a      	mov	r2, r3
 8001566:	4613      	mov	r3, r2
 8001568:	005b      	lsls	r3, r3, #1
 800156a:	4413      	add	r3, r2
 800156c:	2207      	movs	r2, #7
 800156e:	fa02 f303 	lsl.w	r3, r2, r3
 8001572:	43da      	mvns	r2, r3
 8001574:	687b      	ldr	r3, [r7, #4]
 8001576:	681b      	ldr	r3, [r3, #0]
 8001578:	400a      	ands	r2, r1
 800157a:	611a      	str	r2, [r3, #16]
    
    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 800157c:	687b      	ldr	r3, [r7, #4]
 800157e:	681b      	ldr	r3, [r3, #0]
 8001580:	6919      	ldr	r1, [r3, #16]
 8001582:	683b      	ldr	r3, [r7, #0]
 8001584:	689a      	ldr	r2, [r3, #8]
 8001586:	683b      	ldr	r3, [r7, #0]
 8001588:	681b      	ldr	r3, [r3, #0]
 800158a:	b29b      	uxth	r3, r3
 800158c:	4618      	mov	r0, r3
 800158e:	4603      	mov	r3, r0
 8001590:	005b      	lsls	r3, r3, #1
 8001592:	4403      	add	r3, r0
 8001594:	409a      	lsls	r2, r3
 8001596:	687b      	ldr	r3, [r7, #4]
 8001598:	681b      	ldr	r3, [r3, #0]
 800159a:	430a      	orrs	r2, r1
 800159c:	611a      	str	r2, [r3, #16]
  }
  
  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 800159e:	683b      	ldr	r3, [r7, #0]
 80015a0:	685b      	ldr	r3, [r3, #4]
 80015a2:	2b06      	cmp	r3, #6
 80015a4:	d824      	bhi.n	80015f0 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80015a6:	687b      	ldr	r3, [r7, #4]
 80015a8:	681b      	ldr	r3, [r3, #0]
 80015aa:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80015ac:	683b      	ldr	r3, [r7, #0]
 80015ae:	685a      	ldr	r2, [r3, #4]
 80015b0:	4613      	mov	r3, r2
 80015b2:	009b      	lsls	r3, r3, #2
 80015b4:	4413      	add	r3, r2
 80015b6:	3b05      	subs	r3, #5
 80015b8:	221f      	movs	r2, #31
 80015ba:	fa02 f303 	lsl.w	r3, r2, r3
 80015be:	43da      	mvns	r2, r3
 80015c0:	687b      	ldr	r3, [r7, #4]
 80015c2:	681b      	ldr	r3, [r3, #0]
 80015c4:	400a      	ands	r2, r1
 80015c6:	635a      	str	r2, [r3, #52]	; 0x34
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80015c8:	687b      	ldr	r3, [r7, #4]
 80015ca:	681b      	ldr	r3, [r3, #0]
 80015cc:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80015ce:	683b      	ldr	r3, [r7, #0]
 80015d0:	681b      	ldr	r3, [r3, #0]
 80015d2:	b29b      	uxth	r3, r3
 80015d4:	4618      	mov	r0, r3
 80015d6:	683b      	ldr	r3, [r7, #0]
 80015d8:	685a      	ldr	r2, [r3, #4]
 80015da:	4613      	mov	r3, r2
 80015dc:	009b      	lsls	r3, r3, #2
 80015de:	4413      	add	r3, r2
 80015e0:	3b05      	subs	r3, #5
 80015e2:	fa00 f203 	lsl.w	r2, r0, r3
 80015e6:	687b      	ldr	r3, [r7, #4]
 80015e8:	681b      	ldr	r3, [r3, #0]
 80015ea:	430a      	orrs	r2, r1
 80015ec:	635a      	str	r2, [r3, #52]	; 0x34
 80015ee:	e04c      	b.n	800168a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 80015f0:	683b      	ldr	r3, [r7, #0]
 80015f2:	685b      	ldr	r3, [r3, #4]
 80015f4:	2b0c      	cmp	r3, #12
 80015f6:	d824      	bhi.n	8001642 <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 80015f8:	687b      	ldr	r3, [r7, #4]
 80015fa:	681b      	ldr	r3, [r3, #0]
 80015fc:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80015fe:	683b      	ldr	r3, [r7, #0]
 8001600:	685a      	ldr	r2, [r3, #4]
 8001602:	4613      	mov	r3, r2
 8001604:	009b      	lsls	r3, r3, #2
 8001606:	4413      	add	r3, r2
 8001608:	3b23      	subs	r3, #35	; 0x23
 800160a:	221f      	movs	r2, #31
 800160c:	fa02 f303 	lsl.w	r3, r2, r3
 8001610:	43da      	mvns	r2, r3
 8001612:	687b      	ldr	r3, [r7, #4]
 8001614:	681b      	ldr	r3, [r3, #0]
 8001616:	400a      	ands	r2, r1
 8001618:	631a      	str	r2, [r3, #48]	; 0x30
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800161a:	687b      	ldr	r3, [r7, #4]
 800161c:	681b      	ldr	r3, [r3, #0]
 800161e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001620:	683b      	ldr	r3, [r7, #0]
 8001622:	681b      	ldr	r3, [r3, #0]
 8001624:	b29b      	uxth	r3, r3
 8001626:	4618      	mov	r0, r3
 8001628:	683b      	ldr	r3, [r7, #0]
 800162a:	685a      	ldr	r2, [r3, #4]
 800162c:	4613      	mov	r3, r2
 800162e:	009b      	lsls	r3, r3, #2
 8001630:	4413      	add	r3, r2
 8001632:	3b23      	subs	r3, #35	; 0x23
 8001634:	fa00 f203 	lsl.w	r2, r0, r3
 8001638:	687b      	ldr	r3, [r7, #4]
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	430a      	orrs	r2, r1
 800163e:	631a      	str	r2, [r3, #48]	; 0x30
 8001640:	e023      	b.n	800168a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8001642:	687b      	ldr	r3, [r7, #4]
 8001644:	681b      	ldr	r3, [r3, #0]
 8001646:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8001648:	683b      	ldr	r3, [r7, #0]
 800164a:	685a      	ldr	r2, [r3, #4]
 800164c:	4613      	mov	r3, r2
 800164e:	009b      	lsls	r3, r3, #2
 8001650:	4413      	add	r3, r2
 8001652:	3b41      	subs	r3, #65	; 0x41
 8001654:	221f      	movs	r2, #31
 8001656:	fa02 f303 	lsl.w	r3, r2, r3
 800165a:	43da      	mvns	r2, r3
 800165c:	687b      	ldr	r3, [r7, #4]
 800165e:	681b      	ldr	r3, [r3, #0]
 8001660:	400a      	ands	r2, r1
 8001662:	62da      	str	r2, [r3, #44]	; 0x2c
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8001664:	687b      	ldr	r3, [r7, #4]
 8001666:	681b      	ldr	r3, [r3, #0]
 8001668:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800166a:	683b      	ldr	r3, [r7, #0]
 800166c:	681b      	ldr	r3, [r3, #0]
 800166e:	b29b      	uxth	r3, r3
 8001670:	4618      	mov	r0, r3
 8001672:	683b      	ldr	r3, [r7, #0]
 8001674:	685a      	ldr	r2, [r3, #4]
 8001676:	4613      	mov	r3, r2
 8001678:	009b      	lsls	r3, r3, #2
 800167a:	4413      	add	r3, r2
 800167c:	3b41      	subs	r3, #65	; 0x41
 800167e:	fa00 f203 	lsl.w	r2, r0, r3
 8001682:	687b      	ldr	r3, [r7, #4]
 8001684:	681b      	ldr	r3, [r3, #0]
 8001686:	430a      	orrs	r2, r1
 8001688:	62da      	str	r2, [r3, #44]	; 0x2c
  }

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 800168a:	4b22      	ldr	r3, [pc, #136]	; (8001714 <HAL_ADC_ConfigChannel+0x234>)
 800168c:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800168e:	687b      	ldr	r3, [r7, #4]
 8001690:	681b      	ldr	r3, [r3, #0]
 8001692:	4a21      	ldr	r2, [pc, #132]	; (8001718 <HAL_ADC_ConfigChannel+0x238>)
 8001694:	4293      	cmp	r3, r2
 8001696:	d109      	bne.n	80016ac <HAL_ADC_ConfigChannel+0x1cc>
 8001698:	683b      	ldr	r3, [r7, #0]
 800169a:	681b      	ldr	r3, [r3, #0]
 800169c:	2b12      	cmp	r3, #18
 800169e:	d105      	bne.n	80016ac <HAL_ADC_ConfigChannel+0x1cc>
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 80016a0:	68fb      	ldr	r3, [r7, #12]
 80016a2:	685b      	ldr	r3, [r3, #4]
 80016a4:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 80016a8:	68fb      	ldr	r3, [r7, #12]
 80016aa:	605a      	str	r2, [r3, #4]
  }
  
  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or 
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 80016ac:	687b      	ldr	r3, [r7, #4]
 80016ae:	681b      	ldr	r3, [r3, #0]
 80016b0:	4a19      	ldr	r2, [pc, #100]	; (8001718 <HAL_ADC_ConfigChannel+0x238>)
 80016b2:	4293      	cmp	r3, r2
 80016b4:	d123      	bne.n	80016fe <HAL_ADC_ConfigChannel+0x21e>
 80016b6:	683b      	ldr	r3, [r7, #0]
 80016b8:	681b      	ldr	r3, [r3, #0]
 80016ba:	2b10      	cmp	r3, #16
 80016bc:	d003      	beq.n	80016c6 <HAL_ADC_ConfigChannel+0x1e6>
 80016be:	683b      	ldr	r3, [r7, #0]
 80016c0:	681b      	ldr	r3, [r3, #0]
 80016c2:	2b11      	cmp	r3, #17
 80016c4:	d11b      	bne.n	80016fe <HAL_ADC_ConfigChannel+0x21e>
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 80016c6:	68fb      	ldr	r3, [r7, #12]
 80016c8:	685b      	ldr	r3, [r3, #4]
 80016ca:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 80016ce:	68fb      	ldr	r3, [r7, #12]
 80016d0:	605a      	str	r2, [r3, #4]
    
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 80016d2:	683b      	ldr	r3, [r7, #0]
 80016d4:	681b      	ldr	r3, [r3, #0]
 80016d6:	2b10      	cmp	r3, #16
 80016d8:	d111      	bne.n	80016fe <HAL_ADC_ConfigChannel+0x21e>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 80016da:	4b10      	ldr	r3, [pc, #64]	; (800171c <HAL_ADC_ConfigChannel+0x23c>)
 80016dc:	681b      	ldr	r3, [r3, #0]
 80016de:	4a10      	ldr	r2, [pc, #64]	; (8001720 <HAL_ADC_ConfigChannel+0x240>)
 80016e0:	fba2 2303 	umull	r2, r3, r2, r3
 80016e4:	0c9a      	lsrs	r2, r3, #18
 80016e6:	4613      	mov	r3, r2
 80016e8:	009b      	lsls	r3, r3, #2
 80016ea:	4413      	add	r3, r2
 80016ec:	005b      	lsls	r3, r3, #1
 80016ee:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 80016f0:	e002      	b.n	80016f8 <HAL_ADC_ConfigChannel+0x218>
      {
        counter--;
 80016f2:	68bb      	ldr	r3, [r7, #8]
 80016f4:	3b01      	subs	r3, #1
 80016f6:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 80016f8:	68bb      	ldr	r3, [r7, #8]
 80016fa:	2b00      	cmp	r3, #0
 80016fc:	d1f9      	bne.n	80016f2 <HAL_ADC_ConfigChannel+0x212>
      }
    }
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80016fe:	687b      	ldr	r3, [r7, #4]
 8001700:	2200      	movs	r2, #0
 8001702:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 8001706:	2300      	movs	r3, #0
}
 8001708:	4618      	mov	r0, r3
 800170a:	3714      	adds	r7, #20
 800170c:	46bd      	mov	sp, r7
 800170e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001712:	4770      	bx	lr
 8001714:	40012300 	.word	0x40012300
 8001718:	40012000 	.word	0x40012000
 800171c:	20000000 	.word	0x20000000
 8001720:	431bde83 	.word	0x431bde83

08001724 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef* hadc)
{
 8001724:	b480      	push	{r7}
 8001726:	b085      	sub	sp, #20
 8001728:	af00      	add	r7, sp, #0
 800172a:	6078      	str	r0, [r7, #4]
  
  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 800172c:	4b79      	ldr	r3, [pc, #484]	; (8001914 <ADC_Init+0x1f0>)
 800172e:	60fb      	str	r3, [r7, #12]
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8001730:	68fb      	ldr	r3, [r7, #12]
 8001732:	685b      	ldr	r3, [r3, #4]
 8001734:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8001738:	68fb      	ldr	r3, [r7, #12]
 800173a:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800173c:	68fb      	ldr	r3, [r7, #12]
 800173e:	685a      	ldr	r2, [r3, #4]
 8001740:	687b      	ldr	r3, [r7, #4]
 8001742:	685b      	ldr	r3, [r3, #4]
 8001744:	431a      	orrs	r2, r3
 8001746:	68fb      	ldr	r3, [r7, #12]
 8001748:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800174a:	687b      	ldr	r3, [r7, #4]
 800174c:	681b      	ldr	r3, [r3, #0]
 800174e:	685a      	ldr	r2, [r3, #4]
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	681b      	ldr	r3, [r3, #0]
 8001754:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8001758:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800175a:	687b      	ldr	r3, [r7, #4]
 800175c:	681b      	ldr	r3, [r3, #0]
 800175e:	6859      	ldr	r1, [r3, #4]
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	691b      	ldr	r3, [r3, #16]
 8001764:	021a      	lsls	r2, r3, #8
 8001766:	687b      	ldr	r3, [r7, #4]
 8001768:	681b      	ldr	r3, [r3, #0]
 800176a:	430a      	orrs	r2, r1
 800176c:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800176e:	687b      	ldr	r3, [r7, #4]
 8001770:	681b      	ldr	r3, [r3, #0]
 8001772:	685a      	ldr	r2, [r3, #4]
 8001774:	687b      	ldr	r3, [r7, #4]
 8001776:	681b      	ldr	r3, [r3, #0]
 8001778:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800177c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800177e:	687b      	ldr	r3, [r7, #4]
 8001780:	681b      	ldr	r3, [r3, #0]
 8001782:	6859      	ldr	r1, [r3, #4]
 8001784:	687b      	ldr	r3, [r7, #4]
 8001786:	689a      	ldr	r2, [r3, #8]
 8001788:	687b      	ldr	r3, [r7, #4]
 800178a:	681b      	ldr	r3, [r3, #0]
 800178c:	430a      	orrs	r2, r1
 800178e:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8001790:	687b      	ldr	r3, [r7, #4]
 8001792:	681b      	ldr	r3, [r3, #0]
 8001794:	689a      	ldr	r2, [r3, #8]
 8001796:	687b      	ldr	r3, [r7, #4]
 8001798:	681b      	ldr	r3, [r3, #0]
 800179a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800179e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80017a0:	687b      	ldr	r3, [r7, #4]
 80017a2:	681b      	ldr	r3, [r3, #0]
 80017a4:	6899      	ldr	r1, [r3, #8]
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	68da      	ldr	r2, [r3, #12]
 80017aa:	687b      	ldr	r3, [r7, #4]
 80017ac:	681b      	ldr	r3, [r3, #0]
 80017ae:	430a      	orrs	r2, r1
 80017b0:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 80017b2:	687b      	ldr	r3, [r7, #4]
 80017b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80017b6:	4a58      	ldr	r2, [pc, #352]	; (8001918 <ADC_Init+0x1f4>)
 80017b8:	4293      	cmp	r3, r2
 80017ba:	d022      	beq.n	8001802 <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80017bc:	687b      	ldr	r3, [r7, #4]
 80017be:	681b      	ldr	r3, [r3, #0]
 80017c0:	689a      	ldr	r2, [r3, #8]
 80017c2:	687b      	ldr	r3, [r7, #4]
 80017c4:	681b      	ldr	r3, [r3, #0]
 80017c6:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80017ca:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	681b      	ldr	r3, [r3, #0]
 80017d0:	6899      	ldr	r1, [r3, #8]
 80017d2:	687b      	ldr	r3, [r7, #4]
 80017d4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80017d6:	687b      	ldr	r3, [r7, #4]
 80017d8:	681b      	ldr	r3, [r3, #0]
 80017da:	430a      	orrs	r2, r1
 80017dc:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80017de:	687b      	ldr	r3, [r7, #4]
 80017e0:	681b      	ldr	r3, [r3, #0]
 80017e2:	689a      	ldr	r2, [r3, #8]
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	681b      	ldr	r3, [r3, #0]
 80017e8:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80017ec:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80017ee:	687b      	ldr	r3, [r7, #4]
 80017f0:	681b      	ldr	r3, [r3, #0]
 80017f2:	6899      	ldr	r1, [r3, #8]
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80017f8:	687b      	ldr	r3, [r7, #4]
 80017fa:	681b      	ldr	r3, [r3, #0]
 80017fc:	430a      	orrs	r2, r1
 80017fe:	609a      	str	r2, [r3, #8]
 8001800:	e00f      	b.n	8001822 <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	681b      	ldr	r3, [r3, #0]
 8001806:	689a      	ldr	r2, [r3, #8]
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	681b      	ldr	r3, [r3, #0]
 800180c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8001810:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8001812:	687b      	ldr	r3, [r7, #4]
 8001814:	681b      	ldr	r3, [r3, #0]
 8001816:	689a      	ldr	r2, [r3, #8]
 8001818:	687b      	ldr	r3, [r7, #4]
 800181a:	681b      	ldr	r3, [r3, #0]
 800181c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8001820:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8001822:	687b      	ldr	r3, [r7, #4]
 8001824:	681b      	ldr	r3, [r3, #0]
 8001826:	689a      	ldr	r2, [r3, #8]
 8001828:	687b      	ldr	r3, [r7, #4]
 800182a:	681b      	ldr	r3, [r3, #0]
 800182c:	f022 0202 	bic.w	r2, r2, #2
 8001830:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8001832:	687b      	ldr	r3, [r7, #4]
 8001834:	681b      	ldr	r3, [r3, #0]
 8001836:	6899      	ldr	r1, [r3, #8]
 8001838:	687b      	ldr	r3, [r7, #4]
 800183a:	7e1b      	ldrb	r3, [r3, #24]
 800183c:	005a      	lsls	r2, r3, #1
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	681b      	ldr	r3, [r3, #0]
 8001842:	430a      	orrs	r2, r1
 8001844:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8001846:	687b      	ldr	r3, [r7, #4]
 8001848:	f893 3020 	ldrb.w	r3, [r3, #32]
 800184c:	2b00      	cmp	r3, #0
 800184e:	d01b      	beq.n	8001888 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8001850:	687b      	ldr	r3, [r7, #4]
 8001852:	681b      	ldr	r3, [r3, #0]
 8001854:	685a      	ldr	r2, [r3, #4]
 8001856:	687b      	ldr	r3, [r7, #4]
 8001858:	681b      	ldr	r3, [r3, #0]
 800185a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800185e:	605a      	str	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8001860:	687b      	ldr	r3, [r7, #4]
 8001862:	681b      	ldr	r3, [r3, #0]
 8001864:	685a      	ldr	r2, [r3, #4]
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	681b      	ldr	r3, [r3, #0]
 800186a:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800186e:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8001870:	687b      	ldr	r3, [r7, #4]
 8001872:	681b      	ldr	r3, [r3, #0]
 8001874:	6859      	ldr	r1, [r3, #4]
 8001876:	687b      	ldr	r3, [r7, #4]
 8001878:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800187a:	3b01      	subs	r3, #1
 800187c:	035a      	lsls	r2, r3, #13
 800187e:	687b      	ldr	r3, [r7, #4]
 8001880:	681b      	ldr	r3, [r3, #0]
 8001882:	430a      	orrs	r2, r1
 8001884:	605a      	str	r2, [r3, #4]
 8001886:	e007      	b.n	8001898 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8001888:	687b      	ldr	r3, [r7, #4]
 800188a:	681b      	ldr	r3, [r3, #0]
 800188c:	685a      	ldr	r2, [r3, #4]
 800188e:	687b      	ldr	r3, [r7, #4]
 8001890:	681b      	ldr	r3, [r3, #0]
 8001892:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001896:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8001898:	687b      	ldr	r3, [r7, #4]
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800189e:	687b      	ldr	r3, [r7, #4]
 80018a0:	681b      	ldr	r3, [r3, #0]
 80018a2:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80018a6:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80018a8:	687b      	ldr	r3, [r7, #4]
 80018aa:	681b      	ldr	r3, [r3, #0]
 80018ac:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80018ae:	687b      	ldr	r3, [r7, #4]
 80018b0:	69db      	ldr	r3, [r3, #28]
 80018b2:	3b01      	subs	r3, #1
 80018b4:	051a      	lsls	r2, r3, #20
 80018b6:	687b      	ldr	r3, [r7, #4]
 80018b8:	681b      	ldr	r3, [r3, #0]
 80018ba:	430a      	orrs	r2, r1
 80018bc:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 80018be:	687b      	ldr	r3, [r7, #4]
 80018c0:	681b      	ldr	r3, [r3, #0]
 80018c2:	689a      	ldr	r2, [r3, #8]
 80018c4:	687b      	ldr	r3, [r7, #4]
 80018c6:	681b      	ldr	r3, [r3, #0]
 80018c8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80018cc:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 80018ce:	687b      	ldr	r3, [r7, #4]
 80018d0:	681b      	ldr	r3, [r3, #0]
 80018d2:	6899      	ldr	r1, [r3, #8]
 80018d4:	687b      	ldr	r3, [r7, #4]
 80018d6:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80018da:	025a      	lsls	r2, r3, #9
 80018dc:	687b      	ldr	r3, [r7, #4]
 80018de:	681b      	ldr	r3, [r3, #0]
 80018e0:	430a      	orrs	r2, r1
 80018e2:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	681b      	ldr	r3, [r3, #0]
 80018e8:	689a      	ldr	r2, [r3, #8]
 80018ea:	687b      	ldr	r3, [r7, #4]
 80018ec:	681b      	ldr	r3, [r3, #0]
 80018ee:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80018f2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80018f4:	687b      	ldr	r3, [r7, #4]
 80018f6:	681b      	ldr	r3, [r3, #0]
 80018f8:	6899      	ldr	r1, [r3, #8]
 80018fa:	687b      	ldr	r3, [r7, #4]
 80018fc:	695b      	ldr	r3, [r3, #20]
 80018fe:	029a      	lsls	r2, r3, #10
 8001900:	687b      	ldr	r3, [r7, #4]
 8001902:	681b      	ldr	r3, [r3, #0]
 8001904:	430a      	orrs	r2, r1
 8001906:	609a      	str	r2, [r3, #8]
}
 8001908:	bf00      	nop
 800190a:	3714      	adds	r7, #20
 800190c:	46bd      	mov	sp, r7
 800190e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001912:	4770      	bx	lr
 8001914:	40012300 	.word	0x40012300
 8001918:	0f000001 	.word	0x0f000001

0800191c <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800191c:	b480      	push	{r7}
 800191e:	b085      	sub	sp, #20
 8001920:	af00      	add	r7, sp, #0
 8001922:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8001924:	687b      	ldr	r3, [r7, #4]
 8001926:	f003 0307 	and.w	r3, r3, #7
 800192a:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800192c:	4b0c      	ldr	r3, [pc, #48]	; (8001960 <__NVIC_SetPriorityGrouping+0x44>)
 800192e:	68db      	ldr	r3, [r3, #12]
 8001930:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001932:	68ba      	ldr	r2, [r7, #8]
 8001934:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001938:	4013      	ands	r3, r2
 800193a:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800193c:	68fb      	ldr	r3, [r7, #12]
 800193e:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001940:	68bb      	ldr	r3, [r7, #8]
 8001942:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001944:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001948:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800194c:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800194e:	4a04      	ldr	r2, [pc, #16]	; (8001960 <__NVIC_SetPriorityGrouping+0x44>)
 8001950:	68bb      	ldr	r3, [r7, #8]
 8001952:	60d3      	str	r3, [r2, #12]
}
 8001954:	bf00      	nop
 8001956:	3714      	adds	r7, #20
 8001958:	46bd      	mov	sp, r7
 800195a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800195e:	4770      	bx	lr
 8001960:	e000ed00 	.word	0xe000ed00

08001964 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001964:	b480      	push	{r7}
 8001966:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001968:	4b04      	ldr	r3, [pc, #16]	; (800197c <__NVIC_GetPriorityGrouping+0x18>)
 800196a:	68db      	ldr	r3, [r3, #12]
 800196c:	0a1b      	lsrs	r3, r3, #8
 800196e:	f003 0307 	and.w	r3, r3, #7
}
 8001972:	4618      	mov	r0, r3
 8001974:	46bd      	mov	sp, r7
 8001976:	f85d 7b04 	ldr.w	r7, [sp], #4
 800197a:	4770      	bx	lr
 800197c:	e000ed00 	.word	0xe000ed00

08001980 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001980:	b480      	push	{r7}
 8001982:	b083      	sub	sp, #12
 8001984:	af00      	add	r7, sp, #0
 8001986:	4603      	mov	r3, r0
 8001988:	6039      	str	r1, [r7, #0]
 800198a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800198c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001990:	2b00      	cmp	r3, #0
 8001992:	db0a      	blt.n	80019aa <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001994:	683b      	ldr	r3, [r7, #0]
 8001996:	b2da      	uxtb	r2, r3
 8001998:	490c      	ldr	r1, [pc, #48]	; (80019cc <__NVIC_SetPriority+0x4c>)
 800199a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800199e:	0112      	lsls	r2, r2, #4
 80019a0:	b2d2      	uxtb	r2, r2
 80019a2:	440b      	add	r3, r1
 80019a4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80019a8:	e00a      	b.n	80019c0 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80019aa:	683b      	ldr	r3, [r7, #0]
 80019ac:	b2da      	uxtb	r2, r3
 80019ae:	4908      	ldr	r1, [pc, #32]	; (80019d0 <__NVIC_SetPriority+0x50>)
 80019b0:	79fb      	ldrb	r3, [r7, #7]
 80019b2:	f003 030f 	and.w	r3, r3, #15
 80019b6:	3b04      	subs	r3, #4
 80019b8:	0112      	lsls	r2, r2, #4
 80019ba:	b2d2      	uxtb	r2, r2
 80019bc:	440b      	add	r3, r1
 80019be:	761a      	strb	r2, [r3, #24]
}
 80019c0:	bf00      	nop
 80019c2:	370c      	adds	r7, #12
 80019c4:	46bd      	mov	sp, r7
 80019c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019ca:	4770      	bx	lr
 80019cc:	e000e100 	.word	0xe000e100
 80019d0:	e000ed00 	.word	0xe000ed00

080019d4 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80019d4:	b480      	push	{r7}
 80019d6:	b089      	sub	sp, #36	; 0x24
 80019d8:	af00      	add	r7, sp, #0
 80019da:	60f8      	str	r0, [r7, #12]
 80019dc:	60b9      	str	r1, [r7, #8]
 80019de:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80019e0:	68fb      	ldr	r3, [r7, #12]
 80019e2:	f003 0307 	and.w	r3, r3, #7
 80019e6:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80019e8:	69fb      	ldr	r3, [r7, #28]
 80019ea:	f1c3 0307 	rsb	r3, r3, #7
 80019ee:	2b04      	cmp	r3, #4
 80019f0:	bf28      	it	cs
 80019f2:	2304      	movcs	r3, #4
 80019f4:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80019f6:	69fb      	ldr	r3, [r7, #28]
 80019f8:	3304      	adds	r3, #4
 80019fa:	2b06      	cmp	r3, #6
 80019fc:	d902      	bls.n	8001a04 <NVIC_EncodePriority+0x30>
 80019fe:	69fb      	ldr	r3, [r7, #28]
 8001a00:	3b03      	subs	r3, #3
 8001a02:	e000      	b.n	8001a06 <NVIC_EncodePriority+0x32>
 8001a04:	2300      	movs	r3, #0
 8001a06:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001a08:	f04f 32ff 	mov.w	r2, #4294967295
 8001a0c:	69bb      	ldr	r3, [r7, #24]
 8001a0e:	fa02 f303 	lsl.w	r3, r2, r3
 8001a12:	43da      	mvns	r2, r3
 8001a14:	68bb      	ldr	r3, [r7, #8]
 8001a16:	401a      	ands	r2, r3
 8001a18:	697b      	ldr	r3, [r7, #20]
 8001a1a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001a1c:	f04f 31ff 	mov.w	r1, #4294967295
 8001a20:	697b      	ldr	r3, [r7, #20]
 8001a22:	fa01 f303 	lsl.w	r3, r1, r3
 8001a26:	43d9      	mvns	r1, r3
 8001a28:	687b      	ldr	r3, [r7, #4]
 8001a2a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001a2c:	4313      	orrs	r3, r2
         );
}
 8001a2e:	4618      	mov	r0, r3
 8001a30:	3724      	adds	r7, #36	; 0x24
 8001a32:	46bd      	mov	sp, r7
 8001a34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a38:	4770      	bx	lr
	...

08001a3c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001a3c:	b580      	push	{r7, lr}
 8001a3e:	b082      	sub	sp, #8
 8001a40:	af00      	add	r7, sp, #0
 8001a42:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001a44:	687b      	ldr	r3, [r7, #4]
 8001a46:	3b01      	subs	r3, #1
 8001a48:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001a4c:	d301      	bcc.n	8001a52 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8001a4e:	2301      	movs	r3, #1
 8001a50:	e00f      	b.n	8001a72 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001a52:	4a0a      	ldr	r2, [pc, #40]	; (8001a7c <SysTick_Config+0x40>)
 8001a54:	687b      	ldr	r3, [r7, #4]
 8001a56:	3b01      	subs	r3, #1
 8001a58:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8001a5a:	210f      	movs	r1, #15
 8001a5c:	f04f 30ff 	mov.w	r0, #4294967295
 8001a60:	f7ff ff8e 	bl	8001980 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001a64:	4b05      	ldr	r3, [pc, #20]	; (8001a7c <SysTick_Config+0x40>)
 8001a66:	2200      	movs	r2, #0
 8001a68:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001a6a:	4b04      	ldr	r3, [pc, #16]	; (8001a7c <SysTick_Config+0x40>)
 8001a6c:	2207      	movs	r2, #7
 8001a6e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001a70:	2300      	movs	r3, #0
}
 8001a72:	4618      	mov	r0, r3
 8001a74:	3708      	adds	r7, #8
 8001a76:	46bd      	mov	sp, r7
 8001a78:	bd80      	pop	{r7, pc}
 8001a7a:	bf00      	nop
 8001a7c:	e000e010 	.word	0xe000e010

08001a80 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001a80:	b580      	push	{r7, lr}
 8001a82:	b082      	sub	sp, #8
 8001a84:	af00      	add	r7, sp, #0
 8001a86:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8001a88:	6878      	ldr	r0, [r7, #4]
 8001a8a:	f7ff ff47 	bl	800191c <__NVIC_SetPriorityGrouping>
}
 8001a8e:	bf00      	nop
 8001a90:	3708      	adds	r7, #8
 8001a92:	46bd      	mov	sp, r7
 8001a94:	bd80      	pop	{r7, pc}

08001a96 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001a96:	b580      	push	{r7, lr}
 8001a98:	b086      	sub	sp, #24
 8001a9a:	af00      	add	r7, sp, #0
 8001a9c:	4603      	mov	r3, r0
 8001a9e:	60b9      	str	r1, [r7, #8]
 8001aa0:	607a      	str	r2, [r7, #4]
 8001aa2:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8001aa4:	2300      	movs	r3, #0
 8001aa6:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8001aa8:	f7ff ff5c 	bl	8001964 <__NVIC_GetPriorityGrouping>
 8001aac:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8001aae:	687a      	ldr	r2, [r7, #4]
 8001ab0:	68b9      	ldr	r1, [r7, #8]
 8001ab2:	6978      	ldr	r0, [r7, #20]
 8001ab4:	f7ff ff8e 	bl	80019d4 <NVIC_EncodePriority>
 8001ab8:	4602      	mov	r2, r0
 8001aba:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001abe:	4611      	mov	r1, r2
 8001ac0:	4618      	mov	r0, r3
 8001ac2:	f7ff ff5d 	bl	8001980 <__NVIC_SetPriority>
}
 8001ac6:	bf00      	nop
 8001ac8:	3718      	adds	r7, #24
 8001aca:	46bd      	mov	sp, r7
 8001acc:	bd80      	pop	{r7, pc}

08001ace <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8001ace:	b580      	push	{r7, lr}
 8001ad0:	b082      	sub	sp, #8
 8001ad2:	af00      	add	r7, sp, #0
 8001ad4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8001ad6:	6878      	ldr	r0, [r7, #4]
 8001ad8:	f7ff ffb0 	bl	8001a3c <SysTick_Config>
 8001adc:	4603      	mov	r3, r0
}
 8001ade:	4618      	mov	r0, r3
 8001ae0:	3708      	adds	r7, #8
 8001ae2:	46bd      	mov	sp, r7
 8001ae4:	bd80      	pop	{r7, pc}

08001ae6 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8001ae6:	b580      	push	{r7, lr}
 8001ae8:	b082      	sub	sp, #8
 8001aea:	af00      	add	r7, sp, #0
 8001aec:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8001aee:	687b      	ldr	r3, [r7, #4]
 8001af0:	2b00      	cmp	r3, #0
 8001af2:	d101      	bne.n	8001af8 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8001af4:	2301      	movs	r3, #1
 8001af6:	e00e      	b.n	8001b16 <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8001af8:	687b      	ldr	r3, [r7, #4]
 8001afa:	795b      	ldrb	r3, [r3, #5]
 8001afc:	b2db      	uxtb	r3, r3
 8001afe:	2b00      	cmp	r3, #0
 8001b00:	d105      	bne.n	8001b0e <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8001b02:	687b      	ldr	r3, [r7, #4]
 8001b04:	2200      	movs	r2, #0
 8001b06:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8001b08:	6878      	ldr	r0, [r7, #4]
 8001b0a:	f7ff f9a3 	bl	8000e54 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8001b0e:	687b      	ldr	r3, [r7, #4]
 8001b10:	2201      	movs	r2, #1
 8001b12:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8001b14:	2300      	movs	r3, #0
}
 8001b16:	4618      	mov	r0, r3
 8001b18:	3708      	adds	r7, #8
 8001b1a:	46bd      	mov	sp, r7
 8001b1c:	bd80      	pop	{r7, pc}
	...

08001b20 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001b20:	b480      	push	{r7}
 8001b22:	b089      	sub	sp, #36	; 0x24
 8001b24:	af00      	add	r7, sp, #0
 8001b26:	6078      	str	r0, [r7, #4]
 8001b28:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8001b2a:	2300      	movs	r3, #0
 8001b2c:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8001b2e:	2300      	movs	r3, #0
 8001b30:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8001b32:	2300      	movs	r3, #0
 8001b34:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8001b36:	2300      	movs	r3, #0
 8001b38:	61fb      	str	r3, [r7, #28]
 8001b3a:	e16b      	b.n	8001e14 <HAL_GPIO_Init+0x2f4>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8001b3c:	2201      	movs	r2, #1
 8001b3e:	69fb      	ldr	r3, [r7, #28]
 8001b40:	fa02 f303 	lsl.w	r3, r2, r3
 8001b44:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8001b46:	683b      	ldr	r3, [r7, #0]
 8001b48:	681b      	ldr	r3, [r3, #0]
 8001b4a:	697a      	ldr	r2, [r7, #20]
 8001b4c:	4013      	ands	r3, r2
 8001b4e:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8001b50:	693a      	ldr	r2, [r7, #16]
 8001b52:	697b      	ldr	r3, [r7, #20]
 8001b54:	429a      	cmp	r2, r3
 8001b56:	f040 815a 	bne.w	8001e0e <HAL_GPIO_Init+0x2ee>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001b5a:	683b      	ldr	r3, [r7, #0]
 8001b5c:	685b      	ldr	r3, [r3, #4]
 8001b5e:	2b01      	cmp	r3, #1
 8001b60:	d00b      	beq.n	8001b7a <HAL_GPIO_Init+0x5a>
 8001b62:	683b      	ldr	r3, [r7, #0]
 8001b64:	685b      	ldr	r3, [r3, #4]
 8001b66:	2b02      	cmp	r3, #2
 8001b68:	d007      	beq.n	8001b7a <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001b6a:	683b      	ldr	r3, [r7, #0]
 8001b6c:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001b6e:	2b11      	cmp	r3, #17
 8001b70:	d003      	beq.n	8001b7a <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001b72:	683b      	ldr	r3, [r7, #0]
 8001b74:	685b      	ldr	r3, [r3, #4]
 8001b76:	2b12      	cmp	r3, #18
 8001b78:	d130      	bne.n	8001bdc <HAL_GPIO_Init+0xbc>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8001b7a:	687b      	ldr	r3, [r7, #4]
 8001b7c:	689b      	ldr	r3, [r3, #8]
 8001b7e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8001b80:	69fb      	ldr	r3, [r7, #28]
 8001b82:	005b      	lsls	r3, r3, #1
 8001b84:	2203      	movs	r2, #3
 8001b86:	fa02 f303 	lsl.w	r3, r2, r3
 8001b8a:	43db      	mvns	r3, r3
 8001b8c:	69ba      	ldr	r2, [r7, #24]
 8001b8e:	4013      	ands	r3, r2
 8001b90:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8001b92:	683b      	ldr	r3, [r7, #0]
 8001b94:	68da      	ldr	r2, [r3, #12]
 8001b96:	69fb      	ldr	r3, [r7, #28]
 8001b98:	005b      	lsls	r3, r3, #1
 8001b9a:	fa02 f303 	lsl.w	r3, r2, r3
 8001b9e:	69ba      	ldr	r2, [r7, #24]
 8001ba0:	4313      	orrs	r3, r2
 8001ba2:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8001ba4:	687b      	ldr	r3, [r7, #4]
 8001ba6:	69ba      	ldr	r2, [r7, #24]
 8001ba8:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8001baa:	687b      	ldr	r3, [r7, #4]
 8001bac:	685b      	ldr	r3, [r3, #4]
 8001bae:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8001bb0:	2201      	movs	r2, #1
 8001bb2:	69fb      	ldr	r3, [r7, #28]
 8001bb4:	fa02 f303 	lsl.w	r3, r2, r3
 8001bb8:	43db      	mvns	r3, r3
 8001bba:	69ba      	ldr	r2, [r7, #24]
 8001bbc:	4013      	ands	r3, r2
 8001bbe:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8001bc0:	683b      	ldr	r3, [r7, #0]
 8001bc2:	685b      	ldr	r3, [r3, #4]
 8001bc4:	091b      	lsrs	r3, r3, #4
 8001bc6:	f003 0201 	and.w	r2, r3, #1
 8001bca:	69fb      	ldr	r3, [r7, #28]
 8001bcc:	fa02 f303 	lsl.w	r3, r2, r3
 8001bd0:	69ba      	ldr	r2, [r7, #24]
 8001bd2:	4313      	orrs	r3, r2
 8001bd4:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8001bd6:	687b      	ldr	r3, [r7, #4]
 8001bd8:	69ba      	ldr	r2, [r7, #24]
 8001bda:	605a      	str	r2, [r3, #4]
       }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8001bdc:	687b      	ldr	r3, [r7, #4]
 8001bde:	68db      	ldr	r3, [r3, #12]
 8001be0:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8001be2:	69fb      	ldr	r3, [r7, #28]
 8001be4:	005b      	lsls	r3, r3, #1
 8001be6:	2203      	movs	r2, #3
 8001be8:	fa02 f303 	lsl.w	r3, r2, r3
 8001bec:	43db      	mvns	r3, r3
 8001bee:	69ba      	ldr	r2, [r7, #24]
 8001bf0:	4013      	ands	r3, r2
 8001bf2:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001bf4:	683b      	ldr	r3, [r7, #0]
 8001bf6:	689a      	ldr	r2, [r3, #8]
 8001bf8:	69fb      	ldr	r3, [r7, #28]
 8001bfa:	005b      	lsls	r3, r3, #1
 8001bfc:	fa02 f303 	lsl.w	r3, r2, r3
 8001c00:	69ba      	ldr	r2, [r7, #24]
 8001c02:	4313      	orrs	r3, r2
 8001c04:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8001c06:	687b      	ldr	r3, [r7, #4]
 8001c08:	69ba      	ldr	r2, [r7, #24]
 8001c0a:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001c0c:	683b      	ldr	r3, [r7, #0]
 8001c0e:	685b      	ldr	r3, [r3, #4]
 8001c10:	2b02      	cmp	r3, #2
 8001c12:	d003      	beq.n	8001c1c <HAL_GPIO_Init+0xfc>
 8001c14:	683b      	ldr	r3, [r7, #0]
 8001c16:	685b      	ldr	r3, [r3, #4]
 8001c18:	2b12      	cmp	r3, #18
 8001c1a:	d123      	bne.n	8001c64 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8001c1c:	69fb      	ldr	r3, [r7, #28]
 8001c1e:	08da      	lsrs	r2, r3, #3
 8001c20:	687b      	ldr	r3, [r7, #4]
 8001c22:	3208      	adds	r2, #8
 8001c24:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001c28:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8001c2a:	69fb      	ldr	r3, [r7, #28]
 8001c2c:	f003 0307 	and.w	r3, r3, #7
 8001c30:	009b      	lsls	r3, r3, #2
 8001c32:	220f      	movs	r2, #15
 8001c34:	fa02 f303 	lsl.w	r3, r2, r3
 8001c38:	43db      	mvns	r3, r3
 8001c3a:	69ba      	ldr	r2, [r7, #24]
 8001c3c:	4013      	ands	r3, r2
 8001c3e:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8001c40:	683b      	ldr	r3, [r7, #0]
 8001c42:	691a      	ldr	r2, [r3, #16]
 8001c44:	69fb      	ldr	r3, [r7, #28]
 8001c46:	f003 0307 	and.w	r3, r3, #7
 8001c4a:	009b      	lsls	r3, r3, #2
 8001c4c:	fa02 f303 	lsl.w	r3, r2, r3
 8001c50:	69ba      	ldr	r2, [r7, #24]
 8001c52:	4313      	orrs	r3, r2
 8001c54:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8001c56:	69fb      	ldr	r3, [r7, #28]
 8001c58:	08da      	lsrs	r2, r3, #3
 8001c5a:	687b      	ldr	r3, [r7, #4]
 8001c5c:	3208      	adds	r2, #8
 8001c5e:	69b9      	ldr	r1, [r7, #24]
 8001c60:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8001c64:	687b      	ldr	r3, [r7, #4]
 8001c66:	681b      	ldr	r3, [r3, #0]
 8001c68:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8001c6a:	69fb      	ldr	r3, [r7, #28]
 8001c6c:	005b      	lsls	r3, r3, #1
 8001c6e:	2203      	movs	r2, #3
 8001c70:	fa02 f303 	lsl.w	r3, r2, r3
 8001c74:	43db      	mvns	r3, r3
 8001c76:	69ba      	ldr	r2, [r7, #24]
 8001c78:	4013      	ands	r3, r2
 8001c7a:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8001c7c:	683b      	ldr	r3, [r7, #0]
 8001c7e:	685b      	ldr	r3, [r3, #4]
 8001c80:	f003 0203 	and.w	r2, r3, #3
 8001c84:	69fb      	ldr	r3, [r7, #28]
 8001c86:	005b      	lsls	r3, r3, #1
 8001c88:	fa02 f303 	lsl.w	r3, r2, r3
 8001c8c:	69ba      	ldr	r2, [r7, #24]
 8001c8e:	4313      	orrs	r3, r2
 8001c90:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8001c92:	687b      	ldr	r3, [r7, #4]
 8001c94:	69ba      	ldr	r2, [r7, #24]
 8001c96:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8001c98:	683b      	ldr	r3, [r7, #0]
 8001c9a:	685b      	ldr	r3, [r3, #4]
 8001c9c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001ca0:	2b00      	cmp	r3, #0
 8001ca2:	f000 80b4 	beq.w	8001e0e <HAL_GPIO_Init+0x2ee>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	60fb      	str	r3, [r7, #12]
 8001caa:	4b60      	ldr	r3, [pc, #384]	; (8001e2c <HAL_GPIO_Init+0x30c>)
 8001cac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001cae:	4a5f      	ldr	r2, [pc, #380]	; (8001e2c <HAL_GPIO_Init+0x30c>)
 8001cb0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001cb4:	6453      	str	r3, [r2, #68]	; 0x44
 8001cb6:	4b5d      	ldr	r3, [pc, #372]	; (8001e2c <HAL_GPIO_Init+0x30c>)
 8001cb8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001cba:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001cbe:	60fb      	str	r3, [r7, #12]
 8001cc0:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8001cc2:	4a5b      	ldr	r2, [pc, #364]	; (8001e30 <HAL_GPIO_Init+0x310>)
 8001cc4:	69fb      	ldr	r3, [r7, #28]
 8001cc6:	089b      	lsrs	r3, r3, #2
 8001cc8:	3302      	adds	r3, #2
 8001cca:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001cce:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8001cd0:	69fb      	ldr	r3, [r7, #28]
 8001cd2:	f003 0303 	and.w	r3, r3, #3
 8001cd6:	009b      	lsls	r3, r3, #2
 8001cd8:	220f      	movs	r2, #15
 8001cda:	fa02 f303 	lsl.w	r3, r2, r3
 8001cde:	43db      	mvns	r3, r3
 8001ce0:	69ba      	ldr	r2, [r7, #24]
 8001ce2:	4013      	ands	r3, r2
 8001ce4:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001ce6:	687b      	ldr	r3, [r7, #4]
 8001ce8:	4a52      	ldr	r2, [pc, #328]	; (8001e34 <HAL_GPIO_Init+0x314>)
 8001cea:	4293      	cmp	r3, r2
 8001cec:	d02b      	beq.n	8001d46 <HAL_GPIO_Init+0x226>
 8001cee:	687b      	ldr	r3, [r7, #4]
 8001cf0:	4a51      	ldr	r2, [pc, #324]	; (8001e38 <HAL_GPIO_Init+0x318>)
 8001cf2:	4293      	cmp	r3, r2
 8001cf4:	d025      	beq.n	8001d42 <HAL_GPIO_Init+0x222>
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	4a50      	ldr	r2, [pc, #320]	; (8001e3c <HAL_GPIO_Init+0x31c>)
 8001cfa:	4293      	cmp	r3, r2
 8001cfc:	d01f      	beq.n	8001d3e <HAL_GPIO_Init+0x21e>
 8001cfe:	687b      	ldr	r3, [r7, #4]
 8001d00:	4a4f      	ldr	r2, [pc, #316]	; (8001e40 <HAL_GPIO_Init+0x320>)
 8001d02:	4293      	cmp	r3, r2
 8001d04:	d019      	beq.n	8001d3a <HAL_GPIO_Init+0x21a>
 8001d06:	687b      	ldr	r3, [r7, #4]
 8001d08:	4a4e      	ldr	r2, [pc, #312]	; (8001e44 <HAL_GPIO_Init+0x324>)
 8001d0a:	4293      	cmp	r3, r2
 8001d0c:	d013      	beq.n	8001d36 <HAL_GPIO_Init+0x216>
 8001d0e:	687b      	ldr	r3, [r7, #4]
 8001d10:	4a4d      	ldr	r2, [pc, #308]	; (8001e48 <HAL_GPIO_Init+0x328>)
 8001d12:	4293      	cmp	r3, r2
 8001d14:	d00d      	beq.n	8001d32 <HAL_GPIO_Init+0x212>
 8001d16:	687b      	ldr	r3, [r7, #4]
 8001d18:	4a4c      	ldr	r2, [pc, #304]	; (8001e4c <HAL_GPIO_Init+0x32c>)
 8001d1a:	4293      	cmp	r3, r2
 8001d1c:	d007      	beq.n	8001d2e <HAL_GPIO_Init+0x20e>
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	4a4b      	ldr	r2, [pc, #300]	; (8001e50 <HAL_GPIO_Init+0x330>)
 8001d22:	4293      	cmp	r3, r2
 8001d24:	d101      	bne.n	8001d2a <HAL_GPIO_Init+0x20a>
 8001d26:	2307      	movs	r3, #7
 8001d28:	e00e      	b.n	8001d48 <HAL_GPIO_Init+0x228>
 8001d2a:	2308      	movs	r3, #8
 8001d2c:	e00c      	b.n	8001d48 <HAL_GPIO_Init+0x228>
 8001d2e:	2306      	movs	r3, #6
 8001d30:	e00a      	b.n	8001d48 <HAL_GPIO_Init+0x228>
 8001d32:	2305      	movs	r3, #5
 8001d34:	e008      	b.n	8001d48 <HAL_GPIO_Init+0x228>
 8001d36:	2304      	movs	r3, #4
 8001d38:	e006      	b.n	8001d48 <HAL_GPIO_Init+0x228>
 8001d3a:	2303      	movs	r3, #3
 8001d3c:	e004      	b.n	8001d48 <HAL_GPIO_Init+0x228>
 8001d3e:	2302      	movs	r3, #2
 8001d40:	e002      	b.n	8001d48 <HAL_GPIO_Init+0x228>
 8001d42:	2301      	movs	r3, #1
 8001d44:	e000      	b.n	8001d48 <HAL_GPIO_Init+0x228>
 8001d46:	2300      	movs	r3, #0
 8001d48:	69fa      	ldr	r2, [r7, #28]
 8001d4a:	f002 0203 	and.w	r2, r2, #3
 8001d4e:	0092      	lsls	r2, r2, #2
 8001d50:	4093      	lsls	r3, r2
 8001d52:	69ba      	ldr	r2, [r7, #24]
 8001d54:	4313      	orrs	r3, r2
 8001d56:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8001d58:	4935      	ldr	r1, [pc, #212]	; (8001e30 <HAL_GPIO_Init+0x310>)
 8001d5a:	69fb      	ldr	r3, [r7, #28]
 8001d5c:	089b      	lsrs	r3, r3, #2
 8001d5e:	3302      	adds	r3, #2
 8001d60:	69ba      	ldr	r2, [r7, #24]
 8001d62:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8001d66:	4b3b      	ldr	r3, [pc, #236]	; (8001e54 <HAL_GPIO_Init+0x334>)
 8001d68:	681b      	ldr	r3, [r3, #0]
 8001d6a:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001d6c:	693b      	ldr	r3, [r7, #16]
 8001d6e:	43db      	mvns	r3, r3
 8001d70:	69ba      	ldr	r2, [r7, #24]
 8001d72:	4013      	ands	r3, r2
 8001d74:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8001d76:	683b      	ldr	r3, [r7, #0]
 8001d78:	685b      	ldr	r3, [r3, #4]
 8001d7a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001d7e:	2b00      	cmp	r3, #0
 8001d80:	d003      	beq.n	8001d8a <HAL_GPIO_Init+0x26a>
        {
          temp |= iocurrent;
 8001d82:	69ba      	ldr	r2, [r7, #24]
 8001d84:	693b      	ldr	r3, [r7, #16]
 8001d86:	4313      	orrs	r3, r2
 8001d88:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8001d8a:	4a32      	ldr	r2, [pc, #200]	; (8001e54 <HAL_GPIO_Init+0x334>)
 8001d8c:	69bb      	ldr	r3, [r7, #24]
 8001d8e:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8001d90:	4b30      	ldr	r3, [pc, #192]	; (8001e54 <HAL_GPIO_Init+0x334>)
 8001d92:	685b      	ldr	r3, [r3, #4]
 8001d94:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001d96:	693b      	ldr	r3, [r7, #16]
 8001d98:	43db      	mvns	r3, r3
 8001d9a:	69ba      	ldr	r2, [r7, #24]
 8001d9c:	4013      	ands	r3, r2
 8001d9e:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8001da0:	683b      	ldr	r3, [r7, #0]
 8001da2:	685b      	ldr	r3, [r3, #4]
 8001da4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001da8:	2b00      	cmp	r3, #0
 8001daa:	d003      	beq.n	8001db4 <HAL_GPIO_Init+0x294>
        {
          temp |= iocurrent;
 8001dac:	69ba      	ldr	r2, [r7, #24]
 8001dae:	693b      	ldr	r3, [r7, #16]
 8001db0:	4313      	orrs	r3, r2
 8001db2:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8001db4:	4a27      	ldr	r2, [pc, #156]	; (8001e54 <HAL_GPIO_Init+0x334>)
 8001db6:	69bb      	ldr	r3, [r7, #24]
 8001db8:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8001dba:	4b26      	ldr	r3, [pc, #152]	; (8001e54 <HAL_GPIO_Init+0x334>)
 8001dbc:	689b      	ldr	r3, [r3, #8]
 8001dbe:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001dc0:	693b      	ldr	r3, [r7, #16]
 8001dc2:	43db      	mvns	r3, r3
 8001dc4:	69ba      	ldr	r2, [r7, #24]
 8001dc6:	4013      	ands	r3, r2
 8001dc8:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8001dca:	683b      	ldr	r3, [r7, #0]
 8001dcc:	685b      	ldr	r3, [r3, #4]
 8001dce:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001dd2:	2b00      	cmp	r3, #0
 8001dd4:	d003      	beq.n	8001dde <HAL_GPIO_Init+0x2be>
        {
          temp |= iocurrent;
 8001dd6:	69ba      	ldr	r2, [r7, #24]
 8001dd8:	693b      	ldr	r3, [r7, #16]
 8001dda:	4313      	orrs	r3, r2
 8001ddc:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8001dde:	4a1d      	ldr	r2, [pc, #116]	; (8001e54 <HAL_GPIO_Init+0x334>)
 8001de0:	69bb      	ldr	r3, [r7, #24]
 8001de2:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8001de4:	4b1b      	ldr	r3, [pc, #108]	; (8001e54 <HAL_GPIO_Init+0x334>)
 8001de6:	68db      	ldr	r3, [r3, #12]
 8001de8:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001dea:	693b      	ldr	r3, [r7, #16]
 8001dec:	43db      	mvns	r3, r3
 8001dee:	69ba      	ldr	r2, [r7, #24]
 8001df0:	4013      	ands	r3, r2
 8001df2:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8001df4:	683b      	ldr	r3, [r7, #0]
 8001df6:	685b      	ldr	r3, [r3, #4]
 8001df8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001dfc:	2b00      	cmp	r3, #0
 8001dfe:	d003      	beq.n	8001e08 <HAL_GPIO_Init+0x2e8>
        {
          temp |= iocurrent;
 8001e00:	69ba      	ldr	r2, [r7, #24]
 8001e02:	693b      	ldr	r3, [r7, #16]
 8001e04:	4313      	orrs	r3, r2
 8001e06:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8001e08:	4a12      	ldr	r2, [pc, #72]	; (8001e54 <HAL_GPIO_Init+0x334>)
 8001e0a:	69bb      	ldr	r3, [r7, #24]
 8001e0c:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8001e0e:	69fb      	ldr	r3, [r7, #28]
 8001e10:	3301      	adds	r3, #1
 8001e12:	61fb      	str	r3, [r7, #28]
 8001e14:	69fb      	ldr	r3, [r7, #28]
 8001e16:	2b0f      	cmp	r3, #15
 8001e18:	f67f ae90 	bls.w	8001b3c <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8001e1c:	bf00      	nop
 8001e1e:	bf00      	nop
 8001e20:	3724      	adds	r7, #36	; 0x24
 8001e22:	46bd      	mov	sp, r7
 8001e24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e28:	4770      	bx	lr
 8001e2a:	bf00      	nop
 8001e2c:	40023800 	.word	0x40023800
 8001e30:	40013800 	.word	0x40013800
 8001e34:	40020000 	.word	0x40020000
 8001e38:	40020400 	.word	0x40020400
 8001e3c:	40020800 	.word	0x40020800
 8001e40:	40020c00 	.word	0x40020c00
 8001e44:	40021000 	.word	0x40021000
 8001e48:	40021400 	.word	0x40021400
 8001e4c:	40021800 	.word	0x40021800
 8001e50:	40021c00 	.word	0x40021c00
 8001e54:	40013c00 	.word	0x40013c00

08001e58 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8001e58:	b580      	push	{r7, lr}
 8001e5a:	b086      	sub	sp, #24
 8001e5c:	af00      	add	r7, sp, #0
 8001e5e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8001e60:	687b      	ldr	r3, [r7, #4]
 8001e62:	2b00      	cmp	r3, #0
 8001e64:	d101      	bne.n	8001e6a <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8001e66:	2301      	movs	r3, #1
 8001e68:	e25e      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001e6a:	687b      	ldr	r3, [r7, #4]
 8001e6c:	681b      	ldr	r3, [r3, #0]
 8001e6e:	f003 0301 	and.w	r3, r3, #1
 8001e72:	2b00      	cmp	r3, #0
 8001e74:	d075      	beq.n	8001f62 <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8001e76:	4b88      	ldr	r3, [pc, #544]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001e78:	689b      	ldr	r3, [r3, #8]
 8001e7a:	f003 030c 	and.w	r3, r3, #12
 8001e7e:	2b04      	cmp	r3, #4
 8001e80:	d00c      	beq.n	8001e9c <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001e82:	4b85      	ldr	r3, [pc, #532]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001e84:	689b      	ldr	r3, [r3, #8]
 8001e86:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8001e8a:	2b08      	cmp	r3, #8
 8001e8c:	d112      	bne.n	8001eb4 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001e8e:	4b82      	ldr	r3, [pc, #520]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001e90:	685b      	ldr	r3, [r3, #4]
 8001e92:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001e96:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8001e9a:	d10b      	bne.n	8001eb4 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001e9c:	4b7e      	ldr	r3, [pc, #504]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001e9e:	681b      	ldr	r3, [r3, #0]
 8001ea0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001ea4:	2b00      	cmp	r3, #0
 8001ea6:	d05b      	beq.n	8001f60 <HAL_RCC_OscConfig+0x108>
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	685b      	ldr	r3, [r3, #4]
 8001eac:	2b00      	cmp	r3, #0
 8001eae:	d157      	bne.n	8001f60 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8001eb0:	2301      	movs	r3, #1
 8001eb2:	e239      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001eb4:	687b      	ldr	r3, [r7, #4]
 8001eb6:	685b      	ldr	r3, [r3, #4]
 8001eb8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001ebc:	d106      	bne.n	8001ecc <HAL_RCC_OscConfig+0x74>
 8001ebe:	4b76      	ldr	r3, [pc, #472]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001ec0:	681b      	ldr	r3, [r3, #0]
 8001ec2:	4a75      	ldr	r2, [pc, #468]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001ec4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001ec8:	6013      	str	r3, [r2, #0]
 8001eca:	e01d      	b.n	8001f08 <HAL_RCC_OscConfig+0xb0>
 8001ecc:	687b      	ldr	r3, [r7, #4]
 8001ece:	685b      	ldr	r3, [r3, #4]
 8001ed0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001ed4:	d10c      	bne.n	8001ef0 <HAL_RCC_OscConfig+0x98>
 8001ed6:	4b70      	ldr	r3, [pc, #448]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001ed8:	681b      	ldr	r3, [r3, #0]
 8001eda:	4a6f      	ldr	r2, [pc, #444]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001edc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001ee0:	6013      	str	r3, [r2, #0]
 8001ee2:	4b6d      	ldr	r3, [pc, #436]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001ee4:	681b      	ldr	r3, [r3, #0]
 8001ee6:	4a6c      	ldr	r2, [pc, #432]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001ee8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001eec:	6013      	str	r3, [r2, #0]
 8001eee:	e00b      	b.n	8001f08 <HAL_RCC_OscConfig+0xb0>
 8001ef0:	4b69      	ldr	r3, [pc, #420]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001ef2:	681b      	ldr	r3, [r3, #0]
 8001ef4:	4a68      	ldr	r2, [pc, #416]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001ef6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001efa:	6013      	str	r3, [r2, #0]
 8001efc:	4b66      	ldr	r3, [pc, #408]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001efe:	681b      	ldr	r3, [r3, #0]
 8001f00:	4a65      	ldr	r2, [pc, #404]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001f02:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001f06:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	685b      	ldr	r3, [r3, #4]
 8001f0c:	2b00      	cmp	r3, #0
 8001f0e:	d013      	beq.n	8001f38 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001f10:	f7ff f8e8 	bl	80010e4 <HAL_GetTick>
 8001f14:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001f16:	e008      	b.n	8001f2a <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001f18:	f7ff f8e4 	bl	80010e4 <HAL_GetTick>
 8001f1c:	4602      	mov	r2, r0
 8001f1e:	693b      	ldr	r3, [r7, #16]
 8001f20:	1ad3      	subs	r3, r2, r3
 8001f22:	2b64      	cmp	r3, #100	; 0x64
 8001f24:	d901      	bls.n	8001f2a <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8001f26:	2303      	movs	r3, #3
 8001f28:	e1fe      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001f2a:	4b5b      	ldr	r3, [pc, #364]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001f2c:	681b      	ldr	r3, [r3, #0]
 8001f2e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f32:	2b00      	cmp	r3, #0
 8001f34:	d0f0      	beq.n	8001f18 <HAL_RCC_OscConfig+0xc0>
 8001f36:	e014      	b.n	8001f62 <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001f38:	f7ff f8d4 	bl	80010e4 <HAL_GetTick>
 8001f3c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001f3e:	e008      	b.n	8001f52 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001f40:	f7ff f8d0 	bl	80010e4 <HAL_GetTick>
 8001f44:	4602      	mov	r2, r0
 8001f46:	693b      	ldr	r3, [r7, #16]
 8001f48:	1ad3      	subs	r3, r2, r3
 8001f4a:	2b64      	cmp	r3, #100	; 0x64
 8001f4c:	d901      	bls.n	8001f52 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8001f4e:	2303      	movs	r3, #3
 8001f50:	e1ea      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001f52:	4b51      	ldr	r3, [pc, #324]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001f54:	681b      	ldr	r3, [r3, #0]
 8001f56:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f5a:	2b00      	cmp	r3, #0
 8001f5c:	d1f0      	bne.n	8001f40 <HAL_RCC_OscConfig+0xe8>
 8001f5e:	e000      	b.n	8001f62 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001f60:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8001f62:	687b      	ldr	r3, [r7, #4]
 8001f64:	681b      	ldr	r3, [r3, #0]
 8001f66:	f003 0302 	and.w	r3, r3, #2
 8001f6a:	2b00      	cmp	r3, #0
 8001f6c:	d063      	beq.n	8002036 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8001f6e:	4b4a      	ldr	r3, [pc, #296]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001f70:	689b      	ldr	r3, [r3, #8]
 8001f72:	f003 030c 	and.w	r3, r3, #12
 8001f76:	2b00      	cmp	r3, #0
 8001f78:	d00b      	beq.n	8001f92 <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8001f7a:	4b47      	ldr	r3, [pc, #284]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001f7c:	689b      	ldr	r3, [r3, #8]
 8001f7e:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8001f82:	2b08      	cmp	r3, #8
 8001f84:	d11c      	bne.n	8001fc0 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8001f86:	4b44      	ldr	r3, [pc, #272]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001f88:	685b      	ldr	r3, [r3, #4]
 8001f8a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001f8e:	2b00      	cmp	r3, #0
 8001f90:	d116      	bne.n	8001fc0 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001f92:	4b41      	ldr	r3, [pc, #260]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001f94:	681b      	ldr	r3, [r3, #0]
 8001f96:	f003 0302 	and.w	r3, r3, #2
 8001f9a:	2b00      	cmp	r3, #0
 8001f9c:	d005      	beq.n	8001faa <HAL_RCC_OscConfig+0x152>
 8001f9e:	687b      	ldr	r3, [r7, #4]
 8001fa0:	68db      	ldr	r3, [r3, #12]
 8001fa2:	2b01      	cmp	r3, #1
 8001fa4:	d001      	beq.n	8001faa <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8001fa6:	2301      	movs	r3, #1
 8001fa8:	e1be      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001faa:	4b3b      	ldr	r3, [pc, #236]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001fac:	681b      	ldr	r3, [r3, #0]
 8001fae:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001fb2:	687b      	ldr	r3, [r7, #4]
 8001fb4:	691b      	ldr	r3, [r3, #16]
 8001fb6:	00db      	lsls	r3, r3, #3
 8001fb8:	4937      	ldr	r1, [pc, #220]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001fba:	4313      	orrs	r3, r2
 8001fbc:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001fbe:	e03a      	b.n	8002036 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8001fc0:	687b      	ldr	r3, [r7, #4]
 8001fc2:	68db      	ldr	r3, [r3, #12]
 8001fc4:	2b00      	cmp	r3, #0
 8001fc6:	d020      	beq.n	800200a <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8001fc8:	4b34      	ldr	r3, [pc, #208]	; (800209c <HAL_RCC_OscConfig+0x244>)
 8001fca:	2201      	movs	r2, #1
 8001fcc:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8001fce:	f7ff f889 	bl	80010e4 <HAL_GetTick>
 8001fd2:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001fd4:	e008      	b.n	8001fe8 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8001fd6:	f7ff f885 	bl	80010e4 <HAL_GetTick>
 8001fda:	4602      	mov	r2, r0
 8001fdc:	693b      	ldr	r3, [r7, #16]
 8001fde:	1ad3      	subs	r3, r2, r3
 8001fe0:	2b02      	cmp	r3, #2
 8001fe2:	d901      	bls.n	8001fe8 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8001fe4:	2303      	movs	r3, #3
 8001fe6:	e19f      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001fe8:	4b2b      	ldr	r3, [pc, #172]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001fea:	681b      	ldr	r3, [r3, #0]
 8001fec:	f003 0302 	and.w	r3, r3, #2
 8001ff0:	2b00      	cmp	r3, #0
 8001ff2:	d0f0      	beq.n	8001fd6 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001ff4:	4b28      	ldr	r3, [pc, #160]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8001ff6:	681b      	ldr	r3, [r3, #0]
 8001ff8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001ffc:	687b      	ldr	r3, [r7, #4]
 8001ffe:	691b      	ldr	r3, [r3, #16]
 8002000:	00db      	lsls	r3, r3, #3
 8002002:	4925      	ldr	r1, [pc, #148]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 8002004:	4313      	orrs	r3, r2
 8002006:	600b      	str	r3, [r1, #0]
 8002008:	e015      	b.n	8002036 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 800200a:	4b24      	ldr	r3, [pc, #144]	; (800209c <HAL_RCC_OscConfig+0x244>)
 800200c:	2200      	movs	r2, #0
 800200e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002010:	f7ff f868 	bl	80010e4 <HAL_GetTick>
 8002014:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002016:	e008      	b.n	800202a <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002018:	f7ff f864 	bl	80010e4 <HAL_GetTick>
 800201c:	4602      	mov	r2, r0
 800201e:	693b      	ldr	r3, [r7, #16]
 8002020:	1ad3      	subs	r3, r2, r3
 8002022:	2b02      	cmp	r3, #2
 8002024:	d901      	bls.n	800202a <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8002026:	2303      	movs	r3, #3
 8002028:	e17e      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800202a:	4b1b      	ldr	r3, [pc, #108]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 800202c:	681b      	ldr	r3, [r3, #0]
 800202e:	f003 0302 	and.w	r3, r3, #2
 8002032:	2b00      	cmp	r3, #0
 8002034:	d1f0      	bne.n	8002018 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	681b      	ldr	r3, [r3, #0]
 800203a:	f003 0308 	and.w	r3, r3, #8
 800203e:	2b00      	cmp	r3, #0
 8002040:	d036      	beq.n	80020b0 <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	695b      	ldr	r3, [r3, #20]
 8002046:	2b00      	cmp	r3, #0
 8002048:	d016      	beq.n	8002078 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800204a:	4b15      	ldr	r3, [pc, #84]	; (80020a0 <HAL_RCC_OscConfig+0x248>)
 800204c:	2201      	movs	r2, #1
 800204e:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002050:	f7ff f848 	bl	80010e4 <HAL_GetTick>
 8002054:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002056:	e008      	b.n	800206a <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002058:	f7ff f844 	bl	80010e4 <HAL_GetTick>
 800205c:	4602      	mov	r2, r0
 800205e:	693b      	ldr	r3, [r7, #16]
 8002060:	1ad3      	subs	r3, r2, r3
 8002062:	2b02      	cmp	r3, #2
 8002064:	d901      	bls.n	800206a <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8002066:	2303      	movs	r3, #3
 8002068:	e15e      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800206a:	4b0b      	ldr	r3, [pc, #44]	; (8002098 <HAL_RCC_OscConfig+0x240>)
 800206c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800206e:	f003 0302 	and.w	r3, r3, #2
 8002072:	2b00      	cmp	r3, #0
 8002074:	d0f0      	beq.n	8002058 <HAL_RCC_OscConfig+0x200>
 8002076:	e01b      	b.n	80020b0 <HAL_RCC_OscConfig+0x258>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8002078:	4b09      	ldr	r3, [pc, #36]	; (80020a0 <HAL_RCC_OscConfig+0x248>)
 800207a:	2200      	movs	r2, #0
 800207c:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800207e:	f7ff f831 	bl	80010e4 <HAL_GetTick>
 8002082:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002084:	e00e      	b.n	80020a4 <HAL_RCC_OscConfig+0x24c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002086:	f7ff f82d 	bl	80010e4 <HAL_GetTick>
 800208a:	4602      	mov	r2, r0
 800208c:	693b      	ldr	r3, [r7, #16]
 800208e:	1ad3      	subs	r3, r2, r3
 8002090:	2b02      	cmp	r3, #2
 8002092:	d907      	bls.n	80020a4 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 8002094:	2303      	movs	r3, #3
 8002096:	e147      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
 8002098:	40023800 	.word	0x40023800
 800209c:	42470000 	.word	0x42470000
 80020a0:	42470e80 	.word	0x42470e80
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80020a4:	4b88      	ldr	r3, [pc, #544]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 80020a6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80020a8:	f003 0302 	and.w	r3, r3, #2
 80020ac:	2b00      	cmp	r3, #0
 80020ae:	d1ea      	bne.n	8002086 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	681b      	ldr	r3, [r3, #0]
 80020b4:	f003 0304 	and.w	r3, r3, #4
 80020b8:	2b00      	cmp	r3, #0
 80020ba:	f000 8097 	beq.w	80021ec <HAL_RCC_OscConfig+0x394>
  {
    FlagStatus       pwrclkchanged = RESET;
 80020be:	2300      	movs	r3, #0
 80020c0:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80020c2:	4b81      	ldr	r3, [pc, #516]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 80020c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020c6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80020ca:	2b00      	cmp	r3, #0
 80020cc:	d10f      	bne.n	80020ee <HAL_RCC_OscConfig+0x296>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80020ce:	2300      	movs	r3, #0
 80020d0:	60bb      	str	r3, [r7, #8]
 80020d2:	4b7d      	ldr	r3, [pc, #500]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 80020d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020d6:	4a7c      	ldr	r2, [pc, #496]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 80020d8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80020dc:	6413      	str	r3, [r2, #64]	; 0x40
 80020de:	4b7a      	ldr	r3, [pc, #488]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 80020e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020e2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80020e6:	60bb      	str	r3, [r7, #8]
 80020e8:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 80020ea:	2301      	movs	r3, #1
 80020ec:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80020ee:	4b77      	ldr	r3, [pc, #476]	; (80022cc <HAL_RCC_OscConfig+0x474>)
 80020f0:	681b      	ldr	r3, [r3, #0]
 80020f2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80020f6:	2b00      	cmp	r3, #0
 80020f8:	d118      	bne.n	800212c <HAL_RCC_OscConfig+0x2d4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80020fa:	4b74      	ldr	r3, [pc, #464]	; (80022cc <HAL_RCC_OscConfig+0x474>)
 80020fc:	681b      	ldr	r3, [r3, #0]
 80020fe:	4a73      	ldr	r2, [pc, #460]	; (80022cc <HAL_RCC_OscConfig+0x474>)
 8002100:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002104:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8002106:	f7fe ffed 	bl	80010e4 <HAL_GetTick>
 800210a:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800210c:	e008      	b.n	8002120 <HAL_RCC_OscConfig+0x2c8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800210e:	f7fe ffe9 	bl	80010e4 <HAL_GetTick>
 8002112:	4602      	mov	r2, r0
 8002114:	693b      	ldr	r3, [r7, #16]
 8002116:	1ad3      	subs	r3, r2, r3
 8002118:	2b02      	cmp	r3, #2
 800211a:	d901      	bls.n	8002120 <HAL_RCC_OscConfig+0x2c8>
        {
          return HAL_TIMEOUT;
 800211c:	2303      	movs	r3, #3
 800211e:	e103      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002120:	4b6a      	ldr	r3, [pc, #424]	; (80022cc <HAL_RCC_OscConfig+0x474>)
 8002122:	681b      	ldr	r3, [r3, #0]
 8002124:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002128:	2b00      	cmp	r3, #0
 800212a:	d0f0      	beq.n	800210e <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	689b      	ldr	r3, [r3, #8]
 8002130:	2b01      	cmp	r3, #1
 8002132:	d106      	bne.n	8002142 <HAL_RCC_OscConfig+0x2ea>
 8002134:	4b64      	ldr	r3, [pc, #400]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 8002136:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002138:	4a63      	ldr	r2, [pc, #396]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 800213a:	f043 0301 	orr.w	r3, r3, #1
 800213e:	6713      	str	r3, [r2, #112]	; 0x70
 8002140:	e01c      	b.n	800217c <HAL_RCC_OscConfig+0x324>
 8002142:	687b      	ldr	r3, [r7, #4]
 8002144:	689b      	ldr	r3, [r3, #8]
 8002146:	2b05      	cmp	r3, #5
 8002148:	d10c      	bne.n	8002164 <HAL_RCC_OscConfig+0x30c>
 800214a:	4b5f      	ldr	r3, [pc, #380]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 800214c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800214e:	4a5e      	ldr	r2, [pc, #376]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 8002150:	f043 0304 	orr.w	r3, r3, #4
 8002154:	6713      	str	r3, [r2, #112]	; 0x70
 8002156:	4b5c      	ldr	r3, [pc, #368]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 8002158:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800215a:	4a5b      	ldr	r2, [pc, #364]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 800215c:	f043 0301 	orr.w	r3, r3, #1
 8002160:	6713      	str	r3, [r2, #112]	; 0x70
 8002162:	e00b      	b.n	800217c <HAL_RCC_OscConfig+0x324>
 8002164:	4b58      	ldr	r3, [pc, #352]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 8002166:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002168:	4a57      	ldr	r2, [pc, #348]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 800216a:	f023 0301 	bic.w	r3, r3, #1
 800216e:	6713      	str	r3, [r2, #112]	; 0x70
 8002170:	4b55      	ldr	r3, [pc, #340]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 8002172:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002174:	4a54      	ldr	r2, [pc, #336]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 8002176:	f023 0304 	bic.w	r3, r3, #4
 800217a:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800217c:	687b      	ldr	r3, [r7, #4]
 800217e:	689b      	ldr	r3, [r3, #8]
 8002180:	2b00      	cmp	r3, #0
 8002182:	d015      	beq.n	80021b0 <HAL_RCC_OscConfig+0x358>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002184:	f7fe ffae 	bl	80010e4 <HAL_GetTick>
 8002188:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800218a:	e00a      	b.n	80021a2 <HAL_RCC_OscConfig+0x34a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800218c:	f7fe ffaa 	bl	80010e4 <HAL_GetTick>
 8002190:	4602      	mov	r2, r0
 8002192:	693b      	ldr	r3, [r7, #16]
 8002194:	1ad3      	subs	r3, r2, r3
 8002196:	f241 3288 	movw	r2, #5000	; 0x1388
 800219a:	4293      	cmp	r3, r2
 800219c:	d901      	bls.n	80021a2 <HAL_RCC_OscConfig+0x34a>
        {
          return HAL_TIMEOUT;
 800219e:	2303      	movs	r3, #3
 80021a0:	e0c2      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80021a2:	4b49      	ldr	r3, [pc, #292]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 80021a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80021a6:	f003 0302 	and.w	r3, r3, #2
 80021aa:	2b00      	cmp	r3, #0
 80021ac:	d0ee      	beq.n	800218c <HAL_RCC_OscConfig+0x334>
 80021ae:	e014      	b.n	80021da <HAL_RCC_OscConfig+0x382>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80021b0:	f7fe ff98 	bl	80010e4 <HAL_GetTick>
 80021b4:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80021b6:	e00a      	b.n	80021ce <HAL_RCC_OscConfig+0x376>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80021b8:	f7fe ff94 	bl	80010e4 <HAL_GetTick>
 80021bc:	4602      	mov	r2, r0
 80021be:	693b      	ldr	r3, [r7, #16]
 80021c0:	1ad3      	subs	r3, r2, r3
 80021c2:	f241 3288 	movw	r2, #5000	; 0x1388
 80021c6:	4293      	cmp	r3, r2
 80021c8:	d901      	bls.n	80021ce <HAL_RCC_OscConfig+0x376>
        {
          return HAL_TIMEOUT;
 80021ca:	2303      	movs	r3, #3
 80021cc:	e0ac      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80021ce:	4b3e      	ldr	r3, [pc, #248]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 80021d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80021d2:	f003 0302 	and.w	r3, r3, #2
 80021d6:	2b00      	cmp	r3, #0
 80021d8:	d1ee      	bne.n	80021b8 <HAL_RCC_OscConfig+0x360>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 80021da:	7dfb      	ldrb	r3, [r7, #23]
 80021dc:	2b01      	cmp	r3, #1
 80021de:	d105      	bne.n	80021ec <HAL_RCC_OscConfig+0x394>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80021e0:	4b39      	ldr	r3, [pc, #228]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 80021e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021e4:	4a38      	ldr	r2, [pc, #224]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 80021e6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80021ea:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80021ec:	687b      	ldr	r3, [r7, #4]
 80021ee:	699b      	ldr	r3, [r3, #24]
 80021f0:	2b00      	cmp	r3, #0
 80021f2:	f000 8098 	beq.w	8002326 <HAL_RCC_OscConfig+0x4ce>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80021f6:	4b34      	ldr	r3, [pc, #208]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 80021f8:	689b      	ldr	r3, [r3, #8]
 80021fa:	f003 030c 	and.w	r3, r3, #12
 80021fe:	2b08      	cmp	r3, #8
 8002200:	d05c      	beq.n	80022bc <HAL_RCC_OscConfig+0x464>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8002202:	687b      	ldr	r3, [r7, #4]
 8002204:	699b      	ldr	r3, [r3, #24]
 8002206:	2b02      	cmp	r3, #2
 8002208:	d141      	bne.n	800228e <HAL_RCC_OscConfig+0x436>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800220a:	4b31      	ldr	r3, [pc, #196]	; (80022d0 <HAL_RCC_OscConfig+0x478>)
 800220c:	2200      	movs	r2, #0
 800220e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002210:	f7fe ff68 	bl	80010e4 <HAL_GetTick>
 8002214:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002216:	e008      	b.n	800222a <HAL_RCC_OscConfig+0x3d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002218:	f7fe ff64 	bl	80010e4 <HAL_GetTick>
 800221c:	4602      	mov	r2, r0
 800221e:	693b      	ldr	r3, [r7, #16]
 8002220:	1ad3      	subs	r3, r2, r3
 8002222:	2b02      	cmp	r3, #2
 8002224:	d901      	bls.n	800222a <HAL_RCC_OscConfig+0x3d2>
          {
            return HAL_TIMEOUT;
 8002226:	2303      	movs	r3, #3
 8002228:	e07e      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800222a:	4b27      	ldr	r3, [pc, #156]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 800222c:	681b      	ldr	r3, [r3, #0]
 800222e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002232:	2b00      	cmp	r3, #0
 8002234:	d1f0      	bne.n	8002218 <HAL_RCC_OscConfig+0x3c0>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8002236:	687b      	ldr	r3, [r7, #4]
 8002238:	69da      	ldr	r2, [r3, #28]
 800223a:	687b      	ldr	r3, [r7, #4]
 800223c:	6a1b      	ldr	r3, [r3, #32]
 800223e:	431a      	orrs	r2, r3
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002244:	019b      	lsls	r3, r3, #6
 8002246:	431a      	orrs	r2, r3
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800224c:	085b      	lsrs	r3, r3, #1
 800224e:	3b01      	subs	r3, #1
 8002250:	041b      	lsls	r3, r3, #16
 8002252:	431a      	orrs	r2, r3
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002258:	061b      	lsls	r3, r3, #24
 800225a:	491b      	ldr	r1, [pc, #108]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 800225c:	4313      	orrs	r3, r2
 800225e:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8002260:	4b1b      	ldr	r3, [pc, #108]	; (80022d0 <HAL_RCC_OscConfig+0x478>)
 8002262:	2201      	movs	r2, #1
 8002264:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002266:	f7fe ff3d 	bl	80010e4 <HAL_GetTick>
 800226a:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800226c:	e008      	b.n	8002280 <HAL_RCC_OscConfig+0x428>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800226e:	f7fe ff39 	bl	80010e4 <HAL_GetTick>
 8002272:	4602      	mov	r2, r0
 8002274:	693b      	ldr	r3, [r7, #16]
 8002276:	1ad3      	subs	r3, r2, r3
 8002278:	2b02      	cmp	r3, #2
 800227a:	d901      	bls.n	8002280 <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 800227c:	2303      	movs	r3, #3
 800227e:	e053      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002280:	4b11      	ldr	r3, [pc, #68]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 8002282:	681b      	ldr	r3, [r3, #0]
 8002284:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002288:	2b00      	cmp	r3, #0
 800228a:	d0f0      	beq.n	800226e <HAL_RCC_OscConfig+0x416>
 800228c:	e04b      	b.n	8002326 <HAL_RCC_OscConfig+0x4ce>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800228e:	4b10      	ldr	r3, [pc, #64]	; (80022d0 <HAL_RCC_OscConfig+0x478>)
 8002290:	2200      	movs	r2, #0
 8002292:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002294:	f7fe ff26 	bl	80010e4 <HAL_GetTick>
 8002298:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800229a:	e008      	b.n	80022ae <HAL_RCC_OscConfig+0x456>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800229c:	f7fe ff22 	bl	80010e4 <HAL_GetTick>
 80022a0:	4602      	mov	r2, r0
 80022a2:	693b      	ldr	r3, [r7, #16]
 80022a4:	1ad3      	subs	r3, r2, r3
 80022a6:	2b02      	cmp	r3, #2
 80022a8:	d901      	bls.n	80022ae <HAL_RCC_OscConfig+0x456>
          {
            return HAL_TIMEOUT;
 80022aa:	2303      	movs	r3, #3
 80022ac:	e03c      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80022ae:	4b06      	ldr	r3, [pc, #24]	; (80022c8 <HAL_RCC_OscConfig+0x470>)
 80022b0:	681b      	ldr	r3, [r3, #0]
 80022b2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80022b6:	2b00      	cmp	r3, #0
 80022b8:	d1f0      	bne.n	800229c <HAL_RCC_OscConfig+0x444>
 80022ba:	e034      	b.n	8002326 <HAL_RCC_OscConfig+0x4ce>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	699b      	ldr	r3, [r3, #24]
 80022c0:	2b01      	cmp	r3, #1
 80022c2:	d107      	bne.n	80022d4 <HAL_RCC_OscConfig+0x47c>
      {
        return HAL_ERROR;
 80022c4:	2301      	movs	r3, #1
 80022c6:	e02f      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
 80022c8:	40023800 	.word	0x40023800
 80022cc:	40007000 	.word	0x40007000
 80022d0:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 80022d4:	4b16      	ldr	r3, [pc, #88]	; (8002330 <HAL_RCC_OscConfig+0x4d8>)
 80022d6:	685b      	ldr	r3, [r3, #4]
 80022d8:	60fb      	str	r3, [r7, #12]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80022da:	68fb      	ldr	r3, [r7, #12]
 80022dc:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80022e0:	687b      	ldr	r3, [r7, #4]
 80022e2:	69db      	ldr	r3, [r3, #28]
 80022e4:	429a      	cmp	r2, r3
 80022e6:	d11c      	bne.n	8002322 <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80022e8:	68fb      	ldr	r3, [r7, #12]
 80022ea:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	6a1b      	ldr	r3, [r3, #32]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80022f2:	429a      	cmp	r2, r3
 80022f4:	d115      	bne.n	8002322 <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 80022f6:	68fa      	ldr	r2, [r7, #12]
 80022f8:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80022fc:	4013      	ands	r3, r2
 80022fe:	687a      	ldr	r2, [r7, #4]
 8002300:	6a52      	ldr	r2, [r2, #36]	; 0x24
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8002302:	4293      	cmp	r3, r2
 8002304:	d10d      	bne.n	8002322 <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8002306:	68fb      	ldr	r3, [r7, #12]
 8002308:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8002310:	429a      	cmp	r2, r3
 8002312:	d106      	bne.n	8002322 <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8002314:	68fb      	ldr	r3, [r7, #12]
 8002316:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800231a:	687b      	ldr	r3, [r7, #4]
 800231c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800231e:	429a      	cmp	r2, r3
 8002320:	d001      	beq.n	8002326 <HAL_RCC_OscConfig+0x4ce>
        {
          return HAL_ERROR;
 8002322:	2301      	movs	r3, #1
 8002324:	e000      	b.n	8002328 <HAL_RCC_OscConfig+0x4d0>
        }
      }
    }
  }
  return HAL_OK;
 8002326:	2300      	movs	r3, #0
}
 8002328:	4618      	mov	r0, r3
 800232a:	3718      	adds	r7, #24
 800232c:	46bd      	mov	sp, r7
 800232e:	bd80      	pop	{r7, pc}
 8002330:	40023800 	.word	0x40023800

08002334 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8002334:	b580      	push	{r7, lr}
 8002336:	b084      	sub	sp, #16
 8002338:	af00      	add	r7, sp, #0
 800233a:	6078      	str	r0, [r7, #4]
 800233c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 800233e:	687b      	ldr	r3, [r7, #4]
 8002340:	2b00      	cmp	r3, #0
 8002342:	d101      	bne.n	8002348 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8002344:	2301      	movs	r3, #1
 8002346:	e0cc      	b.n	80024e2 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8002348:	4b68      	ldr	r3, [pc, #416]	; (80024ec <HAL_RCC_ClockConfig+0x1b8>)
 800234a:	681b      	ldr	r3, [r3, #0]
 800234c:	f003 030f 	and.w	r3, r3, #15
 8002350:	683a      	ldr	r2, [r7, #0]
 8002352:	429a      	cmp	r2, r3
 8002354:	d90c      	bls.n	8002370 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002356:	4b65      	ldr	r3, [pc, #404]	; (80024ec <HAL_RCC_ClockConfig+0x1b8>)
 8002358:	683a      	ldr	r2, [r7, #0]
 800235a:	b2d2      	uxtb	r2, r2
 800235c:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800235e:	4b63      	ldr	r3, [pc, #396]	; (80024ec <HAL_RCC_ClockConfig+0x1b8>)
 8002360:	681b      	ldr	r3, [r3, #0]
 8002362:	f003 030f 	and.w	r3, r3, #15
 8002366:	683a      	ldr	r2, [r7, #0]
 8002368:	429a      	cmp	r2, r3
 800236a:	d001      	beq.n	8002370 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 800236c:	2301      	movs	r3, #1
 800236e:	e0b8      	b.n	80024e2 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	681b      	ldr	r3, [r3, #0]
 8002374:	f003 0302 	and.w	r3, r3, #2
 8002378:	2b00      	cmp	r3, #0
 800237a:	d020      	beq.n	80023be <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	681b      	ldr	r3, [r3, #0]
 8002380:	f003 0304 	and.w	r3, r3, #4
 8002384:	2b00      	cmp	r3, #0
 8002386:	d005      	beq.n	8002394 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8002388:	4b59      	ldr	r3, [pc, #356]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 800238a:	689b      	ldr	r3, [r3, #8]
 800238c:	4a58      	ldr	r2, [pc, #352]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 800238e:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8002392:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	f003 0308 	and.w	r3, r3, #8
 800239c:	2b00      	cmp	r3, #0
 800239e:	d005      	beq.n	80023ac <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80023a0:	4b53      	ldr	r3, [pc, #332]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 80023a2:	689b      	ldr	r3, [r3, #8]
 80023a4:	4a52      	ldr	r2, [pc, #328]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 80023a6:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80023aa:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80023ac:	4b50      	ldr	r3, [pc, #320]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 80023ae:	689b      	ldr	r3, [r3, #8]
 80023b0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	689b      	ldr	r3, [r3, #8]
 80023b8:	494d      	ldr	r1, [pc, #308]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 80023ba:	4313      	orrs	r3, r2
 80023bc:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80023be:	687b      	ldr	r3, [r7, #4]
 80023c0:	681b      	ldr	r3, [r3, #0]
 80023c2:	f003 0301 	and.w	r3, r3, #1
 80023c6:	2b00      	cmp	r3, #0
 80023c8:	d044      	beq.n	8002454 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80023ca:	687b      	ldr	r3, [r7, #4]
 80023cc:	685b      	ldr	r3, [r3, #4]
 80023ce:	2b01      	cmp	r3, #1
 80023d0:	d107      	bne.n	80023e2 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80023d2:	4b47      	ldr	r3, [pc, #284]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80023da:	2b00      	cmp	r3, #0
 80023dc:	d119      	bne.n	8002412 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80023de:	2301      	movs	r3, #1
 80023e0:	e07f      	b.n	80024e2 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	685b      	ldr	r3, [r3, #4]
 80023e6:	2b02      	cmp	r3, #2
 80023e8:	d003      	beq.n	80023f2 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80023ee:	2b03      	cmp	r3, #3
 80023f0:	d107      	bne.n	8002402 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80023f2:	4b3f      	ldr	r3, [pc, #252]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80023fa:	2b00      	cmp	r3, #0
 80023fc:	d109      	bne.n	8002412 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80023fe:	2301      	movs	r3, #1
 8002400:	e06f      	b.n	80024e2 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002402:	4b3b      	ldr	r3, [pc, #236]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 8002404:	681b      	ldr	r3, [r3, #0]
 8002406:	f003 0302 	and.w	r3, r3, #2
 800240a:	2b00      	cmp	r3, #0
 800240c:	d101      	bne.n	8002412 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800240e:	2301      	movs	r3, #1
 8002410:	e067      	b.n	80024e2 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8002412:	4b37      	ldr	r3, [pc, #220]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 8002414:	689b      	ldr	r3, [r3, #8]
 8002416:	f023 0203 	bic.w	r2, r3, #3
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	685b      	ldr	r3, [r3, #4]
 800241e:	4934      	ldr	r1, [pc, #208]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 8002420:	4313      	orrs	r3, r2
 8002422:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8002424:	f7fe fe5e 	bl	80010e4 <HAL_GetTick>
 8002428:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800242a:	e00a      	b.n	8002442 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800242c:	f7fe fe5a 	bl	80010e4 <HAL_GetTick>
 8002430:	4602      	mov	r2, r0
 8002432:	68fb      	ldr	r3, [r7, #12]
 8002434:	1ad3      	subs	r3, r2, r3
 8002436:	f241 3288 	movw	r2, #5000	; 0x1388
 800243a:	4293      	cmp	r3, r2
 800243c:	d901      	bls.n	8002442 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 800243e:	2303      	movs	r3, #3
 8002440:	e04f      	b.n	80024e2 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8002442:	4b2b      	ldr	r3, [pc, #172]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 8002444:	689b      	ldr	r3, [r3, #8]
 8002446:	f003 020c 	and.w	r2, r3, #12
 800244a:	687b      	ldr	r3, [r7, #4]
 800244c:	685b      	ldr	r3, [r3, #4]
 800244e:	009b      	lsls	r3, r3, #2
 8002450:	429a      	cmp	r2, r3
 8002452:	d1eb      	bne.n	800242c <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8002454:	4b25      	ldr	r3, [pc, #148]	; (80024ec <HAL_RCC_ClockConfig+0x1b8>)
 8002456:	681b      	ldr	r3, [r3, #0]
 8002458:	f003 030f 	and.w	r3, r3, #15
 800245c:	683a      	ldr	r2, [r7, #0]
 800245e:	429a      	cmp	r2, r3
 8002460:	d20c      	bcs.n	800247c <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002462:	4b22      	ldr	r3, [pc, #136]	; (80024ec <HAL_RCC_ClockConfig+0x1b8>)
 8002464:	683a      	ldr	r2, [r7, #0]
 8002466:	b2d2      	uxtb	r2, r2
 8002468:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800246a:	4b20      	ldr	r3, [pc, #128]	; (80024ec <HAL_RCC_ClockConfig+0x1b8>)
 800246c:	681b      	ldr	r3, [r3, #0]
 800246e:	f003 030f 	and.w	r3, r3, #15
 8002472:	683a      	ldr	r2, [r7, #0]
 8002474:	429a      	cmp	r2, r3
 8002476:	d001      	beq.n	800247c <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8002478:	2301      	movs	r3, #1
 800247a:	e032      	b.n	80024e2 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800247c:	687b      	ldr	r3, [r7, #4]
 800247e:	681b      	ldr	r3, [r3, #0]
 8002480:	f003 0304 	and.w	r3, r3, #4
 8002484:	2b00      	cmp	r3, #0
 8002486:	d008      	beq.n	800249a <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8002488:	4b19      	ldr	r3, [pc, #100]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 800248a:	689b      	ldr	r3, [r3, #8]
 800248c:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	68db      	ldr	r3, [r3, #12]
 8002494:	4916      	ldr	r1, [pc, #88]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 8002496:	4313      	orrs	r3, r2
 8002498:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800249a:	687b      	ldr	r3, [r7, #4]
 800249c:	681b      	ldr	r3, [r3, #0]
 800249e:	f003 0308 	and.w	r3, r3, #8
 80024a2:	2b00      	cmp	r3, #0
 80024a4:	d009      	beq.n	80024ba <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80024a6:	4b12      	ldr	r3, [pc, #72]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 80024a8:	689b      	ldr	r3, [r3, #8]
 80024aa:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80024ae:	687b      	ldr	r3, [r7, #4]
 80024b0:	691b      	ldr	r3, [r3, #16]
 80024b2:	00db      	lsls	r3, r3, #3
 80024b4:	490e      	ldr	r1, [pc, #56]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 80024b6:	4313      	orrs	r3, r2
 80024b8:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80024ba:	f000 f821 	bl	8002500 <HAL_RCC_GetSysClockFreq>
 80024be:	4602      	mov	r2, r0
 80024c0:	4b0b      	ldr	r3, [pc, #44]	; (80024f0 <HAL_RCC_ClockConfig+0x1bc>)
 80024c2:	689b      	ldr	r3, [r3, #8]
 80024c4:	091b      	lsrs	r3, r3, #4
 80024c6:	f003 030f 	and.w	r3, r3, #15
 80024ca:	490a      	ldr	r1, [pc, #40]	; (80024f4 <HAL_RCC_ClockConfig+0x1c0>)
 80024cc:	5ccb      	ldrb	r3, [r1, r3]
 80024ce:	fa22 f303 	lsr.w	r3, r2, r3
 80024d2:	4a09      	ldr	r2, [pc, #36]	; (80024f8 <HAL_RCC_ClockConfig+0x1c4>)
 80024d4:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 80024d6:	4b09      	ldr	r3, [pc, #36]	; (80024fc <HAL_RCC_ClockConfig+0x1c8>)
 80024d8:	681b      	ldr	r3, [r3, #0]
 80024da:	4618      	mov	r0, r3
 80024dc:	f7fe fdbe 	bl	800105c <HAL_InitTick>

  return HAL_OK;
 80024e0:	2300      	movs	r3, #0
}
 80024e2:	4618      	mov	r0, r3
 80024e4:	3710      	adds	r7, #16
 80024e6:	46bd      	mov	sp, r7
 80024e8:	bd80      	pop	{r7, pc}
 80024ea:	bf00      	nop
 80024ec:	40023c00 	.word	0x40023c00
 80024f0:	40023800 	.word	0x40023800
 80024f4:	0800ff2c 	.word	0x0800ff2c
 80024f8:	20000000 	.word	0x20000000
 80024fc:	20000004 	.word	0x20000004

08002500 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8002500:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002504:	b094      	sub	sp, #80	; 0x50
 8002506:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 8002508:	2300      	movs	r3, #0
 800250a:	647b      	str	r3, [r7, #68]	; 0x44
 800250c:	2300      	movs	r3, #0
 800250e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002510:	2300      	movs	r3, #0
 8002512:	643b      	str	r3, [r7, #64]	; 0x40
  uint32_t sysclockfreq = 0U;
 8002514:	2300      	movs	r3, #0
 8002516:	64bb      	str	r3, [r7, #72]	; 0x48

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8002518:	4b79      	ldr	r3, [pc, #484]	; (8002700 <HAL_RCC_GetSysClockFreq+0x200>)
 800251a:	689b      	ldr	r3, [r3, #8]
 800251c:	f003 030c 	and.w	r3, r3, #12
 8002520:	2b08      	cmp	r3, #8
 8002522:	d00d      	beq.n	8002540 <HAL_RCC_GetSysClockFreq+0x40>
 8002524:	2b08      	cmp	r3, #8
 8002526:	f200 80e1 	bhi.w	80026ec <HAL_RCC_GetSysClockFreq+0x1ec>
 800252a:	2b00      	cmp	r3, #0
 800252c:	d002      	beq.n	8002534 <HAL_RCC_GetSysClockFreq+0x34>
 800252e:	2b04      	cmp	r3, #4
 8002530:	d003      	beq.n	800253a <HAL_RCC_GetSysClockFreq+0x3a>
 8002532:	e0db      	b.n	80026ec <HAL_RCC_GetSysClockFreq+0x1ec>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8002534:	4b73      	ldr	r3, [pc, #460]	; (8002704 <HAL_RCC_GetSysClockFreq+0x204>)
 8002536:	64bb      	str	r3, [r7, #72]	; 0x48
       break;
 8002538:	e0db      	b.n	80026f2 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 800253a:	4b73      	ldr	r3, [pc, #460]	; (8002708 <HAL_RCC_GetSysClockFreq+0x208>)
 800253c:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 800253e:	e0d8      	b.n	80026f2 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8002540:	4b6f      	ldr	r3, [pc, #444]	; (8002700 <HAL_RCC_GetSysClockFreq+0x200>)
 8002542:	685b      	ldr	r3, [r3, #4]
 8002544:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002548:	647b      	str	r3, [r7, #68]	; 0x44
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800254a:	4b6d      	ldr	r3, [pc, #436]	; (8002700 <HAL_RCC_GetSysClockFreq+0x200>)
 800254c:	685b      	ldr	r3, [r3, #4]
 800254e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002552:	2b00      	cmp	r3, #0
 8002554:	d063      	beq.n	800261e <HAL_RCC_GetSysClockFreq+0x11e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8002556:	4b6a      	ldr	r3, [pc, #424]	; (8002700 <HAL_RCC_GetSysClockFreq+0x200>)
 8002558:	685b      	ldr	r3, [r3, #4]
 800255a:	099b      	lsrs	r3, r3, #6
 800255c:	2200      	movs	r2, #0
 800255e:	63bb      	str	r3, [r7, #56]	; 0x38
 8002560:	63fa      	str	r2, [r7, #60]	; 0x3c
 8002562:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002564:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002568:	633b      	str	r3, [r7, #48]	; 0x30
 800256a:	2300      	movs	r3, #0
 800256c:	637b      	str	r3, [r7, #52]	; 0x34
 800256e:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8002572:	4622      	mov	r2, r4
 8002574:	462b      	mov	r3, r5
 8002576:	f04f 0000 	mov.w	r0, #0
 800257a:	f04f 0100 	mov.w	r1, #0
 800257e:	0159      	lsls	r1, r3, #5
 8002580:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002584:	0150      	lsls	r0, r2, #5
 8002586:	4602      	mov	r2, r0
 8002588:	460b      	mov	r3, r1
 800258a:	4621      	mov	r1, r4
 800258c:	1a51      	subs	r1, r2, r1
 800258e:	6139      	str	r1, [r7, #16]
 8002590:	4629      	mov	r1, r5
 8002592:	eb63 0301 	sbc.w	r3, r3, r1
 8002596:	617b      	str	r3, [r7, #20]
 8002598:	f04f 0200 	mov.w	r2, #0
 800259c:	f04f 0300 	mov.w	r3, #0
 80025a0:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80025a4:	4659      	mov	r1, fp
 80025a6:	018b      	lsls	r3, r1, #6
 80025a8:	4651      	mov	r1, sl
 80025aa:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80025ae:	4651      	mov	r1, sl
 80025b0:	018a      	lsls	r2, r1, #6
 80025b2:	4651      	mov	r1, sl
 80025b4:	ebb2 0801 	subs.w	r8, r2, r1
 80025b8:	4659      	mov	r1, fp
 80025ba:	eb63 0901 	sbc.w	r9, r3, r1
 80025be:	f04f 0200 	mov.w	r2, #0
 80025c2:	f04f 0300 	mov.w	r3, #0
 80025c6:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80025ca:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80025ce:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80025d2:	4690      	mov	r8, r2
 80025d4:	4699      	mov	r9, r3
 80025d6:	4623      	mov	r3, r4
 80025d8:	eb18 0303 	adds.w	r3, r8, r3
 80025dc:	60bb      	str	r3, [r7, #8]
 80025de:	462b      	mov	r3, r5
 80025e0:	eb49 0303 	adc.w	r3, r9, r3
 80025e4:	60fb      	str	r3, [r7, #12]
 80025e6:	f04f 0200 	mov.w	r2, #0
 80025ea:	f04f 0300 	mov.w	r3, #0
 80025ee:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80025f2:	4629      	mov	r1, r5
 80025f4:	024b      	lsls	r3, r1, #9
 80025f6:	4621      	mov	r1, r4
 80025f8:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80025fc:	4621      	mov	r1, r4
 80025fe:	024a      	lsls	r2, r1, #9
 8002600:	4610      	mov	r0, r2
 8002602:	4619      	mov	r1, r3
 8002604:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002606:	2200      	movs	r2, #0
 8002608:	62bb      	str	r3, [r7, #40]	; 0x28
 800260a:	62fa      	str	r2, [r7, #44]	; 0x2c
 800260c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8002610:	f7fd fde2 	bl	80001d8 <__aeabi_uldivmod>
 8002614:	4602      	mov	r2, r0
 8002616:	460b      	mov	r3, r1
 8002618:	4613      	mov	r3, r2
 800261a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800261c:	e058      	b.n	80026d0 <HAL_RCC_GetSysClockFreq+0x1d0>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800261e:	4b38      	ldr	r3, [pc, #224]	; (8002700 <HAL_RCC_GetSysClockFreq+0x200>)
 8002620:	685b      	ldr	r3, [r3, #4]
 8002622:	099b      	lsrs	r3, r3, #6
 8002624:	2200      	movs	r2, #0
 8002626:	4618      	mov	r0, r3
 8002628:	4611      	mov	r1, r2
 800262a:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800262e:	623b      	str	r3, [r7, #32]
 8002630:	2300      	movs	r3, #0
 8002632:	627b      	str	r3, [r7, #36]	; 0x24
 8002634:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8002638:	4642      	mov	r2, r8
 800263a:	464b      	mov	r3, r9
 800263c:	f04f 0000 	mov.w	r0, #0
 8002640:	f04f 0100 	mov.w	r1, #0
 8002644:	0159      	lsls	r1, r3, #5
 8002646:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800264a:	0150      	lsls	r0, r2, #5
 800264c:	4602      	mov	r2, r0
 800264e:	460b      	mov	r3, r1
 8002650:	4641      	mov	r1, r8
 8002652:	ebb2 0a01 	subs.w	sl, r2, r1
 8002656:	4649      	mov	r1, r9
 8002658:	eb63 0b01 	sbc.w	fp, r3, r1
 800265c:	f04f 0200 	mov.w	r2, #0
 8002660:	f04f 0300 	mov.w	r3, #0
 8002664:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8002668:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 800266c:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8002670:	ebb2 040a 	subs.w	r4, r2, sl
 8002674:	eb63 050b 	sbc.w	r5, r3, fp
 8002678:	f04f 0200 	mov.w	r2, #0
 800267c:	f04f 0300 	mov.w	r3, #0
 8002680:	00eb      	lsls	r3, r5, #3
 8002682:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002686:	00e2      	lsls	r2, r4, #3
 8002688:	4614      	mov	r4, r2
 800268a:	461d      	mov	r5, r3
 800268c:	4643      	mov	r3, r8
 800268e:	18e3      	adds	r3, r4, r3
 8002690:	603b      	str	r3, [r7, #0]
 8002692:	464b      	mov	r3, r9
 8002694:	eb45 0303 	adc.w	r3, r5, r3
 8002698:	607b      	str	r3, [r7, #4]
 800269a:	f04f 0200 	mov.w	r2, #0
 800269e:	f04f 0300 	mov.w	r3, #0
 80026a2:	e9d7 4500 	ldrd	r4, r5, [r7]
 80026a6:	4629      	mov	r1, r5
 80026a8:	028b      	lsls	r3, r1, #10
 80026aa:	4621      	mov	r1, r4
 80026ac:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80026b0:	4621      	mov	r1, r4
 80026b2:	028a      	lsls	r2, r1, #10
 80026b4:	4610      	mov	r0, r2
 80026b6:	4619      	mov	r1, r3
 80026b8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80026ba:	2200      	movs	r2, #0
 80026bc:	61bb      	str	r3, [r7, #24]
 80026be:	61fa      	str	r2, [r7, #28]
 80026c0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80026c4:	f7fd fd88 	bl	80001d8 <__aeabi_uldivmod>
 80026c8:	4602      	mov	r2, r0
 80026ca:	460b      	mov	r3, r1
 80026cc:	4613      	mov	r3, r2
 80026ce:	64fb      	str	r3, [r7, #76]	; 0x4c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80026d0:	4b0b      	ldr	r3, [pc, #44]	; (8002700 <HAL_RCC_GetSysClockFreq+0x200>)
 80026d2:	685b      	ldr	r3, [r3, #4]
 80026d4:	0c1b      	lsrs	r3, r3, #16
 80026d6:	f003 0303 	and.w	r3, r3, #3
 80026da:	3301      	adds	r3, #1
 80026dc:	005b      	lsls	r3, r3, #1
 80026de:	643b      	str	r3, [r7, #64]	; 0x40

      sysclockfreq = pllvco/pllp;
 80026e0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80026e2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80026e4:	fbb2 f3f3 	udiv	r3, r2, r3
 80026e8:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 80026ea:	e002      	b.n	80026f2 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 80026ec:	4b05      	ldr	r3, [pc, #20]	; (8002704 <HAL_RCC_GetSysClockFreq+0x204>)
 80026ee:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 80026f0:	bf00      	nop
    }
  }
  return sysclockfreq;
 80026f2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
}
 80026f4:	4618      	mov	r0, r3
 80026f6:	3750      	adds	r7, #80	; 0x50
 80026f8:	46bd      	mov	sp, r7
 80026fa:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80026fe:	bf00      	nop
 8002700:	40023800 	.word	0x40023800
 8002704:	00f42400 	.word	0x00f42400
 8002708:	007a1200 	.word	0x007a1200

0800270c <HAL_SRAM_Init>:
  * @param  Timing Pointer to SRAM control timing structure 
  * @param  ExtTiming Pointer to SRAM extended mode timing structure  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SRAM_Init(SRAM_HandleTypeDef *hsram, FMC_NORSRAM_TimingTypeDef *Timing, FMC_NORSRAM_TimingTypeDef *ExtTiming)
{ 
 800270c:	b580      	push	{r7, lr}
 800270e:	b084      	sub	sp, #16
 8002710:	af00      	add	r7, sp, #0
 8002712:	60f8      	str	r0, [r7, #12]
 8002714:	60b9      	str	r1, [r7, #8]
 8002716:	607a      	str	r2, [r7, #4]
  /* Check the SRAM handle parameter */
  if(hsram == NULL)
 8002718:	68fb      	ldr	r3, [r7, #12]
 800271a:	2b00      	cmp	r3, #0
 800271c:	d101      	bne.n	8002722 <HAL_SRAM_Init+0x16>
  {
     return HAL_ERROR;
 800271e:	2301      	movs	r3, #1
 8002720:	e034      	b.n	800278c <HAL_SRAM_Init+0x80>
  }
  
  if(hsram->State == HAL_SRAM_STATE_RESET)
 8002722:	68fb      	ldr	r3, [r7, #12]
 8002724:	f893 3049 	ldrb.w	r3, [r3, #73]	; 0x49
 8002728:	b2db      	uxtb	r3, r3
 800272a:	2b00      	cmp	r3, #0
 800272c:	d106      	bne.n	800273c <HAL_SRAM_Init+0x30>
  {  
    /* Allocate lock resource and initialize it */
    hsram->Lock = HAL_UNLOCKED;
 800272e:	68fb      	ldr	r3, [r7, #12]
 8002730:	2200      	movs	r2, #0
 8002732:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48

    /* Init the low level hardware */
    hsram->MspInitCallback(hsram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SRAM_MspInit(hsram);
 8002736:	68f8      	ldr	r0, [r7, #12]
 8002738:	f7fe fbfa 	bl	8000f30 <HAL_SRAM_MspInit>
#endif
  }
  
  /* Initialize SRAM control Interface */
  FMC_NORSRAM_Init(hsram->Instance, &(hsram->Init));
 800273c:	68fb      	ldr	r3, [r7, #12]
 800273e:	681a      	ldr	r2, [r3, #0]
 8002740:	68fb      	ldr	r3, [r7, #12]
 8002742:	3308      	adds	r3, #8
 8002744:	4619      	mov	r1, r3
 8002746:	4610      	mov	r0, r2
 8002748:	f000 f824 	bl	8002794 <FSMC_NORSRAM_Init>

  /* Initialize SRAM timing Interface */
  FMC_NORSRAM_Timing_Init(hsram->Instance, Timing, hsram->Init.NSBank); 
 800274c:	68fb      	ldr	r3, [r7, #12]
 800274e:	6818      	ldr	r0, [r3, #0]
 8002750:	68fb      	ldr	r3, [r7, #12]
 8002752:	689b      	ldr	r3, [r3, #8]
 8002754:	461a      	mov	r2, r3
 8002756:	68b9      	ldr	r1, [r7, #8]
 8002758:	f000 f86e 	bl	8002838 <FSMC_NORSRAM_Timing_Init>

  /* Initialize SRAM extended mode timing Interface */
  FMC_NORSRAM_Extended_Timing_Init(hsram->Extended, ExtTiming, hsram->Init.NSBank,  hsram->Init.ExtendedMode);  
 800275c:	68fb      	ldr	r3, [r7, #12]
 800275e:	6858      	ldr	r0, [r3, #4]
 8002760:	68fb      	ldr	r3, [r7, #12]
 8002762:	689a      	ldr	r2, [r3, #8]
 8002764:	68fb      	ldr	r3, [r7, #12]
 8002766:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002768:	6879      	ldr	r1, [r7, #4]
 800276a:	f000 f8a3 	bl	80028b4 <FSMC_NORSRAM_Extended_Timing_Init>
  
  /* Enable the NORSRAM device */
  __FMC_NORSRAM_ENABLE(hsram->Instance, hsram->Init.NSBank); 
 800276e:	68fb      	ldr	r3, [r7, #12]
 8002770:	681b      	ldr	r3, [r3, #0]
 8002772:	68fa      	ldr	r2, [r7, #12]
 8002774:	6892      	ldr	r2, [r2, #8]
 8002776:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800277a:	68fb      	ldr	r3, [r7, #12]
 800277c:	681b      	ldr	r3, [r3, #0]
 800277e:	68fa      	ldr	r2, [r7, #12]
 8002780:	6892      	ldr	r2, [r2, #8]
 8002782:	f041 0101 	orr.w	r1, r1, #1
 8002786:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  
  return HAL_OK;
 800278a:	2300      	movs	r3, #0
}
 800278c:	4618      	mov	r0, r3
 800278e:	3710      	adds	r7, #16
 8002790:	46bd      	mov	sp, r7
 8002792:	bd80      	pop	{r7, pc}

08002794 <FSMC_NORSRAM_Init>:
  * @param  Device Pointer to NORSRAM device instance
  * @param  Init Pointer to NORSRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef  FSMC_NORSRAM_Init(FSMC_NORSRAM_TypeDef *Device, FSMC_NORSRAM_InitTypeDef* Init)
{ 
 8002794:	b480      	push	{r7}
 8002796:	b085      	sub	sp, #20
 8002798:	af00      	add	r7, sp, #0
 800279a:	6078      	str	r0, [r7, #4]
 800279c:	6039      	str	r1, [r7, #0]
  uint32_t tmpr = 0U;
 800279e:	2300      	movs	r3, #0
 80027a0:	60fb      	str	r3, [r7, #12]
  assert_param(IS_FSMC_WRITE_FIFO(Init->WriteFifo));
  assert_param(IS_FSMC_CONTINOUS_CLOCK(Init->ContinuousClock));
#endif /* STM32F412Zx || STM32F412Vx || STM32F413xx || STM32F423xx */
  
  /* Get the BTCR register value */
  tmpr = Device->BTCR[Init->NSBank];
 80027a2:	683b      	ldr	r3, [r7, #0]
 80027a4:	681a      	ldr	r2, [r3, #0]
 80027a6:	687b      	ldr	r3, [r7, #4]
 80027a8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80027ac:	60fb      	str	r3, [r7, #12]

#if defined(STM32F405xx) || defined(STM32F415xx) || defined(STM32F407xx) || defined(STM32F417xx)
  /* Clear MBKEN, MUXEN, MTYP, MWID, FACCEN, BURSTEN, WAITPOL, WRAPMOD, WAITCFG, WREN,
           WAITEN, EXTMOD, ASYNCWAIT, CPSIZE and CBURSTRW bits */
  tmpr &= ((uint32_t)~(FSMC_BCR1_MBKEN     | FSMC_BCR1_MUXEN    | FSMC_BCR1_MTYP     | \
 80027ae:	68fa      	ldr	r2, [r7, #12]
 80027b0:	4b20      	ldr	r3, [pc, #128]	; (8002834 <FSMC_NORSRAM_Init+0xa0>)
 80027b2:	4013      	ands	r3, r2
 80027b4:	60fb      	str	r3, [r7, #12]
                       FSMC_BCR1_MWID      | FSMC_BCR1_FACCEN   | FSMC_BCR1_BURSTEN  | \
                       FSMC_BCR1_WAITPOL   | FSMC_BCR1_WRAPMOD  | FSMC_BCR1_WAITCFG  | \
                       FSMC_BCR1_WREN      | FSMC_BCR1_WAITEN   | FSMC_BCR1_EXTMOD   | \
                       FSMC_BCR1_ASYNCWAIT | FSMC_BCR1_CPSIZE   | FSMC_BCR1_CBURSTRW));
  /* Set NORSRAM device control parameters */
  tmpr |= (uint32_t)(Init->DataAddressMux       |\
 80027b6:	683b      	ldr	r3, [r7, #0]
 80027b8:	685a      	ldr	r2, [r3, #4]
                     Init->MemoryType           |\
 80027ba:	683b      	ldr	r3, [r7, #0]
 80027bc:	689b      	ldr	r3, [r3, #8]
  tmpr |= (uint32_t)(Init->DataAddressMux       |\
 80027be:	431a      	orrs	r2, r3
                     Init->MemoryDataWidth      |\
 80027c0:	683b      	ldr	r3, [r7, #0]
 80027c2:	68db      	ldr	r3, [r3, #12]
                     Init->MemoryType           |\
 80027c4:	431a      	orrs	r2, r3
                     Init->BurstAccessMode      |\
 80027c6:	683b      	ldr	r3, [r7, #0]
 80027c8:	691b      	ldr	r3, [r3, #16]
                     Init->MemoryDataWidth      |\
 80027ca:	431a      	orrs	r2, r3
                     Init->WaitSignalPolarity   |\
 80027cc:	683b      	ldr	r3, [r7, #0]
 80027ce:	695b      	ldr	r3, [r3, #20]
                     Init->BurstAccessMode      |\
 80027d0:	431a      	orrs	r2, r3
                     Init->WrapMode             |\
 80027d2:	683b      	ldr	r3, [r7, #0]
 80027d4:	699b      	ldr	r3, [r3, #24]
                     Init->WaitSignalPolarity   |\
 80027d6:	431a      	orrs	r2, r3
                     Init->WaitSignalActive     |\
 80027d8:	683b      	ldr	r3, [r7, #0]
 80027da:	69db      	ldr	r3, [r3, #28]
                     Init->WrapMode             |\
 80027dc:	431a      	orrs	r2, r3
                     Init->WriteOperation       |\
 80027de:	683b      	ldr	r3, [r7, #0]
 80027e0:	6a1b      	ldr	r3, [r3, #32]
                     Init->WaitSignalActive     |\
 80027e2:	431a      	orrs	r2, r3
                     Init->WaitSignal           |\
 80027e4:	683b      	ldr	r3, [r7, #0]
 80027e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
                     Init->WriteOperation       |\
 80027e8:	431a      	orrs	r2, r3
                     Init->ExtendedMode         |\
 80027ea:	683b      	ldr	r3, [r7, #0]
 80027ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
                     Init->WaitSignal           |\
 80027ee:	431a      	orrs	r2, r3
                     Init->AsynchronousWait     |\
 80027f0:	683b      	ldr	r3, [r7, #0]
 80027f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
                     Init->ExtendedMode         |\
 80027f4:	431a      	orrs	r2, r3
                     Init->PageSize             |\
 80027f6:	683b      	ldr	r3, [r7, #0]
 80027f8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
                     Init->AsynchronousWait     |\
 80027fa:	431a      	orrs	r2, r3
                     Init->WriteBurst
 80027fc:	683b      	ldr	r3, [r7, #0]
 80027fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
                     Init->PageSize             |\
 8002800:	4313      	orrs	r3, r2
  tmpr |= (uint32_t)(Init->DataAddressMux       |\
 8002802:	68fa      	ldr	r2, [r7, #12]
 8002804:	4313      	orrs	r3, r2
 8002806:	60fb      	str	r3, [r7, #12]
                     Init->ContinuousClock      |\
                     Init->PageSize             |\
                     Init->WriteFifo);
#endif /* STM32F405xx || STM32F415xx || STM32F407xx || STM32F417xx */ 
            
  if(Init->MemoryType == FSMC_MEMORY_TYPE_NOR)
 8002808:	683b      	ldr	r3, [r7, #0]
 800280a:	689b      	ldr	r3, [r3, #8]
 800280c:	2b08      	cmp	r3, #8
 800280e:	d103      	bne.n	8002818 <FSMC_NORSRAM_Init+0x84>
  {
    tmpr |= (uint32_t)FSMC_NORSRAM_FLASH_ACCESS_ENABLE;
 8002810:	68fb      	ldr	r3, [r7, #12]
 8002812:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002816:	60fb      	str	r3, [r7, #12]
  }

  Device->BTCR[Init->NSBank] = tmpr;
 8002818:	683b      	ldr	r3, [r7, #0]
 800281a:	681a      	ldr	r2, [r3, #0]
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	68f9      	ldr	r1, [r7, #12]
 8002820:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  {
    Device->BTCR[FSMC_NORSRAM_BANK1] |= (uint32_t)(Init->WriteFifo);
  }
#endif /* STM32F412Zx || STM32F412Vx || STM32F412Rx || STM32F413xx || STM32F423xx */

  return HAL_OK;
 8002824:	2300      	movs	r3, #0
}
 8002826:	4618      	mov	r0, r3
 8002828:	3714      	adds	r7, #20
 800282a:	46bd      	mov	sp, r7
 800282c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002830:	4770      	bx	lr
 8002832:	bf00      	nop
 8002834:	fff00080 	.word	0xfff00080

08002838 <FSMC_NORSRAM_Timing_Init>:
  * @param  Timing Pointer to NORSRAM Timing structure
  * @param  Bank NORSRAM bank number  
  * @retval HAL status
  */
HAL_StatusTypeDef FSMC_NORSRAM_Timing_Init(FSMC_NORSRAM_TypeDef *Device, FSMC_NORSRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 8002838:	b480      	push	{r7}
 800283a:	b087      	sub	sp, #28
 800283c:	af00      	add	r7, sp, #0
 800283e:	60f8      	str	r0, [r7, #12]
 8002840:	60b9      	str	r1, [r7, #8]
 8002842:	607a      	str	r2, [r7, #4]
  uint32_t tmpr = 0U;
 8002844:	2300      	movs	r3, #0
 8002846:	617b      	str	r3, [r7, #20]
  assert_param(IS_FSMC_DATA_LATENCY(Timing->DataLatency));
  assert_param(IS_FSMC_ACCESS_MODE(Timing->AccessMode));
  assert_param(IS_FSMC_NORSRAM_BANK(Bank));
  
  /* Get the BTCR register value */
  tmpr = Device->BTCR[Bank + 1U];
 8002848:	687b      	ldr	r3, [r7, #4]
 800284a:	1c5a      	adds	r2, r3, #1
 800284c:	68fb      	ldr	r3, [r7, #12]
 800284e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002852:	617b      	str	r3, [r7, #20]

  /* Clear ADDSET, ADDHLD, DATAST, BUSTURN, CLKDIV, DATLAT and ACCMOD bits */
  tmpr &= ((uint32_t)~(FSMC_BTR1_ADDSET  | FSMC_BTR1_ADDHLD | FSMC_BTR1_DATAST | \
 8002854:	697b      	ldr	r3, [r7, #20]
 8002856:	f003 4340 	and.w	r3, r3, #3221225472	; 0xc0000000
 800285a:	617b      	str	r3, [r7, #20]
                       FSMC_BTR1_BUSTURN | FSMC_BTR1_CLKDIV | FSMC_BTR1_DATLAT | \
                       FSMC_BTR1_ACCMOD));
  
  /* Set FSMC_NORSRAM device timing parameters */  
  tmpr |= (uint32_t)(Timing->AddressSetupTime                  |\
 800285c:	68bb      	ldr	r3, [r7, #8]
 800285e:	681a      	ldr	r2, [r3, #0]
                    ((Timing->AddressHoldTime) << 4U)          |\
 8002860:	68bb      	ldr	r3, [r7, #8]
 8002862:	685b      	ldr	r3, [r3, #4]
 8002864:	011b      	lsls	r3, r3, #4
  tmpr |= (uint32_t)(Timing->AddressSetupTime                  |\
 8002866:	431a      	orrs	r2, r3
                    ((Timing->DataSetupTime) << 8U)            |\
 8002868:	68bb      	ldr	r3, [r7, #8]
 800286a:	689b      	ldr	r3, [r3, #8]
 800286c:	021b      	lsls	r3, r3, #8
                    ((Timing->AddressHoldTime) << 4U)          |\
 800286e:	431a      	orrs	r2, r3
                    ((Timing->BusTurnAroundDuration) << 16U)   |\
 8002870:	68bb      	ldr	r3, [r7, #8]
 8002872:	68db      	ldr	r3, [r3, #12]
 8002874:	041b      	lsls	r3, r3, #16
                    ((Timing->DataSetupTime) << 8U)            |\
 8002876:	431a      	orrs	r2, r3
                    (((Timing->CLKDivision)-1U) << 20U)        |\
 8002878:	68bb      	ldr	r3, [r7, #8]
 800287a:	691b      	ldr	r3, [r3, #16]
 800287c:	3b01      	subs	r3, #1
 800287e:	051b      	lsls	r3, r3, #20
                    ((Timing->BusTurnAroundDuration) << 16U)   |\
 8002880:	431a      	orrs	r2, r3
                    (((Timing->DataLatency)-2U) << 24U)        |\
 8002882:	68bb      	ldr	r3, [r7, #8]
 8002884:	695b      	ldr	r3, [r3, #20]
 8002886:	3b02      	subs	r3, #2
 8002888:	061b      	lsls	r3, r3, #24
                    (((Timing->CLKDivision)-1U) << 20U)        |\
 800288a:	431a      	orrs	r2, r3
                    (Timing->AccessMode));
 800288c:	68bb      	ldr	r3, [r7, #8]
 800288e:	699b      	ldr	r3, [r3, #24]
  tmpr |= (uint32_t)(Timing->AddressSetupTime                  |\
 8002890:	4313      	orrs	r3, r2
 8002892:	697a      	ldr	r2, [r7, #20]
 8002894:	4313      	orrs	r3, r2
 8002896:	617b      	str	r3, [r7, #20]
  
  Device->BTCR[Bank + 1] = tmpr; 
 8002898:	687b      	ldr	r3, [r7, #4]
 800289a:	1c5a      	adds	r2, r3, #1
 800289c:	68fb      	ldr	r3, [r7, #12]
 800289e:	6979      	ldr	r1, [r7, #20]
 80028a0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    tmpr |= (uint32_t)(((Timing->CLKDivision)-1U) << 20U);
    Device->BTCR[FSMC_NORSRAM_BANK1 + 1U] = tmpr;
  }
#endif /* STM32F412Zx || STM32F412Vx || STM32F412Rx || STM32F413xx || STM32F423xx */

  return HAL_OK;
 80028a4:	2300      	movs	r3, #0
}
 80028a6:	4618      	mov	r0, r3
 80028a8:	371c      	adds	r7, #28
 80028aa:	46bd      	mov	sp, r7
 80028ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028b0:	4770      	bx	lr
	...

080028b4 <FSMC_NORSRAM_Extended_Timing_Init>:
  * @param  Timing Pointer to NORSRAM Timing structure
  * @param  Bank NORSRAM bank number  
  * @retval HAL status
  */
HAL_StatusTypeDef  FSMC_NORSRAM_Extended_Timing_Init(FSMC_NORSRAM_EXTENDED_TypeDef *Device, FSMC_NORSRAM_TimingTypeDef *Timing, uint32_t Bank, uint32_t ExtendedMode)
{
 80028b4:	b480      	push	{r7}
 80028b6:	b087      	sub	sp, #28
 80028b8:	af00      	add	r7, sp, #0
 80028ba:	60f8      	str	r0, [r7, #12]
 80028bc:	60b9      	str	r1, [r7, #8]
 80028be:	607a      	str	r2, [r7, #4]
 80028c0:	603b      	str	r3, [r7, #0]
  uint32_t tmpr = 0U;
 80028c2:	2300      	movs	r3, #0
 80028c4:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_FSMC_EXTENDED_MODE(ExtendedMode));

  /* Set NORSRAM device timing register for write configuration, if extended mode is used */
  if(ExtendedMode == FSMC_EXTENDED_MODE_ENABLE)
 80028c6:	683b      	ldr	r3, [r7, #0]
 80028c8:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80028cc:	d122      	bne.n	8002914 <FSMC_NORSRAM_Extended_Timing_Init+0x60>
    assert_param(IS_FSMC_TURNAROUND_TIME(Timing->BusTurnAroundDuration));
    assert_param(IS_FSMC_ACCESS_MODE(Timing->AccessMode));
    assert_param(IS_FSMC_NORSRAM_BANK(Bank));
  
    /* Get the BWTR register value */
    tmpr = Device->BWTR[Bank];
 80028ce:	68fb      	ldr	r3, [r7, #12]
 80028d0:	687a      	ldr	r2, [r7, #4]
 80028d2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80028d6:	617b      	str	r3, [r7, #20]
    
    /* Clear ADDSET, ADDHLD, DATAST, BUSTURN and ACCMOD bits */
    tmpr &= ((uint32_t)~(FSMC_BWTR1_ADDSET  | FSMC_BWTR1_ADDHLD | FSMC_BWTR1_DATAST | \
 80028d8:	697a      	ldr	r2, [r7, #20]
 80028da:	4b15      	ldr	r3, [pc, #84]	; (8002930 <FSMC_NORSRAM_Extended_Timing_Init+0x7c>)
 80028dc:	4013      	ands	r3, r2
 80028de:	617b      	str	r3, [r7, #20]
                         FSMC_BWTR1_BUSTURN | FSMC_BWTR1_ACCMOD));

    tmpr |= (uint32_t)(Timing->AddressSetupTime                  |\
 80028e0:	68bb      	ldr	r3, [r7, #8]
 80028e2:	681a      	ldr	r2, [r3, #0]
                      ((Timing->AddressHoldTime) << 4U)          |\
 80028e4:	68bb      	ldr	r3, [r7, #8]
 80028e6:	685b      	ldr	r3, [r3, #4]
 80028e8:	011b      	lsls	r3, r3, #4
    tmpr |= (uint32_t)(Timing->AddressSetupTime                  |\
 80028ea:	431a      	orrs	r2, r3
                      ((Timing->DataSetupTime) << 8U)            |\
 80028ec:	68bb      	ldr	r3, [r7, #8]
 80028ee:	689b      	ldr	r3, [r3, #8]
 80028f0:	021b      	lsls	r3, r3, #8
                      ((Timing->AddressHoldTime) << 4U)          |\
 80028f2:	431a      	orrs	r2, r3
                      ((Timing->BusTurnAroundDuration) << 16U)   |\
 80028f4:	68bb      	ldr	r3, [r7, #8]
 80028f6:	68db      	ldr	r3, [r3, #12]
 80028f8:	041b      	lsls	r3, r3, #16
                      ((Timing->DataSetupTime) << 8U)            |\
 80028fa:	431a      	orrs	r2, r3
                      (Timing->AccessMode));
 80028fc:	68bb      	ldr	r3, [r7, #8]
 80028fe:	699b      	ldr	r3, [r3, #24]
                      ((Timing->BusTurnAroundDuration) << 16U)   |\
 8002900:	4313      	orrs	r3, r2
    tmpr |= (uint32_t)(Timing->AddressSetupTime                  |\
 8002902:	697a      	ldr	r2, [r7, #20]
 8002904:	4313      	orrs	r3, r2
 8002906:	617b      	str	r3, [r7, #20]
    
    Device->BWTR[Bank] = tmpr;
 8002908:	68fb      	ldr	r3, [r7, #12]
 800290a:	687a      	ldr	r2, [r7, #4]
 800290c:	6979      	ldr	r1, [r7, #20]
 800290e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002912:	e005      	b.n	8002920 <FSMC_NORSRAM_Extended_Timing_Init+0x6c>
  }
  else                                        
  {
    Device->BWTR[Bank] = 0x0FFFFFFFU;
 8002914:	68fb      	ldr	r3, [r7, #12]
 8002916:	687a      	ldr	r2, [r7, #4]
 8002918:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 800291c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  }   
  
  return HAL_OK;  
 8002920:	2300      	movs	r3, #0
}
 8002922:	4618      	mov	r0, r3
 8002924:	371c      	adds	r7, #28
 8002926:	46bd      	mov	sp, r7
 8002928:	f85d 7b04 	ldr.w	r7, [sp], #4
 800292c:	4770      	bx	lr
 800292e:	bf00      	nop
 8002930:	cff00000 	.word	0xcff00000

08002934 <TEXT_Callback>:
 8002934:	b530      	push	{r4, r5, lr}
 8002936:	6845      	ldr	r5, [r0, #4]
 8002938:	4604      	mov	r4, r0
 800293a:	b085      	sub	sp, #20
 800293c:	4628      	mov	r0, r5
 800293e:	4621      	mov	r1, r4
 8002940:	f009 f991 	bl	800bc66 <WIDGET_HandleActive>
 8002944:	2800      	cmp	r0, #0
 8002946:	d056      	beq.n	80029f6 <TEXT_Callback+0xc2>
 8002948:	6823      	ldr	r3, [r4, #0]
 800294a:	2b0f      	cmp	r3, #15
 800294c:	d01e      	beq.n	800298c <TEXT_Callback+0x58>
 800294e:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8002952:	d00e      	beq.n	8002972 <TEXT_Callback+0x3e>
 8002954:	2b0b      	cmp	r3, #11
 8002956:	d14b      	bne.n	80029f0 <TEXT_Callback+0xbc>
 8002958:	4628      	mov	r0, r5
 800295a:	f008 fdb9 	bl	800b4d0 <GUI_ALLOC_LockH>
 800295e:	ad04      	add	r5, sp, #16
 8002960:	f845 0d08 	str.w	r0, [r5, #-8]!
 8002964:	3044      	adds	r0, #68	; 0x44
 8002966:	f008 ff83 	bl	800b870 <GUI_ALLOC_FreePtr>
 800296a:	4628      	mov	r0, r5
 800296c:	f008 fdbe 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002970:	e03e      	b.n	80029f0 <TEXT_Callback+0xbc>
 8002972:	68e3      	ldr	r3, [r4, #12]
 8002974:	b12b      	cbz	r3, 8002982 <TEXT_Callback+0x4e>
 8002976:	7a1b      	ldrb	r3, [r3, #8]
 8002978:	2b00      	cmp	r3, #0
 800297a:	bf0c      	ite	eq
 800297c:	2102      	moveq	r1, #2
 800297e:	2101      	movne	r1, #1
 8002980:	e000      	b.n	8002984 <TEXT_Callback+0x50>
 8002982:	2103      	movs	r1, #3
 8002984:	4628      	mov	r0, r5
 8002986:	f002 f972 	bl	8004c6e <WM_NotifyParent>
 800298a:	e031      	b.n	80029f0 <TEXT_Callback+0xbc>
 800298c:	4628      	mov	r0, r5
 800298e:	f008 fd9f 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002992:	9000      	str	r0, [sp, #0]
 8002994:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8002996:	f006 fa1f 	bl	8008dd8 <LCD_SetColor>
 800299a:	9b00      	ldr	r3, [sp, #0]
 800299c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800299e:	f008 f93b 	bl	800ac18 <GUI_SetFont>
 80029a2:	4628      	mov	r0, r5
 80029a4:	f001 fd1e 	bl	80043e4 <WM_GetHasTrans>
 80029a8:	b928      	cbnz	r0, 80029b6 <TEXT_Callback+0x82>
 80029aa:	9b00      	ldr	r3, [sp, #0]
 80029ac:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 80029ae:	f006 fa0b 	bl	8008dc8 <LCD_SetBkColor>
 80029b2:	f007 ff19 	bl	800a7e8 <GUI_Clear>
 80029b6:	9b00      	ldr	r3, [sp, #0]
 80029b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80029ba:	b1ab      	cbz	r3, 80029e8 <TEXT_Callback+0xb4>
 80029bc:	2002      	movs	r0, #2
 80029be:	f008 f961 	bl	800ac84 <GUI_SetTextMode>
 80029c2:	a802      	add	r0, sp, #8
 80029c4:	f001 fed6 	bl	8004774 <WM_GetClientRect>
 80029c8:	9b00      	ldr	r3, [sp, #0]
 80029ca:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80029cc:	f008 fd80 	bl	800b4d0 <GUI_ALLOC_LockH>
 80029d0:	9b00      	ldr	r3, [sp, #0]
 80029d2:	9001      	str	r0, [sp, #4]
 80029d4:	f9b3 2048 	ldrsh.w	r2, [r3, #72]	; 0x48
 80029d8:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80029dc:	a902      	add	r1, sp, #8
 80029de:	f007 fd10 	bl	800a402 <GUI_DispStringInRectWrap>
 80029e2:	a801      	add	r0, sp, #4
 80029e4:	f008 fd82 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80029e8:	4668      	mov	r0, sp
 80029ea:	f008 fd7f 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80029ee:	e002      	b.n	80029f6 <TEXT_Callback+0xc2>
 80029f0:	4620      	mov	r0, r4
 80029f2:	f003 fbb3 	bl	800615c <WM_DefaultProc>
 80029f6:	b005      	add	sp, #20
 80029f8:	bd30      	pop	{r4, r5, pc}
	...

080029fc <TEXT_CreateUser>:
 80029fc:	b570      	push	{r4, r5, r6, lr}
 80029fe:	b086      	sub	sp, #24
 8002a00:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8002a02:	9500      	str	r5, [sp, #0]
 8002a04:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8002a06:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8002a08:	f045 0501 	orr.w	r5, r5, #1
 8002a0c:	9501      	str	r5, [sp, #4]
 8002a0e:	4d1a      	ldr	r5, [pc, #104]	; (8002a78 <TEXT_CreateUser+0x7c>)
 8002a10:	9502      	str	r5, [sp, #8]
 8002a12:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8002a14:	3520      	adds	r5, #32
 8002a16:	9503      	str	r5, [sp, #12]
 8002a18:	f002 ffa0 	bl	800595c <WM_CreateWindowAsChild>
 8002a1c:	4605      	mov	r5, r0
 8002a1e:	b340      	cbz	r0, 8002a72 <TEXT_CreateUser+0x76>
 8002a20:	b18c      	cbz	r4, 8002a46 <TEXT_CreateUser+0x4a>
 8002a22:	4620      	mov	r0, r4
 8002a24:	f7fd fbd0 	bl	80001c8 <strlen>
 8002a28:	3001      	adds	r0, #1
 8002a2a:	f008 ff4b 	bl	800b8c4 <GUI_ALLOC_AllocZero>
 8002a2e:	4606      	mov	r6, r0
 8002a30:	b150      	cbz	r0, 8002a48 <TEXT_CreateUser+0x4c>
 8002a32:	f008 fd4d 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002a36:	4621      	mov	r1, r4
 8002a38:	9005      	str	r0, [sp, #20]
 8002a3a:	f00d f98f 	bl	800fd5c <strcpy>
 8002a3e:	a805      	add	r0, sp, #20
 8002a40:	f008 fd54 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002a44:	e000      	b.n	8002a48 <TEXT_CreateUser+0x4c>
 8002a46:	4626      	mov	r6, r4
 8002a48:	4628      	mov	r0, r5
 8002a4a:	f008 fd41 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002a4e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002a50:	9005      	str	r0, [sp, #20]
 8002a52:	2200      	movs	r2, #0
 8002a54:	f009 f8c2 	bl	800bbdc <WIDGET__Init>
 8002a58:	9c05      	ldr	r4, [sp, #20]
 8002a5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002a5c:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 8002a60:	4b06      	ldr	r3, [pc, #24]	; (8002a7c <TEXT_CreateUser+0x80>)
 8002a62:	6466      	str	r6, [r4, #68]	; 0x44
 8002a64:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002a66:	3434      	adds	r4, #52	; 0x34
 8002a68:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8002a6c:	a805      	add	r0, sp, #20
 8002a6e:	f008 fd3d 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002a72:	4628      	mov	r0, r5
 8002a74:	b006      	add	sp, #24
 8002a76:	bd70      	pop	{r4, r5, r6, pc}
 8002a78:	08002935 	.word	0x08002935
 8002a7c:	2000000c 	.word	0x2000000c

08002a80 <TEXT_CreateIndirect>:
 8002a80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002a82:	b087      	sub	sp, #28
 8002a84:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8002a88:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8002a8c:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8002a90:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8002a94:	9100      	str	r1, [sp, #0]
 8002a96:	2102      	movs	r1, #2
 8002a98:	9101      	str	r1, [sp, #4]
 8002a9a:	8a41      	ldrh	r1, [r0, #18]
 8002a9c:	9102      	str	r1, [sp, #8]
 8002a9e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8002aa2:	9103      	str	r1, [sp, #12]
 8002aa4:	6844      	ldr	r4, [r0, #4]
 8002aa6:	9404      	str	r4, [sp, #16]
 8002aa8:	6984      	ldr	r4, [r0, #24]
 8002aaa:	9405      	str	r4, [sp, #20]
 8002aac:	eb0e 0002 	add.w	r0, lr, r2
 8002ab0:	18f9      	adds	r1, r7, r3
 8002ab2:	4632      	mov	r2, r6
 8002ab4:	462b      	mov	r3, r5
 8002ab6:	f7ff ffa1 	bl	80029fc <TEXT_CreateUser>
 8002aba:	b007      	add	sp, #28
 8002abc:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002abe <TEXT_SetFont>:
 8002abe:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002ac0:	460c      	mov	r4, r1
 8002ac2:	4605      	mov	r5, r0
 8002ac4:	b160      	cbz	r0, 8002ae0 <TEXT_SetFont+0x22>
 8002ac6:	f008 fd03 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002aca:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8002acc:	9001      	str	r0, [sp, #4]
 8002ace:	42a2      	cmp	r2, r4
 8002ad0:	d003      	beq.n	8002ada <TEXT_SetFont+0x1c>
 8002ad2:	6344      	str	r4, [r0, #52]	; 0x34
 8002ad4:	4628      	mov	r0, r5
 8002ad6:	f002 ff13 	bl	8005900 <WM_InvalidateWindow>
 8002ada:	a801      	add	r0, sp, #4
 8002adc:	f008 fd06 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002ae0:	b003      	add	sp, #12
 8002ae2:	bd30      	pop	{r4, r5, pc}

08002ae4 <TEXT_SetText>:
 8002ae4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002ae6:	460c      	mov	r4, r1
 8002ae8:	4605      	mov	r5, r0
 8002aea:	b300      	cbz	r0, 8002b2e <TEXT_SetText+0x4a>
 8002aec:	f008 fcf0 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002af0:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8002af2:	9000      	str	r0, [sp, #0]
 8002af4:	4668      	mov	r0, sp
 8002af6:	9301      	str	r3, [sp, #4]
 8002af8:	f008 fcf8 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002afc:	4621      	mov	r1, r4
 8002afe:	a801      	add	r0, sp, #4
 8002b00:	f006 fa66 	bl	8008fd0 <GUI__SetText>
 8002b04:	f1d0 0401 	rsbs	r4, r0, #1
 8002b08:	bf38      	it	cc
 8002b0a:	2400      	movcc	r4, #0
 8002b0c:	b984      	cbnz	r4, 8002b30 <TEXT_SetText+0x4c>
 8002b0e:	4628      	mov	r0, r5
 8002b10:	f008 fcde 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002b14:	9a01      	ldr	r2, [sp, #4]
 8002b16:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8002b18:	9000      	str	r0, [sp, #0]
 8002b1a:	4291      	cmp	r1, r2
 8002b1c:	bf18      	it	ne
 8002b1e:	6442      	strne	r2, [r0, #68]	; 0x44
 8002b20:	4668      	mov	r0, sp
 8002b22:	f008 fce3 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002b26:	4628      	mov	r0, r5
 8002b28:	f002 feea 	bl	8005900 <WM_InvalidateWindow>
 8002b2c:	e000      	b.n	8002b30 <TEXT_SetText+0x4c>
 8002b2e:	2401      	movs	r4, #1
 8002b30:	4620      	mov	r0, r4
 8002b32:	b003      	add	sp, #12
 8002b34:	bd30      	pop	{r4, r5, pc}

08002b36 <PROGBAR_Callback>:
 8002b36:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002b38:	6845      	ldr	r5, [r0, #4]
 8002b3a:	4604      	mov	r4, r0
 8002b3c:	4621      	mov	r1, r4
 8002b3e:	4628      	mov	r0, r5
 8002b40:	f009 f891 	bl	800bc66 <WIDGET_HandleActive>
 8002b44:	b310      	cbz	r0, 8002b8c <PROGBAR_Callback+0x56>
 8002b46:	6823      	ldr	r3, [r4, #0]
 8002b48:	2b0b      	cmp	r3, #11
 8002b4a:	d010      	beq.n	8002b6e <PROGBAR_Callback+0x38>
 8002b4c:	2b0f      	cmp	r3, #15
 8002b4e:	d11a      	bne.n	8002b86 <PROGBAR_Callback+0x50>
 8002b50:	4628      	mov	r0, r5
 8002b52:	f008 fcbd 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002b56:	ab02      	add	r3, sp, #8
 8002b58:	f843 0d04 	str.w	r0, [r3, #-4]!
 8002b5c:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8002b5e:	6814      	ldr	r4, [r2, #0]
 8002b60:	4618      	mov	r0, r3
 8002b62:	f008 fcc3 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002b66:	b18c      	cbz	r4, 8002b8c <PROGBAR_Callback+0x56>
 8002b68:	4628      	mov	r0, r5
 8002b6a:	47a0      	blx	r4
 8002b6c:	e00e      	b.n	8002b8c <PROGBAR_Callback+0x56>
 8002b6e:	4628      	mov	r0, r5
 8002b70:	f008 fcae 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002b74:	ad02      	add	r5, sp, #8
 8002b76:	f845 0d04 	str.w	r0, [r5, #-4]!
 8002b7a:	3038      	adds	r0, #56	; 0x38
 8002b7c:	f008 fe78 	bl	800b870 <GUI_ALLOC_FreePtr>
 8002b80:	4628      	mov	r0, r5
 8002b82:	f008 fcb3 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002b86:	4620      	mov	r0, r4
 8002b88:	f003 fae8 	bl	800615c <WM_DefaultProc>
 8002b8c:	b003      	add	sp, #12
 8002b8e:	bd30      	pop	{r4, r5, pc}

08002b90 <_SetValue>:
 8002b90:	b513      	push	{r0, r1, r4, lr}
 8002b92:	ab02      	add	r3, sp, #8
 8002b94:	6342      	str	r2, [r0, #52]	; 0x34
 8002b96:	f843 1d04 	str.w	r1, [r3, #-4]!
 8002b9a:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8002b9c:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002b9e:	1a52      	subs	r2, r2, r1
 8002ba0:	2464      	movs	r4, #100	; 0x64
 8002ba2:	4362      	muls	r2, r4
 8002ba4:	1a40      	subs	r0, r0, r1
 8002ba6:	fb92 f0f0 	sdiv	r0, r2, r0
 8002baa:	4619      	mov	r1, r3
 8002bac:	f006 fc7c 	bl	80094a8 <GUI_AddDecMin>
 8002bb0:	9b01      	ldr	r3, [sp, #4]
 8002bb2:	1c5a      	adds	r2, r3, #1
 8002bb4:	9201      	str	r2, [sp, #4]
 8002bb6:	2225      	movs	r2, #37	; 0x25
 8002bb8:	701a      	strb	r2, [r3, #0]
 8002bba:	9b01      	ldr	r3, [sp, #4]
 8002bbc:	2200      	movs	r2, #0
 8002bbe:	701a      	strb	r2, [r3, #0]
 8002bc0:	b002      	add	sp, #8
 8002bc2:	bd10      	pop	{r4, pc}

08002bc4 <PROGBAR__GetTextLocked>:
 8002bc4:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8002bc6:	f008 bc83 	b.w	800b4d0 <GUI_ALLOC_LockH>

08002bca <PROGBAR__GetTextRect>:
 8002bca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002bce:	f9b0 3000 	ldrsh.w	r3, [r0]
 8002bd2:	f9b0 7004 	ldrsh.w	r7, [r0, #4]
 8002bd6:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8002bda:	1aff      	subs	r7, r7, r3
 8002bdc:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8002be0:	4604      	mov	r4, r0
 8002be2:	4610      	mov	r0, r2
 8002be4:	ebc3 0808 	rsb	r8, r3, r8
 8002be8:	460d      	mov	r5, r1
 8002bea:	f007 fca9 	bl	800a540 <GUI_GetStringDistX>
 8002bee:	4606      	mov	r6, r0
 8002bf0:	f007 ff40 	bl	800aa74 <GUI_GetFontSizeY>
 8002bf4:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 8002bf8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8002bfa:	f003 0303 	and.w	r3, r3, #3
 8002bfe:	2b01      	cmp	r3, #1
 8002c00:	f107 0701 	add.w	r7, r7, #1
 8002c04:	f108 0801 	add.w	r8, r8, #1
 8002c08:	6812      	ldr	r2, [r2, #0]
 8002c0a:	d006      	beq.n	8002c1a <PROGBAR__GetTextRect+0x50>
 8002c0c:	2b02      	cmp	r3, #2
 8002c0e:	d109      	bne.n	8002c24 <PROGBAR__GetTextRect+0x5a>
 8002c10:	1bbf      	subs	r7, r7, r6
 8002c12:	fb97 f3f3 	sdiv	r3, r7, r3
 8002c16:	802b      	strh	r3, [r5, #0]
 8002c18:	e005      	b.n	8002c26 <PROGBAR__GetTextRect+0x5c>
 8002c1a:	43d2      	mvns	r2, r2
 8002c1c:	4417      	add	r7, r2
 8002c1e:	1bbf      	subs	r7, r7, r6
 8002c20:	802f      	strh	r7, [r5, #0]
 8002c22:	e000      	b.n	8002c26 <PROGBAR__GetTextRect+0x5c>
 8002c24:	802a      	strh	r2, [r5, #0]
 8002c26:	8fa2      	ldrh	r2, [r4, #60]	; 0x3c
 8002c28:	882b      	ldrh	r3, [r5, #0]
 8002c2a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8002c2c:	441a      	add	r2, r3
 8002c2e:	ebc0 0808 	rsb	r8, r0, r8
 8002c32:	2302      	movs	r3, #2
 8002c34:	fb98 f3f3 	sdiv	r3, r8, r3
 8002c38:	b292      	uxth	r2, r2
 8002c3a:	440b      	add	r3, r1
 8002c3c:	b29b      	uxth	r3, r3
 8002c3e:	802a      	strh	r2, [r5, #0]
 8002c40:	3801      	subs	r0, #1
 8002c42:	3a01      	subs	r2, #1
 8002c44:	806b      	strh	r3, [r5, #2]
 8002c46:	4416      	add	r6, r2
 8002c48:	4403      	add	r3, r0
 8002c4a:	80ae      	strh	r6, [r5, #4]
 8002c4c:	80eb      	strh	r3, [r5, #6]
 8002c4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002c52 <PROGBAR__Value2Pos>:
 8002c52:	b570      	push	{r4, r5, r6, lr}
 8002c54:	f890 3068 	ldrb.w	r3, [r0, #104]	; 0x68
 8002c58:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8002c5a:	f013 0601 	ands.w	r6, r3, #1
 8002c5e:	bf15      	itete	ne
 8002c60:	f9b0 3002 	ldrshne.w	r3, [r0, #2]
 8002c64:	f9b0 3000 	ldrsheq.w	r3, [r0]
 8002c68:	f9b0 5006 	ldrshne.w	r5, [r0, #6]
 8002c6c:	f9b0 5004 	ldrsheq.w	r5, [r0, #4]
 8002c70:	6814      	ldr	r4, [r2, #0]
 8002c72:	6c82      	ldr	r2, [r0, #72]	; 0x48
 8002c74:	1aed      	subs	r5, r5, r3
 8002c76:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8002c78:	3501      	adds	r5, #1
 8002c7a:	4299      	cmp	r1, r3
 8002c7c:	bfb8      	it	lt
 8002c7e:	4619      	movlt	r1, r3
 8002c80:	4291      	cmp	r1, r2
 8002c82:	bfa8      	it	ge
 8002c84:	4611      	movge	r1, r2
 8002c86:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 8002c8a:	b10e      	cbz	r6, 8002c90 <PROGBAR__Value2Pos+0x3e>
 8002c8c:	1a51      	subs	r1, r2, r1
 8002c8e:	e000      	b.n	8002c92 <PROGBAR__Value2Pos+0x40>
 8002c90:	1ac9      	subs	r1, r1, r3
 8002c92:	4369      	muls	r1, r5
 8002c94:	1ad3      	subs	r3, r2, r3
 8002c96:	fb91 f0f3 	sdiv	r0, r1, r3
 8002c9a:	4420      	add	r0, r4
 8002c9c:	bd70      	pop	{r4, r5, r6, pc}
	...

08002ca0 <PROGBAR_CreateUser>:
 8002ca0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002ca4:	b087      	sub	sp, #28
 8002ca6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8002ca8:	9400      	str	r4, [sp, #0]
 8002caa:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8002cac:	9401      	str	r4, [sp, #4]
 8002cae:	4c27      	ldr	r4, [pc, #156]	; (8002d4c <PROGBAR_CreateUser+0xac>)
 8002cb0:	9402      	str	r4, [sp, #8]
 8002cb2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8002cb4:	3440      	adds	r4, #64	; 0x40
 8002cb6:	9403      	str	r4, [sp, #12]
 8002cb8:	f002 fe50 	bl	800595c <WM_CreateWindowAsChild>
 8002cbc:	4607      	mov	r7, r0
 8002cbe:	2800      	cmp	r0, #0
 8002cc0:	d040      	beq.n	8002d44 <PROGBAR_CreateUser+0xa4>
 8002cc2:	2005      	movs	r0, #5
 8002cc4:	f008 fdfe 	bl	800b8c4 <GUI_ALLOC_AllocZero>
 8002cc8:	4680      	mov	r8, r0
 8002cca:	2800      	cmp	r0, #0
 8002ccc:	d03a      	beq.n	8002d44 <PROGBAR_CreateUser+0xa4>
 8002cce:	4638      	mov	r0, r7
 8002cd0:	f008 fbfe 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002cd4:	2200      	movs	r2, #0
 8002cd6:	9911      	ldr	r1, [sp, #68]	; 0x44
 8002cd8:	9004      	str	r0, [sp, #16]
 8002cda:	f8df 907c 	ldr.w	r9, [pc, #124]	; 8002d58 <PROGBAR_CreateUser+0xb8>
 8002cde:	4d1c      	ldr	r5, [pc, #112]	; (8002d50 <PROGBAR_CreateUser+0xb0>)
 8002ce0:	f008 ff7c 	bl	800bbdc <WIDGET__Init>
 8002ce4:	4638      	mov	r0, r7
 8002ce6:	491b      	ldr	r1, [pc, #108]	; (8002d54 <PROGBAR_CreateUser+0xb4>)
 8002ce8:	f009 f8aa 	bl	800be40 <WIDGET_SetEffect>
 8002cec:	9e04      	ldr	r6, [sp, #16]
 8002cee:	f8d9 3000 	ldr.w	r3, [r9]
 8002cf2:	6673      	str	r3, [r6, #100]	; 0x64
 8002cf4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002cf6:	f106 044c 	add.w	r4, r6, #76	; 0x4c
 8002cfa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002cfc:	e895 0003 	ldmia.w	r5, {r0, r1}
 8002d00:	2302      	movs	r3, #2
 8002d02:	e884 0003 	stmia.w	r4, {r0, r1}
 8002d06:	f8a6 3040 	strh.w	r3, [r6, #64]	; 0x40
 8002d0a:	2364      	movs	r3, #100	; 0x64
 8002d0c:	64b3      	str	r3, [r6, #72]	; 0x48
 8002d0e:	2400      	movs	r4, #0
 8002d10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002d12:	f886 3068 	strb.w	r3, [r6, #104]	; 0x68
 8002d16:	6474      	str	r4, [r6, #68]	; 0x44
 8002d18:	f8c6 8038 	str.w	r8, [r6, #56]	; 0x38
 8002d1c:	4640      	mov	r0, r8
 8002d1e:	f008 fbd7 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002d22:	4622      	mov	r2, r4
 8002d24:	4601      	mov	r1, r0
 8002d26:	9005      	str	r0, [sp, #20]
 8002d28:	9804      	ldr	r0, [sp, #16]
 8002d2a:	f7ff ff31 	bl	8002b90 <_SetValue>
 8002d2e:	a805      	add	r0, sp, #20
 8002d30:	f008 fbdc 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002d34:	a804      	add	r0, sp, #16
 8002d36:	f008 fbd9 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002d3a:	f8d9 3000 	ldr.w	r3, [r9]
 8002d3e:	4638      	mov	r0, r7
 8002d40:	685b      	ldr	r3, [r3, #4]
 8002d42:	4798      	blx	r3
 8002d44:	4638      	mov	r0, r7
 8002d46:	b007      	add	sp, #28
 8002d48:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002d4c:	08002b37 	.word	0x08002b37
 8002d50:	20000020 	.word	0x20000020
 8002d54:	080120ec 	.word	0x080120ec
 8002d58:	2000001c 	.word	0x2000001c

08002d5c <PROGBAR_CreateIndirect>:
 8002d5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002d5e:	b087      	sub	sp, #28
 8002d60:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8002d64:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8002d68:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8002d6c:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8002d70:	9100      	str	r1, [sp, #0]
 8002d72:	2100      	movs	r1, #0
 8002d74:	9101      	str	r1, [sp, #4]
 8002d76:	8a41      	ldrh	r1, [r0, #18]
 8002d78:	9102      	str	r1, [sp, #8]
 8002d7a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8002d7e:	9103      	str	r1, [sp, #12]
 8002d80:	6984      	ldr	r4, [r0, #24]
 8002d82:	9404      	str	r4, [sp, #16]
 8002d84:	eb0e 0002 	add.w	r0, lr, r2
 8002d88:	18f9      	adds	r1, r7, r3
 8002d8a:	4632      	mov	r2, r6
 8002d8c:	462b      	mov	r3, r5
 8002d8e:	f7ff ff87 	bl	8002ca0 <PROGBAR_CreateUser>
 8002d92:	b007      	add	sp, #28
 8002d94:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002d96 <PROGBAR_SetValue>:
 8002d96:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002d9a:	460d      	mov	r5, r1
 8002d9c:	b087      	sub	sp, #28
 8002d9e:	4680      	mov	r8, r0
 8002da0:	2800      	cmp	r0, #0
 8002da2:	f000 80a0 	beq.w	8002ee6 <PROGBAR_SetValue+0x150>
 8002da6:	f008 fb93 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002daa:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8002dac:	6b46      	ldr	r6, [r0, #52]	; 0x34
 8002dae:	429d      	cmp	r5, r3
 8002db0:	bfb8      	it	lt
 8002db2:	461d      	movlt	r5, r3
 8002db4:	6c83      	ldr	r3, [r0, #72]	; 0x48
 8002db6:	af06      	add	r7, sp, #24
 8002db8:	429d      	cmp	r5, r3
 8002dba:	bfa8      	it	ge
 8002dbc:	461d      	movge	r5, r3
 8002dbe:	42ae      	cmp	r6, r5
 8002dc0:	4604      	mov	r4, r0
 8002dc2:	f847 0d18 	str.w	r0, [r7, #-24]!
 8002dc6:	f000 808b 	beq.w	8002ee0 <PROGBAR_SetValue+0x14a>
 8002dca:	f890 9068 	ldrb.w	r9, [r0, #104]	; 0x68
 8002dce:	f019 0f01 	tst.w	r9, #1
 8002dd2:	d01c      	beq.n	8002e0e <PROGBAR_SetValue+0x78>
 8002dd4:	42b5      	cmp	r5, r6
 8002dd6:	da07      	bge.n	8002de8 <PROGBAR_SetValue+0x52>
 8002dd8:	4629      	mov	r1, r5
 8002dda:	f7ff ff3a 	bl	8002c52 <PROGBAR__Value2Pos>
 8002dde:	4631      	mov	r1, r6
 8002de0:	f8ad 000e 	strh.w	r0, [sp, #14]
 8002de4:	4620      	mov	r0, r4
 8002de6:	e006      	b.n	8002df6 <PROGBAR_SetValue+0x60>
 8002de8:	4631      	mov	r1, r6
 8002dea:	f7ff ff32 	bl	8002c52 <PROGBAR__Value2Pos>
 8002dee:	4629      	mov	r1, r5
 8002df0:	f8ad 000e 	strh.w	r0, [sp, #14]
 8002df4:	4620      	mov	r0, r4
 8002df6:	f7ff ff2c 	bl	8002c52 <PROGBAR__Value2Pos>
 8002dfa:	2300      	movs	r3, #0
 8002dfc:	f8ad 3008 	strh.w	r3, [sp, #8]
 8002e00:	f640 73ff 	movw	r3, #4095	; 0xfff
 8002e04:	f8ad 000a 	strh.w	r0, [sp, #10]
 8002e08:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002e0c:	e063      	b.n	8002ed6 <PROGBAR_SetValue+0x140>
 8002e0e:	42b5      	cmp	r5, r6
 8002e10:	da07      	bge.n	8002e22 <PROGBAR_SetValue+0x8c>
 8002e12:	4629      	mov	r1, r5
 8002e14:	f7ff ff1d 	bl	8002c52 <PROGBAR__Value2Pos>
 8002e18:	4631      	mov	r1, r6
 8002e1a:	f8ad 0008 	strh.w	r0, [sp, #8]
 8002e1e:	4620      	mov	r0, r4
 8002e20:	e006      	b.n	8002e30 <PROGBAR_SetValue+0x9a>
 8002e22:	4631      	mov	r1, r6
 8002e24:	f7ff ff15 	bl	8002c52 <PROGBAR__Value2Pos>
 8002e28:	4629      	mov	r1, r5
 8002e2a:	f8ad 0008 	strh.w	r0, [sp, #8]
 8002e2e:	4620      	mov	r0, r4
 8002e30:	f7ff ff0f 	bl	8002c52 <PROGBAR__Value2Pos>
 8002e34:	2300      	movs	r3, #0
 8002e36:	f8ad 300a 	strh.w	r3, [sp, #10]
 8002e3a:	f009 0202 	and.w	r2, r9, #2
 8002e3e:	f640 73ff 	movw	r3, #4095	; 0xfff
 8002e42:	f8ad 300e 	strh.w	r3, [sp, #14]
 8002e46:	f8ad 000c 	strh.w	r0, [sp, #12]
 8002e4a:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 8002e4e:	2a00      	cmp	r2, #0
 8002e50:	d141      	bne.n	8002ed6 <PROGBAR_SetValue+0x140>
 8002e52:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8002e54:	9304      	str	r3, [sp, #16]
 8002e56:	9305      	str	r3, [sp, #20]
 8002e58:	f008 fb68 	bl	800b52c <GUI_ALLOC_GetSize>
 8002e5c:	2804      	cmp	r0, #4
 8002e5e:	dc0e      	bgt.n	8002e7e <PROGBAR_SetValue+0xe8>
 8002e60:	9b00      	ldr	r3, [sp, #0]
 8002e62:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8002e64:	4668      	mov	r0, sp
 8002e66:	f008 fb41 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002e6a:	4620      	mov	r0, r4
 8002e6c:	2105      	movs	r1, #5
 8002e6e:	f008 fd41 	bl	800b8f4 <GUI_ALLOC_Realloc>
 8002e72:	4604      	mov	r4, r0
 8002e74:	4640      	mov	r0, r8
 8002e76:	f008 fb2b 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002e7a:	9000      	str	r0, [sp, #0]
 8002e7c:	6384      	str	r4, [r0, #56]	; 0x38
 8002e7e:	9800      	ldr	r0, [sp, #0]
 8002e80:	f7ff fea0 	bl	8002bc4 <PROGBAR__GetTextLocked>
 8002e84:	9001      	str	r0, [sp, #4]
 8002e86:	b338      	cbz	r0, 8002ed8 <PROGBAR_SetValue+0x142>
 8002e88:	9b00      	ldr	r3, [sp, #0]
 8002e8a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002e8c:	f007 fec4 	bl	800ac18 <GUI_SetFont>
 8002e90:	a904      	add	r1, sp, #16
 8002e92:	4606      	mov	r6, r0
 8002e94:	9a01      	ldr	r2, [sp, #4]
 8002e96:	9800      	ldr	r0, [sp, #0]
 8002e98:	f7ff fe97 	bl	8002bca <PROGBAR__GetTextRect>
 8002e9c:	a802      	add	r0, sp, #8
 8002e9e:	aa04      	add	r2, sp, #16
 8002ea0:	ac06      	add	r4, sp, #24
 8002ea2:	4601      	mov	r1, r0
 8002ea4:	f007 fe00 	bl	800aaa8 <GUI_MergeRect>
 8002ea8:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8002eac:	462a      	mov	r2, r5
 8002eae:	f7ff fe6f 	bl	8002b90 <_SetValue>
 8002eb2:	f854 2d14 	ldr.w	r2, [r4, #-20]!
 8002eb6:	9800      	ldr	r0, [sp, #0]
 8002eb8:	a904      	add	r1, sp, #16
 8002eba:	f7ff fe86 	bl	8002bca <PROGBAR__GetTextRect>
 8002ebe:	a802      	add	r0, sp, #8
 8002ec0:	4601      	mov	r1, r0
 8002ec2:	aa04      	add	r2, sp, #16
 8002ec4:	f007 fdf0 	bl	800aaa8 <GUI_MergeRect>
 8002ec8:	4630      	mov	r0, r6
 8002eca:	f007 fea5 	bl	800ac18 <GUI_SetFont>
 8002ece:	4620      	mov	r0, r4
 8002ed0:	f008 fb0c 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002ed4:	e000      	b.n	8002ed8 <PROGBAR_SetValue+0x142>
 8002ed6:	6365      	str	r5, [r4, #52]	; 0x34
 8002ed8:	4640      	mov	r0, r8
 8002eda:	a902      	add	r1, sp, #8
 8002edc:	f002 fcd4 	bl	8005888 <WM_InvalidateRect>
 8002ee0:	4668      	mov	r0, sp
 8002ee2:	f008 fb03 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002ee6:	b007      	add	sp, #28
 8002ee8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08002eec <_OnDelete>:
 8002eec:	b513      	push	{r0, r1, r4, lr}
 8002eee:	4604      	mov	r4, r0
 8002ef0:	f008 faee 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002ef4:	9001      	str	r0, [sp, #4]
 8002ef6:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002ef8:	b120      	cbz	r0, 8002f04 <_OnDelete+0x18>
 8002efa:	f008 fb23 	bl	800b544 <GUI_ALLOC_Free>
 8002efe:	9b01      	ldr	r3, [sp, #4]
 8002f00:	2200      	movs	r2, #0
 8002f02:	625a      	str	r2, [r3, #36]	; 0x24
 8002f04:	a801      	add	r0, sp, #4
 8002f06:	f008 faf1 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002f0a:	4620      	mov	r0, r4
 8002f0c:	f008 fb1a 	bl	800b544 <GUI_ALLOC_Free>
 8002f10:	b002      	add	sp, #8
 8002f12:	bd10      	pop	{r4, pc}

08002f14 <_OnPaint>:
 8002f14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002f18:	b08b      	sub	sp, #44	; 0x2c
 8002f1a:	f008 fad9 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002f1e:	9007      	str	r0, [sp, #28]
 8002f20:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002f22:	2800      	cmp	r0, #0
 8002f24:	d060      	beq.n	8002fe8 <_OnPaint+0xd4>
 8002f26:	f008 fad3 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002f2a:	9b07      	ldr	r3, [sp, #28]
 8002f2c:	9005      	str	r0, [sp, #20]
 8002f2e:	4606      	mov	r6, r0
 8002f30:	6898      	ldr	r0, [r3, #8]
 8002f32:	f008 facd 	bl	800b4d0 <GUI_ALLOC_LockH>
 8002f36:	9b07      	ldr	r3, [sp, #28]
 8002f38:	f8d0 8054 	ldr.w	r8, [r0, #84]	; 0x54
 8002f3c:	6e05      	ldr	r5, [r0, #96]	; 0x60
 8002f3e:	6d87      	ldr	r7, [r0, #88]	; 0x58
 8002f40:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 8002f42:	9006      	str	r0, [sp, #24]
 8002f44:	a908      	add	r1, sp, #32
 8002f46:	6898      	ldr	r0, [r3, #8]
 8002f48:	f001 fd60 	bl	8004a0c <WM_GetInsideRectExScrollbar>
 8002f4c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8002f50:	9a07      	ldr	r2, [sp, #28]
 8002f52:	9806      	ldr	r0, [sp, #24]
 8002f54:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8002f58:	f8d2 9020 	ldr.w	r9, [r2, #32]
 8002f5c:	441f      	add	r7, r3
 8002f5e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8002f62:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8002f66:	f8bd 7026 	ldrh.w	r7, [sp, #38]	; 0x26
 8002f6a:	1b1c      	subs	r4, r3, r4
 8002f6c:	1b7f      	subs	r7, r7, r5
 8002f6e:	6913      	ldr	r3, [r2, #16]
 8002f70:	f8d0 508c 	ldr.w	r5, [r0, #140]	; 0x8c
 8002f74:	1b5d      	subs	r5, r3, r5
 8002f76:	f892 3028 	ldrb.w	r3, [r2, #40]	; 0x28
 8002f7a:	4441      	add	r1, r8
 8002f7c:	b289      	uxth	r1, r1
 8002f7e:	b2a4      	uxth	r4, r4
 8002f80:	b2bf      	uxth	r7, r7
 8002f82:	2b01      	cmp	r3, #1
 8002f84:	f8ad 1020 	strh.w	r1, [sp, #32]
 8002f88:	f8ad 4024 	strh.w	r4, [sp, #36]	; 0x24
 8002f8c:	f8ad 7026 	strh.w	r7, [sp, #38]	; 0x26
 8002f90:	f8d0 8080 	ldr.w	r8, [r0, #128]	; 0x80
 8002f94:	b209      	sxth	r1, r1
 8002f96:	d008      	beq.n	8002faa <_OnPaint+0x96>
 8002f98:	b224      	sxth	r4, r4
 8002f9a:	1b64      	subs	r4, r4, r5
 8002f9c:	3401      	adds	r4, #1
 8002f9e:	42a1      	cmp	r1, r4
 8002fa0:	dd04      	ble.n	8002fac <_OnPaint+0x98>
 8002fa2:	1b0c      	subs	r4, r1, r4
 8002fa4:	eb06 0644 	add.w	r6, r6, r4, lsl #1
 8002fa8:	1b2d      	subs	r5, r5, r4
 8002faa:	460c      	mov	r4, r1
 8002fac:	2d00      	cmp	r5, #0
 8002fae:	dd15      	ble.n	8002fdc <_OnPaint+0xc8>
 8002fb0:	6990      	ldr	r0, [r2, #24]
 8002fb2:	f007 fe2c 	bl	800ac0e <GUI_SetColor>
 8002fb6:	f04f 32ff 	mov.w	r2, #4294967295
 8002fba:	2301      	movs	r3, #1
 8002fbc:	e88d 000c 	stmia.w	sp, {r2, r3}
 8002fc0:	9a07      	ldr	r2, [sp, #28]
 8002fc2:	b23f      	sxth	r7, r7
 8002fc4:	f892 3029 	ldrb.w	r3, [r2, #41]	; 0x29
 8002fc8:	9302      	str	r3, [sp, #8]
 8002fca:	ebc9 0907 	rsb	r9, r9, r7
 8002fce:	4630      	mov	r0, r6
 8002fd0:	4629      	mov	r1, r5
 8002fd2:	4622      	mov	r2, r4
 8002fd4:	eb09 0308 	add.w	r3, r9, r8
 8002fd8:	f006 ffa2 	bl	8009f20 <GUI_DrawGraphEx>
 8002fdc:	a806      	add	r0, sp, #24
 8002fde:	f008 fa85 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002fe2:	a805      	add	r0, sp, #20
 8002fe4:	f008 fa82 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002fe8:	a807      	add	r0, sp, #28
 8002fea:	f008 fa7f 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8002fee:	b00b      	add	sp, #44	; 0x2c
 8002ff0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08002ff4 <_InvalidateNewItem>:
 8002ff4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002ff6:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8002ffa:	2b01      	cmp	r3, #1
 8002ffc:	4604      	mov	r4, r0
 8002ffe:	6880      	ldr	r0, [r0, #8]
 8003000:	d127      	bne.n	8003052 <_InvalidateNewItem+0x5e>
 8003002:	a902      	add	r1, sp, #8
 8003004:	f001 fd02 	bl	8004a0c <WM_GetInsideRectExScrollbar>
 8003008:	68a0      	ldr	r0, [r4, #8]
 800300a:	f008 fa61 	bl	800b4d0 <GUI_ALLOC_LockH>
 800300e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8003012:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8003014:	9001      	str	r0, [sp, #4]
 8003016:	4413      	add	r3, r2
 8003018:	f8ad 300a 	strh.w	r3, [sp, #10]
 800301c:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8003020:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8003022:	1ad3      	subs	r3, r2, r3
 8003024:	f8ad 300e 	strh.w	r3, [sp, #14]
 8003028:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800302a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800302e:	4413      	add	r3, r2
 8003030:	6922      	ldr	r2, [r4, #16]
 8003032:	4413      	add	r3, r2
 8003034:	b29b      	uxth	r3, r3
 8003036:	1e9a      	subs	r2, r3, #2
 8003038:	a801      	add	r0, sp, #4
 800303a:	3b01      	subs	r3, #1
 800303c:	f8ad 2008 	strh.w	r2, [sp, #8]
 8003040:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003044:	f008 fa52 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003048:	68a0      	ldr	r0, [r4, #8]
 800304a:	a902      	add	r1, sp, #8
 800304c:	f002 fc1c 	bl	8005888 <WM_InvalidateRect>
 8003050:	e001      	b.n	8003056 <_InvalidateNewItem+0x62>
 8003052:	f000 fb74 	bl	800373e <GRAPH__InvalidateGraph>
 8003056:	b004      	add	sp, #16
 8003058:	bd10      	pop	{r4, pc}
	...

0800305c <GRAPH_DATA_YT_Create>:
 800305c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003060:	4680      	mov	r8, r0
 8003062:	202c      	movs	r0, #44	; 0x2c
 8003064:	460e      	mov	r6, r1
 8003066:	4617      	mov	r7, r2
 8003068:	461d      	mov	r5, r3
 800306a:	f008 fc2b 	bl	800b8c4 <GUI_ALLOC_AllocZero>
 800306e:	4604      	mov	r4, r0
 8003070:	b320      	cbz	r0, 80030bc <GRAPH_DATA_YT_Create+0x60>
 8003072:	0070      	lsls	r0, r6, #1
 8003074:	f008 fc26 	bl	800b8c4 <GUI_ALLOC_AllocZero>
 8003078:	4681      	mov	r9, r0
 800307a:	b160      	cbz	r0, 8003096 <GRAPH_DATA_YT_Create+0x3a>
 800307c:	b15f      	cbz	r7, 8003096 <GRAPH_DATA_YT_Create+0x3a>
 800307e:	b155      	cbz	r5, 8003096 <GRAPH_DATA_YT_Create+0x3a>
 8003080:	f008 fa26 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003084:	4b0f      	ldr	r3, [pc, #60]	; (80030c4 <GRAPH_DATA_YT_Create+0x68>)
 8003086:	9001      	str	r0, [sp, #4]
 8003088:	681b      	ldr	r3, [r3, #0]
 800308a:	4639      	mov	r1, r7
 800308c:	006a      	lsls	r2, r5, #1
 800308e:	4798      	blx	r3
 8003090:	a801      	add	r0, sp, #4
 8003092:	f008 fa2b 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003096:	4620      	mov	r0, r4
 8003098:	f008 fa1a 	bl	800b4d0 <GUI_ALLOC_LockH>
 800309c:	4b0a      	ldr	r3, [pc, #40]	; (80030c8 <GRAPH_DATA_YT_Create+0x6c>)
 800309e:	9001      	str	r0, [sp, #4]
 80030a0:	60c3      	str	r3, [r0, #12]
 80030a2:	4b0a      	ldr	r3, [pc, #40]	; (80030cc <GRAPH_DATA_YT_Create+0x70>)
 80030a4:	6003      	str	r3, [r0, #0]
 80030a6:	4b0a      	ldr	r3, [pc, #40]	; (80030d0 <GRAPH_DATA_YT_Create+0x74>)
 80030a8:	f8c0 9024 	str.w	r9, [r0, #36]	; 0x24
 80030ac:	f8c0 8018 	str.w	r8, [r0, #24]
 80030b0:	6146      	str	r6, [r0, #20]
 80030b2:	6105      	str	r5, [r0, #16]
 80030b4:	6043      	str	r3, [r0, #4]
 80030b6:	a801      	add	r0, sp, #4
 80030b8:	f008 fa18 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80030bc:	4620      	mov	r0, r4
 80030be:	b003      	add	sp, #12
 80030c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80030c4:	200000a8 	.word	0x200000a8
 80030c8:	08002ff5 	.word	0x08002ff5
 80030cc:	08002f15 	.word	0x08002f15
 80030d0:	08002eed 	.word	0x08002eed

080030d4 <GRAPH_DATA_YT_AddValue>:
 80030d4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80030d6:	f8ad 1006 	strh.w	r1, [sp, #6]
 80030da:	f008 f9f9 	bl	800b4d0 <GUI_ALLOC_LockH>
 80030de:	9002      	str	r0, [sp, #8]
 80030e0:	b168      	cbz	r0, 80030fe <GRAPH_DATA_YT_AddValue+0x2a>
 80030e2:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80030e4:	f008 f9f4 	bl	800b4d0 <GUI_ALLOC_LockH>
 80030e8:	f10d 0206 	add.w	r2, sp, #6
 80030ec:	4601      	mov	r1, r0
 80030ee:	9003      	str	r0, [sp, #12]
 80030f0:	2302      	movs	r3, #2
 80030f2:	9802      	ldr	r0, [sp, #8]
 80030f4:	f000 fb52 	bl	800379c <GRAPH__AddValue>
 80030f8:	a803      	add	r0, sp, #12
 80030fa:	f008 f9f7 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80030fe:	a802      	add	r0, sp, #8
 8003100:	f008 f9f4 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003104:	b005      	add	sp, #20
 8003106:	f85d fb04 	ldr.w	pc, [sp], #4

0800310a <GRAPH_DATA_YT_SetAlign>:
 800310a:	b513      	push	{r0, r1, r4, lr}
 800310c:	460c      	mov	r4, r1
 800310e:	f008 f9df 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003112:	9001      	str	r0, [sp, #4]
 8003114:	b140      	cbz	r0, 8003128 <GRAPH_DATA_YT_SetAlign+0x1e>
 8003116:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800311a:	42a3      	cmp	r3, r4
 800311c:	d004      	beq.n	8003128 <GRAPH_DATA_YT_SetAlign+0x1e>
 800311e:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 8003122:	6880      	ldr	r0, [r0, #8]
 8003124:	f002 fbec 	bl	8005900 <WM_InvalidateWindow>
 8003128:	a801      	add	r0, sp, #4
 800312a:	f008 f9df 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800312e:	b002      	add	sp, #8
 8003130:	bd10      	pop	{r4, pc}

08003132 <GRAPH_DATA_YT_Clear>:
 8003132:	b513      	push	{r0, r1, r4, lr}
 8003134:	b160      	cbz	r0, 8003150 <GRAPH_DATA_YT_Clear+0x1e>
 8003136:	f008 f9cb 	bl	800b4d0 <GUI_ALLOC_LockH>
 800313a:	ac02      	add	r4, sp, #8
 800313c:	2300      	movs	r3, #0
 800313e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8003142:	6103      	str	r3, [r0, #16]
 8003144:	6880      	ldr	r0, [r0, #8]
 8003146:	f002 fbdb 	bl	8005900 <WM_InvalidateWindow>
 800314a:	4620      	mov	r0, r4
 800314c:	f008 f9ce 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003150:	b002      	add	sp, #8
 8003152:	bd10      	pop	{r4, pc}

08003154 <_ManageScrollbars>:
 8003154:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003156:	b08b      	sub	sp, #44	; 0x2c
 8003158:	a902      	add	r1, sp, #8
 800315a:	4604      	mov	r4, r0
 800315c:	f001 fc56 	bl	8004a0c <WM_GetInsideRectExScrollbar>
 8003160:	4620      	mov	r0, r4
 8003162:	f008 f9b5 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003166:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800316a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800316e:	9001      	str	r0, [sp, #4]
 8003170:	1ab6      	subs	r6, r6, r2
 8003172:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8003174:	6d45      	ldr	r5, [r0, #84]	; 0x54
 8003176:	6dc7      	ldr	r7, [r0, #92]	; 0x5c
 8003178:	1ab6      	subs	r6, r6, r2
 800317a:	6e02      	ldr	r2, [r0, #96]	; 0x60
 800317c:	1ab6      	subs	r6, r6, r2
 800317e:	f8b0 2078 	ldrh.w	r2, [r0, #120]	; 0x78
 8003182:	0751      	lsls	r1, r2, #29
 8003184:	d407      	bmi.n	8003196 <_ManageScrollbars+0x42>
 8003186:	6f41      	ldr	r1, [r0, #116]	; 0x74
 8003188:	42b1      	cmp	r1, r6
 800318a:	4620      	mov	r0, r4
 800318c:	bfd4      	ite	le
 800318e:	2100      	movle	r1, #0
 8003190:	2101      	movgt	r1, #1
 8003192:	f001 f963 	bl	800445c <WM_SetScrollbarV>
 8003196:	9b01      	ldr	r3, [sp, #4]
 8003198:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 800319c:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 800319e:	67da      	str	r2, [r3, #124]	; 0x7c
 80031a0:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80031a4:	f8c3 6084 	str.w	r6, [r3, #132]	; 0x84
 80031a8:	1a8a      	subs	r2, r1, r2
 80031aa:	1b55      	subs	r5, r2, r5
 80031ac:	f8b3 2078 	ldrh.w	r2, [r3, #120]	; 0x78
 80031b0:	0792      	lsls	r2, r2, #30
 80031b2:	ebc7 0505 	rsb	r5, r7, r5
 80031b6:	d407      	bmi.n	80031c8 <_ManageScrollbars+0x74>
 80031b8:	6f19      	ldr	r1, [r3, #112]	; 0x70
 80031ba:	42a9      	cmp	r1, r5
 80031bc:	4620      	mov	r0, r4
 80031be:	bfd4      	ite	le
 80031c0:	2100      	movle	r1, #0
 80031c2:	2101      	movgt	r1, #1
 80031c4:	f001 f948 	bl	8004458 <WM_SetScrollbarH>
 80031c8:	9801      	ldr	r0, [sp, #4]
 80031ca:	6f03      	ldr	r3, [r0, #112]	; 0x70
 80031cc:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 80031d0:	f8c0 5090 	str.w	r5, [r0, #144]	; 0x90
 80031d4:	307c      	adds	r0, #124	; 0x7c
 80031d6:	f001 faf5 	bl	80047c4 <WM_CheckScrollBounds>
 80031da:	9801      	ldr	r0, [sp, #4]
 80031dc:	3088      	adds	r0, #136	; 0x88
 80031de:	f001 faf1 	bl	80047c4 <WM_CheckScrollBounds>
 80031e2:	9b01      	ldr	r3, [sp, #4]
 80031e4:	f103 027c 	add.w	r2, r3, #124	; 0x7c
 80031e8:	ca07      	ldmia	r2, {r0, r1, r2}
 80031ea:	3388      	adds	r3, #136	; 0x88
 80031ec:	ae07      	add	r6, sp, #28
 80031ee:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 80031f2:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80031f6:	ad04      	add	r5, sp, #16
 80031f8:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 80031fc:	a801      	add	r0, sp, #4
 80031fe:	f008 f975 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003202:	4620      	mov	r0, r4
 8003204:	4631      	mov	r1, r6
 8003206:	462a      	mov	r2, r5
 8003208:	f008 fdcd 	bl	800bda6 <WIDGET__SetScrollState>
 800320c:	b00b      	add	sp, #44	; 0x2c
 800320e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003210 <_OnScrollValueChanged>:
 8003210:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003212:	460c      	mov	r4, r1
 8003214:	4606      	mov	r6, r0
 8003216:	f008 f95b 	bl	800b4d0 <GUI_ALLOC_LockH>
 800321a:	9001      	str	r0, [sp, #4]
 800321c:	4620      	mov	r0, r4
 800321e:	f009 f901 	bl	800c424 <SCROLLBAR_GetValue>
 8003222:	4605      	mov	r5, r0
 8003224:	4620      	mov	r0, r4
 8003226:	f001 faf5 	bl	8004814 <WM_GetId>
 800322a:	9b01      	ldr	r3, [sp, #4]
 800322c:	28fe      	cmp	r0, #254	; 0xfe
 800322e:	bf0c      	ite	eq
 8003230:	f8c3 5080 	streq.w	r5, [r3, #128]	; 0x80
 8003234:	f8c3 508c 	strne.w	r5, [r3, #140]	; 0x8c
 8003238:	4630      	mov	r0, r6
 800323a:	f002 fb61 	bl	8005900 <WM_InvalidateWindow>
 800323e:	a801      	add	r0, sp, #4
 8003240:	f008 f954 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003244:	b002      	add	sp, #8
 8003246:	bd70      	pop	{r4, r5, r6, pc}

08003248 <GRAPH_Callback>:
 8003248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800324c:	6844      	ldr	r4, [r0, #4]
 800324e:	6806      	ldr	r6, [r0, #0]
 8003250:	4605      	mov	r5, r0
 8003252:	b097      	sub	sp, #92	; 0x5c
 8003254:	4620      	mov	r0, r4
 8003256:	4629      	mov	r1, r5
 8003258:	f008 fd05 	bl	800bc66 <WIDGET_HandleActive>
 800325c:	f5b6 7f40 	cmp.w	r6, #768	; 0x300
 8003260:	4607      	mov	r7, r0
 8003262:	d102      	bne.n	800326a <GRAPH_Callback+0x22>
 8003264:	4620      	mov	r0, r4
 8003266:	f7ff ff75 	bl	8003154 <_ManageScrollbars>
 800326a:	2f00      	cmp	r7, #0
 800326c:	f000 8264 	beq.w	8003738 <GRAPH_Callback+0x4f0>
 8003270:	682b      	ldr	r3, [r5, #0]
 8003272:	2b0b      	cmp	r3, #11
 8003274:	f000 8200 	beq.w	8003678 <GRAPH_Callback+0x430>
 8003278:	dc06      	bgt.n	8003288 <GRAPH_Callback+0x40>
 800327a:	2b05      	cmp	r3, #5
 800327c:	f040 8259 	bne.w	8003732 <GRAPH_Callback+0x4ea>
 8003280:	4620      	mov	r0, r4
 8003282:	f7ff ff67 	bl	8003154 <_ManageScrollbars>
 8003286:	e254      	b.n	8003732 <GRAPH_Callback+0x4ea>
 8003288:	2b0f      	cmp	r3, #15
 800328a:	d003      	beq.n	8003294 <GRAPH_Callback+0x4c>
 800328c:	2b26      	cmp	r3, #38	; 0x26
 800328e:	f000 823d 	beq.w	800370c <GRAPH_Callback+0x4c4>
 8003292:	e24e      	b.n	8003732 <GRAPH_Callback+0x4ea>
 8003294:	68ed      	ldr	r5, [r5, #12]
 8003296:	9502      	str	r5, [sp, #8]
 8003298:	4620      	mov	r0, r4
 800329a:	f008 f919 	bl	800b4d0 <GUI_ALLOC_LockH>
 800329e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80032a0:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	f8d0 9054 	ldr.w	r9, [r0, #84]	; 0x54
 80032a8:	f8d0 b058 	ldr.w	fp, [r0, #88]	; 0x58
 80032ac:	f8d0 a060 	ldr.w	sl, [r0, #96]	; 0x60
 80032b0:	900d      	str	r0, [sp, #52]	; 0x34
 80032b2:	ad0e      	add	r5, sp, #56	; 0x38
 80032b4:	4628      	mov	r0, r5
 80032b6:	9303      	str	r3, [sp, #12]
 80032b8:	9101      	str	r1, [sp, #4]
 80032ba:	f001 fa5b 	bl	8004774 <WM_GetClientRect>
 80032be:	980d      	ldr	r0, [sp, #52]	; 0x34
 80032c0:	4629      	mov	r1, r5
 80032c2:	f008 fda1 	bl	800be08 <WIDGET__EFFECT_DrawDownRect>
 80032c6:	e895 0003 	ldmia.w	r5, {r0, r1}
 80032ca:	ab12      	add	r3, sp, #72	; 0x48
 80032cc:	e883 0003 	stmia.w	r3, {r0, r1}
 80032d0:	9803      	ldr	r0, [sp, #12]
 80032d2:	f8bd 104a 	ldrh.w	r1, [sp, #74]	; 0x4a
 80032d6:	b282      	uxth	r2, r0
 80032d8:	4459      	add	r1, fp
 80032da:	f8bd 004e 	ldrh.w	r0, [sp, #78]	; 0x4e
 80032de:	4411      	add	r1, r2
 80032e0:	f8ad 104a 	strh.w	r1, [sp, #74]	; 0x4a
 80032e4:	eb02 010a 	add.w	r1, r2, sl
 80032e8:	1a41      	subs	r1, r0, r1
 80032ea:	f8ad 104e 	strh.w	r1, [sp, #78]	; 0x4e
 80032ee:	f8bd 1048 	ldrh.w	r1, [sp, #72]	; 0x48
 80032f2:	4411      	add	r1, r2
 80032f4:	4449      	add	r1, r9
 80032f6:	f8ad 1048 	strh.w	r1, [sp, #72]	; 0x48
 80032fa:	9901      	ldr	r1, [sp, #4]
 80032fc:	440a      	add	r2, r1
 80032fe:	f8bd 104c 	ldrh.w	r1, [sp, #76]	; 0x4c
 8003302:	1a8a      	subs	r2, r1, r2
 8003304:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
 8003308:	e893 0003 	ldmia.w	r3, {r0, r1}
 800330c:	aa10      	add	r2, sp, #64	; 0x40
 800330e:	e882 0003 	stmia.w	r2, {r0, r1}
 8003312:	4610      	mov	r0, r2
 8003314:	f001 fd34 	bl	8004d80 <WM_SetUserClipRect>
 8003318:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800331a:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800331c:	f007 fc75 	bl	800ac0a <GUI_SetBkColor>
 8003320:	f007 fa62 	bl	800a7e8 <GUI_Clear>
 8003324:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003326:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800332a:	b113      	cbz	r3, 8003332 <GRAPH_Callback+0xea>
 800332c:	4620      	mov	r0, r4
 800332e:	2100      	movs	r1, #0
 8003330:	4798      	blx	r3
 8003332:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8003334:	f895 306c 	ldrb.w	r3, [r5, #108]	; 0x6c
 8003338:	2b00      	cmp	r3, #0
 800333a:	f000 808d 	beq.w	8003458 <GRAPH_Callback+0x210>
 800333e:	4620      	mov	r0, r4
 8003340:	a914      	add	r1, sp, #80	; 0x50
 8003342:	f001 fb63 	bl	8004a0c <WM_GetInsideRectExScrollbar>
 8003346:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8003348:	f8bd 0056 	ldrh.w	r0, [sp, #86]	; 0x56
 800334c:	681b      	ldr	r3, [r3, #0]
 800334e:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8003352:	f8bd 1052 	ldrh.w	r1, [sp, #82]	; 0x52
 8003356:	9304      	str	r3, [sp, #16]
 8003358:	9007      	str	r0, [sp, #28]
 800335a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800335e:	6c28      	ldr	r0, [r5, #64]	; 0x40
 8003360:	9205      	str	r2, [sp, #20]
 8003362:	9306      	str	r3, [sp, #24]
 8003364:	9108      	str	r1, [sp, #32]
 8003366:	6c6e      	ldr	r6, [r5, #68]	; 0x44
 8003368:	6caf      	ldr	r7, [r5, #72]	; 0x48
 800336a:	f007 fc50 	bl	800ac0e <GUI_SetColor>
 800336e:	f007 fb83 	bl	800aa78 <GUI_GetLineStyle>
 8003372:	9009      	str	r0, [sp, #36]	; 0x24
 8003374:	b916      	cbnz	r6, 800337c <GRAPH_Callback+0x134>
 8003376:	2f00      	cmp	r7, #0
 8003378:	d14b      	bne.n	8003412 <GRAPH_Callback+0x1ca>
 800337a:	e046      	b.n	800340a <GRAPH_Callback+0x1c2>
 800337c:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 800337e:	eb06 0c03 	add.w	ip, r6, r3
 8003382:	f8b5 3078 	ldrh.w	r3, [r5, #120]	; 0x78
 8003386:	07db      	lsls	r3, r3, #31
 8003388:	bf54      	ite	pl
 800338a:	f8d5 308c 	ldrpl.w	r3, [r5, #140]	; 0x8c
 800338e:	2300      	movmi	r3, #0
 8003390:	eb0c 0803 	add.w	r8, ip, r3
 8003394:	45b0      	cmp	r8, r6
 8003396:	db02      	blt.n	800339e <GRAPH_Callback+0x156>
 8003398:	ebc6 0808 	rsb	r8, r6, r8
 800339c:	e7fa      	b.n	8003394 <GRAPH_Callback+0x14c>
 800339e:	f895 007a 	ldrb.w	r0, [r5, #122]	; 0x7a
 80033a2:	f007 fc43 	bl	800ac2c <GUI_SetLineStyle>
 80033a6:	9805      	ldr	r0, [sp, #20]
 80033a8:	9a01      	ldr	r2, [sp, #4]
 80033aa:	b203      	sxth	r3, r0
 80033ac:	9806      	ldr	r0, [sp, #24]
 80033ae:	444a      	add	r2, r9
 80033b0:	b201      	sxth	r1, r0
 80033b2:	f1c2 0201 	rsb	r2, r2, #1
 80033b6:	1a5b      	subs	r3, r3, r1
 80033b8:	4413      	add	r3, r2
 80033ba:	4598      	cmp	r8, r3
 80033bc:	dadb      	bge.n	8003376 <GRAPH_Callback+0x12e>
 80033be:	9804      	ldr	r0, [sp, #16]
 80033c0:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 80033c4:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80033c8:	f895 207a 	ldrb.w	r2, [r5, #122]	; 0x7a
 80033cc:	4448      	add	r0, r9
 80033ce:	4440      	add	r0, r8
 80033d0:	4459      	add	r1, fp
 80033d2:	ebca 0303 	rsb	r3, sl, r3
 80033d6:	b11a      	cbz	r2, 80033e0 <GRAPH_Callback+0x198>
 80033d8:	4602      	mov	r2, r0
 80033da:	f006 fcd9 	bl	8009d90 <GUI_DrawLine>
 80033de:	e002      	b.n	80033e6 <GRAPH_Callback+0x19e>
 80033e0:	461a      	mov	r2, r3
 80033e2:	f006 fd4d 	bl	8009e80 <GUI_DrawVLine>
 80033e6:	44b0      	add	r8, r6
 80033e8:	e7dd      	b.n	80033a6 <GRAPH_Callback+0x15e>
 80033ea:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 80033ee:	f007 fc1d 	bl	800ac2c <GUI_SetLineStyle>
 80033f2:	9907      	ldr	r1, [sp, #28]
 80033f4:	9808      	ldr	r0, [sp, #32]
 80033f6:	b20b      	sxth	r3, r1
 80033f8:	eb0b 020a 	add.w	r2, fp, sl
 80033fc:	b201      	sxth	r1, r0
 80033fe:	f1c2 0201 	rsb	r2, r2, #1
 8003402:	1a5b      	subs	r3, r3, r1
 8003404:	4413      	add	r3, r2
 8003406:	429e      	cmp	r6, r3
 8003408:	db0c      	blt.n	8003424 <GRAPH_Callback+0x1dc>
 800340a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800340c:	f007 fc0e 	bl	800ac2c <GUI_SetLineStyle>
 8003410:	e022      	b.n	8003458 <GRAPH_Callback+0x210>
 8003412:	6d2e      	ldr	r6, [r5, #80]	; 0x50
 8003414:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
 8003418:	443e      	add	r6, r7
 800341a:	1af6      	subs	r6, r6, r3
 800341c:	42be      	cmp	r6, r7
 800341e:	dbe4      	blt.n	80033ea <GRAPH_Callback+0x1a2>
 8003420:	1bf6      	subs	r6, r6, r7
 8003422:	e7fb      	b.n	800341c <GRAPH_Callback+0x1d4>
 8003424:	9801      	ldr	r0, [sp, #4]
 8003426:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 800342a:	f9bd 1056 	ldrsh.w	r1, [sp, #86]	; 0x56
 800342e:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 8003432:	1a12      	subs	r2, r2, r0
 8003434:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 8003438:	ebca 0101 	rsb	r1, sl, r1
 800343c:	1b89      	subs	r1, r1, r6
 800343e:	444b      	add	r3, r9
 8003440:	b120      	cbz	r0, 800344c <GRAPH_Callback+0x204>
 8003442:	4618      	mov	r0, r3
 8003444:	460b      	mov	r3, r1
 8003446:	f006 fca3 	bl	8009d90 <GUI_DrawLine>
 800344a:	e003      	b.n	8003454 <GRAPH_Callback+0x20c>
 800344c:	4608      	mov	r0, r1
 800344e:	4619      	mov	r1, r3
 8003450:	f006 fcbc 	bl	8009dcc <GUI_DrawHLine>
 8003454:	443e      	add	r6, r7
 8003456:	e7cc      	b.n	80033f2 <GRAPH_Callback+0x1aa>
 8003458:	9a03      	ldr	r2, [sp, #12]
 800345a:	a812      	add	r0, sp, #72	; 0x48
 800345c:	a90e      	add	r1, sp, #56	; 0x38
 800345e:	f005 fd62 	bl	8008f26 <GUI__ReduceRect>
 8003462:	a812      	add	r0, sp, #72	; 0x48
 8003464:	f001 fc8c 	bl	8004d80 <WM_SetUserClipRect>
 8003468:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800346a:	f893 203b 	ldrb.w	r2, [r3, #59]	; 0x3b
 800346e:	2aff      	cmp	r2, #255	; 0xff
 8003470:	f000 80a3 	beq.w	80035ba <GRAPH_Callback+0x372>
 8003474:	f1b9 0f00 	cmp.w	r9, #0
 8003478:	d108      	bne.n	800348c <GRAPH_Callback+0x244>
 800347a:	f1bb 0f00 	cmp.w	fp, #0
 800347e:	d105      	bne.n	800348c <GRAPH_Callback+0x244>
 8003480:	9901      	ldr	r1, [sp, #4]
 8003482:	b919      	cbnz	r1, 800348c <GRAPH_Callback+0x244>
 8003484:	f1ba 0f00 	cmp.w	sl, #0
 8003488:	f000 8097 	beq.w	80035ba <GRAPH_Callback+0x372>
 800348c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800348e:	a914      	add	r1, sp, #80	; 0x50
 8003490:	4620      	mov	r0, r4
 8003492:	6815      	ldr	r5, [r2, #0]
 8003494:	9300      	str	r3, [sp, #0]
 8003496:	f001 fab9 	bl	8004a0c <WM_GetInsideRectExScrollbar>
 800349a:	f001 fa33 	bl	8004904 <WM_GetOrgX>
 800349e:	9004      	str	r0, [sp, #16]
 80034a0:	f001 fa38 	bl	8004914 <WM_GetOrgY>
 80034a4:	f9bd 2052 	ldrsh.w	r2, [sp, #82]	; 0x52
 80034a8:	9b00      	ldr	r3, [sp, #0]
 80034aa:	f9bd 6054 	ldrsh.w	r6, [sp, #84]	; 0x54
 80034ae:	9005      	str	r0, [sp, #20]
 80034b0:	445a      	add	r2, fp
 80034b2:	9203      	str	r2, [sp, #12]
 80034b4:	9a01      	ldr	r2, [sp, #4]
 80034b6:	6b98      	ldr	r0, [r3, #56]	; 0x38
 80034b8:	f9bd 7050 	ldrsh.w	r7, [sp, #80]	; 0x50
 80034bc:	f9bd 8056 	ldrsh.w	r8, [sp, #86]	; 0x56
 80034c0:	1ab6      	subs	r6, r6, r2
 80034c2:	f007 fba2 	bl	800ac0a <GUI_SetBkColor>
 80034c6:	9b00      	ldr	r3, [sp, #0]
 80034c8:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 80034ca:	444f      	add	r7, r9
 80034cc:	ebca 0808 	rsb	r8, sl, r8
 80034d0:	f007 fb9d 	bl	800ac0e <GUI_SetColor>
 80034d4:	f1b9 0f00 	cmp.w	r9, #0
 80034d8:	d01b      	beq.n	8003512 <GRAPH_Callback+0x2ca>
 80034da:	9802      	ldr	r0, [sp, #8]
 80034dc:	9904      	ldr	r1, [sp, #16]
 80034de:	f9b0 3000 	ldrsh.w	r3, [r0]
 80034e2:	f109 32ff 	add.w	r2, r9, #4294967295
 80034e6:	442a      	add	r2, r5
 80034e8:	1a5b      	subs	r3, r3, r1
 80034ea:	4293      	cmp	r3, r2
 80034ec:	dc11      	bgt.n	8003512 <GRAPH_Callback+0x2ca>
 80034ee:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80034f2:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 80034f6:	ebca 0303 	rsb	r3, sl, r3
 80034fa:	eb05 010b 	add.w	r1, r5, fp
 80034fe:	3301      	adds	r3, #1
 8003500:	f007 f940 	bl	800a784 <GUI_ClearRect>
 8003504:	9a03      	ldr	r2, [sp, #12]
 8003506:	1e78      	subs	r0, r7, #1
 8003508:	1e51      	subs	r1, r2, #1
 800350a:	f108 0201 	add.w	r2, r8, #1
 800350e:	f006 fcb7 	bl	8009e80 <GUI_DrawVLine>
 8003512:	f1bb 0f00 	cmp.w	fp, #0
 8003516:	d017      	beq.n	8003548 <GRAPH_Callback+0x300>
 8003518:	9802      	ldr	r0, [sp, #8]
 800351a:	9905      	ldr	r1, [sp, #20]
 800351c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8003520:	f10b 33ff 	add.w	r3, fp, #4294967295
 8003524:	442b      	add	r3, r5
 8003526:	1a52      	subs	r2, r2, r1
 8003528:	429a      	cmp	r2, r3
 800352a:	dc0d      	bgt.n	8003548 <GRAPH_Callback+0x300>
 800352c:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 8003530:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 8003534:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8003538:	f007 f924 	bl	800a784 <GUI_ClearRect>
 800353c:	9a03      	ldr	r2, [sp, #12]
 800353e:	1e79      	subs	r1, r7, #1
 8003540:	1e50      	subs	r0, r2, #1
 8003542:	1c72      	adds	r2, r6, #1
 8003544:	f006 fc42 	bl	8009dcc <GUI_DrawHLine>
 8003548:	9b01      	ldr	r3, [sp, #4]
 800354a:	b1d3      	cbz	r3, 8003582 <GRAPH_Callback+0x33a>
 800354c:	9902      	ldr	r1, [sp, #8]
 800354e:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8003552:	1ad0      	subs	r0, r2, r3
 8003554:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8003558:	9904      	ldr	r1, [sp, #16]
 800355a:	3001      	adds	r0, #1
 800355c:	1a5b      	subs	r3, r3, r1
 800355e:	4283      	cmp	r3, r0
 8003560:	db0f      	blt.n	8003582 <GRAPH_Callback+0x33a>
 8003562:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8003566:	ebca 0303 	rsb	r3, sl, r3
 800356a:	eb05 010b 	add.w	r1, r5, fp
 800356e:	3301      	adds	r3, #1
 8003570:	f007 f908 	bl	800a784 <GUI_ClearRect>
 8003574:	9a03      	ldr	r2, [sp, #12]
 8003576:	1c70      	adds	r0, r6, #1
 8003578:	1e51      	subs	r1, r2, #1
 800357a:	f108 0201 	add.w	r2, r8, #1
 800357e:	f006 fc7f 	bl	8009e80 <GUI_DrawVLine>
 8003582:	f1ba 0f00 	cmp.w	sl, #0
 8003586:	d018      	beq.n	80035ba <GRAPH_Callback+0x372>
 8003588:	9802      	ldr	r0, [sp, #8]
 800358a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 800358e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8003592:	9805      	ldr	r0, [sp, #20]
 8003594:	ebca 0103 	rsb	r1, sl, r3
 8003598:	3101      	adds	r1, #1
 800359a:	ebc0 0a02 	rsb	sl, r0, r2
 800359e:	458a      	cmp	sl, r1
 80035a0:	db0b      	blt.n	80035ba <GRAPH_Callback+0x372>
 80035a2:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 80035a6:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80035aa:	f007 f8eb 	bl	800a784 <GUI_ClearRect>
 80035ae:	f108 0001 	add.w	r0, r8, #1
 80035b2:	1e79      	subs	r1, r7, #1
 80035b4:	1c72      	adds	r2, r6, #1
 80035b6:	f006 fc09 	bl	8009dcc <GUI_DrawHLine>
 80035ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80035bc:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80035c0:	b113      	cbz	r3, 80035c8 <GRAPH_Callback+0x380>
 80035c2:	4620      	mov	r0, r4
 80035c4:	2101      	movs	r1, #1
 80035c6:	4798      	blx	r3
 80035c8:	a810      	add	r0, sp, #64	; 0x40
 80035ca:	f001 fbd9 	bl	8004d80 <WM_SetUserClipRect>
 80035ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80035d0:	6e58      	ldr	r0, [r3, #100]	; 0x64
 80035d2:	f009 f8b7 	bl	800c744 <GUI_ARRAY_GetNumItems>
 80035d6:	2500      	movs	r5, #0
 80035d8:	4607      	mov	r7, r0
 80035da:	42bd      	cmp	r5, r7
 80035dc:	d01a      	beq.n	8003614 <GRAPH_Callback+0x3cc>
 80035de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80035e0:	4629      	mov	r1, r5
 80035e2:	6e58      	ldr	r0, [r3, #100]	; 0x64
 80035e4:	f009 f930 	bl	800c848 <GUI_ARRAY_GethItem>
 80035e8:	f007 ff72 	bl	800b4d0 <GUI_ALLOC_LockH>
 80035ec:	9014      	str	r0, [sp, #80]	; 0x50
 80035ee:	b178      	cbz	r0, 8003610 <GRAPH_Callback+0x3c8>
 80035f0:	6806      	ldr	r6, [r0, #0]
 80035f2:	4630      	mov	r0, r6
 80035f4:	f007 ff6c 	bl	800b4d0 <GUI_ALLOC_LockH>
 80035f8:	900c      	str	r0, [sp, #48]	; 0x30
 80035fa:	b130      	cbz	r0, 800360a <GRAPH_Callback+0x3c2>
 80035fc:	6803      	ldr	r3, [r0, #0]
 80035fe:	9902      	ldr	r1, [sp, #8]
 8003600:	4630      	mov	r0, r6
 8003602:	4798      	blx	r3
 8003604:	a80c      	add	r0, sp, #48	; 0x30
 8003606:	f007 ff71 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800360a:	a814      	add	r0, sp, #80	; 0x50
 800360c:	f007 ff6e 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003610:	3501      	adds	r5, #1
 8003612:	e7e2      	b.n	80035da <GRAPH_Callback+0x392>
 8003614:	a812      	add	r0, sp, #72	; 0x48
 8003616:	f001 fbb3 	bl	8004d80 <WM_SetUserClipRect>
 800361a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800361c:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800361e:	f009 f891 	bl	800c744 <GUI_ARRAY_GetNumItems>
 8003622:	2500      	movs	r5, #0
 8003624:	4607      	mov	r7, r0
 8003626:	42bd      	cmp	r5, r7
 8003628:	d01a      	beq.n	8003660 <GRAPH_Callback+0x418>
 800362a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800362c:	4629      	mov	r1, r5
 800362e:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8003630:	f009 f90a 	bl	800c848 <GUI_ARRAY_GethItem>
 8003634:	f007 ff4c 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003638:	9014      	str	r0, [sp, #80]	; 0x50
 800363a:	b178      	cbz	r0, 800365c <GRAPH_Callback+0x414>
 800363c:	6806      	ldr	r6, [r0, #0]
 800363e:	4630      	mov	r0, r6
 8003640:	f007 ff46 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003644:	900b      	str	r0, [sp, #44]	; 0x2c
 8003646:	b130      	cbz	r0, 8003656 <GRAPH_Callback+0x40e>
 8003648:	6803      	ldr	r3, [r0, #0]
 800364a:	9902      	ldr	r1, [sp, #8]
 800364c:	4630      	mov	r0, r6
 800364e:	4798      	blx	r3
 8003650:	a80b      	add	r0, sp, #44	; 0x2c
 8003652:	f007 ff4b 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003656:	a814      	add	r0, sp, #80	; 0x50
 8003658:	f007 ff48 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800365c:	3501      	adds	r5, #1
 800365e:	e7e2      	b.n	8003626 <GRAPH_Callback+0x3de>
 8003660:	2000      	movs	r0, #0
 8003662:	f001 fb8d 	bl	8004d80 <WM_SetUserClipRect>
 8003666:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003668:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800366c:	b113      	cbz	r3, 8003674 <GRAPH_Callback+0x42c>
 800366e:	4620      	mov	r0, r4
 8003670:	2102      	movs	r1, #2
 8003672:	4798      	blx	r3
 8003674:	a80d      	add	r0, sp, #52	; 0x34
 8003676:	e046      	b.n	8003706 <GRAPH_Callback+0x4be>
 8003678:	4620      	mov	r0, r4
 800367a:	f007 ff29 	bl	800b4d0 <GUI_ALLOC_LockH>
 800367e:	9012      	str	r0, [sp, #72]	; 0x48
 8003680:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8003682:	f009 f85f 	bl	800c744 <GUI_ARRAY_GetNumItems>
 8003686:	2400      	movs	r4, #0
 8003688:	4606      	mov	r6, r0
 800368a:	42b4      	cmp	r4, r6
 800368c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800368e:	da18      	bge.n	80036c2 <GRAPH_Callback+0x47a>
 8003690:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8003692:	4621      	mov	r1, r4
 8003694:	f009 f8d8 	bl	800c848 <GUI_ARRAY_GethItem>
 8003698:	f007 ff1a 	bl	800b4d0 <GUI_ALLOC_LockH>
 800369c:	9014      	str	r0, [sp, #80]	; 0x50
 800369e:	b170      	cbz	r0, 80036be <GRAPH_Callback+0x476>
 80036a0:	6805      	ldr	r5, [r0, #0]
 80036a2:	4628      	mov	r0, r5
 80036a4:	f007 ff14 	bl	800b4d0 <GUI_ALLOC_LockH>
 80036a8:	9010      	str	r0, [sp, #64]	; 0x40
 80036aa:	b128      	cbz	r0, 80036b8 <GRAPH_Callback+0x470>
 80036ac:	6847      	ldr	r7, [r0, #4]
 80036ae:	a810      	add	r0, sp, #64	; 0x40
 80036b0:	f007 ff1c 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80036b4:	4628      	mov	r0, r5
 80036b6:	47b8      	blx	r7
 80036b8:	a814      	add	r0, sp, #80	; 0x50
 80036ba:	f007 ff17 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80036be:	3401      	adds	r4, #1
 80036c0:	e7e3      	b.n	800368a <GRAPH_Callback+0x442>
 80036c2:	6e98      	ldr	r0, [r3, #104]	; 0x68
 80036c4:	f009 f83e 	bl	800c744 <GUI_ARRAY_GetNumItems>
 80036c8:	2400      	movs	r4, #0
 80036ca:	4605      	mov	r5, r0
 80036cc:	42ac      	cmp	r4, r5
 80036ce:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80036d0:	da0f      	bge.n	80036f2 <GRAPH_Callback+0x4aa>
 80036d2:	6e98      	ldr	r0, [r3, #104]	; 0x68
 80036d4:	4621      	mov	r1, r4
 80036d6:	f009 f8b7 	bl	800c848 <GUI_ARRAY_GethItem>
 80036da:	f007 fef9 	bl	800b4d0 <GUI_ALLOC_LockH>
 80036de:	9014      	str	r0, [sp, #80]	; 0x50
 80036e0:	b128      	cbz	r0, 80036ee <GRAPH_Callback+0x4a6>
 80036e2:	6800      	ldr	r0, [r0, #0]
 80036e4:	f007 ff2e 	bl	800b544 <GUI_ALLOC_Free>
 80036e8:	a814      	add	r0, sp, #80	; 0x50
 80036ea:	f007 feff 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80036ee:	3401      	adds	r4, #1
 80036f0:	e7ec      	b.n	80036cc <GRAPH_Callback+0x484>
 80036f2:	ac16      	add	r4, sp, #88	; 0x58
 80036f4:	6e58      	ldr	r0, [r3, #100]	; 0x64
 80036f6:	f009 f87e 	bl	800c7f6 <GUI_ARRAY_Delete>
 80036fa:	f854 3d10 	ldr.w	r3, [r4, #-16]!
 80036fe:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8003700:	f009 f879 	bl	800c7f6 <GUI_ARRAY_Delete>
 8003704:	4620      	mov	r0, r4
 8003706:	f007 fef1 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800370a:	e015      	b.n	8003738 <GRAPH_Callback+0x4f0>
 800370c:	68eb      	ldr	r3, [r5, #12]
 800370e:	2b05      	cmp	r3, #5
 8003710:	d10f      	bne.n	8003732 <GRAPH_Callback+0x4ea>
 8003712:	4620      	mov	r0, r4
 8003714:	68ae      	ldr	r6, [r5, #8]
 8003716:	f001 f955 	bl	80049c4 <WM_GetScrollbarV>
 800371a:	4286      	cmp	r6, r0
 800371c:	d005      	beq.n	800372a <GRAPH_Callback+0x4e2>
 800371e:	4620      	mov	r0, r4
 8003720:	68ae      	ldr	r6, [r5, #8]
 8003722:	f001 f94a 	bl	80049ba <WM_GetScrollbarH>
 8003726:	4286      	cmp	r6, r0
 8003728:	d103      	bne.n	8003732 <GRAPH_Callback+0x4ea>
 800372a:	6868      	ldr	r0, [r5, #4]
 800372c:	68a9      	ldr	r1, [r5, #8]
 800372e:	f7ff fd6f 	bl	8003210 <_OnScrollValueChanged>
 8003732:	4628      	mov	r0, r5
 8003734:	f002 fd12 	bl	800615c <WM_DefaultProc>
 8003738:	b017      	add	sp, #92	; 0x5c
 800373a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800373e <GRAPH__InvalidateGraph>:
 800373e:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8003742:	4604      	mov	r4, r0
 8003744:	f007 fec4 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003748:	4603      	mov	r3, r0
 800374a:	a804      	add	r0, sp, #16
 800374c:	f8d3 8054 	ldr.w	r8, [r3, #84]	; 0x54
 8003750:	f840 3d0c 	str.w	r3, [r0, #-12]!
 8003754:	6d9f      	ldr	r7, [r3, #88]	; 0x58
 8003756:	6dde      	ldr	r6, [r3, #92]	; 0x5c
 8003758:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 800375a:	f007 fec7 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800375e:	4620      	mov	r0, r4
 8003760:	a902      	add	r1, sp, #8
 8003762:	f001 f953 	bl	8004a0c <WM_GetInsideRectExScrollbar>
 8003766:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800376a:	4498      	add	r8, r3
 800376c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8003770:	f8ad 8008 	strh.w	r8, [sp, #8]
 8003774:	441f      	add	r7, r3
 8003776:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800377a:	f8ad 700a 	strh.w	r7, [sp, #10]
 800377e:	1b9e      	subs	r6, r3, r6
 8003780:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8003784:	f8ad 600c 	strh.w	r6, [sp, #12]
 8003788:	1b5d      	subs	r5, r3, r5
 800378a:	4620      	mov	r0, r4
 800378c:	a902      	add	r1, sp, #8
 800378e:	f8ad 500e 	strh.w	r5, [sp, #14]
 8003792:	f002 f879 	bl	8005888 <WM_InvalidateRect>
 8003796:	b004      	add	sp, #16
 8003798:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800379c <GRAPH__AddValue>:
 800379c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800379e:	461d      	mov	r5, r3
 80037a0:	6883      	ldr	r3, [r0, #8]
 80037a2:	4604      	mov	r4, r0
 80037a4:	460e      	mov	r6, r1
 80037a6:	4617      	mov	r7, r2
 80037a8:	b323      	cbz	r3, 80037f4 <GRAPH__AddValue+0x58>
 80037aa:	6900      	ldr	r0, [r0, #16]
 80037ac:	6963      	ldr	r3, [r4, #20]
 80037ae:	4298      	cmp	r0, r3
 80037b0:	d10e      	bne.n	80037d0 <GRAPH__AddValue+0x34>
 80037b2:	1e42      	subs	r2, r0, #1
 80037b4:	436a      	muls	r2, r5
 80037b6:	4608      	mov	r0, r1
 80037b8:	4429      	add	r1, r5
 80037ba:	f00c faad 	bl	800fd18 <memmove>
 80037be:	6920      	ldr	r0, [r4, #16]
 80037c0:	3801      	subs	r0, #1
 80037c2:	fb00 6005 	mla	r0, r0, r5, r6
 80037c6:	4639      	mov	r1, r7
 80037c8:	462a      	mov	r2, r5
 80037ca:	f00c faa5 	bl	800fd18 <memmove>
 80037ce:	e00c      	b.n	80037ea <GRAPH__AddValue+0x4e>
 80037d0:	1c43      	adds	r3, r0, #1
 80037d2:	6123      	str	r3, [r4, #16]
 80037d4:	fb00 1005 	mla	r0, r0, r5, r1
 80037d8:	4611      	mov	r1, r2
 80037da:	462a      	mov	r2, r5
 80037dc:	f00c fa9c 	bl	800fd18 <memmove>
 80037e0:	68e3      	ldr	r3, [r4, #12]
 80037e2:	b113      	cbz	r3, 80037ea <GRAPH__AddValue+0x4e>
 80037e4:	4620      	mov	r0, r4
 80037e6:	4798      	blx	r3
 80037e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80037ea:	68a0      	ldr	r0, [r4, #8]
 80037ec:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80037f0:	f7ff bfa5 	b.w	800373e <GRAPH__InvalidateGraph>
 80037f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080037f8 <GRAPH_CreateUser>:
 80037f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80037fa:	b087      	sub	sp, #28
 80037fc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80037fe:	9400      	str	r4, [sp, #0]
 8003800:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8003802:	9401      	str	r4, [sp, #4]
 8003804:	4c17      	ldr	r4, [pc, #92]	; (8003864 <GRAPH_CreateUser+0x6c>)
 8003806:	9402      	str	r4, [sp, #8]
 8003808:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800380a:	346c      	adds	r4, #108	; 0x6c
 800380c:	9403      	str	r4, [sp, #12]
 800380e:	f002 f8a5 	bl	800595c <WM_CreateWindowAsChild>
 8003812:	4606      	mov	r6, r0
 8003814:	b318      	cbz	r0, 800385e <GRAPH_CreateUser+0x66>
 8003816:	f009 f82a 	bl	800c86e <GUI_ARRAY_Create>
 800381a:	4605      	mov	r5, r0
 800381c:	f009 f827 	bl	800c86e <GUI_ARRAY_Create>
 8003820:	4604      	mov	r4, r0
 8003822:	4630      	mov	r0, r6
 8003824:	f007 fe54 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003828:	6645      	str	r5, [r0, #100]	; 0x64
 800382a:	4d0f      	ldr	r5, [pc, #60]	; (8003868 <GRAPH_CreateUser+0x70>)
 800382c:	6684      	str	r4, [r0, #104]	; 0x68
 800382e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003830:	9005      	str	r0, [sp, #20]
 8003832:	2200      	movs	r2, #0
 8003834:	f008 f9d2 	bl	800bbdc <WIDGET__Init>
 8003838:	af06      	add	r7, sp, #24
 800383a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800383c:	f857 ed04 	ldr.w	lr, [r7, #-4]!
 8003840:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 8003844:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003846:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003848:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800384a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800384e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8003852:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003854:	f8ae 3078 	strh.w	r3, [lr, #120]	; 0x78
 8003858:	4638      	mov	r0, r7
 800385a:	f007 fe47 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800385e:	4630      	mov	r0, r6
 8003860:	b007      	add	sp, #28
 8003862:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003864:	08003249 	.word	0x08003249
 8003868:	20000038 	.word	0x20000038

0800386c <GRAPH_CreateIndirect>:
 800386c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800386e:	b087      	sub	sp, #28
 8003870:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8003874:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8003878:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 800387c:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8003880:	9100      	str	r1, [sp, #0]
 8003882:	2100      	movs	r1, #0
 8003884:	9101      	str	r1, [sp, #4]
 8003886:	8a41      	ldrh	r1, [r0, #18]
 8003888:	9102      	str	r1, [sp, #8]
 800388a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800388e:	9103      	str	r1, [sp, #12]
 8003890:	6984      	ldr	r4, [r0, #24]
 8003892:	9404      	str	r4, [sp, #16]
 8003894:	eb0e 0002 	add.w	r0, lr, r2
 8003898:	18f9      	adds	r1, r7, r3
 800389a:	4632      	mov	r2, r6
 800389c:	462b      	mov	r3, r5
 800389e:	f7ff ffab 	bl	80037f8 <GRAPH_CreateUser>
 80038a2:	b007      	add	sp, #28
 80038a4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080038a6 <GRAPH_AttachData>:
 80038a6:	b530      	push	{r4, r5, lr}
 80038a8:	b085      	sub	sp, #20
 80038aa:	4604      	mov	r4, r0
 80038ac:	9101      	str	r1, [sp, #4]
 80038ae:	b1d0      	cbz	r0, 80038e6 <GRAPH_AttachData+0x40>
 80038b0:	f007 fe0e 	bl	800b4d0 <GUI_ALLOC_LockH>
 80038b4:	ab04      	add	r3, sp, #16
 80038b6:	6e45      	ldr	r5, [r0, #100]	; 0x64
 80038b8:	f843 0d04 	str.w	r0, [r3, #-4]!
 80038bc:	4618      	mov	r0, r3
 80038be:	f007 fe15 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80038c2:	9801      	ldr	r0, [sp, #4]
 80038c4:	f007 fe04 	bl	800b4d0 <GUI_ALLOC_LockH>
 80038c8:	4602      	mov	r2, r0
 80038ca:	a804      	add	r0, sp, #16
 80038cc:	6094      	str	r4, [r2, #8]
 80038ce:	f840 2d08 	str.w	r2, [r0, #-8]!
 80038d2:	f007 fe0b 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80038d6:	4628      	mov	r0, r5
 80038d8:	a901      	add	r1, sp, #4
 80038da:	2204      	movs	r2, #4
 80038dc:	f008 ff41 	bl	800c762 <GUI_ARRAY_AddItem>
 80038e0:	4620      	mov	r0, r4
 80038e2:	f002 f80d 	bl	8005900 <WM_InvalidateWindow>
 80038e6:	b005      	add	sp, #20
 80038e8:	bd30      	pop	{r4, r5, pc}

080038ea <GRAPH_SetGridVis>:
 80038ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80038ec:	460e      	mov	r6, r1
 80038ee:	4605      	mov	r5, r0
 80038f0:	b178      	cbz	r0, 8003912 <GRAPH_SetGridVis+0x28>
 80038f2:	f007 fded 	bl	800b4d0 <GUI_ALLOC_LockH>
 80038f6:	f890 406c 	ldrb.w	r4, [r0, #108]	; 0x6c
 80038fa:	9001      	str	r0, [sp, #4]
 80038fc:	42b4      	cmp	r4, r6
 80038fe:	d004      	beq.n	800390a <GRAPH_SetGridVis+0x20>
 8003900:	f880 606c 	strb.w	r6, [r0, #108]	; 0x6c
 8003904:	4628      	mov	r0, r5
 8003906:	f001 fffb 	bl	8005900 <WM_InvalidateWindow>
 800390a:	a801      	add	r0, sp, #4
 800390c:	f007 fdee 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003910:	e000      	b.n	8003914 <GRAPH_SetGridVis+0x2a>
 8003912:	4604      	mov	r4, r0
 8003914:	4620      	mov	r0, r4
 8003916:	b002      	add	sp, #8
 8003918:	bd70      	pop	{r4, r5, r6, pc}

0800391a <GRAPH_SetBorder>:
 800391a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800391e:	460f      	mov	r7, r1
 8003920:	4690      	mov	r8, r2
 8003922:	461d      	mov	r5, r3
 8003924:	4606      	mov	r6, r0
 8003926:	b198      	cbz	r0, 8003950 <GRAPH_SetBorder+0x36>
 8003928:	f007 fdd2 	bl	800b4d0 <GUI_ALLOC_LockH>
 800392c:	4604      	mov	r4, r0
 800392e:	a802      	add	r0, sp, #8
 8003930:	9b08      	ldr	r3, [sp, #32]
 8003932:	6623      	str	r3, [r4, #96]	; 0x60
 8003934:	f840 4d04 	str.w	r4, [r0, #-4]!
 8003938:	6567      	str	r7, [r4, #84]	; 0x54
 800393a:	f8c4 8058 	str.w	r8, [r4, #88]	; 0x58
 800393e:	65e5      	str	r5, [r4, #92]	; 0x5c
 8003940:	f007 fdd4 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003944:	4630      	mov	r0, r6
 8003946:	f7ff fc05 	bl	8003154 <_ManageScrollbars>
 800394a:	4630      	mov	r0, r6
 800394c:	f001 ffd8 	bl	8005900 <WM_InvalidateWindow>
 8003950:	b002      	add	sp, #8
 8003952:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003956 <FRAMEWIN__GetBorderSize>:
 8003956:	b570      	push	{r4, r5, r6, lr}
 8003958:	b08a      	sub	sp, #40	; 0x28
 800395a:	4605      	mov	r5, r0
 800395c:	460c      	mov	r4, r1
 800395e:	f007 fdb7 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003962:	ab0a      	add	r3, sp, #40	; 0x28
 8003964:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8003966:	f843 0d28 	str.w	r0, [r3, #-40]!
 800396a:	4668      	mov	r0, sp
 800396c:	6896      	ldr	r6, [r2, #8]
 800396e:	f007 fdbd 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003972:	9501      	str	r5, [sp, #4]
 8003974:	2c03      	cmp	r4, #3
 8003976:	d80b      	bhi.n	8003990 <FRAMEWIN__GetBorderSize+0x3a>
 8003978:	e8df f004 	tbb	[pc, r4]
 800397c:	08060402 	.word	0x08060402
 8003980:	2318      	movs	r3, #24
 8003982:	e004      	b.n	800398e <FRAMEWIN__GetBorderSize+0x38>
 8003984:	2316      	movs	r3, #22
 8003986:	e002      	b.n	800398e <FRAMEWIN__GetBorderSize+0x38>
 8003988:	2315      	movs	r3, #21
 800398a:	e000      	b.n	800398e <FRAMEWIN__GetBorderSize+0x38>
 800398c:	2317      	movs	r3, #23
 800398e:	9302      	str	r3, [sp, #8]
 8003990:	6873      	ldr	r3, [r6, #4]
 8003992:	a801      	add	r0, sp, #4
 8003994:	4798      	blx	r3
 8003996:	b00a      	add	sp, #40	; 0x28
 8003998:	bd70      	pop	{r4, r5, r6, pc}

0800399a <_SetActive>:
 800399a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800399c:	4604      	mov	r4, r0
 800399e:	460d      	mov	r5, r1
 80039a0:	f007 fd96 	bl	800b4d0 <GUI_ALLOC_LockH>
 80039a4:	9001      	str	r0, [sp, #4]
 80039a6:	f8b0 207c 	ldrh.w	r2, [r0, #124]	; 0x7c
 80039aa:	b125      	cbz	r5, 80039b6 <_SetActive+0x1c>
 80039ac:	0711      	lsls	r1, r2, #28
 80039ae:	d40b      	bmi.n	80039c8 <_SetActive+0x2e>
 80039b0:	f042 0208 	orr.w	r2, r2, #8
 80039b4:	e003      	b.n	80039be <_SetActive+0x24>
 80039b6:	0713      	lsls	r3, r2, #28
 80039b8:	d506      	bpl.n	80039c8 <_SetActive+0x2e>
 80039ba:	f022 0208 	bic.w	r2, r2, #8
 80039be:	f8a0 207c 	strh.w	r2, [r0, #124]	; 0x7c
 80039c2:	4620      	mov	r0, r4
 80039c4:	f001 ff9c 	bl	8005900 <WM_InvalidateWindow>
 80039c8:	a801      	add	r0, sp, #4
 80039ca:	f007 fd8f 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80039ce:	b003      	add	sp, #12
 80039d0:	bd30      	pop	{r4, r5, pc}

080039d2 <FRAMEWIN__cbClient>:
 80039d2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80039d6:	6845      	ldr	r5, [r0, #4]
 80039d8:	b087      	sub	sp, #28
 80039da:	4604      	mov	r4, r0
 80039dc:	4628      	mov	r0, r5
 80039de:	f000 ffa1 	bl	8004924 <WM_GetParent>
 80039e2:	4681      	mov	r9, r0
 80039e4:	f007 fd74 	bl	800b4d0 <GUI_ALLOC_LockH>
 80039e8:	4603      	mov	r3, r0
 80039ea:	a806      	add	r0, sp, #24
 80039ec:	6e5f      	ldr	r7, [r3, #100]	; 0x64
 80039ee:	f840 3d14 	str.w	r3, [r0, #-20]!
 80039f2:	6c9e      	ldr	r6, [r3, #72]	; 0x48
 80039f4:	f8d3 8080 	ldr.w	r8, [r3, #128]	; 0x80
 80039f8:	f007 fd78 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80039fc:	6823      	ldr	r3, [r4, #0]
 80039fe:	2b17      	cmp	r3, #23
 8003a00:	d053      	beq.n	8003aaa <FRAMEWIN__cbClient+0xd8>
 8003a02:	dc09      	bgt.n	8003a18 <FRAMEWIN__cbClient+0x46>
 8003a04:	2b0f      	cmp	r3, #15
 8003a06:	d014      	beq.n	8003a32 <FRAMEWIN__cbClient+0x60>
 8003a08:	dc02      	bgt.n	8003a10 <FRAMEWIN__cbClient+0x3e>
 8003a0a:	2b0e      	cmp	r3, #14
 8003a0c:	d034      	beq.n	8003a78 <FRAMEWIN__cbClient+0xa6>
 8003a0e:	e046      	b.n	8003a9e <FRAMEWIN__cbClient+0xcc>
 8003a10:	3b14      	subs	r3, #20
 8003a12:	2b01      	cmp	r3, #1
 8003a14:	d949      	bls.n	8003aaa <FRAMEWIN__cbClient+0xd8>
 8003a16:	e042      	b.n	8003a9e <FRAMEWIN__cbClient+0xcc>
 8003a18:	2b1f      	cmp	r3, #31
 8003a1a:	d028      	beq.n	8003a6e <FRAMEWIN__cbClient+0x9c>
 8003a1c:	dc02      	bgt.n	8003a24 <FRAMEWIN__cbClient+0x52>
 8003a1e:	2b1e      	cmp	r3, #30
 8003a20:	d01a      	beq.n	8003a58 <FRAMEWIN__cbClient+0x86>
 8003a22:	e03c      	b.n	8003a9e <FRAMEWIN__cbClient+0xcc>
 8003a24:	2b22      	cmp	r3, #34	; 0x22
 8003a26:	d038      	beq.n	8003a9a <FRAMEWIN__cbClient+0xc8>
 8003a28:	2b31      	cmp	r3, #49	; 0x31
 8003a2a:	d138      	bne.n	8003a9e <FRAMEWIN__cbClient+0xcc>
 8003a2c:	2300      	movs	r3, #0
 8003a2e:	60e3      	str	r3, [r4, #12]
 8003a30:	e03e      	b.n	8003ab0 <FRAMEWIN__cbClient+0xde>
 8003a32:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8003a36:	429e      	cmp	r6, r3
 8003a38:	d004      	beq.n	8003a44 <FRAMEWIN__cbClient+0x72>
 8003a3a:	4630      	mov	r0, r6
 8003a3c:	f005 f9c4 	bl	8008dc8 <LCD_SetBkColor>
 8003a40:	f006 fed2 	bl	800a7e8 <GUI_Clear>
 8003a44:	2f00      	cmp	r7, #0
 8003a46:	d033      	beq.n	8003ab0 <FRAMEWIN__cbClient+0xde>
 8003a48:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8003a4c:	ae02      	add	r6, sp, #8
 8003a4e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8003a52:	9503      	str	r5, [sp, #12]
 8003a54:	4630      	mov	r0, r6
 8003a56:	e026      	b.n	8003aa6 <FRAMEWIN__cbClient+0xd4>
 8003a58:	68e3      	ldr	r3, [r4, #12]
 8003a5a:	b34b      	cbz	r3, 8003ab0 <FRAMEWIN__cbClient+0xde>
 8003a5c:	f1b8 0f00 	cmp.w	r8, #0
 8003a60:	d017      	beq.n	8003a92 <FRAMEWIN__cbClient+0xc0>
 8003a62:	45a8      	cmp	r8, r5
 8003a64:	d015      	beq.n	8003a92 <FRAMEWIN__cbClient+0xc0>
 8003a66:	4640      	mov	r0, r8
 8003a68:	f001 f90c 	bl	8004c84 <WM_SetFocus>
 8003a6c:	e020      	b.n	8003ab0 <FRAMEWIN__cbClient+0xde>
 8003a6e:	4648      	mov	r0, r9
 8003a70:	4621      	mov	r1, r4
 8003a72:	f008 f8f8 	bl	800bc66 <WIDGET_HandleActive>
 8003a76:	e01b      	b.n	8003ab0 <FRAMEWIN__cbClient+0xde>
 8003a78:	68e3      	ldr	r3, [r4, #12]
 8003a7a:	685a      	ldr	r2, [r3, #4]
 8003a7c:	2a00      	cmp	r2, #0
 8003a7e:	dd0e      	ble.n	8003a9e <FRAMEWIN__cbClient+0xcc>
 8003a80:	681b      	ldr	r3, [r3, #0]
 8003a82:	2b09      	cmp	r3, #9
 8003a84:	d005      	beq.n	8003a92 <FRAMEWIN__cbClient+0xc0>
 8003a86:	2b0a      	cmp	r3, #10
 8003a88:	d109      	bne.n	8003a9e <FRAMEWIN__cbClient+0xcc>
 8003a8a:	4628      	mov	r0, r5
 8003a8c:	f000 fcf7 	bl	800447e <WM_SetFocusOnPrevChild>
 8003a90:	e00e      	b.n	8003ab0 <FRAMEWIN__cbClient+0xde>
 8003a92:	4628      	mov	r0, r5
 8003a94:	f000 fd22 	bl	80044dc <WM_SetFocusOnNextChild>
 8003a98:	e00a      	b.n	8003ab0 <FRAMEWIN__cbClient+0xde>
 8003a9a:	60e6      	str	r6, [r4, #12]
 8003a9c:	e008      	b.n	8003ab0 <FRAMEWIN__cbClient+0xde>
 8003a9e:	b127      	cbz	r7, 8003aaa <FRAMEWIN__cbClient+0xd8>
 8003aa0:	f8c4 9004 	str.w	r9, [r4, #4]
 8003aa4:	4620      	mov	r0, r4
 8003aa6:	47b8      	blx	r7
 8003aa8:	e002      	b.n	8003ab0 <FRAMEWIN__cbClient+0xde>
 8003aaa:	4620      	mov	r0, r4
 8003aac:	f002 fb56 	bl	800615c <WM_DefaultProc>
 8003ab0:	b007      	add	sp, #28
 8003ab2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08003ab6 <FRAMEWIN__CalcTitleHeight>:
 8003ab6:	b508      	push	{r3, lr}
 8003ab8:	4603      	mov	r3, r0
 8003aba:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 8003abc:	f000 0020 	and.w	r0, r0, #32
 8003ac0:	b280      	uxth	r0, r0
 8003ac2:	b130      	cbz	r0, 8003ad2 <FRAMEWIN__CalcTitleHeight+0x1c>
 8003ac4:	f9b3 0054 	ldrsh.w	r0, [r3, #84]	; 0x54
 8003ac8:	b918      	cbnz	r0, 8003ad2 <FRAMEWIN__CalcTitleHeight+0x1c>
 8003aca:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8003acc:	f006 ffe8 	bl	800aaa0 <GUI_GetYSizeOfFont>
 8003ad0:	3002      	adds	r0, #2
 8003ad2:	bd08      	pop	{r3, pc}

08003ad4 <FRAMEWIN__GetTitleLimits>:
 8003ad4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8003ad8:	4607      	mov	r7, r0
 8003ada:	460d      	mov	r5, r1
 8003adc:	4616      	mov	r6, r2
 8003ade:	f007 fcf7 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003ae2:	4603      	mov	r3, r0
 8003ae4:	a802      	add	r0, sp, #8
 8003ae6:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8003ae8:	f840 3d08 	str.w	r3, [r0, #-8]!
 8003aec:	f8d2 a008 	ldr.w	sl, [r2, #8]
 8003af0:	f8b3 8000 	ldrh.w	r8, [r3]
 8003af4:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003af8:	4668      	mov	r0, sp
 8003afa:	f007 fcf7 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003afe:	f8da 3000 	ldr.w	r3, [sl]
 8003b02:	4638      	mov	r0, r7
 8003b04:	2100      	movs	r1, #0
 8003b06:	4798      	blx	r3
 8003b08:	4682      	mov	sl, r0
 8003b0a:	4638      	mov	r0, r7
 8003b0c:	f000 fe69 	bl	80047e2 <WM_GetFirstChild>
 8003b10:	4604      	mov	r4, r0
 8003b12:	b340      	cbz	r0, 8003b66 <FRAMEWIN__GetTitleLimits+0x92>
 8003b14:	4620      	mov	r0, r4
 8003b16:	f007 fcdb 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003b1a:	4603      	mov	r3, r0
 8003b1c:	fa0f f289 	sxth.w	r2, r9
 8003b20:	f9b3 7002 	ldrsh.w	r7, [r3, #2]
 8003b24:	9001      	str	r0, [sp, #4]
 8003b26:	1aba      	subs	r2, r7, r2
 8003b28:	4552      	cmp	r2, sl
 8003b2a:	8800      	ldrh	r0, [r0, #0]
 8003b2c:	8899      	ldrh	r1, [r3, #4]
 8003b2e:	d113      	bne.n	8003b58 <FRAMEWIN__GetTitleLimits+0x84>
 8003b30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003b32:	061b      	lsls	r3, r3, #24
 8003b34:	fa0f f288 	sxth.w	r2, r8
 8003b38:	d507      	bpl.n	8003b4a <FRAMEWIN__GetTitleLimits+0x76>
 8003b3a:	b203      	sxth	r3, r0
 8003b3c:	1a9a      	subs	r2, r3, r2
 8003b3e:	6833      	ldr	r3, [r6, #0]
 8003b40:	429a      	cmp	r2, r3
 8003b42:	dc09      	bgt.n	8003b58 <FRAMEWIN__GetTitleLimits+0x84>
 8003b44:	3a01      	subs	r2, #1
 8003b46:	6032      	str	r2, [r6, #0]
 8003b48:	e006      	b.n	8003b58 <FRAMEWIN__GetTitleLimits+0x84>
 8003b4a:	b20b      	sxth	r3, r1
 8003b4c:	1a9b      	subs	r3, r3, r2
 8003b4e:	682a      	ldr	r2, [r5, #0]
 8003b50:	4293      	cmp	r3, r2
 8003b52:	bfa4      	itt	ge
 8003b54:	3301      	addge	r3, #1
 8003b56:	602b      	strge	r3, [r5, #0]
 8003b58:	a801      	add	r0, sp, #4
 8003b5a:	f007 fcc7 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003b5e:	4620      	mov	r0, r4
 8003b60:	f000 feb7 	bl	80048d2 <WM_GetNextSibling>
 8003b64:	e7d4      	b.n	8003b10 <FRAMEWIN__GetTitleLimits+0x3c>
 8003b66:	b002      	add	sp, #8
 8003b68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08003b6c <FRAMEWIN__CalcPositions>:
 8003b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b70:	b087      	sub	sp, #28
 8003b72:	4604      	mov	r4, r0
 8003b74:	460f      	mov	r7, r1
 8003b76:	f007 fcab 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003b7a:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8003b7c:	9003      	str	r0, [sp, #12]
 8003b7e:	6895      	ldr	r5, [r2, #8]
 8003b80:	2101      	movs	r1, #1
 8003b82:	682a      	ldr	r2, [r5, #0]
 8003b84:	4620      	mov	r0, r4
 8003b86:	4790      	blx	r2
 8003b88:	682a      	ldr	r2, [r5, #0]
 8003b8a:	2103      	movs	r1, #3
 8003b8c:	4683      	mov	fp, r0
 8003b8e:	4620      	mov	r0, r4
 8003b90:	4790      	blx	r2
 8003b92:	682a      	ldr	r2, [r5, #0]
 8003b94:	2102      	movs	r1, #2
 8003b96:	4681      	mov	r9, r0
 8003b98:	4620      	mov	r0, r4
 8003b9a:	4790      	blx	r2
 8003b9c:	682a      	ldr	r2, [r5, #0]
 8003b9e:	9001      	str	r0, [sp, #4]
 8003ba0:	2100      	movs	r1, #0
 8003ba2:	4620      	mov	r0, r4
 8003ba4:	4790      	blx	r2
 8003ba6:	4605      	mov	r5, r0
 8003ba8:	9803      	ldr	r0, [sp, #12]
 8003baa:	f001 f94b 	bl	8004e44 <WM__GetWindowSizeX>
 8003bae:	4682      	mov	sl, r0
 8003bb0:	9803      	ldr	r0, [sp, #12]
 8003bb2:	f001 f94e 	bl	8004e52 <WM__GetWindowSizeY>
 8003bb6:	4680      	mov	r8, r0
 8003bb8:	9803      	ldr	r0, [sp, #12]
 8003bba:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 8003bbc:	f006 0620 	and.w	r6, r6, #32
 8003bc0:	b2b6      	uxth	r6, r6
 8003bc2:	b10e      	cbz	r6, 8003bc8 <FRAMEWIN__CalcPositions+0x5c>
 8003bc4:	f9b0 6058 	ldrsh.w	r6, [r0, #88]	; 0x58
 8003bc8:	f7ff ff75 	bl	8003ab6 <FRAMEWIN__CalcTitleHeight>
 8003bcc:	9903      	ldr	r1, [sp, #12]
 8003bce:	4602      	mov	r2, r0
 8003bd0:	6ec8      	ldr	r0, [r1, #108]	; 0x6c
 8003bd2:	b118      	cbz	r0, 8003bdc <FRAMEWIN__CalcPositions+0x70>
 8003bd4:	9200      	str	r2, [sp, #0]
 8003bd6:	f001 f958 	bl	8004e8a <WM_GetWindowSizeY>
 8003bda:	9a00      	ldr	r2, [sp, #0]
 8003bdc:	803a      	strh	r2, [r7, #0]
 8003bde:	b292      	uxth	r2, r2
 8003be0:	b2a9      	uxth	r1, r5
 8003be2:	4416      	add	r6, r2
 8003be4:	440e      	add	r6, r1
 8003be6:	8078      	strh	r0, [r7, #2]
 8003be8:	4430      	add	r0, r6
 8003bea:	80f8      	strh	r0, [r7, #6]
 8003bec:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003bf0:	9801      	ldr	r0, [sp, #4]
 8003bf2:	81fd      	strh	r5, [r7, #14]
 8003bf4:	3901      	subs	r1, #1
 8003bf6:	ebc9 090a 	rsb	r9, r9, sl
 8003bfa:	f108 38ff 	add.w	r8, r8, #4294967295
 8003bfe:	ebc0 0308 	rsb	r3, r0, r8
 8003c02:	440a      	add	r2, r1
 8003c04:	fa1f fb8b 	uxth.w	fp, fp
 8003c08:	fa1f f989 	uxth.w	r9, r9
 8003c0c:	817b      	strh	r3, [r7, #10]
 8003c0e:	827a      	strh	r2, [r7, #18]
 8003c10:	f8a7 b004 	strh.w	fp, [r7, #4]
 8003c14:	f8a7 9008 	strh.w	r9, [r7, #8]
 8003c18:	f8a7 b00c 	strh.w	fp, [r7, #12]
 8003c1c:	f8a7 9010 	strh.w	r9, [r7, #16]
 8003c20:	a803      	add	r0, sp, #12
 8003c22:	f007 fc63 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003c26:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8003c2a:	9204      	str	r2, [sp, #16]
 8003c2c:	f9b7 2010 	ldrsh.w	r2, [r7, #16]
 8003c30:	9205      	str	r2, [sp, #20]
 8003c32:	4620      	mov	r0, r4
 8003c34:	aa05      	add	r2, sp, #20
 8003c36:	a904      	add	r1, sp, #16
 8003c38:	f7ff ff4c 	bl	8003ad4 <FRAMEWIN__GetTitleLimits>
 8003c3c:	9a04      	ldr	r2, [sp, #16]
 8003c3e:	81ba      	strh	r2, [r7, #12]
 8003c40:	9a05      	ldr	r2, [sp, #20]
 8003c42:	823a      	strh	r2, [r7, #16]
 8003c44:	b007      	add	sp, #28
 8003c46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003c4a <FRAMEWIN_SetText>:
 8003c4a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003c4c:	460d      	mov	r5, r1
 8003c4e:	4604      	mov	r4, r0
 8003c50:	b1c0      	cbz	r0, 8003c84 <FRAMEWIN_SetText+0x3a>
 8003c52:	f007 fc3d 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003c56:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8003c58:	9000      	str	r0, [sp, #0]
 8003c5a:	4668      	mov	r0, sp
 8003c5c:	9301      	str	r3, [sp, #4]
 8003c5e:	f007 fc45 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003c62:	a801      	add	r0, sp, #4
 8003c64:	4629      	mov	r1, r5
 8003c66:	f005 f9b3 	bl	8008fd0 <GUI__SetText>
 8003c6a:	b158      	cbz	r0, 8003c84 <FRAMEWIN_SetText+0x3a>
 8003c6c:	4620      	mov	r0, r4
 8003c6e:	f007 fc2f 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003c72:	9b01      	ldr	r3, [sp, #4]
 8003c74:	9000      	str	r0, [sp, #0]
 8003c76:	6703      	str	r3, [r0, #112]	; 0x70
 8003c78:	4668      	mov	r0, sp
 8003c7a:	f007 fc37 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003c7e:	4620      	mov	r0, r4
 8003c80:	f001 fe3e 	bl	8005900 <WM_InvalidateWindow>
 8003c84:	b003      	add	sp, #12
 8003c86:	bd30      	pop	{r4, r5, pc}

08003c88 <FRAMEWIN_CreateUser>:
 8003c88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003c8c:	b08b      	sub	sp, #44	; 0x2c
 8003c8e:	f8dd 904c 	ldr.w	r9, [sp, #76]	; 0x4c
 8003c92:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8003c94:	9400      	str	r4, [sp, #0]
 8003c96:	f449 5480 	orr.w	r4, r9, #4096	; 0x1000
 8003c9a:	9401      	str	r4, [sp, #4]
 8003c9c:	4c33      	ldr	r4, [pc, #204]	; (8003d6c <FRAMEWIN_CreateUser+0xe4>)
 8003c9e:	9402      	str	r4, [sp, #8]
 8003ca0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8003ca2:	3460      	adds	r4, #96	; 0x60
 8003ca4:	9403      	str	r4, [sp, #12]
 8003ca6:	f001 fe59 	bl	800595c <WM_CreateWindowAsChild>
 8003caa:	4606      	mov	r6, r0
 8003cac:	2800      	cmp	r0, #0
 8003cae:	d058      	beq.n	8003d62 <FRAMEWIN_CreateUser+0xda>
 8003cb0:	f007 fc0e 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003cb4:	4d2e      	ldr	r5, [pc, #184]	; (8003d70 <FRAMEWIN_CreateUser+0xe8>)
 8003cb6:	9915      	ldr	r1, [sp, #84]	; 0x54
 8003cb8:	9004      	str	r0, [sp, #16]
 8003cba:	2230      	movs	r2, #48	; 0x30
 8003cbc:	f007 ff8e 	bl	800bbdc <WIDGET__Init>
 8003cc0:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8003cc4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003cc6:	f858 7d18 	ldr.w	r7, [r8, #-24]!
 8003cca:	f107 0434 	add.w	r4, r7, #52	; 0x34
 8003cce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003cd0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003cd2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003cd4:	e895 0003 	ldmia.w	r5, {r0, r1}
 8003cd8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8003cda:	4d26      	ldr	r5, [pc, #152]	; (8003d74 <FRAMEWIN_CreateUser+0xec>)
 8003cdc:	e884 0003 	stmia.w	r4, {r0, r1}
 8003ce0:	667b      	str	r3, [r7, #100]	; 0x64
 8003ce2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8003ce4:	f8a7 307c 	strh.w	r3, [r7, #124]	; 0x7c
 8003ce8:	2400      	movs	r4, #0
 8003cea:	682b      	ldr	r3, [r5, #0]
 8003cec:	65fb      	str	r3, [r7, #92]	; 0x5c
 8003cee:	f8c7 4080 	str.w	r4, [r7, #128]	; 0x80
 8003cf2:	66fc      	str	r4, [r7, #108]	; 0x6c
 8003cf4:	f8c7 4088 	str.w	r4, [r7, #136]	; 0x88
 8003cf8:	4640      	mov	r0, r8
 8003cfa:	f007 fbf7 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003cfe:	4630      	mov	r0, r6
 8003d00:	a905      	add	r1, sp, #20
 8003d02:	f7ff ff33 	bl	8003b6c <FRAMEWIN__CalcPositions>
 8003d06:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 8003d0a:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 8003d0e:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8003d12:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8003d16:	9403      	str	r4, [sp, #12]
 8003d18:	f241 7782 	movw	r7, #6018	; 0x1782
 8003d1c:	1a5b      	subs	r3, r3, r1
 8003d1e:	1a12      	subs	r2, r2, r0
 8003d20:	9701      	str	r7, [sp, #4]
 8003d22:	4f15      	ldr	r7, [pc, #84]	; (8003d78 <FRAMEWIN_CreateUser+0xf0>)
 8003d24:	9600      	str	r6, [sp, #0]
 8003d26:	3201      	adds	r2, #1
 8003d28:	3301      	adds	r3, #1
 8003d2a:	9702      	str	r7, [sp, #8]
 8003d2c:	f001 fe16 	bl	800595c <WM_CreateWindowAsChild>
 8003d30:	682b      	ldr	r3, [r5, #0]
 8003d32:	4604      	mov	r4, r0
 8003d34:	685b      	ldr	r3, [r3, #4]
 8003d36:	4630      	mov	r0, r6
 8003d38:	4798      	blx	r3
 8003d3a:	4630      	mov	r0, r6
 8003d3c:	f007 fbc8 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003d40:	9004      	str	r0, [sp, #16]
 8003d42:	6684      	str	r4, [r0, #104]	; 0x68
 8003d44:	4640      	mov	r0, r8
 8003d46:	f007 fbd1 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003d4a:	f242 0304 	movw	r3, #8196	; 0x2004
 8003d4e:	ea09 0303 	and.w	r3, r9, r3
 8003d52:	b913      	cbnz	r3, 8003d5a <FRAMEWIN_CreateUser+0xd2>
 8003d54:	4630      	mov	r0, r6
 8003d56:	f000 fcfd 	bl	8004754 <WM_DisableMemdev>
 8003d5a:	4630      	mov	r0, r6
 8003d5c:	9916      	ldr	r1, [sp, #88]	; 0x58
 8003d5e:	f7ff ff74 	bl	8003c4a <FRAMEWIN_SetText>
 8003d62:	4630      	mov	r0, r6
 8003d64:	b00b      	add	sp, #44	; 0x2c
 8003d66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003d6a:	bf00      	nop
 8003d6c:	08003dc7 	.word	0x08003dc7
 8003d70:	20000068 	.word	0x20000068
 8003d74:	20000090 	.word	0x20000090
 8003d78:	080039d3 	.word	0x080039d3

08003d7c <FRAMEWIN_CreateIndirect>:
 8003d7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003d7e:	b089      	sub	sp, #36	; 0x24
 8003d80:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8003d84:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8003d88:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8003d8c:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8003d90:	9100      	str	r1, [sp, #0]
 8003d92:	2100      	movs	r1, #0
 8003d94:	9101      	str	r1, [sp, #4]
 8003d96:	8a41      	ldrh	r1, [r0, #18]
 8003d98:	9102      	str	r1, [sp, #8]
 8003d9a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8003d9e:	9103      	str	r1, [sp, #12]
 8003da0:	6844      	ldr	r4, [r0, #4]
 8003da2:	9404      	str	r4, [sp, #16]
 8003da4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8003da6:	9405      	str	r4, [sp, #20]
 8003da8:	6984      	ldr	r4, [r0, #24]
 8003daa:	9406      	str	r4, [sp, #24]
 8003dac:	eb0e 0002 	add.w	r0, lr, r2
 8003db0:	18f9      	adds	r1, r7, r3
 8003db2:	4632      	mov	r2, r6
 8003db4:	462b      	mov	r3, r5
 8003db6:	f7ff ff67 	bl	8003c88 <FRAMEWIN_CreateUser>
 8003dba:	b009      	add	sp, #36	; 0x24
 8003dbc:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003dbe <FRAMEWIN_SetActive>:
 8003dbe:	b108      	cbz	r0, 8003dc4 <FRAMEWIN_SetActive+0x6>
 8003dc0:	f7ff bdeb 	b.w	800399a <_SetActive>
 8003dc4:	4770      	bx	lr

08003dc6 <FRAMEWIN_Callback>:
 8003dc6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003dca:	6844      	ldr	r4, [r0, #4]
 8003dcc:	b086      	sub	sp, #24
 8003dce:	4605      	mov	r5, r0
 8003dd0:	4620      	mov	r0, r4
 8003dd2:	f007 fb7d 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003dd6:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 8003dd8:	9000      	str	r0, [sp, #0]
 8003dda:	f8d0 7088 	ldr.w	r7, [r0, #136]	; 0x88
 8003dde:	f8d0 6080 	ldr.w	r6, [r0, #128]	; 0x80
 8003de2:	f8d0 8068 	ldr.w	r8, [r0, #104]	; 0x68
 8003de6:	f8b0 907c 	ldrh.w	r9, [r0, #124]	; 0x7c
 8003dea:	b113      	cbz	r3, 8003df2 <FRAMEWIN_Callback+0x2c>
 8003dec:	f8d3 a000 	ldr.w	sl, [r3]
 8003df0:	e000      	b.n	8003df4 <FRAMEWIN_Callback+0x2e>
 8003df2:	469a      	mov	sl, r3
 8003df4:	4668      	mov	r0, sp
 8003df6:	f007 fb79 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003dfa:	b13f      	cbz	r7, 8003e0c <FRAMEWIN_Callback+0x46>
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	4628      	mov	r0, r5
 8003e00:	4798      	blx	r3
 8003e02:	2800      	cmp	r0, #0
 8003e04:	f040 811d 	bne.w	8004042 <FRAMEWIN_Callback+0x27c>
 8003e08:	683f      	ldr	r7, [r7, #0]
 8003e0a:	e7f6      	b.n	8003dfa <FRAMEWIN_Callback+0x34>
 8003e0c:	682b      	ldr	r3, [r5, #0]
 8003e0e:	2b17      	cmp	r3, #23
 8003e10:	f000 808a 	beq.w	8003f28 <FRAMEWIN_Callback+0x162>
 8003e14:	dc18      	bgt.n	8003e48 <FRAMEWIN_Callback+0x82>
 8003e16:	2b0f      	cmp	r3, #15
 8003e18:	d043      	beq.n	8003ea2 <FRAMEWIN_Callback+0xdc>
 8003e1a:	dc06      	bgt.n	8003e2a <FRAMEWIN_Callback+0x64>
 8003e1c:	2b0b      	cmp	r3, #11
 8003e1e:	f000 80fe 	beq.w	800401e <FRAMEWIN_Callback+0x258>
 8003e22:	2b0d      	cmp	r3, #13
 8003e24:	f000 80c0 	beq.w	8003fa8 <FRAMEWIN_Callback+0x1e2>
 8003e28:	e103      	b.n	8004032 <FRAMEWIN_Callback+0x26c>
 8003e2a:	2b11      	cmp	r3, #17
 8003e2c:	d01b      	beq.n	8003e66 <FRAMEWIN_Callback+0xa0>
 8003e2e:	2b14      	cmp	r3, #20
 8003e30:	f040 80ff 	bne.w	8004032 <FRAMEWIN_Callback+0x26c>
 8003e34:	4620      	mov	r0, r4
 8003e36:	a901      	add	r1, sp, #4
 8003e38:	f7ff fe98 	bl	8003b6c <FRAMEWIN__CalcPositions>
 8003e3c:	ab02      	add	r3, sp, #8
 8003e3e:	cb03      	ldmia	r3!, {r0, r1}
 8003e40:	68ea      	ldr	r2, [r5, #12]
 8003e42:	6010      	str	r0, [r2, #0]
 8003e44:	6051      	str	r1, [r2, #4]
 8003e46:	e0fc      	b.n	8004042 <FRAMEWIN_Callback+0x27c>
 8003e48:	2b26      	cmp	r3, #38	; 0x26
 8003e4a:	d070      	beq.n	8003f2e <FRAMEWIN_Callback+0x168>
 8003e4c:	dc05      	bgt.n	8003e5a <FRAMEWIN_Callback+0x94>
 8003e4e:	2b1e      	cmp	r3, #30
 8003e50:	d07b      	beq.n	8003f4a <FRAMEWIN_Callback+0x184>
 8003e52:	2b20      	cmp	r3, #32
 8003e54:	f000 80b6 	beq.w	8003fc4 <FRAMEWIN_Callback+0x1fe>
 8003e58:	e0eb      	b.n	8004032 <FRAMEWIN_Callback+0x26c>
 8003e5a:	2b2a      	cmp	r3, #42	; 0x2a
 8003e5c:	d013      	beq.n	8003e86 <FRAMEWIN_Callback+0xc0>
 8003e5e:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8003e62:	d025      	beq.n	8003eb0 <FRAMEWIN_Callback+0xea>
 8003e64:	e0e5      	b.n	8004032 <FRAMEWIN_Callback+0x26c>
 8003e66:	4620      	mov	r0, r4
 8003e68:	68ee      	ldr	r6, [r5, #12]
 8003e6a:	f007 fb31 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003e6e:	9001      	str	r0, [sp, #4]
 8003e70:	8933      	ldrh	r3, [r6, #8]
 8003e72:	2b01      	cmp	r3, #1
 8003e74:	d105      	bne.n	8003e82 <FRAMEWIN_Callback+0xbc>
 8003e76:	f8b0 307c 	ldrh.w	r3, [r0, #124]	; 0x7c
 8003e7a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003e7e:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 8003e82:	a801      	add	r0, sp, #4
 8003e84:	e0d3      	b.n	800402e <FRAMEWIN_Callback+0x268>
 8003e86:	4620      	mov	r0, r4
 8003e88:	f007 fb22 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003e8c:	68eb      	ldr	r3, [r5, #12]
 8003e8e:	9000      	str	r0, [sp, #0]
 8003e90:	b113      	cbz	r3, 8003e98 <FRAMEWIN_Callback+0xd2>
 8003e92:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
 8003e96:	e002      	b.n	8003e9e <FRAMEWIN_Callback+0xd8>
 8003e98:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8003e9c:	60eb      	str	r3, [r5, #12]
 8003e9e:	4668      	mov	r0, sp
 8003ea0:	e03f      	b.n	8003f22 <FRAMEWIN_Callback+0x15c>
 8003ea2:	f1ba 0f00 	cmp.w	sl, #0
 8003ea6:	f000 80c4 	beq.w	8004032 <FRAMEWIN_Callback+0x26c>
 8003eaa:	4620      	mov	r0, r4
 8003eac:	47d0      	blx	sl
 8003eae:	e0c0      	b.n	8004032 <FRAMEWIN_Callback+0x26c>
 8003eb0:	4620      	mov	r0, r4
 8003eb2:	f8d5 800c 	ldr.w	r8, [r5, #12]
 8003eb6:	f007 fb0b 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003eba:	ae06      	add	r6, sp, #24
 8003ebc:	f8b0 707c 	ldrh.w	r7, [r0, #124]	; 0x7c
 8003ec0:	f846 0d14 	str.w	r0, [r6, #-20]!
 8003ec4:	4630      	mov	r0, r6
 8003ec6:	f007 fb11 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003eca:	68eb      	ldr	r3, [r5, #12]
 8003ecc:	2b00      	cmp	r3, #0
 8003ece:	f000 80b8 	beq.w	8004042 <FRAMEWIN_Callback+0x27c>
 8003ed2:	f898 3008 	ldrb.w	r3, [r8, #8]
 8003ed6:	b1cb      	cbz	r3, 8003f0c <FRAMEWIN_Callback+0x146>
 8003ed8:	073b      	lsls	r3, r7, #28
 8003eda:	d402      	bmi.n	8003ee2 <FRAMEWIN_Callback+0x11c>
 8003edc:	4620      	mov	r0, r4
 8003ede:	f000 fed1 	bl	8004c84 <WM_SetFocus>
 8003ee2:	4620      	mov	r0, r4
 8003ee4:	f000 ffe8 	bl	8004eb8 <WM_BringToTop>
 8003ee8:	f407 7388 	and.w	r3, r7, #272	; 0x110
 8003eec:	f5b3 7f88 	cmp.w	r3, #272	; 0x110
 8003ef0:	f040 80a7 	bne.w	8004042 <FRAMEWIN_Callback+0x27c>
 8003ef4:	f007 0780 	and.w	r7, r7, #128	; 0x80
 8003ef8:	b2bb      	uxth	r3, r7
 8003efa:	2b00      	cmp	r3, #0
 8003efc:	f040 80a1 	bne.w	8004042 <FRAMEWIN_Callback+0x27c>
 8003f00:	4620      	mov	r0, r4
 8003f02:	4641      	mov	r1, r8
 8003f04:	2205      	movs	r2, #5
 8003f06:	f000 fb17 	bl	8004538 <WM_SetCaptureMove>
 8003f0a:	e09a      	b.n	8004042 <FRAMEWIN_Callback+0x27c>
 8003f0c:	4620      	mov	r0, r4
 8003f0e:	f007 fadf 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003f12:	f8b0 307c 	ldrh.w	r3, [r0, #124]	; 0x7c
 8003f16:	9001      	str	r0, [sp, #4]
 8003f18:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003f1c:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 8003f20:	4630      	mov	r0, r6
 8003f22:	f007 fae3 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003f26:	e08c      	b.n	8004042 <FRAMEWIN_Callback+0x27c>
 8003f28:	f8c5 800c 	str.w	r8, [r5, #12]
 8003f2c:	e089      	b.n	8004042 <FRAMEWIN_Callback+0x27c>
 8003f2e:	68eb      	ldr	r3, [r5, #12]
 8003f30:	2b02      	cmp	r3, #2
 8003f32:	f040 8086 	bne.w	8004042 <FRAMEWIN_Callback+0x27c>
 8003f36:	a906      	add	r1, sp, #24
 8003f38:	9304      	str	r3, [sp, #16]
 8003f3a:	2327      	movs	r3, #39	; 0x27
 8003f3c:	f841 3d14 	str.w	r3, [r1, #-20]!
 8003f40:	68a8      	ldr	r0, [r5, #8]
 8003f42:	9403      	str	r4, [sp, #12]
 8003f44:	f000 f968 	bl	8004218 <WM__SendMessage>
 8003f48:	e07b      	b.n	8004042 <FRAMEWIN_Callback+0x27c>
 8003f4a:	f8d5 900c 	ldr.w	r9, [r5, #12]
 8003f4e:	f1b9 0f01 	cmp.w	r9, #1
 8003f52:	d124      	bne.n	8003f9e <FRAMEWIN_Callback+0x1d8>
 8003f54:	4630      	mov	r0, r6
 8003f56:	f000 fde2 	bl	8004b1e <WM_IsWindow>
 8003f5a:	b158      	cbz	r0, 8003f74 <FRAMEWIN_Callback+0x1ae>
 8003f5c:	4630      	mov	r0, r6
 8003f5e:	f000 fe91 	bl	8004c84 <WM_SetFocus>
 8003f62:	4630      	mov	r0, r6
 8003f64:	f000 fdb4 	bl	8004ad0 <WM_HasFocus>
 8003f68:	b188      	cbz	r0, 8003f8e <FRAMEWIN_Callback+0x1c8>
 8003f6a:	4630      	mov	r0, r6
 8003f6c:	4649      	mov	r1, r9
 8003f6e:	f007 fe4f 	bl	800bc10 <WIDGET_OrState>
 8003f72:	e00c      	b.n	8003f8e <FRAMEWIN_Callback+0x1c8>
 8003f74:	4640      	mov	r0, r8
 8003f76:	f000 fab1 	bl	80044dc <WM_SetFocusOnNextChild>
 8003f7a:	4606      	mov	r6, r0
 8003f7c:	4620      	mov	r0, r4
 8003f7e:	f007 faa7 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003f82:	9000      	str	r0, [sp, #0]
 8003f84:	f8c0 6080 	str.w	r6, [r0, #128]	; 0x80
 8003f88:	4668      	mov	r0, sp
 8003f8a:	f007 faaf 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8003f8e:	4620      	mov	r0, r4
 8003f90:	2101      	movs	r1, #1
 8003f92:	f7ff ff14 	bl	8003dbe <FRAMEWIN_SetActive>
 8003f96:	2e00      	cmp	r6, #0
 8003f98:	d153      	bne.n	8004042 <FRAMEWIN_Callback+0x27c>
 8003f9a:	60ee      	str	r6, [r5, #12]
 8003f9c:	e051      	b.n	8004042 <FRAMEWIN_Callback+0x27c>
 8003f9e:	4620      	mov	r0, r4
 8003fa0:	4639      	mov	r1, r7
 8003fa2:	f7ff ff0c 	bl	8003dbe <FRAMEWIN_SetActive>
 8003fa6:	e04c      	b.n	8004042 <FRAMEWIN_Callback+0x27c>
 8003fa8:	f019 0f08 	tst.w	r9, #8
 8003fac:	d141      	bne.n	8004032 <FRAMEWIN_Callback+0x26c>
 8003fae:	68eb      	ldr	r3, [r5, #12]
 8003fb0:	68db      	ldr	r3, [r3, #12]
 8003fb2:	2b00      	cmp	r3, #0
 8003fb4:	d03d      	beq.n	8004032 <FRAMEWIN_Callback+0x26c>
 8003fb6:	7a1b      	ldrb	r3, [r3, #8]
 8003fb8:	2b00      	cmp	r3, #0
 8003fba:	d03a      	beq.n	8004032 <FRAMEWIN_Callback+0x26c>
 8003fbc:	4620      	mov	r0, r4
 8003fbe:	f000 fe61 	bl	8004c84 <WM_SetFocus>
 8003fc2:	e036      	b.n	8004032 <FRAMEWIN_Callback+0x26c>
 8003fc4:	68ee      	ldr	r6, [r5, #12]
 8003fc6:	2e00      	cmp	r6, #0
 8003fc8:	d033      	beq.n	8004032 <FRAMEWIN_Callback+0x26c>
 8003fca:	6870      	ldr	r0, [r6, #4]
 8003fcc:	4621      	mov	r1, r4
 8003fce:	f000 f8ed 	bl	80041ac <WM__IsAncestorOrSelf>
 8003fd2:	b180      	cbz	r0, 8003ff6 <FRAMEWIN_Callback+0x230>
 8003fd4:	4620      	mov	r0, r4
 8003fd6:	2101      	movs	r1, #1
 8003fd8:	f7ff fcdf 	bl	800399a <_SetActive>
 8003fdc:	6870      	ldr	r0, [r6, #4]
 8003fde:	4621      	mov	r1, r4
 8003fe0:	f000 f8d3 	bl	800418a <WM__IsAncestor>
 8003fe4:	b328      	cbz	r0, 8004032 <FRAMEWIN_Callback+0x26c>
 8003fe6:	4620      	mov	r0, r4
 8003fe8:	f007 fa72 	bl	800b4d0 <GUI_ALLOC_LockH>
 8003fec:	ab06      	add	r3, sp, #24
 8003fee:	6872      	ldr	r2, [r6, #4]
 8003ff0:	f843 0d14 	str.w	r0, [r3, #-20]!
 8003ff4:	e00f      	b.n	8004016 <FRAMEWIN_Callback+0x250>
 8003ff6:	4620      	mov	r0, r4
 8003ff8:	4639      	mov	r1, r7
 8003ffa:	f7ff fcce 	bl	800399a <_SetActive>
 8003ffe:	6830      	ldr	r0, [r6, #0]
 8004000:	4621      	mov	r1, r4
 8004002:	f000 f8c2 	bl	800418a <WM__IsAncestor>
 8004006:	b1a0      	cbz	r0, 8004032 <FRAMEWIN_Callback+0x26c>
 8004008:	4620      	mov	r0, r4
 800400a:	f007 fa61 	bl	800b4d0 <GUI_ALLOC_LockH>
 800400e:	ab06      	add	r3, sp, #24
 8004010:	6832      	ldr	r2, [r6, #0]
 8004012:	f843 0d14 	str.w	r0, [r3, #-20]!
 8004016:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 800401a:	4618      	mov	r0, r3
 800401c:	e007      	b.n	800402e <FRAMEWIN_Callback+0x268>
 800401e:	4620      	mov	r0, r4
 8004020:	f007 fa56 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004024:	9000      	str	r0, [sp, #0]
 8004026:	3070      	adds	r0, #112	; 0x70
 8004028:	f007 fc22 	bl	800b870 <GUI_ALLOC_FreePtr>
 800402c:	4668      	mov	r0, sp
 800402e:	f007 fa5d 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004032:	4620      	mov	r0, r4
 8004034:	4629      	mov	r1, r5
 8004036:	f007 fe16 	bl	800bc66 <WIDGET_HandleActive>
 800403a:	b110      	cbz	r0, 8004042 <FRAMEWIN_Callback+0x27c>
 800403c:	4628      	mov	r0, r5
 800403e:	f002 f88d 	bl	800615c <WM_DefaultProc>
 8004042:	b006      	add	sp, #24
 8004044:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08004048 <FRAMEWIN_GetActive>:
 8004048:	b513      	push	{r0, r1, r4, lr}
 800404a:	4604      	mov	r4, r0
 800404c:	b158      	cbz	r0, 8004066 <FRAMEWIN_GetActive+0x1e>
 800404e:	f007 fa3f 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004052:	ab02      	add	r3, sp, #8
 8004054:	f8b0 407c 	ldrh.w	r4, [r0, #124]	; 0x7c
 8004058:	f843 0d04 	str.w	r0, [r3, #-4]!
 800405c:	4618      	mov	r0, r3
 800405e:	f3c4 04c0 	ubfx	r4, r4, #3, #1
 8004062:	f007 fa43 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004066:	4620      	mov	r0, r4
 8004068:	b002      	add	sp, #8
 800406a:	bd10      	pop	{r4, pc}

0800406c <GUI_CreateDialogBox>:
 800406c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004070:	4606      	mov	r6, r0
 8004072:	4688      	mov	r8, r1
 8004074:	4614      	mov	r4, r2
 8004076:	461d      	mov	r5, r3
 8004078:	b913      	cbnz	r3, 8004080 <GUI_CreateDialogBox+0x14>
 800407a:	f000 fb97 	bl	80047ac <WM_GetDesktopWindow>
 800407e:	4605      	mov	r5, r0
 8004080:	9400      	str	r4, [sp, #0]
 8004082:	4630      	mov	r0, r6
 8004084:	6834      	ldr	r4, [r6, #0]
 8004086:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004088:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800408a:	4629      	mov	r1, r5
 800408c:	47a0      	blx	r4
 800408e:	4604      	mov	r4, r0
 8004090:	2800      	cmp	r0, #0
 8004092:	d039      	beq.n	8004108 <GUI_CreateDialogBox+0x9c>
 8004094:	f000 fb7c 	bl	8004790 <WM_GetClientWindow>
 8004098:	8a71      	ldrh	r1, [r6, #18]
 800409a:	4607      	mov	r7, r0
 800409c:	4620      	mov	r0, r4
 800409e:	f007 fdb7 	bl	800bc10 <WIDGET_OrState>
 80040a2:	4620      	mov	r0, r4
 80040a4:	f000 fe8b 	bl	8004dbe <WM_ShowWindow>
 80040a8:	4638      	mov	r0, r7
 80040aa:	f108 38ff 	add.w	r8, r8, #4294967295
 80040ae:	f000 fe86 	bl	8004dbe <WM_ShowWindow>
 80040b2:	f1b8 0f00 	cmp.w	r8, #0
 80040b6:	dd0f      	ble.n	80040d8 <GUI_CreateDialogBox+0x6c>
 80040b8:	f856 cf1c 	ldr.w	ip, [r6, #28]!
 80040bc:	2200      	movs	r2, #0
 80040be:	9200      	str	r2, [sp, #0]
 80040c0:	4630      	mov	r0, r6
 80040c2:	4639      	mov	r1, r7
 80040c4:	4613      	mov	r3, r2
 80040c6:	47e0      	blx	ip
 80040c8:	4681      	mov	r9, r0
 80040ca:	2800      	cmp	r0, #0
 80040cc:	d1ed      	bne.n	80040aa <GUI_CreateDialogBox+0x3e>
 80040ce:	4620      	mov	r0, r4
 80040d0:	f001 fcee 	bl	8005ab0 <WM_DeleteWindow>
 80040d4:	4648      	mov	r0, r9
 80040d6:	e018      	b.n	800410a <GUI_CreateDialogBox+0x9e>
 80040d8:	4638      	mov	r0, r7
 80040da:	211d      	movs	r1, #29
 80040dc:	f000 fdb7 	bl	8004c4e <WM_SendMessageNoPara>
 80040e0:	1c6b      	adds	r3, r5, #1
 80040e2:	d011      	beq.n	8004108 <GUI_CreateDialogBox+0x9c>
 80040e4:	f000 fb8c 	bl	8004800 <WM_GetFocusedWindow>
 80040e8:	b150      	cbz	r0, 8004100 <GUI_CreateDialogBox+0x94>
 80040ea:	f007 f9e7 	bl	800b4bc <GUI_ALLOC_h2p>
 80040ee:	6980      	ldr	r0, [r0, #24]
 80040f0:	42a0      	cmp	r0, r4
 80040f2:	d00a      	beq.n	800410a <GUI_CreateDialogBox+0x9e>
 80040f4:	2800      	cmp	r0, #0
 80040f6:	d1f8      	bne.n	80040ea <GUI_CreateDialogBox+0x7e>
 80040f8:	4620      	mov	r0, r4
 80040fa:	f000 f9ef 	bl	80044dc <WM_SetFocusOnNextChild>
 80040fe:	e003      	b.n	8004108 <GUI_CreateDialogBox+0x9c>
 8004100:	42a5      	cmp	r5, r4
 8004102:	d1f9      	bne.n	80040f8 <GUI_CreateDialogBox+0x8c>
 8004104:	4628      	mov	r0, r5
 8004106:	e000      	b.n	800410a <GUI_CreateDialogBox+0x9e>
 8004108:	4620      	mov	r0, r4
 800410a:	b003      	add	sp, #12
 800410c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08004110 <WM__ForEachDesc>:
 8004110:	b570      	push	{r4, r5, r6, lr}
 8004112:	460d      	mov	r5, r1
 8004114:	4616      	mov	r6, r2
 8004116:	f007 f9d1 	bl	800b4bc <GUI_ALLOC_h2p>
 800411a:	69c4      	ldr	r4, [r0, #28]
 800411c:	b164      	cbz	r4, 8004138 <WM__ForEachDesc+0x28>
 800411e:	4620      	mov	r0, r4
 8004120:	4631      	mov	r1, r6
 8004122:	47a8      	blx	r5
 8004124:	4620      	mov	r0, r4
 8004126:	4629      	mov	r1, r5
 8004128:	4632      	mov	r2, r6
 800412a:	f7ff fff1 	bl	8004110 <WM__ForEachDesc>
 800412e:	4620      	mov	r0, r4
 8004130:	f007 f9c4 	bl	800b4bc <GUI_ALLOC_h2p>
 8004134:	6a04      	ldr	r4, [r0, #32]
 8004136:	e7f1      	b.n	800411c <WM__ForEachDesc+0xc>
 8004138:	bd70      	pop	{r4, r5, r6, pc}

0800413a <WM__GetFirstSibling>:
 800413a:	b508      	push	{r3, lr}
 800413c:	f000 fbf2 	bl	8004924 <WM_GetParent>
 8004140:	b118      	cbz	r0, 800414a <WM__GetFirstSibling+0x10>
 8004142:	f007 f9bb 	bl	800b4bc <GUI_ALLOC_h2p>
 8004146:	69c0      	ldr	r0, [r0, #28]
 8004148:	bd08      	pop	{r3, pc}
 800414a:	bd08      	pop	{r3, pc}

0800414c <WM__GetLastSibling>:
 800414c:	b510      	push	{r4, lr}
 800414e:	4604      	mov	r4, r0
 8004150:	b130      	cbz	r0, 8004160 <WM__GetLastSibling+0x14>
 8004152:	4620      	mov	r0, r4
 8004154:	f007 f9b2 	bl	800b4bc <GUI_ALLOC_h2p>
 8004158:	6a03      	ldr	r3, [r0, #32]
 800415a:	b10b      	cbz	r3, 8004160 <WM__GetLastSibling+0x14>
 800415c:	461c      	mov	r4, r3
 800415e:	e7f8      	b.n	8004152 <WM__GetLastSibling+0x6>
 8004160:	4620      	mov	r0, r4
 8004162:	bd10      	pop	{r4, pc}

08004164 <WM__GetPrevSibling>:
 8004164:	b538      	push	{r3, r4, r5, lr}
 8004166:	4605      	mov	r5, r0
 8004168:	f7ff ffe7 	bl	800413a <WM__GetFirstSibling>
 800416c:	4604      	mov	r4, r0
 800416e:	b154      	cbz	r4, 8004186 <WM__GetPrevSibling+0x22>
 8004170:	42ac      	cmp	r4, r5
 8004172:	d007      	beq.n	8004184 <WM__GetPrevSibling+0x20>
 8004174:	4620      	mov	r0, r4
 8004176:	f007 f9a1 	bl	800b4bc <GUI_ALLOC_h2p>
 800417a:	6a03      	ldr	r3, [r0, #32]
 800417c:	42ab      	cmp	r3, r5
 800417e:	d002      	beq.n	8004186 <WM__GetPrevSibling+0x22>
 8004180:	461c      	mov	r4, r3
 8004182:	e7f4      	b.n	800416e <WM__GetPrevSibling+0xa>
 8004184:	2400      	movs	r4, #0
 8004186:	4620      	mov	r0, r4
 8004188:	bd38      	pop	{r3, r4, r5, pc}

0800418a <WM__IsAncestor>:
 800418a:	b510      	push	{r4, lr}
 800418c:	460c      	mov	r4, r1
 800418e:	b908      	cbnz	r0, 8004194 <WM__IsAncestor+0xa>
 8004190:	2000      	movs	r0, #0
 8004192:	bd10      	pop	{r4, pc}
 8004194:	2900      	cmp	r1, #0
 8004196:	d0fb      	beq.n	8004190 <WM__IsAncestor+0x6>
 8004198:	f007 f990 	bl	800b4bc <GUI_ALLOC_h2p>
 800419c:	6980      	ldr	r0, [r0, #24]
 800419e:	42a0      	cmp	r0, r4
 80041a0:	d002      	beq.n	80041a8 <WM__IsAncestor+0x1e>
 80041a2:	2800      	cmp	r0, #0
 80041a4:	d1f8      	bne.n	8004198 <WM__IsAncestor+0xe>
 80041a6:	e7f3      	b.n	8004190 <WM__IsAncestor+0x6>
 80041a8:	2001      	movs	r0, #1
 80041aa:	bd10      	pop	{r4, pc}

080041ac <WM__IsAncestorOrSelf>:
 80041ac:	4288      	cmp	r0, r1
 80041ae:	d001      	beq.n	80041b4 <WM__IsAncestorOrSelf+0x8>
 80041b0:	f7ff bfeb 	b.w	800418a <WM__IsAncestor>
 80041b4:	2001      	movs	r0, #1
 80041b6:	4770      	bx	lr

080041b8 <WM__IsChild>:
 80041b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80041ba:	460d      	mov	r5, r1
 80041bc:	4604      	mov	r4, r0
 80041be:	b160      	cbz	r0, 80041da <WM__IsChild+0x22>
 80041c0:	f007 f986 	bl	800b4d0 <GUI_ALLOC_LockH>
 80041c4:	9001      	str	r0, [sp, #4]
 80041c6:	b120      	cbz	r0, 80041d2 <WM__IsChild+0x1a>
 80041c8:	6984      	ldr	r4, [r0, #24]
 80041ca:	1b63      	subs	r3, r4, r5
 80041cc:	425c      	negs	r4, r3
 80041ce:	415c      	adcs	r4, r3
 80041d0:	e000      	b.n	80041d4 <WM__IsChild+0x1c>
 80041d2:	4604      	mov	r4, r0
 80041d4:	a801      	add	r0, sp, #4
 80041d6:	f007 f989 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80041da:	4620      	mov	r0, r4
 80041dc:	b003      	add	sp, #12
 80041de:	bd30      	pop	{r4, r5, pc}

080041e0 <WM__GetFocusedChild>:
 80041e0:	b538      	push	{r3, r4, r5, lr}
 80041e2:	4d06      	ldr	r5, [pc, #24]	; (80041fc <WM__GetFocusedChild+0x1c>)
 80041e4:	4c06      	ldr	r4, [pc, #24]	; (8004200 <WM__GetFocusedChild+0x20>)
 80041e6:	682b      	ldr	r3, [r5, #0]
 80041e8:	4601      	mov	r1, r0
 80041ea:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80041ee:	f7ff ffe3 	bl	80041b8 <WM__IsChild>
 80041f2:	b110      	cbz	r0, 80041fa <WM__GetFocusedChild+0x1a>
 80041f4:	682b      	ldr	r3, [r5, #0]
 80041f6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80041fa:	bd38      	pop	{r3, r4, r5, pc}
 80041fc:	20002ca0 	.word	0x20002ca0
 8004200:	20002c90 	.word	0x20002c90

08004204 <WM__Screen2Client>:
 8004204:	f9b0 3000 	ldrsh.w	r3, [r0]
 8004208:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800420c:	4608      	mov	r0, r1
 800420e:	4252      	negs	r2, r2
 8004210:	4259      	negs	r1, r3
 8004212:	f006 bc74 	b.w	800aafe <GUI_MoveRect>
	...

08004218 <WM__SendMessage>:
 8004218:	b570      	push	{r4, r5, r6, lr}
 800421a:	4c0d      	ldr	r4, [pc, #52]	; (8004250 <WM__SendMessage+0x38>)
 800421c:	6823      	ldr	r3, [r4, #0]
 800421e:	2b13      	cmp	r3, #19
 8004220:	4606      	mov	r6, r0
 8004222:	460d      	mov	r5, r1
 8004224:	dc12      	bgt.n	800424c <WM__SendMessage+0x34>
 8004226:	f007 f949 	bl	800b4bc <GUI_ALLOC_h2p>
 800422a:	6903      	ldr	r3, [r0, #16]
 800422c:	606e      	str	r6, [r5, #4]
 800422e:	b143      	cbz	r3, 8004242 <WM__SendMessage+0x2a>
 8004230:	6822      	ldr	r2, [r4, #0]
 8004232:	4628      	mov	r0, r5
 8004234:	3201      	adds	r2, #1
 8004236:	6022      	str	r2, [r4, #0]
 8004238:	4798      	blx	r3
 800423a:	6823      	ldr	r3, [r4, #0]
 800423c:	3b01      	subs	r3, #1
 800423e:	6023      	str	r3, [r4, #0]
 8004240:	bd70      	pop	{r4, r5, r6, pc}
 8004242:	4628      	mov	r0, r5
 8004244:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004248:	f001 bf88 	b.w	800615c <WM_DefaultProc>
 800424c:	bd70      	pop	{r4, r5, r6, pc}
 800424e:	bf00      	nop
 8004250:	20002ac0 	.word	0x20002ac0

08004254 <WM__SendMessageNoPara>:
 8004254:	b530      	push	{r4, r5, lr}
 8004256:	b085      	sub	sp, #20
 8004258:	4604      	mov	r4, r0
 800425a:	2210      	movs	r2, #16
 800425c:	460d      	mov	r5, r1
 800425e:	4668      	mov	r0, sp
 8004260:	2100      	movs	r1, #0
 8004262:	f00b fd73 	bl	800fd4c <memset>
 8004266:	4620      	mov	r0, r4
 8004268:	f007 f928 	bl	800b4bc <GUI_ALLOC_h2p>
 800426c:	6903      	ldr	r3, [r0, #16]
 800426e:	b11b      	cbz	r3, 8004278 <WM__SendMessageNoPara+0x24>
 8004270:	9401      	str	r4, [sp, #4]
 8004272:	9500      	str	r5, [sp, #0]
 8004274:	4668      	mov	r0, sp
 8004276:	4798      	blx	r3
 8004278:	b005      	add	sp, #20
 800427a:	bd30      	pop	{r4, r5, pc}

0800427c <WM__UpdateChildPositions>:
 800427c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004280:	b087      	sub	sp, #28
 8004282:	69c4      	ldr	r4, [r0, #28]
 8004284:	9303      	str	r3, [sp, #12]
 8004286:	468a      	mov	sl, r1
 8004288:	4693      	mov	fp, r2
 800428a:	2c00      	cmp	r4, #0
 800428c:	d06d      	beq.n	800436a <WM__UpdateChildPositions+0xee>
 800428e:	4620      	mov	r0, r4
 8004290:	f007 f91e 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004294:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8004296:	9005      	str	r0, [sp, #20]
 8004298:	f401 7320 	and.w	r3, r1, #640	; 0x280
 800429c:	2b80      	cmp	r3, #128	; 0x80
 800429e:	f8b0 8000 	ldrh.w	r8, [r0]
 80042a2:	8842      	ldrh	r2, [r0, #2]
 80042a4:	8886      	ldrh	r6, [r0, #4]
 80042a6:	88c5      	ldrh	r5, [r0, #6]
 80042a8:	d008      	beq.n	80042bc <WM__UpdateChildPositions+0x40>
 80042aa:	f5b3 7f20 	cmp.w	r3, #640	; 0x280
 80042ae:	d108      	bne.n	80042c2 <WM__UpdateChildPositions+0x46>
 80042b0:	eb08 090a 	add.w	r9, r8, sl
 80042b4:	fa1f f989 	uxth.w	r9, r9
 80042b8:	9b03      	ldr	r3, [sp, #12]
 80042ba:	e008      	b.n	80042ce <WM__UpdateChildPositions+0x52>
 80042bc:	9803      	ldr	r0, [sp, #12]
 80042be:	b283      	uxth	r3, r0
 80042c0:	e001      	b.n	80042c6 <WM__UpdateChildPositions+0x4a>
 80042c2:	fa1f f38a 	uxth.w	r3, sl
 80042c6:	eb03 0908 	add.w	r9, r3, r8
 80042ca:	fa1f f989 	uxth.w	r9, r9
 80042ce:	f401 61a0 	and.w	r1, r1, #1280	; 0x500
 80042d2:	4433      	add	r3, r6
 80042d4:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 80042d8:	b29b      	uxth	r3, r3
 80042da:	d008      	beq.n	80042ee <WM__UpdateChildPositions+0x72>
 80042dc:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 80042e0:	d108      	bne.n	80042f4 <WM__UpdateChildPositions+0x78>
 80042e2:	eb02 0c0b 	add.w	ip, r2, fp
 80042e6:	fa1f fc8c 	uxth.w	ip, ip
 80042ea:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80042ec:	e008      	b.n	8004300 <WM__UpdateChildPositions+0x84>
 80042ee:	9910      	ldr	r1, [sp, #64]	; 0x40
 80042f0:	b28f      	uxth	r7, r1
 80042f2:	e001      	b.n	80042f8 <WM__UpdateChildPositions+0x7c>
 80042f4:	fa1f f78b 	uxth.w	r7, fp
 80042f8:	eb07 0c02 	add.w	ip, r7, r2
 80042fc:	fa1f fc8c 	uxth.w	ip, ip
 8004300:	fa0f f989 	sxth.w	r9, r9
 8004304:	fa0f f888 	sxth.w	r8, r8
 8004308:	b212      	sxth	r2, r2
 800430a:	442f      	add	r7, r5
 800430c:	fa0f fc8c 	sxth.w	ip, ip
 8004310:	ebb9 0108 	subs.w	r1, r9, r8
 8004314:	9202      	str	r2, [sp, #8]
 8004316:	b2bf      	uxth	r7, r7
 8004318:	ebc2 020c 	rsb	r2, r2, ip
 800431c:	d100      	bne.n	8004320 <WM__UpdateChildPositions+0xa4>
 800431e:	b142      	cbz	r2, 8004332 <WM__UpdateChildPositions+0xb6>
 8004320:	4620      	mov	r0, r4
 8004322:	9301      	str	r3, [sp, #4]
 8004324:	f8cd c000 	str.w	ip, [sp]
 8004328:	f000 fa12 	bl	8004750 <WM_MoveWindow>
 800432c:	f8dd c000 	ldr.w	ip, [sp]
 8004330:	9b01      	ldr	r3, [sp, #4]
 8004332:	b21b      	sxth	r3, r3
 8004334:	ebc9 0903 	rsb	r9, r9, r3
 8004338:	b236      	sxth	r6, r6
 800433a:	9b02      	ldr	r3, [sp, #8]
 800433c:	ebc6 0808 	rsb	r8, r6, r8
 8004340:	b23f      	sxth	r7, r7
 8004342:	b22d      	sxth	r5, r5
 8004344:	ebcc 0c07 	rsb	ip, ip, r7
 8004348:	1b5d      	subs	r5, r3, r5
 800434a:	eb19 0108 	adds.w	r1, r9, r8
 800434e:	eb0c 0205 	add.w	r2, ip, r5
 8004352:	d100      	bne.n	8004356 <WM__UpdateChildPositions+0xda>
 8004354:	b112      	cbz	r2, 800435c <WM__UpdateChildPositions+0xe0>
 8004356:	4620      	mov	r0, r4
 8004358:	f000 fbfe 	bl	8004b58 <WM_ResizeWindow>
 800435c:	a806      	add	r0, sp, #24
 800435e:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8004362:	6a1c      	ldr	r4, [r3, #32]
 8004364:	f007 f8c2 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004368:	e78f      	b.n	800428a <WM__UpdateChildPositions+0xe>
 800436a:	b007      	add	sp, #28
 800436c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004370 <WM__AddCriticalHandle>:
 8004370:	4b02      	ldr	r3, [pc, #8]	; (800437c <WM__AddCriticalHandle+0xc>)
 8004372:	681a      	ldr	r2, [r3, #0]
 8004374:	6002      	str	r2, [r0, #0]
 8004376:	6018      	str	r0, [r3, #0]
 8004378:	4770      	bx	lr
 800437a:	bf00      	nop
 800437c:	20002cbc 	.word	0x20002cbc

08004380 <WM__GetClientRectEx>:
 8004380:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004382:	460d      	mov	r5, r1
 8004384:	b158      	cbz	r0, 800439e <WM__GetClientRectEx+0x1e>
 8004386:	b151      	cbz	r1, 800439e <WM__GetClientRectEx+0x1e>
 8004388:	f007 f8a2 	bl	800b4d0 <GUI_ALLOC_LockH>
 800438c:	ac02      	add	r4, sp, #8
 800438e:	4629      	mov	r1, r5
 8004390:	f844 0d04 	str.w	r0, [r4, #-4]!
 8004394:	f001 f96a 	bl	800566c <WM__GetClientRectWin>
 8004398:	4620      	mov	r0, r4
 800439a:	f007 f8a7 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800439e:	b003      	add	sp, #12
 80043a0:	bd30      	pop	{r4, r5, pc}
	...

080043a4 <WM_SetHasTrans>:
 80043a4:	b513      	push	{r0, r1, r4, lr}
 80043a6:	4604      	mov	r4, r0
 80043a8:	b1b8      	cbz	r0, 80043da <WM_SetHasTrans+0x36>
 80043aa:	f007 f891 	bl	800b4d0 <GUI_ALLOC_LockH>
 80043ae:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80043b0:	9001      	str	r0, [sp, #4]
 80043b2:	07db      	lsls	r3, r3, #31
 80043b4:	d40e      	bmi.n	80043d4 <WM_SetHasTrans+0x30>
 80043b6:	4620      	mov	r0, r4
 80043b8:	f000 fd16 	bl	8004de8 <WM_ValidateWindow>
 80043bc:	9b01      	ldr	r3, [sp, #4]
 80043be:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80043c0:	f042 0201 	orr.w	r2, r2, #1
 80043c4:	629a      	str	r2, [r3, #40]	; 0x28
 80043c6:	4b06      	ldr	r3, [pc, #24]	; (80043e0 <WM_SetHasTrans+0x3c>)
 80043c8:	681a      	ldr	r2, [r3, #0]
 80043ca:	4620      	mov	r0, r4
 80043cc:	3201      	adds	r2, #1
 80043ce:	601a      	str	r2, [r3, #0]
 80043d0:	f001 fa96 	bl	8005900 <WM_InvalidateWindow>
 80043d4:	a801      	add	r0, sp, #4
 80043d6:	f007 f889 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80043da:	b002      	add	sp, #8
 80043dc:	bd10      	pop	{r4, pc}
 80043de:	bf00      	nop
 80043e0:	20002cd0 	.word	0x20002cd0

080043e4 <WM_GetHasTrans>:
 80043e4:	b508      	push	{r3, lr}
 80043e6:	b128      	cbz	r0, 80043f4 <WM_GetHasTrans+0x10>
 80043e8:	f007 f868 	bl	800b4bc <GUI_ALLOC_h2p>
 80043ec:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80043ee:	f000 0001 	and.w	r0, r0, #1
 80043f2:	bd08      	pop	{r3, pc}
 80043f4:	bd08      	pop	{r3, pc}

080043f6 <_SetScrollbar>:
 80043f6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80043f8:	460d      	mov	r5, r1
 80043fa:	4611      	mov	r1, r2
 80043fc:	4606      	mov	r6, r0
 80043fe:	461f      	mov	r7, r3
 8004400:	f000 fa3a 	bl	8004878 <WM_GetDialogItem>
 8004404:	4604      	mov	r4, r0
 8004406:	b1a5      	cbz	r5, 8004432 <_SetScrollbar+0x3c>
 8004408:	b920      	cbnz	r0, 8004414 <_SetScrollbar+0x1e>
 800440a:	4630      	mov	r0, r6
 800440c:	4639      	mov	r1, r7
 800440e:	f007 fddb 	bl	800bfc8 <SCROLLBAR_CreateAttached>
 8004412:	e014      	b.n	800443e <_SetScrollbar+0x48>
 8004414:	f007 f85c 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004418:	ab02      	add	r3, sp, #8
 800441a:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800441c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004420:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004424:	f042 0202 	orr.w	r2, r2, #2
 8004428:	6282      	str	r2, [r0, #40]	; 0x28
 800442a:	4618      	mov	r0, r3
 800442c:	f007 f85e 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004430:	e005      	b.n	800443e <_SetScrollbar+0x48>
 8004432:	b120      	cbz	r0, 800443e <_SetScrollbar+0x48>
 8004434:	f000 fcf0 	bl	8004e18 <WM_HideWindow>
 8004438:	4620      	mov	r0, r4
 800443a:	f001 fe33 	bl	80060a4 <WM__DeleteSecure>
 800443e:	1c20      	adds	r0, r4, #0
 8004440:	bf18      	it	ne
 8004442:	2001      	movne	r0, #1
 8004444:	b003      	add	sp, #12
 8004446:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004448 <WM__SetScrollbarV>:
 8004448:	22fe      	movs	r2, #254	; 0xfe
 800444a:	2308      	movs	r3, #8
 800444c:	f7ff bfd3 	b.w	80043f6 <_SetScrollbar>

08004450 <WM__SetScrollbarH>:
 8004450:	22ff      	movs	r2, #255	; 0xff
 8004452:	2300      	movs	r3, #0
 8004454:	f7ff bfcf 	b.w	80043f6 <_SetScrollbar>

08004458 <WM_SetScrollbarH>:
 8004458:	f7ff bffa 	b.w	8004450 <WM__SetScrollbarH>

0800445c <WM_SetScrollbarV>:
 800445c:	f7ff bff4 	b.w	8004448 <WM__SetScrollbarV>

08004460 <_GetPrevChild>:
 8004460:	b510      	push	{r4, lr}
 8004462:	4604      	mov	r4, r0
 8004464:	b918      	cbnz	r0, 800446e <_GetPrevChild+0xe>
 8004466:	4620      	mov	r0, r4
 8004468:	f7ff fe70 	bl	800414c <WM__GetLastSibling>
 800446c:	e003      	b.n	8004476 <_GetPrevChild+0x16>
 800446e:	f7ff fe79 	bl	8004164 <WM__GetPrevSibling>
 8004472:	2800      	cmp	r0, #0
 8004474:	d0f7      	beq.n	8004466 <_GetPrevChild+0x6>
 8004476:	42a0      	cmp	r0, r4
 8004478:	bf08      	it	eq
 800447a:	2000      	moveq	r0, #0
 800447c:	bd10      	pop	{r4, pc}

0800447e <WM_SetFocusOnPrevChild>:
 800447e:	b538      	push	{r3, r4, r5, lr}
 8004480:	4604      	mov	r4, r0
 8004482:	b1b0      	cbz	r0, 80044b2 <WM_SetFocusOnPrevChild+0x34>
 8004484:	f7ff feac 	bl	80041e0 <WM__GetFocusedChild>
 8004488:	f7ff ffea 	bl	8004460 <_GetPrevChild>
 800448c:	4605      	mov	r5, r0
 800448e:	4604      	mov	r4, r0
 8004490:	4620      	mov	r0, r4
 8004492:	f000 fb2b 	bl	8004aec <WM_IsFocusable>
 8004496:	b930      	cbnz	r0, 80044a6 <WM_SetFocusOnPrevChild+0x28>
 8004498:	b12c      	cbz	r4, 80044a6 <WM_SetFocusOnPrevChild+0x28>
 800449a:	4620      	mov	r0, r4
 800449c:	f7ff ffe0 	bl	8004460 <_GetPrevChild>
 80044a0:	42a8      	cmp	r0, r5
 80044a2:	4604      	mov	r4, r0
 80044a4:	d1f4      	bne.n	8004490 <WM_SetFocusOnPrevChild+0x12>
 80044a6:	4620      	mov	r0, r4
 80044a8:	f000 fbec 	bl	8004c84 <WM_SetFocus>
 80044ac:	2800      	cmp	r0, #0
 80044ae:	bf18      	it	ne
 80044b0:	2400      	movne	r4, #0
 80044b2:	4620      	mov	r0, r4
 80044b4:	bd38      	pop	{r3, r4, r5, pc}

080044b6 <_GetNextChild>:
 80044b6:	b538      	push	{r3, r4, r5, lr}
 80044b8:	4605      	mov	r5, r0
 80044ba:	460c      	mov	r4, r1
 80044bc:	b921      	cbnz	r1, 80044c8 <_GetNextChild+0x12>
 80044be:	4628      	mov	r0, r5
 80044c0:	f006 fffc 	bl	800b4bc <GUI_ALLOC_h2p>
 80044c4:	69c0      	ldr	r0, [r0, #28]
 80044c6:	e005      	b.n	80044d4 <_GetNextChild+0x1e>
 80044c8:	4608      	mov	r0, r1
 80044ca:	f006 fff7 	bl	800b4bc <GUI_ALLOC_h2p>
 80044ce:	6a00      	ldr	r0, [r0, #32]
 80044d0:	2800      	cmp	r0, #0
 80044d2:	d0f4      	beq.n	80044be <_GetNextChild+0x8>
 80044d4:	42a0      	cmp	r0, r4
 80044d6:	bf08      	it	eq
 80044d8:	2000      	moveq	r0, #0
 80044da:	bd38      	pop	{r3, r4, r5, pc}

080044dc <WM_SetFocusOnNextChild>:
 80044dc:	b570      	push	{r4, r5, r6, lr}
 80044de:	4605      	mov	r5, r0
 80044e0:	b328      	cbz	r0, 800452e <WM_SetFocusOnNextChild+0x52>
 80044e2:	f7ff fe7d 	bl	80041e0 <WM__GetFocusedChild>
 80044e6:	4601      	mov	r1, r0
 80044e8:	4628      	mov	r0, r5
 80044ea:	f7ff ffe4 	bl	80044b6 <_GetNextChild>
 80044ee:	4606      	mov	r6, r0
 80044f0:	4604      	mov	r4, r0
 80044f2:	4620      	mov	r0, r4
 80044f4:	f000 fafa 	bl	8004aec <WM_IsFocusable>
 80044f8:	b938      	cbnz	r0, 800450a <WM_SetFocusOnNextChild+0x2e>
 80044fa:	b13c      	cbz	r4, 800450c <WM_SetFocusOnNextChild+0x30>
 80044fc:	4621      	mov	r1, r4
 80044fe:	4628      	mov	r0, r5
 8004500:	f7ff ffd9 	bl	80044b6 <_GetNextChild>
 8004504:	42b0      	cmp	r0, r6
 8004506:	4604      	mov	r4, r0
 8004508:	d1f3      	bne.n	80044f2 <WM_SetFocusOnNextChild+0x16>
 800450a:	b90c      	cbnz	r4, 8004510 <WM_SetFocusOnNextChild+0x34>
 800450c:	2400      	movs	r4, #0
 800450e:	e00f      	b.n	8004530 <WM_SetFocusOnNextChild+0x54>
 8004510:	4d08      	ldr	r5, [pc, #32]	; (8004534 <WM_SetFocusOnNextChild+0x58>)
 8004512:	4620      	mov	r0, r4
 8004514:	682e      	ldr	r6, [r5, #0]
 8004516:	f001 f8b5 	bl	8005684 <WM__GetTopLevelLayer>
 800451a:	1c43      	adds	r3, r0, #1
 800451c:	d008      	beq.n	8004530 <WM_SetFocusOnNextChild+0x54>
 800451e:	6028      	str	r0, [r5, #0]
 8004520:	4620      	mov	r0, r4
 8004522:	f000 fbaf 	bl	8004c84 <WM_SetFocus>
 8004526:	602e      	str	r6, [r5, #0]
 8004528:	2800      	cmp	r0, #0
 800452a:	d1ef      	bne.n	800450c <WM_SetFocusOnNextChild+0x30>
 800452c:	e000      	b.n	8004530 <WM_SetFocusOnNextChild+0x54>
 800452e:	4604      	mov	r4, r0
 8004530:	4620      	mov	r0, r4
 8004532:	bd70      	pop	{r4, r5, r6, pc}
 8004534:	20002ca0 	.word	0x20002ca0

08004538 <WM_SetCaptureMove>:
 8004538:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800453c:	b085      	sub	sp, #20
 800453e:	4604      	mov	r4, r0
 8004540:	460d      	mov	r5, r1
 8004542:	4691      	mov	r9, r2
 8004544:	4698      	mov	r8, r3
 8004546:	f000 fab5 	bl	8004ab4 <WM_HasCaptured>
 800454a:	4e21      	ldr	r6, [pc, #132]	; (80045d0 <WM_SetCaptureMove+0x98>)
 800454c:	b940      	cbnz	r0, 8004560 <WM_SetCaptureMove+0x28>
 800454e:	4620      	mov	r0, r4
 8004550:	2101      	movs	r1, #1
 8004552:	f000 f859 	bl	8004608 <WM_SetCapture>
 8004556:	682b      	ldr	r3, [r5, #0]
 8004558:	8033      	strh	r3, [r6, #0]
 800455a:	686b      	ldr	r3, [r5, #4]
 800455c:	8073      	strh	r3, [r6, #2]
 800455e:	e034      	b.n	80045ca <WM_SetCaptureMove+0x92>
 8004560:	682b      	ldr	r3, [r5, #0]
 8004562:	f9b6 7000 	ldrsh.w	r7, [r6]
 8004566:	686d      	ldr	r5, [r5, #4]
 8004568:	1bdf      	subs	r7, r3, r7
 800456a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800456e:	4620      	mov	r0, r4
 8004570:	1aed      	subs	r5, r5, r3
 8004572:	f1b9 0f00 	cmp.w	r9, #0
 8004576:	d102      	bne.n	800457e <WM_SetCaptureMove+0x46>
 8004578:	f1b8 0f00 	cmp.w	r8, #0
 800457c:	d021      	beq.n	80045c2 <WM_SetCaptureMove+0x8a>
 800457e:	4669      	mov	r1, sp
 8004580:	f000 fa39 	bl	80049f6 <WM_GetWindowRectEx>
 8004584:	f1b8 0f00 	cmp.w	r8, #0
 8004588:	d005      	beq.n	8004596 <WM_SetCaptureMove+0x5e>
 800458a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800458e:	3b01      	subs	r3, #1
 8004590:	4498      	add	r8, r3
 8004592:	f8ad 8006 	strh.w	r8, [sp, #6]
 8004596:	4620      	mov	r0, r4
 8004598:	f000 f9c4 	bl	8004924 <WM_GetParent>
 800459c:	a902      	add	r1, sp, #8
 800459e:	f000 fa2a 	bl	80049f6 <WM_GetWindowRectEx>
 80045a2:	4668      	mov	r0, sp
 80045a4:	4639      	mov	r1, r7
 80045a6:	462a      	mov	r2, r5
 80045a8:	f006 faa9 	bl	800aafe <GUI_MoveRect>
 80045ac:	a802      	add	r0, sp, #8
 80045ae:	4601      	mov	r1, r0
 80045b0:	464a      	mov	r2, r9
 80045b2:	f004 fcb8 	bl	8008f26 <GUI__ReduceRect>
 80045b6:	4668      	mov	r0, sp
 80045b8:	a902      	add	r1, sp, #8
 80045ba:	f006 faeb 	bl	800ab94 <GUI_RectsIntersect>
 80045be:	b120      	cbz	r0, 80045ca <WM_SetCaptureMove+0x92>
 80045c0:	4620      	mov	r0, r4
 80045c2:	4639      	mov	r1, r7
 80045c4:	462a      	mov	r2, r5
 80045c6:	f000 f8c3 	bl	8004750 <WM_MoveWindow>
 80045ca:	b005      	add	sp, #20
 80045cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80045d0:	20002ac4 	.word	0x20002ac4

080045d4 <WM__ReleaseCapture>:
 80045d4:	b530      	push	{r4, r5, lr}
 80045d6:	4d0a      	ldr	r5, [pc, #40]	; (8004600 <WM__ReleaseCapture+0x2c>)
 80045d8:	4c0a      	ldr	r4, [pc, #40]	; (8004604 <WM__ReleaseCapture+0x30>)
 80045da:	682b      	ldr	r3, [r5, #0]
 80045dc:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80045e0:	b085      	sub	sp, #20
 80045e2:	b150      	cbz	r0, 80045fa <WM__ReleaseCapture+0x26>
 80045e4:	a904      	add	r1, sp, #16
 80045e6:	2318      	movs	r3, #24
 80045e8:	f841 3d10 	str.w	r3, [r1, #-16]!
 80045ec:	4669      	mov	r1, sp
 80045ee:	f7ff fe13 	bl	8004218 <WM__SendMessage>
 80045f2:	682b      	ldr	r3, [r5, #0]
 80045f4:	2200      	movs	r2, #0
 80045f6:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 80045fa:	b005      	add	sp, #20
 80045fc:	bd30      	pop	{r4, r5, pc}
 80045fe:	bf00      	nop
 8004600:	20002ca0 	.word	0x20002ca0
 8004604:	20002cc4 	.word	0x20002cc4

08004608 <WM_SetCapture>:
 8004608:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800460a:	4b09      	ldr	r3, [pc, #36]	; (8004630 <WM_SetCapture+0x28>)
 800460c:	4a09      	ldr	r2, [pc, #36]	; (8004634 <WM_SetCapture+0x2c>)
 800460e:	4604      	mov	r4, r0
 8004610:	6818      	ldr	r0, [r3, #0]
 8004612:	460f      	mov	r7, r1
 8004614:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
 8004618:	42a1      	cmp	r1, r4
 800461a:	4615      	mov	r5, r2
 800461c:	461e      	mov	r6, r3
 800461e:	d001      	beq.n	8004624 <WM_SetCapture+0x1c>
 8004620:	f7ff ffd8 	bl	80045d4 <WM__ReleaseCapture>
 8004624:	6833      	ldr	r3, [r6, #0]
 8004626:	f845 4023 	str.w	r4, [r5, r3, lsl #2]
 800462a:	4b03      	ldr	r3, [pc, #12]	; (8004638 <WM_SetCapture+0x30>)
 800462c:	701f      	strb	r7, [r3, #0]
 800462e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004630:	20002ca0 	.word	0x20002ca0
 8004634:	20002cc4 	.word	0x20002cc4
 8004638:	20002ca4 	.word	0x20002ca4

0800463c <_MoveDescendents>:
 800463c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004640:	b088      	sub	sp, #32
 8004642:	4606      	mov	r6, r0
 8004644:	460c      	mov	r4, r1
 8004646:	4615      	mov	r5, r2
 8004648:	a804      	add	r0, sp, #16
 800464a:	2100      	movs	r1, #0
 800464c:	2210      	movs	r2, #16
 800464e:	f00b fb7d 	bl	800fd4c <memset>
 8004652:	b336      	cbz	r6, 80046a2 <_MoveDescendents+0x66>
 8004654:	4630      	mov	r0, r6
 8004656:	f006 ff3b 	bl	800b4d0 <GUI_ALLOC_LockH>
 800465a:	4621      	mov	r1, r4
 800465c:	462a      	mov	r2, r5
 800465e:	9001      	str	r0, [sp, #4]
 8004660:	f006 fa4d 	bl	800aafe <GUI_MoveRect>
 8004664:	9801      	ldr	r0, [sp, #4]
 8004666:	4621      	mov	r1, r4
 8004668:	3008      	adds	r0, #8
 800466a:	462a      	mov	r2, r5
 800466c:	f006 fa47 	bl	800aafe <GUI_MoveRect>
 8004670:	a808      	add	r0, sp, #32
 8004672:	f850 2d1c 	ldr.w	r2, [r0, #-28]!
 8004676:	f8d2 801c 	ldr.w	r8, [r2, #28]
 800467a:	6a17      	ldr	r7, [r2, #32]
 800467c:	f006 ff36 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004680:	4640      	mov	r0, r8
 8004682:	4621      	mov	r1, r4
 8004684:	462a      	mov	r2, r5
 8004686:	f7ff ffd9 	bl	800463c <_MoveDescendents>
 800468a:	2303      	movs	r3, #3
 800468c:	9304      	str	r3, [sp, #16]
 800468e:	4630      	mov	r0, r6
 8004690:	ab02      	add	r3, sp, #8
 8004692:	a904      	add	r1, sp, #16
 8004694:	9307      	str	r3, [sp, #28]
 8004696:	9402      	str	r4, [sp, #8]
 8004698:	9503      	str	r5, [sp, #12]
 800469a:	463e      	mov	r6, r7
 800469c:	f7ff fdbc 	bl	8004218 <WM__SendMessage>
 80046a0:	e7d7      	b.n	8004652 <_MoveDescendents+0x16>
 80046a2:	b008      	add	sp, #32
 80046a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080046a8 <WM__MoveWindow>:
 80046a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80046ac:	b08b      	sub	sp, #44	; 0x2c
 80046ae:	4606      	mov	r6, r0
 80046b0:	460d      	mov	r5, r1
 80046b2:	4614      	mov	r4, r2
 80046b4:	a806      	add	r0, sp, #24
 80046b6:	2100      	movs	r1, #0
 80046b8:	2210      	movs	r2, #16
 80046ba:	f00b fb47 	bl	800fd4c <memset>
 80046be:	2e00      	cmp	r6, #0
 80046c0:	d043      	beq.n	800474a <WM__MoveWindow+0xa2>
 80046c2:	b90d      	cbnz	r5, 80046c8 <WM__MoveWindow+0x20>
 80046c4:	2c00      	cmp	r4, #0
 80046c6:	d040      	beq.n	800474a <WM__MoveWindow+0xa2>
 80046c8:	4630      	mov	r0, r6
 80046ca:	f006 ff01 	bl	800b4d0 <GUI_ALLOC_LockH>
 80046ce:	4603      	mov	r3, r0
 80046d0:	9001      	str	r0, [sp, #4]
 80046d2:	c803      	ldmia	r0, {r0, r1}
 80046d4:	f10d 0808 	add.w	r8, sp, #8
 80046d8:	e888 0003 	stmia.w	r8, {r0, r1}
 80046dc:	4622      	mov	r2, r4
 80046de:	4618      	mov	r0, r3
 80046e0:	4629      	mov	r1, r5
 80046e2:	f006 fa0c 	bl	800aafe <GUI_MoveRect>
 80046e6:	9801      	ldr	r0, [sp, #4]
 80046e8:	af0a      	add	r7, sp, #40	; 0x28
 80046ea:	4629      	mov	r1, r5
 80046ec:	4622      	mov	r2, r4
 80046ee:	3008      	adds	r0, #8
 80046f0:	f006 fa05 	bl	800aafe <GUI_MoveRect>
 80046f4:	f857 3d24 	ldr.w	r3, [r7, #-36]!
 80046f8:	f8d3 901c 	ldr.w	r9, [r3, #28]
 80046fc:	4638      	mov	r0, r7
 80046fe:	f006 fef5 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004702:	4622      	mov	r2, r4
 8004704:	4648      	mov	r0, r9
 8004706:	4629      	mov	r1, r5
 8004708:	f7ff ff98 	bl	800463c <_MoveDescendents>
 800470c:	4630      	mov	r0, r6
 800470e:	f006 fedf 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004712:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8004714:	9001      	str	r0, [sp, #4]
 8004716:	0792      	lsls	r2, r2, #30
 8004718:	d50a      	bpl.n	8004730 <WM__MoveWindow+0x88>
 800471a:	6981      	ldr	r1, [r0, #24]
 800471c:	b141      	cbz	r1, 8004730 <WM__MoveWindow+0x88>
 800471e:	6a02      	ldr	r2, [r0, #32]
 8004720:	f001 f885 	bl	800582e <WM__InvalidateParent>
 8004724:	9b01      	ldr	r3, [sp, #4]
 8004726:	4640      	mov	r0, r8
 8004728:	6999      	ldr	r1, [r3, #24]
 800472a:	6a1a      	ldr	r2, [r3, #32]
 800472c:	f001 f87f 	bl	800582e <WM__InvalidateParent>
 8004730:	4638      	mov	r0, r7
 8004732:	f006 fedb 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004736:	2303      	movs	r3, #3
 8004738:	9306      	str	r3, [sp, #24]
 800473a:	4630      	mov	r0, r6
 800473c:	ab04      	add	r3, sp, #16
 800473e:	a906      	add	r1, sp, #24
 8004740:	9309      	str	r3, [sp, #36]	; 0x24
 8004742:	9504      	str	r5, [sp, #16]
 8004744:	9405      	str	r4, [sp, #20]
 8004746:	f7ff fd67 	bl	8004218 <WM__SendMessage>
 800474a:	b00b      	add	sp, #44	; 0x2c
 800474c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08004750 <WM_MoveWindow>:
 8004750:	f7ff bfaa 	b.w	80046a8 <WM__MoveWindow>

08004754 <WM_DisableMemdev>:
 8004754:	b508      	push	{r3, lr}
 8004756:	b138      	cbz	r0, 8004768 <WM_DisableMemdev+0x14>
 8004758:	f006 feb0 	bl	800b4bc <GUI_ALLOC_h2p>
 800475c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800475e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004762:	f023 0304 	bic.w	r3, r3, #4
 8004766:	6283      	str	r3, [r0, #40]	; 0x28
 8004768:	bd08      	pop	{r3, pc}

0800476a <WM_ForEachDesc>:
 800476a:	f7ff bcd1 	b.w	8004110 <WM__ForEachDesc>

0800476e <WM_GetClientRectEx>:
 800476e:	f7ff be07 	b.w	8004380 <WM__GetClientRectEx>
	...

08004774 <WM_GetClientRect>:
 8004774:	4b04      	ldr	r3, [pc, #16]	; (8004788 <WM_GetClientRect+0x14>)
 8004776:	4601      	mov	r1, r0
 8004778:	6818      	ldr	r0, [r3, #0]
 800477a:	b910      	cbnz	r0, 8004782 <WM_GetClientRect+0xe>
 800477c:	4b03      	ldr	r3, [pc, #12]	; (800478c <WM_GetClientRect+0x18>)
 800477e:	681b      	ldr	r3, [r3, #0]
 8004780:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8004782:	f7ff bdfd 	b.w	8004380 <WM__GetClientRectEx>
 8004786:	bf00      	nop
 8004788:	20002c7c 	.word	0x20002c7c
 800478c:	200000b8 	.word	0x200000b8

08004790 <WM_GetClientWindow>:
 8004790:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004792:	2300      	movs	r3, #0
 8004794:	a904      	add	r1, sp, #16
 8004796:	9303      	str	r3, [sp, #12]
 8004798:	2317      	movs	r3, #23
 800479a:	f841 3d10 	str.w	r3, [r1, #-16]!
 800479e:	4669      	mov	r1, sp
 80047a0:	f000 ff55 	bl	800564e <WM_SendMessage>
 80047a4:	9803      	ldr	r0, [sp, #12]
 80047a6:	b005      	add	sp, #20
 80047a8:	f85d fb04 	ldr.w	pc, [sp], #4

080047ac <WM_GetDesktopWindow>:
 80047ac:	4b03      	ldr	r3, [pc, #12]	; (80047bc <WM_GetDesktopWindow+0x10>)
 80047ae:	681b      	ldr	r3, [r3, #0]
 80047b0:	7c5a      	ldrb	r2, [r3, #17]
 80047b2:	4b03      	ldr	r3, [pc, #12]	; (80047c0 <WM_GetDesktopWindow+0x14>)
 80047b4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80047b8:	4770      	bx	lr
 80047ba:	bf00      	nop
 80047bc:	200000b8 	.word	0x200000b8
 80047c0:	20002c80 	.word	0x20002c80

080047c4 <WM_CheckScrollBounds>:
 80047c4:	6802      	ldr	r2, [r0, #0]
 80047c6:	6883      	ldr	r3, [r0, #8]
 80047c8:	1ad3      	subs	r3, r2, r3
 80047ca:	6842      	ldr	r2, [r0, #4]
 80047cc:	2a00      	cmp	r2, #0
 80047ce:	bfbc      	itt	lt
 80047d0:	2200      	movlt	r2, #0
 80047d2:	6042      	strlt	r2, [r0, #4]
 80047d4:	6842      	ldr	r2, [r0, #4]
 80047d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80047da:	429a      	cmp	r2, r3
 80047dc:	bfc8      	it	gt
 80047de:	6043      	strgt	r3, [r0, #4]
 80047e0:	4770      	bx	lr

080047e2 <WM_GetFirstChild>:
 80047e2:	b508      	push	{r3, lr}
 80047e4:	4603      	mov	r3, r0
 80047e6:	b110      	cbz	r0, 80047ee <WM_GetFirstChild+0xc>
 80047e8:	f006 fe68 	bl	800b4bc <GUI_ALLOC_h2p>
 80047ec:	69c3      	ldr	r3, [r0, #28]
 80047ee:	4618      	mov	r0, r3
 80047f0:	bd08      	pop	{r3, pc}

080047f2 <WM_GetFlags>:
 80047f2:	b508      	push	{r3, lr}
 80047f4:	b118      	cbz	r0, 80047fe <WM_GetFlags+0xc>
 80047f6:	f006 fe61 	bl	800b4bc <GUI_ALLOC_h2p>
 80047fa:	8d00      	ldrh	r0, [r0, #40]	; 0x28
 80047fc:	bd08      	pop	{r3, pc}
 80047fe:	bd08      	pop	{r3, pc}

08004800 <WM_GetFocusedWindow>:
 8004800:	4b02      	ldr	r3, [pc, #8]	; (800480c <WM_GetFocusedWindow+0xc>)
 8004802:	681a      	ldr	r2, [r3, #0]
 8004804:	4b02      	ldr	r3, [pc, #8]	; (8004810 <WM_GetFocusedWindow+0x10>)
 8004806:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800480a:	4770      	bx	lr
 800480c:	20002ca0 	.word	0x20002ca0
 8004810:	20002c90 	.word	0x20002c90

08004814 <WM_GetId>:
 8004814:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004816:	4604      	mov	r4, r0
 8004818:	2210      	movs	r2, #16
 800481a:	4668      	mov	r0, sp
 800481c:	2100      	movs	r1, #0
 800481e:	f00b fa95 	bl	800fd4c <memset>
 8004822:	2315      	movs	r3, #21
 8004824:	4620      	mov	r0, r4
 8004826:	4669      	mov	r1, sp
 8004828:	9300      	str	r3, [sp, #0]
 800482a:	f000 ff10 	bl	800564e <WM_SendMessage>
 800482e:	9803      	ldr	r0, [sp, #12]
 8004830:	b004      	add	sp, #16
 8004832:	bd10      	pop	{r4, pc}

08004834 <_GetDialogItem>:
 8004834:	b570      	push	{r4, r5, r6, lr}
 8004836:	4606      	mov	r6, r0
 8004838:	460d      	mov	r5, r1
 800483a:	f006 fe3f 	bl	800b4bc <GUI_ALLOC_h2p>
 800483e:	69c4      	ldr	r4, [r0, #28]
 8004840:	b14c      	cbz	r4, 8004856 <_GetDialogItem+0x22>
 8004842:	4620      	mov	r0, r4
 8004844:	f7ff ffe6 	bl	8004814 <WM_GetId>
 8004848:	42a8      	cmp	r0, r5
 800484a:	4620      	mov	r0, r4
 800484c:	d013      	beq.n	8004876 <_GetDialogItem+0x42>
 800484e:	f006 fe35 	bl	800b4bc <GUI_ALLOC_h2p>
 8004852:	6a04      	ldr	r4, [r0, #32]
 8004854:	e7f4      	b.n	8004840 <_GetDialogItem+0xc>
 8004856:	4630      	mov	r0, r6
 8004858:	f006 fe30 	bl	800b4bc <GUI_ALLOC_h2p>
 800485c:	69c4      	ldr	r4, [r0, #28]
 800485e:	4620      	mov	r0, r4
 8004860:	b144      	cbz	r4, 8004874 <_GetDialogItem+0x40>
 8004862:	4629      	mov	r1, r5
 8004864:	f7ff ffe6 	bl	8004834 <_GetDialogItem>
 8004868:	b928      	cbnz	r0, 8004876 <_GetDialogItem+0x42>
 800486a:	4620      	mov	r0, r4
 800486c:	f006 fe26 	bl	800b4bc <GUI_ALLOC_h2p>
 8004870:	6a04      	ldr	r4, [r0, #32]
 8004872:	e7f4      	b.n	800485e <_GetDialogItem+0x2a>
 8004874:	bd70      	pop	{r4, r5, r6, pc}
 8004876:	bd70      	pop	{r4, r5, r6, pc}

08004878 <WM_GetDialogItem>:
 8004878:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800487a:	460d      	mov	r5, r1
 800487c:	4604      	mov	r4, r0
 800487e:	b1c8      	cbz	r0, 80048b4 <WM_GetDialogItem+0x3c>
 8004880:	f006 fe26 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004884:	ab02      	add	r3, sp, #8
 8004886:	69c4      	ldr	r4, [r0, #28]
 8004888:	f843 0d04 	str.w	r0, [r3, #-4]!
 800488c:	4618      	mov	r0, r3
 800488e:	f006 fe2d 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004892:	b17c      	cbz	r4, 80048b4 <WM_GetDialogItem+0x3c>
 8004894:	4620      	mov	r0, r4
 8004896:	f7ff ffbd 	bl	8004814 <WM_GetId>
 800489a:	42a8      	cmp	r0, r5
 800489c:	d00a      	beq.n	80048b4 <WM_GetDialogItem+0x3c>
 800489e:	4620      	mov	r0, r4
 80048a0:	4629      	mov	r1, r5
 80048a2:	f7ff ffc7 	bl	8004834 <_GetDialogItem>
 80048a6:	b920      	cbnz	r0, 80048b2 <WM_GetDialogItem+0x3a>
 80048a8:	4620      	mov	r0, r4
 80048aa:	f006 fe07 	bl	800b4bc <GUI_ALLOC_h2p>
 80048ae:	6a04      	ldr	r4, [r0, #32]
 80048b0:	e7ef      	b.n	8004892 <WM_GetDialogItem+0x1a>
 80048b2:	4604      	mov	r4, r0
 80048b4:	4620      	mov	r0, r4
 80048b6:	b003      	add	sp, #12
 80048b8:	bd30      	pop	{r4, r5, pc}

080048ba <WM_GetInsideRectEx>:
 80048ba:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80048bc:	9103      	str	r1, [sp, #12]
 80048be:	a904      	add	r1, sp, #16
 80048c0:	2314      	movs	r3, #20
 80048c2:	f841 3d10 	str.w	r3, [r1, #-16]!
 80048c6:	4669      	mov	r1, sp
 80048c8:	f000 fec1 	bl	800564e <WM_SendMessage>
 80048cc:	b005      	add	sp, #20
 80048ce:	f85d fb04 	ldr.w	pc, [sp], #4

080048d2 <WM_GetNextSibling>:
 80048d2:	b508      	push	{r3, lr}
 80048d4:	4603      	mov	r3, r0
 80048d6:	b110      	cbz	r0, 80048de <WM_GetNextSibling+0xc>
 80048d8:	f006 fdf0 	bl	800b4bc <GUI_ALLOC_h2p>
 80048dc:	6a03      	ldr	r3, [r0, #32]
 80048de:	4618      	mov	r0, r3
 80048e0:	bd08      	pop	{r3, pc}

080048e2 <WM_GetWindowOrgX>:
 80048e2:	b508      	push	{r3, lr}
 80048e4:	b120      	cbz	r0, 80048f0 <WM_GetWindowOrgX+0xe>
 80048e6:	f006 fde9 	bl	800b4bc <GUI_ALLOC_h2p>
 80048ea:	f9b0 0000 	ldrsh.w	r0, [r0]
 80048ee:	bd08      	pop	{r3, pc}
 80048f0:	bd08      	pop	{r3, pc}

080048f2 <WM_GetWindowOrgY>:
 80048f2:	b508      	push	{r3, lr}
 80048f4:	b120      	cbz	r0, 8004900 <WM_GetWindowOrgY+0xe>
 80048f6:	f006 fde1 	bl	800b4bc <GUI_ALLOC_h2p>
 80048fa:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 80048fe:	bd08      	pop	{r3, pc}
 8004900:	bd08      	pop	{r3, pc}
	...

08004904 <WM_GetOrgX>:
 8004904:	4b02      	ldr	r3, [pc, #8]	; (8004910 <WM_GetOrgX+0xc>)
 8004906:	681b      	ldr	r3, [r3, #0]
 8004908:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800490a:	f7ff bfea 	b.w	80048e2 <WM_GetWindowOrgX>
 800490e:	bf00      	nop
 8004910:	200000b8 	.word	0x200000b8

08004914 <WM_GetOrgY>:
 8004914:	4b02      	ldr	r3, [pc, #8]	; (8004920 <WM_GetOrgY+0xc>)
 8004916:	681b      	ldr	r3, [r3, #0]
 8004918:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800491a:	f7ff bfea 	b.w	80048f2 <WM_GetWindowOrgY>
 800491e:	bf00      	nop
 8004920:	200000b8 	.word	0x200000b8

08004924 <WM_GetParent>:
 8004924:	b508      	push	{r3, lr}
 8004926:	4603      	mov	r3, r0
 8004928:	b110      	cbz	r0, 8004930 <WM_GetParent+0xc>
 800492a:	f006 fdc7 	bl	800b4bc <GUI_ALLOC_h2p>
 800492e:	6983      	ldr	r3, [r0, #24]
 8004930:	4618      	mov	r0, r3
 8004932:	bd08      	pop	{r3, pc}

08004934 <WM_BringToBottom>:
 8004934:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004938:	4604      	mov	r4, r0
 800493a:	b087      	sub	sp, #28
 800493c:	2800      	cmp	r0, #0
 800493e:	d039      	beq.n	80049b4 <WM_BringToBottom+0x80>
 8004940:	f006 fdc6 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004944:	4603      	mov	r3, r0
 8004946:	9001      	str	r0, [sp, #4]
 8004948:	c803      	ldmia	r0, {r0, r1}
 800494a:	ad04      	add	r5, sp, #16
 800494c:	e885 0003 	stmia.w	r5, {r0, r1}
 8004950:	a801      	add	r0, sp, #4
 8004952:	6a1e      	ldr	r6, [r3, #32]
 8004954:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
 8004958:	f006 fdc8 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800495c:	4620      	mov	r0, r4
 800495e:	f7ff fc01 	bl	8004164 <WM__GetPrevSibling>
 8004962:	4607      	mov	r7, r0
 8004964:	b330      	cbz	r0, 80049b4 <WM_BringToBottom+0x80>
 8004966:	4620      	mov	r0, r4
 8004968:	f7ff ffdc 	bl	8004924 <WM_GetParent>
 800496c:	f019 0f02 	tst.w	r9, #2
 8004970:	4680      	mov	r8, r0
 8004972:	d004      	beq.n	800497e <WM_BringToBottom+0x4a>
 8004974:	4628      	mov	r0, r5
 8004976:	4641      	mov	r1, r8
 8004978:	4632      	mov	r2, r6
 800497a:	f000 ff6d 	bl	8005858 <WM__InvalidateRectEx>
 800497e:	4620      	mov	r0, r4
 8004980:	f006 fda6 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004984:	9001      	str	r0, [sp, #4]
 8004986:	4640      	mov	r0, r8
 8004988:	f006 fda2 	bl	800b4d0 <GUI_ALLOC_LockH>
 800498c:	9003      	str	r0, [sp, #12]
 800498e:	4638      	mov	r0, r7
 8004990:	f006 fd9e 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004994:	9b03      	ldr	r3, [sp, #12]
 8004996:	9a01      	ldr	r2, [sp, #4]
 8004998:	69d9      	ldr	r1, [r3, #28]
 800499a:	6206      	str	r6, [r0, #32]
 800499c:	9002      	str	r0, [sp, #8]
 800499e:	6211      	str	r1, [r2, #32]
 80049a0:	a801      	add	r0, sp, #4
 80049a2:	61dc      	str	r4, [r3, #28]
 80049a4:	f006 fda2 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80049a8:	a803      	add	r0, sp, #12
 80049aa:	f006 fd9f 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80049ae:	a802      	add	r0, sp, #8
 80049b0:	f006 fd9c 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80049b4:	b007      	add	sp, #28
 80049b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080049ba <WM_GetScrollbarH>:
 80049ba:	b110      	cbz	r0, 80049c2 <WM_GetScrollbarH+0x8>
 80049bc:	21ff      	movs	r1, #255	; 0xff
 80049be:	f7ff bf39 	b.w	8004834 <_GetDialogItem>
 80049c2:	4770      	bx	lr

080049c4 <WM_GetScrollbarV>:
 80049c4:	b110      	cbz	r0, 80049cc <WM_GetScrollbarV+0x8>
 80049c6:	21fe      	movs	r1, #254	; 0xfe
 80049c8:	f7ff bf34 	b.w	8004834 <_GetDialogItem>
 80049cc:	4770      	bx	lr

080049ce <WM_GetScrollPartner>:
 80049ce:	b538      	push	{r3, r4, r5, lr}
 80049d0:	4605      	mov	r5, r0
 80049d2:	f7ff ff1f 	bl	8004814 <WM_GetId>
 80049d6:	28ff      	cmp	r0, #255	; 0xff
 80049d8:	4604      	mov	r4, r0
 80049da:	d003      	beq.n	80049e4 <WM_GetScrollPartner+0x16>
 80049dc:	28fe      	cmp	r0, #254	; 0xfe
 80049de:	bf08      	it	eq
 80049e0:	24ff      	moveq	r4, #255	; 0xff
 80049e2:	e000      	b.n	80049e6 <WM_GetScrollPartner+0x18>
 80049e4:	24fe      	movs	r4, #254	; 0xfe
 80049e6:	4628      	mov	r0, r5
 80049e8:	f7ff ff9c 	bl	8004924 <WM_GetParent>
 80049ec:	4621      	mov	r1, r4
 80049ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80049f2:	f7ff bf41 	b.w	8004878 <WM_GetDialogItem>

080049f6 <WM_GetWindowRectEx>:
 80049f6:	b510      	push	{r4, lr}
 80049f8:	460c      	mov	r4, r1
 80049fa:	b130      	cbz	r0, 8004a0a <WM_GetWindowRectEx+0x14>
 80049fc:	b129      	cbz	r1, 8004a0a <WM_GetWindowRectEx+0x14>
 80049fe:	f006 fd5d 	bl	800b4bc <GUI_ALLOC_h2p>
 8004a02:	4603      	mov	r3, r0
 8004a04:	cb03      	ldmia	r3!, {r0, r1}
 8004a06:	6020      	str	r0, [r4, #0]
 8004a08:	6061      	str	r1, [r4, #4]
 8004a0a:	bd10      	pop	{r4, pc}

08004a0c <WM_GetInsideRectExScrollbar>:
 8004a0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a0e:	460c      	mov	r4, r1
 8004a10:	b087      	sub	sp, #28
 8004a12:	4606      	mov	r6, r0
 8004a14:	2800      	cmp	r0, #0
 8004a16:	d04b      	beq.n	8004ab0 <WM_GetInsideRectExScrollbar+0xa4>
 8004a18:	2900      	cmp	r1, #0
 8004a1a:	d049      	beq.n	8004ab0 <WM_GetInsideRectExScrollbar+0xa4>
 8004a1c:	21ff      	movs	r1, #255	; 0xff
 8004a1e:	f7ff ff2b 	bl	8004878 <WM_GetDialogItem>
 8004a22:	21fe      	movs	r1, #254	; 0xfe
 8004a24:	4605      	mov	r5, r0
 8004a26:	4630      	mov	r0, r6
 8004a28:	f7ff ff26 	bl	8004878 <WM_GetDialogItem>
 8004a2c:	4669      	mov	r1, sp
 8004a2e:	4607      	mov	r7, r0
 8004a30:	4630      	mov	r0, r6
 8004a32:	f7ff ffe0 	bl	80049f6 <WM_GetWindowRectEx>
 8004a36:	4630      	mov	r0, r6
 8004a38:	a902      	add	r1, sp, #8
 8004a3a:	f7ff ff3e 	bl	80048ba <WM_GetInsideRectEx>
 8004a3e:	b1c7      	cbz	r7, 8004a72 <WM_GetInsideRectExScrollbar+0x66>
 8004a40:	4638      	mov	r0, r7
 8004a42:	a904      	add	r1, sp, #16
 8004a44:	f7ff ffd7 	bl	80049f6 <WM_GetWindowRectEx>
 8004a48:	f9bd 1000 	ldrsh.w	r1, [sp]
 8004a4c:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 8004a50:	a804      	add	r0, sp, #16
 8004a52:	4249      	negs	r1, r1
 8004a54:	4252      	negs	r2, r2
 8004a56:	f006 f852 	bl	800aafe <GUI_MoveRect>
 8004a5a:	4638      	mov	r0, r7
 8004a5c:	f7ff fec9 	bl	80047f2 <WM_GetFlags>
 8004a60:	f000 0082 	and.w	r0, r0, #130	; 0x82
 8004a64:	2882      	cmp	r0, #130	; 0x82
 8004a66:	d104      	bne.n	8004a72 <WM_GetInsideRectExScrollbar+0x66>
 8004a68:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8004a6c:	3b01      	subs	r3, #1
 8004a6e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8004a72:	b1cd      	cbz	r5, 8004aa8 <WM_GetInsideRectExScrollbar+0x9c>
 8004a74:	4628      	mov	r0, r5
 8004a76:	a904      	add	r1, sp, #16
 8004a78:	f7ff ffbd 	bl	80049f6 <WM_GetWindowRectEx>
 8004a7c:	f9bd 1000 	ldrsh.w	r1, [sp]
 8004a80:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 8004a84:	a804      	add	r0, sp, #16
 8004a86:	4249      	negs	r1, r1
 8004a88:	4252      	negs	r2, r2
 8004a8a:	f006 f838 	bl	800aafe <GUI_MoveRect>
 8004a8e:	4628      	mov	r0, r5
 8004a90:	f7ff feaf 	bl	80047f2 <WM_GetFlags>
 8004a94:	f400 7081 	and.w	r0, r0, #258	; 0x102
 8004a98:	f5b0 7f81 	cmp.w	r0, #258	; 0x102
 8004a9c:	d104      	bne.n	8004aa8 <WM_GetInsideRectExScrollbar+0x9c>
 8004a9e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8004aa2:	3b01      	subs	r3, #1
 8004aa4:	f8ad 300e 	strh.w	r3, [sp, #14]
 8004aa8:	ab02      	add	r3, sp, #8
 8004aaa:	cb03      	ldmia	r3!, {r0, r1}
 8004aac:	6020      	str	r0, [r4, #0]
 8004aae:	6061      	str	r1, [r4, #4]
 8004ab0:	b007      	add	sp, #28
 8004ab2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004ab4 <WM_HasCaptured>:
 8004ab4:	4b04      	ldr	r3, [pc, #16]	; (8004ac8 <WM_HasCaptured+0x14>)
 8004ab6:	681a      	ldr	r2, [r3, #0]
 8004ab8:	4b04      	ldr	r3, [pc, #16]	; (8004acc <WM_HasCaptured+0x18>)
 8004aba:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004abe:	1ac3      	subs	r3, r0, r3
 8004ac0:	4258      	negs	r0, r3
 8004ac2:	4158      	adcs	r0, r3
 8004ac4:	4770      	bx	lr
 8004ac6:	bf00      	nop
 8004ac8:	20002ca0 	.word	0x20002ca0
 8004acc:	20002cc4 	.word	0x20002cc4

08004ad0 <WM_HasFocus>:
 8004ad0:	4b04      	ldr	r3, [pc, #16]	; (8004ae4 <WM_HasFocus+0x14>)
 8004ad2:	681a      	ldr	r2, [r3, #0]
 8004ad4:	4b04      	ldr	r3, [pc, #16]	; (8004ae8 <WM_HasFocus+0x18>)
 8004ad6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004ada:	1ac3      	subs	r3, r0, r3
 8004adc:	4258      	negs	r0, r3
 8004ade:	4158      	adcs	r0, r3
 8004ae0:	4770      	bx	lr
 8004ae2:	bf00      	nop
 8004ae4:	20002ca0 	.word	0x20002ca0
 8004ae8:	20002c90 	.word	0x20002c90

08004aec <WM_IsFocusable>:
 8004aec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004aee:	4604      	mov	r4, r0
 8004af0:	b908      	cbnz	r0, 8004af6 <WM_IsFocusable+0xa>
 8004af2:	2000      	movs	r0, #0
 8004af4:	e011      	b.n	8004b1a <WM_IsFocusable+0x2e>
 8004af6:	f006 fce1 	bl	800b4bc <GUI_ALLOC_h2p>
 8004afa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004afc:	079a      	lsls	r2, r3, #30
 8004afe:	d5f8      	bpl.n	8004af2 <WM_IsFocusable+0x6>
 8004b00:	f013 0310 	ands.w	r3, r3, #16
 8004b04:	d1f5      	bne.n	8004af2 <WM_IsFocusable+0x6>
 8004b06:	a904      	add	r1, sp, #16
 8004b08:	9303      	str	r3, [sp, #12]
 8004b0a:	231f      	movs	r3, #31
 8004b0c:	f841 3d10 	str.w	r3, [r1, #-16]!
 8004b10:	4620      	mov	r0, r4
 8004b12:	4669      	mov	r1, sp
 8004b14:	f000 fd9b 	bl	800564e <WM_SendMessage>
 8004b18:	9803      	ldr	r0, [sp, #12]
 8004b1a:	b004      	add	sp, #16
 8004b1c:	bd10      	pop	{r4, pc}

08004b1e <WM_IsWindow>:
 8004b1e:	f000 bd4d 	b.w	80055bc <WM__IsWindow>
	...

08004b24 <WM_OnKey>:
 8004b24:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8004b26:	4a0a      	ldr	r2, [pc, #40]	; (8004b50 <WM_OnKey+0x2c>)
 8004b28:	4603      	mov	r3, r0
 8004b2a:	6810      	ldr	r0, [r2, #0]
 8004b2c:	4a09      	ldr	r2, [pc, #36]	; (8004b54 <WM_OnKey+0x30>)
 8004b2e:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8004b32:	b148      	cbz	r0, 8004b48 <WM_OnKey+0x24>
 8004b34:	9300      	str	r3, [sp, #0]
 8004b36:	230e      	movs	r3, #14
 8004b38:	9101      	str	r1, [sp, #4]
 8004b3a:	9302      	str	r3, [sp, #8]
 8004b3c:	a902      	add	r1, sp, #8
 8004b3e:	ab00      	add	r3, sp, #0
 8004b40:	9305      	str	r3, [sp, #20]
 8004b42:	f7ff fb69 	bl	8004218 <WM__SendMessage>
 8004b46:	2001      	movs	r0, #1
 8004b48:	b007      	add	sp, #28
 8004b4a:	f85d fb04 	ldr.w	pc, [sp], #4
 8004b4e:	bf00      	nop
 8004b50:	20002ca0 	.word	0x20002ca0
 8004b54:	20002c90 	.word	0x20002c90

08004b58 <WM_ResizeWindow>:
 8004b58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004b5c:	ea51 0302 	orrs.w	r3, r1, r2
 8004b60:	b08a      	sub	sp, #40	; 0x28
 8004b62:	4680      	mov	r8, r0
 8004b64:	460e      	mov	r6, r1
 8004b66:	4617      	mov	r7, r2
 8004b68:	d06e      	beq.n	8004c48 <WM_ResizeWindow+0xf0>
 8004b6a:	2800      	cmp	r0, #0
 8004b6c:	d06c      	beq.n	8004c48 <WM_ResizeWindow+0xf0>
 8004b6e:	f006 fcaf 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004b72:	4603      	mov	r3, r0
 8004b74:	9003      	str	r0, [sp, #12]
 8004b76:	c803      	ldmia	r0, {r0, r1}
 8004b78:	ad04      	add	r5, sp, #16
 8004b7a:	ac06      	add	r4, sp, #24
 8004b7c:	e885 0003 	stmia.w	r5, {r0, r1}
 8004b80:	e884 0003 	stmia.w	r4, {r0, r1}
 8004b84:	b17e      	cbz	r6, 8004ba6 <WM_ResizeWindow+0x4e>
 8004b86:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004b88:	f402 7220 	and.w	r2, r2, #640	; 0x280
 8004b8c:	2a80      	cmp	r2, #128	; 0x80
 8004b8e:	d105      	bne.n	8004b9c <WM_ResizeWindow+0x44>
 8004b90:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 8004b94:	1b96      	subs	r6, r2, r6
 8004b96:	f8ad 6018 	strh.w	r6, [sp, #24]
 8004b9a:	e004      	b.n	8004ba6 <WM_ResizeWindow+0x4e>
 8004b9c:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 8004ba0:	4416      	add	r6, r2
 8004ba2:	f8ad 601c 	strh.w	r6, [sp, #28]
 8004ba6:	b187      	cbz	r7, 8004bca <WM_ResizeWindow+0x72>
 8004ba8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004baa:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 8004bae:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8004bb2:	d105      	bne.n	8004bc0 <WM_ResizeWindow+0x68>
 8004bb4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8004bb8:	1bd7      	subs	r7, r2, r7
 8004bba:	f8ad 701a 	strh.w	r7, [sp, #26]
 8004bbe:	e004      	b.n	8004bca <WM_ResizeWindow+0x72>
 8004bc0:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8004bc4:	4417      	add	r7, r2
 8004bc6:	f8ad 701e 	strh.w	r7, [sp, #30]
 8004bca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004bcc:	03da      	lsls	r2, r3, #15
 8004bce:	d502      	bpl.n	8004bd6 <WM_ResizeWindow+0x7e>
 8004bd0:	4640      	mov	r0, r8
 8004bd2:	f000 fd03 	bl	80055dc <WM__InvalidateDrawAndDescs>
 8004bd6:	e894 0003 	ldmia.w	r4, {r0, r1}
 8004bda:	9b03      	ldr	r3, [sp, #12]
 8004bdc:	e883 0003 	stmia.w	r3, {r0, r1}
 8004be0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004be2:	079b      	lsls	r3, r3, #30
 8004be4:	d50a      	bpl.n	8004bfc <WM_ResizeWindow+0xa4>
 8004be6:	a808      	add	r0, sp, #32
 8004be8:	4629      	mov	r1, r5
 8004bea:	4622      	mov	r2, r4
 8004bec:	f005 ff5c 	bl	800aaa8 <GUI_MergeRect>
 8004bf0:	9b03      	ldr	r3, [sp, #12]
 8004bf2:	a808      	add	r0, sp, #32
 8004bf4:	6999      	ldr	r1, [r3, #24]
 8004bf6:	6a1a      	ldr	r2, [r3, #32]
 8004bf8:	f000 fe2e 	bl	8005858 <WM__InvalidateRectEx>
 8004bfc:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8004c00:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8004c04:	f9bd 701e 	ldrsh.w	r7, [sp, #30]
 8004c08:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8004c0c:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 8004c10:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 8004c14:	f9bd 501a 	ldrsh.w	r5, [sp, #26]
 8004c18:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8004c1c:	1ae3      	subs	r3, r4, r3
 8004c1e:	1a38      	subs	r0, r7, r0
 8004c20:	ac0a      	add	r4, sp, #40	; 0x28
 8004c22:	1aaa      	subs	r2, r5, r2
 8004c24:	9000      	str	r0, [sp, #0]
 8004c26:	1a71      	subs	r1, r6, r1
 8004c28:	9803      	ldr	r0, [sp, #12]
 8004c2a:	f7ff fb27 	bl	800427c <WM__UpdateChildPositions>
 8004c2e:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 8004c32:	f101 0008 	add.w	r0, r1, #8
 8004c36:	f004 f8f8 	bl	8008e2a <GUI__IntersectRect>
 8004c3a:	4640      	mov	r0, r8
 8004c3c:	2105      	movs	r1, #5
 8004c3e:	f000 fd0a 	bl	8005656 <WM__SendMsgNoData>
 8004c42:	4620      	mov	r0, r4
 8004c44:	f006 fc52 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004c48:	b00a      	add	sp, #40	; 0x28
 8004c4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004c4e <WM_SendMessageNoPara>:
 8004c4e:	f7ff bb01 	b.w	8004254 <WM__SendMessageNoPara>

08004c52 <WM_SendToParent>:
 8004c52:	b538      	push	{r3, r4, r5, lr}
 8004c54:	4605      	mov	r5, r0
 8004c56:	460c      	mov	r4, r1
 8004c58:	b141      	cbz	r1, 8004c6c <WM_SendToParent+0x1a>
 8004c5a:	f7ff fe63 	bl	8004924 <WM_GetParent>
 8004c5e:	b128      	cbz	r0, 8004c6c <WM_SendToParent+0x1a>
 8004c60:	60a5      	str	r5, [r4, #8]
 8004c62:	4621      	mov	r1, r4
 8004c64:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004c68:	f7ff bad6 	b.w	8004218 <WM__SendMessage>
 8004c6c:	bd38      	pop	{r3, r4, r5, pc}

08004c6e <WM_NotifyParent>:
 8004c6e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004c70:	2326      	movs	r3, #38	; 0x26
 8004c72:	9103      	str	r1, [sp, #12]
 8004c74:	4669      	mov	r1, sp
 8004c76:	9300      	str	r3, [sp, #0]
 8004c78:	f7ff ffeb 	bl	8004c52 <WM_SendToParent>
 8004c7c:	b005      	add	sp, #20
 8004c7e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08004c84 <WM_SetFocus>:
 8004c84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004c86:	b087      	sub	sp, #28
 8004c88:	4604      	mov	r4, r0
 8004c8a:	2100      	movs	r1, #0
 8004c8c:	a802      	add	r0, sp, #8
 8004c8e:	2210      	movs	r2, #16
 8004c90:	f00b f85c 	bl	800fd4c <memset>
 8004c94:	2c00      	cmp	r4, #0
 8004c96:	d03a      	beq.n	8004d0e <WM_SetFocus+0x8a>
 8004c98:	4b1f      	ldr	r3, [pc, #124]	; (8004d18 <WM_SetFocus+0x94>)
 8004c9a:	4a20      	ldr	r2, [pc, #128]	; (8004d1c <WM_SetFocus+0x98>)
 8004c9c:	6819      	ldr	r1, [r3, #0]
 8004c9e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 8004ca2:	4284      	cmp	r4, r0
 8004ca4:	4616      	mov	r6, r2
 8004ca6:	461f      	mov	r7, r3
 8004ca8:	d031      	beq.n	8004d0e <WM_SetFocus+0x8a>
 8004caa:	231e      	movs	r3, #30
 8004cac:	e88d 0011 	stmia.w	sp, {r0, r4}
 8004cb0:	9302      	str	r3, [sp, #8]
 8004cb2:	b110      	cbz	r0, 8004cba <WM_SetFocus+0x36>
 8004cb4:	a902      	add	r1, sp, #8
 8004cb6:	f7ff faaf 	bl	8004218 <WM__SendMessage>
 8004cba:	2301      	movs	r3, #1
 8004cbc:	4620      	mov	r0, r4
 8004cbe:	a902      	add	r1, sp, #8
 8004cc0:	9305      	str	r3, [sp, #20]
 8004cc2:	f7ff faa9 	bl	8004218 <WM__SendMessage>
 8004cc6:	9d05      	ldr	r5, [sp, #20]
 8004cc8:	bb15      	cbnz	r5, 8004d10 <WM_SetFocus+0x8c>
 8004cca:	683b      	ldr	r3, [r7, #0]
 8004ccc:	f846 4023 	str.w	r4, [r6, r3, lsl #2]
 8004cd0:	4620      	mov	r0, r4
 8004cd2:	f7ff fe27 	bl	8004924 <WM_GetParent>
 8004cd6:	4604      	mov	r4, r0
 8004cd8:	b138      	cbz	r0, 8004cea <WM_SetFocus+0x66>
 8004cda:	2320      	movs	r3, #32
 8004cdc:	9302      	str	r3, [sp, #8]
 8004cde:	a902      	add	r1, sp, #8
 8004ce0:	ab00      	add	r3, sp, #0
 8004ce2:	9305      	str	r3, [sp, #20]
 8004ce4:	f7ff fa98 	bl	8004218 <WM__SendMessage>
 8004ce8:	e7f2      	b.n	8004cd0 <WM_SetFocus+0x4c>
 8004cea:	9c00      	ldr	r4, [sp, #0]
 8004cec:	4620      	mov	r0, r4
 8004cee:	f000 fc65 	bl	80055bc <WM__IsWindow>
 8004cf2:	b168      	cbz	r0, 8004d10 <WM_SetFocus+0x8c>
 8004cf4:	4620      	mov	r0, r4
 8004cf6:	f7ff fe15 	bl	8004924 <WM_GetParent>
 8004cfa:	4604      	mov	r4, r0
 8004cfc:	b140      	cbz	r0, 8004d10 <WM_SetFocus+0x8c>
 8004cfe:	2320      	movs	r3, #32
 8004d00:	9302      	str	r3, [sp, #8]
 8004d02:	a902      	add	r1, sp, #8
 8004d04:	ab00      	add	r3, sp, #0
 8004d06:	9305      	str	r3, [sp, #20]
 8004d08:	f7ff fa86 	bl	8004218 <WM__SendMessage>
 8004d0c:	e7f2      	b.n	8004cf4 <WM_SetFocus+0x70>
 8004d0e:	2501      	movs	r5, #1
 8004d10:	4628      	mov	r0, r5
 8004d12:	b007      	add	sp, #28
 8004d14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004d16:	bf00      	nop
 8004d18:	20002ca0 	.word	0x20002ca0
 8004d1c:	20002c90 	.word	0x20002c90

08004d20 <WM_SetScrollState>:
 8004d20:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004d22:	b130      	cbz	r0, 8004d32 <WM_SetScrollState+0x12>
 8004d24:	b129      	cbz	r1, 8004d32 <WM_SetScrollState+0x12>
 8004d26:	2324      	movs	r3, #36	; 0x24
 8004d28:	9103      	str	r1, [sp, #12]
 8004d2a:	4669      	mov	r1, sp
 8004d2c:	9300      	str	r3, [sp, #0]
 8004d2e:	f000 fc8e 	bl	800564e <WM_SendMessage>
 8004d32:	b005      	add	sp, #20
 8004d34:	f85d fb04 	ldr.w	pc, [sp], #4

08004d38 <WM_SetSize>:
 8004d38:	e92d 41e7 	stmdb	sp!, {r0, r1, r2, r5, r6, r7, r8, lr}
 8004d3c:	460e      	mov	r6, r1
 8004d3e:	4690      	mov	r8, r2
 8004d40:	4607      	mov	r7, r0
 8004d42:	b1d0      	cbz	r0, 8004d7a <WM_SetSize+0x42>
 8004d44:	f006 fbc4 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004d48:	4603      	mov	r3, r0
 8004d4a:	a802      	add	r0, sp, #8
 8004d4c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8004d50:	f9b3 2000 	ldrsh.w	r2, [r3]
 8004d54:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 8004d58:	f840 3d04 	str.w	r3, [r0, #-4]!
 8004d5c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004d60:	1a8a      	subs	r2, r1, r2
 8004d62:	1aed      	subs	r5, r5, r3
 8004d64:	43d2      	mvns	r2, r2
 8004d66:	43ed      	mvns	r5, r5
 8004d68:	4416      	add	r6, r2
 8004d6a:	4445      	add	r5, r8
 8004d6c:	f006 fbbe 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004d70:	4638      	mov	r0, r7
 8004d72:	4631      	mov	r1, r6
 8004d74:	462a      	mov	r2, r5
 8004d76:	f7ff feef 	bl	8004b58 <WM_ResizeWindow>
 8004d7a:	b003      	add	sp, #12
 8004d7c:	e8bd 81e0 	ldmia.w	sp!, {r5, r6, r7, r8, pc}

08004d80 <WM_SetUserClipRect>:
 8004d80:	4b04      	ldr	r3, [pc, #16]	; (8004d94 <WM_SetUserClipRect+0x14>)
 8004d82:	b510      	push	{r4, lr}
 8004d84:	681b      	ldr	r3, [r3, #0]
 8004d86:	6c5c      	ldr	r4, [r3, #68]	; 0x44
 8004d88:	6458      	str	r0, [r3, #68]	; 0x44
 8004d8a:	f000 fbf3 	bl	8005574 <WM__ActivateClipRect>
 8004d8e:	4620      	mov	r0, r4
 8004d90:	bd10      	pop	{r4, pc}
 8004d92:	bf00      	nop
 8004d94:	200000b8 	.word	0x200000b8

08004d98 <WM_InvalidateWindowAndDescs>:
 8004d98:	b510      	push	{r4, lr}
 8004d9a:	4604      	mov	r4, r0
 8004d9c:	b170      	cbz	r0, 8004dbc <WM_InvalidateWindowAndDescs+0x24>
 8004d9e:	f000 fdaf 	bl	8005900 <WM_InvalidateWindow>
 8004da2:	4620      	mov	r0, r4
 8004da4:	f7ff fd1d 	bl	80047e2 <WM_GetFirstChild>
 8004da8:	4604      	mov	r4, r0
 8004daa:	b13c      	cbz	r4, 8004dbc <WM_InvalidateWindowAndDescs+0x24>
 8004dac:	4620      	mov	r0, r4
 8004dae:	f7ff fff3 	bl	8004d98 <WM_InvalidateWindowAndDescs>
 8004db2:	4620      	mov	r0, r4
 8004db4:	f006 fb82 	bl	800b4bc <GUI_ALLOC_h2p>
 8004db8:	6a04      	ldr	r4, [r0, #32]
 8004dba:	e7f6      	b.n	8004daa <WM_InvalidateWindowAndDescs+0x12>
 8004dbc:	bd10      	pop	{r4, pc}

08004dbe <WM_ShowWindow>:
 8004dbe:	b513      	push	{r0, r1, r4, lr}
 8004dc0:	4604      	mov	r4, r0
 8004dc2:	b170      	cbz	r0, 8004de2 <WM_ShowWindow+0x24>
 8004dc4:	f006 fb84 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004dc8:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8004dca:	9001      	str	r0, [sp, #4]
 8004dcc:	0793      	lsls	r3, r2, #30
 8004dce:	d405      	bmi.n	8004ddc <WM_ShowWindow+0x1e>
 8004dd0:	f042 0202 	orr.w	r2, r2, #2
 8004dd4:	6282      	str	r2, [r0, #40]	; 0x28
 8004dd6:	4620      	mov	r0, r4
 8004dd8:	f7ff ffde 	bl	8004d98 <WM_InvalidateWindowAndDescs>
 8004ddc:	a801      	add	r0, sp, #4
 8004dde:	f006 fb85 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004de2:	b002      	add	sp, #8
 8004de4:	bd10      	pop	{r4, pc}
	...

08004de8 <WM_ValidateWindow>:
 8004de8:	b507      	push	{r0, r1, r2, lr}
 8004dea:	b178      	cbz	r0, 8004e0c <WM_ValidateWindow+0x24>
 8004dec:	f006 fb70 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004df0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004df2:	9001      	str	r0, [sp, #4]
 8004df4:	069a      	lsls	r2, r3, #26
 8004df6:	d506      	bpl.n	8004e06 <WM_ValidateWindow+0x1e>
 8004df8:	f023 0320 	bic.w	r3, r3, #32
 8004dfc:	6283      	str	r3, [r0, #40]	; 0x28
 8004dfe:	4b05      	ldr	r3, [pc, #20]	; (8004e14 <WM_ValidateWindow+0x2c>)
 8004e00:	881a      	ldrh	r2, [r3, #0]
 8004e02:	3a01      	subs	r2, #1
 8004e04:	801a      	strh	r2, [r3, #0]
 8004e06:	a801      	add	r0, sp, #4
 8004e08:	f006 fb70 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004e0c:	b003      	add	sp, #12
 8004e0e:	f85d fb04 	ldr.w	pc, [sp], #4
 8004e12:	bf00      	nop
 8004e14:	20002c98 	.word	0x20002c98

08004e18 <WM_HideWindow>:
 8004e18:	b513      	push	{r0, r1, r4, lr}
 8004e1a:	b188      	cbz	r0, 8004e40 <WM_HideWindow+0x28>
 8004e1c:	f006 fb58 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004e20:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8004e22:	ac02      	add	r4, sp, #8
 8004e24:	0791      	lsls	r1, r2, #30
 8004e26:	f844 0d04 	str.w	r0, [r4, #-4]!
 8004e2a:	d506      	bpl.n	8004e3a <WM_HideWindow+0x22>
 8004e2c:	f022 0202 	bic.w	r2, r2, #2
 8004e30:	6282      	str	r2, [r0, #40]	; 0x28
 8004e32:	6981      	ldr	r1, [r0, #24]
 8004e34:	6a02      	ldr	r2, [r0, #32]
 8004e36:	f000 fd0f 	bl	8005858 <WM__InvalidateRectEx>
 8004e3a:	4620      	mov	r0, r4
 8004e3c:	f006 fb56 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004e40:	b002      	add	sp, #8
 8004e42:	bd10      	pop	{r4, pc}

08004e44 <WM__GetWindowSizeX>:
 8004e44:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8004e48:	f9b0 3000 	ldrsh.w	r3, [r0]
 8004e4c:	1ad0      	subs	r0, r2, r3
 8004e4e:	3001      	adds	r0, #1
 8004e50:	4770      	bx	lr

08004e52 <WM__GetWindowSizeY>:
 8004e52:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8004e56:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8004e5a:	1ad0      	subs	r0, r2, r3
 8004e5c:	3001      	adds	r0, #1
 8004e5e:	4770      	bx	lr

08004e60 <WM_GetWindowSizeX>:
 8004e60:	b513      	push	{r0, r1, r4, lr}
 8004e62:	b908      	cbnz	r0, 8004e68 <WM_GetWindowSizeX+0x8>
 8004e64:	f000 fef0 	bl	8005c48 <WM_GetActiveWindow>
 8004e68:	f006 fb32 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004e6c:	ab02      	add	r3, sp, #8
 8004e6e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8004e72:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004e76:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8004e7a:	4618      	mov	r0, r3
 8004e7c:	1aa4      	subs	r4, r4, r2
 8004e7e:	f006 fb35 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004e82:	3401      	adds	r4, #1
 8004e84:	4620      	mov	r0, r4
 8004e86:	b002      	add	sp, #8
 8004e88:	bd10      	pop	{r4, pc}

08004e8a <WM_GetWindowSizeY>:
 8004e8a:	b513      	push	{r0, r1, r4, lr}
 8004e8c:	b908      	cbnz	r0, 8004e92 <WM_GetWindowSizeY+0x8>
 8004e8e:	f000 fedb 	bl	8005c48 <WM_GetActiveWindow>
 8004e92:	f006 fb1d 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004e96:	ab02      	add	r3, sp, #8
 8004e98:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8004e9c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004ea0:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8004ea4:	4618      	mov	r0, r3
 8004ea6:	1aa4      	subs	r4, r4, r2
 8004ea8:	f006 fb20 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004eac:	3401      	adds	r4, #1
 8004eae:	4620      	mov	r0, r4
 8004eb0:	b002      	add	sp, #8
 8004eb2:	bd10      	pop	{r4, pc}

08004eb4 <_cbInvalidateOne>:
 8004eb4:	f000 bd24 	b.w	8005900 <WM_InvalidateWindow>

08004eb8 <WM_BringToTop>:
 8004eb8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004eba:	4605      	mov	r5, r0
 8004ebc:	2800      	cmp	r0, #0
 8004ebe:	d032      	beq.n	8004f26 <WM_BringToTop+0x6e>
 8004ec0:	f006 fb06 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004ec4:	ac02      	add	r4, sp, #8
 8004ec6:	4603      	mov	r3, r0
 8004ec8:	f844 0d08 	str.w	r0, [r4, #-8]!
 8004ecc:	6a00      	ldr	r0, [r0, #32]
 8004ece:	b908      	cbnz	r0, 8004ed4 <WM_BringToTop+0x1c>
 8004ed0:	4668      	mov	r0, sp
 8004ed2:	e00e      	b.n	8004ef2 <WM_BringToTop+0x3a>
 8004ed4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004ed6:	071a      	lsls	r2, r3, #28
 8004ed8:	d411      	bmi.n	8004efe <WM_BringToTop+0x46>
 8004eda:	f006 faf9 	bl	800b4d0 <GUI_ALLOC_LockH>
 8004ede:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004ee0:	ae02      	add	r6, sp, #8
 8004ee2:	071b      	lsls	r3, r3, #28
 8004ee4:	f846 0d04 	str.w	r0, [r6, #-4]!
 8004ee8:	d506      	bpl.n	8004ef8 <WM_BringToTop+0x40>
 8004eea:	4668      	mov	r0, sp
 8004eec:	f006 fafe 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004ef0:	4630      	mov	r0, r6
 8004ef2:	f006 fafb 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004ef6:	e016      	b.n	8004f26 <WM_BringToTop+0x6e>
 8004ef8:	4630      	mov	r0, r6
 8004efa:	f006 faf7 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004efe:	9b00      	ldr	r3, [sp, #0]
 8004f00:	4668      	mov	r0, sp
 8004f02:	699e      	ldr	r6, [r3, #24]
 8004f04:	f006 faf2 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8004f08:	4628      	mov	r0, r5
 8004f0a:	f000 fae5 	bl	80054d8 <WM__RemoveWindowFromList>
 8004f0e:	4631      	mov	r1, r6
 8004f10:	4628      	mov	r0, r5
 8004f12:	f000 fa8f 	bl	8005434 <WM__InsertWindowIntoList>
 8004f16:	4628      	mov	r0, r5
 8004f18:	f000 fcf2 	bl	8005900 <WM_InvalidateWindow>
 8004f1c:	4628      	mov	r0, r5
 8004f1e:	4903      	ldr	r1, [pc, #12]	; (8004f2c <WM_BringToTop+0x74>)
 8004f20:	2200      	movs	r2, #0
 8004f22:	f7ff fc22 	bl	800476a <WM_ForEachDesc>
 8004f26:	b002      	add	sp, #8
 8004f28:	bd70      	pop	{r4, r5, r6, pc}
 8004f2a:	bf00      	nop
 8004f2c:	08004eb5 	.word	0x08004eb5

08004f30 <_OnExit>:
 8004f30:	b538      	push	{r3, r4, r5, lr}
 8004f32:	4b19      	ldr	r3, [pc, #100]	; (8004f98 <_OnExit+0x68>)
 8004f34:	4d19      	ldr	r5, [pc, #100]	; (8004f9c <_OnExit+0x6c>)
 8004f36:	4a1a      	ldr	r2, [pc, #104]	; (8004fa0 <_OnExit+0x70>)
 8004f38:	481a      	ldr	r0, [pc, #104]	; (8004fa4 <_OnExit+0x74>)
 8004f3a:	2400      	movs	r4, #0
 8004f3c:	701c      	strb	r4, [r3, #0]
 8004f3e:	4b1a      	ldr	r3, [pc, #104]	; (8004fa8 <_OnExit+0x78>)
 8004f40:	6014      	str	r4, [r2, #0]
 8004f42:	601c      	str	r4, [r3, #0]
 8004f44:	4b19      	ldr	r3, [pc, #100]	; (8004fac <_OnExit+0x7c>)
 8004f46:	6054      	str	r4, [r2, #4]
 8004f48:	601c      	str	r4, [r3, #0]
 8004f4a:	4b19      	ldr	r3, [pc, #100]	; (8004fb0 <_OnExit+0x80>)
 8004f4c:	601c      	str	r4, [r3, #0]
 8004f4e:	605c      	str	r4, [r3, #4]
 8004f50:	4b18      	ldr	r3, [pc, #96]	; (8004fb4 <_OnExit+0x84>)
 8004f52:	601c      	str	r4, [r3, #0]
 8004f54:	4b18      	ldr	r3, [pc, #96]	; (8004fb8 <_OnExit+0x88>)
 8004f56:	601c      	str	r4, [r3, #0]
 8004f58:	4b18      	ldr	r3, [pc, #96]	; (8004fbc <_OnExit+0x8c>)
 8004f5a:	601c      	str	r4, [r3, #0]
 8004f5c:	4b18      	ldr	r3, [pc, #96]	; (8004fc0 <_OnExit+0x90>)
 8004f5e:	601c      	str	r4, [r3, #0]
 8004f60:	4b18      	ldr	r3, [pc, #96]	; (8004fc4 <_OnExit+0x94>)
 8004f62:	4621      	mov	r1, r4
 8004f64:	601c      	str	r4, [r3, #0]
 8004f66:	2218      	movs	r2, #24
 8004f68:	682b      	ldr	r3, [r5, #0]
 8004f6a:	4798      	blx	r3
 8004f6c:	4b16      	ldr	r3, [pc, #88]	; (8004fc8 <_OnExit+0x98>)
 8004f6e:	4817      	ldr	r0, [pc, #92]	; (8004fcc <_OnExit+0x9c>)
 8004f70:	601c      	str	r4, [r3, #0]
 8004f72:	4b17      	ldr	r3, [pc, #92]	; (8004fd0 <_OnExit+0xa0>)
 8004f74:	4621      	mov	r1, r4
 8004f76:	601c      	str	r4, [r3, #0]
 8004f78:	605c      	str	r4, [r3, #4]
 8004f7a:	2210      	movs	r2, #16
 8004f7c:	682b      	ldr	r3, [r5, #0]
 8004f7e:	4798      	blx	r3
 8004f80:	682b      	ldr	r3, [r5, #0]
 8004f82:	4814      	ldr	r0, [pc, #80]	; (8004fd4 <_OnExit+0xa4>)
 8004f84:	4621      	mov	r1, r4
 8004f86:	2210      	movs	r2, #16
 8004f88:	4798      	blx	r3
 8004f8a:	682b      	ldr	r3, [r5, #0]
 8004f8c:	4812      	ldr	r0, [pc, #72]	; (8004fd8 <_OnExit+0xa8>)
 8004f8e:	4621      	mov	r1, r4
 8004f90:	2210      	movs	r2, #16
 8004f92:	4798      	blx	r3
 8004f94:	bd38      	pop	{r3, r4, r5, pc}
 8004f96:	bf00      	nop
 8004f98:	20002af0 	.word	0x20002af0
 8004f9c:	200000a4 	.word	0x200000a4
 8004fa0:	20002c90 	.word	0x20002c90
 8004fa4:	20002ad4 	.word	0x20002ad4
 8004fa8:	20002ad0 	.word	0x20002ad0
 8004fac:	20002cbc 	.word	0x20002cbc
 8004fb0:	20002cc4 	.word	0x20002cc4
 8004fb4:	20002cd0 	.word	0x20002cd0
 8004fb8:	20002c7c 	.word	0x20002c7c
 8004fbc:	20002cb0 	.word	0x20002cb0
 8004fc0:	20002cc0 	.word	0x20002cc0
 8004fc4:	20002aec 	.word	0x20002aec
 8004fc8:	20002c8c 	.word	0x20002c8c
 8004fcc:	20002e18 	.word	0x20002e18
 8004fd0:	20002c80 	.word	0x20002c80
 8004fd4:	20002e08 	.word	0x20002e08
 8004fd8:	20002df8 	.word	0x20002df8

08004fdc <_Paint1>:
 8004fdc:	b510      	push	{r4, lr}
 8004fde:	4604      	mov	r4, r0
 8004fe0:	f006 fa6c 	bl	800b4bc <GUI_ALLOC_h2p>
 8004fe4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004fe6:	4a04      	ldr	r2, [pc, #16]	; (8004ff8 <_Paint1+0x1c>)
 8004fe8:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8004fec:	4b03      	ldr	r3, [pc, #12]	; (8004ffc <_Paint1+0x20>)
 8004fee:	4620      	mov	r0, r4
 8004ff0:	bf08      	it	eq
 8004ff2:	4613      	moveq	r3, r2
 8004ff4:	4798      	blx	r3
 8004ff6:	bd10      	pop	{r4, pc}
 8004ff8:	08005ee9 	.word	0x08005ee9
 8004ffc:	08006475 	.word	0x08006475

08005000 <_Findy1>:
 8005000:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005002:	4605      	mov	r5, r0
 8005004:	b085      	sub	sp, #20
 8005006:	460c      	mov	r4, r1
 8005008:	4616      	mov	r6, r2
 800500a:	2d00      	cmp	r5, #0
 800500c:	d04c      	beq.n	80050a8 <_Findy1+0xa8>
 800500e:	4628      	mov	r0, r5
 8005010:	f006 fa5e 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005014:	6a87      	ldr	r7, [r0, #40]	; 0x28
 8005016:	9001      	str	r0, [sp, #4]
 8005018:	07bb      	lsls	r3, r7, #30
 800501a:	4601      	mov	r1, r0
 800501c:	d53d      	bpl.n	800509a <_Findy1+0x9a>
 800501e:	ad02      	add	r5, sp, #8
 8005020:	b126      	cbz	r6, 800502c <_Findy1+0x2c>
 8005022:	4628      	mov	r0, r5
 8005024:	4632      	mov	r2, r6
 8005026:	f003 ff1e 	bl	8008e66 <GUI__IntersectRects>
 800502a:	e002      	b.n	8005032 <_Findy1+0x32>
 800502c:	c803      	ldmia	r0, {r0, r1}
 800502e:	e885 0003 	stmia.w	r5, {r0, r1}
 8005032:	4620      	mov	r0, r4
 8005034:	4629      	mov	r1, r5
 8005036:	f005 fdad 	bl	800ab94 <GUI_RectsIntersect>
 800503a:	b370      	cbz	r0, 800509a <_Findy1+0x9a>
 800503c:	f017 0f01 	tst.w	r7, #1
 8005040:	9b01      	ldr	r3, [sp, #4]
 8005042:	d11e      	bne.n	8005082 <_Findy1+0x82>
 8005044:	b13e      	cbz	r6, 8005056 <_Findy1+0x56>
 8005046:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800504a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800504e:	429a      	cmp	r2, r3
 8005050:	bfa8      	it	ge
 8005052:	4613      	movge	r3, r2
 8005054:	e001      	b.n	800505a <_Findy1+0x5a>
 8005056:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800505a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800505e:	4293      	cmp	r3, r2
 8005060:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8005064:	dd06      	ble.n	8005074 <_Findy1+0x74>
 8005066:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800506a:	b219      	sxth	r1, r3
 800506c:	428a      	cmp	r2, r1
 800506e:	db14      	blt.n	800509a <_Findy1+0x9a>
 8005070:	3b01      	subs	r3, #1
 8005072:	e004      	b.n	800507e <_Findy1+0x7e>
 8005074:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8005078:	b219      	sxth	r1, r3
 800507a:	428a      	cmp	r2, r1
 800507c:	dd0d      	ble.n	800509a <_Findy1+0x9a>
 800507e:	80e3      	strh	r3, [r4, #6]
 8005080:	e00b      	b.n	800509a <_Findy1+0x9a>
 8005082:	69df      	ldr	r7, [r3, #28]
 8005084:	b14f      	cbz	r7, 800509a <_Findy1+0x9a>
 8005086:	4638      	mov	r0, r7
 8005088:	4621      	mov	r1, r4
 800508a:	462a      	mov	r2, r5
 800508c:	f7ff ffb8 	bl	8005000 <_Findy1>
 8005090:	4638      	mov	r0, r7
 8005092:	f006 fa13 	bl	800b4bc <GUI_ALLOC_h2p>
 8005096:	6a07      	ldr	r7, [r0, #32]
 8005098:	e7f4      	b.n	8005084 <_Findy1+0x84>
 800509a:	a804      	add	r0, sp, #16
 800509c:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 80050a0:	6a1d      	ldr	r5, [r3, #32]
 80050a2:	f006 fa23 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80050a6:	e7b0      	b.n	800500a <_Findy1+0xa>
 80050a8:	b005      	add	sp, #20
 80050aa:	bdf0      	pop	{r4, r5, r6, r7, pc}

080050ac <_Findx0>:
 80050ac:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80050b0:	4604      	mov	r4, r0
 80050b2:	460f      	mov	r7, r1
 80050b4:	4690      	mov	r8, r2
 80050b6:	2500      	movs	r5, #0
 80050b8:	2c00      	cmp	r4, #0
 80050ba:	d037      	beq.n	800512c <_Findx0+0x80>
 80050bc:	4620      	mov	r0, r4
 80050be:	f006 fa07 	bl	800b4d0 <GUI_ALLOC_LockH>
 80050c2:	6a86      	ldr	r6, [r0, #40]	; 0x28
 80050c4:	9001      	str	r0, [sp, #4]
 80050c6:	07b2      	lsls	r2, r6, #30
 80050c8:	4601      	mov	r1, r0
 80050ca:	d528      	bpl.n	800511e <_Findx0+0x72>
 80050cc:	ac02      	add	r4, sp, #8
 80050ce:	f1b8 0f00 	cmp.w	r8, #0
 80050d2:	d004      	beq.n	80050de <_Findx0+0x32>
 80050d4:	4620      	mov	r0, r4
 80050d6:	4642      	mov	r2, r8
 80050d8:	f003 fec5 	bl	8008e66 <GUI__IntersectRects>
 80050dc:	e002      	b.n	80050e4 <_Findx0+0x38>
 80050de:	c803      	ldmia	r0, {r0, r1}
 80050e0:	e884 0003 	stmia.w	r4, {r0, r1}
 80050e4:	4638      	mov	r0, r7
 80050e6:	4621      	mov	r1, r4
 80050e8:	f005 fd54 	bl	800ab94 <GUI_RectsIntersect>
 80050ec:	b1b8      	cbz	r0, 800511e <_Findx0+0x72>
 80050ee:	07f3      	lsls	r3, r6, #31
 80050f0:	d405      	bmi.n	80050fe <_Findx0+0x52>
 80050f2:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80050f6:	3301      	adds	r3, #1
 80050f8:	803b      	strh	r3, [r7, #0]
 80050fa:	2501      	movs	r5, #1
 80050fc:	e00f      	b.n	800511e <_Findx0+0x72>
 80050fe:	9b01      	ldr	r3, [sp, #4]
 8005100:	69de      	ldr	r6, [r3, #28]
 8005102:	b166      	cbz	r6, 800511e <_Findx0+0x72>
 8005104:	4630      	mov	r0, r6
 8005106:	4639      	mov	r1, r7
 8005108:	4622      	mov	r2, r4
 800510a:	f7ff ffcf 	bl	80050ac <_Findx0>
 800510e:	2800      	cmp	r0, #0
 8005110:	4630      	mov	r0, r6
 8005112:	bf18      	it	ne
 8005114:	2501      	movne	r5, #1
 8005116:	f006 f9d1 	bl	800b4bc <GUI_ALLOC_h2p>
 800511a:	6a06      	ldr	r6, [r0, #32]
 800511c:	e7f1      	b.n	8005102 <_Findx0+0x56>
 800511e:	a804      	add	r0, sp, #16
 8005120:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 8005124:	6a1c      	ldr	r4, [r3, #32]
 8005126:	f006 f9e1 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800512a:	e7c5      	b.n	80050b8 <_Findx0+0xc>
 800512c:	4628      	mov	r0, r5
 800512e:	b004      	add	sp, #16
 8005130:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005134 <_Findx1>:
 8005134:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005136:	4604      	mov	r4, r0
 8005138:	b085      	sub	sp, #20
 800513a:	460e      	mov	r6, r1
 800513c:	4617      	mov	r7, r2
 800513e:	2c00      	cmp	r4, #0
 8005140:	d031      	beq.n	80051a6 <_Findx1+0x72>
 8005142:	4620      	mov	r0, r4
 8005144:	f006 f9c4 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005148:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800514a:	9001      	str	r0, [sp, #4]
 800514c:	07aa      	lsls	r2, r5, #30
 800514e:	4601      	mov	r1, r0
 8005150:	d522      	bpl.n	8005198 <_Findx1+0x64>
 8005152:	ac02      	add	r4, sp, #8
 8005154:	b127      	cbz	r7, 8005160 <_Findx1+0x2c>
 8005156:	4620      	mov	r0, r4
 8005158:	463a      	mov	r2, r7
 800515a:	f003 fe84 	bl	8008e66 <GUI__IntersectRects>
 800515e:	e002      	b.n	8005166 <_Findx1+0x32>
 8005160:	c803      	ldmia	r0, {r0, r1}
 8005162:	e884 0003 	stmia.w	r4, {r0, r1}
 8005166:	4630      	mov	r0, r6
 8005168:	4621      	mov	r1, r4
 800516a:	f005 fd13 	bl	800ab94 <GUI_RectsIntersect>
 800516e:	b198      	cbz	r0, 8005198 <_Findx1+0x64>
 8005170:	07eb      	lsls	r3, r5, #31
 8005172:	d404      	bmi.n	800517e <_Findx1+0x4a>
 8005174:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8005178:	3b01      	subs	r3, #1
 800517a:	80b3      	strh	r3, [r6, #4]
 800517c:	e00c      	b.n	8005198 <_Findx1+0x64>
 800517e:	9b01      	ldr	r3, [sp, #4]
 8005180:	69dd      	ldr	r5, [r3, #28]
 8005182:	b14d      	cbz	r5, 8005198 <_Findx1+0x64>
 8005184:	4628      	mov	r0, r5
 8005186:	4631      	mov	r1, r6
 8005188:	4622      	mov	r2, r4
 800518a:	f7ff ffd3 	bl	8005134 <_Findx1>
 800518e:	4628      	mov	r0, r5
 8005190:	f006 f994 	bl	800b4bc <GUI_ALLOC_h2p>
 8005194:	6a05      	ldr	r5, [r0, #32]
 8005196:	e7f4      	b.n	8005182 <_Findx1+0x4e>
 8005198:	a804      	add	r0, sp, #16
 800519a:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 800519e:	6a1c      	ldr	r4, [r3, #32]
 80051a0:	f006 f9a4 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80051a4:	e7cb      	b.n	800513e <_Findx1+0xa>
 80051a6:	b005      	add	sp, #20
 80051a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080051ac <_Paint1Trans>:
 80051ac:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80051b0:	4d21      	ldr	r5, [pc, #132]	; (8005238 <_Paint1Trans+0x8c>)
 80051b2:	682b      	ldr	r3, [r5, #0]
 80051b4:	4606      	mov	r6, r0
 80051b6:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80051b8:	f006 f98a 	bl	800b4d0 <GUI_ALLOC_LockH>
 80051bc:	9000      	str	r0, [sp, #0]
 80051be:	4630      	mov	r0, r6
 80051c0:	f006 f986 	bl	800b4d0 <GUI_ALLOC_LockH>
 80051c4:	ac02      	add	r4, sp, #8
 80051c6:	4601      	mov	r1, r0
 80051c8:	9001      	str	r0, [sp, #4]
 80051ca:	f854 0d08 	ldr.w	r0, [r4, #-8]!
 80051ce:	3008      	adds	r0, #8
 80051d0:	f005 fce0 	bl	800ab94 <GUI_RectsIntersect>
 80051d4:	4607      	mov	r7, r0
 80051d6:	b328      	cbz	r0, 8005224 <_Paint1Trans+0x78>
 80051d8:	9901      	ldr	r1, [sp, #4]
 80051da:	9a00      	ldr	r2, [sp, #0]
 80051dc:	682b      	ldr	r3, [r5, #0]
 80051de:	4c17      	ldr	r4, [pc, #92]	; (800523c <_Paint1Trans+0x90>)
 80051e0:	6d1f      	ldr	r7, [r3, #80]	; 0x50
 80051e2:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 80051e6:	f101 0008 	add.w	r0, r1, #8
 80051ea:	3208      	adds	r2, #8
 80051ec:	f003 fe3b 	bl	8008e66 <GUI__IntersectRects>
 80051f0:	4668      	mov	r0, sp
 80051f2:	f006 f97b 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80051f6:	9a01      	ldr	r2, [sp, #4]
 80051f8:	682b      	ldr	r3, [r5, #0]
 80051fa:	f9b2 1000 	ldrsh.w	r1, [r2]
 80051fe:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 8005202:	64d9      	str	r1, [r3, #76]	; 0x4c
 8005204:	651a      	str	r2, [r3, #80]	; 0x50
 8005206:	a801      	add	r0, sp, #4
 8005208:	6026      	str	r6, [r4, #0]
 800520a:	f006 f96f 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800520e:	4630      	mov	r0, r6
 8005210:	f7ff fee4 	bl	8004fdc <_Paint1>
 8005214:	2300      	movs	r3, #0
 8005216:	6023      	str	r3, [r4, #0]
 8005218:	682b      	ldr	r3, [r5, #0]
 800521a:	651f      	str	r7, [r3, #80]	; 0x50
 800521c:	f8c3 804c 	str.w	r8, [r3, #76]	; 0x4c
 8005220:	2701      	movs	r7, #1
 8005222:	e005      	b.n	8005230 <_Paint1Trans+0x84>
 8005224:	4668      	mov	r0, sp
 8005226:	f006 f961 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800522a:	a801      	add	r0, sp, #4
 800522c:	f006 f95e 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005230:	4638      	mov	r0, r7
 8005232:	b002      	add	sp, #8
 8005234:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005238:	200000b8 	.word	0x200000b8
 800523c:	20002c7c 	.word	0x20002c7c

08005240 <_PaintTransChildren>:
 8005240:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8005244:	4606      	mov	r6, r0
 8005246:	f006 f943 	bl	800b4d0 <GUI_ALLOC_LockH>
 800524a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800524c:	9001      	str	r0, [sp, #4]
 800524e:	079b      	lsls	r3, r3, #30
 8005250:	d405      	bmi.n	800525e <_PaintTransChildren+0x1e>
 8005252:	a801      	add	r0, sp, #4
 8005254:	f006 f94a 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005258:	b002      	add	sp, #8
 800525a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800525e:	69c4      	ldr	r4, [r0, #28]
 8005260:	2c00      	cmp	r4, #0
 8005262:	d0f6      	beq.n	8005252 <_PaintTransChildren+0x12>
 8005264:	4620      	mov	r0, r4
 8005266:	f006 f933 	bl	800b4d0 <GUI_ALLOC_LockH>
 800526a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800526c:	ad02      	add	r5, sp, #8
 800526e:	f003 0303 	and.w	r3, r3, #3
 8005272:	2b03      	cmp	r3, #3
 8005274:	f845 0d08 	str.w	r0, [r5, #-8]!
 8005278:	d137      	bne.n	80052ea <_PaintTransChildren+0xaa>
 800527a:	9901      	ldr	r1, [sp, #4]
 800527c:	3108      	adds	r1, #8
 800527e:	f005 fc89 	bl	800ab94 <GUI_RectsIntersect>
 8005282:	2800      	cmp	r0, #0
 8005284:	d031      	beq.n	80052ea <_PaintTransChildren+0xaa>
 8005286:	a802      	add	r0, sp, #8
 8005288:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800528c:	f8b3 9008 	ldrh.w	r9, [r3, #8]
 8005290:	f8b3 800a 	ldrh.w	r8, [r3, #10]
 8005294:	899f      	ldrh	r7, [r3, #12]
 8005296:	f8b3 a00e 	ldrh.w	sl, [r3, #14]
 800529a:	f006 f927 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800529e:	4668      	mov	r0, sp
 80052a0:	f006 f924 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80052a4:	4620      	mov	r0, r4
 80052a6:	f7ff ff81 	bl	80051ac <_Paint1Trans>
 80052aa:	b170      	cbz	r0, 80052ca <_PaintTransChildren+0x8a>
 80052ac:	4620      	mov	r0, r4
 80052ae:	f006 f905 	bl	800b4bc <GUI_ALLOC_h2p>
 80052b2:	9000      	str	r0, [sp, #0]
 80052b4:	4620      	mov	r0, r4
 80052b6:	f7ff ffc3 	bl	8005240 <_PaintTransChildren>
 80052ba:	4620      	mov	r0, r4
 80052bc:	f006 f8fe 	bl	800b4bc <GUI_ALLOC_h2p>
 80052c0:	9000      	str	r0, [sp, #0]
 80052c2:	4630      	mov	r0, r6
 80052c4:	f006 f8fa 	bl	800b4bc <GUI_ALLOC_h2p>
 80052c8:	9001      	str	r0, [sp, #4]
 80052ca:	4630      	mov	r0, r6
 80052cc:	f006 f900 	bl	800b4d0 <GUI_ALLOC_LockH>
 80052d0:	9001      	str	r0, [sp, #4]
 80052d2:	4620      	mov	r0, r4
 80052d4:	f006 f8fc 	bl	800b4d0 <GUI_ALLOC_LockH>
 80052d8:	9b01      	ldr	r3, [sp, #4]
 80052da:	9000      	str	r0, [sp, #0]
 80052dc:	f8a3 9008 	strh.w	r9, [r3, #8]
 80052e0:	f8a3 800a 	strh.w	r8, [r3, #10]
 80052e4:	819f      	strh	r7, [r3, #12]
 80052e6:	f8a3 a00e 	strh.w	sl, [r3, #14]
 80052ea:	9b00      	ldr	r3, [sp, #0]
 80052ec:	4668      	mov	r0, sp
 80052ee:	6a1c      	ldr	r4, [r3, #32]
 80052f0:	f006 f8fc 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80052f4:	e7b4      	b.n	8005260 <_PaintTransChildren+0x20>
	...

080052f8 <WM__PaintWinAndOverlays>:
 80052f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80052fa:	4604      	mov	r4, r0
 80052fc:	f006 f8e8 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005300:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005302:	9001      	str	r0, [sp, #4]
 8005304:	f640 0301 	movw	r3, #2049	; 0x801
 8005308:	4013      	ands	r3, r2
 800530a:	2b01      	cmp	r3, #1
 800530c:	d005      	beq.n	800531a <WM__PaintWinAndOverlays+0x22>
 800530e:	a801      	add	r0, sp, #4
 8005310:	f006 f8ec 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005314:	4620      	mov	r0, r4
 8005316:	f7ff fe61 	bl	8004fdc <_Paint1>
 800531a:	4b14      	ldr	r3, [pc, #80]	; (800536c <WM__PaintWinAndOverlays+0x74>)
 800531c:	681b      	ldr	r3, [r3, #0]
 800531e:	b313      	cbz	r3, 8005366 <WM__PaintWinAndOverlays+0x6e>
 8005320:	4620      	mov	r0, r4
 8005322:	f7ff ff8d 	bl	8005240 <_PaintTransChildren>
 8005326:	4620      	mov	r0, r4
 8005328:	f006 f8c8 	bl	800b4bc <GUI_ALLOC_h2p>
 800532c:	6985      	ldr	r5, [r0, #24]
 800532e:	6a04      	ldr	r4, [r0, #32]
 8005330:	b1cd      	cbz	r5, 8005366 <WM__PaintWinAndOverlays+0x6e>
 8005332:	b194      	cbz	r4, 800535a <WM__PaintWinAndOverlays+0x62>
 8005334:	4620      	mov	r0, r4
 8005336:	f006 f8c1 	bl	800b4bc <GUI_ALLOC_h2p>
 800533a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800533c:	f003 0303 	and.w	r3, r3, #3
 8005340:	2b03      	cmp	r3, #3
 8005342:	d102      	bne.n	800534a <WM__PaintWinAndOverlays+0x52>
 8005344:	4620      	mov	r0, r4
 8005346:	f7ff ff31 	bl	80051ac <_Paint1Trans>
 800534a:	4620      	mov	r0, r4
 800534c:	f7ff ff78 	bl	8005240 <_PaintTransChildren>
 8005350:	4620      	mov	r0, r4
 8005352:	f006 f8b3 	bl	800b4bc <GUI_ALLOC_h2p>
 8005356:	6a04      	ldr	r4, [r0, #32]
 8005358:	e7eb      	b.n	8005332 <WM__PaintWinAndOverlays+0x3a>
 800535a:	4628      	mov	r0, r5
 800535c:	f006 f8ae 	bl	800b4bc <GUI_ALLOC_h2p>
 8005360:	6a04      	ldr	r4, [r0, #32]
 8005362:	6985      	ldr	r5, [r0, #24]
 8005364:	e7e4      	b.n	8005330 <WM__PaintWinAndOverlays+0x38>
 8005366:	b003      	add	sp, #12
 8005368:	bd30      	pop	{r4, r5, pc}
 800536a:	bf00      	nop
 800536c:	20002cd0 	.word	0x20002cd0

08005370 <_cbPaintMemDev>:
 8005370:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8005374:	4d17      	ldr	r5, [pc, #92]	; (80053d4 <_cbPaintMemDev+0x64>)
 8005376:	682b      	ldr	r3, [r5, #0]
 8005378:	4606      	mov	r6, r0
 800537a:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800537c:	f006 f8a8 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005380:	682a      	ldr	r2, [r5, #0]
 8005382:	f8b0 a008 	ldrh.w	sl, [r0, #8]
 8005386:	f8b0 900a 	ldrh.w	r9, [r0, #10]
 800538a:	f8b0 800c 	ldrh.w	r8, [r0, #12]
 800538e:	89c7      	ldrh	r7, [r0, #14]
 8005390:	ac02      	add	r4, sp, #8
 8005392:	3208      	adds	r2, #8
 8005394:	f844 0d04 	str.w	r0, [r4, #-4]!
 8005398:	f100 0308 	add.w	r3, r0, #8
 800539c:	e892 0003 	ldmia.w	r2, {r0, r1}
 80053a0:	e883 0003 	stmia.w	r3, {r0, r1}
 80053a4:	4620      	mov	r0, r4
 80053a6:	f006 f8a1 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80053aa:	6830      	ldr	r0, [r6, #0]
 80053ac:	f7ff ffa4 	bl	80052f8 <WM__PaintWinAndOverlays>
 80053b0:	682b      	ldr	r3, [r5, #0]
 80053b2:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80053b4:	f006 f88c 	bl	800b4d0 <GUI_ALLOC_LockH>
 80053b8:	9001      	str	r0, [sp, #4]
 80053ba:	f8a0 a008 	strh.w	sl, [r0, #8]
 80053be:	f8a0 900a 	strh.w	r9, [r0, #10]
 80053c2:	f8a0 800c 	strh.w	r8, [r0, #12]
 80053c6:	81c7      	strh	r7, [r0, #14]
 80053c8:	4620      	mov	r0, r4
 80053ca:	f006 f88f 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80053ce:	b002      	add	sp, #8
 80053d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80053d4:	200000b8 	.word	0x200000b8

080053d8 <WM__ClipAtParentBorders>:
 80053d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80053da:	4607      	mov	r7, r0
 80053dc:	460d      	mov	r5, r1
 80053de:	4628      	mov	r0, r5
 80053e0:	f006 f876 	bl	800b4d0 <GUI_ALLOC_LockH>
 80053e4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80053e6:	ac02      	add	r4, sp, #8
 80053e8:	f013 0602 	ands.w	r6, r3, #2
 80053ec:	4601      	mov	r1, r0
 80053ee:	f844 0d04 	str.w	r0, [r4, #-4]!
 80053f2:	d104      	bne.n	80053fe <WM__ClipAtParentBorders+0x26>
 80053f4:	4620      	mov	r0, r4
 80053f6:	f006 f879 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80053fa:	4630      	mov	r0, r6
 80053fc:	e016      	b.n	800542c <WM__ClipAtParentBorders+0x54>
 80053fe:	4638      	mov	r0, r7
 8005400:	f003 fd13 	bl	8008e2a <GUI__IntersectRect>
 8005404:	9b01      	ldr	r3, [sp, #4]
 8005406:	699e      	ldr	r6, [r3, #24]
 8005408:	4620      	mov	r0, r4
 800540a:	b956      	cbnz	r6, 8005422 <WM__ClipAtParentBorders+0x4a>
 800540c:	f006 f86e 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005410:	4b07      	ldr	r3, [pc, #28]	; (8005430 <WM__ClipAtParentBorders+0x58>)
 8005412:	681a      	ldr	r2, [r3, #0]
 8005414:	4295      	cmp	r5, r2
 8005416:	d008      	beq.n	800542a <WM__ClipAtParentBorders+0x52>
 8005418:	6858      	ldr	r0, [r3, #4]
 800541a:	1a2b      	subs	r3, r5, r0
 800541c:	4258      	negs	r0, r3
 800541e:	4158      	adcs	r0, r3
 8005420:	e004      	b.n	800542c <WM__ClipAtParentBorders+0x54>
 8005422:	f006 f863 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005426:	4635      	mov	r5, r6
 8005428:	e7d9      	b.n	80053de <WM__ClipAtParentBorders+0x6>
 800542a:	2001      	movs	r0, #1
 800542c:	b003      	add	sp, #12
 800542e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005430:	20002c80 	.word	0x20002c80

08005434 <WM__InsertWindowIntoList>:
 8005434:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005436:	4604      	mov	r4, r0
 8005438:	b085      	sub	sp, #20
 800543a:	460d      	mov	r5, r1
 800543c:	2900      	cmp	r1, #0
 800543e:	d049      	beq.n	80054d4 <WM__InsertWindowIntoList+0xa0>
 8005440:	f006 f846 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005444:	2300      	movs	r3, #0
 8005446:	6203      	str	r3, [r0, #32]
 8005448:	6185      	str	r5, [r0, #24]
 800544a:	9001      	str	r0, [sp, #4]
 800544c:	4628      	mov	r0, r5
 800544e:	f006 f83f 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005452:	9b01      	ldr	r3, [sp, #4]
 8005454:	69c5      	ldr	r5, [r0, #28]
 8005456:	9002      	str	r0, [sp, #8]
 8005458:	6a9f      	ldr	r7, [r3, #40]	; 0x28
 800545a:	b92d      	cbnz	r5, 8005468 <WM__InsertWindowIntoList+0x34>
 800545c:	61c4      	str	r4, [r0, #28]
 800545e:	a801      	add	r0, sp, #4
 8005460:	f006 f844 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005464:	a802      	add	r0, sp, #8
 8005466:	e033      	b.n	80054d0 <WM__InsertWindowIntoList+0x9c>
 8005468:	4628      	mov	r0, r5
 800546a:	f006 f831 	bl	800b4d0 <GUI_ALLOC_LockH>
 800546e:	ae04      	add	r6, sp, #16
 8005470:	f007 0708 	and.w	r7, r7, #8
 8005474:	f846 0d04 	str.w	r0, [r6, #-4]!
 8005478:	b977      	cbnz	r7, 8005498 <WM__InsertWindowIntoList+0x64>
 800547a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800547c:	071a      	lsls	r2, r3, #28
 800547e:	d50b      	bpl.n	8005498 <WM__InsertWindowIntoList+0x64>
 8005480:	9b01      	ldr	r3, [sp, #4]
 8005482:	621d      	str	r5, [r3, #32]
 8005484:	9b02      	ldr	r3, [sp, #8]
 8005486:	a801      	add	r0, sp, #4
 8005488:	61dc      	str	r4, [r3, #28]
 800548a:	f006 f82f 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800548e:	a802      	add	r0, sp, #8
 8005490:	f006 f82c 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005494:	4630      	mov	r0, r6
 8005496:	e01b      	b.n	80054d0 <WM__InsertWindowIntoList+0x9c>
 8005498:	a802      	add	r0, sp, #8
 800549a:	f006 f827 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800549e:	4630      	mov	r0, r6
 80054a0:	f006 f824 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80054a4:	4628      	mov	r0, r5
 80054a6:	f006 f809 	bl	800b4bc <GUI_ALLOC_h2p>
 80054aa:	9003      	str	r0, [sp, #12]
 80054ac:	9b03      	ldr	r3, [sp, #12]
 80054ae:	6a1d      	ldr	r5, [r3, #32]
 80054b0:	b90d      	cbnz	r5, 80054b6 <WM__InsertWindowIntoList+0x82>
 80054b2:	621c      	str	r4, [r3, #32]
 80054b4:	e00b      	b.n	80054ce <WM__InsertWindowIntoList+0x9a>
 80054b6:	4628      	mov	r0, r5
 80054b8:	f006 f800 	bl	800b4bc <GUI_ALLOC_h2p>
 80054bc:	2f00      	cmp	r7, #0
 80054be:	d1f4      	bne.n	80054aa <WM__InsertWindowIntoList+0x76>
 80054c0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80054c2:	071b      	lsls	r3, r3, #28
 80054c4:	d5f1      	bpl.n	80054aa <WM__InsertWindowIntoList+0x76>
 80054c6:	9b03      	ldr	r3, [sp, #12]
 80054c8:	621c      	str	r4, [r3, #32]
 80054ca:	9b01      	ldr	r3, [sp, #4]
 80054cc:	621d      	str	r5, [r3, #32]
 80054ce:	a801      	add	r0, sp, #4
 80054d0:	f006 f80c 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80054d4:	b005      	add	sp, #20
 80054d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080054d8 <WM__RemoveWindowFromList>:
 80054d8:	b570      	push	{r4, r5, r6, lr}
 80054da:	4604      	mov	r4, r0
 80054dc:	f005 ffee 	bl	800b4bc <GUI_ALLOC_h2p>
 80054e0:	4605      	mov	r5, r0
 80054e2:	6980      	ldr	r0, [r0, #24]
 80054e4:	b1a8      	cbz	r0, 8005512 <WM__RemoveWindowFromList+0x3a>
 80054e6:	f005 ffe9 	bl	800b4bc <GUI_ALLOC_h2p>
 80054ea:	69c3      	ldr	r3, [r0, #28]
 80054ec:	42a3      	cmp	r3, r4
 80054ee:	4606      	mov	r6, r0
 80054f0:	d105      	bne.n	80054fe <WM__RemoveWindowFromList+0x26>
 80054f2:	4618      	mov	r0, r3
 80054f4:	f005 ffe2 	bl	800b4bc <GUI_ALLOC_h2p>
 80054f8:	6a03      	ldr	r3, [r0, #32]
 80054fa:	61f3      	str	r3, [r6, #28]
 80054fc:	bd70      	pop	{r4, r5, r6, pc}
 80054fe:	b143      	cbz	r3, 8005512 <WM__RemoveWindowFromList+0x3a>
 8005500:	4618      	mov	r0, r3
 8005502:	f005 ffdb 	bl	800b4bc <GUI_ALLOC_h2p>
 8005506:	6a03      	ldr	r3, [r0, #32]
 8005508:	42a3      	cmp	r3, r4
 800550a:	d1f8      	bne.n	80054fe <WM__RemoveWindowFromList+0x26>
 800550c:	6a2b      	ldr	r3, [r5, #32]
 800550e:	6203      	str	r3, [r0, #32]
 8005510:	bd70      	pop	{r4, r5, r6, pc}
 8005512:	bd70      	pop	{r4, r5, r6, pc}

08005514 <WM__Client2Screen>:
 8005514:	4603      	mov	r3, r0
 8005516:	4608      	mov	r0, r1
 8005518:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800551c:	f9b3 1000 	ldrsh.w	r1, [r3]
 8005520:	f005 baed 	b.w	800aafe <GUI_MoveRect>

08005524 <_SetClipRectUserIntersect>:
 8005524:	4b11      	ldr	r3, [pc, #68]	; (800556c <_SetClipRectUserIntersect+0x48>)
 8005526:	b530      	push	{r4, r5, lr}
 8005528:	681c      	ldr	r4, [r3, #0]
 800552a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800552c:	b085      	sub	sp, #20
 800552e:	4605      	mov	r5, r0
 8005530:	b1ba      	cbz	r2, 8005562 <_SetClipRectUserIntersect+0x3e>
 8005532:	6810      	ldr	r0, [r2, #0]
 8005534:	6851      	ldr	r1, [r2, #4]
 8005536:	ab02      	add	r3, sp, #8
 8005538:	c303      	stmia	r3!, {r0, r1}
 800553a:	4b0d      	ldr	r3, [pc, #52]	; (8005570 <_SetClipRectUserIntersect+0x4c>)
 800553c:	6818      	ldr	r0, [r3, #0]
 800553e:	b900      	cbnz	r0, 8005542 <_SetClipRectUserIntersect+0x1e>
 8005540:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8005542:	f005 ffc5 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005546:	ac04      	add	r4, sp, #16
 8005548:	a902      	add	r1, sp, #8
 800554a:	f844 0d0c 	str.w	r0, [r4, #-12]!
 800554e:	f7ff ffe1 	bl	8005514 <WM__Client2Screen>
 8005552:	4620      	mov	r0, r4
 8005554:	f005 ffca 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005558:	a802      	add	r0, sp, #8
 800555a:	4629      	mov	r1, r5
 800555c:	f003 fc65 	bl	8008e2a <GUI__IntersectRect>
 8005560:	a802      	add	r0, sp, #8
 8005562:	f002 ff7d 	bl	8008460 <LCD_SetClipRectEx>
 8005566:	b005      	add	sp, #20
 8005568:	bd30      	pop	{r4, r5, pc}
 800556a:	bf00      	nop
 800556c:	200000b8 	.word	0x200000b8
 8005570:	20002c7c 	.word	0x20002c7c

08005574 <WM__ActivateClipRect>:
 8005574:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005576:	4b0e      	ldr	r3, [pc, #56]	; (80055b0 <WM__ActivateClipRect+0x3c>)
 8005578:	681b      	ldr	r3, [r3, #0]
 800557a:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800557e:	b10a      	cbz	r2, 8005584 <WM__ActivateClipRect+0x10>
 8005580:	480c      	ldr	r0, [pc, #48]	; (80055b4 <WM__ActivateClipRect+0x40>)
 8005582:	e011      	b.n	80055a8 <WM__ActivateClipRect+0x34>
 8005584:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005586:	f005 ffa3 	bl	800b4d0 <GUI_ALLOC_LockH>
 800558a:	9001      	str	r0, [sp, #4]
 800558c:	c803      	ldmia	r0, {r0, r1}
 800558e:	ac02      	add	r4, sp, #8
 8005590:	e884 0003 	stmia.w	r4, {r0, r1}
 8005594:	a801      	add	r0, sp, #4
 8005596:	f005 ffa9 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800559a:	4b07      	ldr	r3, [pc, #28]	; (80055b8 <WM__ActivateClipRect+0x44>)
 800559c:	6819      	ldr	r1, [r3, #0]
 800559e:	b111      	cbz	r1, 80055a6 <WM__ActivateClipRect+0x32>
 80055a0:	4620      	mov	r0, r4
 80055a2:	f7ff ff19 	bl	80053d8 <WM__ClipAtParentBorders>
 80055a6:	4620      	mov	r0, r4
 80055a8:	f7ff ffbc 	bl	8005524 <_SetClipRectUserIntersect>
 80055ac:	b004      	add	sp, #16
 80055ae:	bd10      	pop	{r4, pc}
 80055b0:	200000b8 	.word	0x200000b8
 80055b4:	20002adc 	.word	0x20002adc
 80055b8:	20002c7c 	.word	0x20002c7c

080055bc <WM__IsWindow>:
 80055bc:	4b06      	ldr	r3, [pc, #24]	; (80055d8 <WM__IsWindow+0x1c>)
 80055be:	b510      	push	{r4, lr}
 80055c0:	4604      	mov	r4, r0
 80055c2:	6818      	ldr	r0, [r3, #0]
 80055c4:	b128      	cbz	r0, 80055d2 <WM__IsWindow+0x16>
 80055c6:	42a0      	cmp	r0, r4
 80055c8:	d004      	beq.n	80055d4 <WM__IsWindow+0x18>
 80055ca:	f005 ff77 	bl	800b4bc <GUI_ALLOC_h2p>
 80055ce:	6940      	ldr	r0, [r0, #20]
 80055d0:	e7f8      	b.n	80055c4 <WM__IsWindow+0x8>
 80055d2:	bd10      	pop	{r4, pc}
 80055d4:	2001      	movs	r0, #1
 80055d6:	bd10      	pop	{r4, pc}
 80055d8:	20002c9c 	.word	0x20002c9c

080055dc <WM__InvalidateDrawAndDescs>:
 80055dc:	b513      	push	{r0, r1, r4, lr}
 80055de:	4604      	mov	r4, r0
 80055e0:	b300      	cbz	r0, 8005624 <WM__InvalidateDrawAndDescs+0x48>
 80055e2:	f005 ff75 	bl	800b4d0 <GUI_ALLOC_LockH>
 80055e6:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80055e8:	9001      	str	r0, [sp, #4]
 80055ea:	0793      	lsls	r3, r2, #30
 80055ec:	d517      	bpl.n	800561e <WM__InvalidateDrawAndDescs+0x42>
 80055ee:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80055f0:	b140      	cbz	r0, 8005604 <WM__InvalidateDrawAndDescs+0x28>
 80055f2:	4b0d      	ldr	r3, [pc, #52]	; (8005628 <WM__InvalidateDrawAndDescs+0x4c>)
 80055f4:	681b      	ldr	r3, [r3, #0]
 80055f6:	42a3      	cmp	r3, r4
 80055f8:	d004      	beq.n	8005604 <WM__InvalidateDrawAndDescs+0x28>
 80055fa:	f001 fe07 	bl	800720c <GUI_MEMDEV_Delete>
 80055fe:	9b01      	ldr	r3, [sp, #4]
 8005600:	2200      	movs	r2, #0
 8005602:	625a      	str	r2, [r3, #36]	; 0x24
 8005604:	4620      	mov	r0, r4
 8005606:	f7ff f8ec 	bl	80047e2 <WM_GetFirstChild>
 800560a:	4604      	mov	r4, r0
 800560c:	b13c      	cbz	r4, 800561e <WM__InvalidateDrawAndDescs+0x42>
 800560e:	4620      	mov	r0, r4
 8005610:	f7ff ffe4 	bl	80055dc <WM__InvalidateDrawAndDescs>
 8005614:	4620      	mov	r0, r4
 8005616:	f005 ff51 	bl	800b4bc <GUI_ALLOC_h2p>
 800561a:	6a04      	ldr	r4, [r0, #32]
 800561c:	e7f6      	b.n	800560c <WM__InvalidateDrawAndDescs+0x30>
 800561e:	a801      	add	r0, sp, #4
 8005620:	f005 ff64 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005624:	b002      	add	sp, #8
 8005626:	bd10      	pop	{r4, pc}
 8005628:	20002ccc 	.word	0x20002ccc

0800562c <WM__RectIsNZ>:
 800562c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8005630:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8005634:	429a      	cmp	r2, r3
 8005636:	dc08      	bgt.n	800564a <WM__RectIsNZ+0x1e>
 8005638:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800563c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8005640:	429a      	cmp	r2, r3
 8005642:	bfcc      	ite	gt
 8005644:	2000      	movgt	r0, #0
 8005646:	2001      	movle	r0, #1
 8005648:	4770      	bx	lr
 800564a:	2000      	movs	r0, #0
 800564c:	4770      	bx	lr

0800564e <WM_SendMessage>:
 800564e:	b108      	cbz	r0, 8005654 <WM_SendMessage+0x6>
 8005650:	f7fe bde2 	b.w	8004218 <WM__SendMessage>
 8005654:	4770      	bx	lr

08005656 <WM__SendMsgNoData>:
 8005656:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005658:	ab04      	add	r3, sp, #16
 800565a:	9001      	str	r0, [sp, #4]
 800565c:	f843 1d10 	str.w	r1, [r3, #-16]!
 8005660:	4669      	mov	r1, sp
 8005662:	f7fe fdd9 	bl	8004218 <WM__SendMessage>
 8005666:	b005      	add	sp, #20
 8005668:	f85d fb04 	ldr.w	pc, [sp], #4

0800566c <WM__GetClientRectWin>:
 800566c:	2300      	movs	r3, #0
 800566e:	800b      	strh	r3, [r1, #0]
 8005670:	8882      	ldrh	r2, [r0, #4]
 8005672:	804b      	strh	r3, [r1, #2]
 8005674:	8803      	ldrh	r3, [r0, #0]
 8005676:	1ad3      	subs	r3, r2, r3
 8005678:	808b      	strh	r3, [r1, #4]
 800567a:	88c2      	ldrh	r2, [r0, #6]
 800567c:	8843      	ldrh	r3, [r0, #2]
 800567e:	1ad3      	subs	r3, r2, r3
 8005680:	80cb      	strh	r3, [r1, #6]
 8005682:	4770      	bx	lr

08005684 <WM__GetTopLevelLayer>:
 8005684:	b510      	push	{r4, lr}
 8005686:	4604      	mov	r4, r0
 8005688:	f005 ff18 	bl	800b4bc <GUI_ALLOC_h2p>
 800568c:	6980      	ldr	r0, [r0, #24]
 800568e:	2800      	cmp	r0, #0
 8005690:	d1f9      	bne.n	8005686 <WM__GetTopLevelLayer+0x2>
 8005692:	4b05      	ldr	r3, [pc, #20]	; (80056a8 <WM__GetTopLevelLayer+0x24>)
 8005694:	681a      	ldr	r2, [r3, #0]
 8005696:	4294      	cmp	r4, r2
 8005698:	d005      	beq.n	80056a6 <WM__GetTopLevelLayer+0x22>
 800569a:	6858      	ldr	r0, [r3, #4]
 800569c:	4284      	cmp	r4, r0
 800569e:	bf14      	ite	ne
 80056a0:	f04f 30ff 	movne.w	r0, #4294967295
 80056a4:	2001      	moveq	r0, #1
 80056a6:	bd10      	pop	{r4, pc}
 80056a8:	20002c80 	.word	0x20002c80

080056ac <_Invalidate1Abs>:
 80056ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80056ae:	b085      	sub	sp, #20
 80056b0:	4606      	mov	r6, r0
 80056b2:	460d      	mov	r5, r1
 80056b4:	4617      	mov	r7, r2
 80056b6:	f005 ff01 	bl	800b4bc <GUI_ALLOC_h2p>
 80056ba:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80056bc:	9001      	str	r0, [sp, #4]
 80056be:	07a3      	lsls	r3, r4, #30
 80056c0:	d53e      	bpl.n	8005740 <_Invalidate1Abs+0x94>
 80056c2:	4628      	mov	r0, r5
 80056c4:	f7ff ffb2 	bl	800562c <WM__RectIsNZ>
 80056c8:	2800      	cmp	r0, #0
 80056ca:	d039      	beq.n	8005740 <_Invalidate1Abs+0x94>
 80056cc:	f640 0301 	movw	r3, #2049	; 0x801
 80056d0:	4023      	ands	r3, r4
 80056d2:	2b01      	cmp	r3, #1
 80056d4:	d034      	beq.n	8005740 <_Invalidate1Abs+0x94>
 80056d6:	4630      	mov	r0, r6
 80056d8:	f005 fefa 	bl	800b4d0 <GUI_ALLOC_LockH>
 80056dc:	ac02      	add	r4, sp, #8
 80056de:	4602      	mov	r2, r0
 80056e0:	9001      	str	r0, [sp, #4]
 80056e2:	4629      	mov	r1, r5
 80056e4:	4620      	mov	r0, r4
 80056e6:	f003 fbbe 	bl	8008e66 <GUI__IntersectRects>
 80056ea:	4620      	mov	r0, r4
 80056ec:	f7ff ff9e 	bl	800562c <WM__RectIsNZ>
 80056f0:	b318      	cbz	r0, 800573a <_Invalidate1Abs+0x8e>
 80056f2:	9b01      	ldr	r3, [sp, #4]
 80056f4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80056f6:	f244 0120 	movw	r1, #16416	; 0x4020
 80056fa:	4011      	ands	r1, r2
 80056fc:	f103 0508 	add.w	r5, r3, #8
 8005700:	b129      	cbz	r1, 800570e <_Invalidate1Abs+0x62>
 8005702:	4628      	mov	r0, r5
 8005704:	4629      	mov	r1, r5
 8005706:	4622      	mov	r2, r4
 8005708:	f005 f9ce 	bl	800aaa8 <GUI_MergeRect>
 800570c:	e015      	b.n	800573a <_Invalidate1Abs+0x8e>
 800570e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8005712:	4317      	orrs	r7, r2
 8005714:	e885 0003 	stmia.w	r5, {r0, r1}
 8005718:	629f      	str	r7, [r3, #40]	; 0x28
 800571a:	4b0a      	ldr	r3, [pc, #40]	; (8005744 <_Invalidate1Abs+0x98>)
 800571c:	881a      	ldrh	r2, [r3, #0]
 800571e:	4630      	mov	r0, r6
 8005720:	3201      	adds	r2, #1
 8005722:	801a      	strh	r2, [r3, #0]
 8005724:	f7ff ffae 	bl	8005684 <WM__GetTopLevelLayer>
 8005728:	4b07      	ldr	r3, [pc, #28]	; (8005748 <_Invalidate1Abs+0x9c>)
 800572a:	2201      	movs	r2, #1
 800572c:	fa02 f000 	lsl.w	r0, r2, r0
 8005730:	681a      	ldr	r2, [r3, #0]
 8005732:	4302      	orrs	r2, r0
 8005734:	601a      	str	r2, [r3, #0]
 8005736:	f003 feaf 	bl	8009498 <GUI_SignalEvent>
 800573a:	a801      	add	r0, sp, #4
 800573c:	f005 fed6 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005740:	b005      	add	sp, #20
 8005742:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005744:	20002c98 	.word	0x20002c98
 8005748:	20002ca8 	.word	0x20002ca8

0800574c <WM__Invalidate1Abs>:
 800574c:	2220      	movs	r2, #32
 800574e:	f7ff bfad 	b.w	80056ac <_Invalidate1Abs>

08005752 <WM_InvalidateWindowAndDescsEx>:
 8005752:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005754:	460f      	mov	r7, r1
 8005756:	b085      	sub	sp, #20
 8005758:	4615      	mov	r5, r2
 800575a:	4606      	mov	r6, r0
 800575c:	b348      	cbz	r0, 80057b2 <WM_InvalidateWindowAndDescsEx+0x60>
 800575e:	f005 feb7 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005762:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005764:	ac04      	add	r4, sp, #16
 8005766:	079b      	lsls	r3, r3, #30
 8005768:	4602      	mov	r2, r0
 800576a:	f844 0d0c 	str.w	r0, [r4, #-12]!
 800576e:	d403      	bmi.n	8005778 <WM_InvalidateWindowAndDescsEx+0x26>
 8005770:	4620      	mov	r0, r4
 8005772:	f005 febb 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005776:	e01c      	b.n	80057b2 <WM_InvalidateWindowAndDescsEx+0x60>
 8005778:	a802      	add	r0, sp, #8
 800577a:	4639      	mov	r1, r7
 800577c:	f003 fb73 	bl	8008e66 <GUI__IntersectRects>
 8005780:	2800      	cmp	r0, #0
 8005782:	d0f5      	beq.n	8005770 <WM_InvalidateWindowAndDescsEx+0x1e>
 8005784:	4620      	mov	r0, r4
 8005786:	f005 feb1 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800578a:	4630      	mov	r0, r6
 800578c:	a902      	add	r1, sp, #8
 800578e:	462a      	mov	r2, r5
 8005790:	f7ff ff8c 	bl	80056ac <_Invalidate1Abs>
 8005794:	4630      	mov	r0, r6
 8005796:	f7ff f824 	bl	80047e2 <WM_GetFirstChild>
 800579a:	4604      	mov	r4, r0
 800579c:	b14c      	cbz	r4, 80057b2 <WM_InvalidateWindowAndDescsEx+0x60>
 800579e:	4620      	mov	r0, r4
 80057a0:	a902      	add	r1, sp, #8
 80057a2:	462a      	mov	r2, r5
 80057a4:	f7ff ffd5 	bl	8005752 <WM_InvalidateWindowAndDescsEx>
 80057a8:	4620      	mov	r0, r4
 80057aa:	f005 fe87 	bl	800b4bc <GUI_ALLOC_h2p>
 80057ae:	6a04      	ldr	r4, [r0, #32]
 80057b0:	e7f4      	b.n	800579c <WM_InvalidateWindowAndDescsEx+0x4a>
 80057b2:	b005      	add	sp, #20
 80057b4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080057b6 <WM__InvalidateRect>:
 80057b6:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80057ba:	4680      	mov	r8, r0
 80057bc:	4617      	mov	r7, r2
 80057be:	461d      	mov	r5, r3
 80057c0:	460c      	mov	r4, r1
 80057c2:	2900      	cmp	r1, #0
 80057c4:	d030      	beq.n	8005828 <WM__InvalidateRect+0x72>
 80057c6:	4608      	mov	r0, r1
 80057c8:	f005 fe82 	bl	800b4d0 <GUI_ALLOC_LockH>
 80057cc:	6a86      	ldr	r6, [r0, #40]	; 0x28
 80057ce:	9001      	str	r0, [sp, #4]
 80057d0:	07b3      	lsls	r3, r6, #30
 80057d2:	4602      	mov	r2, r0
 80057d4:	d525      	bpl.n	8005822 <WM__InvalidateRect+0x6c>
 80057d6:	a802      	add	r0, sp, #8
 80057d8:	4641      	mov	r1, r8
 80057da:	f003 fb44 	bl	8008e66 <GUI__IntersectRects>
 80057de:	b300      	cbz	r0, 8005822 <WM__InvalidateRect+0x6c>
 80057e0:	f640 0301 	movw	r3, #2049	; 0x801
 80057e4:	4033      	ands	r3, r6
 80057e6:	2b01      	cmp	r3, #1
 80057e8:	d107      	bne.n	80057fa <WM__InvalidateRect+0x44>
 80057ea:	9b01      	ldr	r3, [sp, #4]
 80057ec:	a802      	add	r0, sp, #8
 80057ee:	6999      	ldr	r1, [r3, #24]
 80057f0:	6a1a      	ldr	r2, [r3, #32]
 80057f2:	462b      	mov	r3, r5
 80057f4:	f7ff ffdf 	bl	80057b6 <WM__InvalidateRect>
 80057f8:	e004      	b.n	8005804 <WM__InvalidateRect+0x4e>
 80057fa:	4620      	mov	r0, r4
 80057fc:	a902      	add	r1, sp, #8
 80057fe:	462a      	mov	r2, r5
 8005800:	f7ff ff54 	bl	80056ac <_Invalidate1Abs>
 8005804:	9b01      	ldr	r3, [sp, #4]
 8005806:	69dc      	ldr	r4, [r3, #28]
 8005808:	b15c      	cbz	r4, 8005822 <WM__InvalidateRect+0x6c>
 800580a:	42bc      	cmp	r4, r7
 800580c:	d009      	beq.n	8005822 <WM__InvalidateRect+0x6c>
 800580e:	4620      	mov	r0, r4
 8005810:	a902      	add	r1, sp, #8
 8005812:	462a      	mov	r2, r5
 8005814:	f7ff ff9d 	bl	8005752 <WM_InvalidateWindowAndDescsEx>
 8005818:	4620      	mov	r0, r4
 800581a:	f005 fe4f 	bl	800b4bc <GUI_ALLOC_h2p>
 800581e:	6a04      	ldr	r4, [r0, #32]
 8005820:	e7f2      	b.n	8005808 <WM__InvalidateRect+0x52>
 8005822:	a801      	add	r0, sp, #4
 8005824:	f005 fe62 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005828:	b004      	add	sp, #16
 800582a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800582e <WM__InvalidateParent>:
 800582e:	b570      	push	{r4, r5, r6, lr}
 8005830:	4605      	mov	r5, r0
 8005832:	4608      	mov	r0, r1
 8005834:	460c      	mov	r4, r1
 8005836:	4616      	mov	r6, r2
 8005838:	f005 fe40 	bl	800b4bc <GUI_ALLOC_h2p>
 800583c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800583e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8005842:	4628      	mov	r0, r5
 8005844:	4621      	mov	r1, r4
 8005846:	4632      	mov	r2, r6
 8005848:	bf0c      	ite	eq
 800584a:	2320      	moveq	r3, #32
 800584c:	f44f 4380 	movne.w	r3, #16384	; 0x4000
 8005850:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005854:	f7ff bfaf 	b.w	80057b6 <WM__InvalidateRect>

08005858 <WM__InvalidateRectEx>:
 8005858:	2320      	movs	r3, #32
 800585a:	f7ff bfac 	b.w	80057b6 <WM__InvalidateRect>

0800585e <WM__DetachWindow>:
 800585e:	b513      	push	{r0, r1, r4, lr}
 8005860:	4604      	mov	r4, r0
 8005862:	f005 fe35 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005866:	6981      	ldr	r1, [r0, #24]
 8005868:	9001      	str	r0, [sp, #4]
 800586a:	b141      	cbz	r1, 800587e <WM__DetachWindow+0x20>
 800586c:	6a02      	ldr	r2, [r0, #32]
 800586e:	f7ff fff3 	bl	8005858 <WM__InvalidateRectEx>
 8005872:	4620      	mov	r0, r4
 8005874:	f7ff fe30 	bl	80054d8 <WM__RemoveWindowFromList>
 8005878:	9b01      	ldr	r3, [sp, #4]
 800587a:	2200      	movs	r2, #0
 800587c:	619a      	str	r2, [r3, #24]
 800587e:	a801      	add	r0, sp, #4
 8005880:	f005 fe34 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005884:	b002      	add	sp, #8
 8005886:	bd10      	pop	{r4, pc}

08005888 <WM_InvalidateRect>:
 8005888:	b5f0      	push	{r4, r5, r6, r7, lr}
 800588a:	460f      	mov	r7, r1
 800588c:	b087      	sub	sp, #28
 800588e:	4605      	mov	r5, r0
 8005890:	2800      	cmp	r0, #0
 8005892:	d033      	beq.n	80058fc <WM_InvalidateRect+0x74>
 8005894:	f005 fe1c 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005898:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800589a:	9001      	str	r0, [sp, #4]
 800589c:	07b2      	lsls	r2, r6, #30
 800589e:	d52a      	bpl.n	80058f6 <WM_InvalidateRect+0x6e>
 80058a0:	c803      	ldmia	r0, {r0, r1}
 80058a2:	ac04      	add	r4, sp, #16
 80058a4:	03f3      	lsls	r3, r6, #15
 80058a6:	e884 0003 	stmia.w	r4, {r0, r1}
 80058aa:	d502      	bpl.n	80058b2 <WM_InvalidateRect+0x2a>
 80058ac:	4628      	mov	r0, r5
 80058ae:	f7ff fe95 	bl	80055dc <WM__InvalidateDrawAndDescs>
 80058b2:	b15f      	cbz	r7, 80058cc <WM_InvalidateRect+0x44>
 80058b4:	6838      	ldr	r0, [r7, #0]
 80058b6:	6879      	ldr	r1, [r7, #4]
 80058b8:	ab02      	add	r3, sp, #8
 80058ba:	c303      	stmia	r3!, {r0, r1}
 80058bc:	9801      	ldr	r0, [sp, #4]
 80058be:	a902      	add	r1, sp, #8
 80058c0:	f7ff fe28 	bl	8005514 <WM__Client2Screen>
 80058c4:	4620      	mov	r0, r4
 80058c6:	a902      	add	r1, sp, #8
 80058c8:	f003 faaf 	bl	8008e2a <GUI__IntersectRect>
 80058cc:	4620      	mov	r0, r4
 80058ce:	4629      	mov	r1, r5
 80058d0:	f7ff fd82 	bl	80053d8 <WM__ClipAtParentBorders>
 80058d4:	b178      	cbz	r0, 80058f6 <WM_InvalidateRect+0x6e>
 80058d6:	f640 0301 	movw	r3, #2049	; 0x801
 80058da:	4033      	ands	r3, r6
 80058dc:	2b01      	cmp	r3, #1
 80058de:	d106      	bne.n	80058ee <WM_InvalidateRect+0x66>
 80058e0:	9b01      	ldr	r3, [sp, #4]
 80058e2:	4620      	mov	r0, r4
 80058e4:	6999      	ldr	r1, [r3, #24]
 80058e6:	6a1a      	ldr	r2, [r3, #32]
 80058e8:	f7ff ffb6 	bl	8005858 <WM__InvalidateRectEx>
 80058ec:	e003      	b.n	80058f6 <WM_InvalidateRect+0x6e>
 80058ee:	4628      	mov	r0, r5
 80058f0:	4621      	mov	r1, r4
 80058f2:	f7ff ff2b 	bl	800574c <WM__Invalidate1Abs>
 80058f6:	a801      	add	r0, sp, #4
 80058f8:	f005 fdf8 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80058fc:	b007      	add	sp, #28
 80058fe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005900 <WM_InvalidateWindow>:
 8005900:	2100      	movs	r1, #0
 8005902:	f7ff bfc1 	b.w	8005888 <WM_InvalidateRect>

08005906 <WM__SelectTopLevelLayer>:
 8005906:	b508      	push	{r3, lr}
 8005908:	f7ff febc 	bl	8005684 <WM__GetTopLevelLayer>
 800590c:	2800      	cmp	r0, #0
 800590e:	db03      	blt.n	8005918 <WM__SelectTopLevelLayer+0x12>
 8005910:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005914:	f003 bfca 	b.w	80098ac <GUI_SelectLayer>
 8005918:	bd08      	pop	{r3, pc}
	...

0800591c <WM_SelectWindow>:
 800591c:	4a0d      	ldr	r2, [pc, #52]	; (8005954 <WM_SelectWindow+0x38>)
 800591e:	6813      	ldr	r3, [r2, #0]
 8005920:	b570      	push	{r4, r5, r6, lr}
 8005922:	6c9d      	ldr	r5, [r3, #72]	; 0x48
 8005924:	4604      	mov	r4, r0
 8005926:	4616      	mov	r6, r2
 8005928:	b908      	cbnz	r0, 800592e <WM_SelectWindow+0x12>
 800592a:	4a0b      	ldr	r2, [pc, #44]	; (8005958 <WM_SelectWindow+0x3c>)
 800592c:	6814      	ldr	r4, [r2, #0]
 800592e:	649c      	str	r4, [r3, #72]	; 0x48
 8005930:	4620      	mov	r0, r4
 8005932:	f7ff ffe8 	bl	8005906 <WM__SelectTopLevelLayer>
 8005936:	f003 f98b 	bl	8008c50 <LCD_SetClipRectMax>
 800593a:	4620      	mov	r0, r4
 800593c:	f005 fdbe 	bl	800b4bc <GUI_ALLOC_h2p>
 8005940:	6833      	ldr	r3, [r6, #0]
 8005942:	f9b0 1000 	ldrsh.w	r1, [r0]
 8005946:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800594a:	64d9      	str	r1, [r3, #76]	; 0x4c
 800594c:	651a      	str	r2, [r3, #80]	; 0x50
 800594e:	4628      	mov	r0, r5
 8005950:	bd70      	pop	{r4, r5, r6, pc}
 8005952:	bf00      	nop
 8005954:	200000b8 	.word	0x200000b8
 8005958:	20002c9c 	.word	0x20002c9c

0800595c <WM_CreateWindowAsChild>:
 800595c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005960:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005962:	469b      	mov	fp, r3
 8005964:	4b4b      	ldr	r3, [pc, #300]	; (8005a94 <WM_CreateWindowAsChild+0x138>)
 8005966:	4607      	mov	r7, r0
 8005968:	4688      	mov	r8, r1
 800596a:	4692      	mov	sl, r2
 800596c:	681e      	ldr	r6, [r3, #0]
 800596e:	bb65      	cbnz	r5, 80059ca <WM_CreateWindowAsChild+0x6e>
 8005970:	4b49      	ldr	r3, [pc, #292]	; (8005a98 <WM_CreateWindowAsChild+0x13c>)
 8005972:	881b      	ldrh	r3, [r3, #0]
 8005974:	b363      	cbz	r3, 80059d0 <WM_CreateWindowAsChild+0x74>
 8005976:	4b49      	ldr	r3, [pc, #292]	; (8005a9c <WM_CreateWindowAsChild+0x140>)
 8005978:	681b      	ldr	r3, [r3, #0]
 800597a:	7c5a      	ldrb	r2, [r3, #17]
 800597c:	4b48      	ldr	r3, [pc, #288]	; (8005aa0 <WM_CreateWindowAsChild+0x144>)
 800597e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005982:	1c5a      	adds	r2, r3, #1
 8005984:	d024      	beq.n	80059d0 <WM_CreateWindowAsChild+0x74>
 8005986:	b31b      	cbz	r3, 80059d0 <WM_CreateWindowAsChild+0x74>
 8005988:	461d      	mov	r5, r3
 800598a:	4628      	mov	r0, r5
 800598c:	f005 fda0 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005990:	f9b0 2000 	ldrsh.w	r2, [r0]
 8005994:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8005998:	9001      	str	r0, [sp, #4]
 800599a:	4417      	add	r7, r2
 800599c:	4498      	add	r8, r3
 800599e:	f1ba 0f00 	cmp.w	sl, #0
 80059a2:	d105      	bne.n	80059b0 <WM_CreateWindowAsChild+0x54>
 80059a4:	f9b0 a004 	ldrsh.w	sl, [r0, #4]
 80059a8:	ebc2 0a0a 	rsb	sl, r2, sl
 80059ac:	f10a 0a01 	add.w	sl, sl, #1
 80059b0:	f1bb 0f00 	cmp.w	fp, #0
 80059b4:	d105      	bne.n	80059c2 <WM_CreateWindowAsChild+0x66>
 80059b6:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 80059ba:	ebc3 0b0b 	rsb	fp, r3, fp
 80059be:	f10b 0b01 	add.w	fp, fp, #1
 80059c2:	a801      	add	r0, sp, #4
 80059c4:	f005 fd92 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80059c8:	e002      	b.n	80059d0 <WM_CreateWindowAsChild+0x74>
 80059ca:	1c6b      	adds	r3, r5, #1
 80059cc:	d1dd      	bne.n	800598a <WM_CreateWindowAsChild+0x2e>
 80059ce:	2500      	movs	r5, #0
 80059d0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80059d2:	302c      	adds	r0, #44	; 0x2c
 80059d4:	f005 ff76 	bl	800b8c4 <GUI_ALLOC_AllocZero>
 80059d8:	4604      	mov	r4, r0
 80059da:	2800      	cmp	r0, #0
 80059dc:	d056      	beq.n	8005a8c <WM_CreateWindowAsChild+0x130>
 80059de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80059e0:	431e      	orrs	r6, r3
 80059e2:	4b2d      	ldr	r3, [pc, #180]	; (8005a98 <WM_CreateWindowAsChild+0x13c>)
 80059e4:	881a      	ldrh	r2, [r3, #0]
 80059e6:	3201      	adds	r2, #1
 80059e8:	801a      	strh	r2, [r3, #0]
 80059ea:	f005 fd71 	bl	800b4d0 <GUI_ALLOC_LockH>
 80059ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80059f0:	6103      	str	r3, [r0, #16]
 80059f2:	f10d 0908 	add.w	r9, sp, #8
 80059f6:	4b2b      	ldr	r3, [pc, #172]	; (8005aa4 <WM_CreateWindowAsChild+0x148>)
 80059f8:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80059fa:	f849 0d08 	str.w	r0, [r9, #-8]!
 80059fe:	4033      	ands	r3, r6
 8005a00:	8007      	strh	r7, [r0, #0]
 8005a02:	f8a0 8002 	strh.w	r8, [r0, #2]
 8005a06:	4457      	add	r7, sl
 8005a08:	44d8      	add	r8, fp
 8005a0a:	4313      	orrs	r3, r2
 8005a0c:	3f01      	subs	r7, #1
 8005a0e:	f108 38ff 	add.w	r8, r8, #4294967295
 8005a12:	6283      	str	r3, [r0, #40]	; 0x28
 8005a14:	8087      	strh	r7, [r0, #4]
 8005a16:	f8a0 8006 	strh.w	r8, [r0, #6]
 8005a1a:	4668      	mov	r0, sp
 8005a1c:	f005 fd66 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005a20:	4b21      	ldr	r3, [pc, #132]	; (8005aa8 <WM_CreateWindowAsChild+0x14c>)
 8005a22:	6818      	ldr	r0, [r3, #0]
 8005a24:	b148      	cbz	r0, 8005a3a <WM_CreateWindowAsChild+0xde>
 8005a26:	f005 fd49 	bl	800b4bc <GUI_ALLOC_h2p>
 8005a2a:	4607      	mov	r7, r0
 8005a2c:	4620      	mov	r0, r4
 8005a2e:	f005 fd45 	bl	800b4bc <GUI_ALLOC_h2p>
 8005a32:	697b      	ldr	r3, [r7, #20]
 8005a34:	6143      	str	r3, [r0, #20]
 8005a36:	617c      	str	r4, [r7, #20]
 8005a38:	e000      	b.n	8005a3c <WM_CreateWindowAsChild+0xe0>
 8005a3a:	601c      	str	r4, [r3, #0]
 8005a3c:	4629      	mov	r1, r5
 8005a3e:	4620      	mov	r0, r4
 8005a40:	f7ff fcf8 	bl	8005434 <WM__InsertWindowIntoList>
 8005a44:	06b5      	lsls	r5, r6, #26
 8005a46:	d502      	bpl.n	8005a4e <WM_CreateWindowAsChild+0xf2>
 8005a48:	4620      	mov	r0, r4
 8005a4a:	f7ff ff67 	bl	800591c <WM_SelectWindow>
 8005a4e:	07f0      	lsls	r0, r6, #31
 8005a50:	d503      	bpl.n	8005a5a <WM_CreateWindowAsChild+0xfe>
 8005a52:	4b16      	ldr	r3, [pc, #88]	; (8005aac <WM_CreateWindowAsChild+0x150>)
 8005a54:	681a      	ldr	r2, [r3, #0]
 8005a56:	3201      	adds	r2, #1
 8005a58:	601a      	str	r2, [r3, #0]
 8005a5a:	0671      	lsls	r1, r6, #25
 8005a5c:	d502      	bpl.n	8005a64 <WM_CreateWindowAsChild+0x108>
 8005a5e:	4620      	mov	r0, r4
 8005a60:	f7fe ff68 	bl	8004934 <WM_BringToBottom>
 8005a64:	07b2      	lsls	r2, r6, #30
 8005a66:	d50d      	bpl.n	8005a84 <WM_CreateWindowAsChild+0x128>
 8005a68:	4620      	mov	r0, r4
 8005a6a:	f005 fd31 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005a6e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005a70:	9000      	str	r0, [sp, #0]
 8005a72:	f043 0302 	orr.w	r3, r3, #2
 8005a76:	6283      	str	r3, [r0, #40]	; 0x28
 8005a78:	4668      	mov	r0, sp
 8005a7a:	f005 fd37 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005a7e:	4620      	mov	r0, r4
 8005a80:	f7ff ff3e 	bl	8005900 <WM_InvalidateWindow>
 8005a84:	4620      	mov	r0, r4
 8005a86:	2101      	movs	r1, #1
 8005a88:	f7ff fde5 	bl	8005656 <WM__SendMsgNoData>
 8005a8c:	4620      	mov	r0, r4
 8005a8e:	b003      	add	sp, #12
 8005a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a94:	20002cb0 	.word	0x20002cb0
 8005a98:	20002c78 	.word	0x20002c78
 8005a9c:	200000b8 	.word	0x200000b8
 8005aa0:	20002c80 	.word	0x20002c80
 8005aa4:	003f3f9f 	.word	0x003f3f9f
 8005aa8:	20002c9c 	.word	0x20002c9c
 8005aac:	20002cd0 	.word	0x20002cd0

08005ab0 <WM_DeleteWindow>:
 8005ab0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005ab2:	4604      	mov	r4, r0
 8005ab4:	2800      	cmp	r0, #0
 8005ab6:	d06e      	beq.n	8005b96 <WM_DeleteWindow+0xe6>
 8005ab8:	f7ff fd80 	bl	80055bc <WM__IsWindow>
 8005abc:	2800      	cmp	r0, #0
 8005abe:	d06a      	beq.n	8005b96 <WM_DeleteWindow+0xe6>
 8005ac0:	4620      	mov	r0, r4
 8005ac2:	f7ff fddf 	bl	8005684 <WM__GetTopLevelLayer>
 8005ac6:	210b      	movs	r1, #11
 8005ac8:	4605      	mov	r5, r0
 8005aca:	4620      	mov	r0, r4
 8005acc:	f7ff fdc3 	bl	8005656 <WM__SendMsgNoData>
 8005ad0:	4620      	mov	r0, r4
 8005ad2:	f007 f96f 	bl	800cdb4 <WM__DeleteAssocTimer>
 8005ad6:	4620      	mov	r0, r4
 8005ad8:	f005 fcfa 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005adc:	9001      	str	r0, [sp, #4]
 8005ade:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005ae0:	b108      	cbz	r0, 8005ae6 <WM_DeleteWindow+0x36>
 8005ae2:	f001 fb93 	bl	800720c <GUI_MEMDEV_Delete>
 8005ae6:	4b2d      	ldr	r3, [pc, #180]	; (8005b9c <WM_DeleteWindow+0xec>)
 8005ae8:	4a2d      	ldr	r2, [pc, #180]	; (8005ba0 <WM_DeleteWindow+0xf0>)
 8005aea:	2100      	movs	r1, #0
 8005aec:	6019      	str	r1, [r3, #0]
 8005aee:	4b2d      	ldr	r3, [pc, #180]	; (8005ba4 <WM_DeleteWindow+0xf4>)
 8005af0:	681b      	ldr	r3, [r3, #0]
 8005af2:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8005af6:	42a0      	cmp	r0, r4
 8005af8:	bf08      	it	eq
 8005afa:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 8005afe:	4a2a      	ldr	r2, [pc, #168]	; (8005ba8 <WM_DeleteWindow+0xf8>)
 8005b00:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8005b04:	42a1      	cmp	r1, r4
 8005b06:	bf04      	itt	eq
 8005b08:	2100      	moveq	r1, #0
 8005b0a:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 8005b0e:	4b27      	ldr	r3, [pc, #156]	; (8005bac <WM_DeleteWindow+0xfc>)
 8005b10:	681b      	ldr	r3, [r3, #0]
 8005b12:	b12b      	cbz	r3, 8005b20 <WM_DeleteWindow+0x70>
 8005b14:	685a      	ldr	r2, [r3, #4]
 8005b16:	42a2      	cmp	r2, r4
 8005b18:	bf04      	itt	eq
 8005b1a:	2200      	moveq	r2, #0
 8005b1c:	605a      	streq	r2, [r3, #4]
 8005b1e:	e7f7      	b.n	8005b10 <WM_DeleteWindow+0x60>
 8005b20:	4620      	mov	r0, r4
 8005b22:	2107      	movs	r1, #7
 8005b24:	f7ff f8a3 	bl	8004c6e <WM_NotifyParent>
 8005b28:	9e01      	ldr	r6, [sp, #4]
 8005b2a:	69f0      	ldr	r0, [r6, #28]
 8005b2c:	f7ff ffc0 	bl	8005ab0 <WM_DeleteWindow>
 8005b30:	69f3      	ldr	r3, [r6, #28]
 8005b32:	2b00      	cmp	r3, #0
 8005b34:	d1f9      	bne.n	8005b2a <WM_DeleteWindow+0x7a>
 8005b36:	4620      	mov	r0, r4
 8005b38:	f7ff fe91 	bl	800585e <WM__DetachWindow>
 8005b3c:	4b1c      	ldr	r3, [pc, #112]	; (8005bb0 <WM_DeleteWindow+0x100>)
 8005b3e:	6818      	ldr	r0, [r3, #0]
 8005b40:	b150      	cbz	r0, 8005b58 <WM_DeleteWindow+0xa8>
 8005b42:	f005 fcbb 	bl	800b4bc <GUI_ALLOC_h2p>
 8005b46:	4606      	mov	r6, r0
 8005b48:	6940      	ldr	r0, [r0, #20]
 8005b4a:	42a0      	cmp	r0, r4
 8005b4c:	d1f8      	bne.n	8005b40 <WM_DeleteWindow+0x90>
 8005b4e:	4620      	mov	r0, r4
 8005b50:	f005 fcb4 	bl	800b4bc <GUI_ALLOC_h2p>
 8005b54:	6943      	ldr	r3, [r0, #20]
 8005b56:	6173      	str	r3, [r6, #20]
 8005b58:	9b01      	ldr	r3, [sp, #4]
 8005b5a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005b5c:	07da      	lsls	r2, r3, #31
 8005b5e:	d503      	bpl.n	8005b68 <WM_DeleteWindow+0xb8>
 8005b60:	4a14      	ldr	r2, [pc, #80]	; (8005bb4 <WM_DeleteWindow+0x104>)
 8005b62:	6811      	ldr	r1, [r2, #0]
 8005b64:	3901      	subs	r1, #1
 8005b66:	6011      	str	r1, [r2, #0]
 8005b68:	069b      	lsls	r3, r3, #26
 8005b6a:	d503      	bpl.n	8005b74 <WM_DeleteWindow+0xc4>
 8005b6c:	4b12      	ldr	r3, [pc, #72]	; (8005bb8 <WM_DeleteWindow+0x108>)
 8005b6e:	881a      	ldrh	r2, [r3, #0]
 8005b70:	3a01      	subs	r2, #1
 8005b72:	801a      	strh	r2, [r3, #0]
 8005b74:	a801      	add	r0, sp, #4
 8005b76:	f005 fcb9 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005b7a:	4b10      	ldr	r3, [pc, #64]	; (8005bbc <WM_DeleteWindow+0x10c>)
 8005b7c:	881a      	ldrh	r2, [r3, #0]
 8005b7e:	4620      	mov	r0, r4
 8005b80:	3a01      	subs	r2, #1
 8005b82:	801a      	strh	r2, [r3, #0]
 8005b84:	f005 fcde 	bl	800b544 <GUI_ALLOC_Free>
 8005b88:	2d00      	cmp	r5, #0
 8005b8a:	db04      	blt.n	8005b96 <WM_DeleteWindow+0xe6>
 8005b8c:	4b0c      	ldr	r3, [pc, #48]	; (8005bc0 <WM_DeleteWindow+0x110>)
 8005b8e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005b92:	f7ff fec3 	bl	800591c <WM_SelectWindow>
 8005b96:	b002      	add	sp, #8
 8005b98:	bd70      	pop	{r4, r5, r6, pc}
 8005b9a:	bf00      	nop
 8005b9c:	20002aec 	.word	0x20002aec
 8005ba0:	20002c90 	.word	0x20002c90
 8005ba4:	20002ca0 	.word	0x20002ca0
 8005ba8:	20002cc4 	.word	0x20002cc4
 8005bac:	20002cbc 	.word	0x20002cbc
 8005bb0:	20002c9c 	.word	0x20002c9c
 8005bb4:	20002cd0 	.word	0x20002cd0
 8005bb8:	20002c98 	.word	0x20002c98
 8005bbc:	20002c78 	.word	0x20002c78
 8005bc0:	20002c80 	.word	0x20002c80

08005bc4 <_Exec1Input>:
 8005bc4:	4b1b      	ldr	r3, [pc, #108]	; (8005c34 <_Exec1Input+0x70>)
 8005bc6:	681a      	ldr	r2, [r3, #0]
 8005bc8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005bca:	461e      	mov	r6, r3
 8005bcc:	b1d2      	cbz	r2, 8005c04 <_Exec1Input+0x40>
 8005bce:	4b1a      	ldr	r3, [pc, #104]	; (8005c38 <_Exec1Input+0x74>)
 8005bd0:	681c      	ldr	r4, [r3, #0]
 8005bd2:	b1b4      	cbz	r4, 8005c02 <_Exec1Input+0x3e>
 8005bd4:	4620      	mov	r0, r4
 8005bd6:	f005 fc7b 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005bda:	4603      	mov	r3, r0
 8005bdc:	a802      	add	r0, sp, #8
 8005bde:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005be0:	f840 3d04 	str.w	r3, [r0, #-4]!
 8005be4:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 8005be8:	695d      	ldr	r5, [r3, #20]
 8005bea:	d006      	beq.n	8005bfa <_Exec1Input+0x36>
 8005bec:	f005 fc7e 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005bf0:	4620      	mov	r0, r4
 8005bf2:	f7ff ff5d 	bl	8005ab0 <WM_DeleteWindow>
 8005bf6:	462c      	mov	r4, r5
 8005bf8:	e7eb      	b.n	8005bd2 <_Exec1Input+0xe>
 8005bfa:	462c      	mov	r4, r5
 8005bfc:	f005 fc76 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005c00:	e7e7      	b.n	8005bd2 <_Exec1Input+0xe>
 8005c02:	6034      	str	r4, [r6, #0]
 8005c04:	4b0d      	ldr	r3, [pc, #52]	; (8005c3c <_Exec1Input+0x78>)
 8005c06:	681b      	ldr	r3, [r3, #0]
 8005c08:	b103      	cbz	r3, 8005c0c <_Exec1Input+0x48>
 8005c0a:	4798      	blx	r3
 8005c0c:	4b0c      	ldr	r3, [pc, #48]	; (8005c40 <_Exec1Input+0x7c>)
 8005c0e:	681b      	ldr	r3, [r3, #0]
 8005c10:	b953      	cbnz	r3, 8005c28 <_Exec1Input+0x64>
 8005c12:	4b0c      	ldr	r3, [pc, #48]	; (8005c44 <_Exec1Input+0x80>)
 8005c14:	681b      	ldr	r3, [r3, #0]
 8005c16:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8005c1a:	b148      	cbz	r0, 8005c30 <_Exec1Input+0x6c>
 8005c1c:	f003 fe64 	bl	80098e8 <GUI_PollKeyMsg>
 8005c20:	3000      	adds	r0, #0
 8005c22:	bf18      	it	ne
 8005c24:	2001      	movne	r0, #1
 8005c26:	e003      	b.n	8005c30 <_Exec1Input+0x6c>
 8005c28:	4798      	blx	r3
 8005c2a:	2800      	cmp	r0, #0
 8005c2c:	d0f1      	beq.n	8005c12 <_Exec1Input+0x4e>
 8005c2e:	2001      	movs	r0, #1
 8005c30:	b002      	add	sp, #8
 8005c32:	bd70      	pop	{r4, r5, r6, pc}
 8005c34:	20002ad0 	.word	0x20002ad0
 8005c38:	20002c9c 	.word	0x20002c9c
 8005c3c:	20002c88 	.word	0x20002c88
 8005c40:	20002d34 	.word	0x20002d34
 8005c44:	200000b8 	.word	0x200000b8

08005c48 <WM_GetActiveWindow>:
 8005c48:	4b01      	ldr	r3, [pc, #4]	; (8005c50 <WM_GetActiveWindow+0x8>)
 8005c4a:	681b      	ldr	r3, [r3, #0]
 8005c4c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005c4e:	4770      	bx	lr
 8005c50:	200000b8 	.word	0x200000b8

08005c54 <WM__GetNextIVR>:
 8005c54:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005c58:	4f5d      	ldr	r7, [pc, #372]	; (8005dd0 <WM__GetNextIVR+0x17c>)
 8005c5a:	683b      	ldr	r3, [r7, #0]
 8005c5c:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8005c60:	2800      	cmp	r0, #0
 8005c62:	f000 80b2 	beq.w	8005dca <WM__GetNextIVR+0x176>
 8005c66:	4b5b      	ldr	r3, [pc, #364]	; (8005dd4 <WM__GetNextIVR+0x180>)
 8005c68:	695a      	ldr	r2, [r3, #20]
 8005c6a:	2a01      	cmp	r2, #1
 8005c6c:	461c      	mov	r4, r3
 8005c6e:	dd03      	ble.n	8005c78 <WM__GetNextIVR+0x24>
 8005c70:	3a01      	subs	r2, #1
 8005c72:	615a      	str	r2, [r3, #20]
 8005c74:	2000      	movs	r0, #0
 8005c76:	e0a8      	b.n	8005dca <WM__GetNextIVR+0x176>
 8005c78:	f104 0608 	add.w	r6, r4, #8
 8005c7c:	691b      	ldr	r3, [r3, #16]
 8005c7e:	e896 0003 	ldmia.w	r6, {r0, r1}
 8005c82:	3301      	adds	r3, #1
 8005c84:	ad02      	add	r5, sp, #8
 8005c86:	6123      	str	r3, [r4, #16]
 8005c88:	e885 0003 	stmia.w	r5, {r0, r1}
 8005c8c:	b923      	cbnz	r3, 8005c98 <WM__GetNextIVR+0x44>
 8005c8e:	8823      	ldrh	r3, [r4, #0]
 8005c90:	f8ad 3008 	strh.w	r3, [sp, #8]
 8005c94:	8863      	ldrh	r3, [r4, #2]
 8005c96:	e011      	b.n	8005cbc <WM__GetNextIVR+0x68>
 8005c98:	89a3      	ldrh	r3, [r4, #12]
 8005c9a:	8962      	ldrh	r2, [r4, #10]
 8005c9c:	f8ad 200a 	strh.w	r2, [sp, #10]
 8005ca0:	3301      	adds	r3, #1
 8005ca2:	b29b      	uxth	r3, r3
 8005ca4:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8005ca8:	f8ad 3008 	strh.w	r3, [sp, #8]
 8005cac:	b21b      	sxth	r3, r3
 8005cae:	429a      	cmp	r2, r3
 8005cb0:	da06      	bge.n	8005cc0 <WM__GetNextIVR+0x6c>
 8005cb2:	8823      	ldrh	r3, [r4, #0]
 8005cb4:	f8ad 3008 	strh.w	r3, [sp, #8]
 8005cb8:	89e3      	ldrh	r3, [r4, #14]
 8005cba:	3301      	adds	r3, #1
 8005cbc:	f8ad 300a 	strh.w	r3, [sp, #10]
 8005cc0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8005cc4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8005cc8:	f8df 8108 	ldr.w	r8, [pc, #264]	; 8005dd4 <WM__GetNextIVR+0x180>
 8005ccc:	429a      	cmp	r2, r3
 8005cce:	dd04      	ble.n	8005cda <WM__GetNextIVR+0x86>
 8005cd0:	6963      	ldr	r3, [r4, #20]
 8005cd2:	3b01      	subs	r3, #1
 8005cd4:	2000      	movs	r0, #0
 8005cd6:	6163      	str	r3, [r4, #20]
 8005cd8:	e077      	b.n	8005dca <WM__GetNextIVR+0x176>
 8005cda:	683b      	ldr	r3, [r7, #0]
 8005cdc:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005cde:	f005 fbf7 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005ce2:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8005ce6:	f9b8 3000 	ldrsh.w	r3, [r8]
 8005cea:	9001      	str	r0, [sp, #4]
 8005cec:	429a      	cmp	r2, r3
 8005cee:	d11c      	bne.n	8005d2a <WM__GetNextIVR+0xd6>
 8005cf0:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8005cf4:	f8ad 300e 	strh.w	r3, [sp, #14]
 8005cf8:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8005cfc:	f8ad 300c 	strh.w	r3, [sp, #12]
 8005d00:	4b33      	ldr	r3, [pc, #204]	; (8005dd0 <WM__GetNextIVR+0x17c>)
 8005d02:	681b      	ldr	r3, [r3, #0]
 8005d04:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8005d06:	b15a      	cbz	r2, 8005d20 <WM__GetNextIVR+0xcc>
 8005d08:	4610      	mov	r0, r2
 8005d0a:	f005 fbd7 	bl	800b4bc <GUI_ALLOC_h2p>
 8005d0e:	4680      	mov	r8, r0
 8005d10:	2200      	movs	r2, #0
 8005d12:	6a00      	ldr	r0, [r0, #32]
 8005d14:	4629      	mov	r1, r5
 8005d16:	f7ff f973 	bl	8005000 <_Findy1>
 8005d1a:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8005d1e:	e7f2      	b.n	8005d06 <WM__GetNextIVR+0xb2>
 8005d20:	9b01      	ldr	r3, [sp, #4]
 8005d22:	4629      	mov	r1, r5
 8005d24:	69d8      	ldr	r0, [r3, #28]
 8005d26:	f7ff f96b 	bl	8005000 <_Findy1>
 8005d2a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8005d2e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8005d32:	683b      	ldr	r3, [r7, #0]
 8005d34:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8005d36:	b16a      	cbz	r2, 8005d54 <WM__GetNextIVR+0x100>
 8005d38:	4610      	mov	r0, r2
 8005d3a:	f005 fbbf 	bl	800b4bc <GUI_ALLOC_h2p>
 8005d3e:	4629      	mov	r1, r5
 8005d40:	4680      	mov	r8, r0
 8005d42:	2200      	movs	r2, #0
 8005d44:	6a00      	ldr	r0, [r0, #32]
 8005d46:	f7ff f9b1 	bl	80050ac <_Findx0>
 8005d4a:	2800      	cmp	r0, #0
 8005d4c:	d1ed      	bne.n	8005d2a <WM__GetNextIVR+0xd6>
 8005d4e:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8005d52:	e7f0      	b.n	8005d36 <WM__GetNextIVR+0xe2>
 8005d54:	9b01      	ldr	r3, [sp, #4]
 8005d56:	4629      	mov	r1, r5
 8005d58:	69d8      	ldr	r0, [r3, #28]
 8005d5a:	f7ff f9a7 	bl	80050ac <_Findx0>
 8005d5e:	2800      	cmp	r0, #0
 8005d60:	d1e3      	bne.n	8005d2a <WM__GetNextIVR+0xd6>
 8005d62:	88a3      	ldrh	r3, [r4, #4]
 8005d64:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8005d68:	f8ad 300c 	strh.w	r3, [sp, #12]
 8005d6c:	b21b      	sxth	r3, r3
 8005d6e:	429a      	cmp	r2, r3
 8005d70:	dd07      	ble.n	8005d82 <WM__GetNextIVR+0x12e>
 8005d72:	e895 0003 	ldmia.w	r5, {r0, r1}
 8005d76:	e886 0003 	stmia.w	r6, {r0, r1}
 8005d7a:	a801      	add	r0, sp, #4
 8005d7c:	f005 fbb6 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005d80:	e797      	b.n	8005cb2 <WM__GetNextIVR+0x5e>
 8005d82:	683b      	ldr	r3, [r7, #0]
 8005d84:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8005d86:	b152      	cbz	r2, 8005d9e <WM__GetNextIVR+0x14a>
 8005d88:	4610      	mov	r0, r2
 8005d8a:	f005 fb97 	bl	800b4bc <GUI_ALLOC_h2p>
 8005d8e:	4607      	mov	r7, r0
 8005d90:	2200      	movs	r2, #0
 8005d92:	6a00      	ldr	r0, [r0, #32]
 8005d94:	4629      	mov	r1, r5
 8005d96:	f7ff f9cd 	bl	8005134 <_Findx1>
 8005d9a:	69ba      	ldr	r2, [r7, #24]
 8005d9c:	e7f3      	b.n	8005d86 <WM__GetNextIVR+0x132>
 8005d9e:	af04      	add	r7, sp, #16
 8005da0:	4629      	mov	r1, r5
 8005da2:	f857 3d0c 	ldr.w	r3, [r7, #-12]!
 8005da6:	69d8      	ldr	r0, [r3, #28]
 8005da8:	f7ff f9c4 	bl	8005134 <_Findx1>
 8005dac:	4638      	mov	r0, r7
 8005dae:	f005 fb9d 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005db2:	6923      	ldr	r3, [r4, #16]
 8005db4:	f644 6220 	movw	r2, #20000	; 0x4e20
 8005db8:	4293      	cmp	r3, r2
 8005dba:	dc89      	bgt.n	8005cd0 <WM__GetNextIVR+0x7c>
 8005dbc:	e895 0003 	ldmia.w	r5, {r0, r1}
 8005dc0:	e886 0003 	stmia.w	r6, {r0, r1}
 8005dc4:	f7ff fbd6 	bl	8005574 <WM__ActivateClipRect>
 8005dc8:	2001      	movs	r0, #1
 8005dca:	b004      	add	sp, #16
 8005dcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005dd0:	200000b8 	.word	0x200000b8
 8005dd4:	20002ad4 	.word	0x20002ad4

08005dd8 <WM__InitIVRSearch>:
 8005dd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005ddc:	4f39      	ldr	r7, [pc, #228]	; (8005ec4 <WM__InitIVRSearch+0xec>)
 8005dde:	683b      	ldr	r3, [r7, #0]
 8005de0:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 8005de4:	b086      	sub	sp, #24
 8005de6:	4606      	mov	r6, r0
 8005de8:	b912      	cbnz	r2, 8005df0 <WM__InitIVRSearch+0x18>
 8005dea:	f7ff fbc3 	bl	8005574 <WM__ActivateClipRect>
 8005dee:	e064      	b.n	8005eba <WM__InitIVRSearch+0xe2>
 8005df0:	4d35      	ldr	r5, [pc, #212]	; (8005ec8 <WM__InitIVRSearch+0xf0>)
 8005df2:	696a      	ldr	r2, [r5, #20]
 8005df4:	3201      	adds	r2, #1
 8005df6:	2a01      	cmp	r2, #1
 8005df8:	616a      	str	r2, [r5, #20]
 8005dfa:	462c      	mov	r4, r5
 8005dfc:	dc5d      	bgt.n	8005eba <WM__InitIVRSearch+0xe2>
 8005dfe:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005e00:	f005 fb66 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005e04:	f04f 32ff 	mov.w	r2, #4294967295
 8005e08:	612a      	str	r2, [r5, #16]
 8005e0a:	4a30      	ldr	r2, [pc, #192]	; (8005ecc <WM__InitIVRSearch+0xf4>)
 8005e0c:	9000      	str	r0, [sp, #0]
 8005e0e:	7812      	ldrb	r2, [r2, #0]
 8005e10:	b12a      	cbz	r2, 8005e1e <WM__InitIVRSearch+0x46>
 8005e12:	f100 0308 	add.w	r3, r0, #8
 8005e16:	aa02      	add	r2, sp, #8
 8005e18:	e893 0003 	ldmia.w	r3, {r0, r1}
 8005e1c:	e005      	b.n	8005e2a <WM__InitIVRSearch+0x52>
 8005e1e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005e20:	f012 0802 	ands.w	r8, r2, #2
 8005e24:	d00a      	beq.n	8005e3c <WM__InitIVRSearch+0x64>
 8005e26:	c803      	ldmia	r0, {r0, r1}
 8005e28:	aa02      	add	r2, sp, #8
 8005e2a:	e882 0003 	stmia.w	r2, {r0, r1}
 8005e2e:	ad02      	add	r5, sp, #8
 8005e30:	b166      	cbz	r6, 8005e4c <WM__InitIVRSearch+0x74>
 8005e32:	4628      	mov	r0, r5
 8005e34:	4631      	mov	r1, r6
 8005e36:	f002 fff8 	bl	8008e2a <GUI__IntersectRect>
 8005e3a:	e007      	b.n	8005e4c <WM__InitIVRSearch+0x74>
 8005e3c:	696b      	ldr	r3, [r5, #20]
 8005e3e:	4668      	mov	r0, sp
 8005e40:	3b01      	subs	r3, #1
 8005e42:	616b      	str	r3, [r5, #20]
 8005e44:	f005 fb52 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005e48:	4640      	mov	r0, r8
 8005e4a:	e037      	b.n	8005ebc <WM__InitIVRSearch+0xe4>
 8005e4c:	683b      	ldr	r3, [r7, #0]
 8005e4e:	4e20      	ldr	r6, [pc, #128]	; (8005ed0 <WM__InitIVRSearch+0xf8>)
 8005e50:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005e52:	b1c2      	cbz	r2, 8005e86 <WM__InitIVRSearch+0xae>
 8005e54:	9b00      	ldr	r3, [sp, #0]
 8005e56:	6810      	ldr	r0, [r2, #0]
 8005e58:	6851      	ldr	r1, [r2, #4]
 8005e5a:	9301      	str	r3, [sp, #4]
 8005e5c:	ab04      	add	r3, sp, #16
 8005e5e:	c303      	stmia	r3!, {r0, r1}
 8005e60:	6833      	ldr	r3, [r6, #0]
 8005e62:	b133      	cbz	r3, 8005e72 <WM__InitIVRSearch+0x9a>
 8005e64:	a801      	add	r0, sp, #4
 8005e66:	f005 fb41 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005e6a:	6830      	ldr	r0, [r6, #0]
 8005e6c:	f005 fb30 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005e70:	9001      	str	r0, [sp, #4]
 8005e72:	9801      	ldr	r0, [sp, #4]
 8005e74:	a904      	add	r1, sp, #16
 8005e76:	f7ff fb4d 	bl	8005514 <WM__Client2Screen>
 8005e7a:	4628      	mov	r0, r5
 8005e7c:	a904      	add	r1, sp, #16
 8005e7e:	f002 ffd4 	bl	8008e2a <GUI__IntersectRect>
 8005e82:	a801      	add	r0, sp, #4
 8005e84:	e000      	b.n	8005e88 <WM__InitIVRSearch+0xb0>
 8005e86:	4668      	mov	r0, sp
 8005e88:	f005 fb30 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005e8c:	6831      	ldr	r1, [r6, #0]
 8005e8e:	b119      	cbz	r1, 8005e98 <WM__InitIVRSearch+0xc0>
 8005e90:	4628      	mov	r0, r5
 8005e92:	f7ff faa1 	bl	80053d8 <WM__ClipAtParentBorders>
 8005e96:	b128      	cbz	r0, 8005ea4 <WM__InitIVRSearch+0xcc>
 8005e98:	683b      	ldr	r3, [r7, #0]
 8005e9a:	4628      	mov	r0, r5
 8005e9c:	6c99      	ldr	r1, [r3, #72]	; 0x48
 8005e9e:	f7ff fa9b 	bl	80053d8 <WM__ClipAtParentBorders>
 8005ea2:	b918      	cbnz	r0, 8005eac <WM__InitIVRSearch+0xd4>
 8005ea4:	6963      	ldr	r3, [r4, #20]
 8005ea6:	3b01      	subs	r3, #1
 8005ea8:	6163      	str	r3, [r4, #20]
 8005eaa:	e007      	b.n	8005ebc <WM__InitIVRSearch+0xe4>
 8005eac:	e895 0003 	ldmia.w	r5, {r0, r1}
 8005eb0:	e884 0003 	stmia.w	r4, {r0, r1}
 8005eb4:	f7ff fece 	bl	8005c54 <WM__GetNextIVR>
 8005eb8:	e000      	b.n	8005ebc <WM__InitIVRSearch+0xe4>
 8005eba:	2001      	movs	r0, #1
 8005ebc:	b006      	add	sp, #24
 8005ebe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005ec2:	bf00      	nop
 8005ec4:	200000b8 	.word	0x200000b8
 8005ec8:	20002ad4 	.word	0x20002ad4
 8005ecc:	20002cac 	.word	0x20002cac
 8005ed0:	20002c7c 	.word	0x20002c7c

08005ed4 <WM_SetDefault>:
 8005ed4:	b508      	push	{r3, lr}
 8005ed6:	f004 fedf 	bl	800ac98 <GL_SetDefault>
 8005eda:	4b02      	ldr	r3, [pc, #8]	; (8005ee4 <WM_SetDefault+0x10>)
 8005edc:	681b      	ldr	r3, [r3, #0]
 8005ede:	2200      	movs	r2, #0
 8005ee0:	645a      	str	r2, [r3, #68]	; 0x44
 8005ee2:	bd08      	pop	{r3, pc}
 8005ee4:	200000b8 	.word	0x200000b8

08005ee8 <WM__Paint1>:
 8005ee8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005eea:	b089      	sub	sp, #36	; 0x24
 8005eec:	4604      	mov	r4, r0
 8005eee:	f005 faef 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005ef2:	6907      	ldr	r7, [r0, #16]
 8005ef4:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8005ef6:	9001      	str	r0, [sp, #4]
 8005ef8:	3008      	adds	r0, #8
 8005efa:	c803      	ldmia	r0, {r0, r1}
 8005efc:	ad02      	add	r5, sp, #8
 8005efe:	e885 0003 	stmia.w	r5, {r0, r1}
 8005f02:	a801      	add	r0, sp, #4
 8005f04:	f005 faf2 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005f08:	2f00      	cmp	r7, #0
 8005f0a:	d031      	beq.n	8005f70 <WM__Paint1+0x88>
 8005f0c:	07b3      	lsls	r3, r6, #30
 8005f0e:	d52f      	bpl.n	8005f70 <WM__Paint1+0x88>
 8005f10:	4620      	mov	r0, r4
 8005f12:	212e      	movs	r1, #46	; 0x2e
 8005f14:	f7fe fe9b 	bl	8004c4e <WM_SendMessageNoPara>
 8005f18:	4b16      	ldr	r3, [pc, #88]	; (8005f74 <WM__Paint1+0x8c>)
 8005f1a:	781a      	ldrb	r2, [r3, #0]
 8005f1c:	f416 5f80 	tst.w	r6, #4096	; 0x1000
 8005f20:	f102 0201 	add.w	r2, r2, #1
 8005f24:	701a      	strb	r2, [r3, #0]
 8005f26:	461e      	mov	r6, r3
 8005f28:	d00a      	beq.n	8005f40 <WM__Paint1+0x58>
 8005f2a:	230f      	movs	r3, #15
 8005f2c:	9405      	str	r4, [sp, #20]
 8005f2e:	9304      	str	r3, [sp, #16]
 8005f30:	9507      	str	r5, [sp, #28]
 8005f32:	f7ff ffcf 	bl	8005ed4 <WM_SetDefault>
 8005f36:	4620      	mov	r0, r4
 8005f38:	a904      	add	r1, sp, #16
 8005f3a:	f7fe f96d 	bl	8004218 <WM__SendMessage>
 8005f3e:	e010      	b.n	8005f62 <WM__Paint1+0x7a>
 8005f40:	4628      	mov	r0, r5
 8005f42:	f7ff ff49 	bl	8005dd8 <WM__InitIVRSearch>
 8005f46:	b160      	cbz	r0, 8005f62 <WM__Paint1+0x7a>
 8005f48:	230f      	movs	r3, #15
 8005f4a:	9304      	str	r3, [sp, #16]
 8005f4c:	9405      	str	r4, [sp, #20]
 8005f4e:	9507      	str	r5, [sp, #28]
 8005f50:	f7ff ffc0 	bl	8005ed4 <WM_SetDefault>
 8005f54:	4620      	mov	r0, r4
 8005f56:	a904      	add	r1, sp, #16
 8005f58:	f7fe f95e 	bl	8004218 <WM__SendMessage>
 8005f5c:	f7ff fe7a 	bl	8005c54 <WM__GetNextIVR>
 8005f60:	e7f1      	b.n	8005f46 <WM__Paint1+0x5e>
 8005f62:	7833      	ldrb	r3, [r6, #0]
 8005f64:	4620      	mov	r0, r4
 8005f66:	3b01      	subs	r3, #1
 8005f68:	212f      	movs	r1, #47	; 0x2f
 8005f6a:	7033      	strb	r3, [r6, #0]
 8005f6c:	f7fe fe6f 	bl	8004c4e <WM_SendMessageNoPara>
 8005f70:	b009      	add	sp, #36	; 0x24
 8005f72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005f74:	20002cac 	.word	0x20002cac

08005f78 <WM__Paint>:
 8005f78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005f7a:	b089      	sub	sp, #36	; 0x24
 8005f7c:	ac06      	add	r4, sp, #24
 8005f7e:	9003      	str	r0, [sp, #12]
 8005f80:	f005 faa6 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005f84:	f100 0208 	add.w	r2, r0, #8
 8005f88:	4603      	mov	r3, r0
 8005f8a:	9005      	str	r0, [sp, #20]
 8005f8c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8005f90:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 8005f92:	699e      	ldr	r6, [r3, #24]
 8005f94:	691f      	ldr	r7, [r3, #16]
 8005f96:	e884 0003 	stmia.w	r4, {r0, r1}
 8005f9a:	a805      	add	r0, sp, #20
 8005f9c:	f005 faa6 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8005fa0:	f244 0320 	movw	r3, #16416	; 0x4020
 8005fa4:	402b      	ands	r3, r5
 8005fa6:	2b00      	cmp	r3, #0
 8005fa8:	d034      	beq.n	8006014 <WM__Paint+0x9c>
 8005faa:	b1bf      	cbz	r7, 8005fdc <WM__Paint+0x64>
 8005fac:	4620      	mov	r0, r4
 8005fae:	9903      	ldr	r1, [sp, #12]
 8005fb0:	f7ff fa12 	bl	80053d8 <WM__ClipAtParentBorders>
 8005fb4:	b190      	cbz	r0, 8005fdc <WM__Paint+0x64>
 8005fb6:	9803      	ldr	r0, [sp, #12]
 8005fb8:	f7ff fcb0 	bl	800591c <WM_SelectWindow>
 8005fbc:	0769      	lsls	r1, r5, #29
 8005fbe:	d50f      	bpl.n	8005fe0 <WM__Paint+0x68>
 8005fc0:	b126      	cbz	r6, 8005fcc <WM__Paint+0x54>
 8005fc2:	f005 0501 	and.w	r5, r5, #1
 8005fc6:	f085 0501 	eor.w	r5, r5, #1
 8005fca:	e000      	b.n	8005fce <WM__Paint+0x56>
 8005fcc:	2501      	movs	r5, #1
 8005fce:	9500      	str	r5, [sp, #0]
 8005fd0:	4620      	mov	r0, r4
 8005fd2:	4912      	ldr	r1, [pc, #72]	; (800601c <WM__Paint+0xa4>)
 8005fd4:	aa03      	add	r2, sp, #12
 8005fd6:	2300      	movs	r3, #0
 8005fd8:	f000 faaa 	bl	8006530 <GUI_MEMDEV_Draw>
 8005fdc:	2400      	movs	r4, #0
 8005fde:	e003      	b.n	8005fe8 <WM__Paint+0x70>
 8005fe0:	9803      	ldr	r0, [sp, #12]
 8005fe2:	f7ff f989 	bl	80052f8 <WM__PaintWinAndOverlays>
 8005fe6:	2401      	movs	r4, #1
 8005fe8:	9803      	ldr	r0, [sp, #12]
 8005fea:	f005 fa71 	bl	800b4d0 <GUI_ALLOC_LockH>
 8005fee:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005ff0:	9005      	str	r0, [sp, #20]
 8005ff2:	f422 4380 	bic.w	r3, r2, #16384	; 0x4000
 8005ff6:	f023 0320 	bic.w	r3, r3, #32
 8005ffa:	0492      	lsls	r2, r2, #18
 8005ffc:	bf48      	it	mi
 8005ffe:	f043 0304 	orrmi.w	r3, r3, #4
 8006002:	6283      	str	r3, [r0, #40]	; 0x28
 8006004:	a805      	add	r0, sp, #20
 8006006:	f005 fa71 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800600a:	4b05      	ldr	r3, [pc, #20]	; (8006020 <WM__Paint+0xa8>)
 800600c:	881a      	ldrh	r2, [r3, #0]
 800600e:	3a01      	subs	r2, #1
 8006010:	801a      	strh	r2, [r3, #0]
 8006012:	e000      	b.n	8006016 <WM__Paint+0x9e>
 8006014:	461c      	mov	r4, r3
 8006016:	4620      	mov	r0, r4
 8006018:	b009      	add	sp, #36	; 0x24
 800601a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800601c:	08005371 	.word	0x08005371
 8006020:	20002c98 	.word	0x20002c98

08006024 <_Exec1Draw>:
 8006024:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006028:	4b1a      	ldr	r3, [pc, #104]	; (8006094 <_Exec1Draw+0x70>)
 800602a:	681a      	ldr	r2, [r3, #0]
 800602c:	f892 0054 	ldrb.w	r0, [r2, #84]	; 0x54
 8006030:	b09c      	sub	sp, #112	; 0x70
 8006032:	461d      	mov	r5, r3
 8006034:	2800      	cmp	r0, #0
 8006036:	d02a      	beq.n	800608e <_Exec1Draw+0x6a>
 8006038:	4b17      	ldr	r3, [pc, #92]	; (8006098 <_Exec1Draw+0x74>)
 800603a:	8818      	ldrh	r0, [r3, #0]
 800603c:	b338      	cbz	r0, 800608e <_Exec1Draw+0x6a>
 800603e:	4a17      	ldr	r2, [pc, #92]	; (800609c <_Exec1Draw+0x78>)
 8006040:	6814      	ldr	r4, [r2, #0]
 8006042:	4616      	mov	r6, r2
 8006044:	b90c      	cbnz	r4, 800604a <_Exec1Draw+0x26>
 8006046:	4b16      	ldr	r3, [pc, #88]	; (80060a0 <_Exec1Draw+0x7c>)
 8006048:	681c      	ldr	r4, [r3, #0]
 800604a:	4668      	mov	r0, sp
 800604c:	f004 fdc0 	bl	800abd0 <GUI_SaveContext_W>
 8006050:	682b      	ldr	r3, [r5, #0]
 8006052:	6b1f      	ldr	r7, [r3, #48]	; 0x30
 8006054:	6b5d      	ldr	r5, [r3, #52]	; 0x34
 8006056:	b924      	cbnz	r4, 8006062 <_Exec1Draw+0x3e>
 8006058:	2400      	movs	r4, #0
 800605a:	e00d      	b.n	8006078 <_Exec1Draw+0x54>
 800605c:	f1b8 0f00 	cmp.w	r8, #0
 8006060:	d10a      	bne.n	8006078 <_Exec1Draw+0x54>
 8006062:	4620      	mov	r0, r4
 8006064:	f7ff ff88 	bl	8005f78 <WM__Paint>
 8006068:	4680      	mov	r8, r0
 800606a:	4620      	mov	r0, r4
 800606c:	f005 fa26 	bl	800b4bc <GUI_ALLOC_h2p>
 8006070:	6944      	ldr	r4, [r0, #20]
 8006072:	2c00      	cmp	r4, #0
 8006074:	d1f2      	bne.n	800605c <_Exec1Draw+0x38>
 8006076:	e7ef      	b.n	8006058 <_Exec1Draw+0x34>
 8006078:	4638      	mov	r0, r7
 800607a:	6034      	str	r4, [r6, #0]
 800607c:	f004 fdc7 	bl	800ac0e <GUI_SetColor>
 8006080:	4628      	mov	r0, r5
 8006082:	f004 fdc2 	bl	800ac0a <GUI_SetBkColor>
 8006086:	4668      	mov	r0, sp
 8006088:	f004 fdac 	bl	800abe4 <GUI_RestoreContext>
 800608c:	2001      	movs	r0, #1
 800608e:	b01c      	add	sp, #112	; 0x70
 8006090:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006094:	200000b8 	.word	0x200000b8
 8006098:	20002c98 	.word	0x20002c98
 800609c:	20002aec 	.word	0x20002aec
 80060a0:	20002c9c 	.word	0x20002c9c

080060a4 <WM__DeleteSecure>:
 80060a4:	b508      	push	{r3, lr}
 80060a6:	f005 fa09 	bl	800b4bc <GUI_ALLOC_h2p>
 80060aa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80060ac:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80060b0:	6283      	str	r3, [r0, #40]	; 0x28
 80060b2:	4b02      	ldr	r3, [pc, #8]	; (80060bc <WM__DeleteSecure+0x18>)
 80060b4:	2201      	movs	r2, #1
 80060b6:	601a      	str	r2, [r3, #0]
 80060b8:	bd08      	pop	{r3, pc}
 80060ba:	bf00      	nop
 80060bc:	20002ad0 	.word	0x20002ad0

080060c0 <WM_Exec>:
 80060c0:	4b18      	ldr	r3, [pc, #96]	; (8006124 <WM_Exec+0x64>)
 80060c2:	681b      	ldr	r3, [r3, #0]
 80060c4:	b570      	push	{r4, r5, r6, lr}
 80060c6:	b103      	cbz	r3, 80060ca <WM_Exec+0xa>
 80060c8:	4798      	blx	r3
 80060ca:	2500      	movs	r5, #0
 80060cc:	f7ff fd7a 	bl	8005bc4 <_Exec1Input>
 80060d0:	b108      	cbz	r0, 80060d6 <WM_Exec+0x16>
 80060d2:	2501      	movs	r5, #1
 80060d4:	e7fa      	b.n	80060cc <WM_Exec+0xc>
 80060d6:	4b14      	ldr	r3, [pc, #80]	; (8006128 <WM_Exec+0x68>)
 80060d8:	681b      	ldr	r3, [r3, #0]
 80060da:	f893 4054 	ldrb.w	r4, [r3, #84]	; 0x54
 80060de:	b144      	cbz	r4, 80060f2 <WM_Exec+0x32>
 80060e0:	4b12      	ldr	r3, [pc, #72]	; (800612c <WM_Exec+0x6c>)
 80060e2:	881c      	ldrh	r4, [r3, #0]
 80060e4:	b12c      	cbz	r4, 80060f2 <WM_Exec+0x32>
 80060e6:	4b12      	ldr	r3, [pc, #72]	; (8006130 <WM_Exec+0x70>)
 80060e8:	681b      	ldr	r3, [r3, #0]
 80060ea:	b1a3      	cbz	r3, 8006116 <WM_Exec+0x56>
 80060ec:	681b      	ldr	r3, [r3, #0]
 80060ee:	4798      	blx	r3
 80060f0:	2401      	movs	r4, #1
 80060f2:	f7ff ff97 	bl	8006024 <_Exec1Draw>
 80060f6:	4606      	mov	r6, r0
 80060f8:	b108      	cbz	r0, 80060fe <WM_Exec+0x3e>
 80060fa:	2501      	movs	r5, #1
 80060fc:	e7f9      	b.n	80060f2 <WM_Exec+0x32>
 80060fe:	b174      	cbz	r4, 800611e <WM_Exec+0x5e>
 8006100:	4b0b      	ldr	r3, [pc, #44]	; (8006130 <WM_Exec+0x70>)
 8006102:	681b      	ldr	r3, [r3, #0]
 8006104:	b123      	cbz	r3, 8006110 <WM_Exec+0x50>
 8006106:	685b      	ldr	r3, [r3, #4]
 8006108:	4798      	blx	r3
 800610a:	4b0a      	ldr	r3, [pc, #40]	; (8006134 <WM_Exec+0x74>)
 800610c:	601e      	str	r6, [r3, #0]
 800610e:	e006      	b.n	800611e <WM_Exec+0x5e>
 8006110:	f003 f810 	bl	8009134 <GUI__ManageCache>
 8006114:	e003      	b.n	800611e <WM_Exec+0x5e>
 8006116:	2001      	movs	r0, #1
 8006118:	f003 f80c 	bl	8009134 <GUI__ManageCache>
 800611c:	e7e8      	b.n	80060f0 <WM_Exec+0x30>
 800611e:	4628      	mov	r0, r5
 8006120:	bd70      	pop	{r4, r5, r6, pc}
 8006122:	bf00      	nop
 8006124:	20002c8c 	.word	0x20002c8c
 8006128:	200000b8 	.word	0x200000b8
 800612c:	20002c98 	.word	0x20002c98
 8006130:	20002cc0 	.word	0x20002cc0
 8006134:	20002ca8 	.word	0x20002ca8

08006138 <WM_Activate>:
 8006138:	4b02      	ldr	r3, [pc, #8]	; (8006144 <WM_Activate+0xc>)
 800613a:	681b      	ldr	r3, [r3, #0]
 800613c:	2201      	movs	r2, #1
 800613e:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8006142:	4770      	bx	lr
 8006144:	200000b8 	.word	0x200000b8

08006148 <WM_Deactivate>:
 8006148:	4b03      	ldr	r3, [pc, #12]	; (8006158 <WM_Deactivate+0x10>)
 800614a:	681b      	ldr	r3, [r3, #0]
 800614c:	2200      	movs	r2, #0
 800614e:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8006152:	f002 bd7d 	b.w	8008c50 <LCD_SetClipRectMax>
 8006156:	bf00      	nop
 8006158:	200000b8 	.word	0x200000b8

0800615c <WM_DefaultProc>:
 800615c:	b510      	push	{r4, lr}
 800615e:	4604      	mov	r4, r0
 8006160:	6840      	ldr	r0, [r0, #4]
 8006162:	6823      	ldr	r3, [r4, #0]
 8006164:	68e1      	ldr	r1, [r4, #12]
 8006166:	2b17      	cmp	r3, #23
 8006168:	d00f      	beq.n	800618a <WM_DefaultProc+0x2e>
 800616a:	dc06      	bgt.n	800617a <WM_DefaultProc+0x1e>
 800616c:	2b0e      	cmp	r3, #14
 800616e:	d00e      	beq.n	800618e <WM_DefaultProc+0x32>
 8006170:	2b14      	cmp	r3, #20
 8006172:	d114      	bne.n	800619e <WM_DefaultProc+0x42>
 8006174:	f7fe f904 	bl	8004380 <WM__GetClientRectEx>
 8006178:	e011      	b.n	800619e <WM_DefaultProc+0x42>
 800617a:	2b22      	cmp	r3, #34	; 0x22
 800617c:	d00c      	beq.n	8006198 <WM_DefaultProc+0x3c>
 800617e:	2b28      	cmp	r3, #40	; 0x28
 8006180:	d10d      	bne.n	800619e <WM_DefaultProc+0x42>
 8006182:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006186:	f7ff bbbb 	b.w	8005900 <WM_InvalidateWindow>
 800618a:	60e0      	str	r0, [r4, #12]
 800618c:	bd10      	pop	{r4, pc}
 800618e:	4621      	mov	r1, r4
 8006190:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006194:	f7fe bd5d 	b.w	8004c52 <WM_SendToParent>
 8006198:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800619c:	e000      	b.n	80061a0 <WM_DefaultProc+0x44>
 800619e:	2300      	movs	r3, #0
 80061a0:	60e3      	str	r3, [r4, #12]
 80061a2:	bd10      	pop	{r4, pc}

080061a4 <_cbBackWin>:
 80061a4:	6803      	ldr	r3, [r0, #0]
 80061a6:	2b0e      	cmp	r3, #14
 80061a8:	b510      	push	{r4, lr}
 80061aa:	4604      	mov	r4, r0
 80061ac:	d002      	beq.n	80061b4 <_cbBackWin+0x10>
 80061ae:	2b0f      	cmp	r3, #15
 80061b0:	d009      	beq.n	80061c6 <_cbBackWin+0x22>
 80061b2:	e020      	b.n	80061f6 <_cbBackWin+0x52>
 80061b4:	68c3      	ldr	r3, [r0, #12]
 80061b6:	685a      	ldr	r2, [r3, #4]
 80061b8:	2a01      	cmp	r2, #1
 80061ba:	d121      	bne.n	8006200 <_cbBackWin+0x5c>
 80061bc:	6818      	ldr	r0, [r3, #0]
 80061be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80061c2:	f003 bb89 	b.w	80098d8 <GUI_StoreKey>
 80061c6:	4a0f      	ldr	r2, [pc, #60]	; (8006204 <_cbBackWin+0x60>)
 80061c8:	6843      	ldr	r3, [r0, #4]
 80061ca:	6811      	ldr	r1, [r2, #0]
 80061cc:	428b      	cmp	r3, r1
 80061ce:	d006      	beq.n	80061de <_cbBackWin+0x3a>
 80061d0:	6852      	ldr	r2, [r2, #4]
 80061d2:	4293      	cmp	r3, r2
 80061d4:	bf14      	ite	ne
 80061d6:	f04f 33ff 	movne.w	r3, #4294967295
 80061da:	2301      	moveq	r3, #1
 80061dc:	e000      	b.n	80061e0 <_cbBackWin+0x3c>
 80061de:	2300      	movs	r3, #0
 80061e0:	4a09      	ldr	r2, [pc, #36]	; (8006208 <_cbBackWin+0x64>)
 80061e2:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80061e6:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 80061ea:	4298      	cmp	r0, r3
 80061ec:	d003      	beq.n	80061f6 <_cbBackWin+0x52>
 80061ee:	f004 fd0c 	bl	800ac0a <GUI_SetBkColor>
 80061f2:	f004 faf9 	bl	800a7e8 <GUI_Clear>
 80061f6:	4620      	mov	r0, r4
 80061f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80061fc:	f7ff bfae 	b.w	800615c <WM_DefaultProc>
 8006200:	bd10      	pop	{r4, pc}
 8006202:	bf00      	nop
 8006204:	20002c80 	.word	0x20002c80
 8006208:	20002cb4 	.word	0x20002cb4

0800620c <WM_Init>:
 800620c:	b530      	push	{r4, r5, lr}
 800620e:	4b2b      	ldr	r3, [pc, #172]	; (80062bc <WM_Init+0xb0>)
 8006210:	7818      	ldrb	r0, [r3, #0]
 8006212:	b085      	sub	sp, #20
 8006214:	461d      	mov	r5, r3
 8006216:	2800      	cmp	r0, #0
 8006218:	d14d      	bne.n	80062b6 <WM_Init+0xaa>
 800621a:	4b29      	ldr	r3, [pc, #164]	; (80062c0 <WM_Init+0xb4>)
 800621c:	6018      	str	r0, [r3, #0]
 800621e:	4b29      	ldr	r3, [pc, #164]	; (80062c4 <WM_Init+0xb8>)
 8006220:	6018      	str	r0, [r3, #0]
 8006222:	4b29      	ldr	r3, [pc, #164]	; (80062c8 <WM_Init+0xbc>)
 8006224:	681b      	ldr	r3, [r3, #0]
 8006226:	6458      	str	r0, [r3, #68]	; 0x44
 8006228:	4b28      	ldr	r3, [pc, #160]	; (80062cc <WM_Init+0xc0>)
 800622a:	8018      	strh	r0, [r3, #0]
 800622c:	4b28      	ldr	r3, [pc, #160]	; (80062d0 <WM_Init+0xc4>)
 800622e:	4604      	mov	r4, r0
 8006230:	8018      	strh	r0, [r3, #0]
 8006232:	4620      	mov	r0, r4
 8006234:	f004 f98e 	bl	800a554 <GUI_DEVICE__GetpDriver>
 8006238:	b1c0      	cbz	r0, 800626c <WM_Init+0x60>
 800623a:	f04f 32ff 	mov.w	r2, #4294967295
 800623e:	2302      	movs	r3, #2
 8006240:	e88d 000c 	stmia.w	sp, {r2, r3}
 8006244:	2000      	movs	r0, #0
 8006246:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800624a:	4b22      	ldr	r3, [pc, #136]	; (80062d4 <WM_Init+0xc8>)
 800624c:	9302      	str	r3, [sp, #8]
 800624e:	9003      	str	r0, [sp, #12]
 8006250:	4613      	mov	r3, r2
 8006252:	4601      	mov	r1, r0
 8006254:	f7ff fb82 	bl	800595c <WM_CreateWindowAsChild>
 8006258:	4b1f      	ldr	r3, [pc, #124]	; (80062d8 <WM_Init+0xcc>)
 800625a:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800625e:	4b1f      	ldr	r3, [pc, #124]	; (80062dc <WM_Init+0xd0>)
 8006260:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8006264:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8006268:	f7ff fb4a 	bl	8005900 <WM_InvalidateWindow>
 800626c:	3401      	adds	r4, #1
 800626e:	2c02      	cmp	r4, #2
 8006270:	d1df      	bne.n	8006232 <WM_Init+0x26>
 8006272:	481b      	ldr	r0, [pc, #108]	; (80062e0 <WM_Init+0xd4>)
 8006274:	f7fe f87c 	bl	8004370 <WM__AddCriticalHandle>
 8006278:	481a      	ldr	r0, [pc, #104]	; (80062e4 <WM_Init+0xd8>)
 800627a:	f7fe f879 	bl	8004370 <WM__AddCriticalHandle>
 800627e:	481a      	ldr	r0, [pc, #104]	; (80062e8 <WM_Init+0xdc>)
 8006280:	f7fe f876 	bl	8004370 <WM__AddCriticalHandle>
 8006284:	4819      	ldr	r0, [pc, #100]	; (80062ec <WM_Init+0xe0>)
 8006286:	f7fe f873 	bl	8004370 <WM__AddCriticalHandle>
 800628a:	4819      	ldr	r0, [pc, #100]	; (80062f0 <WM_Init+0xe4>)
 800628c:	f7fe f870 	bl	8004370 <WM__AddCriticalHandle>
 8006290:	4818      	ldr	r0, [pc, #96]	; (80062f4 <WM_Init+0xe8>)
 8006292:	f7fe f86d 	bl	8004370 <WM__AddCriticalHandle>
 8006296:	4b10      	ldr	r3, [pc, #64]	; (80062d8 <WM_Init+0xcc>)
 8006298:	6818      	ldr	r0, [r3, #0]
 800629a:	f7ff fb3f 	bl	800591c <WM_SelectWindow>
 800629e:	f7ff ff4b 	bl	8006138 <WM_Activate>
 80062a2:	2301      	movs	r3, #1
 80062a4:	702b      	strb	r3, [r5, #0]
 80062a6:	4814      	ldr	r0, [pc, #80]	; (80062f8 <WM_Init+0xec>)
 80062a8:	4b14      	ldr	r3, [pc, #80]	; (80062fc <WM_Init+0xf0>)
 80062aa:	6003      	str	r3, [r0, #0]
 80062ac:	b005      	add	sp, #20
 80062ae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80062b2:	f004 baa9 	b.w	800a808 <GUI__RegisterExit>
 80062b6:	b005      	add	sp, #20
 80062b8:	bd30      	pop	{r4, r5, pc}
 80062ba:	bf00      	nop
 80062bc:	20002af0 	.word	0x20002af0
 80062c0:	20002c9c 	.word	0x20002c9c
 80062c4:	20002aec 	.word	0x20002aec
 80062c8:	200000b8 	.word	0x200000b8
 80062cc:	20002c98 	.word	0x20002c98
 80062d0:	20002c78 	.word	0x20002c78
 80062d4:	080061a5 	.word	0x080061a5
 80062d8:	20002c80 	.word	0x20002c80
 80062dc:	20002cb4 	.word	0x20002cb4
 80062e0:	20002e18 	.word	0x20002e18
 80062e4:	20002e08 	.word	0x20002e08
 80062e8:	20002df8 	.word	0x20002df8
 80062ec:	20002e20 	.word	0x20002e20
 80062f0:	20002e10 	.word	0x20002e10
 80062f4:	20002e00 	.word	0x20002e00
 80062f8:	20002ac8 	.word	0x20002ac8
 80062fc:	08004f31 	.word	0x08004f31

08006300 <_CreateStaticDevice>:
 8006300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006304:	b087      	sub	sp, #28
 8006306:	4604      	mov	r4, r0
 8006308:	f005 f8e2 	bl	800b4d0 <GUI_ALLOC_LockH>
 800630c:	af06      	add	r7, sp, #24
 800630e:	f8b0 8000 	ldrh.w	r8, [r0]
 8006312:	8886      	ldrh	r6, [r0, #4]
 8006314:	f8b0 9002 	ldrh.w	r9, [r0, #2]
 8006318:	f8b0 b006 	ldrh.w	fp, [r0, #6]
 800631c:	f847 0d04 	str.w	r0, [r7, #-4]!
 8006320:	fa0f f888 	sxth.w	r8, r8
 8006324:	b236      	sxth	r6, r6
 8006326:	ebc8 0606 	rsb	r6, r8, r6
 800632a:	f8d0 a024 	ldr.w	sl, [r0, #36]	; 0x24
 800632e:	3601      	adds	r6, #1
 8006330:	4638      	mov	r0, r7
 8006332:	fa0f f989 	sxth.w	r9, r9
 8006336:	fa0f f58b 	sxth.w	r5, fp
 800633a:	f005 f8d7 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800633e:	ebc9 0505 	rsb	r5, r9, r5
 8006342:	2e00      	cmp	r6, #0
 8006344:	f105 0501 	add.w	r5, r5, #1
 8006348:	dd4d      	ble.n	80063e6 <_CreateStaticDevice+0xe6>
 800634a:	2d00      	cmp	r5, #0
 800634c:	dd4b      	ble.n	80063e6 <_CreateStaticDevice+0xe6>
 800634e:	f1ba 0f00 	cmp.w	sl, #0
 8006352:	d04a      	beq.n	80063ea <_CreateStaticDevice+0xea>
 8006354:	4650      	mov	r0, sl
 8006356:	f005 f8bb 	bl	800b4d0 <GUI_ALLOC_LockH>
 800635a:	ab06      	add	r3, sp, #24
 800635c:	8886      	ldrh	r6, [r0, #4]
 800635e:	f843 0d08 	str.w	r0, [r3, #-8]!
 8006362:	88c5      	ldrh	r5, [r0, #6]
 8006364:	b236      	sxth	r6, r6
 8006366:	4618      	mov	r0, r3
 8006368:	f005 f8c0 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800636c:	4546      	cmp	r6, r8
 800636e:	d102      	bne.n	8006376 <_CreateStaticDevice+0x76>
 8006370:	b22d      	sxth	r5, r5
 8006372:	454d      	cmp	r5, r9
 8006374:	d032      	beq.n	80063dc <_CreateStaticDevice+0xdc>
 8006376:	4650      	mov	r0, sl
 8006378:	4641      	mov	r1, r8
 800637a:	464a      	mov	r2, r9
 800637c:	f000 f888 	bl	8006490 <GUI_MEMDEV_SetOrg>
 8006380:	e02c      	b.n	80063dc <_CreateStaticDevice+0xdc>
 8006382:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8006384:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006388:	6283      	str	r3, [r0, #40]	; 0x28
 800638a:	4638      	mov	r0, r7
 800638c:	f005 f8ae 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8006390:	4640      	mov	r0, r8
 8006392:	f000 ff99 	bl	80072c8 <GUI_MEMDEV_Select>
 8006396:	4607      	mov	r7, r0
 8006398:	4650      	mov	r0, sl
 800639a:	f003 fa75 	bl	8009888 <GUI__AlphaPreserveTrans>
 800639e:	4640      	mov	r0, r8
 80063a0:	f000 f8b6 	bl	8006510 <GUI_MEMDEV_GetDataPtr>
 80063a4:	4a2d      	ldr	r2, [pc, #180]	; (800645c <_CreateStaticDevice+0x15c>)
 80063a6:	4b2e      	ldr	r3, [pc, #184]	; (8006460 <_CreateStaticDevice+0x160>)
 80063a8:	7811      	ldrb	r1, [r2, #0]
 80063aa:	681b      	ldr	r3, [r3, #0]
 80063ac:	4375      	muls	r5, r6
 80063ae:	00aa      	lsls	r2, r5, #2
 80063b0:	4e2c      	ldr	r6, [pc, #176]	; (8006464 <_CreateStaticDevice+0x164>)
 80063b2:	4d2d      	ldr	r5, [pc, #180]	; (8006468 <_CreateStaticDevice+0x168>)
 80063b4:	4798      	blx	r3
 80063b6:	4620      	mov	r0, r4
 80063b8:	f8d5 8000 	ldr.w	r8, [r5]
 80063bc:	6034      	str	r4, [r6, #0]
 80063be:	f7fe fa90 	bl	80048e2 <WM_GetWindowOrgX>
 80063c2:	6028      	str	r0, [r5, #0]
 80063c4:	4620      	mov	r0, r4
 80063c6:	f7ff fd8f 	bl	8005ee8 <WM__Paint1>
 80063ca:	2000      	movs	r0, #0
 80063cc:	f8c5 8000 	str.w	r8, [r5]
 80063d0:	6030      	str	r0, [r6, #0]
 80063d2:	f003 fa59 	bl	8009888 <GUI__AlphaPreserveTrans>
 80063d6:	4638      	mov	r0, r7
 80063d8:	f000 ff76 	bl	80072c8 <GUI_MEMDEV_Select>
 80063dc:	4620      	mov	r0, r4
 80063de:	f005 f86d 	bl	800b4bc <GUI_ALLOC_h2p>
 80063e2:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80063e4:	e037      	b.n	8006456 <_CreateStaticDevice+0x156>
 80063e6:	2000      	movs	r0, #0
 80063e8:	e035      	b.n	8006456 <_CreateStaticDevice+0x156>
 80063ea:	f7fe f9df 	bl	80047ac <WM_GetDesktopWindow>
 80063ee:	4284      	cmp	r4, r0
 80063f0:	d112      	bne.n	8006418 <_CreateStaticDevice+0x118>
 80063f2:	f002 f8c7 	bl	8008584 <LCD_GetXSize>
 80063f6:	4682      	mov	sl, r0
 80063f8:	f002 f8cc 	bl	8008594 <LCD_GetYSize>
 80063fc:	4556      	cmp	r6, sl
 80063fe:	dc02      	bgt.n	8006406 <_CreateStaticDevice+0x106>
 8006400:	4285      	cmp	r5, r0
 8006402:	dd09      	ble.n	8006418 <_CreateStaticDevice+0x118>
 8006404:	e000      	b.n	8006408 <_CreateStaticDevice+0x108>
 8006406:	4656      	mov	r6, sl
 8006408:	4285      	cmp	r5, r0
 800640a:	bfa8      	it	ge
 800640c:	4605      	movge	r5, r0
 800640e:	4631      	mov	r1, r6
 8006410:	4620      	mov	r0, r4
 8006412:	462a      	mov	r2, r5
 8006414:	f7fe fc90 	bl	8004d38 <WM_SetSize>
 8006418:	4b14      	ldr	r3, [pc, #80]	; (800646c <_CreateStaticDevice+0x16c>)
 800641a:	9301      	str	r3, [sp, #4]
 800641c:	f04f 0a01 	mov.w	sl, #1
 8006420:	4b13      	ldr	r3, [pc, #76]	; (8006470 <_CreateStaticDevice+0x170>)
 8006422:	9302      	str	r3, [sp, #8]
 8006424:	4640      	mov	r0, r8
 8006426:	4649      	mov	r1, r9
 8006428:	4632      	mov	r2, r6
 800642a:	462b      	mov	r3, r5
 800642c:	f8cd a000 	str.w	sl, [sp]
 8006430:	f000 fe54 	bl	80070dc <GUI_MEMDEV__CreateFixed>
 8006434:	4680      	mov	r8, r0
 8006436:	4620      	mov	r0, r4
 8006438:	f005 f84a 	bl	800b4d0 <GUI_ALLOC_LockH>
 800643c:	9005      	str	r0, [sp, #20]
 800643e:	f8c0 8024 	str.w	r8, [r0, #36]	; 0x24
 8006442:	f1b8 0f00 	cmp.w	r8, #0
 8006446:	d19c      	bne.n	8006382 <_CreateStaticDevice+0x82>
 8006448:	4638      	mov	r0, r7
 800644a:	f005 f84f 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800644e:	4620      	mov	r0, r4
 8006450:	f7ff fd4a 	bl	8005ee8 <WM__Paint1>
 8006454:	4640      	mov	r0, r8
 8006456:	b007      	add	sp, #28
 8006458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800645c:	20000094 	.word	0x20000094
 8006460:	200000a4 	.word	0x200000a4
 8006464:	20002ccc 	.word	0x20002ccc
 8006468:	20002ce4 	.word	0x20002ce4
 800646c:	0800ff7c 	.word	0x0800ff7c
 8006470:	080120d4 	.word	0x080120d4

08006474 <GUI_MEMDEV_Paint1Static>:
 8006474:	b538      	push	{r3, r4, r5, lr}
 8006476:	4605      	mov	r5, r0
 8006478:	2405      	movs	r4, #5
 800647a:	4628      	mov	r0, r5
 800647c:	f7ff ff40 	bl	8006300 <_CreateStaticDevice>
 8006480:	b910      	cbnz	r0, 8006488 <GUI_MEMDEV_Paint1Static+0x14>
 8006482:	3c01      	subs	r4, #1
 8006484:	d1f9      	bne.n	800647a <GUI_MEMDEV_Paint1Static+0x6>
 8006486:	bd38      	pop	{r3, r4, r5, pc}
 8006488:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800648c:	f007 b9c8 	b.w	800d820 <GUI_MEMDEV_Write>

08006490 <GUI_MEMDEV_SetOrg>:
 8006490:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006492:	460d      	mov	r5, r1
 8006494:	4614      	mov	r4, r2
 8006496:	b918      	cbnz	r0, 80064a0 <GUI_MEMDEV_SetOrg+0x10>
 8006498:	4b11      	ldr	r3, [pc, #68]	; (80064e0 <GUI_MEMDEV_SetOrg+0x50>)
 800649a:	681b      	ldr	r3, [r3, #0]
 800649c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800649e:	b1e8      	cbz	r0, 80064dc <GUI_MEMDEV_SetOrg+0x4c>
 80064a0:	f005 f816 	bl	800b4d0 <GUI_ALLOC_LockH>
 80064a4:	b2a4      	uxth	r4, r4
 80064a6:	b2ad      	uxth	r5, r5
 80064a8:	80c4      	strh	r4, [r0, #6]
 80064aa:	8085      	strh	r5, [r0, #4]
 80064ac:	9000      	str	r0, [sp, #0]
 80064ae:	f002 fbcf 	bl	8008c50 <LCD_SetClipRectMax>
 80064b2:	9b00      	ldr	r3, [sp, #0]
 80064b4:	6958      	ldr	r0, [r3, #20]
 80064b6:	b170      	cbz	r0, 80064d6 <GUI_MEMDEV_SetOrg+0x46>
 80064b8:	f005 f80a 	bl	800b4d0 <GUI_ALLOC_LockH>
 80064bc:	9b00      	ldr	r3, [sp, #0]
 80064be:	9001      	str	r0, [sp, #4]
 80064c0:	891a      	ldrh	r2, [r3, #8]
 80064c2:	895b      	ldrh	r3, [r3, #10]
 80064c4:	8082      	strh	r2, [r0, #4]
 80064c6:	80c3      	strh	r3, [r0, #6]
 80064c8:	b112      	cbz	r2, 80064d0 <GUI_MEMDEV_SetOrg+0x40>
 80064ca:	b10b      	cbz	r3, 80064d0 <GUI_MEMDEV_SetOrg+0x40>
 80064cc:	8005      	strh	r5, [r0, #0]
 80064ce:	8044      	strh	r4, [r0, #2]
 80064d0:	a801      	add	r0, sp, #4
 80064d2:	f005 f80b 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80064d6:	4668      	mov	r0, sp
 80064d8:	f005 f808 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80064dc:	b003      	add	sp, #12
 80064de:	bd30      	pop	{r4, r5, pc}
 80064e0:	200000b8 	.word	0x200000b8

080064e4 <GUI_MEMDEV_GetYSize>:
 80064e4:	b513      	push	{r0, r1, r4, lr}
 80064e6:	b920      	cbnz	r0, 80064f2 <GUI_MEMDEV_GetYSize+0xe>
 80064e8:	4b08      	ldr	r3, [pc, #32]	; (800650c <GUI_MEMDEV_GetYSize+0x28>)
 80064ea:	681b      	ldr	r3, [r3, #0]
 80064ec:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80064ee:	4604      	mov	r4, r0
 80064f0:	b148      	cbz	r0, 8006506 <GUI_MEMDEV_GetYSize+0x22>
 80064f2:	f004 ffed 	bl	800b4d0 <GUI_ALLOC_LockH>
 80064f6:	ab02      	add	r3, sp, #8
 80064f8:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 80064fc:	f843 0d04 	str.w	r0, [r3, #-4]!
 8006500:	4618      	mov	r0, r3
 8006502:	f004 fff3 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8006506:	4620      	mov	r0, r4
 8006508:	b002      	add	sp, #8
 800650a:	bd10      	pop	{r4, pc}
 800650c:	200000b8 	.word	0x200000b8

08006510 <GUI_MEMDEV_GetDataPtr>:
 8006510:	b513      	push	{r0, r1, r4, lr}
 8006512:	b150      	cbz	r0, 800652a <GUI_MEMDEV_GetDataPtr+0x1a>
 8006514:	f004 ffdc 	bl	800b4d0 <GUI_ALLOC_LockH>
 8006518:	4604      	mov	r4, r0
 800651a:	a802      	add	r0, sp, #8
 800651c:	f840 4d04 	str.w	r4, [r0, #-4]!
 8006520:	f004 ffe4 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8006524:	f104 0018 	add.w	r0, r4, #24
 8006528:	e7ff      	b.n	800652a <GUI_MEMDEV_GetDataPtr+0x1a>
 800652a:	b002      	add	sp, #8
 800652c:	bd10      	pop	{r4, pc}
	...

08006530 <GUI_MEMDEV_Draw>:
 8006530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006534:	461e      	mov	r6, r3
 8006536:	b089      	sub	sp, #36	; 0x24
 8006538:	4b4e      	ldr	r3, [pc, #312]	; (8006674 <GUI_MEMDEV_Draw+0x144>)
 800653a:	9204      	str	r2, [sp, #16]
 800653c:	681a      	ldr	r2, [r3, #0]
 800653e:	9103      	str	r1, [sp, #12]
 8006540:	7c54      	ldrb	r4, [r2, #17]
 8006542:	4a4d      	ldr	r2, [pc, #308]	; (8006678 <GUI_MEMDEV_Draw+0x148>)
 8006544:	5712      	ldrsb	r2, [r2, r4]
 8006546:	2a01      	cmp	r2, #1
 8006548:	4605      	mov	r5, r0
 800654a:	469b      	mov	fp, r3
 800654c:	4620      	mov	r0, r4
 800654e:	dd06      	ble.n	800655e <GUI_MEMDEV_Draw+0x2e>
 8006550:	f002 f806 	bl	8008560 <LCD_GetXSizeEx>
 8006554:	4607      	mov	r7, r0
 8006556:	4620      	mov	r0, r4
 8006558:	f002 f805 	bl	8008566 <LCD_GetYSizeEx>
 800655c:	e005      	b.n	800656a <GUI_MEMDEV_Draw+0x3a>
 800655e:	f002 f805 	bl	800856c <LCD_GetVXSizeEx>
 8006562:	4607      	mov	r7, r0
 8006564:	4620      	mov	r0, r4
 8006566:	f002 f804 	bl	8008572 <LCD_GetVYSizeEx>
 800656a:	4604      	mov	r4, r0
 800656c:	b325      	cbz	r5, 80065b8 <GUI_MEMDEV_Draw+0x88>
 800656e:	a806      	add	r0, sp, #24
 8006570:	a907      	add	r1, sp, #28
 8006572:	f004 fa87 	bl	800aa84 <GUI_GetOrg>
 8006576:	9b06      	ldr	r3, [sp, #24]
 8006578:	f9b5 a000 	ldrsh.w	sl, [r5]
 800657c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8006580:	f9b5 8002 	ldrsh.w	r8, [r5, #2]
 8006584:	441f      	add	r7, r3
 8006586:	9b07      	ldr	r3, [sp, #28]
 8006588:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800658c:	3f01      	subs	r7, #1
 800658e:	4297      	cmp	r7, r2
 8006590:	bfd4      	ite	le
 8006592:	ebca 0707 	rsble	r7, sl, r7
 8006596:	ebca 0702 	rsbgt	r7, sl, r2
 800659a:	441c      	add	r4, r3
 800659c:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 80065a0:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 80065a4:	3c01      	subs	r4, #1
 80065a6:	4294      	cmp	r4, r2
 80065a8:	bfd4      	ite	le
 80065aa:	ebc8 0404 	rsble	r4, r8, r4
 80065ae:	ebc8 0402 	rsbgt	r4, r8, r2
 80065b2:	3701      	adds	r7, #1
 80065b4:	3401      	adds	r4, #1
 80065b6:	e001      	b.n	80065bc <GUI_MEMDEV_Draw+0x8c>
 80065b8:	46a8      	mov	r8, r5
 80065ba:	46aa      	mov	sl, r5
 80065bc:	b906      	cbnz	r6, 80065c0 <GUI_MEMDEV_Draw+0x90>
 80065be:	4266      	negs	r6, r4
 80065c0:	2f00      	cmp	r7, #0
 80065c2:	dd52      	ble.n	800666a <GUI_MEMDEV_Draw+0x13a>
 80065c4:	2c00      	cmp	r4, #0
 80065c6:	dd50      	ble.n	800666a <GUI_MEMDEV_Draw+0x13a>
 80065c8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80065ca:	9300      	str	r3, [sp, #0]
 80065cc:	4650      	mov	r0, sl
 80065ce:	4641      	mov	r1, r8
 80065d0:	463a      	mov	r2, r7
 80065d2:	4633      	mov	r3, r6
 80065d4:	f000 fe3c 	bl	8007250 <GUI_MEMDEV_CreateEx>
 80065d8:	4605      	mov	r5, r0
 80065da:	b920      	cbnz	r0, 80065e6 <GUI_MEMDEV_Draw+0xb6>
 80065dc:	9804      	ldr	r0, [sp, #16]
 80065de:	9b03      	ldr	r3, [sp, #12]
 80065e0:	4798      	blx	r3
 80065e2:	2001      	movs	r0, #1
 80065e4:	e042      	b.n	800666c <GUI_MEMDEV_Draw+0x13c>
 80065e6:	f7ff ff7d 	bl	80064e4 <GUI_MEMDEV_GetYSize>
 80065ea:	42a0      	cmp	r0, r4
 80065ec:	4606      	mov	r6, r0
 80065ee:	d006      	beq.n	80065fe <GUI_MEMDEV_Draw+0xce>
 80065f0:	f8db 3000 	ldr.w	r3, [fp]
 80065f4:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80065f6:	b110      	cbz	r0, 80065fe <GUI_MEMDEV_Draw+0xce>
 80065f8:	2132      	movs	r1, #50	; 0x32
 80065fa:	f7fd fe2b 	bl	8004254 <WM__SendMessageNoPara>
 80065fe:	4628      	mov	r0, r5
 8006600:	f000 fe62 	bl	80072c8 <GUI_MEMDEV_Select>
 8006604:	4273      	negs	r3, r6
 8006606:	9305      	str	r3, [sp, #20]
 8006608:	46a1      	mov	r9, r4
 800660a:	2700      	movs	r7, #0
 800660c:	45b1      	cmp	r9, r6
 800660e:	da03      	bge.n	8006618 <GUI_MEMDEV_Draw+0xe8>
 8006610:	4628      	mov	r0, r5
 8006612:	4649      	mov	r1, r9
 8006614:	f007 fa04 	bl	800da20 <GUI_MEMDEV_ReduceYSize>
 8006618:	b147      	cbz	r7, 800662c <GUI_MEMDEV_Draw+0xfc>
 800661a:	4628      	mov	r0, r5
 800661c:	4651      	mov	r1, sl
 800661e:	eb07 0208 	add.w	r2, r7, r8
 8006622:	f7ff ff35 	bl	8006490 <GUI_MEMDEV_SetOrg>
 8006626:	4628      	mov	r0, r5
 8006628:	f007 fa10 	bl	800da4c <GUI_MEMDEV_Clear>
 800662c:	9b03      	ldr	r3, [sp, #12]
 800662e:	9804      	ldr	r0, [sp, #16]
 8006630:	4798      	blx	r3
 8006632:	4b12      	ldr	r3, [pc, #72]	; (800667c <GUI_MEMDEV_Draw+0x14c>)
 8006634:	681b      	ldr	r3, [r3, #0]
 8006636:	b10b      	cbz	r3, 800663c <GUI_MEMDEV_Draw+0x10c>
 8006638:	2000      	movs	r0, #0
 800663a:	4798      	blx	r3
 800663c:	4628      	mov	r0, r5
 800663e:	f000 febb 	bl	80073b8 <GUI_MEMDEV_CopyToLCD>
 8006642:	4437      	add	r7, r6
 8006644:	9b05      	ldr	r3, [sp, #20]
 8006646:	42a7      	cmp	r7, r4
 8006648:	4499      	add	r9, r3
 800664a:	dbdf      	blt.n	800660c <GUI_MEMDEV_Draw+0xdc>
 800664c:	4628      	mov	r0, r5
 800664e:	f000 fddd 	bl	800720c <GUI_MEMDEV_Delete>
 8006652:	2000      	movs	r0, #0
 8006654:	f000 fe38 	bl	80072c8 <GUI_MEMDEV_Select>
 8006658:	42a6      	cmp	r6, r4
 800665a:	d006      	beq.n	800666a <GUI_MEMDEV_Draw+0x13a>
 800665c:	f8db 3000 	ldr.w	r3, [fp]
 8006660:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8006662:	b110      	cbz	r0, 800666a <GUI_MEMDEV_Draw+0x13a>
 8006664:	2133      	movs	r1, #51	; 0x33
 8006666:	f7fd fdf5 	bl	8004254 <WM__SendMessageNoPara>
 800666a:	2000      	movs	r0, #0
 800666c:	b009      	add	sp, #36	; 0x24
 800666e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006672:	bf00      	nop
 8006674:	200000b8 	.word	0x200000b8
 8006678:	20002cd4 	.word	0x20002cd4
 800667c:	20002af4 	.word	0x20002af4

08006680 <_GetDevData>:
 8006680:	4802      	ldr	r0, [pc, #8]	; (800668c <_GetDevData+0xc>)
 8006682:	2901      	cmp	r1, #1
 8006684:	bf18      	it	ne
 8006686:	2000      	movne	r0, #0
 8006688:	4770      	bx	lr
 800668a:	bf00      	nop
 800668c:	0800ff7c 	.word	0x0800ff7c

08006690 <_GetDevFunc>:
 8006690:	4802      	ldr	r0, [pc, #8]	; (800669c <_GetDevFunc+0xc>)
 8006692:	2916      	cmp	r1, #22
 8006694:	bf18      	it	ne
 8006696:	2000      	movne	r0, #0
 8006698:	4770      	bx	lr
 800669a:	bf00      	nop
 800669c:	0800d631 	.word	0x0800d631

080066a0 <_GetDevProp>:
 80066a0:	2908      	cmp	r1, #8
 80066a2:	bf0c      	ite	eq
 80066a4:	2020      	moveq	r0, #32
 80066a6:	2000      	movne	r0, #0
 80066a8:	4770      	bx	lr

080066aa <_SetOrg>:
 80066aa:	b508      	push	{r3, lr}
 80066ac:	6800      	ldr	r0, [r0, #0]
 80066ae:	68c3      	ldr	r3, [r0, #12]
 80066b0:	6a1b      	ldr	r3, [r3, #32]
 80066b2:	4798      	blx	r3
 80066b4:	bd08      	pop	{r3, pc}

080066b6 <_GetRect>:
 80066b6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80066b8:	6880      	ldr	r0, [r0, #8]
 80066ba:	460c      	mov	r4, r1
 80066bc:	f004 ff08 	bl	800b4d0 <GUI_ALLOC_LockH>
 80066c0:	4603      	mov	r3, r0
 80066c2:	a802      	add	r0, sp, #8
 80066c4:	8899      	ldrh	r1, [r3, #4]
 80066c6:	88da      	ldrh	r2, [r3, #6]
 80066c8:	891d      	ldrh	r5, [r3, #8]
 80066ca:	f840 3d04 	str.w	r3, [r0, #-4]!
 80066ce:	895b      	ldrh	r3, [r3, #10]
 80066d0:	8021      	strh	r1, [r4, #0]
 80066d2:	8062      	strh	r2, [r4, #2]
 80066d4:	4429      	add	r1, r5
 80066d6:	441a      	add	r2, r3
 80066d8:	3901      	subs	r1, #1
 80066da:	3a01      	subs	r2, #1
 80066dc:	80a1      	strh	r1, [r4, #4]
 80066de:	80e2      	strh	r2, [r4, #6]
 80066e0:	f004 ff04 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80066e4:	b003      	add	sp, #12
 80066e6:	bd30      	pop	{r4, r5, pc}

080066e8 <_XY2PTR>:
 80066e8:	4b0e      	ldr	r3, [pc, #56]	; (8006724 <_XY2PTR+0x3c>)
 80066ea:	681b      	ldr	r3, [r3, #0]
 80066ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80066ee:	4605      	mov	r5, r0
 80066f0:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80066f2:	460e      	mov	r6, r1
 80066f4:	f004 feec 	bl	800b4d0 <GUI_ALLOC_LockH>
 80066f8:	4603      	mov	r3, r0
 80066fa:	a802      	add	r0, sp, #8
 80066fc:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 8006700:	f840 3d04 	str.w	r3, [r0, #-4]!
 8006704:	f103 0118 	add.w	r1, r3, #24
 8006708:	1b36      	subs	r6, r6, r4
 800670a:	68dc      	ldr	r4, [r3, #12]
 800670c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8006710:	fb04 1406 	mla	r4, r4, r6, r1
 8006714:	1aed      	subs	r5, r5, r3
 8006716:	f004 fee9 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800671a:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 800671e:	4620      	mov	r0, r4
 8006720:	b002      	add	sp, #8
 8006722:	bd70      	pop	{r4, r5, r6, pc}
 8006724:	200000b8 	.word	0x200000b8

08006728 <_GetPixelIndex>:
 8006728:	b508      	push	{r3, lr}
 800672a:	4608      	mov	r0, r1
 800672c:	4611      	mov	r1, r2
 800672e:	f7ff ffdb 	bl	80066e8 <_XY2PTR>
 8006732:	6800      	ldr	r0, [r0, #0]
 8006734:	bd08      	pop	{r3, pc}
	...

08006738 <_XorPixel>:
 8006738:	4b15      	ldr	r3, [pc, #84]	; (8006790 <_XorPixel+0x58>)
 800673a:	681b      	ldr	r3, [r3, #0]
 800673c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800673e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006740:	4615      	mov	r5, r2
 8006742:	460e      	mov	r6, r1
 8006744:	f004 fec4 	bl	800b4d0 <GUI_ALLOC_LockH>
 8006748:	4629      	mov	r1, r5
 800674a:	9000      	str	r0, [sp, #0]
 800674c:	4630      	mov	r0, r6
 800674e:	f7ff ffcb 	bl	80066e8 <_XY2PTR>
 8006752:	9b00      	ldr	r3, [sp, #0]
 8006754:	681b      	ldr	r3, [r3, #0]
 8006756:	691b      	ldr	r3, [r3, #16]
 8006758:	4604      	mov	r4, r0
 800675a:	689b      	ldr	r3, [r3, #8]
 800675c:	4798      	blx	r3
 800675e:	6823      	ldr	r3, [r4, #0]
 8006760:	4058      	eors	r0, r3
 8006762:	9b00      	ldr	r3, [sp, #0]
 8006764:	6020      	str	r0, [r4, #0]
 8006766:	6958      	ldr	r0, [r3, #20]
 8006768:	b160      	cbz	r0, 8006784 <_XorPixel+0x4c>
 800676a:	f004 feb1 	bl	800b4d0 <GUI_ALLOC_LockH>
 800676e:	ac02      	add	r4, sp, #8
 8006770:	6883      	ldr	r3, [r0, #8]
 8006772:	f844 0d04 	str.w	r0, [r4, #-4]!
 8006776:	681b      	ldr	r3, [r3, #0]
 8006778:	4631      	mov	r1, r6
 800677a:	462a      	mov	r2, r5
 800677c:	4798      	blx	r3
 800677e:	4620      	mov	r0, r4
 8006780:	f004 feb4 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8006784:	4668      	mov	r0, sp
 8006786:	f004 feb1 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800678a:	b002      	add	sp, #8
 800678c:	bd70      	pop	{r4, r5, r6, pc}
 800678e:	bf00      	nop
 8006790:	200000b8 	.word	0x200000b8

08006794 <_SetPixelIndex>:
 8006794:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006796:	461c      	mov	r4, r3
 8006798:	4b10      	ldr	r3, [pc, #64]	; (80067dc <_SetPixelIndex+0x48>)
 800679a:	681b      	ldr	r3, [r3, #0]
 800679c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800679e:	460e      	mov	r6, r1
 80067a0:	4615      	mov	r5, r2
 80067a2:	f004 fe95 	bl	800b4d0 <GUI_ALLOC_LockH>
 80067a6:	4629      	mov	r1, r5
 80067a8:	9000      	str	r0, [sp, #0]
 80067aa:	4630      	mov	r0, r6
 80067ac:	f7ff ff9c 	bl	80066e8 <_XY2PTR>
 80067b0:	9b00      	ldr	r3, [sp, #0]
 80067b2:	6004      	str	r4, [r0, #0]
 80067b4:	6958      	ldr	r0, [r3, #20]
 80067b6:	b160      	cbz	r0, 80067d2 <_SetPixelIndex+0x3e>
 80067b8:	f004 fe8a 	bl	800b4d0 <GUI_ALLOC_LockH>
 80067bc:	ac02      	add	r4, sp, #8
 80067be:	6883      	ldr	r3, [r0, #8]
 80067c0:	f844 0d04 	str.w	r0, [r4, #-4]!
 80067c4:	681b      	ldr	r3, [r3, #0]
 80067c6:	4631      	mov	r1, r6
 80067c8:	462a      	mov	r2, r5
 80067ca:	4798      	blx	r3
 80067cc:	4620      	mov	r0, r4
 80067ce:	f004 fe8d 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80067d2:	4668      	mov	r0, sp
 80067d4:	f004 fe8a 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80067d8:	b002      	add	sp, #8
 80067da:	bd70      	pop	{r4, r5, r6, pc}
 80067dc:	200000b8 	.word	0x200000b8

080067e0 <_DrawVLine>:
 80067e0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80067e4:	4d2c      	ldr	r5, [pc, #176]	; (8006898 <_DrawVLine+0xb8>)
 80067e6:	461e      	mov	r6, r3
 80067e8:	682b      	ldr	r3, [r5, #0]
 80067ea:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80067ec:	460f      	mov	r7, r1
 80067ee:	4614      	mov	r4, r2
 80067f0:	f004 fe6e 	bl	800b4d0 <GUI_ALLOC_LockH>
 80067f4:	9000      	str	r0, [sp, #0]
 80067f6:	6940      	ldr	r0, [r0, #20]
 80067f8:	46a9      	mov	r9, r5
 80067fa:	b108      	cbz	r0, 8006800 <_DrawVLine+0x20>
 80067fc:	f004 fe68 	bl	800b4d0 <GUI_ALLOC_LockH>
 8006800:	9001      	str	r0, [sp, #4]
 8006802:	4621      	mov	r1, r4
 8006804:	4638      	mov	r0, r7
 8006806:	f7ff ff6f 	bl	80066e8 <_XY2PTR>
 800680a:	f8d9 2000 	ldr.w	r2, [r9]
 800680e:	9b00      	ldr	r3, [sp, #0]
 8006810:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 8006812:	7c12      	ldrb	r2, [r2, #16]
 8006814:	f8d3 800c 	ldr.w	r8, [r3, #12]
 8006818:	f8d1 9000 	ldr.w	r9, [r1]
 800681c:	07d2      	lsls	r2, r2, #31
 800681e:	4605      	mov	r5, r0
 8006820:	d51f      	bpl.n	8006862 <_DrawVLine+0x82>
 8006822:	681b      	ldr	r3, [r3, #0]
 8006824:	691b      	ldr	r3, [r3, #16]
 8006826:	689b      	ldr	r3, [r3, #8]
 8006828:	4798      	blx	r3
 800682a:	4680      	mov	r8, r0
 800682c:	9801      	ldr	r0, [sp, #4]
 800682e:	b128      	cbz	r0, 800683c <_DrawVLine+0x5c>
 8006830:	6882      	ldr	r2, [r0, #8]
 8006832:	4639      	mov	r1, r7
 8006834:	f8d2 c000 	ldr.w	ip, [r2]
 8006838:	4622      	mov	r2, r4
 800683a:	47e0      	blx	ip
 800683c:	682b      	ldr	r3, [r5, #0]
 800683e:	ea83 0308 	eor.w	r3, r3, r8
 8006842:	602b      	str	r3, [r5, #0]
 8006844:	9b00      	ldr	r3, [sp, #0]
 8006846:	3401      	adds	r4, #1
 8006848:	68db      	ldr	r3, [r3, #12]
 800684a:	42b4      	cmp	r4, r6
 800684c:	441d      	add	r5, r3
 800684e:	dded      	ble.n	800682c <_DrawVLine+0x4c>
 8006850:	4668      	mov	r0, sp
 8006852:	f004 fe4b 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8006856:	9b01      	ldr	r3, [sp, #4]
 8006858:	b1d3      	cbz	r3, 8006890 <_DrawVLine+0xb0>
 800685a:	a801      	add	r0, sp, #4
 800685c:	f004 fe46 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8006860:	e016      	b.n	8006890 <_DrawVLine+0xb0>
 8006862:	9b01      	ldr	r3, [sp, #4]
 8006864:	b163      	cbz	r3, 8006880 <_DrawVLine+0xa0>
 8006866:	9801      	ldr	r0, [sp, #4]
 8006868:	6883      	ldr	r3, [r0, #8]
 800686a:	4622      	mov	r2, r4
 800686c:	681b      	ldr	r3, [r3, #0]
 800686e:	4639      	mov	r1, r7
 8006870:	3401      	adds	r4, #1
 8006872:	4798      	blx	r3
 8006874:	42b4      	cmp	r4, r6
 8006876:	f8c5 9000 	str.w	r9, [r5]
 800687a:	4445      	add	r5, r8
 800687c:	ddf3      	ble.n	8006866 <_DrawVLine+0x86>
 800687e:	e7e7      	b.n	8006850 <_DrawVLine+0x70>
 8006880:	1b34      	subs	r4, r6, r4
 8006882:	3401      	adds	r4, #1
 8006884:	3c01      	subs	r4, #1
 8006886:	f8c5 9000 	str.w	r9, [r5]
 800688a:	4445      	add	r5, r8
 800688c:	d1fa      	bne.n	8006884 <_DrawVLine+0xa4>
 800688e:	e7df      	b.n	8006850 <_DrawVLine+0x70>
 8006890:	b003      	add	sp, #12
 8006892:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006896:	bf00      	nop
 8006898:	200000b8 	.word	0x200000b8

0800689c <_FillRect>:
 800689c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80068a0:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 8006950 <_FillRect+0xb4>
 80068a4:	4614      	mov	r4, r2
 80068a6:	f8db 2000 	ldr.w	r2, [fp]
 80068aa:	b085      	sub	sp, #20
 80068ac:	6e10      	ldr	r0, [r2, #96]	; 0x60
 80068ae:	460f      	mov	r7, r1
 80068b0:	461d      	mov	r5, r3
 80068b2:	f004 fe0d 	bl	800b4d0 <GUI_ALLOC_LockH>
 80068b6:	4621      	mov	r1, r4
 80068b8:	9002      	str	r0, [sp, #8]
 80068ba:	4638      	mov	r0, r7
 80068bc:	f7ff ff14 	bl	80066e8 <_XY2PTR>
 80068c0:	9a02      	ldr	r2, [sp, #8]
 80068c2:	f8db 3000 	ldr.w	r3, [fp]
 80068c6:	f8d2 900c 	ldr.w	r9, [r2, #12]
 80068ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80068cc:	4606      	mov	r6, r0
 80068ce:	6950      	ldr	r0, [r2, #20]
 80068d0:	f8d3 a000 	ldr.w	sl, [r3]
 80068d4:	1bed      	subs	r5, r5, r7
 80068d6:	3501      	adds	r5, #1
 80068d8:	b338      	cbz	r0, 800692a <_FillRect+0x8e>
 80068da:	f004 fdf9 	bl	800b4d0 <GUI_ALLOC_LockH>
 80068de:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80068e0:	f10d 0810 	add.w	r8, sp, #16
 80068e4:	1b13      	subs	r3, r2, r4
 80068e6:	f848 0d04 	str.w	r0, [r8, #-4]!
 80068ea:	3301      	adds	r3, #1
 80068ec:	9300      	str	r3, [sp, #0]
 80068ee:	4639      	mov	r1, r7
 80068f0:	4622      	mov	r2, r4
 80068f2:	462b      	mov	r3, r5
 80068f4:	f007 f87e 	bl	800d9f4 <GUI_USAGE_AddRect>
 80068f8:	4640      	mov	r0, r8
 80068fa:	f004 fdf7 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80068fe:	e014      	b.n	800692a <_FillRect+0x8e>
 8006900:	f8db 3000 	ldr.w	r3, [fp]
 8006904:	7c1b      	ldrb	r3, [r3, #16]
 8006906:	07db      	lsls	r3, r3, #31
 8006908:	d513      	bpl.n	8006932 <_FillRect+0x96>
 800690a:	9b02      	ldr	r3, [sp, #8]
 800690c:	681b      	ldr	r3, [r3, #0]
 800690e:	691b      	ldr	r3, [r3, #16]
 8006910:	689b      	ldr	r3, [r3, #8]
 8006912:	4798      	blx	r3
 8006914:	4632      	mov	r2, r6
 8006916:	462b      	mov	r3, r5
 8006918:	6811      	ldr	r1, [r2, #0]
 800691a:	3b01      	subs	r3, #1
 800691c:	ea81 0100 	eor.w	r1, r1, r0
 8006920:	f842 1b04 	str.w	r1, [r2], #4
 8006924:	d1f8      	bne.n	8006918 <_FillRect+0x7c>
 8006926:	444e      	add	r6, r9
 8006928:	3401      	adds	r4, #1
 800692a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800692c:	429c      	cmp	r4, r3
 800692e:	dde7      	ble.n	8006900 <_FillRect+0x64>
 8006930:	e008      	b.n	8006944 <_FillRect+0xa8>
 8006932:	2d00      	cmp	r5, #0
 8006934:	ddf7      	ble.n	8006926 <_FillRect+0x8a>
 8006936:	462b      	mov	r3, r5
 8006938:	4632      	mov	r2, r6
 800693a:	3b01      	subs	r3, #1
 800693c:	f842 ab04 	str.w	sl, [r2], #4
 8006940:	d1fb      	bne.n	800693a <_FillRect+0x9e>
 8006942:	e7f0      	b.n	8006926 <_FillRect+0x8a>
 8006944:	a802      	add	r0, sp, #8
 8006946:	f004 fdd1 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800694a:	b005      	add	sp, #20
 800694c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006950:	200000b8 	.word	0x200000b8

08006954 <_DrawHLine>:
 8006954:	b507      	push	{r0, r1, r2, lr}
 8006956:	9200      	str	r2, [sp, #0]
 8006958:	f7ff ffa0 	bl	800689c <_FillRect>
 800695c:	b003      	add	sp, #12
 800695e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08006964 <_DrawBitmap>:
 8006964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006968:	4c90      	ldr	r4, [pc, #576]	; (8006bac <_DrawBitmap+0x248>)
 800696a:	b091      	sub	sp, #68	; 0x44
 800696c:	469b      	mov	fp, r3
 800696e:	6823      	ldr	r3, [r4, #0]
 8006970:	9008      	str	r0, [sp, #32]
 8006972:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006974:	9207      	str	r2, [sp, #28]
 8006976:	460e      	mov	r6, r1
 8006978:	f8dd a074 	ldr.w	sl, [sp, #116]	; 0x74
 800697c:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 800697e:	2800      	cmp	r0, #0
 8006980:	f000 838b 	beq.w	800709a <_DrawBitmap+0x736>
 8006984:	f004 fda4 	bl	800b4d0 <GUI_ALLOC_LockH>
 8006988:	900e      	str	r0, [sp, #56]	; 0x38
 800698a:	6940      	ldr	r0, [r0, #20]
 800698c:	b108      	cbz	r0, 8006992 <_DrawBitmap+0x2e>
 800698e:	f004 fd9f 	bl	800b4d0 <GUI_ALLOC_LockH>
 8006992:	900f      	str	r0, [sp, #60]	; 0x3c
 8006994:	a810      	add	r0, sp, #64	; 0x40
 8006996:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 800699a:	68db      	ldr	r3, [r3, #12]
 800699c:	930a      	str	r3, [sp, #40]	; 0x28
 800699e:	f004 fda5 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80069a2:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 80069a4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80069a6:	4437      	add	r7, r6
 80069a8:	9704      	str	r7, [sp, #16]
 80069aa:	b150      	cbz	r0, 80069c2 <_DrawBitmap+0x5e>
 80069ac:	6823      	ldr	r3, [r4, #0]
 80069ae:	7c1b      	ldrb	r3, [r3, #16]
 80069b0:	079c      	lsls	r4, r3, #30
 80069b2:	d406      	bmi.n	80069c2 <_DrawBitmap+0x5e>
 80069b4:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80069b6:	9700      	str	r7, [sp, #0]
 80069b8:	9904      	ldr	r1, [sp, #16]
 80069ba:	9a07      	ldr	r2, [sp, #28]
 80069bc:	465b      	mov	r3, fp
 80069be:	f007 f819 	bl	800d9f4 <GUI_USAGE_AddRect>
 80069c2:	9804      	ldr	r0, [sp, #16]
 80069c4:	9907      	ldr	r1, [sp, #28]
 80069c6:	f7ff fe8f 	bl	80066e8 <_XY2PTR>
 80069ca:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80069cc:	2f17      	cmp	r7, #23
 80069ce:	4606      	mov	r6, r0
 80069d0:	dd64      	ble.n	8006a9c <_DrawBitmap+0x138>
 80069d2:	ea4f 078b 	mov.w	r7, fp, lsl #2
 80069d6:	9706      	str	r7, [sp, #24]
 80069d8:	f04f 0900 	mov.w	r9, #0
 80069dc:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80069de:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80069e0:	45b9      	cmp	r9, r7
 80069e2:	da57      	bge.n	8006a94 <_DrawBitmap+0x130>
 80069e4:	b130      	cbz	r0, 80069f4 <_DrawBitmap+0x90>
 80069e6:	6883      	ldr	r3, [r0, #8]
 80069e8:	9a07      	ldr	r2, [sp, #28]
 80069ea:	685c      	ldr	r4, [r3, #4]
 80069ec:	9904      	ldr	r1, [sp, #16]
 80069ee:	444a      	add	r2, r9
 80069f0:	465b      	mov	r3, fp
 80069f2:	47a0      	blx	r4
 80069f4:	9f08      	ldr	r7, [sp, #32]
 80069f6:	693b      	ldr	r3, [r7, #16]
 80069f8:	68d8      	ldr	r0, [r3, #12]
 80069fa:	b130      	cbz	r0, 8006a0a <_DrawBitmap+0xa6>
 80069fc:	4b6c      	ldr	r3, [pc, #432]	; (8006bb0 <_DrawBitmap+0x24c>)
 80069fe:	9a06      	ldr	r2, [sp, #24]
 8006a00:	681b      	ldr	r3, [r3, #0]
 8006a02:	4630      	mov	r0, r6
 8006a04:	4651      	mov	r1, sl
 8006a06:	4798      	blx	r3
 8006a08:	e03d      	b.n	8006a86 <_DrawBitmap+0x122>
 8006a0a:	685b      	ldr	r3, [r3, #4]
 8006a0c:	4798      	blx	r3
 8006a0e:	0e00      	lsrs	r0, r0, #24
 8006a10:	9005      	str	r0, [sp, #20]
 8006a12:	4635      	mov	r5, r6
 8006a14:	465f      	mov	r7, fp
 8006a16:	4654      	mov	r4, sl
 8006a18:	463b      	mov	r3, r7
 8006a1a:	4622      	mov	r2, r4
 8006a1c:	f04f 0800 	mov.w	r8, #0
 8006a20:	f852 1b04 	ldr.w	r1, [r2], #4
 8006a24:	9805      	ldr	r0, [sp, #20]
 8006a26:	0e09      	lsrs	r1, r1, #24
 8006a28:	4281      	cmp	r1, r0
 8006a2a:	9805      	ldr	r0, [sp, #20]
 8006a2c:	bf08      	it	eq
 8006a2e:	f108 0801 	addeq.w	r8, r8, #1
 8006a32:	4281      	cmp	r1, r0
 8006a34:	f103 33ff 	add.w	r3, r3, #4294967295
 8006a38:	d012      	beq.n	8006a60 <_DrawBitmap+0xfc>
 8006a3a:	f1b8 0f00 	cmp.w	r8, #0
 8006a3e:	d012      	beq.n	8006a66 <_DrawBitmap+0x102>
 8006a40:	4a5b      	ldr	r2, [pc, #364]	; (8006bb0 <_DrawBitmap+0x24c>)
 8006a42:	ea4f 0388 	mov.w	r3, r8, lsl #2
 8006a46:	f8d2 c000 	ldr.w	ip, [r2]
 8006a4a:	9303      	str	r3, [sp, #12]
 8006a4c:	4628      	mov	r0, r5
 8006a4e:	4621      	mov	r1, r4
 8006a50:	461a      	mov	r2, r3
 8006a52:	47e0      	blx	ip
 8006a54:	9b03      	ldr	r3, [sp, #12]
 8006a56:	ebc8 0707 	rsb	r7, r8, r7
 8006a5a:	441d      	add	r5, r3
 8006a5c:	441c      	add	r4, r3
 8006a5e:	e010      	b.n	8006a82 <_DrawBitmap+0x11e>
 8006a60:	2b00      	cmp	r3, #0
 8006a62:	d1dd      	bne.n	8006a20 <_DrawBitmap+0xbc>
 8006a64:	e7e9      	b.n	8006a3a <_DrawBitmap+0xd6>
 8006a66:	6820      	ldr	r0, [r4, #0]
 8006a68:	0e02      	lsrs	r2, r0, #24
 8006a6a:	2aff      	cmp	r2, #255	; 0xff
 8006a6c:	d006      	beq.n	8006a7c <_DrawBitmap+0x118>
 8006a6e:	4b51      	ldr	r3, [pc, #324]	; (8006bb4 <_DrawBitmap+0x250>)
 8006a70:	6829      	ldr	r1, [r5, #0]
 8006a72:	681b      	ldr	r3, [r3, #0]
 8006a74:	43d2      	mvns	r2, r2
 8006a76:	b2d2      	uxtb	r2, r2
 8006a78:	4798      	blx	r3
 8006a7a:	6028      	str	r0, [r5, #0]
 8006a7c:	3504      	adds	r5, #4
 8006a7e:	3404      	adds	r4, #4
 8006a80:	3f01      	subs	r7, #1
 8006a82:	2f00      	cmp	r7, #0
 8006a84:	d1c8      	bne.n	8006a18 <_DrawBitmap+0xb4>
 8006a86:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8006a88:	44ba      	add	sl, r7
 8006a8a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8006a8c:	f109 0901 	add.w	r9, r9, #1
 8006a90:	443e      	add	r6, r7
 8006a92:	e7a3      	b.n	80069dc <_DrawBitmap+0x78>
 8006a94:	2800      	cmp	r0, #0
 8006a96:	f040 82fd 	bne.w	8007094 <_DrawBitmap+0x730>
 8006a9a:	e2fe      	b.n	800709a <_DrawBitmap+0x736>
 8006a9c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006a9e:	2f10      	cmp	r7, #16
 8006aa0:	d134      	bne.n	8006b0c <_DrawBitmap+0x1a8>
 8006aa2:	1f06      	subs	r6, r0, #4
 8006aa4:	2500      	movs	r5, #0
 8006aa6:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006aa8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8006aaa:	42bd      	cmp	r5, r7
 8006aac:	f280 80a3 	bge.w	8006bf6 <_DrawBitmap+0x292>
 8006ab0:	9f07      	ldr	r7, [sp, #28]
 8006ab2:	442f      	add	r7, r5
 8006ab4:	b13c      	cbz	r4, 8006ac6 <_DrawBitmap+0x162>
 8006ab6:	68a3      	ldr	r3, [r4, #8]
 8006ab8:	9904      	ldr	r1, [sp, #16]
 8006aba:	f8d3 c004 	ldr.w	ip, [r3, #4]
 8006abe:	4620      	mov	r0, r4
 8006ac0:	463a      	mov	r2, r7
 8006ac2:	465b      	mov	r3, fp
 8006ac4:	47e0      	blx	ip
 8006ac6:	f1aa 0902 	sub.w	r9, sl, #2
 8006aca:	9605      	str	r6, [sp, #20]
 8006acc:	46d8      	mov	r8, fp
 8006ace:	9808      	ldr	r0, [sp, #32]
 8006ad0:	9904      	ldr	r1, [sp, #16]
 8006ad2:	6903      	ldr	r3, [r0, #16]
 8006ad4:	f839 0f02 	ldrh.w	r0, [r9, #2]!
 8006ad8:	685b      	ldr	r3, [r3, #4]
 8006ada:	4459      	add	r1, fp
 8006adc:	ebc8 0101 	rsb	r1, r8, r1
 8006ae0:	9103      	str	r1, [sp, #12]
 8006ae2:	4798      	blx	r3
 8006ae4:	9b05      	ldr	r3, [sp, #20]
 8006ae6:	9903      	ldr	r1, [sp, #12]
 8006ae8:	f843 0f04 	str.w	r0, [r3, #4]!
 8006aec:	9305      	str	r3, [sp, #20]
 8006aee:	b124      	cbz	r4, 8006afa <_DrawBitmap+0x196>
 8006af0:	68a3      	ldr	r3, [r4, #8]
 8006af2:	4620      	mov	r0, r4
 8006af4:	681b      	ldr	r3, [r3, #0]
 8006af6:	463a      	mov	r2, r7
 8006af8:	4798      	blx	r3
 8006afa:	f1b8 0801 	subs.w	r8, r8, #1
 8006afe:	d1e6      	bne.n	8006ace <_DrawBitmap+0x16a>
 8006b00:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8006b02:	44ba      	add	sl, r7
 8006b04:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8006b06:	3501      	adds	r5, #1
 8006b08:	443e      	add	r6, r7
 8006b0a:	e7cc      	b.n	8006aa6 <_DrawBitmap+0x142>
 8006b0c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006b0e:	2f08      	cmp	r7, #8
 8006b10:	f100 0604 	add.w	r6, r0, #4
 8006b14:	d173      	bne.n	8006bfe <_DrawBitmap+0x29a>
 8006b16:	9f07      	ldr	r7, [sp, #28]
 8006b18:	9907      	ldr	r1, [sp, #28]
 8006b1a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8006b1c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8006b1e:	1a7b      	subs	r3, r7, r1
 8006b20:	4293      	cmp	r3, r2
 8006b22:	f1a6 0004 	sub.w	r0, r6, #4
 8006b26:	da66      	bge.n	8006bf6 <_DrawBitmap+0x292>
 8006b28:	4b20      	ldr	r3, [pc, #128]	; (8006bac <_DrawBitmap+0x248>)
 8006b2a:	681b      	ldr	r3, [r3, #0]
 8006b2c:	7c1b      	ldrb	r3, [r3, #16]
 8006b2e:	b36d      	cbz	r5, 8006b8c <_DrawBitmap+0x228>
 8006b30:	f013 0303 	ands.w	r3, r3, #3
 8006b34:	d005      	beq.n	8006b42 <_DrawBitmap+0x1de>
 8006b36:	2b02      	cmp	r3, #2
 8006b38:	d157      	bne.n	8006bea <_DrawBitmap+0x286>
 8006b3a:	46b1      	mov	r9, r6
 8006b3c:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8006b40:	e01c      	b.n	8006b7c <_DrawBitmap+0x218>
 8006b42:	f81a 2003 	ldrb.w	r2, [sl, r3]
 8006b46:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8006b4a:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8006b4e:	3301      	adds	r3, #1
 8006b50:	455b      	cmp	r3, fp
 8006b52:	d1f6      	bne.n	8006b42 <_DrawBitmap+0x1de>
 8006b54:	e049      	b.n	8006bea <_DrawBitmap+0x286>
 8006b56:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8006b5a:	f849 3c04 	str.w	r3, [r9, #-4]
 8006b5e:	b12c      	cbz	r4, 8006b6c <_DrawBitmap+0x208>
 8006b60:	68a3      	ldr	r3, [r4, #8]
 8006b62:	4620      	mov	r0, r4
 8006b64:	681b      	ldr	r3, [r3, #0]
 8006b66:	4641      	mov	r1, r8
 8006b68:	463a      	mov	r2, r7
 8006b6a:	4798      	blx	r3
 8006b6c:	9b04      	ldr	r3, [sp, #16]
 8006b6e:	f108 0801 	add.w	r8, r8, #1
 8006b72:	445b      	add	r3, fp
 8006b74:	4543      	cmp	r3, r8
 8006b76:	f109 0904 	add.w	r9, r9, #4
 8006b7a:	d036      	beq.n	8006bea <_DrawBitmap+0x286>
 8006b7c:	9804      	ldr	r0, [sp, #16]
 8006b7e:	ebc0 030a 	rsb	r3, r0, sl
 8006b82:	f813 3008 	ldrb.w	r3, [r3, r8]
 8006b86:	2b00      	cmp	r3, #0
 8006b88:	d0f0      	beq.n	8006b6c <_DrawBitmap+0x208>
 8006b8a:	e7e4      	b.n	8006b56 <_DrawBitmap+0x1f2>
 8006b8c:	f013 0303 	ands.w	r3, r3, #3
 8006b90:	d005      	beq.n	8006b9e <_DrawBitmap+0x23a>
 8006b92:	2b02      	cmp	r3, #2
 8006b94:	d129      	bne.n	8006bea <_DrawBitmap+0x286>
 8006b96:	46b1      	mov	r9, r6
 8006b98:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8006b9c:	e01d      	b.n	8006bda <_DrawBitmap+0x276>
 8006b9e:	4b04      	ldr	r3, [pc, #16]	; (8006bb0 <_DrawBitmap+0x24c>)
 8006ba0:	4651      	mov	r1, sl
 8006ba2:	681b      	ldr	r3, [r3, #0]
 8006ba4:	465a      	mov	r2, fp
 8006ba6:	4798      	blx	r3
 8006ba8:	e01f      	b.n	8006bea <_DrawBitmap+0x286>
 8006baa:	bf00      	nop
 8006bac:	200000b8 	.word	0x200000b8
 8006bb0:	200000a8 	.word	0x200000a8
 8006bb4:	200000ac 	.word	0x200000ac
 8006bb8:	f849 3c04 	str.w	r3, [r9, #-4]
 8006bbc:	b12c      	cbz	r4, 8006bca <_DrawBitmap+0x266>
 8006bbe:	68a3      	ldr	r3, [r4, #8]
 8006bc0:	4620      	mov	r0, r4
 8006bc2:	681b      	ldr	r3, [r3, #0]
 8006bc4:	4641      	mov	r1, r8
 8006bc6:	463a      	mov	r2, r7
 8006bc8:	4798      	blx	r3
 8006bca:	9b04      	ldr	r3, [sp, #16]
 8006bcc:	f108 0801 	add.w	r8, r8, #1
 8006bd0:	445b      	add	r3, fp
 8006bd2:	4543      	cmp	r3, r8
 8006bd4:	f109 0904 	add.w	r9, r9, #4
 8006bd8:	d007      	beq.n	8006bea <_DrawBitmap+0x286>
 8006bda:	9904      	ldr	r1, [sp, #16]
 8006bdc:	ebc1 030a 	rsb	r3, r1, sl
 8006be0:	f813 3008 	ldrb.w	r3, [r3, r8]
 8006be4:	2b00      	cmp	r3, #0
 8006be6:	d0f0      	beq.n	8006bca <_DrawBitmap+0x266>
 8006be8:	e7e6      	b.n	8006bb8 <_DrawBitmap+0x254>
 8006bea:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8006bec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006bee:	4492      	add	sl, r2
 8006bf0:	3701      	adds	r7, #1
 8006bf2:	441e      	add	r6, r3
 8006bf4:	e790      	b.n	8006b18 <_DrawBitmap+0x1b4>
 8006bf6:	2c00      	cmp	r4, #0
 8006bf8:	f040 824c 	bne.w	8007094 <_DrawBitmap+0x730>
 8006bfc:	e24d      	b.n	800709a <_DrawBitmap+0x736>
 8006bfe:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006c00:	4bb2      	ldr	r3, [pc, #712]	; (8006ecc <_DrawBitmap+0x568>)
 8006c02:	9608      	str	r6, [sp, #32]
 8006c04:	007f      	lsls	r7, r7, #1
 8006c06:	970c      	str	r7, [sp, #48]	; 0x30
 8006c08:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006c0a:	00bf      	lsls	r7, r7, #2
 8006c0c:	970d      	str	r7, [sp, #52]	; 0x34
 8006c0e:	9f07      	ldr	r7, [sp, #28]
 8006c10:	9705      	str	r7, [sp, #20]
 8006c12:	2d00      	cmp	r5, #0
 8006c14:	bf08      	it	eq
 8006c16:	461d      	moveq	r5, r3
 8006c18:	9f08      	ldr	r7, [sp, #32]
 8006c1a:	9807      	ldr	r0, [sp, #28]
 8006c1c:	1f3c      	subs	r4, r7, #4
 8006c1e:	9f05      	ldr	r7, [sp, #20]
 8006c20:	1a3b      	subs	r3, r7, r0
 8006c22:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006c24:	42bb      	cmp	r3, r7
 8006c26:	f280 8233 	bge.w	8007090 <_DrawBitmap+0x72c>
 8006c2a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006c2c:	2f02      	cmp	r7, #2
 8006c2e:	f000 80ad 	beq.w	8006d8c <_DrawBitmap+0x428>
 8006c32:	2f04      	cmp	r7, #4
 8006c34:	f000 8150 	beq.w	8006ed8 <_DrawBitmap+0x574>
 8006c38:	2f01      	cmp	r7, #1
 8006c3a:	f040 821f 	bne.w	800707c <_DrawBitmap+0x718>
 8006c3e:	f8df 9294 	ldr.w	r9, [pc, #660]	; 8006ed4 <_DrawBitmap+0x570>
 8006c42:	f8d9 3000 	ldr.w	r3, [r9]
 8006c46:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006c48:	f004 fc42 	bl	800b4d0 <GUI_ALLOC_LockH>
 8006c4c:	f89a 3000 	ldrb.w	r3, [sl]
 8006c50:	4a9f      	ldr	r2, [pc, #636]	; (8006ed0 <_DrawBitmap+0x56c>)
 8006c52:	991e      	ldr	r1, [sp, #120]	; 0x78
 8006c54:	5cd6      	ldrb	r6, [r2, r3]
 8006c56:	f8d9 3000 	ldr.w	r3, [r9]
 8006c5a:	900e      	str	r0, [sp, #56]	; 0x38
 8006c5c:	7c1b      	ldrb	r3, [r3, #16]
 8006c5e:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 8006c62:	f003 0303 	and.w	r3, r3, #3
 8006c66:	2b02      	cmp	r3, #2
 8006c68:	465f      	mov	r7, fp
 8006c6a:	f1c1 0808 	rsb	r8, r1, #8
 8006c6e:	fa46 f601 	asr.w	r6, r6, r1
 8006c72:	d020      	beq.n	8006cb6 <_DrawBitmap+0x352>
 8006c74:	2b03      	cmp	r3, #3
 8006c76:	d061      	beq.n	8006d3c <_DrawBitmap+0x3d8>
 8006c78:	2b01      	cmp	r3, #1
 8006c7a:	d05f      	beq.n	8006d3c <_DrawBitmap+0x3d8>
 8006c7c:	4652      	mov	r2, sl
 8006c7e:	4547      	cmp	r7, r8
 8006c80:	bf38      	it	cc
 8006c82:	46b8      	movcc	r8, r7
 8006c84:	ebc8 0707 	rsb	r7, r8, r7
 8006c88:	4643      	mov	r3, r8
 8006c8a:	4621      	mov	r1, r4
 8006c8c:	f006 0001 	and.w	r0, r6, #1
 8006c90:	3b01      	subs	r3, #1
 8006c92:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8006c96:	f841 0b04 	str.w	r0, [r1], #4
 8006c9a:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8006c9e:	d1f5      	bne.n	8006c8c <_DrawBitmap+0x328>
 8006ca0:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8006ca4:	2f00      	cmp	r7, #0
 8006ca6:	d06d      	beq.n	8006d84 <_DrawBitmap+0x420>
 8006ca8:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8006cac:	4988      	ldr	r1, [pc, #544]	; (8006ed0 <_DrawBitmap+0x56c>)
 8006cae:	f04f 0808 	mov.w	r8, #8
 8006cb2:	5cce      	ldrb	r6, [r1, r3]
 8006cb4:	e7e3      	b.n	8006c7e <_DrawBitmap+0x31a>
 8006cb6:	686b      	ldr	r3, [r5, #4]
 8006cb8:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8006cbc:	930b      	str	r3, [sp, #44]	; 0x2c
 8006cbe:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 8006cc2:	4547      	cmp	r7, r8
 8006cc4:	bf38      	it	cc
 8006cc6:	46b8      	movcc	r8, r7
 8006cc8:	ebc8 0707 	rsb	r7, r8, r7
 8006ccc:	f1bc 0f00 	cmp.w	ip, #0
 8006cd0:	d026      	beq.n	8006d20 <_DrawBitmap+0x3bc>
 8006cd2:	b91e      	cbnz	r6, 8006cdc <_DrawBitmap+0x378>
 8006cd4:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8006cd8:	44c1      	add	r9, r8
 8006cda:	e025      	b.n	8006d28 <_DrawBitmap+0x3c4>
 8006cdc:	07f0      	lsls	r0, r6, #31
 8006cde:	d50c      	bpl.n	8006cfa <_DrawBitmap+0x396>
 8006ce0:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8006ce4:	9a05      	ldr	r2, [sp, #20]
 8006ce6:	681b      	ldr	r3, [r3, #0]
 8006ce8:	f8cd c00c 	str.w	ip, [sp, #12]
 8006cec:	4660      	mov	r0, ip
 8006cee:	4649      	mov	r1, r9
 8006cf0:	4798      	blx	r3
 8006cf2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006cf4:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8006cf8:	6023      	str	r3, [r4, #0]
 8006cfa:	f1b8 0801 	subs.w	r8, r8, #1
 8006cfe:	f109 0901 	add.w	r9, r9, #1
 8006d02:	f104 0404 	add.w	r4, r4, #4
 8006d06:	d00f      	beq.n	8006d28 <_DrawBitmap+0x3c4>
 8006d08:	0876      	lsrs	r6, r6, #1
 8006d0a:	e7e2      	b.n	8006cd2 <_DrawBitmap+0x36e>
 8006d0c:	07f1      	lsls	r1, r6, #31
 8006d0e:	bf44      	itt	mi
 8006d10:	9b0b      	ldrmi	r3, [sp, #44]	; 0x2c
 8006d12:	6023      	strmi	r3, [r4, #0]
 8006d14:	f1b8 0801 	subs.w	r8, r8, #1
 8006d18:	f104 0404 	add.w	r4, r4, #4
 8006d1c:	d004      	beq.n	8006d28 <_DrawBitmap+0x3c4>
 8006d1e:	0876      	lsrs	r6, r6, #1
 8006d20:	2e00      	cmp	r6, #0
 8006d22:	d1f3      	bne.n	8006d0c <_DrawBitmap+0x3a8>
 8006d24:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8006d28:	b367      	cbz	r7, 8006d84 <_DrawBitmap+0x420>
 8006d2a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006d2c:	4a68      	ldr	r2, [pc, #416]	; (8006ed0 <_DrawBitmap+0x56c>)
 8006d2e:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8006d32:	9009      	str	r0, [sp, #36]	; 0x24
 8006d34:	5cd6      	ldrb	r6, [r2, r3]
 8006d36:	f04f 0808 	mov.w	r8, #8
 8006d3a:	e7c2      	b.n	8006cc2 <_DrawBitmap+0x35e>
 8006d3c:	6803      	ldr	r3, [r0, #0]
 8006d3e:	691b      	ldr	r3, [r3, #16]
 8006d40:	689b      	ldr	r3, [r3, #8]
 8006d42:	4798      	blx	r3
 8006d44:	4651      	mov	r1, sl
 8006d46:	4547      	cmp	r7, r8
 8006d48:	bf38      	it	cc
 8006d4a:	46b8      	movcc	r8, r7
 8006d4c:	ebc8 0707 	rsb	r7, r8, r7
 8006d50:	1d23      	adds	r3, r4, #4
 8006d52:	46c6      	mov	lr, r8
 8006d54:	07f2      	lsls	r2, r6, #31
 8006d56:	d504      	bpl.n	8006d62 <_DrawBitmap+0x3fe>
 8006d58:	f853 2c04 	ldr.w	r2, [r3, #-4]
 8006d5c:	4042      	eors	r2, r0
 8006d5e:	f843 2c04 	str.w	r2, [r3, #-4]
 8006d62:	f1be 0e01 	subs.w	lr, lr, #1
 8006d66:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8006d6a:	f103 0304 	add.w	r3, r3, #4
 8006d6e:	d1f1      	bne.n	8006d54 <_DrawBitmap+0x3f0>
 8006d70:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8006d74:	b137      	cbz	r7, 8006d84 <_DrawBitmap+0x420>
 8006d76:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8006d7a:	4a55      	ldr	r2, [pc, #340]	; (8006ed0 <_DrawBitmap+0x56c>)
 8006d7c:	f04f 0808 	mov.w	r8, #8
 8006d80:	5cd6      	ldrb	r6, [r2, r3]
 8006d82:	e7e0      	b.n	8006d46 <_DrawBitmap+0x3e2>
 8006d84:	a80e      	add	r0, sp, #56	; 0x38
 8006d86:	f004 fbb1 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8006d8a:	e177      	b.n	800707c <_DrawBitmap+0x718>
 8006d8c:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006d8e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006d90:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 8006d94:	f1c7 0604 	rsb	r6, r7, #4
 8006d98:	f89a 7000 	ldrb.w	r7, [sl]
 8006d9c:	409f      	lsls	r7, r3
 8006d9e:	4b4d      	ldr	r3, [pc, #308]	; (8006ed4 <_DrawBitmap+0x570>)
 8006da0:	681b      	ldr	r3, [r3, #0]
 8006da2:	7c1b      	ldrb	r3, [r3, #16]
 8006da4:	f003 0303 	and.w	r3, r3, #3
 8006da8:	2b01      	cmp	r3, #1
 8006daa:	b2f6      	uxtb	r6, r6
 8006dac:	b2ff      	uxtb	r7, r7
 8006dae:	d066      	beq.n	8006e7e <_DrawBitmap+0x51a>
 8006db0:	d308      	bcc.n	8006dc4 <_DrawBitmap+0x460>
 8006db2:	2b02      	cmp	r3, #2
 8006db4:	f040 8162 	bne.w	800707c <_DrawBitmap+0x718>
 8006db8:	9804      	ldr	r0, [sp, #16]
 8006dba:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 8006dbe:	46d8      	mov	r8, fp
 8006dc0:	9006      	str	r0, [sp, #24]
 8006dc2:	e03e      	b.n	8006e42 <_DrawBitmap+0x4de>
 8006dc4:	4652      	mov	r2, sl
 8006dc6:	465b      	mov	r3, fp
 8006dc8:	429e      	cmp	r6, r3
 8006dca:	bfc8      	it	gt
 8006dcc:	b2de      	uxtbgt	r6, r3
 8006dce:	1b9b      	subs	r3, r3, r6
 8006dd0:	4631      	mov	r1, r6
 8006dd2:	4620      	mov	r0, r4
 8006dd4:	ea4f 1c97 	mov.w	ip, r7, lsr #6
 8006dd8:	3901      	subs	r1, #1
 8006dda:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 8006dde:	f840 cb04 	str.w	ip, [r0], #4
 8006de2:	00bf      	lsls	r7, r7, #2
 8006de4:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8006de8:	b2ff      	uxtb	r7, r7
 8006dea:	d1f3      	bne.n	8006dd4 <_DrawBitmap+0x470>
 8006dec:	3e01      	subs	r6, #1
 8006dee:	b2f6      	uxtb	r6, r6
 8006df0:	3601      	adds	r6, #1
 8006df2:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 8006df6:	2b00      	cmp	r3, #0
 8006df8:	f000 8140 	beq.w	800707c <_DrawBitmap+0x718>
 8006dfc:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 8006e00:	2604      	movs	r6, #4
 8006e02:	e7e1      	b.n	8006dc8 <_DrawBitmap+0x464>
 8006e04:	9906      	ldr	r1, [sp, #24]
 8006e06:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 8006e0a:	4449      	add	r1, r9
 8006e0c:	d122      	bne.n	8006e54 <_DrawBitmap+0x4f0>
 8006e0e:	f109 0901 	add.w	r9, r9, #1
 8006e12:	fa5f f289 	uxtb.w	r2, r9
 8006e16:	00bf      	lsls	r7, r7, #2
 8006e18:	4296      	cmp	r6, r2
 8006e1a:	b2ff      	uxtb	r7, r7
 8006e1c:	d1f2      	bne.n	8006e04 <_DrawBitmap+0x4a0>
 8006e1e:	9f06      	ldr	r7, [sp, #24]
 8006e20:	3e01      	subs	r6, #1
 8006e22:	b2f6      	uxtb	r6, r6
 8006e24:	1c7b      	adds	r3, r7, #1
 8006e26:	1c72      	adds	r2, r6, #1
 8006e28:	199e      	adds	r6, r3, r6
 8006e2a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8006e2e:	9606      	str	r6, [sp, #24]
 8006e30:	f1b8 0f00 	cmp.w	r8, #0
 8006e34:	f000 8122 	beq.w	800707c <_DrawBitmap+0x718>
 8006e38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006e3a:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 8006e3e:	9309      	str	r3, [sp, #36]	; 0x24
 8006e40:	2604      	movs	r6, #4
 8006e42:	4546      	cmp	r6, r8
 8006e44:	bfc8      	it	gt
 8006e46:	fa5f f688 	uxtbgt.w	r6, r8
 8006e4a:	ebc6 0808 	rsb	r8, r6, r8
 8006e4e:	f04f 0900 	mov.w	r9, #0
 8006e52:	e7d7      	b.n	8006e04 <_DrawBitmap+0x4a0>
 8006e54:	09ba      	lsrs	r2, r7, #6
 8006e56:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8006e5a:	f844 2029 	str.w	r2, [r4, r9, lsl #2]
 8006e5e:	f1bc 0f00 	cmp.w	ip, #0
 8006e62:	d0d4      	beq.n	8006e0e <_DrawBitmap+0x4aa>
 8006e64:	f8dc 2008 	ldr.w	r2, [ip, #8]
 8006e68:	6812      	ldr	r2, [r2, #0]
 8006e6a:	920b      	str	r2, [sp, #44]	; 0x2c
 8006e6c:	4660      	mov	r0, ip
 8006e6e:	f8cd c00c 	str.w	ip, [sp, #12]
 8006e72:	9a05      	ldr	r2, [sp, #20]
 8006e74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006e76:	4798      	blx	r3
 8006e78:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8006e7c:	e7c7      	b.n	8006e0e <_DrawBitmap+0x4aa>
 8006e7e:	4650      	mov	r0, sl
 8006e80:	465b      	mov	r3, fp
 8006e82:	429e      	cmp	r6, r3
 8006e84:	bfc8      	it	gt
 8006e86:	b2de      	uxtbgt	r6, r3
 8006e88:	1b9b      	subs	r3, r3, r6
 8006e8a:	1d22      	adds	r2, r4, #4
 8006e8c:	46b4      	mov	ip, r6
 8006e8e:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 8006e92:	d005      	beq.n	8006ea0 <_DrawBitmap+0x53c>
 8006e94:	f852 1c04 	ldr.w	r1, [r2, #-4]
 8006e98:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 8006e9c:	f842 1c04 	str.w	r1, [r2, #-4]
 8006ea0:	f10c 3cff 	add.w	ip, ip, #4294967295
 8006ea4:	00bf      	lsls	r7, r7, #2
 8006ea6:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 8006eaa:	b2ff      	uxtb	r7, r7
 8006eac:	f102 0204 	add.w	r2, r2, #4
 8006eb0:	d1ed      	bne.n	8006e8e <_DrawBitmap+0x52a>
 8006eb2:	3e01      	subs	r6, #1
 8006eb4:	b2f6      	uxtb	r6, r6
 8006eb6:	3601      	adds	r6, #1
 8006eb8:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 8006ebc:	2b00      	cmp	r3, #0
 8006ebe:	f000 80dd 	beq.w	800707c <_DrawBitmap+0x718>
 8006ec2:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 8006ec6:	2604      	movs	r6, #4
 8006ec8:	e7db      	b.n	8006e82 <_DrawBitmap+0x51e>
 8006eca:	bf00      	nop
 8006ecc:	0800ff3c 	.word	0x0800ff3c
 8006ed0:	08011f3c 	.word	0x08011f3c
 8006ed4:	200000b8 	.word	0x200000b8
 8006ed8:	4a71      	ldr	r2, [pc, #452]	; (80070a0 <_DrawBitmap+0x73c>)
 8006eda:	f89a 3000 	ldrb.w	r3, [sl]
 8006ede:	6812      	ldr	r2, [r2, #0]
 8006ee0:	980d      	ldr	r0, [sp, #52]	; 0x34
 8006ee2:	7c12      	ldrb	r2, [r2, #16]
 8006ee4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8006ee6:	f002 0203 	and.w	r2, r2, #3
 8006eea:	4083      	lsls	r3, r0
 8006eec:	2a01      	cmp	r2, #1
 8006eee:	b2de      	uxtb	r6, r3
 8006ef0:	f000 809c 	beq.w	800702c <_DrawBitmap+0x6c8>
 8006ef4:	d302      	bcc.n	8006efc <_DrawBitmap+0x598>
 8006ef6:	2a02      	cmp	r2, #2
 8006ef8:	d035      	beq.n	8006f66 <_DrawBitmap+0x602>
 8006efa:	e0bf      	b.n	800707c <_DrawBitmap+0x718>
 8006efc:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006efe:	b15f      	cbz	r7, 8006f18 <_DrawBitmap+0x5b4>
 8006f00:	0936      	lsrs	r6, r6, #4
 8006f02:	f10a 0201 	add.w	r2, sl, #1
 8006f06:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8006f0a:	6023      	str	r3, [r4, #0]
 8006f0c:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8006f10:	9c08      	ldr	r4, [sp, #32]
 8006f12:	f10b 33ff 	add.w	r3, fp, #4294967295
 8006f16:	e001      	b.n	8006f1c <_DrawBitmap+0x5b8>
 8006f18:	465b      	mov	r3, fp
 8006f1a:	4652      	mov	r2, sl
 8006f1c:	2b01      	cmp	r3, #1
 8006f1e:	dd1a      	ble.n	8006f56 <_DrawBitmap+0x5f2>
 8006f20:	1058      	asrs	r0, r3, #1
 8006f22:	f104 0108 	add.w	r1, r4, #8
 8006f26:	f003 0301 	and.w	r3, r3, #1
 8006f2a:	eb02 0800 	add.w	r8, r2, r0
 8006f2e:	ea4f 1c16 	mov.w	ip, r6, lsr #4
 8006f32:	f006 060f 	and.w	r6, r6, #15
 8006f36:	f855 702c 	ldr.w	r7, [r5, ip, lsl #2]
 8006f3a:	f841 7c08 	str.w	r7, [r1, #-8]
 8006f3e:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8006f42:	f841 6c04 	str.w	r6, [r1, #-4]
 8006f46:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8006f4a:	4542      	cmp	r2, r8
 8006f4c:	f101 0108 	add.w	r1, r1, #8
 8006f50:	d1ed      	bne.n	8006f2e <_DrawBitmap+0x5ca>
 8006f52:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
 8006f56:	2b00      	cmp	r3, #0
 8006f58:	f000 8090 	beq.w	800707c <_DrawBitmap+0x718>
 8006f5c:	0936      	lsrs	r6, r6, #4
 8006f5e:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8006f62:	6023      	str	r3, [r4, #0]
 8006f64:	e08a      	b.n	800707c <_DrawBitmap+0x718>
 8006f66:	981e      	ldr	r0, [sp, #120]	; 0x78
 8006f68:	b1c0      	cbz	r0, 8006f9c <_DrawBitmap+0x638>
 8006f6a:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 8006f6e:	d00a      	beq.n	8006f86 <_DrawBitmap+0x622>
 8006f70:	0936      	lsrs	r6, r6, #4
 8006f72:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8006f76:	6023      	str	r3, [r4, #0]
 8006f78:	b12f      	cbz	r7, 8006f86 <_DrawBitmap+0x622>
 8006f7a:	68bb      	ldr	r3, [r7, #8]
 8006f7c:	9904      	ldr	r1, [sp, #16]
 8006f7e:	681b      	ldr	r3, [r3, #0]
 8006f80:	9a05      	ldr	r2, [sp, #20]
 8006f82:	4638      	mov	r0, r7
 8006f84:	4798      	blx	r3
 8006f86:	9904      	ldr	r1, [sp, #16]
 8006f88:	9c08      	ldr	r4, [sp, #32]
 8006f8a:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8006f8e:	f101 0801 	add.w	r8, r1, #1
 8006f92:	f10b 3cff 	add.w	ip, fp, #4294967295
 8006f96:	f10a 0901 	add.w	r9, sl, #1
 8006f9a:	e011      	b.n	8006fc0 <_DrawBitmap+0x65c>
 8006f9c:	46dc      	mov	ip, fp
 8006f9e:	46d1      	mov	r9, sl
 8006fa0:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8006fa4:	e00c      	b.n	8006fc0 <_DrawBitmap+0x65c>
 8006fa6:	f016 0ff0 	tst.w	r6, #240	; 0xf0
 8006faa:	d10d      	bne.n	8006fc8 <_DrawBitmap+0x664>
 8006fac:	f016 060f 	ands.w	r6, r6, #15
 8006fb0:	d11b      	bne.n	8006fea <_DrawBitmap+0x686>
 8006fb2:	f819 6f01 	ldrb.w	r6, [r9, #1]!
 8006fb6:	3408      	adds	r4, #8
 8006fb8:	f108 0802 	add.w	r8, r8, #2
 8006fbc:	f1ac 0c02 	sub.w	ip, ip, #2
 8006fc0:	f1bc 0f01 	cmp.w	ip, #1
 8006fc4:	dcef      	bgt.n	8006fa6 <_DrawBitmap+0x642>
 8006fc6:	e021      	b.n	800700c <_DrawBitmap+0x6a8>
 8006fc8:	0933      	lsrs	r3, r6, #4
 8006fca:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8006fce:	6023      	str	r3, [r4, #0]
 8006fd0:	2f00      	cmp	r7, #0
 8006fd2:	d0eb      	beq.n	8006fac <_DrawBitmap+0x648>
 8006fd4:	68bb      	ldr	r3, [r7, #8]
 8006fd6:	9a05      	ldr	r2, [sp, #20]
 8006fd8:	681b      	ldr	r3, [r3, #0]
 8006fda:	f8cd c00c 	str.w	ip, [sp, #12]
 8006fde:	4638      	mov	r0, r7
 8006fe0:	4641      	mov	r1, r8
 8006fe2:	4798      	blx	r3
 8006fe4:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8006fe8:	e7e0      	b.n	8006fac <_DrawBitmap+0x648>
 8006fea:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8006fee:	6063      	str	r3, [r4, #4]
 8006ff0:	2f00      	cmp	r7, #0
 8006ff2:	d0de      	beq.n	8006fb2 <_DrawBitmap+0x64e>
 8006ff4:	68bb      	ldr	r3, [r7, #8]
 8006ff6:	9a05      	ldr	r2, [sp, #20]
 8006ff8:	681b      	ldr	r3, [r3, #0]
 8006ffa:	f8cd c00c 	str.w	ip, [sp, #12]
 8006ffe:	4638      	mov	r0, r7
 8007000:	f108 0101 	add.w	r1, r8, #1
 8007004:	4798      	blx	r3
 8007006:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800700a:	e7d2      	b.n	8006fb2 <_DrawBitmap+0x64e>
 800700c:	f1bc 0f00 	cmp.w	ip, #0
 8007010:	d034      	beq.n	800707c <_DrawBitmap+0x718>
 8007012:	0936      	lsrs	r6, r6, #4
 8007014:	d032      	beq.n	800707c <_DrawBitmap+0x718>
 8007016:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800701a:	6023      	str	r3, [r4, #0]
 800701c:	b377      	cbz	r7, 800707c <_DrawBitmap+0x718>
 800701e:	68bb      	ldr	r3, [r7, #8]
 8007020:	9a05      	ldr	r2, [sp, #20]
 8007022:	681b      	ldr	r3, [r3, #0]
 8007024:	4638      	mov	r0, r7
 8007026:	4641      	mov	r1, r8
 8007028:	4798      	blx	r3
 800702a:	e027      	b.n	800707c <_DrawBitmap+0x718>
 800702c:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800702e:	f1c7 0302 	rsb	r3, r7, #2
 8007032:	b2db      	uxtb	r3, r3
 8007034:	4657      	mov	r7, sl
 8007036:	465a      	mov	r2, fp
 8007038:	4293      	cmp	r3, r2
 800703a:	bfc8      	it	gt
 800703c:	b2d3      	uxtbgt	r3, r2
 800703e:	1ad2      	subs	r2, r2, r3
 8007040:	1d20      	adds	r0, r4, #4
 8007042:	469c      	mov	ip, r3
 8007044:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 8007048:	d005      	beq.n	8007056 <_DrawBitmap+0x6f2>
 800704a:	f850 1c04 	ldr.w	r1, [r0, #-4]
 800704e:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 8007052:	f840 1c04 	str.w	r1, [r0, #-4]
 8007056:	f10c 3cff 	add.w	ip, ip, #4294967295
 800705a:	0136      	lsls	r6, r6, #4
 800705c:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 8007060:	b2f6      	uxtb	r6, r6
 8007062:	f100 0004 	add.w	r0, r0, #4
 8007066:	d1ed      	bne.n	8007044 <_DrawBitmap+0x6e0>
 8007068:	3b01      	subs	r3, #1
 800706a:	b2db      	uxtb	r3, r3
 800706c:	3301      	adds	r3, #1
 800706e:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8007072:	b11a      	cbz	r2, 800707c <_DrawBitmap+0x718>
 8007074:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8007078:	2302      	movs	r3, #2
 800707a:	e7dd      	b.n	8007038 <_DrawBitmap+0x6d4>
 800707c:	9b05      	ldr	r3, [sp, #20]
 800707e:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8007080:	3301      	adds	r3, #1
 8007082:	44ba      	add	sl, r7
 8007084:	9305      	str	r3, [sp, #20]
 8007086:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8007088:	9b08      	ldr	r3, [sp, #32]
 800708a:	443b      	add	r3, r7
 800708c:	9308      	str	r3, [sp, #32]
 800708e:	e5c3      	b.n	8006c18 <_DrawBitmap+0x2b4>
 8007090:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007092:	b113      	cbz	r3, 800709a <_DrawBitmap+0x736>
 8007094:	a80f      	add	r0, sp, #60	; 0x3c
 8007096:	f004 fa29 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800709a:	b011      	add	sp, #68	; 0x44
 800709c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80070a0:	200000b8 	.word	0x200000b8

080070a4 <GUI_MEMDEV__WriteToActiveAt>:
 80070a4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80070a8:	460e      	mov	r6, r1
 80070aa:	4690      	mov	r8, r2
 80070ac:	4607      	mov	r7, r0
 80070ae:	f004 fa0f 	bl	800b4d0 <GUI_ALLOC_LockH>
 80070b2:	6803      	ldr	r3, [r0, #0]
 80070b4:	ac02      	add	r4, sp, #8
 80070b6:	68db      	ldr	r3, [r3, #12]
 80070b8:	f844 0d04 	str.w	r0, [r4, #-4]!
 80070bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80070be:	2000      	movs	r0, #0
 80070c0:	2116      	movs	r1, #22
 80070c2:	4798      	blx	r3
 80070c4:	4605      	mov	r5, r0
 80070c6:	4620      	mov	r0, r4
 80070c8:	f004 fa10 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80070cc:	b11d      	cbz	r5, 80070d6 <GUI_MEMDEV__WriteToActiveAt+0x32>
 80070ce:	4638      	mov	r0, r7
 80070d0:	4631      	mov	r1, r6
 80070d2:	4642      	mov	r2, r8
 80070d4:	47a8      	blx	r5
 80070d6:	b002      	add	sp, #8
 80070d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080070dc <GUI_MEMDEV__CreateFixed>:
 80070dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80070e0:	4e3e      	ldr	r6, [pc, #248]	; (80071dc <GUI_MEMDEV__CreateFixed+0x100>)
 80070e2:	b087      	sub	sp, #28
 80070e4:	461d      	mov	r5, r3
 80070e6:	6833      	ldr	r3, [r6, #0]
 80070e8:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80070ea:	7c5b      	ldrb	r3, [r3, #17]
 80070ec:	4683      	mov	fp, r0
 80070ee:	468a      	mov	sl, r1
 80070f0:	4690      	mov	r8, r2
 80070f2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80070f4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80070f6:	2200      	movs	r2, #0
 80070f8:	f003 fa3e 	bl	800a578 <GUI_DEVICE_Create>
 80070fc:	4604      	mov	r4, r0
 80070fe:	2800      	cmp	r0, #0
 8007100:	d033      	beq.n	800716a <GUI_MEMDEV__CreateFixed+0x8e>
 8007102:	6903      	ldr	r3, [r0, #16]
 8007104:	689b      	ldr	r3, [r3, #8]
 8007106:	4798      	blx	r3
 8007108:	f001 fae1 	bl	80086ce <LCD__GetBPPDevice>
 800710c:	fb08 f600 	mul.w	r6, r8, r0
 8007110:	9003      	str	r0, [sp, #12]
 8007112:	3607      	adds	r6, #7
 8007114:	f004 fb1c 	bl	800b750 <GUI_ALLOC_RequestSize>
 8007118:	f017 0901 	ands.w	r9, r7, #1
 800711c:	ea4f 06d6 	mov.w	r6, r6, lsr #3
 8007120:	d104      	bne.n	800712c <GUI_MEMDEV__CreateFixed+0x50>
 8007122:	2304      	movs	r3, #4
 8007124:	fb90 f0f3 	sdiv	r0, r0, r3
 8007128:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800712c:	2d00      	cmp	r5, #0
 800712e:	dc09      	bgt.n	8007144 <GUI_MEMDEV__CreateFixed+0x68>
 8007130:	b11e      	cbz	r6, 800713a <GUI_MEMDEV__CreateFixed+0x5e>
 8007132:	3818      	subs	r0, #24
 8007134:	fbb0 f0f6 	udiv	r0, r0, r6
 8007138:	e000      	b.n	800713c <GUI_MEMDEV__CreateFixed+0x60>
 800713a:	4630      	mov	r0, r6
 800713c:	426d      	negs	r5, r5
 800713e:	42a8      	cmp	r0, r5
 8007140:	bfb8      	it	lt
 8007142:	4605      	movlt	r5, r0
 8007144:	f1b9 0f00 	cmp.w	r9, #0
 8007148:	d109      	bne.n	800715e <GUI_MEMDEV__CreateFixed+0x82>
 800714a:	f8cd 9000 	str.w	r9, [sp]
 800714e:	4658      	mov	r0, fp
 8007150:	4651      	mov	r1, sl
 8007152:	4642      	mov	r2, r8
 8007154:	462b      	mov	r3, r5
 8007156:	f006 fc0d 	bl	800d974 <GUI_USAGE_BM_Create>
 800715a:	4607      	mov	r7, r0
 800715c:	e000      	b.n	8007160 <GUI_MEMDEV__CreateFixed+0x84>
 800715e:	2700      	movs	r7, #0
 8007160:	2d00      	cmp	r5, #0
 8007162:	dc04      	bgt.n	800716e <GUI_MEMDEV__CreateFixed+0x92>
 8007164:	4620      	mov	r0, r4
 8007166:	f003 fa05 	bl	800a574 <GUI_DEVICE_Delete>
 800716a:	2000      	movs	r0, #0
 800716c:	e032      	b.n	80071d4 <GUI_MEMDEV__CreateFixed+0xf8>
 800716e:	fb06 f005 	mul.w	r0, r6, r5
 8007172:	3018      	adds	r0, #24
 8007174:	f1b9 0f00 	cmp.w	r9, #0
 8007178:	d002      	beq.n	8007180 <GUI_MEMDEV__CreateFixed+0xa4>
 800717a:	f004 fb75 	bl	800b868 <GUI_ALLOC_AllocNoInit>
 800717e:	e001      	b.n	8007184 <GUI_MEMDEV__CreateFixed+0xa8>
 8007180:	f004 fba0 	bl	800b8c4 <GUI_ALLOC_AllocZero>
 8007184:	4681      	mov	r9, r0
 8007186:	b940      	cbnz	r0, 800719a <GUI_MEMDEV__CreateFixed+0xbe>
 8007188:	4620      	mov	r0, r4
 800718a:	f003 f9f3 	bl	800a574 <GUI_DEVICE_Delete>
 800718e:	2f00      	cmp	r7, #0
 8007190:	d0eb      	beq.n	800716a <GUI_MEMDEV__CreateFixed+0x8e>
 8007192:	4638      	mov	r0, r7
 8007194:	f004 f9d6 	bl	800b544 <GUI_ALLOC_Free>
 8007198:	e01b      	b.n	80071d2 <GUI_MEMDEV__CreateFixed+0xf6>
 800719a:	f004 f999 	bl	800b4d0 <GUI_ALLOC_LockH>
 800719e:	4603      	mov	r3, r0
 80071a0:	a806      	add	r0, sp, #24
 80071a2:	9a03      	ldr	r2, [sp, #12]
 80071a4:	f840 3d04 	str.w	r3, [r0, #-4]!
 80071a8:	611a      	str	r2, [r3, #16]
 80071aa:	601c      	str	r4, [r3, #0]
 80071ac:	f8a3 b004 	strh.w	fp, [r3, #4]
 80071b0:	f8a3 a006 	strh.w	sl, [r3, #6]
 80071b4:	f8a3 8008 	strh.w	r8, [r3, #8]
 80071b8:	815d      	strh	r5, [r3, #10]
 80071ba:	60de      	str	r6, [r3, #12]
 80071bc:	615f      	str	r7, [r3, #20]
 80071be:	f004 f995 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80071c2:	4a06      	ldr	r2, [pc, #24]	; (80071dc <GUI_MEMDEV__CreateFixed+0x100>)
 80071c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80071c6:	6123      	str	r3, [r4, #16]
 80071c8:	6813      	ldr	r3, [r2, #0]
 80071ca:	f8c4 9008 	str.w	r9, [r4, #8]
 80071ce:	7c5b      	ldrb	r3, [r3, #17]
 80071d0:	61a3      	str	r3, [r4, #24]
 80071d2:	4648      	mov	r0, r9
 80071d4:	b007      	add	sp, #28
 80071d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071da:	bf00      	nop
 80071dc:	200000b8 	.word	0x200000b8

080071e0 <GUI_MEMDEV_GetBitsPerPixel>:
 80071e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80071e2:	4605      	mov	r5, r0
 80071e4:	b170      	cbz	r0, 8007204 <GUI_MEMDEV_GetBitsPerPixel+0x24>
 80071e6:	f004 f973 	bl	800b4d0 <GUI_ALLOC_LockH>
 80071ea:	6803      	ldr	r3, [r0, #0]
 80071ec:	ac02      	add	r4, sp, #8
 80071ee:	691b      	ldr	r3, [r3, #16]
 80071f0:	f844 0d04 	str.w	r0, [r4, #-4]!
 80071f4:	689b      	ldr	r3, [r3, #8]
 80071f6:	4798      	blx	r3
 80071f8:	f001 fa69 	bl	80086ce <LCD__GetBPPDevice>
 80071fc:	4605      	mov	r5, r0
 80071fe:	4620      	mov	r0, r4
 8007200:	f004 f974 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8007204:	4628      	mov	r0, r5
 8007206:	b003      	add	sp, #12
 8007208:	bd30      	pop	{r4, r5, pc}
	...

0800720c <GUI_MEMDEV_Delete>:
 800720c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800720e:	4604      	mov	r4, r0
 8007210:	b1d0      	cbz	r0, 8007248 <GUI_MEMDEV_Delete+0x3c>
 8007212:	4b0e      	ldr	r3, [pc, #56]	; (800724c <GUI_MEMDEV_Delete+0x40>)
 8007214:	681b      	ldr	r3, [r3, #0]
 8007216:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007218:	4283      	cmp	r3, r0
 800721a:	d101      	bne.n	8007220 <GUI_MEMDEV_Delete+0x14>
 800721c:	f003 fcec 	bl	800abf8 <GUI_SelectLCD>
 8007220:	4620      	mov	r0, r4
 8007222:	f004 f955 	bl	800b4d0 <GUI_ALLOC_LockH>
 8007226:	9001      	str	r0, [sp, #4]
 8007228:	6940      	ldr	r0, [r0, #20]
 800722a:	b108      	cbz	r0, 8007230 <GUI_MEMDEV_Delete+0x24>
 800722c:	f006 fbce 	bl	800d9cc <GUI_USAGE_DecUseCnt>
 8007230:	ad02      	add	r5, sp, #8
 8007232:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8007236:	6818      	ldr	r0, [r3, #0]
 8007238:	f003 f99c 	bl	800a574 <GUI_DEVICE_Delete>
 800723c:	4628      	mov	r0, r5
 800723e:	f004 f955 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8007242:	4620      	mov	r0, r4
 8007244:	f004 f97e 	bl	800b544 <GUI_ALLOC_Free>
 8007248:	b003      	add	sp, #12
 800724a:	bd30      	pop	{r4, r5, pc}
 800724c:	200000b8 	.word	0x200000b8

08007250 <GUI_MEMDEV_CreateEx>:
 8007250:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007254:	469a      	mov	sl, r3
 8007256:	4b19      	ldr	r3, [pc, #100]	; (80072bc <GUI_MEMDEV_CreateEx+0x6c>)
 8007258:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800725a:	681b      	ldr	r3, [r3, #0]
 800725c:	4607      	mov	r7, r0
 800725e:	7c58      	ldrb	r0, [r3, #17]
 8007260:	4b17      	ldr	r3, [pc, #92]	; (80072c0 <GUI_MEMDEV_CreateEx+0x70>)
 8007262:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8007266:	4688      	mov	r8, r1
 8007268:	4691      	mov	r9, r2
 800726a:	68e3      	ldr	r3, [r4, #12]
 800726c:	681b      	ldr	r3, [r3, #0]
 800726e:	2b04      	cmp	r3, #4
 8007270:	d006      	beq.n	8007280 <GUI_MEMDEV_CreateEx+0x30>
 8007272:	6824      	ldr	r4, [r4, #0]
 8007274:	2c00      	cmp	r4, #0
 8007276:	d1f8      	bne.n	800726a <GUI_MEMDEV_CreateEx+0x1a>
 8007278:	f003 f96c 	bl	800a554 <GUI_DEVICE__GetpDriver>
 800727c:	4604      	mov	r4, r0
 800727e:	b130      	cbz	r0, 800728e <GUI_MEMDEV_CreateEx+0x3e>
 8007280:	68e3      	ldr	r3, [r4, #12]
 8007282:	4620      	mov	r0, r4
 8007284:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007286:	2101      	movs	r1, #1
 8007288:	4798      	blx	r3
 800728a:	4606      	mov	r6, r0
 800728c:	b908      	cbnz	r0, 8007292 <GUI_MEMDEV_CreateEx+0x42>
 800728e:	2000      	movs	r0, #0
 8007290:	e010      	b.n	80072b4 <GUI_MEMDEV_CreateEx+0x64>
 8007292:	6924      	ldr	r4, [r4, #16]
 8007294:	68a3      	ldr	r3, [r4, #8]
 8007296:	4798      	blx	r3
 8007298:	3001      	adds	r0, #1
 800729a:	bf04      	itt	eq
 800729c:	f045 0501 	orreq.w	r5, r5, #1
 80072a0:	4c08      	ldreq	r4, [pc, #32]	; (80072c4 <GUI_MEMDEV_CreateEx+0x74>)
 80072a2:	9402      	str	r4, [sp, #8]
 80072a4:	e88d 0060 	stmia.w	sp, {r5, r6}
 80072a8:	4638      	mov	r0, r7
 80072aa:	4641      	mov	r1, r8
 80072ac:	464a      	mov	r2, r9
 80072ae:	4653      	mov	r3, sl
 80072b0:	f7ff ff14 	bl	80070dc <GUI_MEMDEV__CreateFixed>
 80072b4:	b004      	add	sp, #16
 80072b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80072ba:	bf00      	nop
 80072bc:	200000b8 	.word	0x200000b8
 80072c0:	20002d28 	.word	0x20002d28
 80072c4:	080120d4 	.word	0x080120d4

080072c8 <GUI_MEMDEV_Select>:
 80072c8:	4b11      	ldr	r3, [pc, #68]	; (8007310 <GUI_MEMDEV_Select+0x48>)
 80072ca:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80072cc:	681a      	ldr	r2, [r3, #0]
 80072ce:	4604      	mov	r4, r0
 80072d0:	6e16      	ldr	r6, [r2, #96]	; 0x60
 80072d2:	461f      	mov	r7, r3
 80072d4:	b910      	cbnz	r0, 80072dc <GUI_MEMDEV_Select+0x14>
 80072d6:	f003 fc8f 	bl	800abf8 <GUI_SelectLCD>
 80072da:	e016      	b.n	800730a <GUI_MEMDEV_Select+0x42>
 80072dc:	b10e      	cbz	r6, 80072e2 <GUI_MEMDEV_Select+0x1a>
 80072de:	f003 fc8b 	bl	800abf8 <GUI_SelectLCD>
 80072e2:	f7fe ff31 	bl	8006148 <WM_Deactivate>
 80072e6:	4620      	mov	r0, r4
 80072e8:	f004 f8f2 	bl	800b4d0 <GUI_ALLOC_LockH>
 80072ec:	ad02      	add	r5, sp, #8
 80072ee:	683b      	ldr	r3, [r7, #0]
 80072f0:	f845 0d04 	str.w	r0, [r5, #-4]!
 80072f4:	661c      	str	r4, [r3, #96]	; 0x60
 80072f6:	6800      	ldr	r0, [r0, #0]
 80072f8:	f003 f97e 	bl	800a5f8 <GUI_DEVICE_Link>
 80072fc:	4628      	mov	r0, r5
 80072fe:	f004 f8f5 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8007302:	f001 f89b 	bl	800843c <LCD_UpdateColorIndices>
 8007306:	f001 fca3 	bl	8008c50 <LCD_SetClipRectMax>
 800730a:	4630      	mov	r0, r6
 800730c:	b003      	add	sp, #12
 800730e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007310:	200000b8 	.word	0x200000b8

08007314 <GUI_MEMDEV_CopyToLCDAt>:
 8007314:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007318:	460c      	mov	r4, r1
 800731a:	b085      	sub	sp, #20
 800731c:	4615      	mov	r5, r2
 800731e:	4606      	mov	r6, r0
 8007320:	2800      	cmp	r0, #0
 8007322:	d041      	beq.n	80073a8 <GUI_MEMDEV_CopyToLCDAt+0x94>
 8007324:	2000      	movs	r0, #0
 8007326:	f003 fc74 	bl	800ac12 <GUI_SetDrawMode>
 800732a:	4b21      	ldr	r3, [pc, #132]	; (80073b0 <GUI_MEMDEV_CopyToLCDAt+0x9c>)
 800732c:	681b      	ldr	r3, [r3, #0]
 800732e:	4607      	mov	r7, r0
 8007330:	4630      	mov	r0, r6
 8007332:	f8d3 8060 	ldr.w	r8, [r3, #96]	; 0x60
 8007336:	f004 f8cb 	bl	800b4d0 <GUI_ALLOC_LockH>
 800733a:	6803      	ldr	r3, [r0, #0]
 800733c:	9001      	str	r0, [sp, #4]
 800733e:	6998      	ldr	r0, [r3, #24]
 8007340:	f002 fab4 	bl	80098ac <GUI_SelectLayer>
 8007344:	4b1b      	ldr	r3, [pc, #108]	; (80073b4 <GUI_MEMDEV_CopyToLCDAt+0xa0>)
 8007346:	429c      	cmp	r4, r3
 8007348:	9b01      	ldr	r3, [sp, #4]
 800734a:	bf04      	itt	eq
 800734c:	f9b3 4004 	ldrsheq.w	r4, [r3, #4]
 8007350:	f9b3 5006 	ldrsheq.w	r5, [r3, #6]
 8007354:	891a      	ldrh	r2, [r3, #8]
 8007356:	895b      	ldrh	r3, [r3, #10]
 8007358:	f8ad 4008 	strh.w	r4, [sp, #8]
 800735c:	3a01      	subs	r2, #1
 800735e:	3b01      	subs	r3, #1
 8007360:	4422      	add	r2, r4
 8007362:	442b      	add	r3, r5
 8007364:	4681      	mov	r9, r0
 8007366:	f8ad 200c 	strh.w	r2, [sp, #12]
 800736a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800736e:	f8ad 500a 	strh.w	r5, [sp, #10]
 8007372:	f7fe fee1 	bl	8006138 <WM_Activate>
 8007376:	a801      	add	r0, sp, #4
 8007378:	f004 f8b8 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800737c:	a802      	add	r0, sp, #8
 800737e:	f7fe fd2b 	bl	8005dd8 <WM__InitIVRSearch>
 8007382:	b948      	cbnz	r0, 8007398 <GUI_MEMDEV_CopyToLCDAt+0x84>
 8007384:	4648      	mov	r0, r9
 8007386:	f002 fa91 	bl	80098ac <GUI_SelectLayer>
 800738a:	4640      	mov	r0, r8
 800738c:	f7ff ff9c 	bl	80072c8 <GUI_MEMDEV_Select>
 8007390:	4638      	mov	r0, r7
 8007392:	f003 fc3e 	bl	800ac12 <GUI_SetDrawMode>
 8007396:	e007      	b.n	80073a8 <GUI_MEMDEV_CopyToLCDAt+0x94>
 8007398:	4630      	mov	r0, r6
 800739a:	4621      	mov	r1, r4
 800739c:	462a      	mov	r2, r5
 800739e:	f005 fdb5 	bl	800cf0c <GUI_MEMDEV__WriteToActiveOpaque>
 80073a2:	f7fe fc57 	bl	8005c54 <WM__GetNextIVR>
 80073a6:	e7ec      	b.n	8007382 <GUI_MEMDEV_CopyToLCDAt+0x6e>
 80073a8:	b005      	add	sp, #20
 80073aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80073ae:	bf00      	nop
 80073b0:	200000b8 	.word	0x200000b8
 80073b4:	fffff001 	.word	0xfffff001

080073b8 <GUI_MEMDEV_CopyToLCD>:
 80073b8:	4901      	ldr	r1, [pc, #4]	; (80073c0 <GUI_MEMDEV_CopyToLCD+0x8>)
 80073ba:	460a      	mov	r2, r1
 80073bc:	f7ff bfaa 	b.w	8007314 <GUI_MEMDEV_CopyToLCDAt>
 80073c0:	fffff001 	.word	0xfffff001

080073c4 <_SetPhysRAMAddr>:
 80073c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80073c6:	4604      	mov	r4, r0
 80073c8:	460e      	mov	r6, r1
 80073ca:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80073ce:	212a      	movs	r1, #42	; 0x2a
 80073d0:	4615      	mov	r5, r2
 80073d2:	4798      	blx	r3
 80073d4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80073d6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80073da:	4431      	add	r1, r6
 80073dc:	4620      	mov	r0, r4
 80073de:	f3c1 210f 	ubfx	r1, r1, #8, #16
 80073e2:	4798      	blx	r3
 80073e4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80073e6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80073ea:	b2b7      	uxth	r7, r6
 80073ec:	4439      	add	r1, r7
 80073ee:	4620      	mov	r0, r4
 80073f0:	b2c9      	uxtb	r1, r1
 80073f2:	4798      	blx	r3
 80073f4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80073f6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80073fa:	4431      	add	r1, r6
 80073fc:	4620      	mov	r0, r4
 80073fe:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8007402:	4798      	blx	r3
 8007404:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8007406:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800740a:	4439      	add	r1, r7
 800740c:	4620      	mov	r0, r4
 800740e:	b2c9      	uxtb	r1, r1
 8007410:	4798      	blx	r3
 8007412:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8007416:	4620      	mov	r0, r4
 8007418:	212b      	movs	r1, #43	; 0x2b
 800741a:	4798      	blx	r3
 800741c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800741e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007422:	4429      	add	r1, r5
 8007424:	4620      	mov	r0, r4
 8007426:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800742a:	4798      	blx	r3
 800742c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800742e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007432:	b2ae      	uxth	r6, r5
 8007434:	4431      	add	r1, r6
 8007436:	4620      	mov	r0, r4
 8007438:	b2c9      	uxtb	r1, r1
 800743a:	4798      	blx	r3
 800743c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800743e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007442:	4429      	add	r1, r5
 8007444:	4620      	mov	r0, r4
 8007446:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800744a:	4798      	blx	r3
 800744c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800744e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007452:	4431      	add	r1, r6
 8007454:	4620      	mov	r0, r4
 8007456:	b2c9      	uxtb	r1, r1
 8007458:	4798      	blx	r3
 800745a:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800745e:	4620      	mov	r0, r4
 8007460:	212c      	movs	r1, #44	; 0x2c
 8007462:	4798      	blx	r3
 8007464:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007466 <_SetRect>:
 8007466:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800746a:	4604      	mov	r4, r0
 800746c:	4688      	mov	r8, r1
 800746e:	461f      	mov	r7, r3
 8007470:	212a      	movs	r1, #42	; 0x2a
 8007472:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 8007476:	9d06      	ldr	r5, [sp, #24]
 8007478:	4616      	mov	r6, r2
 800747a:	4798      	blx	r3
 800747c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800747e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007482:	4441      	add	r1, r8
 8007484:	4620      	mov	r0, r4
 8007486:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800748a:	4798      	blx	r3
 800748c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800748e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007492:	4441      	add	r1, r8
 8007494:	4620      	mov	r0, r4
 8007496:	b2c9      	uxtb	r1, r1
 8007498:	4798      	blx	r3
 800749a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800749c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80074a0:	4439      	add	r1, r7
 80074a2:	4620      	mov	r0, r4
 80074a4:	f3c1 210f 	ubfx	r1, r1, #8, #16
 80074a8:	4798      	blx	r3
 80074aa:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80074ac:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80074b0:	4439      	add	r1, r7
 80074b2:	4620      	mov	r0, r4
 80074b4:	b2c9      	uxtb	r1, r1
 80074b6:	4798      	blx	r3
 80074b8:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 80074bc:	4620      	mov	r0, r4
 80074be:	212b      	movs	r1, #43	; 0x2b
 80074c0:	4798      	blx	r3
 80074c2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80074c4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80074c8:	4431      	add	r1, r6
 80074ca:	4620      	mov	r0, r4
 80074cc:	f3c1 210f 	ubfx	r1, r1, #8, #16
 80074d0:	4798      	blx	r3
 80074d2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80074d4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80074d8:	4431      	add	r1, r6
 80074da:	4620      	mov	r0, r4
 80074dc:	b2c9      	uxtb	r1, r1
 80074de:	4798      	blx	r3
 80074e0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80074e2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80074e6:	4429      	add	r1, r5
 80074e8:	4620      	mov	r0, r4
 80074ea:	f3c1 210f 	ubfx	r1, r1, #8, #16
 80074ee:	4798      	blx	r3
 80074f0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80074f2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80074f6:	4429      	add	r1, r5
 80074f8:	4620      	mov	r0, r4
 80074fa:	b2c9      	uxtb	r1, r1
 80074fc:	4798      	blx	r3
 80074fe:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8007502:	4620      	mov	r0, r4
 8007504:	212c      	movs	r1, #44	; 0x2c
 8007506:	4798      	blx	r3
 8007508:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800750c <_SetOrientation>:
 800750c:	b513      	push	{r0, r1, r4, lr}
 800750e:	4a0d      	ldr	r2, [pc, #52]	; (8007544 <_SetOrientation+0x38>)
 8007510:	4604      	mov	r4, r0
 8007512:	6851      	ldr	r1, [r2, #4]
 8007514:	6810      	ldr	r0, [r2, #0]
 8007516:	466b      	mov	r3, sp
 8007518:	c303      	stmia	r3!, {r0, r1}
 800751a:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800751e:	4620      	mov	r0, r4
 8007520:	2136      	movs	r1, #54	; 0x36
 8007522:	4798      	blx	r3
 8007524:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007526:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 8007528:	aa02      	add	r2, sp, #8
 800752a:	4413      	add	r3, r2
 800752c:	f021 01e0 	bic.w	r1, r1, #224	; 0xe0
 8007530:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 8007534:	4319      	orrs	r1, r3
 8007536:	4620      	mov	r0, r4
 8007538:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800753c:	b289      	uxth	r1, r1
 800753e:	4798      	blx	r3
 8007540:	b002      	add	sp, #8
 8007542:	bd10      	pop	{r4, pc}
 8007544:	0800fe3c 	.word	0x0800fe3c

08007548 <_ReadPixel_16bpp_B8>:
 8007548:	b513      	push	{r0, r1, r4, lr}
 800754a:	4604      	mov	r4, r0
 800754c:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
 8007550:	202e      	movs	r0, #46	; 0x2e
 8007552:	4798      	blx	r3
 8007554:	6a21      	ldr	r1, [r4, #32]
 8007556:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800755a:	4668      	mov	r0, sp
 800755c:	3103      	adds	r1, #3
 800755e:	4798      	blx	r3
 8007560:	6a22      	ldr	r2, [r4, #32]
 8007562:	ab00      	add	r3, sp, #0
 8007564:	4413      	add	r3, r2
 8007566:	f81d 2002 	ldrb.w	r2, [sp, r2]
 800756a:	7859      	ldrb	r1, [r3, #1]
 800756c:	7898      	ldrb	r0, [r3, #2]
 800756e:	08d2      	lsrs	r2, r2, #3
 8007570:	0889      	lsrs	r1, r1, #2
 8007572:	02d2      	lsls	r2, r2, #11
 8007574:	ea42 1241 	orr.w	r2, r2, r1, lsl #5
 8007578:	ea42 00d0 	orr.w	r0, r2, r0, lsr #3
 800757c:	b002      	add	sp, #8
 800757e:	bd10      	pop	{r4, pc}

08007580 <_ReadPixel_16bpp_B16_I>:
 8007580:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007582:	4604      	mov	r4, r0
 8007584:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 8007588:	202e      	movs	r0, #46	; 0x2e
 800758a:	4798      	blx	r3
 800758c:	6a21      	ldr	r1, [r4, #32]
 800758e:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 8007592:	4668      	mov	r0, sp
 8007594:	3102      	adds	r1, #2
 8007596:	4798      	blx	r3
 8007598:	6a23      	ldr	r3, [r4, #32]
 800759a:	a900      	add	r1, sp, #0
 800759c:	eb01 0243 	add.w	r2, r1, r3, lsl #1
 80075a0:	f83d 0013 	ldrh.w	r0, [sp, r3, lsl #1]
 80075a4:	8852      	ldrh	r2, [r2, #2]
 80075a6:	f402 417c 	and.w	r1, r2, #64512	; 0xfc00
 80075aa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80075ae:	ea42 1251 	orr.w	r2, r2, r1, lsr #5
 80075b2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80075b6:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 80075ba:	b004      	add	sp, #16
 80075bc:	bd10      	pop	{r4, pc}

080075be <_SetReg_B8>:
 80075be:	b538      	push	{r3, r4, r5, lr}
 80075c0:	4604      	mov	r4, r0
 80075c2:	460d      	mov	r5, r1
 80075c4:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
 80075c8:	0a08      	lsrs	r0, r1, #8
 80075ca:	4798      	blx	r3
 80075cc:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 80075d0:	b2e8      	uxtb	r0, r5
 80075d2:	4798      	blx	r3
 80075d4:	bd38      	pop	{r3, r4, r5, pc}

080075d6 <_SetReg_B16>:
 80075d6:	b508      	push	{r3, lr}
 80075d8:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 80075dc:	4608      	mov	r0, r1
 80075de:	4798      	blx	r3
 80075e0:	bd08      	pop	{r3, pc}

080075e2 <_WritePara_B8>:
 80075e2:	b508      	push	{r3, lr}
 80075e4:	f8d0 3118 	ldr.w	r3, [r0, #280]	; 0x118
 80075e8:	b2c8      	uxtb	r0, r1
 80075ea:	4798      	blx	r3
 80075ec:	bd08      	pop	{r3, pc}

080075ee <_WritePara_B16>:
 80075ee:	b508      	push	{r3, lr}
 80075f0:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 80075f4:	4608      	mov	r0, r1
 80075f6:	4798      	blx	r3
 80075f8:	bd08      	pop	{r3, pc}
	...

080075fc <_SetInterface>:
 80075fc:	2908      	cmp	r1, #8
 80075fe:	d002      	beq.n	8007606 <_SetInterface+0xa>
 8007600:	2910      	cmp	r1, #16
 8007602:	d005      	beq.n	8007610 <_SetInterface+0x14>
 8007604:	4770      	bx	lr
 8007606:	4b06      	ldr	r3, [pc, #24]	; (8007620 <_SetInterface+0x24>)
 8007608:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800760c:	4b05      	ldr	r3, [pc, #20]	; (8007624 <_SetInterface+0x28>)
 800760e:	e003      	b.n	8007618 <_SetInterface+0x1c>
 8007610:	4b05      	ldr	r3, [pc, #20]	; (8007628 <_SetInterface+0x2c>)
 8007612:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 8007616:	4b05      	ldr	r3, [pc, #20]	; (800762c <_SetInterface+0x30>)
 8007618:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
 800761c:	4770      	bx	lr
 800761e:	bf00      	nop
 8007620:	080075bf 	.word	0x080075bf
 8007624:	080075e3 	.word	0x080075e3
 8007628:	080075d7 	.word	0x080075d7
 800762c:	080075ef 	.word	0x080075ef

08007630 <_ReadRect_16bpp_B8>:
 8007630:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007632:	b085      	sub	sp, #20
 8007634:	6884      	ldr	r4, [r0, #8]
 8007636:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8007638:	9700      	str	r7, [sp, #0]
 800763a:	1abd      	subs	r5, r7, r2
 800763c:	1a58      	subs	r0, r3, r1
 800763e:	3501      	adds	r5, #1
 8007640:	fb00 5505 	mla	r5, r0, r5, r5
 8007644:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8007648:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800764a:	4620      	mov	r0, r4
 800764c:	47b8      	blx	r7
 800764e:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8007652:	202e      	movs	r0, #46	; 0x2e
 8007654:	4798      	blx	r3
 8007656:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800765a:	6a21      	ldr	r1, [r4, #32]
 800765c:	a802      	add	r0, sp, #8
 800765e:	4798      	blx	r3
 8007660:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 8007664:	a802      	add	r0, sp, #8
 8007666:	2103      	movs	r1, #3
 8007668:	4798      	blx	r3
 800766a:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800766e:	f89d 2009 	ldrb.w	r2, [sp, #9]
 8007672:	08db      	lsrs	r3, r3, #3
 8007674:	0892      	lsrs	r2, r2, #2
 8007676:	02db      	lsls	r3, r3, #11
 8007678:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800767c:	f89d 200a 	ldrb.w	r2, [sp, #10]
 8007680:	3d01      	subs	r5, #1
 8007682:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8007686:	f826 3b02 	strh.w	r3, [r6], #2
 800768a:	d1e9      	bne.n	8007660 <_ReadRect_16bpp_B8+0x30>
 800768c:	b005      	add	sp, #20
 800768e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007690 <_ReadRect_16bpp_B16_I>:
 8007690:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007692:	b087      	sub	sp, #28
 8007694:	6884      	ldr	r4, [r0, #8]
 8007696:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8007698:	9700      	str	r7, [sp, #0]
 800769a:	1abd      	subs	r5, r7, r2
 800769c:	1a58      	subs	r0, r3, r1
 800769e:	3501      	adds	r5, #1
 80076a0:	fb00 5505 	mla	r5, r0, r5, r5
 80076a4:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 80076a8:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80076aa:	4620      	mov	r0, r4
 80076ac:	47b8      	blx	r7
 80076ae:	f8d4 3134 	ldr.w	r3, [r4, #308]	; 0x134
 80076b2:	202e      	movs	r0, #46	; 0x2e
 80076b4:	4798      	blx	r3
 80076b6:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 80076ba:	6a21      	ldr	r1, [r4, #32]
 80076bc:	a802      	add	r0, sp, #8
 80076be:	4798      	blx	r3
 80076c0:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 80076c4:	a802      	add	r0, sp, #8
 80076c6:	2102      	movs	r1, #2
 80076c8:	4798      	blx	r3
 80076ca:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80076ce:	f403 427c 	and.w	r2, r3, #64512	; 0xfc00
 80076d2:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80076d6:	ea43 1352 	orr.w	r3, r3, r2, lsr #5
 80076da:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80076de:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80076e2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80076e6:	3d01      	subs	r5, #1
 80076e8:	f826 3b02 	strh.w	r3, [r6], #2
 80076ec:	d1e8      	bne.n	80076c0 <_ReadRect_16bpp_B16_I+0x30>
 80076ee:	b007      	add	sp, #28
 80076f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080076f4 <GUIDRV_FlexColor_SetFunc66709>:
 80076f4:	b510      	push	{r4, lr}
 80076f6:	4604      	mov	r4, r0
 80076f8:	f000 fdae 	bl	8008258 <GUIDRV_FlexColor__InitOnce>
 80076fc:	68a3      	ldr	r3, [r4, #8]
 80076fe:	4a12      	ldr	r2, [pc, #72]	; (8007748 <GUIDRV_FlexColor_SetFunc66709+0x54>)
 8007700:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 8007704:	4a11      	ldr	r2, [pc, #68]	; (800774c <GUIDRV_FlexColor_SetFunc66709+0x58>)
 8007706:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 800770a:	4a11      	ldr	r2, [pc, #68]	; (8007750 <GUIDRV_FlexColor_SetFunc66709+0x5c>)
 800770c:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 8007710:	4a10      	ldr	r2, [pc, #64]	; (8007754 <GUIDRV_FlexColor_SetFunc66709+0x60>)
 8007712:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 8007716:	2200      	movs	r2, #0
 8007718:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800771c:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 8007720:	4a0d      	ldr	r2, [pc, #52]	; (8007758 <GUIDRV_FlexColor_SetFunc66709+0x64>)
 8007722:	490e      	ldr	r1, [pc, #56]	; (800775c <GUIDRV_FlexColor_SetFunc66709+0x68>)
 8007724:	6812      	ldr	r2, [r2, #0]
 8007726:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 800772a:	8cda      	ldrh	r2, [r3, #38]	; 0x26
 800772c:	6809      	ldr	r1, [r1, #0]
 800772e:	f8c3 10b4 	str.w	r1, [r3, #180]	; 0xb4
 8007732:	f022 0203 	bic.w	r2, r2, #3
 8007736:	490a      	ldr	r1, [pc, #40]	; (8007760 <GUIDRV_FlexColor_SetFunc66709+0x6c>)
 8007738:	84da      	strh	r2, [r3, #38]	; 0x26
 800773a:	4a0a      	ldr	r2, [pc, #40]	; (8007764 <GUIDRV_FlexColor_SetFunc66709+0x70>)
 800773c:	f8c3 10cc 	str.w	r1, [r3, #204]	; 0xcc
 8007740:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 8007744:	bd10      	pop	{r4, pc}
 8007746:	bf00      	nop
 8007748:	080073c5 	.word	0x080073c5
 800774c:	08007467 	.word	0x08007467
 8007750:	0800750d 	.word	0x0800750d
 8007754:	08007549 	.word	0x08007549
 8007758:	2000009c 	.word	0x2000009c
 800775c:	20000098 	.word	0x20000098
 8007760:	08007631 	.word	0x08007631
 8007764:	080075fd 	.word	0x080075fd

08007768 <_ReadData>:
 8007768:	b508      	push	{r3, lr}
 800776a:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 800776e:	4798      	blx	r3
 8007770:	bd08      	pop	{r3, pc}

08007772 <_WriteData>:
 8007772:	b508      	push	{r3, lr}
 8007774:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 8007778:	b288      	uxth	r0, r1
 800777a:	4798      	blx	r3
 800777c:	bd08      	pop	{r3, pc}
	...

08007780 <_FillRect>:
 8007780:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007784:	4f3d      	ldr	r7, [pc, #244]	; (800787c <_FillRect+0xfc>)
 8007786:	6884      	ldr	r4, [r0, #8]
 8007788:	4682      	mov	sl, r0
 800778a:	6838      	ldr	r0, [r7, #0]
 800778c:	7c00      	ldrb	r0, [r0, #16]
 800778e:	f010 0f01 	tst.w	r0, #1
 8007792:	b085      	sub	sp, #20
 8007794:	460e      	mov	r6, r1
 8007796:	4615      	mov	r5, r2
 8007798:	4698      	mov	r8, r3
 800779a:	ebc1 0903 	rsb	r9, r1, r3
 800779e:	d045      	beq.n	800782c <_FillRect+0xac>
 80077a0:	ea4f 0b49 	mov.w	fp, r9, lsl #1
 80077a4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80077a6:	4285      	cmp	r5, r0
 80077a8:	dc65      	bgt.n	8007876 <_FillRect+0xf6>
 80077aa:	f8d4 c0c8 	ldr.w	ip, [r4, #200]	; 0xc8
 80077ae:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 80077b0:	f1bc 0f00 	cmp.w	ip, #0
 80077b4:	d101      	bne.n	80077ba <_FillRect+0x3a>
 80077b6:	46b4      	mov	ip, r6
 80077b8:	e007      	b.n	80077ca <_FillRect+0x4a>
 80077ba:	e88d 00a0 	stmia.w	sp, {r5, r7}
 80077be:	4650      	mov	r0, sl
 80077c0:	4631      	mov	r1, r6
 80077c2:	462a      	mov	r2, r5
 80077c4:	4643      	mov	r3, r8
 80077c6:	47e0      	blx	ip
 80077c8:	e011      	b.n	80077ee <_FillRect+0x6e>
 80077ca:	45c4      	cmp	ip, r8
 80077cc:	dc0e      	bgt.n	80077ec <_FillRect+0x6c>
 80077ce:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
 80077d2:	f8cd c00c 	str.w	ip, [sp, #12]
 80077d6:	4661      	mov	r1, ip
 80077d8:	4650      	mov	r0, sl
 80077da:	462a      	mov	r2, r5
 80077dc:	4798      	blx	r3
 80077de:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80077e2:	f827 0b02 	strh.w	r0, [r7], #2
 80077e6:	f10c 0c01 	add.w	ip, ip, #1
 80077ea:	e7ee      	b.n	80077ca <_FillRect+0x4a>
 80077ec:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 80077ee:	1ebb      	subs	r3, r7, #2
 80077f0:	f109 0c01 	add.w	ip, r9, #1
 80077f4:	445f      	add	r7, fp
 80077f6:	42bb      	cmp	r3, r7
 80077f8:	d005      	beq.n	8007806 <_FillRect+0x86>
 80077fa:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80077fc:	8859      	ldrh	r1, [r3, #2]
 80077fe:	404a      	eors	r2, r1
 8007800:	f823 2f02 	strh.w	r2, [r3, #2]!
 8007804:	e7f7      	b.n	80077f6 <_FillRect+0x76>
 8007806:	9500      	str	r5, [sp, #0]
 8007808:	462a      	mov	r2, r5
 800780a:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800780e:	f8cd c00c 	str.w	ip, [sp, #12]
 8007812:	4620      	mov	r0, r4
 8007814:	4631      	mov	r1, r6
 8007816:	4643      	mov	r3, r8
 8007818:	47b8      	blx	r7
 800781a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800781e:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8007822:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8007824:	4661      	mov	r1, ip
 8007826:	4798      	blx	r3
 8007828:	3501      	adds	r5, #1
 800782a:	e7bb      	b.n	80077a4 <_FillRect+0x24>
 800782c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800782e:	9000      	str	r0, [sp, #0]
 8007830:	1a85      	subs	r5, r0, r2
 8007832:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8007836:	4620      	mov	r0, r4
 8007838:	47b0      	blx	r6
 800783a:	683b      	ldr	r3, [r7, #0]
 800783c:	6ea7      	ldr	r7, [r4, #104]	; 0x68
 800783e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007840:	f109 0901 	add.w	r9, r9, #1
 8007844:	f8d3 8000 	ldr.w	r8, [r3]
 8007848:	fb05 9509 	mla	r5, r5, r9, r9
 800784c:	2301      	movs	r3, #1
 800784e:	b195      	cbz	r5, 8007876 <_FillRect+0xf6>
 8007850:	2dfa      	cmp	r5, #250	; 0xfa
 8007852:	bf34      	ite	cc
 8007854:	462e      	movcc	r6, r5
 8007856:	26fa      	movcs	r6, #250	; 0xfa
 8007858:	b12b      	cbz	r3, 8007866 <_FillRect+0xe6>
 800785a:	4638      	mov	r0, r7
 800785c:	fa1f f188 	uxth.w	r1, r8
 8007860:	4632      	mov	r2, r6
 8007862:	f001 fb32 	bl	8008eca <GUI__memset16>
 8007866:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 800786a:	4638      	mov	r0, r7
 800786c:	4631      	mov	r1, r6
 800786e:	4798      	blx	r3
 8007870:	1bad      	subs	r5, r5, r6
 8007872:	2300      	movs	r3, #0
 8007874:	e7eb      	b.n	800784e <_FillRect+0xce>
 8007876:	b005      	add	sp, #20
 8007878:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800787c:	200000b8 	.word	0x200000b8

08007880 <_DrawBitmap>:
 8007880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007884:	b08d      	sub	sp, #52	; 0x34
 8007886:	6885      	ldr	r5, [r0, #8]
 8007888:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800788a:	9305      	str	r3, [sp, #20]
 800788c:	1e7b      	subs	r3, r7, #1
 800788e:	2b01      	cmp	r3, #1
 8007890:	9009      	str	r0, [sp, #36]	; 0x24
 8007892:	9108      	str	r1, [sp, #32]
 8007894:	920a      	str	r2, [sp, #40]	; 0x28
 8007896:	950b      	str	r5, [sp, #44]	; 0x2c
 8007898:	d903      	bls.n	80078a2 <_DrawBitmap+0x22>
 800789a:	2f04      	cmp	r7, #4
 800789c:	d001      	beq.n	80078a2 <_DrawBitmap+0x22>
 800789e:	2f08      	cmp	r7, #8
 80078a0:	d106      	bne.n	80078b0 <_DrawBitmap+0x30>
 80078a2:	4b8f      	ldr	r3, [pc, #572]	; (8007ae0 <_DrawBitmap+0x260>)
 80078a4:	681b      	ldr	r3, [r3, #0]
 80078a6:	7c1b      	ldrb	r3, [r3, #16]
 80078a8:	f003 0303 	and.w	r3, r3, #3
 80078ac:	2b02      	cmp	r3, #2
 80078ae:	d010      	beq.n	80078d2 <_DrawBitmap+0x52>
 80078b0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80078b2:	9f16      	ldr	r7, [sp, #88]	; 0x58
 80078b4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80078b6:	9908      	ldr	r1, [sp, #32]
 80078b8:	9b05      	ldr	r3, [sp, #20]
 80078ba:	443a      	add	r2, r7
 80078bc:	4429      	add	r1, r5
 80078be:	3a01      	subs	r2, #1
 80078c0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80078c2:	9200      	str	r2, [sp, #0]
 80078c4:	440b      	add	r3, r1
 80078c6:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
 80078ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80078cc:	4628      	mov	r0, r5
 80078ce:	3b01      	subs	r3, #1
 80078d0:	47a0      	blx	r4
 80078d2:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 80078d6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80078d8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80078da:	ebc7 030b 	rsb	r3, r7, fp
 80078de:	42ab      	cmp	r3, r5
 80078e0:	f280 8251 	bge.w	8007d86 <_DrawBitmap+0x506>
 80078e4:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 80078e6:	1e7b      	subs	r3, r7, #1
 80078e8:	2b0f      	cmp	r3, #15
 80078ea:	f200 8245 	bhi.w	8007d78 <_DrawBitmap+0x4f8>
 80078ee:	e8df f013 	tbh	[pc, r3, lsl #1]
 80078f2:	0010      	.short	0x0010
 80078f4:	024300b7 	.word	0x024300b7
 80078f8:	02430140 	.word	0x02430140
 80078fc:	02430243 	.word	0x02430243
 8007900:	024301d7 	.word	0x024301d7
 8007904:	02430243 	.word	0x02430243
 8007908:	02430243 	.word	0x02430243
 800790c:	02430243 	.word	0x02430243
 8007910:	023d      	.short	0x023d
 8007912:	4b73      	ldr	r3, [pc, #460]	; (8007ae0 <_DrawBitmap+0x260>)
 8007914:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8007916:	681b      	ldr	r3, [r3, #0]
 8007918:	68ac      	ldr	r4, [r5, #8]
 800791a:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800791c:	7c1b      	ldrb	r3, [r3, #16]
 800791e:	682f      	ldr	r7, [r5, #0]
 8007920:	686d      	ldr	r5, [r5, #4]
 8007922:	9507      	str	r5, [sp, #28]
 8007924:	f8dd a020 	ldr.w	sl, [sp, #32]
 8007928:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800792a:	f003 0303 	and.w	r3, r3, #3
 800792e:	2b02      	cmp	r3, #2
 8007930:	44aa      	add	sl, r5
 8007932:	d01b      	beq.n	800796c <_DrawBitmap+0xec>
 8007934:	2b03      	cmp	r3, #3
 8007936:	d06e      	beq.n	8007a16 <_DrawBitmap+0x196>
 8007938:	2b01      	cmp	r3, #1
 800793a:	d06c      	beq.n	8007a16 <_DrawBitmap+0x196>
 800793c:	9e05      	ldr	r6, [sp, #20]
 800793e:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 8007942:	f898 1000 	ldrb.w	r1, [r8]
 8007946:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800794a:	2280      	movs	r2, #128	; 0x80
 800794c:	412a      	asrs	r2, r5
 800794e:	4211      	tst	r1, r2
 8007950:	bf16      	itet	ne
 8007952:	9907      	ldrne	r1, [sp, #28]
 8007954:	b2b8      	uxtheq	r0, r7
 8007956:	b288      	uxthne	r0, r1
 8007958:	3501      	adds	r5, #1
 800795a:	4798      	blx	r3
 800795c:	2d08      	cmp	r5, #8
 800795e:	bf04      	itt	eq
 8007960:	f108 0801 	addeq.w	r8, r8, #1
 8007964:	2500      	moveq	r5, #0
 8007966:	3e01      	subs	r6, #1
 8007968:	d1eb      	bne.n	8007942 <_DrawBitmap+0xc2>
 800796a:	e205      	b.n	8007d78 <_DrawBitmap+0x4f8>
 800796c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800796e:	9506      	str	r5, [sp, #24]
 8007970:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 8007974:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8007978:	f8cd a00c 	str.w	sl, [sp, #12]
 800797c:	2500      	movs	r5, #0
 800797e:	4656      	mov	r6, sl
 8007980:	462b      	mov	r3, r5
 8007982:	9f06      	ldr	r7, [sp, #24]
 8007984:	f04f 0c80 	mov.w	ip, #128	; 0x80
 8007988:	783a      	ldrb	r2, [r7, #0]
 800798a:	fa4c fc08 	asr.w	ip, ip, r8
 800798e:	ea12 0c0c 	ands.w	ip, r2, ip
 8007992:	d00b      	beq.n	80079ac <_DrawBitmap+0x12c>
 8007994:	b913      	cbnz	r3, 800799c <_DrawBitmap+0x11c>
 8007996:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 800799a:	9603      	str	r6, [sp, #12]
 800799c:	9f07      	ldr	r7, [sp, #28]
 800799e:	f8a9 7000 	strh.w	r7, [r9]
 80079a2:	3501      	adds	r5, #1
 80079a4:	f109 0902 	add.w	r9, r9, #2
 80079a8:	2301      	movs	r3, #1
 80079aa:	e017      	b.n	80079dc <_DrawBitmap+0x15c>
 80079ac:	2b01      	cmp	r3, #1
 80079ae:	d114      	bne.n	80079da <_DrawBitmap+0x15a>
 80079b0:	f8cd b000 	str.w	fp, [sp]
 80079b4:	f8cd c010 	str.w	ip, [sp, #16]
 80079b8:	4620      	mov	r0, r4
 80079ba:	9903      	ldr	r1, [sp, #12]
 80079bc:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 80079c0:	465a      	mov	r2, fp
 80079c2:	1e73      	subs	r3, r6, #1
 80079c4:	47b8      	blx	r7
 80079c6:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 80079ca:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 80079cc:	4629      	mov	r1, r5
 80079ce:	4798      	blx	r3
 80079d0:	f8dd c010 	ldr.w	ip, [sp, #16]
 80079d4:	4665      	mov	r5, ip
 80079d6:	4663      	mov	r3, ip
 80079d8:	e000      	b.n	80079dc <_DrawBitmap+0x15c>
 80079da:	4663      	mov	r3, ip
 80079dc:	f108 0801 	add.w	r8, r8, #1
 80079e0:	f1b8 0f08 	cmp.w	r8, #8
 80079e4:	f106 0601 	add.w	r6, r6, #1
 80079e8:	d104      	bne.n	80079f4 <_DrawBitmap+0x174>
 80079ea:	9f06      	ldr	r7, [sp, #24]
 80079ec:	3701      	adds	r7, #1
 80079ee:	9706      	str	r7, [sp, #24]
 80079f0:	f04f 0800 	mov.w	r8, #0
 80079f4:	9a05      	ldr	r2, [sp, #20]
 80079f6:	4452      	add	r2, sl
 80079f8:	42b2      	cmp	r2, r6
 80079fa:	d1c2      	bne.n	8007982 <_DrawBitmap+0x102>
 80079fc:	9f05      	ldr	r7, [sp, #20]
 80079fe:	1e7b      	subs	r3, r7, #1
 8007a00:	4453      	add	r3, sl
 8007a02:	2d00      	cmp	r5, #0
 8007a04:	f000 81b8 	beq.w	8007d78 <_DrawBitmap+0x4f8>
 8007a08:	f8cd b000 	str.w	fp, [sp]
 8007a0c:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8007a10:	9903      	ldr	r1, [sp, #12]
 8007a12:	4620      	mov	r0, r4
 8007a14:	e13d      	b.n	8007c92 <_DrawBitmap+0x412>
 8007a16:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8007a1a:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 8007a1c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007a1e:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8007a22:	782a      	ldrb	r2, [r5, #0]
 8007a24:	2380      	movs	r3, #128	; 0x80
 8007a26:	4133      	asrs	r3, r6
 8007a28:	44d1      	add	r9, sl
 8007a2a:	421a      	tst	r2, r3
 8007a2c:	ebc8 0909 	rsb	r9, r8, r9
 8007a30:	d00d      	beq.n	8007a4e <_DrawBitmap+0x1ce>
 8007a32:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
 8007a36:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007a38:	4649      	mov	r1, r9
 8007a3a:	465a      	mov	r2, fp
 8007a3c:	4798      	blx	r3
 8007a3e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007a40:	f8d4 70f8 	ldr.w	r7, [r4, #248]	; 0xf8
 8007a44:	4043      	eors	r3, r0
 8007a46:	4649      	mov	r1, r9
 8007a48:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007a4a:	465a      	mov	r2, fp
 8007a4c:	47b8      	blx	r7
 8007a4e:	3601      	adds	r6, #1
 8007a50:	2e08      	cmp	r6, #8
 8007a52:	bf04      	itt	eq
 8007a54:	3501      	addeq	r5, #1
 8007a56:	2600      	moveq	r6, #0
 8007a58:	f1b8 0801 	subs.w	r8, r8, #1
 8007a5c:	d1df      	bne.n	8007a1e <_DrawBitmap+0x19e>
 8007a5e:	e18b      	b.n	8007d78 <_DrawBitmap+0x4f8>
 8007a60:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8007a62:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007a64:	68ac      	ldr	r4, [r5, #8]
 8007a66:	2f00      	cmp	r7, #0
 8007a68:	f000 8186 	beq.w	8007d78 <_DrawBitmap+0x4f8>
 8007a6c:	4b1c      	ldr	r3, [pc, #112]	; (8007ae0 <_DrawBitmap+0x260>)
 8007a6e:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007a70:	681b      	ldr	r3, [r3, #0]
 8007a72:	f895 a000 	ldrb.w	sl, [r5]
 8007a76:	7c1b      	ldrb	r3, [r3, #16]
 8007a78:	f013 0303 	ands.w	r3, r3, #3
 8007a7c:	d011      	beq.n	8007aa2 <_DrawBitmap+0x222>
 8007a7e:	2b02      	cmp	r3, #2
 8007a80:	f040 817a 	bne.w	8007d78 <_DrawBitmap+0x4f8>
 8007a84:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007a86:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007a8a:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007a8c:	9703      	str	r7, [sp, #12]
 8007a8e:	44a9      	add	r9, r5
 8007a90:	46a8      	mov	r8, r5
 8007a92:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007a94:	9507      	str	r5, [sp, #28]
 8007a96:	2500      	movs	r5, #0
 8007a98:	f8cd 9018 	str.w	r9, [sp, #24]
 8007a9c:	464e      	mov	r6, r9
 8007a9e:	462b      	mov	r3, r5
 8007aa0:	e040      	b.n	8007b24 <_DrawBitmap+0x2a4>
 8007aa2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007aa4:	9e05      	ldr	r6, [sp, #20]
 8007aa6:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8007aa8:	f1c5 0303 	rsb	r3, r5, #3
 8007aac:	005b      	lsls	r3, r3, #1
 8007aae:	f1c3 0206 	rsb	r2, r3, #6
 8007ab2:	21c0      	movs	r1, #192	; 0xc0
 8007ab4:	fa41 f202 	asr.w	r2, r1, r2
 8007ab8:	ea02 020a 	and.w	r2, r2, sl
 8007abc:	40da      	lsrs	r2, r3
 8007abe:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8007ac0:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8007ac4:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 8007ac8:	3501      	adds	r5, #1
 8007aca:	4798      	blx	r3
 8007acc:	2d04      	cmp	r5, #4
 8007ace:	d103      	bne.n	8007ad8 <_DrawBitmap+0x258>
 8007ad0:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007ad4:	2500      	movs	r5, #0
 8007ad6:	3701      	adds	r7, #1
 8007ad8:	3e01      	subs	r6, #1
 8007ada:	d1e5      	bne.n	8007aa8 <_DrawBitmap+0x228>
 8007adc:	e14c      	b.n	8007d78 <_DrawBitmap+0x4f8>
 8007ade:	bf00      	nop
 8007ae0:	200000b8 	.word	0x200000b8
 8007ae4:	b913      	cbnz	r3, 8007aec <_DrawBitmap+0x26c>
 8007ae6:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007ae8:	9703      	str	r7, [sp, #12]
 8007aea:	9606      	str	r6, [sp, #24]
 8007aec:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007aee:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 8007af2:	9f03      	ldr	r7, [sp, #12]
 8007af4:	803b      	strh	r3, [r7, #0]
 8007af6:	3702      	adds	r7, #2
 8007af8:	3501      	adds	r5, #1
 8007afa:	9703      	str	r7, [sp, #12]
 8007afc:	2301      	movs	r3, #1
 8007afe:	f108 0801 	add.w	r8, r8, #1
 8007b02:	f1b8 0f04 	cmp.w	r8, #4
 8007b06:	f106 0601 	add.w	r6, r6, #1
 8007b0a:	d106      	bne.n	8007b1a <_DrawBitmap+0x29a>
 8007b0c:	9f07      	ldr	r7, [sp, #28]
 8007b0e:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007b12:	3701      	adds	r7, #1
 8007b14:	9707      	str	r7, [sp, #28]
 8007b16:	f04f 0800 	mov.w	r8, #0
 8007b1a:	9a05      	ldr	r2, [sp, #20]
 8007b1c:	444a      	add	r2, r9
 8007b1e:	42b2      	cmp	r2, r6
 8007b20:	f000 80ac 	beq.w	8007c7c <_DrawBitmap+0x3fc>
 8007b24:	f1c8 0203 	rsb	r2, r8, #3
 8007b28:	0052      	lsls	r2, r2, #1
 8007b2a:	f1c2 0106 	rsb	r1, r2, #6
 8007b2e:	f04f 0cc0 	mov.w	ip, #192	; 0xc0
 8007b32:	fa4c fc01 	asr.w	ip, ip, r1
 8007b36:	ea0c 0c0a 	and.w	ip, ip, sl
 8007b3a:	fa3c fc02 	lsrs.w	ip, ip, r2
 8007b3e:	d1d1      	bne.n	8007ae4 <_DrawBitmap+0x264>
 8007b40:	2b01      	cmp	r3, #1
 8007b42:	d114      	bne.n	8007b6e <_DrawBitmap+0x2ee>
 8007b44:	f8cd b000 	str.w	fp, [sp]
 8007b48:	f8cd c010 	str.w	ip, [sp, #16]
 8007b4c:	4620      	mov	r0, r4
 8007b4e:	9906      	ldr	r1, [sp, #24]
 8007b50:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8007b54:	465a      	mov	r2, fp
 8007b56:	1e73      	subs	r3, r6, #1
 8007b58:	47b8      	blx	r7
 8007b5a:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8007b5e:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8007b60:	4629      	mov	r1, r5
 8007b62:	4798      	blx	r3
 8007b64:	f8dd c010 	ldr.w	ip, [sp, #16]
 8007b68:	4665      	mov	r5, ip
 8007b6a:	4663      	mov	r3, ip
 8007b6c:	e7c7      	b.n	8007afe <_DrawBitmap+0x27e>
 8007b6e:	4663      	mov	r3, ip
 8007b70:	e7c5      	b.n	8007afe <_DrawBitmap+0x27e>
 8007b72:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8007b74:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007b76:	68ac      	ldr	r4, [r5, #8]
 8007b78:	2f00      	cmp	r7, #0
 8007b7a:	f000 80fd 	beq.w	8007d78 <_DrawBitmap+0x4f8>
 8007b7e:	4b83      	ldr	r3, [pc, #524]	; (8007d8c <_DrawBitmap+0x50c>)
 8007b80:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007b82:	681b      	ldr	r3, [r3, #0]
 8007b84:	f895 a000 	ldrb.w	sl, [r5]
 8007b88:	7c1b      	ldrb	r3, [r3, #16]
 8007b8a:	f013 0303 	ands.w	r3, r3, #3
 8007b8e:	d011      	beq.n	8007bb4 <_DrawBitmap+0x334>
 8007b90:	2b02      	cmp	r3, #2
 8007b92:	f040 80f1 	bne.w	8007d78 <_DrawBitmap+0x4f8>
 8007b96:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007b98:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007b9c:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007b9e:	9703      	str	r7, [sp, #12]
 8007ba0:	44a9      	add	r9, r5
 8007ba2:	46a8      	mov	r8, r5
 8007ba4:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007ba6:	9507      	str	r5, [sp, #28]
 8007ba8:	2500      	movs	r5, #0
 8007baa:	f8cd 9018 	str.w	r9, [sp, #24]
 8007bae:	464e      	mov	r6, r9
 8007bb0:	462b      	mov	r3, r5
 8007bb2:	e03c      	b.n	8007c2e <_DrawBitmap+0x3ae>
 8007bb4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007bb6:	9e05      	ldr	r6, [sp, #20]
 8007bb8:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8007bba:	f1c5 0301 	rsb	r3, r5, #1
 8007bbe:	009b      	lsls	r3, r3, #2
 8007bc0:	f1c3 0204 	rsb	r2, r3, #4
 8007bc4:	21f0      	movs	r1, #240	; 0xf0
 8007bc6:	fa41 f202 	asr.w	r2, r1, r2
 8007bca:	ea02 020a 	and.w	r2, r2, sl
 8007bce:	40da      	lsrs	r2, r3
 8007bd0:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8007bd2:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8007bd6:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 8007bda:	3501      	adds	r5, #1
 8007bdc:	4798      	blx	r3
 8007bde:	2d02      	cmp	r5, #2
 8007be0:	d103      	bne.n	8007bea <_DrawBitmap+0x36a>
 8007be2:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007be6:	2500      	movs	r5, #0
 8007be8:	3701      	adds	r7, #1
 8007bea:	3e01      	subs	r6, #1
 8007bec:	d1e5      	bne.n	8007bba <_DrawBitmap+0x33a>
 8007bee:	e0c3      	b.n	8007d78 <_DrawBitmap+0x4f8>
 8007bf0:	b913      	cbnz	r3, 8007bf8 <_DrawBitmap+0x378>
 8007bf2:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007bf4:	9703      	str	r7, [sp, #12]
 8007bf6:	9606      	str	r6, [sp, #24]
 8007bf8:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007bfa:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 8007bfe:	9f03      	ldr	r7, [sp, #12]
 8007c00:	803b      	strh	r3, [r7, #0]
 8007c02:	3702      	adds	r7, #2
 8007c04:	3501      	adds	r5, #1
 8007c06:	9703      	str	r7, [sp, #12]
 8007c08:	2301      	movs	r3, #1
 8007c0a:	f108 0801 	add.w	r8, r8, #1
 8007c0e:	f1b8 0f02 	cmp.w	r8, #2
 8007c12:	f106 0601 	add.w	r6, r6, #1
 8007c16:	d106      	bne.n	8007c26 <_DrawBitmap+0x3a6>
 8007c18:	9f07      	ldr	r7, [sp, #28]
 8007c1a:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007c1e:	3701      	adds	r7, #1
 8007c20:	9707      	str	r7, [sp, #28]
 8007c22:	f04f 0800 	mov.w	r8, #0
 8007c26:	9a05      	ldr	r2, [sp, #20]
 8007c28:	444a      	add	r2, r9
 8007c2a:	42b2      	cmp	r2, r6
 8007c2c:	d026      	beq.n	8007c7c <_DrawBitmap+0x3fc>
 8007c2e:	f1c8 0201 	rsb	r2, r8, #1
 8007c32:	0092      	lsls	r2, r2, #2
 8007c34:	f1c2 0104 	rsb	r1, r2, #4
 8007c38:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 8007c3c:	fa4c fc01 	asr.w	ip, ip, r1
 8007c40:	ea0c 0c0a 	and.w	ip, ip, sl
 8007c44:	fa3c fc02 	lsrs.w	ip, ip, r2
 8007c48:	d1d2      	bne.n	8007bf0 <_DrawBitmap+0x370>
 8007c4a:	2b01      	cmp	r3, #1
 8007c4c:	d114      	bne.n	8007c78 <_DrawBitmap+0x3f8>
 8007c4e:	f8cd b000 	str.w	fp, [sp]
 8007c52:	f8cd c010 	str.w	ip, [sp, #16]
 8007c56:	4620      	mov	r0, r4
 8007c58:	9906      	ldr	r1, [sp, #24]
 8007c5a:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8007c5e:	465a      	mov	r2, fp
 8007c60:	1e73      	subs	r3, r6, #1
 8007c62:	47b8      	blx	r7
 8007c64:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8007c68:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8007c6a:	4629      	mov	r1, r5
 8007c6c:	4798      	blx	r3
 8007c6e:	f8dd c010 	ldr.w	ip, [sp, #16]
 8007c72:	4665      	mov	r5, ip
 8007c74:	4663      	mov	r3, ip
 8007c76:	e7c8      	b.n	8007c0a <_DrawBitmap+0x38a>
 8007c78:	4663      	mov	r3, ip
 8007c7a:	e7c6      	b.n	8007c0a <_DrawBitmap+0x38a>
 8007c7c:	9f05      	ldr	r7, [sp, #20]
 8007c7e:	1e7b      	subs	r3, r7, #1
 8007c80:	444b      	add	r3, r9
 8007c82:	2d00      	cmp	r5, #0
 8007c84:	d078      	beq.n	8007d78 <_DrawBitmap+0x4f8>
 8007c86:	f8cd b000 	str.w	fp, [sp]
 8007c8a:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8007c8e:	9906      	ldr	r1, [sp, #24]
 8007c90:	4620      	mov	r0, r4
 8007c92:	465a      	mov	r2, fp
 8007c94:	47b0      	blx	r6
 8007c96:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8007c9a:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8007c9c:	4629      	mov	r1, r5
 8007c9e:	e06a      	b.n	8007d76 <_DrawBitmap+0x4f6>
 8007ca0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8007ca2:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007ca4:	68ac      	ldr	r4, [r5, #8]
 8007ca6:	2f00      	cmp	r7, #0
 8007ca8:	d066      	beq.n	8007d78 <_DrawBitmap+0x4f8>
 8007caa:	4b38      	ldr	r3, [pc, #224]	; (8007d8c <_DrawBitmap+0x50c>)
 8007cac:	681b      	ldr	r3, [r3, #0]
 8007cae:	7c1b      	ldrb	r3, [r3, #16]
 8007cb0:	f013 0303 	ands.w	r3, r3, #3
 8007cb4:	d009      	beq.n	8007cca <_DrawBitmap+0x44a>
 8007cb6:	2b02      	cmp	r3, #2
 8007cb8:	d15e      	bne.n	8007d78 <_DrawBitmap+0x4f8>
 8007cba:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007cbe:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 8007cc2:	2600      	movs	r6, #0
 8007cc4:	464f      	mov	r7, r9
 8007cc6:	4633      	mov	r3, r6
 8007cc8:	e022      	b.n	8007d10 <_DrawBitmap+0x490>
 8007cca:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007ccc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8007cce:	9f05      	ldr	r7, [sp, #20]
 8007cd0:	443b      	add	r3, r7
 8007cd2:	1b5b      	subs	r3, r3, r5
 8007cd4:	2b00      	cmp	r3, #0
 8007cd6:	dd4f      	ble.n	8007d78 <_DrawBitmap+0x4f8>
 8007cd8:	f815 2b01 	ldrb.w	r2, [r5], #1
 8007cdc:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007cde:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8007ce2:	f837 0022 	ldrh.w	r0, [r7, r2, lsl #2]
 8007ce6:	4798      	blx	r3
 8007ce8:	e7f0      	b.n	8007ccc <_DrawBitmap+0x44c>
 8007cea:	b913      	cbnz	r3, 8007cf2 <_DrawBitmap+0x472>
 8007cec:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 8007cf0:	46b9      	mov	r9, r7
 8007cf2:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8007cf4:	f855 302a 	ldr.w	r3, [r5, sl, lsl #2]
 8007cf8:	f8a8 3000 	strh.w	r3, [r8]
 8007cfc:	3601      	adds	r6, #1
 8007cfe:	f108 0802 	add.w	r8, r8, #2
 8007d02:	2301      	movs	r3, #1
 8007d04:	9a08      	ldr	r2, [sp, #32]
 8007d06:	9d05      	ldr	r5, [sp, #20]
 8007d08:	3701      	adds	r7, #1
 8007d0a:	442a      	add	r2, r5
 8007d0c:	42ba      	cmp	r2, r7
 8007d0e:	d01c      	beq.n	8007d4a <_DrawBitmap+0x4ca>
 8007d10:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007d12:	9808      	ldr	r0, [sp, #32]
 8007d14:	1a2a      	subs	r2, r5, r0
 8007d16:	f812 a007 	ldrb.w	sl, [r2, r7]
 8007d1a:	f1ba 0f00 	cmp.w	sl, #0
 8007d1e:	d1e4      	bne.n	8007cea <_DrawBitmap+0x46a>
 8007d20:	2b01      	cmp	r3, #1
 8007d22:	d110      	bne.n	8007d46 <_DrawBitmap+0x4c6>
 8007d24:	f8cd b000 	str.w	fp, [sp]
 8007d28:	4620      	mov	r0, r4
 8007d2a:	4649      	mov	r1, r9
 8007d2c:	465a      	mov	r2, fp
 8007d2e:	1e7b      	subs	r3, r7, #1
 8007d30:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 8007d34:	47a8      	blx	r5
 8007d36:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8007d3a:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8007d3c:	4631      	mov	r1, r6
 8007d3e:	4798      	blx	r3
 8007d40:	4656      	mov	r6, sl
 8007d42:	4653      	mov	r3, sl
 8007d44:	e7de      	b.n	8007d04 <_DrawBitmap+0x484>
 8007d46:	4653      	mov	r3, sl
 8007d48:	e7dc      	b.n	8007d04 <_DrawBitmap+0x484>
 8007d4a:	9f08      	ldr	r7, [sp, #32]
 8007d4c:	1e6b      	subs	r3, r5, #1
 8007d4e:	443b      	add	r3, r7
 8007d50:	b196      	cbz	r6, 8007d78 <_DrawBitmap+0x4f8>
 8007d52:	f8cd b000 	str.w	fp, [sp]
 8007d56:	4620      	mov	r0, r4
 8007d58:	4649      	mov	r1, r9
 8007d5a:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 8007d5e:	465a      	mov	r2, fp
 8007d60:	47a8      	blx	r5
 8007d62:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8007d66:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8007d68:	4631      	mov	r1, r6
 8007d6a:	e004      	b.n	8007d76 <_DrawBitmap+0x4f6>
 8007d6c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8007d6e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8007d70:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
 8007d74:	9905      	ldr	r1, [sp, #20]
 8007d76:	4798      	blx	r3
 8007d78:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8007d7a:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8007d7c:	442f      	add	r7, r5
 8007d7e:	9719      	str	r7, [sp, #100]	; 0x64
 8007d80:	f10b 0b01 	add.w	fp, fp, #1
 8007d84:	e5a7      	b.n	80078d6 <_DrawBitmap+0x56>
 8007d86:	b00d      	add	sp, #52	; 0x34
 8007d88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007d8c:	200000b8 	.word	0x200000b8

08007d90 <GUIDRV_FlexColor_SetMode16bppC0B16>:
 8007d90:	b510      	push	{r4, lr}
 8007d92:	4604      	mov	r4, r0
 8007d94:	f000 fa60 	bl	8008258 <GUIDRV_FlexColor__InitOnce>
 8007d98:	68a4      	ldr	r4, [r4, #8]
 8007d9a:	4b10      	ldr	r3, [pc, #64]	; (8007ddc <GUIDRV_FlexColor_SetMode16bppC0B16+0x4c>)
 8007d9c:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8007da0:	4b0f      	ldr	r3, [pc, #60]	; (8007de0 <GUIDRV_FlexColor_SetMode16bppC0B16+0x50>)
 8007da2:	f8c4 30f0 	str.w	r3, [r4, #240]	; 0xf0
 8007da6:	4b0f      	ldr	r3, [pc, #60]	; (8007de4 <GUIDRV_FlexColor_SetMode16bppC0B16+0x54>)
 8007da8:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 8007dac:	4b0e      	ldr	r3, [pc, #56]	; (8007de8 <GUIDRV_FlexColor_SetMode16bppC0B16+0x58>)
 8007dae:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
 8007db2:	4b0e      	ldr	r3, [pc, #56]	; (8007dec <GUIDRV_FlexColor_SetMode16bppC0B16+0x5c>)
 8007db4:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 8007db8:	4b0d      	ldr	r3, [pc, #52]	; (8007df0 <GUIDRV_FlexColor_SetMode16bppC0B16+0x60>)
 8007dba:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 8007dbe:	f8d4 30c8 	ldr.w	r3, [r4, #200]	; 0xc8
 8007dc2:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8007dc6:	4620      	mov	r0, r4
 8007dc8:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 8007dcc:	2110      	movs	r1, #16
 8007dce:	4798      	blx	r3
 8007dd0:	2310      	movs	r3, #16
 8007dd2:	63a3      	str	r3, [r4, #56]	; 0x38
 8007dd4:	4b07      	ldr	r3, [pc, #28]	; (8007df4 <GUIDRV_FlexColor_SetMode16bppC0B16+0x64>)
 8007dd6:	6463      	str	r3, [r4, #68]	; 0x44
 8007dd8:	bd10      	pop	{r4, pc}
 8007dda:	bf00      	nop
 8007ddc:	08007881 	.word	0x08007881
 8007de0:	08007781 	.word	0x08007781
 8007de4:	080081a7 	.word	0x080081a7
 8007de8:	08008117 	.word	0x08008117
 8007dec:	08007769 	.word	0x08007769
 8007df0:	08007773 	.word	0x08007773
 8007df4:	08012160 	.word	0x08012160

08007df8 <_Log2PhysX_X0Y0S0>:
 8007df8:	4608      	mov	r0, r1
 8007dfa:	4770      	bx	lr

08007dfc <_Log2PhysX_X1Y0S0>:
 8007dfc:	6800      	ldr	r0, [r0, #0]
 8007dfe:	1a40      	subs	r0, r0, r1
 8007e00:	3801      	subs	r0, #1
 8007e02:	4770      	bx	lr

08007e04 <_Log2PhysX_X0Y1S0>:
 8007e04:	4608      	mov	r0, r1
 8007e06:	4770      	bx	lr

08007e08 <_Log2PhysX_X1Y1S0>:
 8007e08:	6800      	ldr	r0, [r0, #0]
 8007e0a:	1a40      	subs	r0, r0, r1
 8007e0c:	3801      	subs	r0, #1
 8007e0e:	4770      	bx	lr

08007e10 <_Log2PhysX_X0Y0S1>:
 8007e10:	4610      	mov	r0, r2
 8007e12:	4770      	bx	lr

08007e14 <_Log2PhysX_X1Y0S1>:
 8007e14:	6840      	ldr	r0, [r0, #4]
 8007e16:	1a80      	subs	r0, r0, r2
 8007e18:	3801      	subs	r0, #1
 8007e1a:	4770      	bx	lr

08007e1c <_Log2PhysX_X0Y1S1>:
 8007e1c:	4610      	mov	r0, r2
 8007e1e:	4770      	bx	lr

08007e20 <_Log2PhysX_X1Y1S1>:
 8007e20:	6840      	ldr	r0, [r0, #4]
 8007e22:	1a80      	subs	r0, r0, r2
 8007e24:	3801      	subs	r0, #1
 8007e26:	4770      	bx	lr

08007e28 <_Log2PhysY_X0Y0S0>:
 8007e28:	4610      	mov	r0, r2
 8007e2a:	4770      	bx	lr

08007e2c <_Log2PhysY_X1Y0S0>:
 8007e2c:	4610      	mov	r0, r2
 8007e2e:	4770      	bx	lr

08007e30 <_Log2PhysY_X0Y1S0>:
 8007e30:	6840      	ldr	r0, [r0, #4]
 8007e32:	1a80      	subs	r0, r0, r2
 8007e34:	3801      	subs	r0, #1
 8007e36:	4770      	bx	lr

08007e38 <_Log2PhysY_X1Y1S0>:
 8007e38:	6840      	ldr	r0, [r0, #4]
 8007e3a:	1a80      	subs	r0, r0, r2
 8007e3c:	3801      	subs	r0, #1
 8007e3e:	4770      	bx	lr

08007e40 <_Log2PhysY_X0Y0S1>:
 8007e40:	4608      	mov	r0, r1
 8007e42:	4770      	bx	lr

08007e44 <_Log2PhysY_X1Y0S1>:
 8007e44:	4608      	mov	r0, r1
 8007e46:	4770      	bx	lr

08007e48 <_Log2PhysY_X0Y1S1>:
 8007e48:	6800      	ldr	r0, [r0, #0]
 8007e4a:	1a40      	subs	r0, r0, r1
 8007e4c:	3801      	subs	r0, #1
 8007e4e:	4770      	bx	lr

08007e50 <_Log2PhysY_X1Y1S1>:
 8007e50:	6800      	ldr	r0, [r0, #0]
 8007e52:	1a40      	subs	r0, r0, r1
 8007e54:	3801      	subs	r0, #1
 8007e56:	4770      	bx	lr

08007e58 <_SetPixelIndex>:
 8007e58:	b510      	push	{r4, lr}
 8007e5a:	6884      	ldr	r4, [r0, #8]
 8007e5c:	f8d4 40f8 	ldr.w	r4, [r4, #248]	; 0xf8
 8007e60:	47a0      	blx	r4
 8007e62:	bd10      	pop	{r4, pc}

08007e64 <_GetPixelIndex>:
 8007e64:	b508      	push	{r3, lr}
 8007e66:	6883      	ldr	r3, [r0, #8]
 8007e68:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8007e6c:	4798      	blx	r3
 8007e6e:	bd08      	pop	{r3, pc}

08007e70 <_XorPixel>:
 8007e70:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007e72:	4604      	mov	r4, r0
 8007e74:	460f      	mov	r7, r1
 8007e76:	4616      	mov	r6, r2
 8007e78:	6885      	ldr	r5, [r0, #8]
 8007e7a:	f7ff fff3 	bl	8007e64 <_GetPixelIndex>
 8007e7e:	9001      	str	r0, [sp, #4]
 8007e80:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007e84:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8007e86:	4620      	mov	r0, r4
 8007e88:	4639      	mov	r1, r7
 8007e8a:	4632      	mov	r2, r6
 8007e8c:	ea8e 0303 	eor.w	r3, lr, r3
 8007e90:	f7ff ffe2 	bl	8007e58 <_SetPixelIndex>
 8007e94:	b003      	add	sp, #12
 8007e96:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007e98 <_DrawHLine>:
 8007e98:	b513      	push	{r0, r1, r4, lr}
 8007e9a:	6884      	ldr	r4, [r0, #8]
 8007e9c:	9200      	str	r2, [sp, #0]
 8007e9e:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 8007ea2:	47a0      	blx	r4
 8007ea4:	b002      	add	sp, #8
 8007ea6:	bd10      	pop	{r4, pc}

08007ea8 <_DrawVLine>:
 8007ea8:	b513      	push	{r0, r1, r4, lr}
 8007eaa:	6884      	ldr	r4, [r0, #8]
 8007eac:	9300      	str	r3, [sp, #0]
 8007eae:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 8007eb2:	460b      	mov	r3, r1
 8007eb4:	47a0      	blx	r4
 8007eb6:	b002      	add	sp, #8
 8007eb8:	bd10      	pop	{r4, pc}

08007eba <_FillRect>:
 8007eba:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007ebc:	9c06      	ldr	r4, [sp, #24]
 8007ebe:	6885      	ldr	r5, [r0, #8]
 8007ec0:	9400      	str	r4, [sp, #0]
 8007ec2:	f8d5 40f0 	ldr.w	r4, [r5, #240]	; 0xf0
 8007ec6:	47a0      	blx	r4
 8007ec8:	b003      	add	sp, #12
 8007eca:	bd30      	pop	{r4, r5, pc}

08007ecc <_DrawBitmap>:
 8007ecc:	b530      	push	{r4, r5, lr}
 8007ece:	b087      	sub	sp, #28
 8007ed0:	6885      	ldr	r5, [r0, #8]
 8007ed2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8007ed4:	9400      	str	r4, [sp, #0]
 8007ed6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8007ed8:	9401      	str	r4, [sp, #4]
 8007eda:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8007edc:	9402      	str	r4, [sp, #8]
 8007ede:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8007ee0:	9403      	str	r4, [sp, #12]
 8007ee2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8007ee4:	9404      	str	r4, [sp, #16]
 8007ee6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8007ee8:	9405      	str	r4, [sp, #20]
 8007eea:	f8d5 40ec 	ldr.w	r4, [r5, #236]	; 0xec
 8007eee:	47a0      	blx	r4
 8007ef0:	b007      	add	sp, #28
 8007ef2:	bd30      	pop	{r4, r5, pc}

08007ef4 <_GetDevFunc_SetRect>:
 8007ef4:	4770      	bx	lr
	...

08007ef8 <_GetDevFunc_SetRectOutside>:
 8007ef8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007efa:	9e07      	ldr	r6, [sp, #28]
 8007efc:	6884      	ldr	r4, [r0, #8]
 8007efe:	4d0c      	ldr	r5, [pc, #48]	; (8007f30 <_GetDevFunc_SetRectOutside+0x38>)
 8007f00:	b176      	cbz	r6, 8007f20 <_GetDevFunc_SetRectOutside+0x28>
 8007f02:	6828      	ldr	r0, [r5, #0]
 8007f04:	b988      	cbnz	r0, 8007f2a <_GetDevFunc_SetRectOutside+0x32>
 8007f06:	9806      	ldr	r0, [sp, #24]
 8007f08:	9000      	str	r0, [sp, #0]
 8007f0a:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8007f0e:	4620      	mov	r0, r4
 8007f10:	47b0      	blx	r6
 8007f12:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
 8007f16:	602b      	str	r3, [r5, #0]
 8007f18:	4b06      	ldr	r3, [pc, #24]	; (8007f34 <_GetDevFunc_SetRectOutside+0x3c>)
 8007f1a:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8007f1e:	e004      	b.n	8007f2a <_GetDevFunc_SetRectOutside+0x32>
 8007f20:	682b      	ldr	r3, [r5, #0]
 8007f22:	b113      	cbz	r3, 8007f2a <_GetDevFunc_SetRectOutside+0x32>
 8007f24:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8007f28:	602e      	str	r6, [r5, #0]
 8007f2a:	b002      	add	sp, #8
 8007f2c:	bd70      	pop	{r4, r5, r6, pc}
 8007f2e:	bf00      	nop
 8007f30:	20002af8 	.word	0x20002af8
 8007f34:	08007ef5 	.word	0x08007ef5

08007f38 <_ReadPixelCust_16bpp>:
 8007f38:	b508      	push	{r3, lr}
 8007f3a:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8007f3c:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8007f40:	6990      	ldr	r0, [r2, #24]
 8007f42:	4798      	blx	r3
 8007f44:	bd08      	pop	{r3, pc}

08007f46 <_ReadPixelCust_18bpp>:
 8007f46:	b508      	push	{r3, lr}
 8007f48:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8007f4a:	f8d0 30e0 	ldr.w	r3, [r0, #224]	; 0xe0
 8007f4e:	6990      	ldr	r0, [r2, #24]
 8007f50:	4798      	blx	r3
 8007f52:	bd08      	pop	{r3, pc}

08007f54 <_ReadRectCust_16bpp>:
 8007f54:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007f58:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8007f5a:	6884      	ldr	r4, [r0, #8]
 8007f5c:	9500      	str	r5, [sp, #0]
 8007f5e:	4617      	mov	r7, r2
 8007f60:	4620      	mov	r0, r4
 8007f62:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8007f66:	4699      	mov	r9, r3
 8007f68:	4688      	mov	r8, r1
 8007f6a:	1bed      	subs	r5, r5, r7
 8007f6c:	47b0      	blx	r6
 8007f6e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8007f70:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
 8007f74:	6988      	ldr	r0, [r1, #24]
 8007f76:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007f78:	ebc8 0809 	rsb	r8, r8, r9
 8007f7c:	1c6a      	adds	r2, r5, #1
 8007f7e:	fb08 2202 	mla	r2, r8, r2, r2
 8007f82:	4798      	blx	r3
 8007f84:	b003      	add	sp, #12
 8007f86:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08007f8a <_ReadRectCust_18bpp>:
 8007f8a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007f8e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8007f90:	6884      	ldr	r4, [r0, #8]
 8007f92:	9500      	str	r5, [sp, #0]
 8007f94:	4617      	mov	r7, r2
 8007f96:	4620      	mov	r0, r4
 8007f98:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8007f9c:	4699      	mov	r9, r3
 8007f9e:	4688      	mov	r8, r1
 8007fa0:	1bed      	subs	r5, r5, r7
 8007fa2:	47b0      	blx	r6
 8007fa4:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8007fa6:	f8d4 30e8 	ldr.w	r3, [r4, #232]	; 0xe8
 8007faa:	6988      	ldr	r0, [r1, #24]
 8007fac:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007fae:	ebc8 0809 	rsb	r8, r8, r9
 8007fb2:	1c6a      	adds	r2, r5, #1
 8007fb4:	fb08 2202 	mla	r2, r8, r2, r2
 8007fb8:	4798      	blx	r3
 8007fba:	b003      	add	sp, #12
 8007fbc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08007fc0 <_GetDevFunc>:
 8007fc0:	3901      	subs	r1, #1
 8007fc2:	2917      	cmp	r1, #23
 8007fc4:	d828      	bhi.n	8008018 <_GetDevFunc+0x58>
 8007fc6:	e8df f001 	tbb	[pc, r1]
 8007fca:	2714      	.short	0x2714
 8007fcc:	27272727 	.word	0x27272727
 8007fd0:	0e272727 	.word	0x0e272727
 8007fd4:	0c191210 	.word	0x0c191210
 8007fd8:	27272729 	.word	0x27272729
 8007fdc:	23272727 	.word	0x23272727
 8007fe0:	251e      	.short	0x251e
 8007fe2:	480f      	ldr	r0, [pc, #60]	; (8008020 <_GetDevFunc+0x60>)
 8007fe4:	4770      	bx	lr
 8007fe6:	480f      	ldr	r0, [pc, #60]	; (8008024 <_GetDevFunc+0x64>)
 8007fe8:	4770      	bx	lr
 8007fea:	480f      	ldr	r0, [pc, #60]	; (8008028 <_GetDevFunc+0x68>)
 8007fec:	4770      	bx	lr
 8007fee:	480f      	ldr	r0, [pc, #60]	; (800802c <_GetDevFunc+0x6c>)
 8007ff0:	4770      	bx	lr
 8007ff2:	6803      	ldr	r3, [r0, #0]
 8007ff4:	689b      	ldr	r3, [r3, #8]
 8007ff6:	f8d3 0104 	ldr.w	r0, [r3, #260]	; 0x104
 8007ffa:	4770      	bx	lr
 8007ffc:	6803      	ldr	r3, [r0, #0]
 8007ffe:	689b      	ldr	r3, [r3, #8]
 8008000:	f8d3 00fc 	ldr.w	r0, [r3, #252]	; 0xfc
 8008004:	4770      	bx	lr
 8008006:	6803      	ldr	r3, [r0, #0]
 8008008:	689b      	ldr	r3, [r3, #8]
 800800a:	f8d3 0100 	ldr.w	r0, [r3, #256]	; 0x100
 800800e:	4770      	bx	lr
 8008010:	4807      	ldr	r0, [pc, #28]	; (8008030 <_GetDevFunc+0x70>)
 8008012:	4770      	bx	lr
 8008014:	4807      	ldr	r0, [pc, #28]	; (8008034 <_GetDevFunc+0x74>)
 8008016:	4770      	bx	lr
 8008018:	2000      	movs	r0, #0
 800801a:	4770      	bx	lr
 800801c:	4806      	ldr	r0, [pc, #24]	; (8008038 <_GetDevFunc+0x78>)
 800801e:	4770      	bx	lr
 8008020:	080083b9 	.word	0x080083b9
 8008024:	0800838f 	.word	0x0800838f
 8008028:	0800837b 	.word	0x0800837b
 800802c:	08008331 	.word	0x08008331
 8008030:	08008295 	.word	0x08008295
 8008034:	08007ef9 	.word	0x08007ef9
 8008038:	080083a3 	.word	0x080083a3

0800803c <_GetDevProp>:
 800803c:	3901      	subs	r1, #1
 800803e:	6880      	ldr	r0, [r0, #8]
 8008040:	290d      	cmp	r1, #13
 8008042:	d823      	bhi.n	800808c <_GetDevProp+0x50>
 8008044:	e8df f001 	tbb	[pc, r1]
 8008048:	0f0d0b09 	.word	0x0f0d0b09
 800804c:	11222222 	.word	0x11222222
 8008050:	13252507 	.word	0x13252507
 8008054:	1d18      	.short	0x1d18
 8008056:	2000      	movs	r0, #0
 8008058:	4770      	bx	lr
 800805a:	6800      	ldr	r0, [r0, #0]
 800805c:	4770      	bx	lr
 800805e:	6840      	ldr	r0, [r0, #4]
 8008060:	4770      	bx	lr
 8008062:	6880      	ldr	r0, [r0, #8]
 8008064:	4770      	bx	lr
 8008066:	68c0      	ldr	r0, [r0, #12]
 8008068:	4770      	bx	lr
 800806a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800806c:	4770      	bx	lr
 800806e:	b188      	cbz	r0, 8008094 <_GetDevProp+0x58>
 8008070:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8008072:	f000 0001 	and.w	r0, r0, #1
 8008076:	4770      	bx	lr
 8008078:	b160      	cbz	r0, 8008094 <_GetDevProp+0x58>
 800807a:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800807c:	f3c0 0040 	ubfx	r0, r0, #1, #1
 8008080:	4770      	bx	lr
 8008082:	b138      	cbz	r0, 8008094 <_GetDevProp+0x58>
 8008084:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8008086:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800808a:	4770      	bx	lr
 800808c:	f04f 30ff 	mov.w	r0, #4294967295
 8008090:	4770      	bx	lr
 8008092:	2001      	movs	r0, #1
 8008094:	4770      	bx	lr

08008096 <_GetDevData>:
 8008096:	6883      	ldr	r3, [r0, #8]
 8008098:	2901      	cmp	r1, #1
 800809a:	bf0c      	ite	eq
 800809c:	6c58      	ldreq	r0, [r3, #68]	; 0x44
 800809e:	2000      	movne	r0, #0
 80080a0:	4770      	bx	lr

080080a2 <_GetRect>:
 80080a2:	6883      	ldr	r3, [r0, #8]
 80080a4:	2200      	movs	r2, #0
 80080a6:	800a      	strh	r2, [r1, #0]
 80080a8:	804a      	strh	r2, [r1, #2]
 80080aa:	681a      	ldr	r2, [r3, #0]
 80080ac:	685b      	ldr	r3, [r3, #4]
 80080ae:	3a01      	subs	r2, #1
 80080b0:	3b01      	subs	r3, #1
 80080b2:	808a      	strh	r2, [r1, #4]
 80080b4:	80cb      	strh	r3, [r1, #6]
 80080b6:	4770      	bx	lr

080080b8 <GUIDRV_FlexColor__SetLog2Phys>:
 80080b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80080ba:	4d10      	ldr	r5, [pc, #64]	; (80080fc <GUIDRV_FlexColor__SetLog2Phys+0x44>)
 80080bc:	462e      	mov	r6, r5
 80080be:	4607      	mov	r7, r0
 80080c0:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80080c2:	b091      	sub	sp, #68	; 0x44
 80080c4:	466c      	mov	r4, sp
 80080c6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80080c8:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 80080cc:	3520      	adds	r5, #32
 80080ce:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80080d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80080d4:	ac08      	add	r4, sp, #32
 80080d6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80080d8:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80080dc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80080e0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80080e2:	aa10      	add	r2, sp, #64	; 0x40
 80080e4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80080e8:	f853 2c40 	ldr.w	r2, [r3, #-64]
 80080ec:	f8c7 2108 	str.w	r2, [r7, #264]	; 0x108
 80080f0:	f853 3c20 	ldr.w	r3, [r3, #-32]
 80080f4:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 80080f8:	b011      	add	sp, #68	; 0x44
 80080fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80080fc:	0800fe44 	.word	0x0800fe44

08008100 <_SetOrg>:
 8008100:	b507      	push	{r0, r1, r2, lr}
 8008102:	6980      	ldr	r0, [r0, #24]
 8008104:	e88d 0006 	stmia.w	sp, {r1, r2}
 8008108:	2103      	movs	r1, #3
 800810a:	466a      	mov	r2, sp
 800810c:	f7f8 fbb0 	bl	8000870 <LCD_X_DisplayDriver>
 8008110:	b003      	add	sp, #12
 8008112:	f85d fb04 	ldr.w	pc, [sp], #4

08008116 <GUIDRV_FlexColor__SetPixelIndexNoCache>:
 8008116:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800811a:	6884      	ldr	r4, [r0, #8]
 800811c:	4698      	mov	r8, r3
 800811e:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8008120:	079b      	lsls	r3, r3, #30
 8008122:	4689      	mov	r9, r1
 8008124:	4617      	mov	r7, r2
 8008126:	d532      	bpl.n	800818e <GUIDRV_FlexColor__SetPixelIndexNoCache+0x78>
 8008128:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800812c:	4620      	mov	r0, r4
 800812e:	4798      	blx	r3
 8008130:	f8d4 510c 	ldr.w	r5, [r4, #268]	; 0x10c
 8008134:	4606      	mov	r6, r0
 8008136:	463a      	mov	r2, r7
 8008138:	4620      	mov	r0, r4
 800813a:	4649      	mov	r1, r9
 800813c:	47a8      	blx	r5
 800813e:	6923      	ldr	r3, [r4, #16]
 8008140:	69a2      	ldr	r2, [r4, #24]
 8008142:	429e      	cmp	r6, r3
 8008144:	bfac      	ite	ge
 8008146:	2300      	movge	r3, #0
 8008148:	2301      	movlt	r3, #1
 800814a:	4296      	cmp	r6, r2
 800814c:	bfd4      	ite	le
 800814e:	461a      	movle	r2, r3
 8008150:	f043 0201 	orrgt.w	r2, r3, #1
 8008154:	6963      	ldr	r3, [r4, #20]
 8008156:	4298      	cmp	r0, r3
 8008158:	bfac      	ite	ge
 800815a:	4613      	movge	r3, r2
 800815c:	f042 0301 	orrlt.w	r3, r2, #1
 8008160:	4605      	mov	r5, r0
 8008162:	b913      	cbnz	r3, 800816a <GUIDRV_FlexColor__SetPixelIndexNoCache+0x54>
 8008164:	69e3      	ldr	r3, [r4, #28]
 8008166:	4298      	cmp	r0, r3
 8008168:	dd0a      	ble.n	8008180 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x6a>
 800816a:	6862      	ldr	r2, [r4, #4]
 800816c:	6823      	ldr	r3, [r4, #0]
 800816e:	3a01      	subs	r2, #1
 8008170:	9200      	str	r2, [sp, #0]
 8008172:	2100      	movs	r1, #0
 8008174:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8008178:	4620      	mov	r0, r4
 800817a:	460a      	mov	r2, r1
 800817c:	3b01      	subs	r3, #1
 800817e:	47b8      	blx	r7
 8008180:	f8d4 70ac 	ldr.w	r7, [r4, #172]	; 0xac
 8008184:	4620      	mov	r0, r4
 8008186:	4631      	mov	r1, r6
 8008188:	462a      	mov	r2, r5
 800818a:	47b8      	blx	r7
 800818c:	e003      	b.n	8008196 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x80>
 800818e:	f8d4 50ac 	ldr.w	r5, [r4, #172]	; 0xac
 8008192:	4620      	mov	r0, r4
 8008194:	47a8      	blx	r5
 8008196:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800819a:	4620      	mov	r0, r4
 800819c:	4641      	mov	r1, r8
 800819e:	4798      	blx	r3
 80081a0:	b003      	add	sp, #12
 80081a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080081a6 <GUIDRV_FlexColor__GetPixelIndexNoCache>:
 80081a6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80081a8:	6884      	ldr	r4, [r0, #8]
 80081aa:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80081ac:	079b      	lsls	r3, r3, #30
 80081ae:	460f      	mov	r7, r1
 80081b0:	4616      	mov	r6, r2
 80081b2:	d545      	bpl.n	8008240 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x9a>
 80081b4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80081b8:	4620      	mov	r0, r4
 80081ba:	4798      	blx	r3
 80081bc:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 80081c0:	4632      	mov	r2, r6
 80081c2:	4605      	mov	r5, r0
 80081c4:	4639      	mov	r1, r7
 80081c6:	4620      	mov	r0, r4
 80081c8:	4798      	blx	r3
 80081ca:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 80081ce:	4606      	mov	r6, r0
 80081d0:	b11b      	cbz	r3, 80081da <GUIDRV_FlexColor__GetPixelIndexNoCache+0x34>
 80081d2:	4620      	mov	r0, r4
 80081d4:	2101      	movs	r1, #1
 80081d6:	2200      	movs	r2, #0
 80081d8:	4798      	blx	r3
 80081da:	6923      	ldr	r3, [r4, #16]
 80081dc:	69a2      	ldr	r2, [r4, #24]
 80081de:	429d      	cmp	r5, r3
 80081e0:	bfac      	ite	ge
 80081e2:	2300      	movge	r3, #0
 80081e4:	2301      	movlt	r3, #1
 80081e6:	4295      	cmp	r5, r2
 80081e8:	bfd4      	ite	le
 80081ea:	461a      	movle	r2, r3
 80081ec:	f043 0201 	orrgt.w	r2, r3, #1
 80081f0:	6963      	ldr	r3, [r4, #20]
 80081f2:	429e      	cmp	r6, r3
 80081f4:	bfac      	ite	ge
 80081f6:	4613      	movge	r3, r2
 80081f8:	f042 0301 	orrlt.w	r3, r2, #1
 80081fc:	b913      	cbnz	r3, 8008204 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x5e>
 80081fe:	69e3      	ldr	r3, [r4, #28]
 8008200:	429e      	cmp	r6, r3
 8008202:	dd0a      	ble.n	800821a <GUIDRV_FlexColor__GetPixelIndexNoCache+0x74>
 8008204:	6862      	ldr	r2, [r4, #4]
 8008206:	6823      	ldr	r3, [r4, #0]
 8008208:	3a01      	subs	r2, #1
 800820a:	9200      	str	r2, [sp, #0]
 800820c:	2100      	movs	r1, #0
 800820e:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8008212:	4620      	mov	r0, r4
 8008214:	460a      	mov	r2, r1
 8008216:	3b01      	subs	r3, #1
 8008218:	47b8      	blx	r7
 800821a:	4629      	mov	r1, r5
 800821c:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 8008220:	4620      	mov	r0, r4
 8008222:	4632      	mov	r2, r6
 8008224:	4798      	blx	r3
 8008226:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 800822a:	4620      	mov	r0, r4
 800822c:	4798      	blx	r3
 800822e:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8008232:	4605      	mov	r5, r0
 8008234:	b16b      	cbz	r3, 8008252 <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 8008236:	4620      	mov	r0, r4
 8008238:	2100      	movs	r1, #0
 800823a:	2201      	movs	r2, #1
 800823c:	4798      	blx	r3
 800823e:	e008      	b.n	8008252 <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 8008240:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 8008244:	4620      	mov	r0, r4
 8008246:	4798      	blx	r3
 8008248:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 800824c:	4620      	mov	r0, r4
 800824e:	4798      	blx	r3
 8008250:	4605      	mov	r5, r0
 8008252:	4628      	mov	r0, r5
 8008254:	b003      	add	sp, #12
 8008256:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008258 <GUIDRV_FlexColor__InitOnce>:
 8008258:	b538      	push	{r3, r4, r5, lr}
 800825a:	6885      	ldr	r5, [r0, #8]
 800825c:	4604      	mov	r4, r0
 800825e:	b99d      	cbnz	r5, 8008288 <GUIDRV_FlexColor__InitOnce+0x30>
 8008260:	f44f 70be 	mov.w	r0, #380	; 0x17c
 8008264:	f003 fa04 	bl	800b670 <GUI_ALLOC_GetFixedBlock>
 8008268:	4b08      	ldr	r3, [pc, #32]	; (800828c <GUIDRV_FlexColor__InitOnce+0x34>)
 800826a:	60a0      	str	r0, [r4, #8]
 800826c:	681b      	ldr	r3, [r3, #0]
 800826e:	f44f 72be 	mov.w	r2, #380	; 0x17c
 8008272:	4629      	mov	r1, r5
 8008274:	4798      	blx	r3
 8008276:	68a3      	ldr	r3, [r4, #8]
 8008278:	2202      	movs	r2, #2
 800827a:	84da      	strh	r2, [r3, #38]	; 0x26
 800827c:	2201      	movs	r2, #1
 800827e:	621a      	str	r2, [r3, #32]
 8008280:	4a03      	ldr	r2, [pc, #12]	; (8008290 <GUIDRV_FlexColor__InitOnce+0x38>)
 8008282:	641c      	str	r4, [r3, #64]	; 0x40
 8008284:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
 8008288:	bd38      	pop	{r3, r4, r5, pc}
 800828a:	bf00      	nop
 800828c:	200000a4 	.word	0x200000a4
 8008290:	080080b9 	.word	0x080080b9

08008294 <_SetDevFunc>:
 8008294:	b570      	push	{r4, r5, r6, lr}
 8008296:	4606      	mov	r6, r0
 8008298:	460d      	mov	r5, r1
 800829a:	4614      	mov	r4, r2
 800829c:	f7ff ffdc 	bl	8008258 <GUIDRV_FlexColor__InitOnce>
 80082a0:	68b3      	ldr	r3, [r6, #8]
 80082a2:	2b00      	cmp	r3, #0
 80082a4:	d03b      	beq.n	800831e <_SetDevFunc+0x8a>
 80082a6:	2d26      	cmp	r5, #38	; 0x26
 80082a8:	d002      	beq.n	80082b0 <_SetDevFunc+0x1c>
 80082aa:	2d27      	cmp	r5, #39	; 0x27
 80082ac:	d016      	beq.n	80082dc <_SetDevFunc+0x48>
 80082ae:	bd70      	pop	{r4, r5, r6, pc}
 80082b0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80082b2:	2a10      	cmp	r2, #16
 80082b4:	d002      	beq.n	80082bc <_SetDevFunc+0x28>
 80082b6:	2a12      	cmp	r2, #18
 80082b8:	d008      	beq.n	80082cc <_SetDevFunc+0x38>
 80082ba:	bd70      	pop	{r4, r5, r6, pc}
 80082bc:	4a18      	ldr	r2, [pc, #96]	; (8008320 <_SetDevFunc+0x8c>)
 80082be:	f8c3 40dc 	str.w	r4, [r3, #220]	; 0xdc
 80082c2:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 80082c6:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 80082ca:	bd70      	pop	{r4, r5, r6, pc}
 80082cc:	4a15      	ldr	r2, [pc, #84]	; (8008324 <_SetDevFunc+0x90>)
 80082ce:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
 80082d2:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 80082d6:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 80082da:	bd70      	pop	{r4, r5, r6, pc}
 80082dc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80082de:	2a10      	cmp	r2, #16
 80082e0:	d002      	beq.n	80082e8 <_SetDevFunc+0x54>
 80082e2:	2a12      	cmp	r2, #18
 80082e4:	d00e      	beq.n	8008304 <_SetDevFunc+0x70>
 80082e6:	bd70      	pop	{r4, r5, r6, pc}
 80082e8:	b13c      	cbz	r4, 80082fa <_SetDevFunc+0x66>
 80082ea:	4a0f      	ldr	r2, [pc, #60]	; (8008328 <_SetDevFunc+0x94>)
 80082ec:	f8c3 40e4 	str.w	r4, [r3, #228]	; 0xe4
 80082f0:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 80082f4:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 80082f8:	bd70      	pop	{r4, r5, r6, pc}
 80082fa:	f8c3 40cc 	str.w	r4, [r3, #204]	; 0xcc
 80082fe:	f8c3 40c8 	str.w	r4, [r3, #200]	; 0xc8
 8008302:	bd70      	pop	{r4, r5, r6, pc}
 8008304:	b13c      	cbz	r4, 8008316 <_SetDevFunc+0x82>
 8008306:	4a09      	ldr	r2, [pc, #36]	; (800832c <_SetDevFunc+0x98>)
 8008308:	f8c3 40e8 	str.w	r4, [r3, #232]	; 0xe8
 800830c:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 8008310:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 8008314:	bd70      	pop	{r4, r5, r6, pc}
 8008316:	f8c3 40d0 	str.w	r4, [r3, #208]	; 0xd0
 800831a:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
 800831e:	bd70      	pop	{r4, r5, r6, pc}
 8008320:	08007f39 	.word	0x08007f39
 8008324:	08007f47 	.word	0x08007f47
 8008328:	08007f55 	.word	0x08007f55
 800832c:	08007f8b 	.word	0x08007f8b

08008330 <_GetDevFunc_Init>:
 8008330:	b538      	push	{r3, r4, r5, lr}
 8008332:	4605      	mov	r5, r0
 8008334:	f7ff ff90 	bl	8008258 <GUIDRV_FlexColor__InitOnce>
 8008338:	68ac      	ldr	r4, [r5, #8]
 800833a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800833e:	f003 f997 	bl	800b670 <GUI_ALLOC_GetFixedBlock>
 8008342:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008344:	66a0      	str	r0, [r4, #104]	; 0x68
 8008346:	3307      	adds	r3, #7
 8008348:	10d8      	asrs	r0, r3, #3
 800834a:	6823      	ldr	r3, [r4, #0]
 800834c:	4358      	muls	r0, r3
 800834e:	f003 f98f 	bl	800b670 <GUI_ALLOC_GetFixedBlock>
 8008352:	2101      	movs	r1, #1
 8008354:	2200      	movs	r2, #0
 8008356:	66e0      	str	r0, [r4, #108]	; 0x6c
 8008358:	69a8      	ldr	r0, [r5, #24]
 800835a:	f7f8 fa89 	bl	8000870 <LCD_X_DisplayDriver>
 800835e:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8008362:	4605      	mov	r5, r0
 8008364:	4620      	mov	r0, r4
 8008366:	4798      	blx	r3
 8008368:	4620      	mov	r0, r4
 800836a:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 800836e:	4798      	blx	r3
 8008370:	2d00      	cmp	r5, #0
 8008372:	bfd4      	ite	le
 8008374:	2000      	movle	r0, #0
 8008376:	2001      	movgt	r0, #1
 8008378:	bd38      	pop	{r3, r4, r5, pc}

0800837a <_GetDevFunc_SetSize>:
 800837a:	b570      	push	{r4, r5, r6, lr}
 800837c:	4604      	mov	r4, r0
 800837e:	460d      	mov	r5, r1
 8008380:	4616      	mov	r6, r2
 8008382:	f7ff ff69 	bl	8008258 <GUIDRV_FlexColor__InitOnce>
 8008386:	68a3      	ldr	r3, [r4, #8]
 8008388:	e883 0060 	stmia.w	r3, {r5, r6}
 800838c:	bd70      	pop	{r4, r5, r6, pc}

0800838e <_GetDevFunc_SetVSize>:
 800838e:	b570      	push	{r4, r5, r6, lr}
 8008390:	4604      	mov	r4, r0
 8008392:	460d      	mov	r5, r1
 8008394:	4616      	mov	r6, r2
 8008396:	f7ff ff5f 	bl	8008258 <GUIDRV_FlexColor__InitOnce>
 800839a:	68a3      	ldr	r3, [r4, #8]
 800839c:	609d      	str	r5, [r3, #8]
 800839e:	60de      	str	r6, [r3, #12]
 80083a0:	bd70      	pop	{r4, r5, r6, pc}

080083a2 <_GetDevFunc_Off>:
 80083a2:	b510      	push	{r4, lr}
 80083a4:	4604      	mov	r4, r0
 80083a6:	f7ff ff57 	bl	8008258 <GUIDRV_FlexColor__InitOnce>
 80083aa:	69a0      	ldr	r0, [r4, #24]
 80083ac:	2106      	movs	r1, #6
 80083ae:	2200      	movs	r2, #0
 80083b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80083b4:	f7f8 ba5c 	b.w	8000870 <LCD_X_DisplayDriver>

080083b8 <_GetDevFunc_On>:
 80083b8:	b510      	push	{r4, lr}
 80083ba:	4604      	mov	r4, r0
 80083bc:	f7ff ff4c 	bl	8008258 <GUIDRV_FlexColor__InitOnce>
 80083c0:	69a0      	ldr	r0, [r4, #24]
 80083c2:	2105      	movs	r1, #5
 80083c4:	2200      	movs	r2, #0
 80083c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80083ca:	f7f8 ba51 	b.w	8000870 <LCD_X_DisplayDriver>

080083ce <GUIDRV_FlexColor_Config>:
 80083ce:	b538      	push	{r3, r4, r5, lr}
 80083d0:	4605      	mov	r5, r0
 80083d2:	460c      	mov	r4, r1
 80083d4:	f7ff ff40 	bl	8008258 <GUIDRV_FlexColor__InitOnce>
 80083d8:	68ab      	ldr	r3, [r5, #8]
 80083da:	6822      	ldr	r2, [r4, #0]
 80083dc:	62da      	str	r2, [r3, #44]	; 0x2c
 80083de:	6862      	ldr	r2, [r4, #4]
 80083e0:	631a      	str	r2, [r3, #48]	; 0x30
 80083e2:	68a2      	ldr	r2, [r4, #8]
 80083e4:	635a      	str	r2, [r3, #52]	; 0x34
 80083e6:	0752      	lsls	r2, r2, #29
 80083e8:	d507      	bpl.n	80083fa <GUIDRV_FlexColor_Config+0x2c>
 80083ea:	e893 0006 	ldmia.w	r3, {r1, r2}
 80083ee:	601a      	str	r2, [r3, #0]
 80083f0:	6059      	str	r1, [r3, #4]
 80083f2:	68da      	ldr	r2, [r3, #12]
 80083f4:	6899      	ldr	r1, [r3, #8]
 80083f6:	60d9      	str	r1, [r3, #12]
 80083f8:	609a      	str	r2, [r3, #8]
 80083fa:	89a2      	ldrh	r2, [r4, #12]
 80083fc:	849a      	strh	r2, [r3, #36]	; 0x24
 80083fe:	6922      	ldr	r2, [r4, #16]
 8008400:	b112      	cbz	r2, 8008408 <GUIDRV_FlexColor_Config+0x3a>
 8008402:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8008406:	621a      	str	r2, [r3, #32]
 8008408:	bd38      	pop	{r3, r4, r5, pc}

0800840a <GUIDRV_FlexColor_SetFunc>:
 800840a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800840e:	4604      	mov	r4, r0
 8008410:	461f      	mov	r7, r3
 8008412:	4616      	mov	r6, r2
 8008414:	4688      	mov	r8, r1
 8008416:	f7ff ff1f 	bl	8008258 <GUIDRV_FlexColor__InitOnce>
 800841a:	68a5      	ldr	r5, [r4, #8]
 800841c:	4641      	mov	r1, r8
 800841e:	2268      	movs	r2, #104	; 0x68
 8008420:	f505 708a 	add.w	r0, r5, #276	; 0x114
 8008424:	f007 fc6a 	bl	800fcfc <memcpy>
 8008428:	4620      	mov	r0, r4
 800842a:	47b0      	blx	r6
 800842c:	4620      	mov	r0, r4
 800842e:	47b8      	blx	r7
 8008430:	6923      	ldr	r3, [r4, #16]
 8008432:	689b      	ldr	r3, [r3, #8]
 8008434:	4798      	blx	r3
 8008436:	62a8      	str	r0, [r5, #40]	; 0x28
 8008438:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800843c <LCD_UpdateColorIndices>:
 800843c:	b510      	push	{r4, lr}
 800843e:	4c07      	ldr	r4, [pc, #28]	; (800845c <LCD_UpdateColorIndices+0x20>)
 8008440:	6823      	ldr	r3, [r4, #0]
 8008442:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8008444:	f000 fc68 	bl	8008d18 <LCD_Color2Index>
 8008448:	f000 fc86 	bl	8008d58 <LCD_SetColorIndex>
 800844c:	6823      	ldr	r3, [r4, #0]
 800844e:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8008450:	f000 fc62 	bl	8008d18 <LCD_Color2Index>
 8008454:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008458:	f000 bc9a 	b.w	8008d90 <LCD_SetBkColorIndex>
 800845c:	200000b8 	.word	0x200000b8

08008460 <LCD_SetClipRectEx>:
 8008460:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008462:	4c09      	ldr	r4, [pc, #36]	; (8008488 <LCD_SetClipRectEx+0x28>)
 8008464:	6823      	ldr	r3, [r4, #0]
 8008466:	7c5a      	ldrb	r2, [r3, #17]
 8008468:	4b08      	ldr	r3, [pc, #32]	; (800848c <LCD_SetClipRectEx+0x2c>)
 800846a:	4605      	mov	r5, r0
 800846c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8008470:	68c2      	ldr	r2, [r0, #12]
 8008472:	4669      	mov	r1, sp
 8008474:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8008476:	4790      	blx	r2
 8008478:	6820      	ldr	r0, [r4, #0]
 800847a:	4629      	mov	r1, r5
 800847c:	466a      	mov	r2, sp
 800847e:	3008      	adds	r0, #8
 8008480:	f000 fcf1 	bl	8008e66 <GUI__IntersectRects>
 8008484:	b003      	add	sp, #12
 8008486:	bd30      	pop	{r4, r5, pc}
 8008488:	200000b8 	.word	0x200000b8
 800848c:	20002d28 	.word	0x20002d28

08008490 <LCD_SetVSizeEx>:
 8008490:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008492:	460d      	mov	r5, r1
 8008494:	4614      	mov	r4, r2
 8008496:	f002 f85d 	bl	800a554 <GUI_DEVICE__GetpDriver>
 800849a:	9001      	str	r0, [sp, #4]
 800849c:	b908      	cbnz	r0, 80084a2 <LCD_SetVSizeEx+0x12>
 800849e:	2001      	movs	r0, #1
 80084a0:	e00c      	b.n	80084bc <LCD_SetVSizeEx+0x2c>
 80084a2:	68c3      	ldr	r3, [r0, #12]
 80084a4:	210a      	movs	r1, #10
 80084a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80084a8:	a801      	add	r0, sp, #4
 80084aa:	4798      	blx	r3
 80084ac:	4603      	mov	r3, r0
 80084ae:	2800      	cmp	r0, #0
 80084b0:	d0f5      	beq.n	800849e <LCD_SetVSizeEx+0xe>
 80084b2:	9801      	ldr	r0, [sp, #4]
 80084b4:	4629      	mov	r1, r5
 80084b6:	4622      	mov	r2, r4
 80084b8:	4798      	blx	r3
 80084ba:	2000      	movs	r0, #0
 80084bc:	b003      	add	sp, #12
 80084be:	bd30      	pop	{r4, r5, pc}

080084c0 <LCD_SetSizeEx>:
 80084c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80084c2:	460d      	mov	r5, r1
 80084c4:	4614      	mov	r4, r2
 80084c6:	f002 f845 	bl	800a554 <GUI_DEVICE__GetpDriver>
 80084ca:	9001      	str	r0, [sp, #4]
 80084cc:	b908      	cbnz	r0, 80084d2 <LCD_SetSizeEx+0x12>
 80084ce:	2001      	movs	r0, #1
 80084d0:	e00c      	b.n	80084ec <LCD_SetSizeEx+0x2c>
 80084d2:	68c3      	ldr	r3, [r0, #12]
 80084d4:	210b      	movs	r1, #11
 80084d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80084d8:	a801      	add	r0, sp, #4
 80084da:	4798      	blx	r3
 80084dc:	4603      	mov	r3, r0
 80084de:	2800      	cmp	r0, #0
 80084e0:	d0f5      	beq.n	80084ce <LCD_SetSizeEx+0xe>
 80084e2:	9801      	ldr	r0, [sp, #4]
 80084e4:	4629      	mov	r1, r5
 80084e6:	4622      	mov	r2, r4
 80084e8:	4798      	blx	r3
 80084ea:	2000      	movs	r0, #0
 80084ec:	b003      	add	sp, #12
 80084ee:	bd30      	pop	{r4, r5, pc}

080084f0 <LCD_SetLUTEntryEx>:
 80084f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80084f2:	460d      	mov	r5, r1
 80084f4:	4614      	mov	r4, r2
 80084f6:	f002 f82d 	bl	800a554 <GUI_DEVICE__GetpDriver>
 80084fa:	9001      	str	r0, [sp, #4]
 80084fc:	b908      	cbnz	r0, 8008502 <LCD_SetLUTEntryEx+0x12>
 80084fe:	2001      	movs	r0, #1
 8008500:	e00c      	b.n	800851c <LCD_SetLUTEntryEx+0x2c>
 8008502:	68c3      	ldr	r3, [r0, #12]
 8008504:	2110      	movs	r1, #16
 8008506:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008508:	a801      	add	r0, sp, #4
 800850a:	4798      	blx	r3
 800850c:	4603      	mov	r3, r0
 800850e:	2800      	cmp	r0, #0
 8008510:	d0f5      	beq.n	80084fe <LCD_SetLUTEntryEx+0xe>
 8008512:	9801      	ldr	r0, [sp, #4]
 8008514:	4629      	mov	r1, r5
 8008516:	4622      	mov	r2, r4
 8008518:	4798      	blx	r3
 800851a:	2000      	movs	r0, #0
 800851c:	b003      	add	sp, #12
 800851e:	bd30      	pop	{r4, r5, pc}

08008520 <_GetDevProp>:
 8008520:	2801      	cmp	r0, #1
 8008522:	b510      	push	{r4, lr}
 8008524:	460c      	mov	r4, r1
 8008526:	dc08      	bgt.n	800853a <_GetDevProp+0x1a>
 8008528:	f002 f814 	bl	800a554 <GUI_DEVICE__GetpDriver>
 800852c:	b120      	cbz	r0, 8008538 <_GetDevProp+0x18>
 800852e:	68c3      	ldr	r3, [r0, #12]
 8008530:	4621      	mov	r1, r4
 8008532:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008534:	4798      	blx	r3
 8008536:	bd10      	pop	{r4, pc}
 8008538:	bd10      	pop	{r4, pc}
 800853a:	2000      	movs	r0, #0
 800853c:	bd10      	pop	{r4, pc}

0800853e <_GetMaxValue>:
 800853e:	b538      	push	{r3, r4, r5, lr}
 8008540:	4604      	mov	r4, r0
 8008542:	4621      	mov	r1, r4
 8008544:	2001      	movs	r0, #1
 8008546:	f7ff ffeb 	bl	8008520 <_GetDevProp>
 800854a:	4621      	mov	r1, r4
 800854c:	4605      	mov	r5, r0
 800854e:	2000      	movs	r0, #0
 8008550:	f7ff ffe6 	bl	8008520 <_GetDevProp>
 8008554:	42a8      	cmp	r0, r5
 8008556:	bfb8      	it	lt
 8008558:	4628      	movlt	r0, r5
 800855a:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 800855e:	bd38      	pop	{r3, r4, r5, pc}

08008560 <LCD_GetXSizeEx>:
 8008560:	2101      	movs	r1, #1
 8008562:	f7ff bfdd 	b.w	8008520 <_GetDevProp>

08008566 <LCD_GetYSizeEx>:
 8008566:	2102      	movs	r1, #2
 8008568:	f7ff bfda 	b.w	8008520 <_GetDevProp>

0800856c <LCD_GetVXSizeEx>:
 800856c:	2103      	movs	r1, #3
 800856e:	f7ff bfd7 	b.w	8008520 <_GetDevProp>

08008572 <LCD_GetVYSizeEx>:
 8008572:	2104      	movs	r1, #4
 8008574:	f7ff bfd4 	b.w	8008520 <_GetDevProp>

08008578 <LCD_GetBitsPerPixelEx>:
 8008578:	2108      	movs	r1, #8
 800857a:	f7ff bfd1 	b.w	8008520 <_GetDevProp>

0800857e <LCD_GetNumColorsEx>:
 800857e:	2109      	movs	r1, #9
 8008580:	f7ff bfce 	b.w	8008520 <_GetDevProp>

08008584 <LCD_GetXSize>:
 8008584:	4b02      	ldr	r3, [pc, #8]	; (8008590 <LCD_GetXSize+0xc>)
 8008586:	681b      	ldr	r3, [r3, #0]
 8008588:	7c58      	ldrb	r0, [r3, #17]
 800858a:	f7ff bfe9 	b.w	8008560 <LCD_GetXSizeEx>
 800858e:	bf00      	nop
 8008590:	200000b8 	.word	0x200000b8

08008594 <LCD_GetYSize>:
 8008594:	4b02      	ldr	r3, [pc, #8]	; (80085a0 <LCD_GetYSize+0xc>)
 8008596:	681b      	ldr	r3, [r3, #0]
 8008598:	7c58      	ldrb	r0, [r3, #17]
 800859a:	f7ff bfe4 	b.w	8008566 <LCD_GetYSizeEx>
 800859e:	bf00      	nop
 80085a0:	200000b8 	.word	0x200000b8

080085a4 <LCD_GetNumColors>:
 80085a4:	4b02      	ldr	r3, [pc, #8]	; (80085b0 <LCD_GetNumColors+0xc>)
 80085a6:	681b      	ldr	r3, [r3, #0]
 80085a8:	7c58      	ldrb	r0, [r3, #17]
 80085aa:	f7ff bfe8 	b.w	800857e <LCD_GetNumColorsEx>
 80085ae:	bf00      	nop
 80085b0:	200000b8 	.word	0x200000b8

080085b4 <GUI_GetBitsPerPixelEx>:
 80085b4:	b508      	push	{r3, lr}
 80085b6:	4b04      	ldr	r3, [pc, #16]	; (80085c8 <GUI_GetBitsPerPixelEx+0x14>)
 80085b8:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80085bc:	68c3      	ldr	r3, [r0, #12]
 80085be:	2108      	movs	r1, #8
 80085c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80085c2:	4798      	blx	r3
 80085c4:	bd08      	pop	{r3, pc}
 80085c6:	bf00      	nop
 80085c8:	20002d28 	.word	0x20002d28

080085cc <LCD_GetPaletteEx>:
 80085cc:	b508      	push	{r3, lr}
 80085ce:	f001 ffc1 	bl	800a554 <GUI_DEVICE__GetpDriver>
 80085d2:	b120      	cbz	r0, 80085de <LCD_GetPaletteEx+0x12>
 80085d4:	68c3      	ldr	r3, [r0, #12]
 80085d6:	2102      	movs	r1, #2
 80085d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80085da:	4798      	blx	r3
 80085dc:	bd08      	pop	{r3, pc}
 80085de:	bd08      	pop	{r3, pc}

080085e0 <LCD_GetPalette>:
 80085e0:	4b02      	ldr	r3, [pc, #8]	; (80085ec <LCD_GetPalette+0xc>)
 80085e2:	681b      	ldr	r3, [r3, #0]
 80085e4:	7c58      	ldrb	r0, [r3, #17]
 80085e6:	f7ff bff1 	b.w	80085cc <LCD_GetPaletteEx>
 80085ea:	bf00      	nop
 80085ec:	200000b8 	.word	0x200000b8

080085f0 <GUI_GetpfIndex2ColorEx>:
 80085f0:	4b02      	ldr	r3, [pc, #8]	; (80085fc <GUI_GetpfIndex2ColorEx+0xc>)
 80085f2:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80085f6:	691b      	ldr	r3, [r3, #16]
 80085f8:	6858      	ldr	r0, [r3, #4]
 80085fa:	4770      	bx	lr
 80085fc:	20002d28 	.word	0x20002d28

08008600 <GUI_GetpfColor2IndexEx>:
 8008600:	4b02      	ldr	r3, [pc, #8]	; (800860c <GUI_GetpfColor2IndexEx+0xc>)
 8008602:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8008606:	691b      	ldr	r3, [r3, #16]
 8008608:	6818      	ldr	r0, [r3, #0]
 800860a:	4770      	bx	lr
 800860c:	20002d28 	.word	0x20002d28

08008610 <LCD_GetXSizeMax>:
 8008610:	2001      	movs	r0, #1
 8008612:	f7ff bf94 	b.w	800853e <_GetMaxValue>

08008616 <LCD_GetYSizeMax>:
 8008616:	2002      	movs	r0, #2
 8008618:	f7ff bf91 	b.w	800853e <_GetMaxValue>

0800861c <LCD_GetVXSizeMax>:
 800861c:	2003      	movs	r0, #3
 800861e:	f7ff bf8e 	b.w	800853e <_GetMaxValue>
	...

08008624 <LCD_SetDisplaySize>:
 8008624:	4b02      	ldr	r3, [pc, #8]	; (8008630 <LCD_SetDisplaySize+0xc>)
 8008626:	6018      	str	r0, [r3, #0]
 8008628:	4b02      	ldr	r3, [pc, #8]	; (8008634 <LCD_SetDisplaySize+0x10>)
 800862a:	6019      	str	r1, [r3, #0]
 800862c:	4770      	bx	lr
 800862e:	bf00      	nop
 8008630:	20002b00 	.word	0x20002b00
 8008634:	20002afc 	.word	0x20002afc

08008638 <LCD_GetXSizeDisplay>:
 8008638:	4b01      	ldr	r3, [pc, #4]	; (8008640 <LCD_GetXSizeDisplay+0x8>)
 800863a:	6818      	ldr	r0, [r3, #0]
 800863c:	4770      	bx	lr
 800863e:	bf00      	nop
 8008640:	20002b00 	.word	0x20002b00

08008644 <LCD_GetYSizeDisplay>:
 8008644:	4b01      	ldr	r3, [pc, #4]	; (800864c <LCD_GetYSizeDisplay+0x8>)
 8008646:	6818      	ldr	r0, [r3, #0]
 8008648:	4770      	bx	lr
 800864a:	bf00      	nop
 800864c:	20002afc 	.word	0x20002afc

08008650 <LCD__GetBPP>:
 8008650:	2800      	cmp	r0, #0
 8008652:	d03b      	beq.n	80086cc <LCD__GetBPP+0x7c>
 8008654:	f030 0301 	bics.w	r3, r0, #1
 8008658:	d029      	beq.n	80086ae <LCD__GetBPP+0x5e>
 800865a:	f030 0303 	bics.w	r3, r0, #3
 800865e:	d028      	beq.n	80086b2 <LCD__GetBPP+0x62>
 8008660:	f030 0307 	bics.w	r3, r0, #7
 8008664:	d027      	beq.n	80086b6 <LCD__GetBPP+0x66>
 8008666:	f030 030f 	bics.w	r3, r0, #15
 800866a:	d026      	beq.n	80086ba <LCD__GetBPP+0x6a>
 800866c:	f030 031f 	bics.w	r3, r0, #31
 8008670:	d025      	beq.n	80086be <LCD__GetBPP+0x6e>
 8008672:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 8008676:	d024      	beq.n	80086c2 <LCD__GetBPP+0x72>
 8008678:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 800867c:	f023 0301 	bic.w	r3, r3, #1
 8008680:	b30b      	cbz	r3, 80086c6 <LCD__GetBPP+0x76>
 8008682:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
 8008686:	f023 030f 	bic.w	r3, r3, #15
 800868a:	b1e3      	cbz	r3, 80086c6 <LCD__GetBPP+0x76>
 800868c:	f420 43ff 	bic.w	r3, r0, #32640	; 0x7f80
 8008690:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8008694:	b1bb      	cbz	r3, 80086c6 <LCD__GetBPP+0x76>
 8008696:	0c03      	lsrs	r3, r0, #16
 8008698:	041b      	lsls	r3, r3, #16
 800869a:	b1a3      	cbz	r3, 80086c6 <LCD__GetBPP+0x76>
 800869c:	0c83      	lsrs	r3, r0, #18
 800869e:	049b      	lsls	r3, r3, #18
 80086a0:	b19b      	cbz	r3, 80086ca <LCD__GetBPP+0x7a>
 80086a2:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 80086a6:	bf0c      	ite	eq
 80086a8:	2018      	moveq	r0, #24
 80086aa:	2020      	movne	r0, #32
 80086ac:	4770      	bx	lr
 80086ae:	2001      	movs	r0, #1
 80086b0:	4770      	bx	lr
 80086b2:	2002      	movs	r0, #2
 80086b4:	4770      	bx	lr
 80086b6:	2003      	movs	r0, #3
 80086b8:	4770      	bx	lr
 80086ba:	2004      	movs	r0, #4
 80086bc:	4770      	bx	lr
 80086be:	2005      	movs	r0, #5
 80086c0:	4770      	bx	lr
 80086c2:	2008      	movs	r0, #8
 80086c4:	4770      	bx	lr
 80086c6:	2010      	movs	r0, #16
 80086c8:	4770      	bx	lr
 80086ca:	2012      	movs	r0, #18
 80086cc:	4770      	bx	lr

080086ce <LCD__GetBPPDevice>:
 80086ce:	b508      	push	{r3, lr}
 80086d0:	f7ff ffbe 	bl	8008650 <LCD__GetBPP>
 80086d4:	2801      	cmp	r0, #1
 80086d6:	d00f      	beq.n	80086f8 <LCD__GetBPPDevice+0x2a>
 80086d8:	1e83      	subs	r3, r0, #2
 80086da:	2b06      	cmp	r3, #6
 80086dc:	d909      	bls.n	80086f2 <LCD__GetBPPDevice+0x24>
 80086de:	f1a0 0309 	sub.w	r3, r0, #9
 80086e2:	2b07      	cmp	r3, #7
 80086e4:	d907      	bls.n	80086f6 <LCD__GetBPPDevice+0x28>
 80086e6:	3811      	subs	r0, #17
 80086e8:	2810      	cmp	r0, #16
 80086ea:	bf34      	ite	cc
 80086ec:	2020      	movcc	r0, #32
 80086ee:	2000      	movcs	r0, #0
 80086f0:	bd08      	pop	{r3, pc}
 80086f2:	2008      	movs	r0, #8
 80086f4:	bd08      	pop	{r3, pc}
 80086f6:	2010      	movs	r0, #16
 80086f8:	bd08      	pop	{r3, pc}
	...

080086fc <_SetDrawMode>:
 80086fc:	b570      	push	{r4, r5, r6, lr}
 80086fe:	4b08      	ldr	r3, [pc, #32]	; (8008720 <_SetDrawMode+0x24>)
 8008700:	681b      	ldr	r3, [r3, #0]
 8008702:	7c1a      	ldrb	r2, [r3, #16]
 8008704:	ea80 0102 	eor.w	r1, r0, r2
 8008708:	0749      	lsls	r1, r1, #29
 800870a:	d505      	bpl.n	8008718 <_SetDrawMode+0x1c>
 800870c:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800870e:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8008710:	6826      	ldr	r6, [r4, #0]
 8008712:	680d      	ldr	r5, [r1, #0]
 8008714:	6025      	str	r5, [r4, #0]
 8008716:	600e      	str	r6, [r1, #0]
 8008718:	7418      	strb	r0, [r3, #16]
 800871a:	4610      	mov	r0, r2
 800871c:	bd70      	pop	{r4, r5, r6, pc}
 800871e:	bf00      	nop
 8008720:	200000b8 	.word	0x200000b8

08008724 <LCD_SetDrawMode>:
 8008724:	b508      	push	{r3, lr}
 8008726:	4b02      	ldr	r3, [pc, #8]	; (8008730 <LCD_SetDrawMode+0xc>)
 8008728:	681b      	ldr	r3, [r3, #0]
 800872a:	689b      	ldr	r3, [r3, #8]
 800872c:	4798      	blx	r3
 800872e:	bd08      	pop	{r3, pc}
 8008730:	200000a0 	.word	0x200000a0

08008734 <LCD_DrawPixel>:
 8008734:	b538      	push	{r3, r4, r5, lr}
 8008736:	4b14      	ldr	r3, [pc, #80]	; (8008788 <LCD_DrawPixel+0x54>)
 8008738:	681b      	ldr	r3, [r3, #0]
 800873a:	460a      	mov	r2, r1
 800873c:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 8008740:	428a      	cmp	r2, r1
 8008742:	4604      	mov	r4, r0
 8008744:	db1e      	blt.n	8008784 <LCD_DrawPixel+0x50>
 8008746:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800874a:	428a      	cmp	r2, r1
 800874c:	dc1a      	bgt.n	8008784 <LCD_DrawPixel+0x50>
 800874e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8008752:	4288      	cmp	r0, r1
 8008754:	db16      	blt.n	8008784 <LCD_DrawPixel+0x50>
 8008756:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
 800875a:	4288      	cmp	r0, r1
 800875c:	dc12      	bgt.n	8008784 <LCD_DrawPixel+0x50>
 800875e:	7c19      	ldrb	r1, [r3, #16]
 8008760:	7c58      	ldrb	r0, [r3, #17]
 8008762:	f011 0f01 	tst.w	r1, #1
 8008766:	4909      	ldr	r1, [pc, #36]	; (800878c <LCD_DrawPixel+0x58>)
 8008768:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800876c:	d004      	beq.n	8008778 <LCD_DrawPixel+0x44>
 800876e:	68c3      	ldr	r3, [r0, #12]
 8008770:	4621      	mov	r1, r4
 8008772:	69db      	ldr	r3, [r3, #28]
 8008774:	4798      	blx	r3
 8008776:	bd38      	pop	{r3, r4, r5, pc}
 8008778:	68c1      	ldr	r1, [r0, #12]
 800877a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800877c:	698d      	ldr	r5, [r1, #24]
 800877e:	681b      	ldr	r3, [r3, #0]
 8008780:	4621      	mov	r1, r4
 8008782:	47a8      	blx	r5
 8008784:	bd38      	pop	{r3, r4, r5, pc}
 8008786:	bf00      	nop
 8008788:	200000b8 	.word	0x200000b8
 800878c:	20002d28 	.word	0x20002d28

08008790 <LCD_DrawHLine>:
 8008790:	b538      	push	{r3, r4, r5, lr}
 8008792:	4b10      	ldr	r3, [pc, #64]	; (80087d4 <LCD_DrawHLine+0x44>)
 8008794:	681c      	ldr	r4, [r3, #0]
 8008796:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800879a:	4299      	cmp	r1, r3
 800879c:	460d      	mov	r5, r1
 800879e:	db17      	blt.n	80087d0 <LCD_DrawHLine+0x40>
 80087a0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80087a4:	4299      	cmp	r1, r3
 80087a6:	dc13      	bgt.n	80087d0 <LCD_DrawHLine+0x40>
 80087a8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80087ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80087b0:	4288      	cmp	r0, r1
 80087b2:	bfa8      	it	ge
 80087b4:	4601      	movge	r1, r0
 80087b6:	429a      	cmp	r2, r3
 80087b8:	bfb8      	it	lt
 80087ba:	4613      	movlt	r3, r2
 80087bc:	428b      	cmp	r3, r1
 80087be:	db07      	blt.n	80087d0 <LCD_DrawHLine+0x40>
 80087c0:	7c60      	ldrb	r0, [r4, #17]
 80087c2:	4a05      	ldr	r2, [pc, #20]	; (80087d8 <LCD_DrawHLine+0x48>)
 80087c4:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 80087c8:	68c2      	ldr	r2, [r0, #12]
 80087ca:	6894      	ldr	r4, [r2, #8]
 80087cc:	462a      	mov	r2, r5
 80087ce:	47a0      	blx	r4
 80087d0:	bd38      	pop	{r3, r4, r5, pc}
 80087d2:	bf00      	nop
 80087d4:	200000b8 	.word	0x200000b8
 80087d8:	20002d28 	.word	0x20002d28

080087dc <LCD_DrawVLine>:
 80087dc:	b538      	push	{r3, r4, r5, lr}
 80087de:	4b10      	ldr	r3, [pc, #64]	; (8008820 <LCD_DrawVLine+0x44>)
 80087e0:	681c      	ldr	r4, [r3, #0]
 80087e2:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80087e6:	4605      	mov	r5, r0
 80087e8:	429d      	cmp	r5, r3
 80087ea:	4610      	mov	r0, r2
 80087ec:	db17      	blt.n	800881e <LCD_DrawVLine+0x42>
 80087ee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80087f2:	429d      	cmp	r5, r3
 80087f4:	dc13      	bgt.n	800881e <LCD_DrawVLine+0x42>
 80087f6:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80087fa:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80087fe:	4291      	cmp	r1, r2
 8008800:	bfa8      	it	ge
 8008802:	460a      	movge	r2, r1
 8008804:	4298      	cmp	r0, r3
 8008806:	bfb8      	it	lt
 8008808:	4603      	movlt	r3, r0
 800880a:	4293      	cmp	r3, r2
 800880c:	db07      	blt.n	800881e <LCD_DrawVLine+0x42>
 800880e:	7c60      	ldrb	r0, [r4, #17]
 8008810:	4904      	ldr	r1, [pc, #16]	; (8008824 <LCD_DrawVLine+0x48>)
 8008812:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8008816:	68c1      	ldr	r1, [r0, #12]
 8008818:	68cc      	ldr	r4, [r1, #12]
 800881a:	4629      	mov	r1, r5
 800881c:	47a0      	blx	r4
 800881e:	bd38      	pop	{r3, r4, r5, pc}
 8008820:	200000b8 	.word	0x200000b8
 8008824:	20002d28 	.word	0x20002d28

08008828 <LCD_FillRect>:
 8008828:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800882a:	460e      	mov	r6, r1
 800882c:	4912      	ldr	r1, [pc, #72]	; (8008878 <LCD_FillRect+0x50>)
 800882e:	680c      	ldr	r4, [r1, #0]
 8008830:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8008834:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8008838:	4288      	cmp	r0, r1
 800883a:	bfa8      	it	ge
 800883c:	4601      	movge	r1, r0
 800883e:	42aa      	cmp	r2, r5
 8008840:	bfb8      	it	lt
 8008842:	4615      	movlt	r5, r2
 8008844:	428d      	cmp	r5, r1
 8008846:	db14      	blt.n	8008872 <LCD_FillRect+0x4a>
 8008848:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800884c:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8008850:	4296      	cmp	r6, r2
 8008852:	bfa8      	it	ge
 8008854:	4632      	movge	r2, r6
 8008856:	4283      	cmp	r3, r0
 8008858:	bfa8      	it	ge
 800885a:	4603      	movge	r3, r0
 800885c:	4293      	cmp	r3, r2
 800885e:	db08      	blt.n	8008872 <LCD_FillRect+0x4a>
 8008860:	7c64      	ldrb	r4, [r4, #17]
 8008862:	4806      	ldr	r0, [pc, #24]	; (800887c <LCD_FillRect+0x54>)
 8008864:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8008868:	68c4      	ldr	r4, [r0, #12]
 800886a:	9300      	str	r3, [sp, #0]
 800886c:	6924      	ldr	r4, [r4, #16]
 800886e:	462b      	mov	r3, r5
 8008870:	47a0      	blx	r4
 8008872:	b002      	add	sp, #8
 8008874:	bd70      	pop	{r4, r5, r6, pc}
 8008876:	bf00      	nop
 8008878:	200000b8 	.word	0x200000b8
 800887c:	20002d28 	.word	0x20002d28

08008880 <LCD__DrawBitmap_1bpp>:
 8008880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008884:	f8df c1ac 	ldr.w	ip, [pc, #428]	; 8008a34 <LCD__DrawBitmap_1bpp+0x1b4>
 8008888:	b08f      	sub	sp, #60	; 0x3c
 800888a:	f8dc c000 	ldr.w	ip, [ip]
 800888e:	9009      	str	r0, [sp, #36]	; 0x24
 8008890:	460e      	mov	r6, r1
 8008892:	4615      	mov	r5, r2
 8008894:	469b      	mov	fp, r3
 8008896:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8008898:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 800889c:	f1bc 0f00 	cmp.w	ip, #0
 80088a0:	d00d      	beq.n	80088be <LCD__DrawBitmap_1bpp+0x3e>
 80088a2:	9d18      	ldr	r5, [sp, #96]	; 0x60
 80088a4:	9e19      	ldr	r6, [sp, #100]	; 0x64
 80088a6:	9500      	str	r5, [sp, #0]
 80088a8:	9601      	str	r6, [sp, #4]
 80088aa:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80088ac:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 80088ae:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80088b0:	9702      	str	r7, [sp, #8]
 80088b2:	9503      	str	r5, [sp, #12]
 80088b4:	9404      	str	r4, [sp, #16]
 80088b6:	9605      	str	r6, [sp, #20]
 80088b8:	f8dc 4000 	ldr.w	r4, [ip]
 80088bc:	e053      	b.n	8008966 <LCD__DrawBitmap_1bpp+0xe6>
 80088be:	9f18      	ldr	r7, [sp, #96]	; 0x60
 80088c0:	9819      	ldr	r0, [sp, #100]	; 0x64
 80088c2:	ea47 0300 	orr.w	r3, r7, r0
 80088c6:	2b01      	cmp	r3, #1
 80088c8:	d14f      	bne.n	800896a <LCD__DrawBitmap_1bpp+0xea>
 80088ca:	4b58      	ldr	r3, [pc, #352]	; (8008a2c <LCD__DrawBitmap_1bpp+0x1ac>)
 80088cc:	6818      	ldr	r0, [r3, #0]
 80088ce:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80088d2:	1a51      	subs	r1, r2, r1
 80088d4:	2900      	cmp	r1, #0
 80088d6:	dd08      	ble.n	80088ea <LCD__DrawBitmap_1bpp+0x6a>
 80088d8:	ebc1 030b 	rsb	r3, r1, fp
 80088dc:	2b00      	cmp	r3, #0
 80088de:	f340 80a2 	ble.w	8008a26 <LCD__DrawBitmap_1bpp+0x1a6>
 80088e2:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80088e4:	fb07 4401 	mla	r4, r7, r1, r4
 80088e8:	e001      	b.n	80088ee <LCD__DrawBitmap_1bpp+0x6e>
 80088ea:	465b      	mov	r3, fp
 80088ec:	4632      	mov	r2, r6
 80088ee:	445e      	add	r6, fp
 80088f0:	f9b0 100e 	ldrsh.w	r1, [r0, #14]
 80088f4:	3e01      	subs	r6, #1
 80088f6:	1a76      	subs	r6, r6, r1
 80088f8:	2e00      	cmp	r6, #0
 80088fa:	dd03      	ble.n	8008904 <LCD__DrawBitmap_1bpp+0x84>
 80088fc:	1b9b      	subs	r3, r3, r6
 80088fe:	2b00      	cmp	r3, #0
 8008900:	f340 8091 	ble.w	8008a26 <LCD__DrawBitmap_1bpp+0x1a6>
 8008904:	9909      	ldr	r1, [sp, #36]	; 0x24
 8008906:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 800890a:	4429      	add	r1, r5
 800890c:	3901      	subs	r1, #1
 800890e:	1b89      	subs	r1, r1, r6
 8008910:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8008912:	2900      	cmp	r1, #0
 8008914:	bfc8      	it	gt
 8008916:	ebc1 0505 	rsbgt	r5, r1, r5
 800891a:	ebc8 0106 	rsb	r1, r8, r6
 800891e:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8008922:	42b1      	cmp	r1, r6
 8008924:	da0c      	bge.n	8008940 <LCD__DrawBitmap_1bpp+0xc0>
 8008926:	ebc1 0c06 	rsb	ip, r1, r6
 800892a:	eb08 070c 	add.w	r7, r8, ip
 800892e:	1b8e      	subs	r6, r1, r6
 8008930:	f02c 0c07 	bic.w	ip, ip, #7
 8008934:	4435      	add	r5, r6
 8008936:	eb04 04e7 	add.w	r4, r4, r7, asr #3
 800893a:	4461      	add	r1, ip
 800893c:	f007 0807 	and.w	r8, r7, #7
 8008940:	2d00      	cmp	r5, #0
 8008942:	dd70      	ble.n	8008a26 <LCD__DrawBitmap_1bpp+0x1a6>
 8008944:	7c46      	ldrb	r6, [r0, #17]
 8008946:	483a      	ldr	r0, [pc, #232]	; (8008a30 <LCD__DrawBitmap_1bpp+0x1b0>)
 8008948:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800894a:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 800894e:	68c6      	ldr	r6, [r0, #12]
 8008950:	9701      	str	r7, [sp, #4]
 8008952:	9403      	str	r4, [sp, #12]
 8008954:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008956:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 8008958:	9300      	str	r3, [sp, #0]
 800895a:	9702      	str	r7, [sp, #8]
 800895c:	f8cd 8010 	str.w	r8, [sp, #16]
 8008960:	9405      	str	r4, [sp, #20]
 8008962:	6874      	ldr	r4, [r6, #4]
 8008964:	462b      	mov	r3, r5
 8008966:	47a0      	blx	r4
 8008968:	e05d      	b.n	8008a26 <LCD__DrawBitmap_1bpp+0x1a6>
 800896a:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800896c:	f1c7 0708 	rsb	r7, r7, #8
 8008970:	970c      	str	r7, [sp, #48]	; 0x30
 8008972:	4667      	mov	r7, ip
 8008974:	45dc      	cmp	ip, fp
 8008976:	da56      	bge.n	8008a26 <LCD__DrawBitmap_1bpp+0x1a6>
 8008978:	4b2c      	ldr	r3, [pc, #176]	; (8008a2c <LCD__DrawBitmap_1bpp+0x1ac>)
 800897a:	9819      	ldr	r0, [sp, #100]	; 0x64
 800897c:	681b      	ldr	r3, [r3, #0]
 800897e:	4430      	add	r0, r6
 8008980:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8008984:	900a      	str	r0, [sp, #40]	; 0x28
 8008986:	1e41      	subs	r1, r0, #1
 8008988:	4291      	cmp	r1, r2
 800898a:	910b      	str	r1, [sp, #44]	; 0x2c
 800898c:	db45      	blt.n	8008a1a <LCD__DrawBitmap_1bpp+0x19a>
 800898e:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8008992:	429e      	cmp	r6, r3
 8008994:	dc41      	bgt.n	8008a1a <LCD__DrawBitmap_1bpp+0x19a>
 8008996:	f04f 0800 	mov.w	r8, #0
 800899a:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800899e:	9408      	str	r4, [sp, #32]
 80089a0:	46c2      	mov	sl, r8
 80089a2:	45aa      	cmp	sl, r5
 80089a4:	da39      	bge.n	8008a1a <LCD__DrawBitmap_1bpp+0x19a>
 80089a6:	f1b8 0f00 	cmp.w	r8, #0
 80089aa:	d105      	bne.n	80089b8 <LCD__DrawBitmap_1bpp+0x138>
 80089ac:	9a08      	ldr	r2, [sp, #32]
 80089ae:	7817      	ldrb	r7, [r2, #0]
 80089b0:	3201      	adds	r2, #1
 80089b2:	9208      	str	r2, [sp, #32]
 80089b4:	f04f 0808 	mov.w	r8, #8
 80089b8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80089ba:	991a      	ldr	r1, [sp, #104]	; 0x68
 80089bc:	4a1b      	ldr	r2, [pc, #108]	; (8008a2c <LCD__DrawBitmap_1bpp+0x1ac>)
 80089be:	fa47 f300 	asr.w	r3, r7, r0
 80089c2:	ebc1 0808 	rsb	r8, r1, r8
 80089c6:	408f      	lsls	r7, r1
 80089c8:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 80089cc:	b2ff      	uxtb	r7, r7
 80089ce:	d103      	bne.n	80089d8 <LCD__DrawBitmap_1bpp+0x158>
 80089d0:	6810      	ldr	r0, [r2, #0]
 80089d2:	7c00      	ldrb	r0, [r0, #16]
 80089d4:	0780      	lsls	r0, r0, #30
 80089d6:	d41b      	bmi.n	8008a10 <LCD__DrawBitmap_1bpp+0x190>
 80089d8:	6812      	ldr	r2, [r2, #0]
 80089da:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80089dc:	6810      	ldr	r0, [r2, #0]
 80089de:	900d      	str	r0, [sp, #52]	; 0x34
 80089e0:	981d      	ldr	r0, [sp, #116]	; 0x74
 80089e2:	b110      	cbz	r0, 80089ea <LCD__DrawBitmap_1bpp+0x16a>
 80089e4:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 80089e8:	e000      	b.n	80089ec <LCD__DrawBitmap_1bpp+0x16c>
 80089ea:	b2db      	uxtb	r3, r3
 80089ec:	9918      	ldr	r1, [sp, #96]	; 0x60
 80089ee:	6013      	str	r3, [r2, #0]
 80089f0:	1e4a      	subs	r2, r1, #1
 80089f2:	444a      	add	r2, r9
 80089f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80089f6:	f8cd c01c 	str.w	ip, [sp, #28]
 80089fa:	4648      	mov	r0, r9
 80089fc:	4631      	mov	r1, r6
 80089fe:	f7ff ff13 	bl	8008828 <LCD_FillRect>
 8008a02:	4b0a      	ldr	r3, [pc, #40]	; (8008a2c <LCD__DrawBitmap_1bpp+0x1ac>)
 8008a04:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008a06:	681b      	ldr	r3, [r3, #0]
 8008a08:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8008a0c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008a0e:	601a      	str	r2, [r3, #0]
 8008a10:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8008a12:	f10a 0a01 	add.w	sl, sl, #1
 8008a16:	4499      	add	r9, r3
 8008a18:	e7c3      	b.n	80089a2 <LCD__DrawBitmap_1bpp+0x122>
 8008a1a:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8008a1c:	f10c 0c01 	add.w	ip, ip, #1
 8008a20:	4434      	add	r4, r6
 8008a22:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8008a24:	e7a6      	b.n	8008974 <LCD__DrawBitmap_1bpp+0xf4>
 8008a26:	b00f      	add	sp, #60	; 0x3c
 8008a28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008a2c:	200000b8 	.word	0x200000b8
 8008a30:	20002d28 	.word	0x20002d28
 8008a34:	20002ce0 	.word	0x20002ce0

08008a38 <LCD_DrawBitmap>:
 8008a38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008a3c:	f8df c20c 	ldr.w	ip, [pc, #524]	; 8008c4c <LCD_DrawBitmap+0x214>
 8008a40:	b091      	sub	sp, #68	; 0x44
 8008a42:	f8dc 9000 	ldr.w	r9, [ip]
 8008a46:	9207      	str	r2, [sp, #28]
 8008a48:	4605      	mov	r5, r0
 8008a4a:	4688      	mov	r8, r1
 8008a4c:	469b      	mov	fp, r3
 8008a4e:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 8008a50:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8008a52:	f1b9 0f00 	cmp.w	r9, #0
 8008a56:	d00c      	beq.n	8008a72 <LCD_DrawBitmap+0x3a>
 8008a58:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8008a5a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008a5c:	9500      	str	r5, [sp, #0]
 8008a5e:	9701      	str	r7, [sp, #4]
 8008a60:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8008a62:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 8008a64:	9602      	str	r6, [sp, #8]
 8008a66:	9503      	str	r5, [sp, #12]
 8008a68:	9404      	str	r4, [sp, #16]
 8008a6a:	9705      	str	r7, [sp, #20]
 8008a6c:	f8d9 4000 	ldr.w	r4, [r9]
 8008a70:	e081      	b.n	8008b76 <LCD_DrawBitmap+0x13e>
 8008a72:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8008a74:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8008a76:	ea47 0300 	orr.w	r3, r7, r0
 8008a7a:	2b01      	cmp	r3, #1
 8008a7c:	d17d      	bne.n	8008b7a <LCD_DrawBitmap+0x142>
 8008a7e:	4b71      	ldr	r3, [pc, #452]	; (8008c44 <LCD_DrawBitmap+0x20c>)
 8008a80:	6818      	ldr	r0, [r3, #0]
 8008a82:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8008a86:	1a53      	subs	r3, r2, r1
 8008a88:	2b00      	cmp	r3, #0
 8008a8a:	dd08      	ble.n	8008a9e <LCD_DrawBitmap+0x66>
 8008a8c:	ebc3 010b 	rsb	r1, r3, fp
 8008a90:	2900      	cmp	r1, #0
 8008a92:	f340 80d4 	ble.w	8008c3e <LCD_DrawBitmap+0x206>
 8008a96:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8008a98:	fb07 4403 	mla	r4, r7, r3, r4
 8008a9c:	e001      	b.n	8008aa2 <LCD_DrawBitmap+0x6a>
 8008a9e:	4659      	mov	r1, fp
 8008aa0:	4642      	mov	r2, r8
 8008aa2:	44d8      	add	r8, fp
 8008aa4:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 8008aa8:	f108 38ff 	add.w	r8, r8, #4294967295
 8008aac:	ebc3 0808 	rsb	r8, r3, r8
 8008ab0:	f1b8 0f00 	cmp.w	r8, #0
 8008ab4:	dd04      	ble.n	8008ac0 <LCD_DrawBitmap+0x88>
 8008ab6:	ebc8 0101 	rsb	r1, r8, r1
 8008aba:	2900      	cmp	r1, #0
 8008abc:	f340 80bf 	ble.w	8008c3e <LCD_DrawBitmap+0x206>
 8008ac0:	9b07      	ldr	r3, [sp, #28]
 8008ac2:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 8008ac6:	442b      	add	r3, r5
 8008ac8:	3b01      	subs	r3, #1
 8008aca:	ebcc 0303 	rsb	r3, ip, r3
 8008ace:	2b00      	cmp	r3, #0
 8008ad0:	dd02      	ble.n	8008ad8 <LCD_DrawBitmap+0xa0>
 8008ad2:	9f07      	ldr	r7, [sp, #28]
 8008ad4:	1aff      	subs	r7, r7, r3
 8008ad6:	9707      	str	r7, [sp, #28]
 8008ad8:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8008adc:	4565      	cmp	r5, ip
 8008ade:	da33      	bge.n	8008b48 <LCD_DrawBitmap+0x110>
 8008ae0:	9f07      	ldr	r7, [sp, #28]
 8008ae2:	ebc5 030c 	rsb	r3, r5, ip
 8008ae6:	1aff      	subs	r7, r7, r3
 8008ae8:	2e08      	cmp	r6, #8
 8008aea:	9707      	str	r7, [sp, #28]
 8008aec:	d027      	beq.n	8008b3e <LCD_DrawBitmap+0x106>
 8008aee:	dc0d      	bgt.n	8008b0c <LCD_DrawBitmap+0xd4>
 8008af0:	2e02      	cmp	r6, #2
 8008af2:	d014      	beq.n	8008b1e <LCD_DrawBitmap+0xe6>
 8008af4:	2e04      	cmp	r6, #4
 8008af6:	d01a      	beq.n	8008b2e <LCD_DrawBitmap+0xf6>
 8008af8:	2e01      	cmp	r6, #1
 8008afa:	d126      	bne.n	8008b4a <LCD_DrawBitmap+0x112>
 8008afc:	f023 0c07 	bic.w	ip, r3, #7
 8008b00:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 8008b04:	4465      	add	r5, ip
 8008b06:	f003 0307 	and.w	r3, r3, #7
 8008b0a:	e01e      	b.n	8008b4a <LCD_DrawBitmap+0x112>
 8008b0c:	2e18      	cmp	r6, #24
 8008b0e:	d018      	beq.n	8008b42 <LCD_DrawBitmap+0x10a>
 8008b10:	2e20      	cmp	r6, #32
 8008b12:	d016      	beq.n	8008b42 <LCD_DrawBitmap+0x10a>
 8008b14:	2e10      	cmp	r6, #16
 8008b16:	d118      	bne.n	8008b4a <LCD_DrawBitmap+0x112>
 8008b18:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8008b1c:	e013      	b.n	8008b46 <LCD_DrawBitmap+0x10e>
 8008b1e:	f023 0c03 	bic.w	ip, r3, #3
 8008b22:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 8008b26:	4465      	add	r5, ip
 8008b28:	f003 0303 	and.w	r3, r3, #3
 8008b2c:	e00d      	b.n	8008b4a <LCD_DrawBitmap+0x112>
 8008b2e:	f023 0c01 	bic.w	ip, r3, #1
 8008b32:	eb04 0463 	add.w	r4, r4, r3, asr #1
 8008b36:	4465      	add	r5, ip
 8008b38:	f003 0301 	and.w	r3, r3, #1
 8008b3c:	e005      	b.n	8008b4a <LCD_DrawBitmap+0x112>
 8008b3e:	441c      	add	r4, r3
 8008b40:	e001      	b.n	8008b46 <LCD_DrawBitmap+0x10e>
 8008b42:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8008b46:	4665      	mov	r5, ip
 8008b48:	2300      	movs	r3, #0
 8008b4a:	9f07      	ldr	r7, [sp, #28]
 8008b4c:	2f00      	cmp	r7, #0
 8008b4e:	dd76      	ble.n	8008c3e <LCD_DrawBitmap+0x206>
 8008b50:	f890 e011 	ldrb.w	lr, [r0, #17]
 8008b54:	483c      	ldr	r0, [pc, #240]	; (8008c48 <LCD_DrawBitmap+0x210>)
 8008b56:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8008b58:	f850 002e 	ldr.w	r0, [r0, lr, lsl #2]
 8008b5c:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 8008b60:	9403      	str	r4, [sp, #12]
 8008b62:	e88d 0042 	stmia.w	sp, {r1, r6}
 8008b66:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 8008b68:	9304      	str	r3, [sp, #16]
 8008b6a:	9702      	str	r7, [sp, #8]
 8008b6c:	9405      	str	r4, [sp, #20]
 8008b6e:	f8de 4004 	ldr.w	r4, [lr, #4]
 8008b72:	9b07      	ldr	r3, [sp, #28]
 8008b74:	4629      	mov	r1, r5
 8008b76:	47a0      	blx	r4
 8008b78:	e061      	b.n	8008c3e <LCD_DrawBitmap+0x206>
 8008b7a:	f1c6 0708 	rsb	r7, r6, #8
 8008b7e:	970e      	str	r7, [sp, #56]	; 0x38
 8008b80:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008b84:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8008b86:	455f      	cmp	r7, fp
 8008b88:	da59      	bge.n	8008c3e <LCD_DrawBitmap+0x206>
 8008b8a:	4b2e      	ldr	r3, [pc, #184]	; (8008c44 <LCD_DrawBitmap+0x20c>)
 8008b8c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008b8e:	681b      	ldr	r3, [r3, #0]
 8008b90:	4447      	add	r7, r8
 8008b92:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8008b96:	970c      	str	r7, [sp, #48]	; 0x30
 8008b98:	3f01      	subs	r7, #1
 8008b9a:	4297      	cmp	r7, r2
 8008b9c:	970d      	str	r7, [sp, #52]	; 0x34
 8008b9e:	db46      	blt.n	8008c2e <LCD_DrawBitmap+0x1f6>
 8008ba0:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8008ba4:	4598      	cmp	r8, r3
 8008ba6:	dc42      	bgt.n	8008c2e <LCD_DrawBitmap+0x1f6>
 8008ba8:	f04f 0a00 	mov.w	sl, #0
 8008bac:	940b      	str	r4, [sp, #44]	; 0x2c
 8008bae:	46ac      	mov	ip, r5
 8008bb0:	4657      	mov	r7, sl
 8008bb2:	9807      	ldr	r0, [sp, #28]
 8008bb4:	4287      	cmp	r7, r0
 8008bb6:	da3a      	bge.n	8008c2e <LCD_DrawBitmap+0x1f6>
 8008bb8:	f1ba 0f00 	cmp.w	sl, #0
 8008bbc:	d106      	bne.n	8008bcc <LCD_DrawBitmap+0x194>
 8008bbe:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8008bc0:	f890 9000 	ldrb.w	r9, [r0]
 8008bc4:	3001      	adds	r0, #1
 8008bc6:	900b      	str	r0, [sp, #44]	; 0x2c
 8008bc8:	f04f 0a08 	mov.w	sl, #8
 8008bcc:	990e      	ldr	r1, [sp, #56]	; 0x38
 8008bce:	4a1d      	ldr	r2, [pc, #116]	; (8008c44 <LCD_DrawBitmap+0x20c>)
 8008bd0:	fa49 f301 	asr.w	r3, r9, r1
 8008bd4:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 8008bd8:	fa09 f906 	lsl.w	r9, r9, r6
 8008bdc:	fa5f f989 	uxtb.w	r9, r9
 8008be0:	ebc6 0a0a 	rsb	sl, r6, sl
 8008be4:	d103      	bne.n	8008bee <LCD_DrawBitmap+0x1b6>
 8008be6:	6810      	ldr	r0, [r2, #0]
 8008be8:	7c00      	ldrb	r0, [r0, #16]
 8008bea:	0780      	lsls	r0, r0, #30
 8008bec:	d41b      	bmi.n	8008c26 <LCD_DrawBitmap+0x1ee>
 8008bee:	6812      	ldr	r2, [r2, #0]
 8008bf0:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8008bf2:	6810      	ldr	r0, [r2, #0]
 8008bf4:	900f      	str	r0, [sp, #60]	; 0x3c
 8008bf6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8008bf8:	b110      	cbz	r0, 8008c00 <LCD_DrawBitmap+0x1c8>
 8008bfa:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8008bfe:	e000      	b.n	8008c02 <LCD_DrawBitmap+0x1ca>
 8008c00:	b2db      	uxtb	r3, r3
 8008c02:	991a      	ldr	r1, [sp, #104]	; 0x68
 8008c04:	6013      	str	r3, [r2, #0]
 8008c06:	1e4a      	subs	r2, r1, #1
 8008c08:	4462      	add	r2, ip
 8008c0a:	4660      	mov	r0, ip
 8008c0c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008c0e:	f8cd c020 	str.w	ip, [sp, #32]
 8008c12:	4641      	mov	r1, r8
 8008c14:	f7ff fe08 	bl	8008828 <LCD_FillRect>
 8008c18:	4b0a      	ldr	r3, [pc, #40]	; (8008c44 <LCD_DrawBitmap+0x20c>)
 8008c1a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8008c1c:	681b      	ldr	r3, [r3, #0]
 8008c1e:	f8dd c020 	ldr.w	ip, [sp, #32]
 8008c22:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008c24:	601a      	str	r2, [r3, #0]
 8008c26:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8008c28:	3701      	adds	r7, #1
 8008c2a:	449c      	add	ip, r3
 8008c2c:	e7c1      	b.n	8008bb2 <LCD_DrawBitmap+0x17a>
 8008c2e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8008c30:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8008c34:	3701      	adds	r7, #1
 8008c36:	970a      	str	r7, [sp, #40]	; 0x28
 8008c38:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8008c3a:	443c      	add	r4, r7
 8008c3c:	e7a2      	b.n	8008b84 <LCD_DrawBitmap+0x14c>
 8008c3e:	b011      	add	sp, #68	; 0x44
 8008c40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008c44:	200000b8 	.word	0x200000b8
 8008c48:	20002d28 	.word	0x20002d28
 8008c4c:	20002ce0 	.word	0x20002ce0

08008c50 <LCD_SetClipRectMax>:
 8008c50:	b508      	push	{r3, lr}
 8008c52:	4b05      	ldr	r3, [pc, #20]	; (8008c68 <LCD_SetClipRectMax+0x18>)
 8008c54:	6819      	ldr	r1, [r3, #0]
 8008c56:	4b05      	ldr	r3, [pc, #20]	; (8008c6c <LCD_SetClipRectMax+0x1c>)
 8008c58:	7c4a      	ldrb	r2, [r1, #17]
 8008c5a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8008c5e:	68c3      	ldr	r3, [r0, #12]
 8008c60:	3108      	adds	r1, #8
 8008c62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008c64:	4798      	blx	r3
 8008c66:	bd08      	pop	{r3, pc}
 8008c68:	200000b8 	.word	0x200000b8
 8008c6c:	20002d28 	.word	0x20002d28

08008c70 <emWin_LCD_Init>:
 8008c70:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008c72:	f7ff ffed 	bl	8008c50 <LCD_SetClipRectMax>
 8008c76:	f005 fd79 	bl	800e76c <LCD_InitColors>
 8008c7a:	4604      	mov	r4, r0
 8008c7c:	2800      	cmp	r0, #0
 8008c7e:	d145      	bne.n	8008d0c <emWin_LCD_Init+0x9c>
 8008c80:	4605      	mov	r5, r0
 8008c82:	4628      	mov	r0, r5
 8008c84:	f001 fc66 	bl	800a554 <GUI_DEVICE__GetpDriver>
 8008c88:	9001      	str	r0, [sp, #4]
 8008c8a:	b150      	cbz	r0, 8008ca2 <emWin_LCD_Init+0x32>
 8008c8c:	68c3      	ldr	r3, [r0, #12]
 8008c8e:	210c      	movs	r1, #12
 8008c90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008c92:	a801      	add	r0, sp, #4
 8008c94:	4798      	blx	r3
 8008c96:	4603      	mov	r3, r0
 8008c98:	2800      	cmp	r0, #0
 8008c9a:	d035      	beq.n	8008d08 <emWin_LCD_Init+0x98>
 8008c9c:	9801      	ldr	r0, [sp, #4]
 8008c9e:	4798      	blx	r3
 8008ca0:	4304      	orrs	r4, r0
 8008ca2:	3501      	adds	r5, #1
 8008ca4:	2d02      	cmp	r5, #2
 8008ca6:	d1ec      	bne.n	8008c82 <emWin_LCD_Init+0x12>
 8008ca8:	bb84      	cbnz	r4, 8008d0c <emWin_LCD_Init+0x9c>
 8008caa:	f005 fd7b 	bl	800e7a4 <LCD_InitLUT>
 8008cae:	4b19      	ldr	r3, [pc, #100]	; (8008d14 <emWin_LCD_Init+0xa4>)
 8008cb0:	681a      	ldr	r2, [r3, #0]
 8008cb2:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8008cb6:	429a      	cmp	r2, r3
 8008cb8:	d101      	bne.n	8008cbe <emWin_LCD_Init+0x4e>
 8008cba:	2000      	movs	r0, #0
 8008cbc:	e027      	b.n	8008d0e <emWin_LCD_Init+0x9e>
 8008cbe:	2401      	movs	r4, #1
 8008cc0:	4620      	mov	r0, r4
 8008cc2:	f001 fc47 	bl	800a554 <GUI_DEVICE__GetpDriver>
 8008cc6:	9001      	str	r0, [sp, #4]
 8008cc8:	b1d0      	cbz	r0, 8008d00 <emWin_LCD_Init+0x90>
 8008cca:	4620      	mov	r0, r4
 8008ccc:	f000 fdee 	bl	80098ac <GUI_SelectLayer>
 8008cd0:	2004      	movs	r0, #4
 8008cd2:	f7ff fd27 	bl	8008724 <LCD_SetDrawMode>
 8008cd6:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8008cda:	2000      	movs	r0, #0
 8008cdc:	4601      	mov	r1, r0
 8008cde:	4613      	mov	r3, r2
 8008ce0:	f7ff fda2 	bl	8008828 <LCD_FillRect>
 8008ce4:	2000      	movs	r0, #0
 8008ce6:	f7ff fd1d 	bl	8008724 <LCD_SetDrawMode>
 8008cea:	a802      	add	r0, sp, #8
 8008cec:	210e      	movs	r1, #14
 8008cee:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8008cf2:	68db      	ldr	r3, [r3, #12]
 8008cf4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008cf6:	4798      	blx	r3
 8008cf8:	4603      	mov	r3, r0
 8008cfa:	b108      	cbz	r0, 8008d00 <emWin_LCD_Init+0x90>
 8008cfc:	9801      	ldr	r0, [sp, #4]
 8008cfe:	4798      	blx	r3
 8008d00:	f114 34ff 	adds.w	r4, r4, #4294967295
 8008d04:	d2dc      	bcs.n	8008cc0 <emWin_LCD_Init+0x50>
 8008d06:	e7d8      	b.n	8008cba <emWin_LCD_Init+0x4a>
 8008d08:	2001      	movs	r0, #1
 8008d0a:	e000      	b.n	8008d0e <emWin_LCD_Init+0x9e>
 8008d0c:	4620      	mov	r0, r4
 8008d0e:	b003      	add	sp, #12
 8008d10:	bd30      	pop	{r4, r5, pc}
 8008d12:	bf00      	nop
 8008d14:	20002bb4 	.word	0x20002bb4

08008d18 <LCD_Color2Index>:
 8008d18:	b508      	push	{r3, lr}
 8008d1a:	4b05      	ldr	r3, [pc, #20]	; (8008d30 <LCD_Color2Index+0x18>)
 8008d1c:	681b      	ldr	r3, [r3, #0]
 8008d1e:	7c5a      	ldrb	r2, [r3, #17]
 8008d20:	4b04      	ldr	r3, [pc, #16]	; (8008d34 <LCD_Color2Index+0x1c>)
 8008d22:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008d26:	691b      	ldr	r3, [r3, #16]
 8008d28:	681b      	ldr	r3, [r3, #0]
 8008d2a:	4798      	blx	r3
 8008d2c:	bd08      	pop	{r3, pc}
 8008d2e:	bf00      	nop
 8008d30:	200000b8 	.word	0x200000b8
 8008d34:	20002d28 	.word	0x20002d28

08008d38 <LCD_Index2Color>:
 8008d38:	b508      	push	{r3, lr}
 8008d3a:	4b05      	ldr	r3, [pc, #20]	; (8008d50 <LCD_Index2Color+0x18>)
 8008d3c:	681b      	ldr	r3, [r3, #0]
 8008d3e:	7c5a      	ldrb	r2, [r3, #17]
 8008d40:	4b04      	ldr	r3, [pc, #16]	; (8008d54 <LCD_Index2Color+0x1c>)
 8008d42:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008d46:	691b      	ldr	r3, [r3, #16]
 8008d48:	685b      	ldr	r3, [r3, #4]
 8008d4a:	4798      	blx	r3
 8008d4c:	bd08      	pop	{r3, pc}
 8008d4e:	bf00      	nop
 8008d50:	200000b8 	.word	0x200000b8
 8008d54:	20002d28 	.word	0x20002d28

08008d58 <LCD_SetColorIndex>:
 8008d58:	4b04      	ldr	r3, [pc, #16]	; (8008d6c <LCD_SetColorIndex+0x14>)
 8008d5a:	681b      	ldr	r3, [r3, #0]
 8008d5c:	7c1a      	ldrb	r2, [r3, #16]
 8008d5e:	0752      	lsls	r2, r2, #29
 8008d60:	bf4c      	ite	mi
 8008d62:	6b9b      	ldrmi	r3, [r3, #56]	; 0x38
 8008d64:	6bdb      	ldrpl	r3, [r3, #60]	; 0x3c
 8008d66:	6018      	str	r0, [r3, #0]
 8008d68:	4770      	bx	lr
 8008d6a:	bf00      	nop
 8008d6c:	200000b8 	.word	0x200000b8

08008d70 <_SetColor>:
 8008d70:	b508      	push	{r3, lr}
 8008d72:	4b06      	ldr	r3, [pc, #24]	; (8008d8c <_SetColor+0x1c>)
 8008d74:	681b      	ldr	r3, [r3, #0]
 8008d76:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8008d78:	4281      	cmp	r1, r0
 8008d7a:	d006      	beq.n	8008d8a <_SetColor+0x1a>
 8008d7c:	6318      	str	r0, [r3, #48]	; 0x30
 8008d7e:	f7ff ffcb 	bl	8008d18 <LCD_Color2Index>
 8008d82:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008d86:	f7ff bfe7 	b.w	8008d58 <LCD_SetColorIndex>
 8008d8a:	bd08      	pop	{r3, pc}
 8008d8c:	200000b8 	.word	0x200000b8

08008d90 <LCD_SetBkColorIndex>:
 8008d90:	4b04      	ldr	r3, [pc, #16]	; (8008da4 <LCD_SetBkColorIndex+0x14>)
 8008d92:	681b      	ldr	r3, [r3, #0]
 8008d94:	7c1a      	ldrb	r2, [r3, #16]
 8008d96:	0752      	lsls	r2, r2, #29
 8008d98:	bf4c      	ite	mi
 8008d9a:	6bdb      	ldrmi	r3, [r3, #60]	; 0x3c
 8008d9c:	6b9b      	ldrpl	r3, [r3, #56]	; 0x38
 8008d9e:	6018      	str	r0, [r3, #0]
 8008da0:	4770      	bx	lr
 8008da2:	bf00      	nop
 8008da4:	200000b8 	.word	0x200000b8

08008da8 <_SetBkColor>:
 8008da8:	b508      	push	{r3, lr}
 8008daa:	4b06      	ldr	r3, [pc, #24]	; (8008dc4 <_SetBkColor+0x1c>)
 8008dac:	681b      	ldr	r3, [r3, #0]
 8008dae:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8008db0:	4281      	cmp	r1, r0
 8008db2:	d006      	beq.n	8008dc2 <_SetBkColor+0x1a>
 8008db4:	6358      	str	r0, [r3, #52]	; 0x34
 8008db6:	f7ff ffaf 	bl	8008d18 <LCD_Color2Index>
 8008dba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008dbe:	f7ff bfe7 	b.w	8008d90 <LCD_SetBkColorIndex>
 8008dc2:	bd08      	pop	{r3, pc}
 8008dc4:	200000b8 	.word	0x200000b8

08008dc8 <LCD_SetBkColor>:
 8008dc8:	b508      	push	{r3, lr}
 8008dca:	4b02      	ldr	r3, [pc, #8]	; (8008dd4 <LCD_SetBkColor+0xc>)
 8008dcc:	681b      	ldr	r3, [r3, #0]
 8008dce:	685b      	ldr	r3, [r3, #4]
 8008dd0:	4798      	blx	r3
 8008dd2:	bd08      	pop	{r3, pc}
 8008dd4:	200000a0 	.word	0x200000a0

08008dd8 <LCD_SetColor>:
 8008dd8:	b508      	push	{r3, lr}
 8008dda:	4b02      	ldr	r3, [pc, #8]	; (8008de4 <LCD_SetColor+0xc>)
 8008ddc:	681b      	ldr	r3, [r3, #0]
 8008dde:	681b      	ldr	r3, [r3, #0]
 8008de0:	4798      	blx	r3
 8008de2:	bd08      	pop	{r3, pc}
 8008de4:	200000a0 	.word	0x200000a0

08008de8 <GUI__DivideRound32>:
 8008de8:	b149      	cbz	r1, 8008dfe <GUI__DivideRound32+0x16>
 8008dea:	2800      	cmp	r0, #0
 8008dec:	ea4f 0361 	mov.w	r3, r1, asr #1
 8008df0:	bfb4      	ite	lt
 8008df2:	ebc3 0000 	rsblt	r0, r3, r0
 8008df6:	18c0      	addge	r0, r0, r3
 8008df8:	fb90 f0f1 	sdiv	r0, r0, r1
 8008dfc:	4770      	bx	lr
 8008dfe:	4608      	mov	r0, r1
 8008e00:	4770      	bx	lr

08008e02 <GUI__HandleEOLine>:
 8008e02:	b513      	push	{r0, r1, r4, lr}
 8008e04:	6802      	ldr	r2, [r0, #0]
 8008e06:	4604      	mov	r4, r0
 8008e08:	a802      	add	r0, sp, #8
 8008e0a:	f840 2d04 	str.w	r2, [r0, #-4]!
 8008e0e:	f000 fb59 	bl	80094c4 <GUI_UC__GetCharCodeInc>
 8008e12:	b2c0      	uxtb	r0, r0
 8008e14:	b120      	cbz	r0, 8008e20 <GUI__HandleEOLine+0x1e>
 8008e16:	280a      	cmp	r0, #10
 8008e18:	d104      	bne.n	8008e24 <GUI__HandleEOLine+0x22>
 8008e1a:	9b01      	ldr	r3, [sp, #4]
 8008e1c:	6023      	str	r3, [r4, #0]
 8008e1e:	e001      	b.n	8008e24 <GUI__HandleEOLine+0x22>
 8008e20:	2001      	movs	r0, #1
 8008e22:	e000      	b.n	8008e26 <GUI__HandleEOLine+0x24>
 8008e24:	2000      	movs	r0, #0
 8008e26:	b002      	add	sp, #8
 8008e28:	bd10      	pop	{r4, pc}

08008e2a <GUI__IntersectRect>:
 8008e2a:	880b      	ldrh	r3, [r1, #0]
 8008e2c:	b510      	push	{r4, lr}
 8008e2e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8008e32:	b21a      	sxth	r2, r3
 8008e34:	4294      	cmp	r4, r2
 8008e36:	bfb8      	it	lt
 8008e38:	8003      	strhlt	r3, [r0, #0]
 8008e3a:	884b      	ldrh	r3, [r1, #2]
 8008e3c:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8008e40:	b21a      	sxth	r2, r3
 8008e42:	4294      	cmp	r4, r2
 8008e44:	bfb8      	it	lt
 8008e46:	8043      	strhlt	r3, [r0, #2]
 8008e48:	888b      	ldrh	r3, [r1, #4]
 8008e4a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8008e4e:	b21a      	sxth	r2, r3
 8008e50:	4294      	cmp	r4, r2
 8008e52:	bfc8      	it	gt
 8008e54:	8083      	strhgt	r3, [r0, #4]
 8008e56:	88cb      	ldrh	r3, [r1, #6]
 8008e58:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8008e5c:	b21a      	sxth	r2, r3
 8008e5e:	4291      	cmp	r1, r2
 8008e60:	bfc8      	it	gt
 8008e62:	80c3      	strhgt	r3, [r0, #6]
 8008e64:	bd10      	pop	{r4, pc}

08008e66 <GUI__IntersectRects>:
 8008e66:	b570      	push	{r4, r5, r6, lr}
 8008e68:	f9b2 3000 	ldrsh.w	r3, [r2]
 8008e6c:	f9b1 4000 	ldrsh.w	r4, [r1]
 8008e70:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8008e74:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 8008e78:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 8008e7c:	429c      	cmp	r4, r3
 8008e7e:	bfb8      	it	lt
 8008e80:	461c      	movlt	r4, r3
 8008e82:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8008e86:	429d      	cmp	r5, r3
 8008e88:	bfa8      	it	ge
 8008e8a:	462b      	movge	r3, r5
 8008e8c:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 8008e90:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8008e94:	42ae      	cmp	r6, r5
 8008e96:	bfb8      	it	lt
 8008e98:	4635      	movlt	r5, r6
 8008e9a:	b2a4      	uxth	r4, r4
 8008e9c:	b2ad      	uxth	r5, r5
 8008e9e:	4291      	cmp	r1, r2
 8008ea0:	bfb8      	it	lt
 8008ea2:	460a      	movlt	r2, r1
 8008ea4:	8004      	strh	r4, [r0, #0]
 8008ea6:	8085      	strh	r5, [r0, #4]
 8008ea8:	b224      	sxth	r4, r4
 8008eaa:	b22d      	sxth	r5, r5
 8008eac:	b29b      	uxth	r3, r3
 8008eae:	b292      	uxth	r2, r2
 8008eb0:	42a5      	cmp	r5, r4
 8008eb2:	8043      	strh	r3, [r0, #2]
 8008eb4:	80c2      	strh	r2, [r0, #6]
 8008eb6:	db06      	blt.n	8008ec6 <GUI__IntersectRects+0x60>
 8008eb8:	b210      	sxth	r0, r2
 8008eba:	b21b      	sxth	r3, r3
 8008ebc:	4298      	cmp	r0, r3
 8008ebe:	bfb4      	ite	lt
 8008ec0:	2000      	movlt	r0, #0
 8008ec2:	2001      	movge	r0, #1
 8008ec4:	bd70      	pop	{r4, r5, r6, pc}
 8008ec6:	2000      	movs	r0, #0
 8008ec8:	bd70      	pop	{r4, r5, r6, pc}

08008eca <GUI__memset16>:
 8008eca:	b570      	push	{r4, r5, r6, lr}
 8008ecc:	0784      	lsls	r4, r0, #30
 8008ece:	d502      	bpl.n	8008ed6 <GUI__memset16+0xc>
 8008ed0:	8001      	strh	r1, [r0, #0]
 8008ed2:	3a01      	subs	r2, #1
 8008ed4:	3002      	adds	r0, #2
 8008ed6:	0855      	lsrs	r5, r2, #1
 8008ed8:	462b      	mov	r3, r5
 8008eda:	b305      	cbz	r5, 8008f1e <GUI__memset16+0x54>
 8008edc:	2d03      	cmp	r5, #3
 8008ede:	eb01 4401 	add.w	r4, r1, r1, lsl #16
 8008ee2:	dc02      	bgt.n	8008eea <GUI__memset16+0x20>
 8008ee4:	4606      	mov	r6, r0
 8008ee6:	461d      	mov	r5, r3
 8008ee8:	e012      	b.n	8008f10 <GUI__memset16+0x46>
 8008eea:	4603      	mov	r3, r0
 8008eec:	462e      	mov	r6, r5
 8008eee:	3e04      	subs	r6, #4
 8008ef0:	2e03      	cmp	r6, #3
 8008ef2:	601c      	str	r4, [r3, #0]
 8008ef4:	605c      	str	r4, [r3, #4]
 8008ef6:	609c      	str	r4, [r3, #8]
 8008ef8:	60dc      	str	r4, [r3, #12]
 8008efa:	f103 0310 	add.w	r3, r3, #16
 8008efe:	dcf6      	bgt.n	8008eee <GUI__memset16+0x24>
 8008f00:	3d04      	subs	r5, #4
 8008f02:	08ab      	lsrs	r3, r5, #2
 8008f04:	1c5e      	adds	r6, r3, #1
 8008f06:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 8008f0a:	eba5 0383 	sub.w	r3, r5, r3, lsl #2
 8008f0e:	e7e9      	b.n	8008ee4 <GUI__memset16+0x1a>
 8008f10:	b11d      	cbz	r5, 8008f1a <GUI__memset16+0x50>
 8008f12:	f846 4b04 	str.w	r4, [r6], #4
 8008f16:	3d01      	subs	r5, #1
 8008f18:	e7fa      	b.n	8008f10 <GUI__memset16+0x46>
 8008f1a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8008f1e:	07d3      	lsls	r3, r2, #31
 8008f20:	bf48      	it	mi
 8008f22:	8001      	strhmi	r1, [r0, #0]
 8008f24:	bd70      	pop	{r4, r5, r6, pc}

08008f26 <GUI__ReduceRect>:
 8008f26:	880b      	ldrh	r3, [r1, #0]
 8008f28:	b292      	uxth	r2, r2
 8008f2a:	4413      	add	r3, r2
 8008f2c:	8003      	strh	r3, [r0, #0]
 8008f2e:	888b      	ldrh	r3, [r1, #4]
 8008f30:	1a9b      	subs	r3, r3, r2
 8008f32:	8083      	strh	r3, [r0, #4]
 8008f34:	884b      	ldrh	r3, [r1, #2]
 8008f36:	4413      	add	r3, r2
 8008f38:	8043      	strh	r3, [r0, #2]
 8008f3a:	88cb      	ldrh	r3, [r1, #6]
 8008f3c:	1a9a      	subs	r2, r3, r2
 8008f3e:	80c2      	strh	r2, [r0, #6]
 8008f40:	4770      	bx	lr

08008f42 <GUI__sqrt32>:
 8008f42:	b510      	push	{r4, lr}
 8008f44:	2110      	movs	r1, #16
 8008f46:	2300      	movs	r3, #0
 8008f48:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8008f4c:	189c      	adds	r4, r3, r2
 8008f4e:	4284      	cmp	r4, r0
 8008f50:	bf9c      	itt	ls
 8008f52:	18a3      	addls	r3, r4, r2
 8008f54:	ebc4 0000 	rsbls	r0, r4, r0
 8008f58:	3901      	subs	r1, #1
 8008f5a:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8008f5e:	ea4f 0292 	mov.w	r2, r2, lsr #2
 8008f62:	d1f3      	bne.n	8008f4c <GUI__sqrt32+0xa>
 8008f64:	4618      	mov	r0, r3
 8008f66:	bd10      	pop	{r4, pc}

08008f68 <GUI__strcmp>:
 8008f68:	b510      	push	{r4, lr}
 8008f6a:	4b09      	ldr	r3, [pc, #36]	; (8008f90 <GUI__strcmp+0x28>)
 8008f6c:	2800      	cmp	r0, #0
 8008f6e:	bf08      	it	eq
 8008f70:	4618      	moveq	r0, r3
 8008f72:	2900      	cmp	r1, #0
 8008f74:	bf08      	it	eq
 8008f76:	4619      	moveq	r1, r3
 8008f78:	2300      	movs	r3, #0
 8008f7a:	5cc4      	ldrb	r4, [r0, r3]
 8008f7c:	5cca      	ldrb	r2, [r1, r3]
 8008f7e:	42a2      	cmp	r2, r4
 8008f80:	d104      	bne.n	8008f8c <GUI__strcmp+0x24>
 8008f82:	3301      	adds	r3, #1
 8008f84:	2a00      	cmp	r2, #0
 8008f86:	d1f8      	bne.n	8008f7a <GUI__strcmp+0x12>
 8008f88:	4610      	mov	r0, r2
 8008f8a:	bd10      	pop	{r4, pc}
 8008f8c:	2001      	movs	r0, #1
 8008f8e:	bd10      	pop	{r4, pc}
 8008f90:	08012c60 	.word	0x08012c60

08008f94 <GUI__strcmp_hp>:
 8008f94:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008f96:	460d      	mov	r5, r1
 8008f98:	b160      	cbz	r0, 8008fb4 <GUI__strcmp_hp+0x20>
 8008f9a:	f002 fa99 	bl	800b4d0 <GUI_ALLOC_LockH>
 8008f9e:	ac02      	add	r4, sp, #8
 8008fa0:	4629      	mov	r1, r5
 8008fa2:	f844 0d04 	str.w	r0, [r4, #-4]!
 8008fa6:	f7ff ffdf 	bl	8008f68 <GUI__strcmp>
 8008faa:	4605      	mov	r5, r0
 8008fac:	4620      	mov	r0, r4
 8008fae:	f002 fa9d 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8008fb2:	e000      	b.n	8008fb6 <GUI__strcmp_hp+0x22>
 8008fb4:	2501      	movs	r5, #1
 8008fb6:	4628      	mov	r0, r5
 8008fb8:	b003      	add	sp, #12
 8008fba:	bd30      	pop	{r4, r5, pc}

08008fbc <GUI__strlen>:
 8008fbc:	f04f 33ff 	mov.w	r3, #4294967295
 8008fc0:	b118      	cbz	r0, 8008fca <GUI__strlen+0xe>
 8008fc2:	3301      	adds	r3, #1
 8008fc4:	5cc2      	ldrb	r2, [r0, r3]
 8008fc6:	2a00      	cmp	r2, #0
 8008fc8:	d1fb      	bne.n	8008fc2 <GUI__strlen+0x6>
 8008fca:	4618      	mov	r0, r3
 8008fcc:	4770      	bx	lr
	...

08008fd0 <GUI__SetText>:
 8008fd0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008fd2:	6807      	ldr	r7, [r0, #0]
 8008fd4:	4605      	mov	r5, r0
 8008fd6:	4638      	mov	r0, r7
 8008fd8:	460e      	mov	r6, r1
 8008fda:	f7ff ffdb 	bl	8008f94 <GUI__strcmp_hp>
 8008fde:	b908      	cbnz	r0, 8008fe4 <GUI__SetText+0x14>
 8008fe0:	2000      	movs	r0, #0
 8008fe2:	e02f      	b.n	8009044 <GUI__SetText+0x74>
 8008fe4:	4630      	mov	r0, r6
 8008fe6:	f7ff ffe9 	bl	8008fbc <GUI__strlen>
 8008fea:	1c44      	adds	r4, r0, #1
 8008fec:	4638      	mov	r0, r7
 8008fee:	f002 fa9d 	bl	800b52c <GUI_ALLOC_GetSize>
 8008ff2:	4284      	cmp	r4, r0
 8008ff4:	d110      	bne.n	8009018 <GUI__SetText+0x48>
 8008ff6:	2c00      	cmp	r4, #0
 8008ff8:	d0f2      	beq.n	8008fe0 <GUI__SetText+0x10>
 8008ffa:	4638      	mov	r0, r7
 8008ffc:	f002 fa68 	bl	800b4d0 <GUI_ALLOC_LockH>
 8009000:	ad02      	add	r5, sp, #8
 8009002:	4b11      	ldr	r3, [pc, #68]	; (8009048 <GUI__SetText+0x78>)
 8009004:	f845 0d04 	str.w	r0, [r5, #-4]!
 8009008:	681b      	ldr	r3, [r3, #0]
 800900a:	4631      	mov	r1, r6
 800900c:	4622      	mov	r2, r4
 800900e:	4798      	blx	r3
 8009010:	4628      	mov	r0, r5
 8009012:	f002 fa6b 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8009016:	e014      	b.n	8009042 <GUI__SetText+0x72>
 8009018:	4620      	mov	r0, r4
 800901a:	f002 fc25 	bl	800b868 <GUI_ALLOC_AllocNoInit>
 800901e:	4607      	mov	r7, r0
 8009020:	2800      	cmp	r0, #0
 8009022:	d0dd      	beq.n	8008fe0 <GUI__SetText+0x10>
 8009024:	f002 fa54 	bl	800b4d0 <GUI_ALLOC_LockH>
 8009028:	ac02      	add	r4, sp, #8
 800902a:	4631      	mov	r1, r6
 800902c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009030:	f006 fe94 	bl	800fd5c <strcpy>
 8009034:	4620      	mov	r0, r4
 8009036:	f002 fa59 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800903a:	4628      	mov	r0, r5
 800903c:	f002 fc18 	bl	800b870 <GUI_ALLOC_FreePtr>
 8009040:	602f      	str	r7, [r5, #0]
 8009042:	2001      	movs	r0, #1
 8009044:	b003      	add	sp, #12
 8009046:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009048:	200000a8 	.word	0x200000a8

0800904c <GUI__ManageCacheEx>:
 800904c:	2801      	cmp	r0, #1
 800904e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009050:	4604      	mov	r4, r0
 8009052:	460d      	mov	r5, r1
 8009054:	dc65      	bgt.n	8009122 <GUI__ManageCacheEx+0xd6>
 8009056:	4b34      	ldr	r3, [pc, #208]	; (8009128 <GUI__ManageCacheEx+0xdc>)
 8009058:	681b      	ldr	r3, [r3, #0]
 800905a:	b103      	cbz	r3, 800905e <GUI__ManageCacheEx+0x12>
 800905c:	4798      	blx	r3
 800905e:	2d01      	cmp	r5, #1
 8009060:	d004      	beq.n	800906c <GUI__ManageCacheEx+0x20>
 8009062:	2d02      	cmp	r5, #2
 8009064:	d021      	beq.n	80090aa <GUI__ManageCacheEx+0x5e>
 8009066:	2d00      	cmp	r5, #0
 8009068:	d15b      	bne.n	8009122 <GUI__ManageCacheEx+0xd6>
 800906a:	e035      	b.n	80090d8 <GUI__ManageCacheEx+0x8c>
 800906c:	4e2f      	ldr	r6, [pc, #188]	; (800912c <GUI__ManageCacheEx+0xe0>)
 800906e:	f856 7024 	ldr.w	r7, [r6, r4, lsl #2]
 8009072:	b9b7      	cbnz	r7, 80090a2 <GUI__ManageCacheEx+0x56>
 8009074:	4620      	mov	r0, r4
 8009076:	f001 fa6d 	bl	800a554 <GUI_DEVICE__GetpDriver>
 800907a:	9001      	str	r0, [sp, #4]
 800907c:	2800      	cmp	r0, #0
 800907e:	d050      	beq.n	8009122 <GUI__ManageCacheEx+0xd6>
 8009080:	68c3      	ldr	r3, [r0, #12]
 8009082:	210d      	movs	r1, #13
 8009084:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009086:	a801      	add	r0, sp, #4
 8009088:	4798      	blx	r3
 800908a:	4603      	mov	r3, r0
 800908c:	2800      	cmp	r0, #0
 800908e:	d048      	beq.n	8009122 <GUI__ManageCacheEx+0xd6>
 8009090:	9801      	ldr	r0, [sp, #4]
 8009092:	4629      	mov	r1, r5
 8009094:	4798      	blx	r3
 8009096:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 800909a:	3301      	adds	r3, #1
 800909c:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
 80090a0:	e018      	b.n	80090d4 <GUI__ManageCacheEx+0x88>
 80090a2:	3701      	adds	r7, #1
 80090a4:	f846 7024 	str.w	r7, [r6, r4, lsl #2]
 80090a8:	e03b      	b.n	8009122 <GUI__ManageCacheEx+0xd6>
 80090aa:	4620      	mov	r0, r4
 80090ac:	f001 fa52 	bl	800a554 <GUI_DEVICE__GetpDriver>
 80090b0:	9001      	str	r0, [sp, #4]
 80090b2:	2800      	cmp	r0, #0
 80090b4:	d035      	beq.n	8009122 <GUI__ManageCacheEx+0xd6>
 80090b6:	68c3      	ldr	r3, [r0, #12]
 80090b8:	210d      	movs	r1, #13
 80090ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80090bc:	a801      	add	r0, sp, #4
 80090be:	4798      	blx	r3
 80090c0:	4604      	mov	r4, r0
 80090c2:	2800      	cmp	r0, #0
 80090c4:	d02d      	beq.n	8009122 <GUI__ManageCacheEx+0xd6>
 80090c6:	4b1a      	ldr	r3, [pc, #104]	; (8009130 <GUI__ManageCacheEx+0xe4>)
 80090c8:	681b      	ldr	r3, [r3, #0]
 80090ca:	b103      	cbz	r3, 80090ce <GUI__ManageCacheEx+0x82>
 80090cc:	4798      	blx	r3
 80090ce:	9801      	ldr	r0, [sp, #4]
 80090d0:	2102      	movs	r1, #2
 80090d2:	47a0      	blx	r4
 80090d4:	2000      	movs	r0, #0
 80090d6:	e025      	b.n	8009124 <GUI__ManageCacheEx+0xd8>
 80090d8:	4d14      	ldr	r5, [pc, #80]	; (800912c <GUI__ManageCacheEx+0xe0>)
 80090da:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 80090de:	2b01      	cmp	r3, #1
 80090e0:	d001      	beq.n	80090e6 <GUI__ManageCacheEx+0x9a>
 80090e2:	2001      	movs	r0, #1
 80090e4:	e015      	b.n	8009112 <GUI__ManageCacheEx+0xc6>
 80090e6:	4620      	mov	r0, r4
 80090e8:	f001 fa34 	bl	800a554 <GUI_DEVICE__GetpDriver>
 80090ec:	9001      	str	r0, [sp, #4]
 80090ee:	2800      	cmp	r0, #0
 80090f0:	d0f7      	beq.n	80090e2 <GUI__ManageCacheEx+0x96>
 80090f2:	68c3      	ldr	r3, [r0, #12]
 80090f4:	210d      	movs	r1, #13
 80090f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80090f8:	a801      	add	r0, sp, #4
 80090fa:	4798      	blx	r3
 80090fc:	4606      	mov	r6, r0
 80090fe:	2800      	cmp	r0, #0
 8009100:	d0ef      	beq.n	80090e2 <GUI__ManageCacheEx+0x96>
 8009102:	4b0b      	ldr	r3, [pc, #44]	; (8009130 <GUI__ManageCacheEx+0xe4>)
 8009104:	681b      	ldr	r3, [r3, #0]
 8009106:	b103      	cbz	r3, 800910a <GUI__ManageCacheEx+0xbe>
 8009108:	4798      	blx	r3
 800910a:	9801      	ldr	r0, [sp, #4]
 800910c:	2100      	movs	r1, #0
 800910e:	47b0      	blx	r6
 8009110:	2000      	movs	r0, #0
 8009112:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8009116:	2b00      	cmp	r3, #0
 8009118:	bf18      	it	ne
 800911a:	3b01      	subne	r3, #1
 800911c:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 8009120:	e000      	b.n	8009124 <GUI__ManageCacheEx+0xd8>
 8009122:	2001      	movs	r0, #1
 8009124:	b003      	add	sp, #12
 8009126:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009128:	20002b10 	.word	0x20002b10
 800912c:	20002b08 	.word	0x20002b08
 8009130:	20002b04 	.word	0x20002b04

08009134 <GUI__ManageCache>:
 8009134:	4b02      	ldr	r3, [pc, #8]	; (8009140 <GUI__ManageCache+0xc>)
 8009136:	681b      	ldr	r3, [r3, #0]
 8009138:	4601      	mov	r1, r0
 800913a:	7c58      	ldrb	r0, [r3, #17]
 800913c:	f7ff bf86 	b.w	800904c <GUI__ManageCacheEx>
 8009140:	200000b8 	.word	0x200000b8

08009144 <GUI__MixColors>:
 8009144:	f081 417f 	eor.w	r1, r1, #4278190080	; 0xff000000
 8009148:	f080 407f 	eor.w	r0, r0, #4278190080	; 0xff000000
 800914c:	0e0b      	lsrs	r3, r1, #24
 800914e:	ea4f 6310 	mov.w	r3, r0, lsr #24
 8009152:	b530      	push	{r4, r5, lr}
 8009154:	fb02 f303 	mul.w	r3, r2, r3
 8009158:	f04f 04ff 	mov.w	r4, #255	; 0xff
 800915c:	fbb3 f3f4 	udiv	r3, r3, r4
 8009160:	bf08      	it	eq
 8009162:	f020 417f 	biceq.w	r1, r0, #4278190080	; 0xff000000
 8009166:	1ae2      	subs	r2, r4, r3
 8009168:	f3c0 2407 	ubfx	r4, r0, #8, #8
 800916c:	f001 25ff 	and.w	r5, r1, #4278255360	; 0xff00ff00
 8009170:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8009174:	f044 7480 	orr.w	r4, r4, #16777216	; 0x1000000
 8009178:	0a2d      	lsrs	r5, r5, #8
 800917a:	435c      	muls	r4, r3
 800917c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8009180:	4343      	muls	r3, r0
 8009182:	fb02 4405 	mla	r4, r2, r5, r4
 8009186:	fb02 3201 	mla	r2, r2, r1, r3
 800918a:	0a12      	lsrs	r2, r2, #8
 800918c:	f004 24ff 	and.w	r4, r4, #4278255360	; 0xff00ff00
 8009190:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8009194:	ea44 0002 	orr.w	r0, r4, r2
 8009198:	f080 407f 	eor.w	r0, r0, #4278190080	; 0xff000000
 800919c:	bd30      	pop	{r4, r5, pc}
	...

080091a0 <_OnExit>:
 80091a0:	b570      	push	{r4, r5, r6, lr}
 80091a2:	4c0a      	ldr	r4, [pc, #40]	; (80091cc <_OnExit+0x2c>)
 80091a4:	4d0a      	ldr	r5, [pc, #40]	; (80091d0 <_OnExit+0x30>)
 80091a6:	6820      	ldr	r0, [r4, #0]
 80091a8:	4e0a      	ldr	r6, [pc, #40]	; (80091d4 <_OnExit+0x34>)
 80091aa:	f002 f97d 	bl	800b4a8 <GUI_ALLOC_FreeFixedBlock>
 80091ae:	6828      	ldr	r0, [r5, #0]
 80091b0:	f002 f97a 	bl	800b4a8 <GUI_ALLOC_FreeFixedBlock>
 80091b4:	6830      	ldr	r0, [r6, #0]
 80091b6:	f002 f977 	bl	800b4a8 <GUI_ALLOC_FreeFixedBlock>
 80091ba:	4a07      	ldr	r2, [pc, #28]	; (80091d8 <_OnExit+0x38>)
 80091bc:	2300      	movs	r3, #0
 80091be:	6013      	str	r3, [r2, #0]
 80091c0:	4a06      	ldr	r2, [pc, #24]	; (80091dc <_OnExit+0x3c>)
 80091c2:	6033      	str	r3, [r6, #0]
 80091c4:	602b      	str	r3, [r5, #0]
 80091c6:	6023      	str	r3, [r4, #0]
 80091c8:	6013      	str	r3, [r2, #0]
 80091ca:	bd70      	pop	{r4, r5, r6, pc}
 80091cc:	20002b18 	.word	0x20002b18
 80091d0:	20002b14 	.word	0x20002b14
 80091d4:	20002b1c 	.word	0x20002b1c
 80091d8:	20002b20 	.word	0x20002b20
 80091dc:	20002b30 	.word	0x20002b30

080091e0 <GUI__GetAlphaBuffer>:
 80091e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80091e4:	461c      	mov	r4, r3
 80091e6:	4b28      	ldr	r3, [pc, #160]	; (8009288 <GUI__GetAlphaBuffer+0xa8>)
 80091e8:	4617      	mov	r7, r2
 80091ea:	681a      	ldr	r2, [r3, #0]
 80091ec:	4606      	mov	r6, r0
 80091ee:	4688      	mov	r8, r1
 80091f0:	b932      	cbnz	r2, 8009200 <GUI__GetAlphaBuffer+0x20>
 80091f2:	2201      	movs	r2, #1
 80091f4:	4825      	ldr	r0, [pc, #148]	; (800928c <GUI__GetAlphaBuffer+0xac>)
 80091f6:	601a      	str	r2, [r3, #0]
 80091f8:	4b25      	ldr	r3, [pc, #148]	; (8009290 <GUI__GetAlphaBuffer+0xb0>)
 80091fa:	6003      	str	r3, [r0, #0]
 80091fc:	f001 fb04 	bl	800a808 <GUI__RegisterExit>
 8009200:	4d24      	ldr	r5, [pc, #144]	; (8009294 <GUI__GetAlphaBuffer+0xb4>)
 8009202:	682b      	ldr	r3, [r5, #0]
 8009204:	b933      	cbnz	r3, 8009214 <GUI__GetAlphaBuffer+0x34>
 8009206:	4b24      	ldr	r3, [pc, #144]	; (8009298 <GUI__GetAlphaBuffer+0xb8>)
 8009208:	681b      	ldr	r3, [r3, #0]
 800920a:	602b      	str	r3, [r5, #0]
 800920c:	b913      	cbnz	r3, 8009214 <GUI__GetAlphaBuffer+0x34>
 800920e:	f7ff fa05 	bl	800861c <LCD_GetVXSizeMax>
 8009212:	6028      	str	r0, [r5, #0]
 8009214:	b10c      	cbz	r4, 800921a <GUI__GetAlphaBuffer+0x3a>
 8009216:	682b      	ldr	r3, [r5, #0]
 8009218:	6023      	str	r3, [r4, #0]
 800921a:	b196      	cbz	r6, 8009242 <GUI__GetAlphaBuffer+0x62>
 800921c:	4b1f      	ldr	r3, [pc, #124]	; (800929c <GUI__GetAlphaBuffer+0xbc>)
 800921e:	681a      	ldr	r2, [r3, #0]
 8009220:	4699      	mov	r9, r3
 8009222:	2400      	movs	r4, #0
 8009224:	b94a      	cbnz	r2, 800923a <GUI__GetAlphaBuffer+0x5a>
 8009226:	6828      	ldr	r0, [r5, #0]
 8009228:	0080      	lsls	r0, r0, #2
 800922a:	f002 fa21 	bl	800b670 <GUI_ALLOC_GetFixedBlock>
 800922e:	f1d0 0401 	rsbs	r4, r0, #1
 8009232:	f8c9 0000 	str.w	r0, [r9]
 8009236:	bf38      	it	cc
 8009238:	2400      	movcc	r4, #0
 800923a:	f8d9 3000 	ldr.w	r3, [r9]
 800923e:	6033      	str	r3, [r6, #0]
 8009240:	e000      	b.n	8009244 <GUI__GetAlphaBuffer+0x64>
 8009242:	4634      	mov	r4, r6
 8009244:	f1b8 0f00 	cmp.w	r8, #0
 8009248:	d00d      	beq.n	8009266 <GUI__GetAlphaBuffer+0x86>
 800924a:	4e15      	ldr	r6, [pc, #84]	; (80092a0 <GUI__GetAlphaBuffer+0xc0>)
 800924c:	6833      	ldr	r3, [r6, #0]
 800924e:	b93b      	cbnz	r3, 8009260 <GUI__GetAlphaBuffer+0x80>
 8009250:	6828      	ldr	r0, [r5, #0]
 8009252:	0080      	lsls	r0, r0, #2
 8009254:	f002 fa0c 	bl	800b670 <GUI_ALLOC_GetFixedBlock>
 8009258:	2800      	cmp	r0, #0
 800925a:	6030      	str	r0, [r6, #0]
 800925c:	bf08      	it	eq
 800925e:	2401      	moveq	r4, #1
 8009260:	6833      	ldr	r3, [r6, #0]
 8009262:	f8c8 3000 	str.w	r3, [r8]
 8009266:	b167      	cbz	r7, 8009282 <GUI__GetAlphaBuffer+0xa2>
 8009268:	4e0e      	ldr	r6, [pc, #56]	; (80092a4 <GUI__GetAlphaBuffer+0xc4>)
 800926a:	6833      	ldr	r3, [r6, #0]
 800926c:	b93b      	cbnz	r3, 800927e <GUI__GetAlphaBuffer+0x9e>
 800926e:	6828      	ldr	r0, [r5, #0]
 8009270:	0080      	lsls	r0, r0, #2
 8009272:	f002 f9fd 	bl	800b670 <GUI_ALLOC_GetFixedBlock>
 8009276:	2800      	cmp	r0, #0
 8009278:	6030      	str	r0, [r6, #0]
 800927a:	bf08      	it	eq
 800927c:	2401      	moveq	r4, #1
 800927e:	6833      	ldr	r3, [r6, #0]
 8009280:	603b      	str	r3, [r7, #0]
 8009282:	4620      	mov	r0, r4
 8009284:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009288:	20002b30 	.word	0x20002b30
 800928c:	20002b24 	.word	0x20002b24
 8009290:	080091a1 	.word	0x080091a1
 8009294:	20002b20 	.word	0x20002b20
 8009298:	20002d30 	.word	0x20002d30
 800929c:	20002b18 	.word	0x20002b18
 80092a0:	20002b14 	.word	0x20002b14
 80092a4:	20002b1c 	.word	0x20002b1c

080092a8 <GUI__DoAlphaBlending>:
 80092a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80092ac:	b093      	sub	sp, #76	; 0x4c
 80092ae:	2400      	movs	r4, #0
 80092b0:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80092b2:	900b      	str	r0, [sp, #44]	; 0x2c
 80092b4:	910c      	str	r1, [sp, #48]	; 0x30
 80092b6:	4690      	mov	r8, r2
 80092b8:	461f      	mov	r7, r3
 80092ba:	6034      	str	r4, [r6, #0]
 80092bc:	a80f      	add	r0, sp, #60	; 0x3c
 80092be:	a910      	add	r1, sp, #64	; 0x40
 80092c0:	4622      	mov	r2, r4
 80092c2:	ab11      	add	r3, sp, #68	; 0x44
 80092c4:	f7ff ff8c 	bl	80091e0 <GUI__GetAlphaBuffer>
 80092c8:	4605      	mov	r5, r0
 80092ca:	2800      	cmp	r0, #0
 80092cc:	f040 80c5 	bne.w	800945a <GUI__DoAlphaBlending+0x1b2>
 80092d0:	4c64      	ldr	r4, [pc, #400]	; (8009464 <GUI__DoAlphaBlending+0x1bc>)
 80092d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80092d4:	6823      	ldr	r3, [r4, #0]
 80092d6:	7c58      	ldrb	r0, [r3, #17]
 80092d8:	4b63      	ldr	r3, [pc, #396]	; (8009468 <GUI__DoAlphaBlending+0x1c0>)
 80092da:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80092de:	9307      	str	r3, [sp, #28]
 80092e0:	4297      	cmp	r7, r2
 80092e2:	bfa8      	it	ge
 80092e4:	4617      	movge	r7, r2
 80092e6:	691a      	ldr	r2, [r3, #16]
 80092e8:	920d      	str	r2, [sp, #52]	; 0x34
 80092ea:	970a      	str	r7, [sp, #40]	; 0x28
 80092ec:	f7ff f962 	bl	80085b4 <GUI_GetBitsPerPixelEx>
 80092f0:	6823      	ldr	r3, [r4, #0]
 80092f2:	9008      	str	r0, [sp, #32]
 80092f4:	7c58      	ldrb	r0, [r3, #17]
 80092f6:	f7ff f97b 	bl	80085f0 <GUI_GetpfIndex2ColorEx>
 80092fa:	4b5c      	ldr	r3, [pc, #368]	; (800946c <GUI__DoAlphaBlending+0x1c4>)
 80092fc:	9004      	str	r0, [sp, #16]
 80092fe:	4298      	cmp	r0, r3
 8009300:	d005      	beq.n	800930e <GUI__DoAlphaBlending+0x66>
 8009302:	4b5b      	ldr	r3, [pc, #364]	; (8009470 <GUI__DoAlphaBlending+0x1c8>)
 8009304:	1ac3      	subs	r3, r0, r3
 8009306:	bf18      	it	ne
 8009308:	2301      	movne	r3, #1
 800930a:	9306      	str	r3, [sp, #24]
 800930c:	e000      	b.n	8009310 <GUI__DoAlphaBlending+0x68>
 800930e:	9506      	str	r5, [sp, #24]
 8009310:	2500      	movs	r5, #0
 8009312:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8009314:	46ab      	mov	fp, r5
 8009316:	4643      	mov	r3, r8
 8009318:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800931a:	f853 0b04 	ldr.w	r0, [r3], #4
 800931e:	9305      	str	r3, [sp, #20]
 8009320:	4790      	blx	r2
 8009322:	0e03      	lsrs	r3, r0, #24
 8009324:	4681      	mov	r9, r0
 8009326:	9309      	str	r3, [sp, #36]	; 0x24
 8009328:	f000 8087 	beq.w	800943a <GUI__DoAlphaBlending+0x192>
 800932c:	f1bb 0f00 	cmp.w	fp, #0
 8009330:	d13f      	bne.n	80093b2 <GUI__DoAlphaBlending+0x10a>
 8009332:	4b4c      	ldr	r3, [pc, #304]	; (8009464 <GUI__DoAlphaBlending+0x1bc>)
 8009334:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8009336:	681b      	ldr	r3, [r3, #0]
 8009338:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800933a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800933e:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 8009342:	990c      	ldr	r1, [sp, #48]	; 0x30
 8009344:	442f      	add	r7, r5
 8009346:	42bb      	cmp	r3, r7
 8009348:	bfc8      	it	gt
 800934a:	ebc7 0b03 	rsbgt	fp, r7, r3
 800934e:	eb0b 0a05 	add.w	sl, fp, r5
 8009352:	bfc8      	it	gt
 8009354:	461f      	movgt	r7, r3
 8009356:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009358:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 800935c:	4453      	add	r3, sl
 800935e:	4494      	add	ip, r2
 8009360:	9300      	str	r3, [sp, #0]
 8009362:	9b07      	ldr	r3, [sp, #28]
 8009364:	9301      	str	r3, [sp, #4]
 8009366:	f10c 32ff 	add.w	r2, ip, #4294967295
 800936a:	4638      	mov	r0, r7
 800936c:	460b      	mov	r3, r1
 800936e:	f8cd c00c 	str.w	ip, [sp, #12]
 8009372:	f005 f9ad 	bl	800e6d0 <GUI_ReadRectEx>
 8009376:	9a08      	ldr	r2, [sp, #32]
 8009378:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800937a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800937e:	2a17      	cmp	r2, #23
 8009380:	dc06      	bgt.n	8009390 <GUI__DoAlphaBlending+0xe8>
 8009382:	4450      	add	r0, sl
 8009384:	ebcb 0104 	rsb	r1, fp, r4
 8009388:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800938a:	f005 fb05 	bl	800e998 <GUI__ExpandPixelIndicesEx>
 800938e:	e001      	b.n	8009394 <GUI__DoAlphaBlending+0xec>
 8009390:	9b06      	ldr	r3, [sp, #24]
 8009392:	b913      	cbnz	r3, 800939a <GUI__DoAlphaBlending+0xf2>
 8009394:	f04f 0b01 	mov.w	fp, #1
 8009398:	e00b      	b.n	80093b2 <GUI__DoAlphaBlending+0x10a>
 800939a:	ebc7 070c 	rsb	r7, r7, ip
 800939e:	4482      	add	sl, r0
 80093a0:	f8da 0000 	ldr.w	r0, [sl]
 80093a4:	9a04      	ldr	r2, [sp, #16]
 80093a6:	4790      	blx	r2
 80093a8:	3f01      	subs	r7, #1
 80093aa:	f84a 0b04 	str.w	r0, [sl], #4
 80093ae:	d1f7      	bne.n	80093a0 <GUI__DoAlphaBlending+0xf8>
 80093b0:	e7f0      	b.n	8009394 <GUI__DoAlphaBlending+0xec>
 80093b2:	4b30      	ldr	r3, [pc, #192]	; (8009474 <GUI__DoAlphaBlending+0x1cc>)
 80093b4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80093b6:	f8d3 c000 	ldr.w	ip, [r3]
 80093ba:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80093bc:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 80093c0:	f1bc 0f00 	cmp.w	ip, #0
 80093c4:	d024      	beq.n	8009410 <GUI__DoAlphaBlending+0x168>
 80093c6:	eb07 020a 	add.w	r2, r7, sl
 80093ca:	4451      	add	r1, sl
 80093cc:	9210      	str	r2, [sp, #64]	; 0x40
 80093ce:	4623      	mov	r3, r4
 80093d0:	910f      	str	r1, [sp, #60]	; 0x3c
 80093d2:	4640      	mov	r0, r8
 80093d4:	47e0      	blx	ip
 80093d6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80093d8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80093da:	2300      	movs	r3, #0
 80093dc:	f858 1003 	ldr.w	r1, [r8, r3]
 80093e0:	f001 407f 	and.w	r0, r1, #4278190080	; 0xff000000
 80093e4:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 80093e8:	58e8      	ldr	r0, [r5, r3]
 80093ea:	d101      	bne.n	80093f0 <GUI__DoAlphaBlending+0x148>
 80093ec:	50d0      	str	r0, [r2, r3]
 80093ee:	e005      	b.n	80093fc <GUI__DoAlphaBlending+0x154>
 80093f0:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 80093f4:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 80093f8:	bf08      	it	eq
 80093fa:	50d1      	streq	r1, [r2, r3]
 80093fc:	3c01      	subs	r4, #1
 80093fe:	f103 0304 	add.w	r3, r3, #4
 8009402:	d1eb      	bne.n	80093dc <GUI__DoAlphaBlending+0x134>
 8009404:	6833      	ldr	r3, [r6, #0]
 8009406:	9710      	str	r7, [sp, #64]	; 0x40
 8009408:	f043 0301 	orr.w	r3, r3, #1
 800940c:	6033      	str	r3, [r6, #0]
 800940e:	e022      	b.n	8009456 <GUI__DoAlphaBlending+0x1ae>
 8009410:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009412:	2bff      	cmp	r3, #255	; 0xff
 8009414:	d104      	bne.n	8009420 <GUI__DoAlphaBlending+0x178>
 8009416:	f851 300a 	ldr.w	r3, [r1, sl]
 800941a:	f847 300a 	str.w	r3, [r7, sl]
 800941e:	e013      	b.n	8009448 <GUI__DoAlphaBlending+0x1a0>
 8009420:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009422:	f851 100a 	ldr.w	r1, [r1, sl]
 8009426:	43da      	mvns	r2, r3
 8009428:	4b13      	ldr	r3, [pc, #76]	; (8009478 <GUI__DoAlphaBlending+0x1d0>)
 800942a:	f029 407f 	bic.w	r0, r9, #4278190080	; 0xff000000
 800942e:	681b      	ldr	r3, [r3, #0]
 8009430:	b2d2      	uxtb	r2, r2
 8009432:	4798      	blx	r3
 8009434:	f847 000a 	str.w	r0, [r7, sl]
 8009438:	e002      	b.n	8009440 <GUI__DoAlphaBlending+0x198>
 800943a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800943c:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 8009440:	6833      	ldr	r3, [r6, #0]
 8009442:	f043 0301 	orr.w	r3, r3, #1
 8009446:	6033      	str	r3, [r6, #0]
 8009448:	3c01      	subs	r4, #1
 800944a:	f105 0501 	add.w	r5, r5, #1
 800944e:	d002      	beq.n	8009456 <GUI__DoAlphaBlending+0x1ae>
 8009450:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8009454:	e75f      	b.n	8009316 <GUI__DoAlphaBlending+0x6e>
 8009456:	9810      	ldr	r0, [sp, #64]	; 0x40
 8009458:	e000      	b.n	800945c <GUI__DoAlphaBlending+0x1b4>
 800945a:	4620      	mov	r0, r4
 800945c:	b013      	add	sp, #76	; 0x4c
 800945e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009462:	bf00      	nop
 8009464:	200000b8 	.word	0x200000b8
 8009468:	20002d28 	.word	0x20002d28
 800946c:	0800bad7 	.word	0x0800bad7
 8009470:	0800bad5 	.word	0x0800bad5
 8009474:	20002b2c 	.word	0x20002b2c
 8009478:	200000ac 	.word	0x200000ac

0800947c <GUI__AllocAlphaBuffer>:
 800947c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800947e:	b108      	cbz	r0, 8009484 <GUI__AllocAlphaBuffer+0x8>
 8009480:	aa03      	add	r2, sp, #12
 8009482:	e000      	b.n	8009486 <GUI__AllocAlphaBuffer+0xa>
 8009484:	4602      	mov	r2, r0
 8009486:	a801      	add	r0, sp, #4
 8009488:	a902      	add	r1, sp, #8
 800948a:	2300      	movs	r3, #0
 800948c:	f7ff fea8 	bl	80091e0 <GUI__GetAlphaBuffer>
 8009490:	b005      	add	sp, #20
 8009492:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08009498 <GUI_SignalEvent>:
 8009498:	b508      	push	{r3, lr}
 800949a:	4b02      	ldr	r3, [pc, #8]	; (80094a4 <GUI_SignalEvent+0xc>)
 800949c:	681b      	ldr	r3, [r3, #0]
 800949e:	b103      	cbz	r3, 80094a2 <GUI_SignalEvent+0xa>
 80094a0:	4798      	blx	r3
 80094a2:	bd08      	pop	{r3, pc}
 80094a4:	20002b34 	.word	0x20002b34

080094a8 <GUI_AddDecMin>:
 80094a8:	b570      	push	{r4, r5, r6, lr}
 80094aa:	460c      	mov	r4, r1
 80094ac:	4605      	mov	r5, r0
 80094ae:	f001 fa41 	bl	800a934 <GUI_Long2Len>
 80094b2:	4623      	mov	r3, r4
 80094b4:	b2c1      	uxtb	r1, r0
 80094b6:	2200      	movs	r2, #0
 80094b8:	4628      	mov	r0, r5
 80094ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80094be:	f001 ba51 	b.w	800a964 <GUI_AddDecShift>
	...

080094c4 <GUI_UC__GetCharCodeInc>:
 80094c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80094c6:	4e08      	ldr	r6, [pc, #32]	; (80094e8 <GUI_UC__GetCharCodeInc+0x24>)
 80094c8:	6804      	ldr	r4, [r0, #0]
 80094ca:	6833      	ldr	r3, [r6, #0]
 80094cc:	4605      	mov	r5, r0
 80094ce:	681b      	ldr	r3, [r3, #0]
 80094d0:	4620      	mov	r0, r4
 80094d2:	4798      	blx	r3
 80094d4:	6833      	ldr	r3, [r6, #0]
 80094d6:	4607      	mov	r7, r0
 80094d8:	685b      	ldr	r3, [r3, #4]
 80094da:	4620      	mov	r0, r4
 80094dc:	4798      	blx	r3
 80094de:	4420      	add	r0, r4
 80094e0:	6028      	str	r0, [r5, #0]
 80094e2:	4638      	mov	r0, r7
 80094e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80094e6:	bf00      	nop
 80094e8:	20002d20 	.word	0x20002d20

080094ec <GUI_UC__NumChars2NumBytes>:
 80094ec:	b570      	push	{r4, r5, r6, lr}
 80094ee:	4604      	mov	r4, r0
 80094f0:	460e      	mov	r6, r1
 80094f2:	2500      	movs	r5, #0
 80094f4:	b146      	cbz	r6, 8009508 <GUI_UC__NumChars2NumBytes+0x1c>
 80094f6:	4b05      	ldr	r3, [pc, #20]	; (800950c <GUI_UC__NumChars2NumBytes+0x20>)
 80094f8:	681b      	ldr	r3, [r3, #0]
 80094fa:	4620      	mov	r0, r4
 80094fc:	685b      	ldr	r3, [r3, #4]
 80094fe:	4798      	blx	r3
 8009500:	3e01      	subs	r6, #1
 8009502:	4404      	add	r4, r0
 8009504:	4405      	add	r5, r0
 8009506:	e7f5      	b.n	80094f4 <GUI_UC__NumChars2NumBytes+0x8>
 8009508:	4628      	mov	r0, r5
 800950a:	bd70      	pop	{r4, r5, r6, pc}
 800950c:	20002d20 	.word	0x20002d20

08009510 <GUI__GetNumChars>:
 8009510:	b513      	push	{r0, r1, r4, lr}
 8009512:	9001      	str	r0, [sp, #4]
 8009514:	b130      	cbz	r0, 8009524 <GUI__GetNumChars+0x14>
 8009516:	2400      	movs	r4, #0
 8009518:	a801      	add	r0, sp, #4
 800951a:	f7ff ffd3 	bl	80094c4 <GUI_UC__GetCharCodeInc>
 800951e:	b110      	cbz	r0, 8009526 <GUI__GetNumChars+0x16>
 8009520:	3401      	adds	r4, #1
 8009522:	e7f9      	b.n	8009518 <GUI__GetNumChars+0x8>
 8009524:	4604      	mov	r4, r0
 8009526:	4620      	mov	r0, r4
 8009528:	b002      	add	sp, #8
 800952a:	bd10      	pop	{r4, pc}

0800952c <_OnExit>:
 800952c:	4a03      	ldr	r2, [pc, #12]	; (800953c <_OnExit+0x10>)
 800952e:	2300      	movs	r3, #0
 8009530:	6013      	str	r3, [r2, #0]
 8009532:	4a03      	ldr	r2, [pc, #12]	; (8009540 <_OnExit+0x14>)
 8009534:	6013      	str	r3, [r2, #0]
 8009536:	4a03      	ldr	r2, [pc, #12]	; (8009544 <_OnExit+0x18>)
 8009538:	6013      	str	r3, [r2, #0]
 800953a:	4770      	bx	lr
 800953c:	20002b38 	.word	0x20002b38
 8009540:	20002b44 	.word	0x20002b44
 8009544:	20002b48 	.word	0x20002b48

08009548 <GUI_TIMER_Exec>:
 8009548:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800954c:	4b19      	ldr	r3, [pc, #100]	; (80095b4 <GUI_TIMER_Exec+0x6c>)
 800954e:	681f      	ldr	r7, [r3, #0]
 8009550:	b085      	sub	sp, #20
 8009552:	2500      	movs	r5, #0
 8009554:	4698      	mov	r8, r3
 8009556:	f8d8 3000 	ldr.w	r3, [r8]
 800955a:	4c16      	ldr	r4, [pc, #88]	; (80095b4 <GUI_TIMER_Exec+0x6c>)
 800955c:	b333      	cbz	r3, 80095ac <GUI_TIMER_Exec+0x64>
 800955e:	f000 f991 	bl	8009884 <GUI_GetTime>
 8009562:	4606      	mov	r6, r0
 8009564:	6820      	ldr	r0, [r4, #0]
 8009566:	f001 ffb3 	bl	800b4d0 <GUI_ALLOC_LockH>
 800956a:	4603      	mov	r3, r0
 800956c:	a804      	add	r0, sp, #16
 800956e:	6959      	ldr	r1, [r3, #20]
 8009570:	f840 3d10 	str.w	r3, [r0, #-16]!
 8009574:	1b89      	subs	r1, r1, r6
 8009576:	2900      	cmp	r1, #0
 8009578:	dc13      	bgt.n	80095a2 <GUI_TIMER_Exec+0x5a>
 800957a:	6821      	ldr	r1, [r4, #0]
 800957c:	9103      	str	r1, [sp, #12]
 800957e:	9601      	str	r6, [sp, #4]
 8009580:	6919      	ldr	r1, [r3, #16]
 8009582:	685e      	ldr	r6, [r3, #4]
 8009584:	9102      	str	r1, [sp, #8]
 8009586:	4668      	mov	r0, sp
 8009588:	6026      	str	r6, [r4, #0]
 800958a:	f8d3 9000 	ldr.w	r9, [r3]
 800958e:	f001 ffad 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8009592:	a801      	add	r0, sp, #4
 8009594:	47c8      	blx	r9
 8009596:	b14e      	cbz	r6, 80095ac <GUI_TIMER_Exec+0x64>
 8009598:	6823      	ldr	r3, [r4, #0]
 800959a:	42bb      	cmp	r3, r7
 800959c:	d005      	beq.n	80095aa <GUI_TIMER_Exec+0x62>
 800959e:	2501      	movs	r5, #1
 80095a0:	e7d9      	b.n	8009556 <GUI_TIMER_Exec+0xe>
 80095a2:	4668      	mov	r0, sp
 80095a4:	f001 ffa2 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80095a8:	e000      	b.n	80095ac <GUI_TIMER_Exec+0x64>
 80095aa:	2500      	movs	r5, #0
 80095ac:	4628      	mov	r0, r5
 80095ae:	b005      	add	sp, #20
 80095b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80095b4:	20002b44 	.word	0x20002b44

080095b8 <_Link>:
 80095b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80095ba:	4c25      	ldr	r4, [pc, #148]	; (8009650 <_Link+0x98>)
 80095bc:	b085      	sub	sp, #20
 80095be:	4605      	mov	r5, r0
 80095c0:	f001 ff86 	bl	800b4d0 <GUI_ALLOC_LockH>
 80095c4:	6823      	ldr	r3, [r4, #0]
 80095c6:	9001      	str	r0, [sp, #4]
 80095c8:	b913      	cbnz	r3, 80095d0 <_Link+0x18>
 80095ca:	6025      	str	r5, [r4, #0]
 80095cc:	6043      	str	r3, [r0, #4]
 80095ce:	e039      	b.n	8009644 <_Link+0x8c>
 80095d0:	4618      	mov	r0, r3
 80095d2:	f001 ff7d 	bl	800b4d0 <GUI_ALLOC_LockH>
 80095d6:	ab04      	add	r3, sp, #16
 80095d8:	6946      	ldr	r6, [r0, #20]
 80095da:	f843 0d10 	str.w	r0, [r3, #-16]!
 80095de:	4668      	mov	r0, sp
 80095e0:	f001 ff84 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80095e4:	9b01      	ldr	r3, [sp, #4]
 80095e6:	695a      	ldr	r2, [r3, #20]
 80095e8:	1b92      	subs	r2, r2, r6
 80095ea:	2a00      	cmp	r2, #0
 80095ec:	dc03      	bgt.n	80095f6 <_Link+0x3e>
 80095ee:	6822      	ldr	r2, [r4, #0]
 80095f0:	605a      	str	r2, [r3, #4]
 80095f2:	6025      	str	r5, [r4, #0]
 80095f4:	e026      	b.n	8009644 <_Link+0x8c>
 80095f6:	6826      	ldr	r6, [r4, #0]
 80095f8:	4630      	mov	r0, r6
 80095fa:	f001 ff69 	bl	800b4d0 <GUI_ALLOC_LockH>
 80095fe:	ac04      	add	r4, sp, #16
 8009600:	6846      	ldr	r6, [r0, #4]
 8009602:	f844 0d08 	str.w	r0, [r4, #-8]!
 8009606:	b1be      	cbz	r6, 8009638 <_Link+0x80>
 8009608:	4630      	mov	r0, r6
 800960a:	f001 ff61 	bl	800b4d0 <GUI_ALLOC_LockH>
 800960e:	ab04      	add	r3, sp, #16
 8009610:	6947      	ldr	r7, [r0, #20]
 8009612:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009616:	4618      	mov	r0, r3
 8009618:	f001 ff68 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800961c:	9a01      	ldr	r2, [sp, #4]
 800961e:	6953      	ldr	r3, [r2, #20]
 8009620:	1bdb      	subs	r3, r3, r7
 8009622:	2b00      	cmp	r3, #0
 8009624:	9b02      	ldr	r3, [sp, #8]
 8009626:	dc02      	bgt.n	800962e <_Link+0x76>
 8009628:	6056      	str	r6, [r2, #4]
 800962a:	605d      	str	r5, [r3, #4]
 800962c:	e007      	b.n	800963e <_Link+0x86>
 800962e:	4620      	mov	r0, r4
 8009630:	685e      	ldr	r6, [r3, #4]
 8009632:	f001 ff5b 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8009636:	e7df      	b.n	80095f8 <_Link+0x40>
 8009638:	9b01      	ldr	r3, [sp, #4]
 800963a:	605e      	str	r6, [r3, #4]
 800963c:	6045      	str	r5, [r0, #4]
 800963e:	4620      	mov	r0, r4
 8009640:	f001 ff54 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8009644:	a801      	add	r0, sp, #4
 8009646:	f001 ff51 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800964a:	b005      	add	sp, #20
 800964c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800964e:	bf00      	nop
 8009650:	20002b44 	.word	0x20002b44

08009654 <_Unlink>:
 8009654:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009656:	4605      	mov	r5, r0
 8009658:	b1f0      	cbz	r0, 8009698 <_Unlink+0x44>
 800965a:	f001 ff39 	bl	800b4d0 <GUI_ALLOC_LockH>
 800965e:	4b0f      	ldr	r3, [pc, #60]	; (800969c <_Unlink+0x48>)
 8009660:	9000      	str	r0, [sp, #0]
 8009662:	681c      	ldr	r4, [r3, #0]
 8009664:	42ac      	cmp	r4, r5
 8009666:	d104      	bne.n	8009672 <_Unlink+0x1e>
 8009668:	6842      	ldr	r2, [r0, #4]
 800966a:	601a      	str	r2, [r3, #0]
 800966c:	e011      	b.n	8009692 <_Unlink+0x3e>
 800966e:	f001 ff3d 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8009672:	b174      	cbz	r4, 8009692 <_Unlink+0x3e>
 8009674:	4620      	mov	r0, r4
 8009676:	f001 ff2b 	bl	800b4d0 <GUI_ALLOC_LockH>
 800967a:	4603      	mov	r3, r0
 800967c:	a802      	add	r0, sp, #8
 800967e:	685c      	ldr	r4, [r3, #4]
 8009680:	f840 3d04 	str.w	r3, [r0, #-4]!
 8009684:	42ac      	cmp	r4, r5
 8009686:	d1f2      	bne.n	800966e <_Unlink+0x1a>
 8009688:	9a00      	ldr	r2, [sp, #0]
 800968a:	6852      	ldr	r2, [r2, #4]
 800968c:	605a      	str	r2, [r3, #4]
 800968e:	f001 ff2d 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8009692:	4668      	mov	r0, sp
 8009694:	f001 ff2a 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8009698:	b003      	add	sp, #12
 800969a:	bd30      	pop	{r4, r5, pc}
 800969c:	20002b44 	.word	0x20002b44

080096a0 <GUI_TIMER__GetFirstTimer>:
 80096a0:	2300      	movs	r3, #0
 80096a2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80096a4:	6003      	str	r3, [r0, #0]
 80096a6:	4b09      	ldr	r3, [pc, #36]	; (80096cc <GUI_TIMER__GetFirstTimer+0x2c>)
 80096a8:	681c      	ldr	r4, [r3, #0]
 80096aa:	4605      	mov	r5, r0
 80096ac:	b154      	cbz	r4, 80096c4 <GUI_TIMER__GetFirstTimer+0x24>
 80096ae:	4620      	mov	r0, r4
 80096b0:	f001 ff0e 	bl	800b4d0 <GUI_ALLOC_LockH>
 80096b4:	ab02      	add	r3, sp, #8
 80096b6:	6902      	ldr	r2, [r0, #16]
 80096b8:	f843 0d04 	str.w	r0, [r3, #-4]!
 80096bc:	602a      	str	r2, [r5, #0]
 80096be:	4618      	mov	r0, r3
 80096c0:	f001 ff14 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80096c4:	4620      	mov	r0, r4
 80096c6:	b003      	add	sp, #12
 80096c8:	bd30      	pop	{r4, r5, pc}
 80096ca:	bf00      	nop
 80096cc:	20002b38 	.word	0x20002b38

080096d0 <GUI_TIMER__GetNextTimerLin>:
 80096d0:	2300      	movs	r3, #0
 80096d2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80096d4:	600b      	str	r3, [r1, #0]
 80096d6:	460e      	mov	r6, r1
 80096d8:	4604      	mov	r4, r0
 80096da:	b190      	cbz	r0, 8009702 <GUI_TIMER__GetNextTimerLin+0x32>
 80096dc:	f001 fef8 	bl	800b4d0 <GUI_ALLOC_LockH>
 80096e0:	ad02      	add	r5, sp, #8
 80096e2:	6884      	ldr	r4, [r0, #8]
 80096e4:	f845 0d04 	str.w	r0, [r5, #-4]!
 80096e8:	b144      	cbz	r4, 80096fc <GUI_TIMER__GetNextTimerLin+0x2c>
 80096ea:	4628      	mov	r0, r5
 80096ec:	f001 fefe 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80096f0:	4620      	mov	r0, r4
 80096f2:	f001 feed 	bl	800b4d0 <GUI_ALLOC_LockH>
 80096f6:	6903      	ldr	r3, [r0, #16]
 80096f8:	9001      	str	r0, [sp, #4]
 80096fa:	6033      	str	r3, [r6, #0]
 80096fc:	4628      	mov	r0, r5
 80096fe:	f001 fef5 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8009702:	4620      	mov	r0, r4
 8009704:	b002      	add	sp, #8
 8009706:	bd70      	pop	{r4, r5, r6, pc}

08009708 <GUI_TIMER_Create>:
 8009708:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800970c:	4681      	mov	r9, r0
 800970e:	201c      	movs	r0, #28
 8009710:	460e      	mov	r6, r1
 8009712:	4690      	mov	r8, r2
 8009714:	461f      	mov	r7, r3
 8009716:	f002 f8d5 	bl	800b8c4 <GUI_ALLOC_AllocZero>
 800971a:	4604      	mov	r4, r0
 800971c:	2800      	cmp	r0, #0
 800971e:	d031      	beq.n	8009784 <GUI_TIMER_Create+0x7c>
 8009720:	4b1a      	ldr	r3, [pc, #104]	; (800978c <GUI_TIMER_Create+0x84>)
 8009722:	4a1b      	ldr	r2, [pc, #108]	; (8009790 <GUI_TIMER_Create+0x88>)
 8009724:	601a      	str	r2, [r3, #0]
 8009726:	f001 fed3 	bl	800b4d0 <GUI_ALLOC_LockH>
 800972a:	9000      	str	r0, [sp, #0]
 800972c:	b916      	cbnz	r6, 8009734 <GUI_TIMER_Create+0x2c>
 800972e:	f000 f8a9 	bl	8009884 <GUI_GetTime>
 8009732:	4606      	mov	r6, r0
 8009734:	a802      	add	r0, sp, #8
 8009736:	f850 5d08 	ldr.w	r5, [r0, #-8]!
 800973a:	4668      	mov	r0, sp
 800973c:	616e      	str	r6, [r5, #20]
 800973e:	f8c5 9000 	str.w	r9, [r5]
 8009742:	f8c5 8010 	str.w	r8, [r5, #16]
 8009746:	81af      	strh	r7, [r5, #12]
 8009748:	f001 fed0 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800974c:	4620      	mov	r0, r4
 800974e:	f7ff ff33 	bl	80095b8 <_Link>
 8009752:	4b10      	ldr	r3, [pc, #64]	; (8009794 <GUI_TIMER_Create+0x8c>)
 8009754:	681a      	ldr	r2, [r3, #0]
 8009756:	b932      	cbnz	r2, 8009766 <GUI_TIMER_Create+0x5e>
 8009758:	2201      	movs	r2, #1
 800975a:	480f      	ldr	r0, [pc, #60]	; (8009798 <GUI_TIMER_Create+0x90>)
 800975c:	601a      	str	r2, [r3, #0]
 800975e:	4b0f      	ldr	r3, [pc, #60]	; (800979c <GUI_TIMER_Create+0x94>)
 8009760:	6003      	str	r3, [r0, #0]
 8009762:	f001 f851 	bl	800a808 <GUI__RegisterExit>
 8009766:	4620      	mov	r0, r4
 8009768:	f001 feb2 	bl	800b4d0 <GUI_ALLOC_LockH>
 800976c:	4a0c      	ldr	r2, [pc, #48]	; (80097a0 <GUI_TIMER_Create+0x98>)
 800976e:	9001      	str	r0, [sp, #4]
 8009770:	6813      	ldr	r3, [r2, #0]
 8009772:	b913      	cbnz	r3, 800977a <GUI_TIMER_Create+0x72>
 8009774:	6014      	str	r4, [r2, #0]
 8009776:	6083      	str	r3, [r0, #8]
 8009778:	e001      	b.n	800977e <GUI_TIMER_Create+0x76>
 800977a:	6083      	str	r3, [r0, #8]
 800977c:	6014      	str	r4, [r2, #0]
 800977e:	a801      	add	r0, sp, #4
 8009780:	f001 feb4 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8009784:	4620      	mov	r0, r4
 8009786:	b003      	add	sp, #12
 8009788:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800978c:	20002cf8 	.word	0x20002cf8
 8009790:	08009549 	.word	0x08009549
 8009794:	20002b48 	.word	0x20002b48
 8009798:	20002b3c 	.word	0x20002b3c
 800979c:	0800952d 	.word	0x0800952d
 80097a0:	20002b38 	.word	0x20002b38

080097a4 <GUI_TIMER_Delete>:
 80097a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80097a6:	4604      	mov	r4, r0
 80097a8:	b360      	cbz	r0, 8009804 <GUI_TIMER_Delete+0x60>
 80097aa:	4e17      	ldr	r6, [pc, #92]	; (8009808 <GUI_TIMER_Delete+0x64>)
 80097ac:	6835      	ldr	r5, [r6, #0]
 80097ae:	4285      	cmp	r5, r0
 80097b0:	d10b      	bne.n	80097ca <GUI_TIMER_Delete+0x26>
 80097b2:	f001 fe8d 	bl	800b4d0 <GUI_ALLOC_LockH>
 80097b6:	ab02      	add	r3, sp, #8
 80097b8:	6882      	ldr	r2, [r0, #8]
 80097ba:	f843 0d04 	str.w	r0, [r3, #-4]!
 80097be:	6032      	str	r2, [r6, #0]
 80097c0:	4618      	mov	r0, r3
 80097c2:	e017      	b.n	80097f4 <GUI_TIMER_Delete+0x50>
 80097c4:	4668      	mov	r0, sp
 80097c6:	f001 fe91 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80097ca:	b1ad      	cbz	r5, 80097f8 <GUI_TIMER_Delete+0x54>
 80097cc:	4628      	mov	r0, r5
 80097ce:	f001 fe7f 	bl	800b4d0 <GUI_ALLOC_LockH>
 80097d2:	6885      	ldr	r5, [r0, #8]
 80097d4:	ae02      	add	r6, sp, #8
 80097d6:	42a5      	cmp	r5, r4
 80097d8:	f846 0d08 	str.w	r0, [r6, #-8]!
 80097dc:	d1f2      	bne.n	80097c4 <GUI_TIMER_Delete+0x20>
 80097de:	4620      	mov	r0, r4
 80097e0:	f001 fe76 	bl	800b4d0 <GUI_ALLOC_LockH>
 80097e4:	9b00      	ldr	r3, [sp, #0]
 80097e6:	6882      	ldr	r2, [r0, #8]
 80097e8:	9001      	str	r0, [sp, #4]
 80097ea:	609a      	str	r2, [r3, #8]
 80097ec:	a801      	add	r0, sp, #4
 80097ee:	f001 fe7d 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80097f2:	4668      	mov	r0, sp
 80097f4:	f001 fe7a 	bl	800b4ec <GUI_ALLOC_UnlockH>
 80097f8:	4620      	mov	r0, r4
 80097fa:	f7ff ff2b 	bl	8009654 <_Unlink>
 80097fe:	4620      	mov	r0, r4
 8009800:	f001 fea0 	bl	800b544 <GUI_ALLOC_Free>
 8009804:	b002      	add	sp, #8
 8009806:	bd70      	pop	{r4, r5, r6, pc}
 8009808:	20002b38 	.word	0x20002b38

0800980c <GUI_TIMER_SetPeriod>:
 800980c:	b513      	push	{r0, r1, r4, lr}
 800980e:	460c      	mov	r4, r1
 8009810:	b140      	cbz	r0, 8009824 <GUI_TIMER_SetPeriod+0x18>
 8009812:	f001 fe5d 	bl	800b4d0 <GUI_ALLOC_LockH>
 8009816:	ab02      	add	r3, sp, #8
 8009818:	6184      	str	r4, [r0, #24]
 800981a:	f843 0d04 	str.w	r0, [r3, #-4]!
 800981e:	4618      	mov	r0, r3
 8009820:	f001 fe64 	bl	800b4ec <GUI_ALLOC_UnlockH>
 8009824:	b002      	add	sp, #8
 8009826:	bd10      	pop	{r4, pc}

08009828 <GUI_TIMER_Restart>:
 8009828:	b513      	push	{r0, r1, r4, lr}
 800982a:	4604      	mov	r4, r0
 800982c:	b198      	cbz	r0, 8009856 <GUI_TIMER_Restart+0x2e>
 800982e:	f001 fe4f 	bl	800b4d0 <GUI_ALLOC_LockH>
 8009832:	9001      	str	r0, [sp, #4]
 8009834:	f000 f826 	bl	8009884 <GUI_GetTime>
 8009838:	ab02      	add	r3, sp, #8
 800983a:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 800983e:	6991      	ldr	r1, [r2, #24]
 8009840:	4408      	add	r0, r1
 8009842:	6150      	str	r0, [r2, #20]
 8009844:	4618      	mov	r0, r3
 8009846:	f001 fe51 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800984a:	4620      	mov	r0, r4
 800984c:	f7ff ff02 	bl	8009654 <_Unlink>
 8009850:	4620      	mov	r0, r4
 8009852:	f7ff feb1 	bl	80095b8 <_Link>
 8009856:	b002      	add	sp, #8
 8009858:	bd10      	pop	{r4, pc}

0800985a <GUI_TIMER_GetFlag>:
 800985a:	b513      	push	{r0, r1, r4, lr}
 800985c:	460c      	mov	r4, r1
 800985e:	b168      	cbz	r0, 800987c <GUI_TIMER_GetFlag+0x22>
 8009860:	f001 fe36 	bl	800b4d0 <GUI_ALLOC_LockH>
 8009864:	ab02      	add	r3, sp, #8
 8009866:	8982      	ldrh	r2, [r0, #12]
 8009868:	f843 0d04 	str.w	r0, [r3, #-4]!
 800986c:	4214      	tst	r4, r2
 800986e:	4618      	mov	r0, r3
 8009870:	bf0c      	ite	eq
 8009872:	2400      	moveq	r4, #0
 8009874:	2401      	movne	r4, #1
 8009876:	f001 fe39 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800987a:	e000      	b.n	800987e <GUI_TIMER_GetFlag+0x24>
 800987c:	2401      	movs	r4, #1
 800987e:	4620      	mov	r0, r4
 8009880:	b002      	add	sp, #8
 8009882:	bd10      	pop	{r4, pc}

08009884 <GUI_GetTime>:
 8009884:	f7f6 be3a 	b.w	80004fc <GUI_X_GetTime>

08009888 <GUI__AlphaPreserveTrans>:
 8009888:	b510      	push	{r4, lr}
 800988a:	4b07      	ldr	r3, [pc, #28]	; (80098a8 <GUI__AlphaPreserveTrans+0x20>)
 800988c:	781c      	ldrb	r4, [r3, #0]
 800988e:	b120      	cbz	r0, 800989a <GUI__AlphaPreserveTrans+0x12>
 8009890:	2201      	movs	r2, #1
 8009892:	701a      	strb	r2, [r3, #0]
 8009894:	f04f 30ff 	mov.w	r0, #4294967295
 8009898:	e002      	b.n	80098a0 <GUI__AlphaPreserveTrans+0x18>
 800989a:	7018      	strb	r0, [r3, #0]
 800989c:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 80098a0:	f004 ffbe 	bl	800e820 <LCD_AA_SetAndMask>
 80098a4:	4620      	mov	r0, r4
 80098a6:	bd10      	pop	{r4, pc}
 80098a8:	20002d10 	.word	0x20002d10

080098ac <GUI_SelectLayer>:
 80098ac:	b570      	push	{r4, r5, r6, lr}
 80098ae:	4d08      	ldr	r5, [pc, #32]	; (80098d0 <GUI_SelectLayer+0x24>)
 80098b0:	682b      	ldr	r3, [r5, #0]
 80098b2:	2801      	cmp	r0, #1
 80098b4:	4604      	mov	r4, r0
 80098b6:	7c5e      	ldrb	r6, [r3, #17]
 80098b8:	d808      	bhi.n	80098cc <GUI_SelectLayer+0x20>
 80098ba:	f000 fe4b 	bl	800a554 <GUI_DEVICE__GetpDriver>
 80098be:	b128      	cbz	r0, 80098cc <GUI_SelectLayer+0x20>
 80098c0:	682b      	ldr	r3, [r5, #0]
 80098c2:	745c      	strb	r4, [r3, #17]
 80098c4:	f001 f998 	bl	800abf8 <GUI_SelectLCD>
 80098c8:	4b02      	ldr	r3, [pc, #8]	; (80098d4 <GUI_SelectLayer+0x28>)
 80098ca:	601c      	str	r4, [r3, #0]
 80098cc:	4630      	mov	r0, r6
 80098ce:	bd70      	pop	{r4, r5, r6, pc}
 80098d0:	200000b8 	.word	0x200000b8
 80098d4:	20002ca0 	.word	0x20002ca0

080098d8 <GUI_StoreKey>:
 80098d8:	4b02      	ldr	r3, [pc, #8]	; (80098e4 <GUI_StoreKey+0xc>)
 80098da:	681a      	ldr	r2, [r3, #0]
 80098dc:	b902      	cbnz	r2, 80098e0 <GUI_StoreKey+0x8>
 80098de:	6018      	str	r0, [r3, #0]
 80098e0:	f7ff bdda 	b.w	8009498 <GUI_SignalEvent>
 80098e4:	20002b4c 	.word	0x20002b4c

080098e8 <GUI_PollKeyMsg>:
 80098e8:	4a0a      	ldr	r2, [pc, #40]	; (8009914 <GUI_PollKeyMsg+0x2c>)
 80098ea:	490b      	ldr	r1, [pc, #44]	; (8009918 <GUI_PollKeyMsg+0x30>)
 80098ec:	6813      	ldr	r3, [r2, #0]
 80098ee:	6809      	ldr	r1, [r1, #0]
 80098f0:	428b      	cmp	r3, r1
 80098f2:	b510      	push	{r4, lr}
 80098f4:	d00b      	beq.n	800990e <GUI_PollKeyMsg+0x26>
 80098f6:	4c09      	ldr	r4, [pc, #36]	; (800991c <GUI_PollKeyMsg+0x34>)
 80098f8:	42a3      	cmp	r3, r4
 80098fa:	e893 0003 	ldmia.w	r3, {r0, r1}
 80098fe:	bf14      	ite	ne
 8009900:	3308      	addne	r3, #8
 8009902:	3b50      	subeq	r3, #80	; 0x50
 8009904:	6013      	str	r3, [r2, #0]
 8009906:	f7fb f90d 	bl	8004b24 <WM_OnKey>
 800990a:	2001      	movs	r0, #1
 800990c:	bd10      	pop	{r4, pc}
 800990e:	2000      	movs	r0, #0
 8009910:	bd10      	pop	{r4, pc}
 8009912:	bf00      	nop
 8009914:	200000b4 	.word	0x200000b4
 8009918:	200000b0 	.word	0x200000b0
 800991c:	20002ba0 	.word	0x20002ba0

08009920 <_SetLineColor>:
 8009920:	4b1e      	ldr	r3, [pc, #120]	; (800999c <_SetLineColor+0x7c>)
 8009922:	681b      	ldr	r3, [r3, #0]
 8009924:	7e9b      	ldrb	r3, [r3, #26]
 8009926:	3b01      	subs	r3, #1
 8009928:	2b03      	cmp	r3, #3
 800992a:	d832      	bhi.n	8009992 <_SetLineColor+0x72>
 800992c:	e8df f003 	tbb	[pc, r3]
 8009930:	221a0d02 	.word	0x221a0d02
 8009934:	4b1a      	ldr	r3, [pc, #104]	; (80099a0 <_SetLineColor+0x80>)
 8009936:	3006      	adds	r0, #6
 8009938:	4003      	ands	r3, r0
 800993a:	2b00      	cmp	r3, #0
 800993c:	da03      	bge.n	8009946 <_SetLineColor+0x26>
 800993e:	3b01      	subs	r3, #1
 8009940:	f063 030f 	orn	r3, r3, #15
 8009944:	3301      	adds	r3, #1
 8009946:	2b0b      	cmp	r3, #11
 8009948:	e008      	b.n	800995c <_SetLineColor+0x3c>
 800994a:	4b16      	ldr	r3, [pc, #88]	; (80099a4 <_SetLineColor+0x84>)
 800994c:	4003      	ands	r3, r0
 800994e:	2b00      	cmp	r3, #0
 8009950:	da03      	bge.n	800995a <_SetLineColor+0x3a>
 8009952:	3b01      	subs	r3, #1
 8009954:	f063 0303 	orn	r3, r3, #3
 8009958:	3301      	adds	r3, #1
 800995a:	2b01      	cmp	r3, #1
 800995c:	bfcc      	ite	gt
 800995e:	2000      	movgt	r0, #0
 8009960:	2001      	movle	r0, #1
 8009962:	4770      	bx	lr
 8009964:	2314      	movs	r3, #20
 8009966:	fb90 f2f3 	sdiv	r2, r0, r3
 800996a:	fb03 0012 	mls	r0, r3, r2, r0
 800996e:	280b      	cmp	r0, #11
 8009970:	dc09      	bgt.n	8009986 <_SetLineColor+0x66>
 8009972:	e010      	b.n	8009996 <_SetLineColor+0x76>
 8009974:	2318      	movs	r3, #24
 8009976:	fb90 f2f3 	sdiv	r2, r0, r3
 800997a:	fb03 0012 	mls	r0, r3, r2, r0
 800997e:	280b      	cmp	r0, #11
 8009980:	dd09      	ble.n	8009996 <_SetLineColor+0x76>
 8009982:	f020 0004 	bic.w	r0, r0, #4
 8009986:	3810      	subs	r0, #16
 8009988:	2801      	cmp	r0, #1
 800998a:	bf8c      	ite	hi
 800998c:	2000      	movhi	r0, #0
 800998e:	2001      	movls	r0, #1
 8009990:	4770      	bx	lr
 8009992:	2000      	movs	r0, #0
 8009994:	4770      	bx	lr
 8009996:	2001      	movs	r0, #1
 8009998:	4770      	bx	lr
 800999a:	bf00      	nop
 800999c:	200000b8 	.word	0x200000b8
 80099a0:	8000000f 	.word	0x8000000f
 80099a4:	80000003 	.word	0x80000003

080099a8 <GUI_sin>:
 80099a8:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80099ac:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 80099b0:	bfc6      	itte	gt
 80099b2:	f5a0 6000 	subgt.w	r0, r0, #2048	; 0x800
 80099b6:	2101      	movgt	r1, #1
 80099b8:	2100      	movle	r1, #0
 80099ba:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 80099be:	bfc8      	it	gt
 80099c0:	f5c0 6000 	rsbgt	r0, r0, #2048	; 0x800
 80099c4:	f000 033f 	and.w	r3, r0, #63	; 0x3f
 80099c8:	b510      	push	{r4, lr}
 80099ca:	1182      	asrs	r2, r0, #6
 80099cc:	4c0b      	ldr	r4, [pc, #44]	; (80099fc <GUI_sin+0x54>)
 80099ce:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 80099d2:	b29b      	uxth	r3, r3
 80099d4:	f834 0012 	ldrh.w	r0, [r4, r2, lsl #1]
 80099d8:	2b40      	cmp	r3, #64	; 0x40
 80099da:	fb00 f003 	mul.w	r0, r0, r3
 80099de:	d008      	beq.n	80099f2 <GUI_sin+0x4a>
 80099e0:	2a10      	cmp	r2, #16
 80099e2:	d006      	beq.n	80099f2 <GUI_sin+0x4a>
 80099e4:	3201      	adds	r2, #1
 80099e6:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 80099ea:	f834 2012 	ldrh.w	r2, [r4, r2, lsl #1]
 80099ee:	fb03 0002 	mla	r0, r3, r2, r0
 80099f2:	3020      	adds	r0, #32
 80099f4:	0980      	lsrs	r0, r0, #6
 80099f6:	b101      	cbz	r1, 80099fa <GUI_sin+0x52>
 80099f8:	4240      	negs	r0, r0
 80099fa:	bd10      	pop	{r4, pc}
 80099fc:	08012048 	.word	0x08012048

08009a00 <GUI_cos>:
 8009a00:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 8009a04:	f7ff bfd0 	b.w	80099a8 <GUI_sin>

08009a08 <GL_DrawLine1Ex>:
 8009a08:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009a0c:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8009a10:	1a17      	subs	r7, r2, r0
 8009a12:	1a5c      	subs	r4, r3, r1
 8009a14:	ea54 0c07 	orrs.w	ip, r4, r7
 8009a18:	4605      	mov	r5, r0
 8009a1a:	460e      	mov	r6, r1
 8009a1c:	f8d8 b000 	ldr.w	fp, [r8]
 8009a20:	d104      	bne.n	8009a2c <GL_DrawLine1Ex+0x24>
 8009a22:	b003      	add	sp, #12
 8009a24:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009a28:	f000 ba16 	b.w	8009e58 <GL_DrawPoint>
 8009a2c:	ea87 70e7 	eor.w	r0, r7, r7, asr #31
 8009a30:	eba0 70e7 	sub.w	r0, r0, r7, asr #31
 8009a34:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 8009a38:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 8009a3c:	4288      	cmp	r0, r1
 8009a3e:	db04      	blt.n	8009a4a <GL_DrawLine1Ex+0x42>
 8009a40:	4621      	mov	r1, r4
 8009a42:	463c      	mov	r4, r7
 8009a44:	460f      	mov	r7, r1
 8009a46:	2100      	movs	r1, #0
 8009a48:	e006      	b.n	8009a58 <GL_DrawLine1Ex+0x50>
 8009a4a:	4611      	mov	r1, r2
 8009a4c:	461a      	mov	r2, r3
 8009a4e:	460b      	mov	r3, r1
 8009a50:	4629      	mov	r1, r5
 8009a52:	4635      	mov	r5, r6
 8009a54:	460e      	mov	r6, r1
 8009a56:	2101      	movs	r1, #1
 8009a58:	9100      	str	r1, [sp, #0]
 8009a5a:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 8009a5e:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 8009a62:	428c      	cmp	r4, r1
 8009a64:	d008      	beq.n	8009a78 <GL_DrawLine1Ex+0x70>
 8009a66:	461e      	mov	r6, r3
 8009a68:	462b      	mov	r3, r5
 8009a6a:	4264      	negs	r4, r4
 8009a6c:	4615      	mov	r5, r2
 8009a6e:	427f      	negs	r7, r7
 8009a70:	461a      	mov	r2, r3
 8009a72:	f04f 3aff 	mov.w	sl, #4294967295
 8009a76:	e001      	b.n	8009a7c <GL_DrawLine1Ex+0x74>
 8009a78:	f04f 0a01 	mov.w	sl, #1
 8009a7c:	2f00      	cmp	r7, #0
 8009a7e:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8009bc8 <GL_DrawLine1Ex+0x1c0>
 8009a82:	d13e      	bne.n	8009b02 <GL_DrawLine1Ex+0xfa>
 8009a84:	9b00      	ldr	r3, [sp, #0]
 8009a86:	b1d3      	cbz	r3, 8009abe <GL_DrawLine1Ex+0xb6>
 8009a88:	f8d9 3000 	ldr.w	r3, [r9]
 8009a8c:	7e9b      	ldrb	r3, [r3, #26]
 8009a8e:	b98b      	cbnz	r3, 8009ab4 <GL_DrawLine1Ex+0xac>
 8009a90:	4630      	mov	r0, r6
 8009a92:	4629      	mov	r1, r5
 8009a94:	b003      	add	sp, #12
 8009a96:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009a9a:	f7fe be9f 	b.w	80087dc <LCD_DrawVLine>
 8009a9e:	f7ff ff3f 	bl	8009920 <_SetLineColor>
 8009aa2:	b930      	cbnz	r0, 8009ab2 <GL_DrawLine1Ex+0xaa>
 8009aa4:	f8d9 3000 	ldr.w	r3, [r9]
 8009aa8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009aaa:	4630      	mov	r0, r6
 8009aac:	685b      	ldr	r3, [r3, #4]
 8009aae:	1979      	adds	r1, r7, r5
 8009ab0:	4798      	blx	r3
 8009ab2:	3701      	adds	r7, #1
 8009ab4:	42a7      	cmp	r7, r4
 8009ab6:	eb07 000b 	add.w	r0, r7, fp
 8009aba:	ddf0      	ble.n	8009a9e <GL_DrawLine1Ex+0x96>
 8009abc:	e01d      	b.n	8009afa <GL_DrawLine1Ex+0xf2>
 8009abe:	f8d9 3000 	ldr.w	r3, [r9]
 8009ac2:	7e99      	ldrb	r1, [r3, #26]
 8009ac4:	b111      	cbz	r1, 8009acc <GL_DrawLine1Ex+0xc4>
 8009ac6:	f8dd a000 	ldr.w	sl, [sp]
 8009aca:	e012      	b.n	8009af2 <GL_DrawLine1Ex+0xea>
 8009acc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009ace:	4628      	mov	r0, r5
 8009ad0:	681b      	ldr	r3, [r3, #0]
 8009ad2:	4631      	mov	r1, r6
 8009ad4:	4798      	blx	r3
 8009ad6:	e074      	b.n	8009bc2 <GL_DrawLine1Ex+0x1ba>
 8009ad8:	f7ff ff22 	bl	8009920 <_SetLineColor>
 8009adc:	b938      	cbnz	r0, 8009aee <GL_DrawLine1Ex+0xe6>
 8009ade:	f8d9 3000 	ldr.w	r3, [r9]
 8009ae2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009ae4:	eb0a 0005 	add.w	r0, sl, r5
 8009ae8:	685b      	ldr	r3, [r3, #4]
 8009aea:	4631      	mov	r1, r6
 8009aec:	4798      	blx	r3
 8009aee:	f10a 0a01 	add.w	sl, sl, #1
 8009af2:	45a2      	cmp	sl, r4
 8009af4:	eb0a 000b 	add.w	r0, sl, fp
 8009af8:	ddee      	ble.n	8009ad8 <GL_DrawLine1Ex+0xd0>
 8009afa:	3801      	subs	r0, #1
 8009afc:	f8c8 0000 	str.w	r0, [r8]
 8009b00:	e05f      	b.n	8009bc2 <GL_DrawLine1Ex+0x1ba>
 8009b02:	f8d9 1000 	ldr.w	r1, [r9]
 8009b06:	f04f 0202 	mov.w	r2, #2
 8009b0a:	7e89      	ldrb	r1, [r1, #26]
 8009b0c:	fb94 f2f2 	sdiv	r2, r4, r2
 8009b10:	bfb8      	it	lt
 8009b12:	4252      	neglt	r2, r2
 8009b14:	b9d9      	cbnz	r1, 8009b4e <GL_DrawLine1Ex+0x146>
 8009b16:	4693      	mov	fp, r2
 8009b18:	46a8      	mov	r8, r5
 8009b1a:	ebc5 0308 	rsb	r3, r5, r8
 8009b1e:	42a3      	cmp	r3, r4
 8009b20:	dc4f      	bgt.n	8009bc2 <GL_DrawLine1Ex+0x1ba>
 8009b22:	9b00      	ldr	r3, [sp, #0]
 8009b24:	fb9b f1f4 	sdiv	r1, fp, r4
 8009b28:	4431      	add	r1, r6
 8009b2a:	b92b      	cbnz	r3, 8009b38 <GL_DrawLine1Ex+0x130>
 8009b2c:	f8d9 3000 	ldr.w	r3, [r9]
 8009b30:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009b32:	4640      	mov	r0, r8
 8009b34:	685b      	ldr	r3, [r3, #4]
 8009b36:	e005      	b.n	8009b44 <GL_DrawLine1Ex+0x13c>
 8009b38:	f8d9 3000 	ldr.w	r3, [r9]
 8009b3c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009b3e:	685b      	ldr	r3, [r3, #4]
 8009b40:	4608      	mov	r0, r1
 8009b42:	4641      	mov	r1, r8
 8009b44:	4798      	blx	r3
 8009b46:	f108 0801 	add.w	r8, r8, #1
 8009b4a:	44bb      	add	fp, r7
 8009b4c:	e7e5      	b.n	8009b1a <GL_DrawLine1Ex+0x112>
 8009b4e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009b52:	bf04      	itt	eq
 8009b54:	eb04 010b 	addeq.w	r1, r4, fp
 8009b58:	f8c8 1000 	streq.w	r1, [r8]
 8009b5c:	9201      	str	r2, [sp, #4]
 8009b5e:	46ab      	mov	fp, r5
 8009b60:	ebc5 010b 	rsb	r1, r5, fp
 8009b64:	42a1      	cmp	r1, r4
 8009b66:	f8d8 0000 	ldr.w	r0, [r8]
 8009b6a:	dc1e      	bgt.n	8009baa <GL_DrawLine1Ex+0x1a2>
 8009b6c:	4450      	add	r0, sl
 8009b6e:	f8c8 0000 	str.w	r0, [r8]
 8009b72:	f7ff fed5 	bl	8009920 <_SetLineColor>
 8009b76:	b980      	cbnz	r0, 8009b9a <GL_DrawLine1Ex+0x192>
 8009b78:	f8dd c004 	ldr.w	ip, [sp, #4]
 8009b7c:	f8d9 0000 	ldr.w	r0, [r9]
 8009b80:	9b00      	ldr	r3, [sp, #0]
 8009b82:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8009b84:	fb9c f1f4 	sdiv	r1, ip, r4
 8009b88:	4431      	add	r1, r6
 8009b8a:	b913      	cbnz	r3, 8009b92 <GL_DrawLine1Ex+0x18a>
 8009b8c:	6843      	ldr	r3, [r0, #4]
 8009b8e:	4658      	mov	r0, fp
 8009b90:	e002      	b.n	8009b98 <GL_DrawLine1Ex+0x190>
 8009b92:	6843      	ldr	r3, [r0, #4]
 8009b94:	4608      	mov	r0, r1
 8009b96:	4659      	mov	r1, fp
 8009b98:	4798      	blx	r3
 8009b9a:	f8dd c004 	ldr.w	ip, [sp, #4]
 8009b9e:	44bc      	add	ip, r7
 8009ba0:	f10b 0b01 	add.w	fp, fp, #1
 8009ba4:	f8cd c004 	str.w	ip, [sp, #4]
 8009ba8:	e7da      	b.n	8009b60 <GL_DrawLine1Ex+0x158>
 8009baa:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009bae:	bf04      	itt	eq
 8009bb0:	1824      	addeq	r4, r4, r0
 8009bb2:	f8c8 4000 	streq.w	r4, [r8]
 8009bb6:	f8d8 2000 	ldr.w	r2, [r8]
 8009bba:	ebca 0302 	rsb	r3, sl, r2
 8009bbe:	f8c8 3000 	str.w	r3, [r8]
 8009bc2:	b003      	add	sp, #12
 8009bc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009bc8:	200000b8 	.word	0x200000b8

08009bcc <GL_DrawLineEx>:
 8009bcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009bd0:	4d67      	ldr	r5, [pc, #412]	; (8009d70 <GL_DrawLineEx+0x1a4>)
 8009bd2:	682c      	ldr	r4, [r5, #0]
 8009bd4:	f894 b018 	ldrb.w	fp, [r4, #24]
 8009bd8:	f1bb 0f01 	cmp.w	fp, #1
 8009bdc:	b087      	sub	sp, #28
 8009bde:	4681      	mov	r9, r0
 8009be0:	4688      	mov	r8, r1
 8009be2:	4617      	mov	r7, r2
 8009be4:	461e      	mov	r6, r3
 8009be6:	46aa      	mov	sl, r5
 8009be8:	d104      	bne.n	8009bf4 <GL_DrawLineEx+0x28>
 8009bea:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8009bec:	9400      	str	r4, [sp, #0]
 8009bee:	f7ff ff0b 	bl	8009a08 <GL_DrawLine1Ex>
 8009bf2:	e0ba      	b.n	8009d6a <GL_DrawLineEx+0x19e>
 8009bf4:	1a84      	subs	r4, r0, r2
 8009bf6:	1acd      	subs	r5, r1, r3
 8009bf8:	ea54 0305 	orrs.w	r3, r4, r5
 8009bfc:	f000 80b5 	beq.w	8009d6a <GL_DrawLineEx+0x19e>
 8009c00:	2c00      	cmp	r4, #0
 8009c02:	bfba      	itte	lt
 8009c04:	4264      	neglt	r4, r4
 8009c06:	2301      	movlt	r3, #1
 8009c08:	2300      	movge	r3, #0
 8009c0a:	2d00      	cmp	r5, #0
 8009c0c:	bfbc      	itt	lt
 8009c0e:	426d      	neglt	r5, r5
 8009c10:	f043 0302 	orrlt.w	r3, r3, #2
 8009c14:	42a5      	cmp	r5, r4
 8009c16:	f10b 3bff 	add.w	fp, fp, #4294967295
 8009c1a:	dd04      	ble.n	8009c26 <GL_DrawLineEx+0x5a>
 8009c1c:	4622      	mov	r2, r4
 8009c1e:	f043 0304 	orr.w	r3, r3, #4
 8009c22:	462c      	mov	r4, r5
 8009c24:	4615      	mov	r5, r2
 8009c26:	2202      	movs	r2, #2
 8009c28:	fb94 f2f2 	sdiv	r2, r4, r2
 8009c2c:	eb02 2585 	add.w	r5, r2, r5, lsl #10
 8009c30:	fb95 f4f4 	sdiv	r4, r5, r4
 8009c34:	11a1      	asrs	r1, r4, #6
 8009c36:	4a4f      	ldr	r2, [pc, #316]	; (8009d74 <GL_DrawLineEx+0x1a8>)
 8009c38:	f3c4 0483 	ubfx	r4, r4, #2, #4
 8009c3c:	f1c4 0510 	rsb	r5, r4, #16
 8009c40:	f932 0011 	ldrsh.w	r0, [r2, r1, lsl #1]
 8009c44:	2d10      	cmp	r5, #16
 8009c46:	fb05 f000 	mul.w	r0, r5, r0
 8009c4a:	d004      	beq.n	8009c56 <GL_DrawLineEx+0x8a>
 8009c4c:	3101      	adds	r1, #1
 8009c4e:	f932 2011 	ldrsh.w	r2, [r2, r1, lsl #1]
 8009c52:	fb04 0002 	mla	r0, r4, r2, r0
 8009c56:	2210      	movs	r2, #16
 8009c58:	3008      	adds	r0, #8
 8009c5a:	fb90 f0f2 	sdiv	r0, r0, r2
 8009c5e:	0759      	lsls	r1, r3, #29
 8009c60:	bf48      	it	mi
 8009c62:	f5c0 6080 	rsbmi	r0, r0, #1024	; 0x400
 8009c66:	07da      	lsls	r2, r3, #31
 8009c68:	bf48      	it	mi
 8009c6a:	f5c0 6000 	rsbmi	r0, r0, #2048	; 0x800
 8009c6e:	079b      	lsls	r3, r3, #30
 8009c70:	bf48      	it	mi
 8009c72:	f5c0 5080 	rsbmi	r0, r0, #4096	; 0x1000
 8009c76:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 8009c7a:	4628      	mov	r0, r5
 8009c7c:	f7ff fec0 	bl	8009a00 <GUI_cos>
 8009c80:	fb00 f40b 	mul.w	r4, r0, fp
 8009c84:	4628      	mov	r0, r5
 8009c86:	f7ff fe8f 	bl	80099a8 <GUI_sin>
 8009c8a:	2c00      	cmp	r4, #0
 8009c8c:	fb00 f00b 	mul.w	r0, r0, fp
 8009c90:	da04      	bge.n	8009c9c <GL_DrawLineEx+0xd0>
 8009c92:	f5c4 7300 	rsb	r3, r4, #512	; 0x200
 8009c96:	129b      	asrs	r3, r3, #10
 8009c98:	425b      	negs	r3, r3
 8009c9a:	e002      	b.n	8009ca2 <GL_DrawLineEx+0xd6>
 8009c9c:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8009ca0:	129b      	asrs	r3, r3, #10
 8009ca2:	2800      	cmp	r0, #0
 8009ca4:	da06      	bge.n	8009cb4 <GL_DrawLineEx+0xe8>
 8009ca6:	f5c0 7b00 	rsb	fp, r0, #512	; 0x200
 8009caa:	ea4f 2bab 	mov.w	fp, fp, asr #10
 8009cae:	f1cb 0b00 	rsb	fp, fp, #0
 8009cb2:	e003      	b.n	8009cbc <GL_DrawLineEx+0xf0>
 8009cb4:	f500 7b00 	add.w	fp, r0, #512	; 0x200
 8009cb8:	ea4f 2bab 	mov.w	fp, fp, asr #10
 8009cbc:	2b00      	cmp	r3, #0
 8009cbe:	dd03      	ble.n	8009cc8 <GL_DrawLineEx+0xfc>
 8009cc0:	1c58      	adds	r0, r3, #1
 8009cc2:	1040      	asrs	r0, r0, #1
 8009cc4:	105b      	asrs	r3, r3, #1
 8009cc6:	e005      	b.n	8009cd4 <GL_DrawLineEx+0x108>
 8009cc8:	2202      	movs	r2, #2
 8009cca:	fb93 f0f2 	sdiv	r0, r3, r2
 8009cce:	3b01      	subs	r3, #1
 8009cd0:	fb93 f3f2 	sdiv	r3, r3, r2
 8009cd4:	f1bb 0f00 	cmp.w	fp, #0
 8009cd8:	dd05      	ble.n	8009ce6 <GL_DrawLineEx+0x11a>
 8009cda:	f10b 0201 	add.w	r2, fp, #1
 8009cde:	1052      	asrs	r2, r2, #1
 8009ce0:	ea4f 0b6b 	mov.w	fp, fp, asr #1
 8009ce4:	e006      	b.n	8009cf4 <GL_DrawLineEx+0x128>
 8009ce6:	2102      	movs	r1, #2
 8009ce8:	fb9b f2f1 	sdiv	r2, fp, r1
 8009cec:	f10b 3bff 	add.w	fp, fp, #4294967295
 8009cf0:	fb9b fbf1 	sdiv	fp, fp, r1
 8009cf4:	b280      	uxth	r0, r0
 8009cf6:	fa1f f489 	uxth.w	r4, r9
 8009cfa:	1901      	adds	r1, r0, r4
 8009cfc:	b292      	uxth	r2, r2
 8009cfe:	f8ad 1008 	strh.w	r1, [sp, #8]
 8009d02:	fa1f fb8b 	uxth.w	fp, fp
 8009d06:	fa1f f188 	uxth.w	r1, r8
 8009d0a:	1855      	adds	r5, r2, r1
 8009d0c:	ebcb 0101 	rsb	r1, fp, r1
 8009d10:	b29b      	uxth	r3, r3
 8009d12:	f8ad 100e 	strh.w	r1, [sp, #14]
 8009d16:	b2b9      	uxth	r1, r7
 8009d18:	1ae4      	subs	r4, r4, r3
 8009d1a:	1acb      	subs	r3, r1, r3
 8009d1c:	f8ad 3010 	strh.w	r3, [sp, #16]
 8009d20:	b2b3      	uxth	r3, r6
 8009d22:	4401      	add	r1, r0
 8009d24:	ebcb 0b03 	rsb	fp, fp, r3
 8009d28:	4413      	add	r3, r2
 8009d2a:	2200      	movs	r2, #0
 8009d2c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8009d30:	f8ad 3016 	strh.w	r3, [sp, #22]
 8009d34:	a802      	add	r0, sp, #8
 8009d36:	4613      	mov	r3, r2
 8009d38:	2104      	movs	r1, #4
 8009d3a:	f8ad 500a 	strh.w	r5, [sp, #10]
 8009d3e:	f8ad 400c 	strh.w	r4, [sp, #12]
 8009d42:	f8ad b012 	strh.w	fp, [sp, #18]
 8009d46:	f005 f97f 	bl	800f048 <GL_FillPolygon>
 8009d4a:	f8da 3000 	ldr.w	r3, [sl]
 8009d4e:	7e5b      	ldrb	r3, [r3, #25]
 8009d50:	b91b      	cbnz	r3, 8009d5a <GL_DrawLineEx+0x18e>
 8009d52:	4648      	mov	r0, r9
 8009d54:	4641      	mov	r1, r8
 8009d56:	f000 f87f 	bl	8009e58 <GL_DrawPoint>
 8009d5a:	f8da 3000 	ldr.w	r3, [sl]
 8009d5e:	7e5b      	ldrb	r3, [r3, #25]
 8009d60:	b91b      	cbnz	r3, 8009d6a <GL_DrawLineEx+0x19e>
 8009d62:	4638      	mov	r0, r7
 8009d64:	4631      	mov	r1, r6
 8009d66:	f000 f877 	bl	8009e58 <GL_DrawPoint>
 8009d6a:	b007      	add	sp, #28
 8009d6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d70:	200000b8 	.word	0x200000b8
 8009d74:	0801206a 	.word	0x0801206a

08009d78 <GL_DrawLine>:
 8009d78:	b530      	push	{r4, r5, lr}
 8009d7a:	b085      	sub	sp, #20
 8009d7c:	ac04      	add	r4, sp, #16
 8009d7e:	2500      	movs	r5, #0
 8009d80:	f844 5d04 	str.w	r5, [r4, #-4]!
 8009d84:	9400      	str	r4, [sp, #0]
 8009d86:	f7ff ff21 	bl	8009bcc <GL_DrawLineEx>
 8009d8a:	b005      	add	sp, #20
 8009d8c:	bd30      	pop	{r4, r5, pc}
	...

08009d90 <GUI_DrawLine>:
 8009d90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009d94:	461e      	mov	r6, r3
 8009d96:	4b0c      	ldr	r3, [pc, #48]	; (8009dc8 <GUI_DrawLine+0x38>)
 8009d98:	681c      	ldr	r4, [r3, #0]
 8009d9a:	4681      	mov	r9, r0
 8009d9c:	2000      	movs	r0, #0
 8009d9e:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8009da0:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8009da2:	4688      	mov	r8, r1
 8009da4:	4617      	mov	r7, r2
 8009da6:	f7fc f817 	bl	8005dd8 <WM__InitIVRSearch>
 8009daa:	b150      	cbz	r0, 8009dc2 <GUI_DrawLine+0x32>
 8009dac:	eb09 0005 	add.w	r0, r9, r5
 8009db0:	eb08 0104 	add.w	r1, r8, r4
 8009db4:	197a      	adds	r2, r7, r5
 8009db6:	1933      	adds	r3, r6, r4
 8009db8:	f7ff ffde 	bl	8009d78 <GL_DrawLine>
 8009dbc:	f7fb ff4a 	bl	8005c54 <WM__GetNextIVR>
 8009dc0:	e7f3      	b.n	8009daa <GUI_DrawLine+0x1a>
 8009dc2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009dc6:	bf00      	nop
 8009dc8:	200000b8 	.word	0x200000b8

08009dcc <GUI_DrawHLine>:
 8009dcc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009dce:	4f10      	ldr	r7, [pc, #64]	; (8009e10 <GUI_DrawHLine+0x44>)
 8009dd0:	683b      	ldr	r3, [r7, #0]
 8009dd2:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 8009dd4:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8009dd6:	4405      	add	r5, r0
 8009dd8:	190e      	adds	r6, r1, r4
 8009dda:	b2ab      	uxth	r3, r5
 8009ddc:	4414      	add	r4, r2
 8009dde:	4668      	mov	r0, sp
 8009de0:	f8ad 6000 	strh.w	r6, [sp]
 8009de4:	f8ad 4004 	strh.w	r4, [sp, #4]
 8009de8:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009dec:	f8ad 3006 	strh.w	r3, [sp, #6]
 8009df0:	f7fb fff2 	bl	8005dd8 <WM__InitIVRSearch>
 8009df4:	b148      	cbz	r0, 8009e0a <GUI_DrawHLine+0x3e>
 8009df6:	683b      	ldr	r3, [r7, #0]
 8009df8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009dfa:	4630      	mov	r0, r6
 8009dfc:	681b      	ldr	r3, [r3, #0]
 8009dfe:	4629      	mov	r1, r5
 8009e00:	4622      	mov	r2, r4
 8009e02:	4798      	blx	r3
 8009e04:	f7fb ff26 	bl	8005c54 <WM__GetNextIVR>
 8009e08:	e7f4      	b.n	8009df4 <GUI_DrawHLine+0x28>
 8009e0a:	b003      	add	sp, #12
 8009e0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009e0e:	bf00      	nop
 8009e10:	200000b8 	.word	0x200000b8

08009e14 <GUI_DrawPixel>:
 8009e14:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009e16:	4e0f      	ldr	r6, [pc, #60]	; (8009e54 <GUI_DrawPixel+0x40>)
 8009e18:	6833      	ldr	r3, [r6, #0]
 8009e1a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8009e1c:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 8009e1e:	4405      	add	r5, r0
 8009e20:	b2ab      	uxth	r3, r5
 8009e22:	440c      	add	r4, r1
 8009e24:	f8ad 3004 	strh.w	r3, [sp, #4]
 8009e28:	f8ad 3000 	strh.w	r3, [sp]
 8009e2c:	4668      	mov	r0, sp
 8009e2e:	b2a3      	uxth	r3, r4
 8009e30:	f8ad 3006 	strh.w	r3, [sp, #6]
 8009e34:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009e38:	f7fb ffce 	bl	8005dd8 <WM__InitIVRSearch>
 8009e3c:	b140      	cbz	r0, 8009e50 <GUI_DrawPixel+0x3c>
 8009e3e:	6833      	ldr	r3, [r6, #0]
 8009e40:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009e42:	4628      	mov	r0, r5
 8009e44:	685b      	ldr	r3, [r3, #4]
 8009e46:	4621      	mov	r1, r4
 8009e48:	4798      	blx	r3
 8009e4a:	f7fb ff03 	bl	8005c54 <WM__GetNextIVR>
 8009e4e:	e7f5      	b.n	8009e3c <GUI_DrawPixel+0x28>
 8009e50:	b002      	add	sp, #8
 8009e52:	bd70      	pop	{r4, r5, r6, pc}
 8009e54:	200000b8 	.word	0x200000b8

08009e58 <GL_DrawPoint>:
 8009e58:	b508      	push	{r3, lr}
 8009e5a:	4b08      	ldr	r3, [pc, #32]	; (8009e7c <GL_DrawPoint+0x24>)
 8009e5c:	681b      	ldr	r3, [r3, #0]
 8009e5e:	7e1a      	ldrb	r2, [r3, #24]
 8009e60:	2a01      	cmp	r2, #1
 8009e62:	d103      	bne.n	8009e6c <GL_DrawPoint+0x14>
 8009e64:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009e66:	685b      	ldr	r3, [r3, #4]
 8009e68:	4798      	blx	r3
 8009e6a:	bd08      	pop	{r3, pc}
 8009e6c:	2302      	movs	r3, #2
 8009e6e:	3a01      	subs	r2, #1
 8009e70:	fb92 f2f3 	sdiv	r2, r2, r3
 8009e74:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8009e78:	f000 bf32 	b.w	800ace0 <GL_FillCircle>
 8009e7c:	200000b8 	.word	0x200000b8

08009e80 <GUI_DrawVLine>:
 8009e80:	4b0f      	ldr	r3, [pc, #60]	; (8009ec0 <GUI_DrawVLine+0x40>)
 8009e82:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009e84:	681b      	ldr	r3, [r3, #0]
 8009e86:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8009e88:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 8009e8a:	4406      	add	r6, r0
 8009e8c:	190d      	adds	r5, r1, r4
 8009e8e:	b2b3      	uxth	r3, r6
 8009e90:	4414      	add	r4, r2
 8009e92:	4668      	mov	r0, sp
 8009e94:	f8ad 3000 	strh.w	r3, [sp]
 8009e98:	f8ad 3004 	strh.w	r3, [sp, #4]
 8009e9c:	f8ad 5002 	strh.w	r5, [sp, #2]
 8009ea0:	f8ad 4006 	strh.w	r4, [sp, #6]
 8009ea4:	f7fb ff98 	bl	8005dd8 <WM__InitIVRSearch>
 8009ea8:	b138      	cbz	r0, 8009eba <GUI_DrawVLine+0x3a>
 8009eaa:	4630      	mov	r0, r6
 8009eac:	4629      	mov	r1, r5
 8009eae:	4622      	mov	r2, r4
 8009eb0:	f7fe fc94 	bl	80087dc <LCD_DrawVLine>
 8009eb4:	f7fb fece 	bl	8005c54 <WM__GetNextIVR>
 8009eb8:	e7f6      	b.n	8009ea8 <GUI_DrawVLine+0x28>
 8009eba:	b002      	add	sp, #8
 8009ebc:	bd70      	pop	{r4, r5, r6, pc}
 8009ebe:	bf00      	nop
 8009ec0:	200000b8 	.word	0x200000b8

08009ec4 <GUI_FillRect>:
 8009ec4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009ec6:	4c0f      	ldr	r4, [pc, #60]	; (8009f04 <GUI_FillRect+0x40>)
 8009ec8:	6824      	ldr	r4, [r4, #0]
 8009eca:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8009ecc:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8009ece:	1947      	adds	r7, r0, r5
 8009ed0:	190e      	adds	r6, r1, r4
 8009ed2:	4415      	add	r5, r2
 8009ed4:	441c      	add	r4, r3
 8009ed6:	4668      	mov	r0, sp
 8009ed8:	f8ad 7000 	strh.w	r7, [sp]
 8009edc:	f8ad 5004 	strh.w	r5, [sp, #4]
 8009ee0:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009ee4:	f8ad 4006 	strh.w	r4, [sp, #6]
 8009ee8:	f7fb ff76 	bl	8005dd8 <WM__InitIVRSearch>
 8009eec:	b140      	cbz	r0, 8009f00 <GUI_FillRect+0x3c>
 8009eee:	4638      	mov	r0, r7
 8009ef0:	4631      	mov	r1, r6
 8009ef2:	462a      	mov	r2, r5
 8009ef4:	4623      	mov	r3, r4
 8009ef6:	f7fe fc97 	bl	8008828 <LCD_FillRect>
 8009efa:	f7fb feab 	bl	8005c54 <WM__GetNextIVR>
 8009efe:	e7f5      	b.n	8009eec <GUI_FillRect+0x28>
 8009f00:	b003      	add	sp, #12
 8009f02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009f04:	200000b8 	.word	0x200000b8

08009f08 <GUI_FillRectEx>:
 8009f08:	4603      	mov	r3, r0
 8009f0a:	f9b0 0000 	ldrsh.w	r0, [r0]
 8009f0e:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 8009f12:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8009f16:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8009f1a:	f7ff bfd3 	b.w	8009ec4 <GUI_FillRect>
	...

08009f20 <GUI_DrawGraphEx>:
 8009f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f24:	4698      	mov	r8, r3
 8009f26:	4b81      	ldr	r3, [pc, #516]	; (800a12c <GUI_DrawGraphEx+0x20c>)
 8009f28:	b08b      	sub	sp, #44	; 0x2c
 8009f2a:	468a      	mov	sl, r1
 8009f2c:	6819      	ldr	r1, [r3, #0]
 8009f2e:	9006      	str	r0, [sp, #24]
 8009f30:	2000      	movs	r0, #0
 8009f32:	4691      	mov	r9, r2
 8009f34:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8009f36:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8009f38:	6ccd      	ldr	r5, [r1, #76]	; 0x4c
 8009f3a:	6d0c      	ldr	r4, [r1, #80]	; 0x50
 8009f3c:	f7fb ff4c 	bl	8005dd8 <WM__InitIVRSearch>
 8009f40:	2800      	cmp	r0, #0
 8009f42:	f000 80ef 	beq.w	800a124 <GUI_DrawGraphEx+0x204>
 8009f46:	f10a 4300 	add.w	r3, sl, #2147483648	; 0x80000000
 8009f4a:	9806      	ldr	r0, [sp, #24]
 8009f4c:	3b01      	subs	r3, #1
 8009f4e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8009f52:	9307      	str	r3, [sp, #28]
 8009f54:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8009f56:	2b00      	cmp	r3, #0
 8009f58:	bf14      	ite	ne
 8009f5a:	f06f 0301 	mvnne.w	r3, #1
 8009f5e:	2302      	moveq	r3, #2
 8009f60:	44a9      	add	r9, r5
 8009f62:	4444      	add	r4, r8
 8009f64:	9309      	str	r3, [sp, #36]	; 0x24
 8009f66:	b927      	cbnz	r7, 8009f72 <GUI_DrawGraphEx+0x52>
 8009f68:	f7fb fe74 	bl	8005c54 <WM__GetNextIVR>
 8009f6c:	2800      	cmp	r0, #0
 8009f6e:	d1fa      	bne.n	8009f66 <GUI_DrawGraphEx+0x46>
 8009f70:	e0d8      	b.n	800a124 <GUI_DrawGraphEx+0x204>
 8009f72:	2e00      	cmp	r6, #0
 8009f74:	d0f8      	beq.n	8009f68 <GUI_DrawGraphEx+0x48>
 8009f76:	f1ba 0f00 	cmp.w	sl, #0
 8009f7a:	ddf5      	ble.n	8009f68 <GUI_DrawGraphEx+0x48>
 8009f7c:	1c7b      	adds	r3, r7, #1
 8009f7e:	d104      	bne.n	8009f8a <GUI_DrawGraphEx+0x6a>
 8009f80:	2e01      	cmp	r6, #1
 8009f82:	bf14      	ite	ne
 8009f84:	2302      	movne	r3, #2
 8009f86:	2301      	moveq	r3, #1
 8009f88:	e00a      	b.n	8009fa0 <GUI_DrawGraphEx+0x80>
 8009f8a:	2f01      	cmp	r7, #1
 8009f8c:	d104      	bne.n	8009f98 <GUI_DrawGraphEx+0x78>
 8009f8e:	2e01      	cmp	r6, #1
 8009f90:	bf14      	ite	ne
 8009f92:	2303      	movne	r3, #3
 8009f94:	2300      	moveq	r3, #0
 8009f96:	e003      	b.n	8009fa0 <GUI_DrawGraphEx+0x80>
 8009f98:	2e01      	cmp	r6, #1
 8009f9a:	bf14      	ite	ne
 8009f9c:	2305      	movne	r3, #5
 8009f9e:	2304      	moveq	r3, #4
 8009fa0:	9305      	str	r3, [sp, #20]
 8009fa2:	4b62      	ldr	r3, [pc, #392]	; (800a12c <GUI_DrawGraphEx+0x20c>)
 8009fa4:	681b      	ldr	r3, [r3, #0]
 8009fa6:	695b      	ldr	r3, [r3, #20]
 8009fa8:	b1eb      	cbz	r3, 8009fe6 <GUI_DrawGraphEx+0xc6>
 8009faa:	f9b3 8000 	ldrsh.w	r8, [r3]
 8009fae:	f9b3 0002 	ldrsh.w	r0, [r3, #2]
 8009fb2:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8009fb6:	f9b3 b006 	ldrsh.w	fp, [r3, #6]
 8009fba:	9004      	str	r0, [sp, #16]
 8009fbc:	f108 38ff 	add.w	r8, r8, #4294967295
 8009fc0:	45c1      	cmp	r9, r8
 8009fc2:	eb09 030a 	add.w	r3, r9, sl
 8009fc6:	bfb8      	it	lt
 8009fc8:	ebc9 0808 	rsblt	r8, r9, r8
 8009fcc:	f103 33ff 	add.w	r3, r3, #4294967295
 8009fd0:	bfb4      	ite	lt
 8009fd2:	ea28 78e8 	biclt.w	r8, r8, r8, asr #31
 8009fd6:	f04f 0800 	movge.w	r8, #0
 8009fda:	4293      	cmp	r3, r2
 8009fdc:	dd0a      	ble.n	8009ff4 <GUI_DrawGraphEx+0xd4>
 8009fde:	ebc9 0202 	rsb	r2, r9, r2
 8009fe2:	3201      	adds	r2, #1
 8009fe4:	e007      	b.n	8009ff6 <GUI_DrawGraphEx+0xd6>
 8009fe6:	f04f 3bff 	mov.w	fp, #4294967295
 8009fea:	4652      	mov	r2, sl
 8009fec:	f8cd b010 	str.w	fp, [sp, #16]
 8009ff0:	4698      	mov	r8, r3
 8009ff2:	e000      	b.n	8009ff6 <GUI_DrawGraphEx+0xd6>
 8009ff4:	4652      	mov	r2, sl
 8009ff6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8009ff8:	b91b      	cbnz	r3, 800a002 <GUI_DrawGraphEx+0xe2>
 8009ffa:	9b06      	ldr	r3, [sp, #24]
 8009ffc:	eb03 0348 	add.w	r3, r3, r8, lsl #1
 800a000:	e000      	b.n	800a004 <GUI_DrawGraphEx+0xe4>
 800a002:	9b07      	ldr	r3, [sp, #28]
 800a004:	4590      	cmp	r8, r2
 800a006:	9303      	str	r3, [sp, #12]
 800a008:	daae      	bge.n	8009f68 <GUI_DrawGraphEx+0x48>
 800a00a:	444a      	add	r2, r9
 800a00c:	9208      	str	r2, [sp, #32]
 800a00e:	2200      	movs	r2, #0
 800a010:	44c8      	add	r8, r9
 800a012:	2301      	movs	r3, #1
 800a014:	9202      	str	r2, [sp, #8]
 800a016:	9803      	ldr	r0, [sp, #12]
 800a018:	9909      	ldr	r1, [sp, #36]	; 0x24
 800a01a:	8805      	ldrh	r5, [r0, #0]
 800a01c:	4408      	add	r0, r1
 800a01e:	b22d      	sxth	r5, r5
 800a020:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800a024:	428d      	cmp	r5, r1
 800a026:	9003      	str	r0, [sp, #12]
 800a028:	d10d      	bne.n	800a046 <GUI_DrawGraphEx+0x126>
 800a02a:	9802      	ldr	r0, [sp, #8]
 800a02c:	2800      	cmp	r0, #0
 800a02e:	d16f      	bne.n	800a110 <GUI_DrawGraphEx+0x1f0>
 800a030:	2b00      	cmp	r3, #0
 800a032:	d16f      	bne.n	800a114 <GUI_DrawGraphEx+0x1f4>
 800a034:	4611      	mov	r1, r2
 800a036:	f108 30ff 	add.w	r0, r8, #4294967295
 800a03a:	9201      	str	r2, [sp, #4]
 800a03c:	f7fe fb7a 	bl	8008734 <LCD_DrawPixel>
 800a040:	2301      	movs	r3, #1
 800a042:	9a01      	ldr	r2, [sp, #4]
 800a044:	e067      	b.n	800a116 <GUI_DrawGraphEx+0x1f6>
 800a046:	9805      	ldr	r0, [sp, #20]
 800a048:	1e41      	subs	r1, r0, #1
 800a04a:	b1db      	cbz	r3, 800a084 <GUI_DrawGraphEx+0x164>
 800a04c:	2904      	cmp	r1, #4
 800a04e:	d817      	bhi.n	800a080 <GUI_DrawGraphEx+0x160>
 800a050:	e8df f001 	tbb	[pc, r1]
 800a054:	0b070503 	.word	0x0b070503
 800a058:	0f          	.byte	0x0f
 800a059:	00          	.byte	0x00
 800a05a:	1b62      	subs	r2, r4, r5
 800a05c:	e00e      	b.n	800a07c <GUI_DrawGraphEx+0x15c>
 800a05e:	1b65      	subs	r5, r4, r5
 800a060:	e000      	b.n	800a064 <GUI_DrawGraphEx+0x144>
 800a062:	4425      	add	r5, r4
 800a064:	fbb5 f2f6 	udiv	r2, r5, r6
 800a068:	e008      	b.n	800a07c <GUI_DrawGraphEx+0x15c>
 800a06a:	4425      	add	r5, r4
 800a06c:	fb07 f205 	mul.w	r2, r7, r5
 800a070:	e004      	b.n	800a07c <GUI_DrawGraphEx+0x15c>
 800a072:	4425      	add	r5, r4
 800a074:	fb07 f205 	mul.w	r2, r7, r5
 800a078:	fbb2 f2f6 	udiv	r2, r2, r6
 800a07c:	2300      	movs	r3, #0
 800a07e:	e04a      	b.n	800a116 <GUI_DrawGraphEx+0x1f6>
 800a080:	192a      	adds	r2, r5, r4
 800a082:	e7fb      	b.n	800a07c <GUI_DrawGraphEx+0x15c>
 800a084:	2904      	cmp	r1, #4
 800a086:	d812      	bhi.n	800a0ae <GUI_DrawGraphEx+0x18e>
 800a088:	e8df f001 	tbb	[pc, r1]
 800a08c:	0b070503 	.word	0x0b070503
 800a090:	0e          	.byte	0x0e
 800a091:	00          	.byte	0x00
 800a092:	1b65      	subs	r5, r4, r5
 800a094:	e00c      	b.n	800a0b0 <GUI_DrawGraphEx+0x190>
 800a096:	1b65      	subs	r5, r4, r5
 800a098:	e000      	b.n	800a09c <GUI_DrawGraphEx+0x17c>
 800a09a:	4425      	add	r5, r4
 800a09c:	fbb5 f5f6 	udiv	r5, r5, r6
 800a0a0:	e006      	b.n	800a0b0 <GUI_DrawGraphEx+0x190>
 800a0a2:	4425      	add	r5, r4
 800a0a4:	437d      	muls	r5, r7
 800a0a6:	e003      	b.n	800a0b0 <GUI_DrawGraphEx+0x190>
 800a0a8:	4425      	add	r5, r4
 800a0aa:	437d      	muls	r5, r7
 800a0ac:	e7f6      	b.n	800a09c <GUI_DrawGraphEx+0x17c>
 800a0ae:	4425      	add	r5, r4
 800a0b0:	9904      	ldr	r1, [sp, #16]
 800a0b2:	428a      	cmp	r2, r1
 800a0b4:	da01      	bge.n	800a0ba <GUI_DrawGraphEx+0x19a>
 800a0b6:	428d      	cmp	r5, r1
 800a0b8:	db25      	blt.n	800a106 <GUI_DrawGraphEx+0x1e6>
 800a0ba:	455a      	cmp	r2, fp
 800a0bc:	dd01      	ble.n	800a0c2 <GUI_DrawGraphEx+0x1a2>
 800a0be:	455d      	cmp	r5, fp
 800a0c0:	dc21      	bgt.n	800a106 <GUI_DrawGraphEx+0x1e6>
 800a0c2:	eb05 0c02 	add.w	ip, r5, r2
 800a0c6:	2102      	movs	r1, #2
 800a0c8:	42aa      	cmp	r2, r5
 800a0ca:	fb9c fcf1 	sdiv	ip, ip, r1
 800a0ce:	f108 30ff 	add.w	r0, r8, #4294967295
 800a0d2:	dc0b      	bgt.n	800a0ec <GUI_DrawGraphEx+0x1cc>
 800a0d4:	4611      	mov	r1, r2
 800a0d6:	4662      	mov	r2, ip
 800a0d8:	e88d 1008 	stmia.w	sp, {r3, ip}
 800a0dc:	f7fe fb7e 	bl	80087dc <LCD_DrawVLine>
 800a0e0:	f8dd c004 	ldr.w	ip, [sp, #4]
 800a0e4:	4640      	mov	r0, r8
 800a0e6:	4661      	mov	r1, ip
 800a0e8:	462a      	mov	r2, r5
 800a0ea:	e009      	b.n	800a100 <GUI_DrawGraphEx+0x1e0>
 800a0ec:	4661      	mov	r1, ip
 800a0ee:	e88d 1008 	stmia.w	sp, {r3, ip}
 800a0f2:	f7fe fb73 	bl	80087dc <LCD_DrawVLine>
 800a0f6:	f8dd c004 	ldr.w	ip, [sp, #4]
 800a0fa:	4640      	mov	r0, r8
 800a0fc:	4629      	mov	r1, r5
 800a0fe:	4662      	mov	r2, ip
 800a100:	f7fe fb6c 	bl	80087dc <LCD_DrawVLine>
 800a104:	9b00      	ldr	r3, [sp, #0]
 800a106:	9a02      	ldr	r2, [sp, #8]
 800a108:	3201      	adds	r2, #1
 800a10a:	9202      	str	r2, [sp, #8]
 800a10c:	462a      	mov	r2, r5
 800a10e:	e002      	b.n	800a116 <GUI_DrawGraphEx+0x1f6>
 800a110:	2300      	movs	r3, #0
 800a112:	9302      	str	r3, [sp, #8]
 800a114:	2301      	movs	r3, #1
 800a116:	9808      	ldr	r0, [sp, #32]
 800a118:	f108 0801 	add.w	r8, r8, #1
 800a11c:	4580      	cmp	r8, r0
 800a11e:	f47f af7a 	bne.w	800a016 <GUI_DrawGraphEx+0xf6>
 800a122:	e721      	b.n	8009f68 <GUI_DrawGraphEx+0x48>
 800a124:	b00b      	add	sp, #44	; 0x2c
 800a126:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a12a:	bf00      	nop
 800a12c:	200000b8 	.word	0x200000b8

0800a130 <GUI_DispString>:
 800a130:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a134:	4604      	mov	r4, r0
 800a136:	2800      	cmp	r0, #0
 800a138:	d079      	beq.n	800a22e <GUI_DispString+0xfe>
 800a13a:	4d3e      	ldr	r5, [pc, #248]	; (800a234 <GUI_DispString+0x104>)
 800a13c:	f001 f8c8 	bl	800b2d0 <GUI_GetFontDistY>
 800a140:	682b      	ldr	r3, [r5, #0]
 800a142:	4680      	mov	r8, r0
 800a144:	f8b3 9022 	ldrh.w	r9, [r3, #34]	; 0x22
 800a148:	f001 f8aa 	bl	800b2a0 <GUI_GetYAdjust>
 800a14c:	682b      	ldr	r3, [r5, #0]
 800a14e:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 800a150:	b287      	uxth	r7, r0
 800a152:	1bd2      	subs	r2, r2, r7
 800a154:	849a      	strh	r2, [r3, #36]	; 0x24
 800a156:	7823      	ldrb	r3, [r4, #0]
 800a158:	2b00      	cmp	r3, #0
 800a15a:	d05d      	beq.n	800a218 <GUI_DispString+0xe8>
 800a15c:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800a160:	4620      	mov	r0, r4
 800a162:	f000 ffeb 	bl	800b13c <GUI__GetLineNumChars>
 800a166:	4606      	mov	r6, r0
 800a168:	4631      	mov	r1, r6
 800a16a:	4620      	mov	r0, r4
 800a16c:	f001 f814 	bl	800b198 <GUI__GetLineDistX>
 800a170:	682b      	ldr	r3, [r5, #0]
 800a172:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800a174:	f002 0203 	and.w	r2, r2, #3
 800a178:	2a01      	cmp	r2, #1
 800a17a:	d005      	beq.n	800a188 <GUI_DispString+0x58>
 800a17c:	2a02      	cmp	r2, #2
 800a17e:	bf14      	ite	ne
 800a180:	2200      	movne	r2, #0
 800a182:	fb90 f2f2 	sdiveq	r2, r0, r2
 800a186:	e000      	b.n	800a18a <GUI_DispString+0x5a>
 800a188:	4602      	mov	r2, r0
 800a18a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800a18c:	1a8a      	subs	r2, r1, r2
 800a18e:	b292      	uxth	r2, r2
 800a190:	b291      	uxth	r1, r2
 800a192:	8459      	strh	r1, [r3, #34]	; 0x22
 800a194:	fa1f fa80 	uxth.w	sl, r0
 800a198:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800a19a:	f8ad 1000 	strh.w	r1, [sp]
 800a19e:	f10a 31ff 	add.w	r1, sl, #4294967295
 800a1a2:	440a      	add	r2, r1
 800a1a4:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a1a8:	fa1f fb88 	uxth.w	fp, r8
 800a1ac:	3b01      	subs	r3, #1
 800a1ae:	445b      	add	r3, fp
 800a1b0:	f8ad 2004 	strh.w	r2, [sp, #4]
 800a1b4:	4620      	mov	r0, r4
 800a1b6:	4631      	mov	r1, r6
 800a1b8:	466a      	mov	r2, sp
 800a1ba:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a1be:	f001 f81b 	bl	800b1f8 <GUI__DispLine>
 800a1c2:	682b      	ldr	r3, [r5, #0]
 800a1c4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800a1c8:	849a      	strh	r2, [r3, #36]	; 0x24
 800a1ca:	4620      	mov	r0, r4
 800a1cc:	4631      	mov	r1, r6
 800a1ce:	f7ff f98d 	bl	80094ec <GUI_UC__NumChars2NumBytes>
 800a1d2:	5c23      	ldrb	r3, [r4, r0]
 800a1d4:	2b0a      	cmp	r3, #10
 800a1d6:	eb04 0200 	add.w	r2, r4, r0
 800a1da:	d001      	beq.n	800a1e0 <GUI_DispString+0xb0>
 800a1dc:	2b0d      	cmp	r3, #13
 800a1de:	d112      	bne.n	800a206 <GUI_DispString+0xd6>
 800a1e0:	682b      	ldr	r3, [r5, #0]
 800a1e2:	8d99      	ldrh	r1, [r3, #44]	; 0x2c
 800a1e4:	f001 0103 	and.w	r1, r1, #3
 800a1e8:	3901      	subs	r1, #1
 800a1ea:	2901      	cmp	r1, #1
 800a1ec:	bf8a      	itet	hi
 800a1ee:	8c19      	ldrhhi	r1, [r3, #32]
 800a1f0:	f8a3 9022 	strhls.w	r9, [r3, #34]	; 0x22
 800a1f4:	8459      	strhhi	r1, [r3, #34]	; 0x22
 800a1f6:	7811      	ldrb	r1, [r2, #0]
 800a1f8:	290a      	cmp	r1, #10
 800a1fa:	d10b      	bne.n	800a214 <GUI_DispString+0xe4>
 800a1fc:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800a1fe:	448b      	add	fp, r1
 800a200:	f8a3 b024 	strh.w	fp, [r3, #36]	; 0x24
 800a204:	e006      	b.n	800a214 <GUI_DispString+0xe4>
 800a206:	4b0b      	ldr	r3, [pc, #44]	; (800a234 <GUI_DispString+0x104>)
 800a208:	f8bd 0000 	ldrh.w	r0, [sp]
 800a20c:	681b      	ldr	r3, [r3, #0]
 800a20e:	4482      	add	sl, r0
 800a210:	f8a3 a022 	strh.w	sl, [r3, #34]	; 0x22
 800a214:	7813      	ldrb	r3, [r2, #0]
 800a216:	b943      	cbnz	r3, 800a22a <GUI_DispString+0xfa>
 800a218:	682b      	ldr	r3, [r5, #0]
 800a21a:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 800a21c:	4417      	add	r7, r2
 800a21e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800a220:	849f      	strh	r7, [r3, #36]	; 0x24
 800a222:	f022 0203 	bic.w	r2, r2, #3
 800a226:	859a      	strh	r2, [r3, #44]	; 0x2c
 800a228:	e001      	b.n	800a22e <GUI_DispString+0xfe>
 800a22a:	1c54      	adds	r4, r2, #1
 800a22c:	e793      	b.n	800a156 <GUI_DispString+0x26>
 800a22e:	b003      	add	sp, #12
 800a230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a234:	200000b8 	.word	0x200000b8

0800a238 <GUI_DispStringAt>:
 800a238:	4b02      	ldr	r3, [pc, #8]	; (800a244 <GUI_DispStringAt+0xc>)
 800a23a:	681b      	ldr	r3, [r3, #0]
 800a23c:	8459      	strh	r1, [r3, #34]	; 0x22
 800a23e:	849a      	strh	r2, [r3, #36]	; 0x24
 800a240:	f7ff bf76 	b.w	800a130 <GUI_DispString>
 800a244:	200000b8 	.word	0x200000b8

0800a248 <GUI__DispStringInRect>:
 800a248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a24c:	b087      	sub	sp, #28
 800a24e:	460c      	mov	r4, r1
 800a250:	9001      	str	r0, [sp, #4]
 800a252:	4691      	mov	r9, r2
 800a254:	461d      	mov	r5, r3
 800a256:	f001 f83b 	bl	800b2d0 <GUI_GetFontDistY>
 800a25a:	9f01      	ldr	r7, [sp, #4]
 800a25c:	4680      	mov	r8, r0
 800a25e:	b124      	cbz	r4, 800a26a <GUI__DispStringInRect+0x22>
 800a260:	6820      	ldr	r0, [r4, #0]
 800a262:	6861      	ldr	r1, [r4, #4]
 800a264:	ab04      	add	r3, sp, #16
 800a266:	c303      	stmia	r3!, {r0, r1}
 800a268:	e002      	b.n	800a270 <GUI__DispStringInRect+0x28>
 800a26a:	a804      	add	r0, sp, #16
 800a26c:	f000 fbf0 	bl	800aa50 <GUI_GetClientRect>
 800a270:	f019 0a0c 	ands.w	sl, r9, #12
 800a274:	d002      	beq.n	800a27c <GUI__DispStringInRect+0x34>
 800a276:	462c      	mov	r4, r5
 800a278:	2600      	movs	r6, #0
 800a27a:	e016      	b.n	800a2aa <GUI__DispStringInRect+0x62>
 800a27c:	f9bd 4012 	ldrsh.w	r4, [sp, #18]
 800a280:	e032      	b.n	800a2e8 <GUI__DispStringInRect+0xa0>
 800a282:	4621      	mov	r1, r4
 800a284:	9801      	ldr	r0, [sp, #4]
 800a286:	f000 ff59 	bl	800b13c <GUI__GetLineNumChars>
 800a28a:	f8dd b004 	ldr.w	fp, [sp, #4]
 800a28e:	4601      	mov	r1, r0
 800a290:	1a24      	subs	r4, r4, r0
 800a292:	4658      	mov	r0, fp
 800a294:	f7ff f92a 	bl	80094ec <GUI_UC__NumChars2NumBytes>
 800a298:	eb0b 0300 	add.w	r3, fp, r0
 800a29c:	a806      	add	r0, sp, #24
 800a29e:	3601      	adds	r6, #1
 800a2a0:	f840 3d14 	str.w	r3, [r0, #-20]!
 800a2a4:	f7fe fdad 	bl	8008e02 <GUI__HandleEOLine>
 800a2a8:	b908      	cbnz	r0, 800a2ae <GUI__DispStringInRect+0x66>
 800a2aa:	2c00      	cmp	r4, #0
 800a2ac:	d1e9      	bne.n	800a282 <GUI__DispStringInRect+0x3a>
 800a2ae:	f1ba 0f08 	cmp.w	sl, #8
 800a2b2:	d005      	beq.n	800a2c0 <GUI__DispStringInRect+0x78>
 800a2b4:	f1ba 0f0c 	cmp.w	sl, #12
 800a2b8:	d008      	beq.n	800a2cc <GUI__DispStringInRect+0x84>
 800a2ba:	f1ba 0f04 	cmp.w	sl, #4
 800a2be:	d112      	bne.n	800a2e6 <GUI__DispStringInRect+0x9e>
 800a2c0:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 800a2c4:	fb08 4416 	mls	r4, r8, r6, r4
 800a2c8:	3401      	adds	r4, #1
 800a2ca:	e00d      	b.n	800a2e8 <GUI__DispStringInRect+0xa0>
 800a2cc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800a2d0:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 800a2d4:	1ae4      	subs	r4, r4, r3
 800a2d6:	3401      	adds	r4, #1
 800a2d8:	fb08 4416 	mls	r4, r8, r6, r4
 800a2dc:	2202      	movs	r2, #2
 800a2de:	fb94 f4f2 	sdiv	r4, r4, r2
 800a2e2:	441c      	add	r4, r3
 800a2e4:	e000      	b.n	800a2e8 <GUI__DispStringInRect+0xa0>
 800a2e6:	2400      	movs	r4, #0
 800a2e8:	9701      	str	r7, [sp, #4]
 800a2ea:	2600      	movs	r6, #0
 800a2ec:	2d00      	cmp	r5, #0
 800a2ee:	d04b      	beq.n	800a388 <GUI__DispStringInRect+0x140>
 800a2f0:	4629      	mov	r1, r5
 800a2f2:	9801      	ldr	r0, [sp, #4]
 800a2f4:	f000 ff22 	bl	800b13c <GUI__GetLineNumChars>
 800a2f8:	4607      	mov	r7, r0
 800a2fa:	1a2d      	subs	r5, r5, r0
 800a2fc:	4639      	mov	r1, r7
 800a2fe:	9801      	ldr	r0, [sp, #4]
 800a300:	f000 ff4a 	bl	800b198 <GUI__GetLineDistX>
 800a304:	f009 0303 	and.w	r3, r9, #3
 800a308:	2b01      	cmp	r3, #1
 800a30a:	d00f      	beq.n	800a32c <GUI__DispStringInRect+0xe4>
 800a30c:	2b02      	cmp	r3, #2
 800a30e:	d003      	beq.n	800a318 <GUI__DispStringInRect+0xd0>
 800a310:	b983      	cbnz	r3, 800a334 <GUI__DispStringInRect+0xec>
 800a312:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
 800a316:	e00d      	b.n	800a334 <GUI__DispStringInRect+0xec>
 800a318:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800a31c:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 800a320:	1ab6      	subs	r6, r6, r2
 800a322:	1a36      	subs	r6, r6, r0
 800a324:	fb96 f6f3 	sdiv	r6, r6, r3
 800a328:	4416      	add	r6, r2
 800a32a:	e003      	b.n	800a334 <GUI__DispStringInRect+0xec>
 800a32c:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 800a330:	1a36      	subs	r6, r6, r0
 800a332:	3601      	adds	r6, #1
 800a334:	4b16      	ldr	r3, [pc, #88]	; (800a390 <GUI__DispStringInRect+0x148>)
 800a336:	6819      	ldr	r1, [r3, #0]
 800a338:	3801      	subs	r0, #1
 800a33a:	b2a3      	uxth	r3, r4
 800a33c:	b2b2      	uxth	r2, r6
 800a33e:	848b      	strh	r3, [r1, #36]	; 0x24
 800a340:	4430      	add	r0, r6
 800a342:	f8ad 300a 	strh.w	r3, [sp, #10]
 800a346:	f108 33ff 	add.w	r3, r8, #4294967295
 800a34a:	4423      	add	r3, r4
 800a34c:	844a      	strh	r2, [r1, #34]	; 0x22
 800a34e:	f8ad 2008 	strh.w	r2, [sp, #8]
 800a352:	4639      	mov	r1, r7
 800a354:	aa02      	add	r2, sp, #8
 800a356:	f8ad 000c 	strh.w	r0, [sp, #12]
 800a35a:	9801      	ldr	r0, [sp, #4]
 800a35c:	f8ad 300e 	strh.w	r3, [sp, #14]
 800a360:	f000 ff4a 	bl	800b1f8 <GUI__DispLine>
 800a364:	f8dd a004 	ldr.w	sl, [sp, #4]
 800a368:	4639      	mov	r1, r7
 800a36a:	4650      	mov	r0, sl
 800a36c:	f7ff f8be 	bl	80094ec <GUI_UC__NumChars2NumBytes>
 800a370:	af06      	add	r7, sp, #24
 800a372:	4450      	add	r0, sl
 800a374:	f847 0d14 	str.w	r0, [r7, #-20]!
 800a378:	f000 ffaa 	bl	800b2d0 <GUI_GetFontDistY>
 800a37c:	4404      	add	r4, r0
 800a37e:	4638      	mov	r0, r7
 800a380:	f7fe fd3f 	bl	8008e02 <GUI__HandleEOLine>
 800a384:	2800      	cmp	r0, #0
 800a386:	d0b1      	beq.n	800a2ec <GUI__DispStringInRect+0xa4>
 800a388:	b007      	add	sp, #28
 800a38a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a38e:	bf00      	nop
 800a390:	200000b8 	.word	0x200000b8

0800a394 <GUI_DispStringInRectMax>:
 800a394:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a398:	460c      	mov	r4, r1
 800a39a:	4690      	mov	r8, r2
 800a39c:	461f      	mov	r7, r3
 800a39e:	4606      	mov	r6, r0
 800a3a0:	b1c0      	cbz	r0, 800a3d4 <GUI_DispStringInRectMax+0x40>
 800a3a2:	b169      	cbz	r1, 800a3c0 <GUI_DispStringInRectMax+0x2c>
 800a3a4:	4608      	mov	r0, r1
 800a3a6:	f7fa fceb 	bl	8004d80 <WM_SetUserClipRect>
 800a3aa:	4605      	mov	r5, r0
 800a3ac:	b148      	cbz	r0, 800a3c2 <GUI_DispStringInRectMax+0x2e>
 800a3ae:	4668      	mov	r0, sp
 800a3b0:	4621      	mov	r1, r4
 800a3b2:	462a      	mov	r2, r5
 800a3b4:	f7fe fd57 	bl	8008e66 <GUI__IntersectRects>
 800a3b8:	4668      	mov	r0, sp
 800a3ba:	f7fa fce1 	bl	8004d80 <WM_SetUserClipRect>
 800a3be:	e000      	b.n	800a3c2 <GUI_DispStringInRectMax+0x2e>
 800a3c0:	460d      	mov	r5, r1
 800a3c2:	4630      	mov	r0, r6
 800a3c4:	4621      	mov	r1, r4
 800a3c6:	4642      	mov	r2, r8
 800a3c8:	463b      	mov	r3, r7
 800a3ca:	f7ff ff3d 	bl	800a248 <GUI__DispStringInRect>
 800a3ce:	4628      	mov	r0, r5
 800a3d0:	f7fa fcd6 	bl	8004d80 <WM_SetUserClipRect>
 800a3d4:	b002      	add	sp, #8
 800a3d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a3da <GUI_DispStringInRect>:
 800a3da:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800a3de:	f7ff bfd9 	b.w	800a394 <GUI_DispStringInRectMax>

0800a3e2 <GUI_WrapGetNumLines>:
 800a3e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a3e4:	4605      	mov	r5, r0
 800a3e6:	460e      	mov	r6, r1
 800a3e8:	4617      	mov	r7, r2
 800a3ea:	2400      	movs	r4, #0
 800a3ec:	4628      	mov	r0, r5
 800a3ee:	4631      	mov	r1, r6
 800a3f0:	463a      	mov	r2, r7
 800a3f2:	f004 fac7 	bl	800e984 <GUI__WrapGetNumBytesToNextLine>
 800a3f6:	b110      	cbz	r0, 800a3fe <GUI_WrapGetNumLines+0x1c>
 800a3f8:	4405      	add	r5, r0
 800a3fa:	3401      	adds	r4, #1
 800a3fc:	e7f6      	b.n	800a3ec <GUI_WrapGetNumLines+0xa>
 800a3fe:	4620      	mov	r0, r4
 800a400:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a402 <GUI_DispStringInRectWrap>:
 800a402:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a406:	b089      	sub	sp, #36	; 0x24
 800a408:	460c      	mov	r4, r1
 800a40a:	9202      	str	r2, [sp, #8]
 800a40c:	9303      	str	r3, [sp, #12]
 800a40e:	4605      	mov	r5, r0
 800a410:	2800      	cmp	r0, #0
 800a412:	f000 8092 	beq.w	800a53a <GUI_DispStringInRectWrap+0x138>
 800a416:	f8b1 a000 	ldrh.w	sl, [r1]
 800a41a:	f8b1 9004 	ldrh.w	r9, [r1, #4]
 800a41e:	884e      	ldrh	r6, [r1, #2]
 800a420:	f8b1 b006 	ldrh.w	fp, [r1, #6]
 800a424:	fa0f f289 	sxth.w	r2, r9
 800a428:	fa0f f38a 	sxth.w	r3, sl
 800a42c:	1ad3      	subs	r3, r2, r3
 800a42e:	3301      	adds	r3, #1
 800a430:	9301      	str	r3, [sp, #4]
 800a432:	f000 ff4d 	bl	800b2d0 <GUI_GetFontDistY>
 800a436:	9902      	ldr	r1, [sp, #8]
 800a438:	f011 070c 	ands.w	r7, r1, #12
 800a43c:	4680      	mov	r8, r0
 800a43e:	d01b      	beq.n	800a478 <GUI_DispStringInRectWrap+0x76>
 800a440:	4628      	mov	r0, r5
 800a442:	9901      	ldr	r1, [sp, #4]
 800a444:	9a03      	ldr	r2, [sp, #12]
 800a446:	f7ff ffcc 	bl	800a3e2 <GUI_WrapGetNumLines>
 800a44a:	2f08      	cmp	r7, #8
 800a44c:	d003      	beq.n	800a456 <GUI_DispStringInRectWrap+0x54>
 800a44e:	2f0c      	cmp	r7, #12
 800a450:	d006      	beq.n	800a460 <GUI_DispStringInRectWrap+0x5e>
 800a452:	2f04      	cmp	r7, #4
 800a454:	d110      	bne.n	800a478 <GUI_DispStringInRectWrap+0x76>
 800a456:	f10b 0601 	add.w	r6, fp, #1
 800a45a:	fb00 6618 	mls	r6, r0, r8, r6
 800a45e:	e00a      	b.n	800a476 <GUI_DispStringInRectWrap+0x74>
 800a460:	b232      	sxth	r2, r6
 800a462:	fa0f f38b 	sxth.w	r3, fp
 800a466:	1a9b      	subs	r3, r3, r2
 800a468:	3301      	adds	r3, #1
 800a46a:	fb08 3010 	mls	r0, r8, r0, r3
 800a46e:	2302      	movs	r3, #2
 800a470:	fb90 f0f3 	sdiv	r0, r0, r3
 800a474:	4406      	add	r6, r0
 800a476:	b2b6      	uxth	r6, r6
 800a478:	4620      	mov	r0, r4
 800a47a:	f7fa fc81 	bl	8004d80 <WM_SetUserClipRect>
 800a47e:	4607      	mov	r7, r0
 800a480:	b178      	cbz	r0, 800a4a2 <GUI_DispStringInRectWrap+0xa0>
 800a482:	a804      	add	r0, sp, #16
 800a484:	4621      	mov	r1, r4
 800a486:	463a      	mov	r2, r7
 800a488:	f8ad a010 	strh.w	sl, [sp, #16]
 800a48c:	f8ad 6012 	strh.w	r6, [sp, #18]
 800a490:	f8ad 9014 	strh.w	r9, [sp, #20]
 800a494:	f8ad b016 	strh.w	fp, [sp, #22]
 800a498:	f7fe fce5 	bl	8008e66 <GUI__IntersectRects>
 800a49c:	a804      	add	r0, sp, #16
 800a49e:	f7fa fc6f 	bl	8004d80 <WM_SetUserClipRect>
 800a4a2:	9901      	ldr	r1, [sp, #4]
 800a4a4:	9a03      	ldr	r2, [sp, #12]
 800a4a6:	4628      	mov	r0, r5
 800a4a8:	f004 fa3a 	bl	800e920 <GUI__WrapGetNumCharsDisp>
 800a4ac:	eb06 0b08 	add.w	fp, r6, r8
 800a4b0:	4602      	mov	r2, r0
 800a4b2:	fa1f fb8b 	uxth.w	fp, fp
 800a4b6:	f10b 33ff 	add.w	r3, fp, #4294967295
 800a4ba:	4611      	mov	r1, r2
 800a4bc:	4628      	mov	r0, r5
 800a4be:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a4c2:	9200      	str	r2, [sp, #0]
 800a4c4:	f8ad a018 	strh.w	sl, [sp, #24]
 800a4c8:	f8ad 601a 	strh.w	r6, [sp, #26]
 800a4cc:	f8ad 901c 	strh.w	r9, [sp, #28]
 800a4d0:	f000 fe62 	bl	800b198 <GUI__GetLineDistX>
 800a4d4:	9902      	ldr	r1, [sp, #8]
 800a4d6:	9a00      	ldr	r2, [sp, #0]
 800a4d8:	f001 0303 	and.w	r3, r1, #3
 800a4dc:	2b01      	cmp	r3, #1
 800a4de:	d014      	beq.n	800a50a <GUI_DispStringInRectWrap+0x108>
 800a4e0:	2b02      	cmp	r3, #2
 800a4e2:	d004      	beq.n	800a4ee <GUI_DispStringInRectWrap+0xec>
 800a4e4:	b9b3      	cbnz	r3, 800a514 <GUI_DispStringInRectWrap+0x112>
 800a4e6:	8823      	ldrh	r3, [r4, #0]
 800a4e8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a4ec:	e012      	b.n	800a514 <GUI_DispStringInRectWrap+0x112>
 800a4ee:	8821      	ldrh	r1, [r4, #0]
 800a4f0:	f9b4 e004 	ldrsh.w	lr, [r4, #4]
 800a4f4:	b20e      	sxth	r6, r1
 800a4f6:	ebc6 060e 	rsb	r6, r6, lr
 800a4fa:	1a30      	subs	r0, r6, r0
 800a4fc:	3001      	adds	r0, #1
 800a4fe:	fb90 f3f3 	sdiv	r3, r0, r3
 800a502:	4419      	add	r1, r3
 800a504:	f8ad 1018 	strh.w	r1, [sp, #24]
 800a508:	e004      	b.n	800a514 <GUI_DispStringInRectWrap+0x112>
 800a50a:	88a3      	ldrh	r3, [r4, #4]
 800a50c:	3301      	adds	r3, #1
 800a50e:	1a18      	subs	r0, r3, r0
 800a510:	f8ad 0018 	strh.w	r0, [sp, #24]
 800a514:	4628      	mov	r0, r5
 800a516:	4611      	mov	r1, r2
 800a518:	aa06      	add	r2, sp, #24
 800a51a:	f000 fe6d 	bl	800b1f8 <GUI__DispLine>
 800a51e:	4628      	mov	r0, r5
 800a520:	9901      	ldr	r1, [sp, #4]
 800a522:	9a03      	ldr	r2, [sp, #12]
 800a524:	f004 fa2e 	bl	800e984 <GUI__WrapGetNumBytesToNextLine>
 800a528:	4405      	add	r5, r0
 800a52a:	fa1f f68b 	uxth.w	r6, fp
 800a52e:	782b      	ldrb	r3, [r5, #0]
 800a530:	2b00      	cmp	r3, #0
 800a532:	d1b6      	bne.n	800a4a2 <GUI_DispStringInRectWrap+0xa0>
 800a534:	4638      	mov	r0, r7
 800a536:	f7fa fc23 	bl	8004d80 <WM_SetUserClipRect>
 800a53a:	b009      	add	sp, #36	; 0x24
 800a53c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a540 <GUI_GetStringDistX>:
 800a540:	b510      	push	{r4, lr}
 800a542:	4604      	mov	r4, r0
 800a544:	f7fe ffe4 	bl	8009510 <GUI__GetNumChars>
 800a548:	4601      	mov	r1, r0
 800a54a:	4620      	mov	r0, r4
 800a54c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a550:	f000 be22 	b.w	800b198 <GUI__GetLineDistX>

0800a554 <GUI_DEVICE__GetpDriver>:
 800a554:	2801      	cmp	r0, #1
 800a556:	dc09      	bgt.n	800a56c <GUI_DEVICE__GetpDriver+0x18>
 800a558:	4b05      	ldr	r3, [pc, #20]	; (800a570 <GUI_DEVICE__GetpDriver+0x1c>)
 800a55a:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800a55e:	b120      	cbz	r0, 800a56a <GUI_DEVICE__GetpDriver+0x16>
 800a560:	68c3      	ldr	r3, [r0, #12]
 800a562:	681b      	ldr	r3, [r3, #0]
 800a564:	b11b      	cbz	r3, 800a56e <GUI_DEVICE__GetpDriver+0x1a>
 800a566:	6800      	ldr	r0, [r0, #0]
 800a568:	e7f9      	b.n	800a55e <GUI_DEVICE__GetpDriver+0xa>
 800a56a:	4770      	bx	lr
 800a56c:	2000      	movs	r0, #0
 800a56e:	4770      	bx	lr
 800a570:	20002d28 	.word	0x20002d28

0800a574 <GUI_DEVICE_Delete>:
 800a574:	f000 bf98 	b.w	800b4a8 <GUI_ALLOC_FreeFixedBlock>

0800a578 <GUI_DEVICE_Create>:
 800a578:	2b01      	cmp	r3, #1
 800a57a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a57c:	4606      	mov	r6, r0
 800a57e:	460d      	mov	r5, r1
 800a580:	4617      	mov	r7, r2
 800a582:	461c      	mov	r4, r3
 800a584:	dd01      	ble.n	800a58a <GUI_DEVICE_Create+0x12>
 800a586:	2000      	movs	r0, #0
 800a588:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a58a:	201c      	movs	r0, #28
 800a58c:	f001 f870 	bl	800b670 <GUI_ALLOC_GetFixedBlock>
 800a590:	2800      	cmp	r0, #0
 800a592:	d0f8      	beq.n	800a586 <GUI_DEVICE_Create+0xe>
 800a594:	b10d      	cbz	r5, 800a59a <GUI_DEVICE_Create+0x22>
 800a596:	6105      	str	r5, [r0, #16]
 800a598:	e009      	b.n	800a5ae <GUI_DEVICE_Create+0x36>
 800a59a:	4b09      	ldr	r3, [pc, #36]	; (800a5c0 <GUI_DEVICE_Create+0x48>)
 800a59c:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 800a5a0:	b129      	cbz	r1, 800a5ae <GUI_DEVICE_Create+0x36>
 800a5a2:	680b      	ldr	r3, [r1, #0]
 800a5a4:	b10b      	cbz	r3, 800a5aa <GUI_DEVICE_Create+0x32>
 800a5a6:	4619      	mov	r1, r3
 800a5a8:	e7fb      	b.n	800a5a2 <GUI_DEVICE_Create+0x2a>
 800a5aa:	690b      	ldr	r3, [r1, #16]
 800a5ac:	6103      	str	r3, [r0, #16]
 800a5ae:	2300      	movs	r3, #0
 800a5b0:	6083      	str	r3, [r0, #8]
 800a5b2:	6184      	str	r4, [r0, #24]
 800a5b4:	8287      	strh	r7, [r0, #20]
 800a5b6:	60c6      	str	r6, [r0, #12]
 800a5b8:	6003      	str	r3, [r0, #0]
 800a5ba:	6043      	str	r3, [r0, #4]
 800a5bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a5be:	bf00      	nop
 800a5c0:	20002d28 	.word	0x20002d28

0800a5c4 <GUI_DEVICE_Unlink>:
 800a5c4:	6981      	ldr	r1, [r0, #24]
 800a5c6:	4a0b      	ldr	r2, [pc, #44]	; (800a5f4 <GUI_DEVICE_Unlink+0x30>)
 800a5c8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800a5cc:	4283      	cmp	r3, r0
 800a5ce:	d105      	bne.n	800a5dc <GUI_DEVICE_Unlink+0x18>
 800a5d0:	6803      	ldr	r3, [r0, #0]
 800a5d2:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 800a5d6:	b10b      	cbz	r3, 800a5dc <GUI_DEVICE_Unlink+0x18>
 800a5d8:	2200      	movs	r2, #0
 800a5da:	605a      	str	r2, [r3, #4]
 800a5dc:	6843      	ldr	r3, [r0, #4]
 800a5de:	b10b      	cbz	r3, 800a5e4 <GUI_DEVICE_Unlink+0x20>
 800a5e0:	6802      	ldr	r2, [r0, #0]
 800a5e2:	601a      	str	r2, [r3, #0]
 800a5e4:	6802      	ldr	r2, [r0, #0]
 800a5e6:	b102      	cbz	r2, 800a5ea <GUI_DEVICE_Unlink+0x26>
 800a5e8:	6053      	str	r3, [r2, #4]
 800a5ea:	2300      	movs	r3, #0
 800a5ec:	6003      	str	r3, [r0, #0]
 800a5ee:	6043      	str	r3, [r0, #4]
 800a5f0:	4770      	bx	lr
 800a5f2:	bf00      	nop
 800a5f4:	20002d28 	.word	0x20002d28

0800a5f8 <GUI_DEVICE_Link>:
 800a5f8:	b570      	push	{r4, r5, r6, lr}
 800a5fa:	b908      	cbnz	r0, 800a600 <GUI_DEVICE_Link+0x8>
 800a5fc:	2001      	movs	r0, #1
 800a5fe:	bd70      	pop	{r4, r5, r6, pc}
 800a600:	6982      	ldr	r2, [r0, #24]
 800a602:	2a01      	cmp	r2, #1
 800a604:	dcfa      	bgt.n	800a5fc <GUI_DEVICE_Link+0x4>
 800a606:	4b1b      	ldr	r3, [pc, #108]	; (800a674 <GUI_DEVICE_Link+0x7c>)
 800a608:	7819      	ldrb	r1, [r3, #0]
 800a60a:	428a      	cmp	r2, r1
 800a60c:	bfa4      	itt	ge
 800a60e:	1c51      	addge	r1, r2, #1
 800a610:	7019      	strbge	r1, [r3, #0]
 800a612:	4919      	ldr	r1, [pc, #100]	; (800a678 <GUI_DEVICE_Link+0x80>)
 800a614:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 800a618:	460d      	mov	r5, r1
 800a61a:	b913      	cbnz	r3, 800a622 <GUI_DEVICE_Link+0x2a>
 800a61c:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 800a620:	e01a      	b.n	800a658 <GUI_DEVICE_Link+0x60>
 800a622:	6859      	ldr	r1, [r3, #4]
 800a624:	b109      	cbz	r1, 800a62a <GUI_DEVICE_Link+0x32>
 800a626:	460b      	mov	r3, r1
 800a628:	e7fb      	b.n	800a622 <GUI_DEVICE_Link+0x2a>
 800a62a:	68c1      	ldr	r1, [r0, #12]
 800a62c:	680e      	ldr	r6, [r1, #0]
 800a62e:	68d9      	ldr	r1, [r3, #12]
 800a630:	680c      	ldr	r4, [r1, #0]
 800a632:	42b4      	cmp	r4, r6
 800a634:	dd03      	ble.n	800a63e <GUI_DEVICE_Link+0x46>
 800a636:	681b      	ldr	r3, [r3, #0]
 800a638:	2b00      	cmp	r3, #0
 800a63a:	d1f8      	bne.n	800a62e <GUI_DEVICE_Link+0x36>
 800a63c:	e7de      	b.n	800a5fc <GUI_DEVICE_Link+0x4>
 800a63e:	d102      	bne.n	800a646 <GUI_DEVICE_Link+0x4e>
 800a640:	8a81      	ldrh	r1, [r0, #20]
 800a642:	2901      	cmp	r1, #1
 800a644:	d00f      	beq.n	800a666 <GUI_DEVICE_Link+0x6e>
 800a646:	6859      	ldr	r1, [r3, #4]
 800a648:	b189      	cbz	r1, 800a66e <GUI_DEVICE_Link+0x76>
 800a64a:	6008      	str	r0, [r1, #0]
 800a64c:	6041      	str	r1, [r0, #4]
 800a64e:	6058      	str	r0, [r3, #4]
 800a650:	4298      	cmp	r0, r3
 800a652:	bf08      	it	eq
 800a654:	2300      	moveq	r3, #0
 800a656:	6003      	str	r3, [r0, #0]
 800a658:	2000      	movs	r0, #0
 800a65a:	bd70      	pop	{r4, r5, r6, pc}
 800a65c:	68cb      	ldr	r3, [r1, #12]
 800a65e:	681b      	ldr	r3, [r3, #0]
 800a660:	42a3      	cmp	r3, r4
 800a662:	460b      	mov	r3, r1
 800a664:	dbef      	blt.n	800a646 <GUI_DEVICE_Link+0x4e>
 800a666:	6819      	ldr	r1, [r3, #0]
 800a668:	2900      	cmp	r1, #0
 800a66a:	d1f7      	bne.n	800a65c <GUI_DEVICE_Link+0x64>
 800a66c:	e7eb      	b.n	800a646 <GUI_DEVICE_Link+0x4e>
 800a66e:	f845 0022 	str.w	r0, [r5, r2, lsl #2]
 800a672:	e7ec      	b.n	800a64e <GUI_DEVICE_Link+0x56>
 800a674:	20002cd6 	.word	0x20002cd6
 800a678:	20002d28 	.word	0x20002d28

0800a67c <GUI_DEVICE_CreateAndLink>:
 800a67c:	b538      	push	{r3, r4, r5, lr}
 800a67e:	461d      	mov	r5, r3
 800a680:	f7ff ff7a 	bl	800a578 <GUI_DEVICE_Create>
 800a684:	4604      	mov	r4, r0
 800a686:	b148      	cbz	r0, 800a69c <GUI_DEVICE_CreateAndLink+0x20>
 800a688:	f7ff ffb6 	bl	800a5f8 <GUI_DEVICE_Link>
 800a68c:	68e3      	ldr	r3, [r4, #12]
 800a68e:	681b      	ldr	r3, [r3, #0]
 800a690:	b923      	cbnz	r3, 800a69c <GUI_DEVICE_CreateAndLink+0x20>
 800a692:	4b03      	ldr	r3, [pc, #12]	; (800a6a0 <GUI_DEVICE_CreateAndLink+0x24>)
 800a694:	3516      	adds	r5, #22
 800a696:	681b      	ldr	r3, [r3, #0]
 800a698:	f843 4025 	str.w	r4, [r3, r5, lsl #2]
 800a69c:	4620      	mov	r0, r4
 800a69e:	bd38      	pop	{r3, r4, r5, pc}
 800a6a0:	200000b8 	.word	0x200000b8

0800a6a4 <_OnExit>:
 800a6a4:	b570      	push	{r4, r5, r6, lr}
 800a6a6:	4b0b      	ldr	r3, [pc, #44]	; (800a6d4 <_OnExit+0x30>)
 800a6a8:	4e0b      	ldr	r6, [pc, #44]	; (800a6d8 <_OnExit+0x34>)
 800a6aa:	4d0c      	ldr	r5, [pc, #48]	; (800a6dc <_OnExit+0x38>)
 800a6ac:	2400      	movs	r4, #0
 800a6ae:	601c      	str	r4, [r3, #0]
 800a6b0:	4621      	mov	r1, r4
 800a6b2:	6833      	ldr	r3, [r6, #0]
 800a6b4:	2270      	movs	r2, #112	; 0x70
 800a6b6:	4628      	mov	r0, r5
 800a6b8:	4798      	blx	r3
 800a6ba:	6833      	ldr	r3, [r6, #0]
 800a6bc:	4808      	ldr	r0, [pc, #32]	; (800a6e0 <_OnExit+0x3c>)
 800a6be:	4621      	mov	r1, r4
 800a6c0:	2208      	movs	r2, #8
 800a6c2:	4798      	blx	r3
 800a6c4:	4b07      	ldr	r3, [pc, #28]	; (800a6e4 <_OnExit+0x40>)
 800a6c6:	601d      	str	r5, [r3, #0]
 800a6c8:	4b07      	ldr	r3, [pc, #28]	; (800a6e8 <_OnExit+0x44>)
 800a6ca:	701c      	strb	r4, [r3, #0]
 800a6cc:	4b07      	ldr	r3, [pc, #28]	; (800a6ec <_OnExit+0x48>)
 800a6ce:	601c      	str	r4, [r3, #0]
 800a6d0:	bd70      	pop	{r4, r5, r6, pc}
 800a6d2:	bf00      	nop
 800a6d4:	20002c28 	.word	0x20002c28
 800a6d8:	200000a4 	.word	0x200000a4
 800a6dc:	20002bb8 	.word	0x20002bb8
 800a6e0:	20002d28 	.word	0x20002d28
 800a6e4:	200000b8 	.word	0x200000b8
 800a6e8:	20002d10 	.word	0x20002d10
 800a6ec:	20002ce8 	.word	0x20002ce8

0800a6f0 <_InitContext>:
 800a6f0:	b538      	push	{r3, r4, r5, lr}
 800a6f2:	4d19      	ldr	r5, [pc, #100]	; (800a758 <_InitContext+0x68>)
 800a6f4:	682b      	ldr	r3, [r5, #0]
 800a6f6:	1d1a      	adds	r2, r3, #4
 800a6f8:	63da      	str	r2, [r3, #60]	; 0x3c
 800a6fa:	f103 0208 	add.w	r2, r3, #8
 800a6fe:	639b      	str	r3, [r3, #56]	; 0x38
 800a700:	641b      	str	r3, [r3, #64]	; 0x40
 800a702:	6142      	str	r2, [r0, #20]
 800a704:	7c5a      	ldrb	r2, [r3, #17]
 800a706:	4b15      	ldr	r3, [pc, #84]	; (800a75c <_InitContext+0x6c>)
 800a708:	4604      	mov	r4, r0
 800a70a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800a70e:	68c3      	ldr	r3, [r0, #12]
 800a710:	f104 0108 	add.w	r1, r4, #8
 800a714:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a716:	4798      	blx	r3
 800a718:	4b11      	ldr	r3, [pc, #68]	; (800a760 <_InitContext+0x70>)
 800a71a:	6663      	str	r3, [r4, #100]	; 0x64
 800a71c:	4b11      	ldr	r3, [pc, #68]	; (800a764 <_InitContext+0x74>)
 800a71e:	681b      	ldr	r3, [r3, #0]
 800a720:	61e3      	str	r3, [r4, #28]
 800a722:	682b      	ldr	r3, [r5, #0]
 800a724:	3308      	adds	r3, #8
 800a726:	6163      	str	r3, [r4, #20]
 800a728:	2301      	movs	r3, #1
 800a72a:	7623      	strb	r3, [r4, #24]
 800a72c:	f7fa f83e 	bl	80047ac <WM_GetDesktopWindow>
 800a730:	2303      	movs	r3, #3
 800a732:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 800a736:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800a73a:	6323      	str	r3, [r4, #48]	; 0x30
 800a73c:	6363      	str	r3, [r4, #52]	; 0x34
 800a73e:	4b0a      	ldr	r3, [pc, #40]	; (800a768 <_InitContext+0x78>)
 800a740:	64a0      	str	r0, [r4, #72]	; 0x48
 800a742:	6818      	ldr	r0, [r3, #0]
 800a744:	f7fe fb40 	bl	8008dc8 <LCD_SetBkColor>
 800a748:	4b08      	ldr	r3, [pc, #32]	; (800a76c <_InitContext+0x7c>)
 800a74a:	6818      	ldr	r0, [r3, #0]
 800a74c:	f7fe fb44 	bl	8008dd8 <LCD_SetColor>
 800a750:	4b07      	ldr	r3, [pc, #28]	; (800a770 <_InitContext+0x80>)
 800a752:	4a08      	ldr	r2, [pc, #32]	; (800a774 <_InitContext+0x84>)
 800a754:	601a      	str	r2, [r3, #0]
 800a756:	bd38      	pop	{r3, r4, r5, pc}
 800a758:	200000b8 	.word	0x200000b8
 800a75c:	20002d28 	.word	0x20002d28
 800a760:	0801208c 	.word	0x0801208c
 800a764:	200000bc 	.word	0x200000bc
 800a768:	20002bb4 	.word	0x20002bb4
 800a76c:	200000c0 	.word	0x200000c0
 800a770:	20002d20 	.word	0x20002d20
 800a774:	08012bf8 	.word	0x08012bf8

0800a778 <GUI_SetDefaultFont>:
 800a778:	4b01      	ldr	r3, [pc, #4]	; (800a780 <GUI_SetDefaultFont+0x8>)
 800a77a:	6018      	str	r0, [r3, #0]
 800a77c:	4770      	bx	lr
 800a77e:	bf00      	nop
 800a780:	200000bc 	.word	0x200000bc

0800a784 <GUI_ClearRect>:
 800a784:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a788:	4607      	mov	r7, r0
 800a78a:	2004      	movs	r0, #4
 800a78c:	469a      	mov	sl, r3
 800a78e:	460e      	mov	r6, r1
 800a790:	4691      	mov	r9, r2
 800a792:	f7fd ffc7 	bl	8008724 <LCD_SetDrawMode>
 800a796:	4b13      	ldr	r3, [pc, #76]	; (800a7e4 <GUI_ClearRect+0x60>)
 800a798:	681c      	ldr	r4, [r3, #0]
 800a79a:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800a79c:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800a79e:	442f      	add	r7, r5
 800a7a0:	4426      	add	r6, r4
 800a7a2:	4680      	mov	r8, r0
 800a7a4:	444d      	add	r5, r9
 800a7a6:	4454      	add	r4, sl
 800a7a8:	4668      	mov	r0, sp
 800a7aa:	f8ad 7000 	strh.w	r7, [sp]
 800a7ae:	f8ad 5004 	strh.w	r5, [sp, #4]
 800a7b2:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a7b6:	f8ad 4006 	strh.w	r4, [sp, #6]
 800a7ba:	f7fb fb0d 	bl	8005dd8 <WM__InitIVRSearch>
 800a7be:	b928      	cbnz	r0, 800a7cc <GUI_ClearRect+0x48>
 800a7c0:	4640      	mov	r0, r8
 800a7c2:	f7fd ffaf 	bl	8008724 <LCD_SetDrawMode>
 800a7c6:	b002      	add	sp, #8
 800a7c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a7cc:	4638      	mov	r0, r7
 800a7ce:	4631      	mov	r1, r6
 800a7d0:	462a      	mov	r2, r5
 800a7d2:	4623      	mov	r3, r4
 800a7d4:	f7fe f828 	bl	8008828 <LCD_FillRect>
 800a7d8:	f7fb fa3c 	bl	8005c54 <WM__GetNextIVR>
 800a7dc:	2800      	cmp	r0, #0
 800a7de:	d1f5      	bne.n	800a7cc <GUI_ClearRect+0x48>
 800a7e0:	e7ee      	b.n	800a7c0 <GUI_ClearRect+0x3c>
 800a7e2:	bf00      	nop
 800a7e4:	200000b8 	.word	0x200000b8

0800a7e8 <GUI_Clear>:
 800a7e8:	b510      	push	{r4, lr}
 800a7ea:	2000      	movs	r0, #0
 800a7ec:	4601      	mov	r1, r0
 800a7ee:	f000 f9c1 	bl	800ab74 <GUI_GotoXY>
 800a7f2:	4804      	ldr	r0, [pc, #16]	; (800a804 <GUI_Clear+0x1c>)
 800a7f4:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800a7f8:	4601      	mov	r1, r0
 800a7fa:	4613      	mov	r3, r2
 800a7fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a800:	f7ff bfc0 	b.w	800a784 <GUI_ClearRect>
 800a804:	ffffc001 	.word	0xffffc001

0800a808 <GUI__RegisterExit>:
 800a808:	b480      	push	{r7}
 800a80a:	b083      	sub	sp, #12
 800a80c:	af00      	add	r7, sp, #0
 800a80e:	6078      	str	r0, [r7, #4]
 800a810:	4b05      	ldr	r3, [pc, #20]	; (800a828 <GUI__RegisterExit+0x20>)
 800a812:	681a      	ldr	r2, [r3, #0]
 800a814:	687b      	ldr	r3, [r7, #4]
 800a816:	605a      	str	r2, [r3, #4]
 800a818:	4b03      	ldr	r3, [pc, #12]	; (800a828 <GUI__RegisterExit+0x20>)
 800a81a:	687a      	ldr	r2, [r7, #4]
 800a81c:	601a      	str	r2, [r3, #0]
 800a81e:	370c      	adds	r7, #12
 800a820:	46bd      	mov	sp, r7
 800a822:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a826:	4770      	bx	lr
 800a828:	20002ba8 	.word	0x20002ba8

0800a82c <GUI__Config>:
 800a82c:	b508      	push	{r3, lr}
 800a82e:	4b08      	ldr	r3, [pc, #32]	; (800a850 <GUI__Config+0x24>)
 800a830:	681a      	ldr	r2, [r3, #0]
 800a832:	b962      	cbnz	r2, 800a84e <GUI__Config+0x22>
 800a834:	2201      	movs	r2, #1
 800a836:	601a      	str	r2, [r3, #0]
 800a838:	f7f5 fe50 	bl	80004dc <GUI_X_Config>
 800a83c:	f7f5 ffce 	bl	80007dc <LCD_X_Config>
 800a840:	4804      	ldr	r0, [pc, #16]	; (800a854 <GUI__Config+0x28>)
 800a842:	4b05      	ldr	r3, [pc, #20]	; (800a858 <GUI__Config+0x2c>)
 800a844:	6003      	str	r3, [r0, #0]
 800a846:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a84a:	f7ff bfdd 	b.w	800a808 <GUI__RegisterExit>
 800a84e:	bd08      	pop	{r3, pc}
 800a850:	20002c28 	.word	0x20002c28
 800a854:	20002bac 	.word	0x20002bac
 800a858:	0800a6a5 	.word	0x0800a6a5

0800a85c <GUI_Init>:
 800a85c:	b590      	push	{r4, r7, lr}
 800a85e:	b083      	sub	sp, #12
 800a860:	af00      	add	r7, sp, #0
 800a862:	4b26      	ldr	r3, [pc, #152]	; (800a8fc <GUI_Init+0xa0>)
 800a864:	4a25      	ldr	r2, [pc, #148]	; (800a8fc <GUI_Init+0xa0>)
 800a866:	6812      	ldr	r2, [r2, #0]
 800a868:	f022 0201 	bic.w	r2, r2, #1
 800a86c:	601a      	str	r2, [r3, #0]
 800a86e:	4b24      	ldr	r3, [pc, #144]	; (800a900 <GUI_Init+0xa4>)
 800a870:	2201      	movs	r2, #1
 800a872:	601a      	str	r2, [r3, #0]
 800a874:	bf00      	nop
 800a876:	4b22      	ldr	r3, [pc, #136]	; (800a900 <GUI_Init+0xa4>)
 800a878:	681b      	ldr	r3, [r3, #0]
 800a87a:	2b00      	cmp	r3, #0
 800a87c:	d1fb      	bne.n	800a876 <GUI_Init+0x1a>
 800a87e:	4b21      	ldr	r3, [pc, #132]	; (800a904 <GUI_Init+0xa8>)
 800a880:	4a21      	ldr	r2, [pc, #132]	; (800a908 <GUI_Init+0xac>)
 800a882:	601a      	str	r2, [r3, #0]
 800a884:	4b1f      	ldr	r3, [pc, #124]	; (800a904 <GUI_Init+0xa8>)
 800a886:	681a      	ldr	r2, [r3, #0]
 800a888:	4b20      	ldr	r3, [pc, #128]	; (800a90c <GUI_Init+0xb0>)
 800a88a:	429a      	cmp	r2, r3
 800a88c:	d000      	beq.n	800a890 <GUI_Init+0x34>
 800a88e:	e7fe      	b.n	800a88e <GUI_Init+0x32>
 800a890:	f7ff ffcc 	bl	800a82c <GUI__Config>
 800a894:	4b1e      	ldr	r3, [pc, #120]	; (800a910 <GUI_Init+0xb4>)
 800a896:	222e      	movs	r2, #46	; 0x2e
 800a898:	701a      	strb	r2, [r3, #0]
 800a89a:	f7f5 fe3b 	bl	8000514 <GUI_X_Init>
 800a89e:	481d      	ldr	r0, [pc, #116]	; (800a914 <GUI_Init+0xb8>)
 800a8a0:	f7ff ff26 	bl	800a6f0 <_InitContext>
 800a8a4:	f7fe f9e4 	bl	8008c70 <emWin_LCD_Init>
 800a8a8:	6078      	str	r0, [r7, #4]
 800a8aa:	f7fd fec5 	bl	8008638 <LCD_GetXSizeDisplay>
 800a8ae:	4603      	mov	r3, r0
 800a8b0:	2b00      	cmp	r3, #0
 800a8b2:	d004      	beq.n	800a8be <GUI_Init+0x62>
 800a8b4:	f7fd fec6 	bl	8008644 <LCD_GetYSizeDisplay>
 800a8b8:	4603      	mov	r3, r0
 800a8ba:	2b00      	cmp	r3, #0
 800a8bc:	d109      	bne.n	800a8d2 <GUI_Init+0x76>
 800a8be:	f7fd fea7 	bl	8008610 <LCD_GetXSizeMax>
 800a8c2:	4604      	mov	r4, r0
 800a8c4:	f7fd fea7 	bl	8008616 <LCD_GetYSizeMax>
 800a8c8:	4603      	mov	r3, r0
 800a8ca:	4620      	mov	r0, r4
 800a8cc:	4619      	mov	r1, r3
 800a8ce:	f7fd fea9 	bl	8008624 <LCD_SetDisplaySize>
 800a8d2:	2000      	movs	r0, #0
 800a8d4:	2100      	movs	r1, #0
 800a8d6:	f000 f9b1 	bl	800ac3c <GUI_SetOrg>
 800a8da:	f7fb fc97 	bl	800620c <WM_Init>
 800a8de:	4b0e      	ldr	r3, [pc, #56]	; (800a918 <GUI_Init+0xbc>)
 800a8e0:	681b      	ldr	r3, [r3, #0]
 800a8e2:	2b00      	cmp	r3, #0
 800a8e4:	d002      	beq.n	800a8ec <GUI_Init+0x90>
 800a8e6:	4b0c      	ldr	r3, [pc, #48]	; (800a918 <GUI_Init+0xbc>)
 800a8e8:	681b      	ldr	r3, [r3, #0]
 800a8ea:	4798      	blx	r3
 800a8ec:	4b0b      	ldr	r3, [pc, #44]	; (800a91c <GUI_Init+0xc0>)
 800a8ee:	2201      	movs	r2, #1
 800a8f0:	701a      	strb	r2, [r3, #0]
 800a8f2:	687b      	ldr	r3, [r7, #4]
 800a8f4:	4618      	mov	r0, r3
 800a8f6:	370c      	adds	r7, #12
 800a8f8:	46bd      	mov	sp, r7
 800a8fa:	bd90      	pop	{r4, r7, pc}
 800a8fc:	e0002000 	.word	0xe0002000
 800a900:	40023008 	.word	0x40023008
 800a904:	40023000 	.word	0x40023000
 800a908:	f407a5c2 	.word	0xf407a5c2
 800a90c:	b5e8b5cd 	.word	0xb5e8b5cd
 800a910:	20002cdc 	.word	0x20002cdc
 800a914:	20002bb8 	.word	0x20002bb8
 800a918:	20002d00 	.word	0x20002d00
 800a91c:	20002d08 	.word	0x20002d08

0800a920 <GUI__GetFontSizeY>:
 800a920:	4b03      	ldr	r3, [pc, #12]	; (800a930 <GUI__GetFontSizeY+0x10>)
 800a922:	681b      	ldr	r3, [r3, #0]
 800a924:	69db      	ldr	r3, [r3, #28]
 800a926:	7e18      	ldrb	r0, [r3, #24]
 800a928:	7edb      	ldrb	r3, [r3, #27]
 800a92a:	4358      	muls	r0, r3
 800a92c:	4770      	bx	lr
 800a92e:	bf00      	nop
 800a930:	200000b8 	.word	0x200000b8

0800a934 <GUI_Long2Len>:
 800a934:	b510      	push	{r4, lr}
 800a936:	ea80 71e0 	eor.w	r1, r0, r0, asr #31
 800a93a:	eba1 71e0 	sub.w	r1, r1, r0, asr #31
 800a93e:	2200      	movs	r2, #0
 800a940:	1c53      	adds	r3, r2, #1
 800a942:	2b0a      	cmp	r3, #10
 800a944:	d006      	beq.n	800a954 <GUI_Long2Len+0x20>
 800a946:	4c06      	ldr	r4, [pc, #24]	; (800a960 <GUI_Long2Len+0x2c>)
 800a948:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 800a94c:	42a1      	cmp	r1, r4
 800a94e:	d301      	bcc.n	800a954 <GUI_Long2Len+0x20>
 800a950:	461a      	mov	r2, r3
 800a952:	e7f5      	b.n	800a940 <GUI_Long2Len+0xc>
 800a954:	2800      	cmp	r0, #0
 800a956:	bfb8      	it	lt
 800a958:	1c93      	addlt	r3, r2, #2
 800a95a:	4618      	mov	r0, r3
 800a95c:	bd10      	pop	{r4, pc}
 800a95e:	bf00      	nop
 800a960:	08012094 	.word	0x08012094

0800a964 <GUI_AddDecShift>:
 800a964:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
 800a968:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a96a:	681c      	ldr	r4, [r3, #0]
 800a96c:	d109      	bne.n	800a982 <GUI_AddDecShift+0x1e>
 800a96e:	1c60      	adds	r0, r4, #1
 800a970:	6018      	str	r0, [r3, #0]
 800a972:	3901      	subs	r1, #1
 800a974:	202d      	movs	r0, #45	; 0x2d
 800a976:	7020      	strb	r0, [r4, #0]
 800a978:	b2c9      	uxtb	r1, r1
 800a97a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a97e:	2601      	movs	r6, #1
 800a980:	e00c      	b.n	800a99c <GUI_AddDecShift+0x38>
 800a982:	2800      	cmp	r0, #0
 800a984:	da06      	bge.n	800a994 <GUI_AddDecShift+0x30>
 800a986:	1c65      	adds	r5, r4, #1
 800a988:	601d      	str	r5, [r3, #0]
 800a98a:	252d      	movs	r5, #45	; 0x2d
 800a98c:	7025      	strb	r5, [r4, #0]
 800a98e:	4240      	negs	r0, r0
 800a990:	2401      	movs	r4, #1
 800a992:	e000      	b.n	800a996 <GUI_AddDecShift+0x32>
 800a994:	2400      	movs	r4, #0
 800a996:	1b09      	subs	r1, r1, r4
 800a998:	b2c9      	uxtb	r1, r1
 800a99a:	2600      	movs	r6, #0
 800a99c:	b30a      	cbz	r2, 800a9e2 <GUI_AddDecShift+0x7e>
 800a99e:	3901      	subs	r1, #1
 800a9a0:	b2c9      	uxtb	r1, r1
 800a9a2:	e01e      	b.n	800a9e2 <GUI_AddDecShift+0x7e>
 800a9a4:	1e4d      	subs	r5, r1, #1
 800a9a6:	4291      	cmp	r1, r2
 800a9a8:	b2ed      	uxtb	r5, r5
 800a9aa:	d105      	bne.n	800a9b8 <GUI_AddDecShift+0x54>
 800a9ac:	681c      	ldr	r4, [r3, #0]
 800a9ae:	1c67      	adds	r7, r4, #1
 800a9b0:	601f      	str	r7, [r3, #0]
 800a9b2:	4f11      	ldr	r7, [pc, #68]	; (800a9f8 <GUI_AddDecShift+0x94>)
 800a9b4:	783f      	ldrb	r7, [r7, #0]
 800a9b6:	7027      	strb	r7, [r4, #0]
 800a9b8:	4c10      	ldr	r4, [pc, #64]	; (800a9fc <GUI_AddDecShift+0x98>)
 800a9ba:	f854 7025 	ldr.w	r7, [r4, r5, lsl #2]
 800a9be:	fb90 f4f7 	sdiv	r4, r0, r7
 800a9c2:	b2e4      	uxtb	r4, r4
 800a9c4:	2c0a      	cmp	r4, #10
 800a9c6:	d80e      	bhi.n	800a9e6 <GUI_AddDecShift+0x82>
 800a9c8:	fb07 0014 	mls	r0, r7, r4, r0
 800a9cc:	b17d      	cbz	r5, 800a9ee <GUI_AddDecShift+0x8a>
 800a9ce:	2c0a      	cmp	r4, #10
 800a9d0:	bf18      	it	ne
 800a9d2:	4629      	movne	r1, r5
 800a9d4:	681d      	ldr	r5, [r3, #0]
 800a9d6:	bf08      	it	eq
 800a9d8:	2401      	moveq	r4, #1
 800a9da:	1c6f      	adds	r7, r5, #1
 800a9dc:	3430      	adds	r4, #48	; 0x30
 800a9de:	601f      	str	r7, [r3, #0]
 800a9e0:	702c      	strb	r4, [r5, #0]
 800a9e2:	2900      	cmp	r1, #0
 800a9e4:	d1de      	bne.n	800a9a4 <GUI_AddDecShift+0x40>
 800a9e6:	681b      	ldr	r3, [r3, #0]
 800a9e8:	2200      	movs	r2, #0
 800a9ea:	701a      	strb	r2, [r3, #0]
 800a9ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a9ee:	2e00      	cmp	r6, #0
 800a9f0:	d0ed      	beq.n	800a9ce <GUI_AddDecShift+0x6a>
 800a9f2:	3401      	adds	r4, #1
 800a9f4:	b2e4      	uxtb	r4, r4
 800a9f6:	e7ea      	b.n	800a9ce <GUI_AddDecShift+0x6a>
 800a9f8:	20002cdc 	.word	0x20002cdc
 800a9fc:	08012094 	.word	0x08012094

0800aa00 <GUI_CalcColorDist>:
 800aa00:	b2cb      	uxtb	r3, r1
 800aa02:	b2c2      	uxtb	r2, r0
 800aa04:	1ad2      	subs	r2, r2, r3
 800aa06:	b292      	uxth	r2, r2
 800aa08:	b293      	uxth	r3, r2
 800aa0a:	b530      	push	{r4, r5, lr}
 800aa0c:	041c      	lsls	r4, r3, #16
 800aa0e:	bf48      	it	mi
 800aa10:	4253      	negmi	r3, r2
 800aa12:	f3c1 2507 	ubfx	r5, r1, #8, #8
 800aa16:	f3c0 2207 	ubfx	r2, r0, #8, #8
 800aa1a:	ebc5 0202 	rsb	r2, r5, r2
 800aa1e:	bf48      	it	mi
 800aa20:	b29b      	uxthmi	r3, r3
 800aa22:	b292      	uxth	r2, r2
 800aa24:	0c09      	lsrs	r1, r1, #16
 800aa26:	fb13 f403 	smulbb	r4, r3, r3
 800aa2a:	ebc1 4110 	rsb	r1, r1, r0, lsr #16
 800aa2e:	b293      	uxth	r3, r2
 800aa30:	041d      	lsls	r5, r3, #16
 800aa32:	b289      	uxth	r1, r1
 800aa34:	b288      	uxth	r0, r1
 800aa36:	bf44      	itt	mi
 800aa38:	4253      	negmi	r3, r2
 800aa3a:	b29b      	uxthmi	r3, r3
 800aa3c:	0402      	lsls	r2, r0, #16
 800aa3e:	bf48      	it	mi
 800aa40:	4248      	negmi	r0, r1
 800aa42:	fb13 4303 	smlabb	r3, r3, r3, r4
 800aa46:	bf48      	it	mi
 800aa48:	b280      	uxthmi	r0, r0
 800aa4a:	fb00 3000 	mla	r0, r0, r0, r3
 800aa4e:	bd30      	pop	{r4, r5, pc}

0800aa50 <GUI_GetClientRect>:
 800aa50:	b108      	cbz	r0, 800aa56 <GUI_GetClientRect+0x6>
 800aa52:	f7f9 be8f 	b.w	8004774 <WM_GetClientRect>
 800aa56:	4770      	bx	lr

0800aa58 <GUI_GetBkColor>:
 800aa58:	b508      	push	{r3, lr}
 800aa5a:	f003 fe69 	bl	800e730 <LCD_GetBkColorIndex>
 800aa5e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800aa62:	f7fe b969 	b.w	8008d38 <LCD_Index2Color>

0800aa66 <GUI_GetColor>:
 800aa66:	b508      	push	{r3, lr}
 800aa68:	f003 fe6a 	bl	800e740 <LCD_GetColorIndex>
 800aa6c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800aa70:	f7fe b962 	b.w	8008d38 <LCD_Index2Color>

0800aa74 <GUI_GetFontSizeY>:
 800aa74:	f7ff bf54 	b.w	800a920 <GUI__GetFontSizeY>

0800aa78 <GUI_GetLineStyle>:
 800aa78:	4b01      	ldr	r3, [pc, #4]	; (800aa80 <GUI_GetLineStyle+0x8>)
 800aa7a:	681b      	ldr	r3, [r3, #0]
 800aa7c:	7e98      	ldrb	r0, [r3, #26]
 800aa7e:	4770      	bx	lr
 800aa80:	200000b8 	.word	0x200000b8

0800aa84 <GUI_GetOrg>:
 800aa84:	4b04      	ldr	r3, [pc, #16]	; (800aa98 <GUI_GetOrg+0x14>)
 800aa86:	f9b3 3000 	ldrsh.w	r3, [r3]
 800aa8a:	6003      	str	r3, [r0, #0]
 800aa8c:	4b03      	ldr	r3, [pc, #12]	; (800aa9c <GUI_GetOrg+0x18>)
 800aa8e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800aa92:	600b      	str	r3, [r1, #0]
 800aa94:	4770      	bx	lr
 800aa96:	bf00      	nop
 800aa98:	20002cfc 	.word	0x20002cfc
 800aa9c:	20002cec 	.word	0x20002cec

0800aaa0 <GUI_GetYSizeOfFont>:
 800aaa0:	7e02      	ldrb	r2, [r0, #24]
 800aaa2:	7ec0      	ldrb	r0, [r0, #27]
 800aaa4:	4350      	muls	r0, r2
 800aaa6:	4770      	bx	lr

0800aaa8 <GUI_MergeRect>:
 800aaa8:	b510      	push	{r4, lr}
 800aaaa:	b338      	cbz	r0, 800aafc <GUI_MergeRect+0x54>
 800aaac:	b309      	cbz	r1, 800aaf2 <GUI_MergeRect+0x4a>
 800aaae:	b30a      	cbz	r2, 800aaf4 <GUI_MergeRect+0x4c>
 800aab0:	f9b1 4000 	ldrsh.w	r4, [r1]
 800aab4:	f9b2 3000 	ldrsh.w	r3, [r2]
 800aab8:	429c      	cmp	r4, r3
 800aaba:	bfb8      	it	lt
 800aabc:	4623      	movlt	r3, r4
 800aabe:	8003      	strh	r3, [r0, #0]
 800aac0:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800aac4:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800aac8:	429c      	cmp	r4, r3
 800aaca:	bfb8      	it	lt
 800aacc:	4623      	movlt	r3, r4
 800aace:	8043      	strh	r3, [r0, #2]
 800aad0:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 800aad4:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800aad8:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800aadc:	429c      	cmp	r4, r3
 800aade:	bfa8      	it	ge
 800aae0:	4623      	movge	r3, r4
 800aae2:	8083      	strh	r3, [r0, #4]
 800aae4:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 800aae8:	4299      	cmp	r1, r3
 800aaea:	bfa8      	it	ge
 800aaec:	460b      	movge	r3, r1
 800aaee:	80c3      	strh	r3, [r0, #6]
 800aaf0:	bd10      	pop	{r4, pc}
 800aaf2:	4611      	mov	r1, r2
 800aaf4:	680b      	ldr	r3, [r1, #0]
 800aaf6:	6003      	str	r3, [r0, #0]
 800aaf8:	684b      	ldr	r3, [r1, #4]
 800aafa:	6043      	str	r3, [r0, #4]
 800aafc:	bd10      	pop	{r4, pc}

0800aafe <GUI_MoveRect>:
 800aafe:	b168      	cbz	r0, 800ab1c <GUI_MoveRect+0x1e>
 800ab00:	8803      	ldrh	r3, [r0, #0]
 800ab02:	b289      	uxth	r1, r1
 800ab04:	440b      	add	r3, r1
 800ab06:	8003      	strh	r3, [r0, #0]
 800ab08:	8883      	ldrh	r3, [r0, #4]
 800ab0a:	4419      	add	r1, r3
 800ab0c:	8843      	ldrh	r3, [r0, #2]
 800ab0e:	8081      	strh	r1, [r0, #4]
 800ab10:	b292      	uxth	r2, r2
 800ab12:	4413      	add	r3, r2
 800ab14:	8043      	strh	r3, [r0, #2]
 800ab16:	88c3      	ldrh	r3, [r0, #6]
 800ab18:	441a      	add	r2, r3
 800ab1a:	80c2      	strh	r2, [r0, #6]
 800ab1c:	4770      	bx	lr
	...

0800ab20 <GUI_Exec1>:
 800ab20:	4b0c      	ldr	r3, [pc, #48]	; (800ab54 <GUI_Exec1+0x34>)
 800ab22:	b510      	push	{r4, lr}
 800ab24:	681c      	ldr	r4, [r3, #0]
 800ab26:	b11c      	cbz	r4, 800ab30 <GUI_Exec1+0x10>
 800ab28:	47a0      	blx	r4
 800ab2a:	1c04      	adds	r4, r0, #0
 800ab2c:	bf18      	it	ne
 800ab2e:	2401      	movne	r4, #1
 800ab30:	f7fb fac6 	bl	80060c0 <WM_Exec>
 800ab34:	4b08      	ldr	r3, [pc, #32]	; (800ab58 <GUI_Exec1+0x38>)
 800ab36:	681b      	ldr	r3, [r3, #0]
 800ab38:	2800      	cmp	r0, #0
 800ab3a:	bf18      	it	ne
 800ab3c:	2401      	movne	r4, #1
 800ab3e:	b11b      	cbz	r3, 800ab48 <GUI_Exec1+0x28>
 800ab40:	4798      	blx	r3
 800ab42:	2800      	cmp	r0, #0
 800ab44:	bf18      	it	ne
 800ab46:	2401      	movne	r4, #1
 800ab48:	4b04      	ldr	r3, [pc, #16]	; (800ab5c <GUI_Exec1+0x3c>)
 800ab4a:	681b      	ldr	r3, [r3, #0]
 800ab4c:	b103      	cbz	r3, 800ab50 <GUI_Exec1+0x30>
 800ab4e:	4798      	blx	r3
 800ab50:	4620      	mov	r0, r4
 800ab52:	bd10      	pop	{r4, pc}
 800ab54:	20002cf8 	.word	0x20002cf8
 800ab58:	20002d24 	.word	0x20002d24
 800ab5c:	20002d1c 	.word	0x20002d1c

0800ab60 <GUI_Exec>:
 800ab60:	b510      	push	{r4, lr}
 800ab62:	2400      	movs	r4, #0
 800ab64:	f7ff ffdc 	bl	800ab20 <GUI_Exec1>
 800ab68:	b108      	cbz	r0, 800ab6e <GUI_Exec+0xe>
 800ab6a:	2401      	movs	r4, #1
 800ab6c:	e7fa      	b.n	800ab64 <GUI_Exec+0x4>
 800ab6e:	4620      	mov	r0, r4
 800ab70:	bd10      	pop	{r4, pc}
	...

0800ab74 <GUI_GotoXY>:
 800ab74:	4b02      	ldr	r3, [pc, #8]	; (800ab80 <GUI_GotoXY+0xc>)
 800ab76:	681b      	ldr	r3, [r3, #0]
 800ab78:	8458      	strh	r0, [r3, #34]	; 0x22
 800ab7a:	8499      	strh	r1, [r3, #36]	; 0x24
 800ab7c:	2000      	movs	r0, #0
 800ab7e:	4770      	bx	lr
 800ab80:	200000b8 	.word	0x200000b8

0800ab84 <GUI_SetPenSize>:
 800ab84:	4b02      	ldr	r3, [pc, #8]	; (800ab90 <GUI_SetPenSize+0xc>)
 800ab86:	681b      	ldr	r3, [r3, #0]
 800ab88:	7e1a      	ldrb	r2, [r3, #24]
 800ab8a:	7618      	strb	r0, [r3, #24]
 800ab8c:	4610      	mov	r0, r2
 800ab8e:	4770      	bx	lr
 800ab90:	200000b8 	.word	0x200000b8

0800ab94 <GUI_RectsIntersect>:
 800ab94:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ab98:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800ab9c:	429a      	cmp	r2, r3
 800ab9e:	dc14      	bgt.n	800abca <GUI_RectsIntersect+0x36>
 800aba0:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800aba4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800aba8:	429a      	cmp	r2, r3
 800abaa:	dc0e      	bgt.n	800abca <GUI_RectsIntersect+0x36>
 800abac:	f9b0 2000 	ldrsh.w	r2, [r0]
 800abb0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800abb4:	429a      	cmp	r2, r3
 800abb6:	dc08      	bgt.n	800abca <GUI_RectsIntersect+0x36>
 800abb8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800abbc:	f9b1 2000 	ldrsh.w	r2, [r1]
 800abc0:	429a      	cmp	r2, r3
 800abc2:	bfcc      	ite	gt
 800abc4:	2000      	movgt	r0, #0
 800abc6:	2001      	movle	r0, #1
 800abc8:	4770      	bx	lr
 800abca:	2000      	movs	r0, #0
 800abcc:	4770      	bx	lr
	...

0800abd0 <GUI_SaveContext_W>:
 800abd0:	b508      	push	{r3, lr}
 800abd2:	4b03      	ldr	r3, [pc, #12]	; (800abe0 <GUI_SaveContext_W+0x10>)
 800abd4:	2270      	movs	r2, #112	; 0x70
 800abd6:	6819      	ldr	r1, [r3, #0]
 800abd8:	f005 f890 	bl	800fcfc <memcpy>
 800abdc:	bd08      	pop	{r3, pc}
 800abde:	bf00      	nop
 800abe0:	200000b8 	.word	0x200000b8

0800abe4 <GUI_RestoreContext>:
 800abe4:	b508      	push	{r3, lr}
 800abe6:	4b03      	ldr	r3, [pc, #12]	; (800abf4 <GUI_RestoreContext+0x10>)
 800abe8:	4601      	mov	r1, r0
 800abea:	2270      	movs	r2, #112	; 0x70
 800abec:	6818      	ldr	r0, [r3, #0]
 800abee:	f005 f885 	bl	800fcfc <memcpy>
 800abf2:	bd08      	pop	{r3, pc}
 800abf4:	200000b8 	.word	0x200000b8

0800abf8 <GUI_SelectLCD>:
 800abf8:	b508      	push	{r3, lr}
 800abfa:	f003 fc55 	bl	800e4a8 <LCD_SelectLCD>
 800abfe:	f7fd fc1d 	bl	800843c <LCD_UpdateColorIndices>
 800ac02:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ac06:	f7fb ba97 	b.w	8006138 <WM_Activate>

0800ac0a <GUI_SetBkColor>:
 800ac0a:	f7fe b8dd 	b.w	8008dc8 <LCD_SetBkColor>

0800ac0e <GUI_SetColor>:
 800ac0e:	f7fe b8e3 	b.w	8008dd8 <LCD_SetColor>

0800ac12 <GUI_SetDrawMode>:
 800ac12:	f7fd bd87 	b.w	8008724 <LCD_SetDrawMode>
	...

0800ac18 <GUI_SetFont>:
 800ac18:	4b03      	ldr	r3, [pc, #12]	; (800ac28 <GUI_SetFont+0x10>)
 800ac1a:	681b      	ldr	r3, [r3, #0]
 800ac1c:	69d9      	ldr	r1, [r3, #28]
 800ac1e:	b100      	cbz	r0, 800ac22 <GUI_SetFont+0xa>
 800ac20:	61d8      	str	r0, [r3, #28]
 800ac22:	4608      	mov	r0, r1
 800ac24:	4770      	bx	lr
 800ac26:	bf00      	nop
 800ac28:	200000b8 	.word	0x200000b8

0800ac2c <GUI_SetLineStyle>:
 800ac2c:	4b02      	ldr	r3, [pc, #8]	; (800ac38 <GUI_SetLineStyle+0xc>)
 800ac2e:	681b      	ldr	r3, [r3, #0]
 800ac30:	7e9a      	ldrb	r2, [r3, #26]
 800ac32:	7698      	strb	r0, [r3, #26]
 800ac34:	4610      	mov	r0, r2
 800ac36:	4770      	bx	lr
 800ac38:	200000b8 	.word	0x200000b8

0800ac3c <GUI_SetOrg>:
 800ac3c:	460a      	mov	r2, r1
 800ac3e:	4908      	ldr	r1, [pc, #32]	; (800ac60 <GUI_SetOrg+0x24>)
 800ac40:	b510      	push	{r4, lr}
 800ac42:	8008      	strh	r0, [r1, #0]
 800ac44:	4907      	ldr	r1, [pc, #28]	; (800ac64 <GUI_SetOrg+0x28>)
 800ac46:	800a      	strh	r2, [r1, #0]
 800ac48:	4907      	ldr	r1, [pc, #28]	; (800ac68 <GUI_SetOrg+0x2c>)
 800ac4a:	6809      	ldr	r1, [r1, #0]
 800ac4c:	4603      	mov	r3, r0
 800ac4e:	7c48      	ldrb	r0, [r1, #17]
 800ac50:	4906      	ldr	r1, [pc, #24]	; (800ac6c <GUI_SetOrg+0x30>)
 800ac52:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800ac56:	68c1      	ldr	r1, [r0, #12]
 800ac58:	6a0c      	ldr	r4, [r1, #32]
 800ac5a:	4619      	mov	r1, r3
 800ac5c:	47a0      	blx	r4
 800ac5e:	bd10      	pop	{r4, pc}
 800ac60:	20002cfc 	.word	0x20002cfc
 800ac64:	20002cec 	.word	0x20002cec
 800ac68:	200000b8 	.word	0x200000b8
 800ac6c:	20002d28 	.word	0x20002d28

0800ac70 <GUI_SetTextAlign>:
 800ac70:	4b03      	ldr	r3, [pc, #12]	; (800ac80 <GUI_SetTextAlign+0x10>)
 800ac72:	681b      	ldr	r3, [r3, #0]
 800ac74:	f9b3 202c 	ldrsh.w	r2, [r3, #44]	; 0x2c
 800ac78:	8598      	strh	r0, [r3, #44]	; 0x2c
 800ac7a:	4610      	mov	r0, r2
 800ac7c:	4770      	bx	lr
 800ac7e:	bf00      	nop
 800ac80:	200000b8 	.word	0x200000b8

0800ac84 <GUI_SetTextMode>:
 800ac84:	4b03      	ldr	r3, [pc, #12]	; (800ac94 <GUI_SetTextMode+0x10>)
 800ac86:	681b      	ldr	r3, [r3, #0]
 800ac88:	f9b3 202a 	ldrsh.w	r2, [r3, #42]	; 0x2a
 800ac8c:	8558      	strh	r0, [r3, #42]	; 0x2a
 800ac8e:	4610      	mov	r0, r2
 800ac90:	4770      	bx	lr
 800ac92:	bf00      	nop
 800ac94:	200000b8 	.word	0x200000b8

0800ac98 <GL_SetDefault>:
 800ac98:	b508      	push	{r3, lr}
 800ac9a:	4b0e      	ldr	r3, [pc, #56]	; (800acd4 <GL_SetDefault+0x3c>)
 800ac9c:	6818      	ldr	r0, [r3, #0]
 800ac9e:	f7fe f893 	bl	8008dc8 <LCD_SetBkColor>
 800aca2:	4b0d      	ldr	r3, [pc, #52]	; (800acd8 <GL_SetDefault+0x40>)
 800aca4:	6818      	ldr	r0, [r3, #0]
 800aca6:	f7fe f897 	bl	8008dd8 <LCD_SetColor>
 800acaa:	2001      	movs	r0, #1
 800acac:	f7ff ff6a 	bl	800ab84 <GUI_SetPenSize>
 800acb0:	2000      	movs	r0, #0
 800acb2:	f7ff ffdd 	bl	800ac70 <GUI_SetTextAlign>
 800acb6:	2000      	movs	r0, #0
 800acb8:	f7ff ffe4 	bl	800ac84 <GUI_SetTextMode>
 800acbc:	2000      	movs	r0, #0
 800acbe:	f7ff ffa8 	bl	800ac12 <GUI_SetDrawMode>
 800acc2:	4b06      	ldr	r3, [pc, #24]	; (800acdc <GL_SetDefault+0x44>)
 800acc4:	6818      	ldr	r0, [r3, #0]
 800acc6:	f7ff ffa7 	bl	800ac18 <GUI_SetFont>
 800acca:	2000      	movs	r0, #0
 800accc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800acd0:	f7ff bfac 	b.w	800ac2c <GUI_SetLineStyle>
 800acd4:	20002bb4 	.word	0x20002bb4
 800acd8:	200000c0 	.word	0x200000c0
 800acdc:	200000bc 	.word	0x200000bc

0800ace0 <GL_FillCircle>:
 800ace0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ace4:	f240 29c3 	movw	r9, #707	; 0x2c3
 800ace8:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 800ada0 <GL_FillCircle+0xc0>
 800acec:	fb09 f902 	mul.w	r9, r9, r2
 800acf0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800acf4:	fb99 f9f3 	sdiv	r9, r9, r3
 800acf8:	f8d8 3000 	ldr.w	r3, [r8]
 800acfc:	f04f 0b02 	mov.w	fp, #2
 800ad00:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ad02:	4606      	mov	r6, r0
 800ad04:	fb92 fbfb 	sdiv	fp, r2, fp
 800ad08:	1a80      	subs	r0, r0, r2
 800ad0a:	4614      	mov	r4, r2
 800ad0c:	fb02 bb02 	mla	fp, r2, r2, fp
 800ad10:	681b      	ldr	r3, [r3, #0]
 800ad12:	18b2      	adds	r2, r6, r2
 800ad14:	460f      	mov	r7, r1
 800ad16:	4798      	blx	r3
 800ad18:	f109 0901 	add.w	r9, r9, #1
 800ad1c:	2501      	movs	r5, #1
 800ad1e:	454d      	cmp	r5, r9
 800ad20:	dc3a      	bgt.n	800ad98 <GL_FillCircle+0xb8>
 800ad22:	fb04 f304 	mul.w	r3, r4, r4
 800ad26:	fb05 3305 	mla	r3, r5, r5, r3
 800ad2a:	455b      	cmp	r3, fp
 800ad2c:	dd1b      	ble.n	800ad66 <GL_FillCircle+0x86>
 800ad2e:	454c      	cmp	r4, r9
 800ad30:	dd18      	ble.n	800ad64 <GL_FillCircle+0x84>
 800ad32:	f8d8 2000 	ldr.w	r2, [r8]
 800ad36:	1c73      	adds	r3, r6, #1
 800ad38:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800ad3a:	f106 3aff 	add.w	sl, r6, #4294967295
 800ad3e:	1b5b      	subs	r3, r3, r5
 800ad40:	44aa      	add	sl, r5
 800ad42:	f8d2 c000 	ldr.w	ip, [r2]
 800ad46:	9301      	str	r3, [sp, #4]
 800ad48:	4618      	mov	r0, r3
 800ad4a:	1939      	adds	r1, r7, r4
 800ad4c:	4652      	mov	r2, sl
 800ad4e:	47e0      	blx	ip
 800ad50:	f8d8 2000 	ldr.w	r2, [r8]
 800ad54:	9b01      	ldr	r3, [sp, #4]
 800ad56:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800ad58:	4618      	mov	r0, r3
 800ad5a:	f8d2 c000 	ldr.w	ip, [r2]
 800ad5e:	1b39      	subs	r1, r7, r4
 800ad60:	4652      	mov	r2, sl
 800ad62:	47e0      	blx	ip
 800ad64:	3c01      	subs	r4, #1
 800ad66:	f8d8 2000 	ldr.w	r2, [r8]
 800ad6a:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800ad6c:	1b33      	subs	r3, r6, r4
 800ad6e:	eb06 0a04 	add.w	sl, r6, r4
 800ad72:	f8d2 c000 	ldr.w	ip, [r2]
 800ad76:	9301      	str	r3, [sp, #4]
 800ad78:	4618      	mov	r0, r3
 800ad7a:	19e9      	adds	r1, r5, r7
 800ad7c:	4652      	mov	r2, sl
 800ad7e:	47e0      	blx	ip
 800ad80:	f8d8 2000 	ldr.w	r2, [r8]
 800ad84:	9b01      	ldr	r3, [sp, #4]
 800ad86:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800ad88:	1b79      	subs	r1, r7, r5
 800ad8a:	f8d2 c000 	ldr.w	ip, [r2]
 800ad8e:	4618      	mov	r0, r3
 800ad90:	4652      	mov	r2, sl
 800ad92:	47e0      	blx	ip
 800ad94:	3501      	adds	r5, #1
 800ad96:	e7c2      	b.n	800ad1e <GL_FillCircle+0x3e>
 800ad98:	b003      	add	sp, #12
 800ad9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad9e:	bf00      	nop
 800ada0:	200000b8 	.word	0x200000b8

0800ada4 <GUIPROP__FindChar>:
 800ada4:	b138      	cbz	r0, 800adb6 <GUIPROP__FindChar+0x12>
 800ada6:	8803      	ldrh	r3, [r0, #0]
 800ada8:	428b      	cmp	r3, r1
 800adaa:	d802      	bhi.n	800adb2 <GUIPROP__FindChar+0xe>
 800adac:	8843      	ldrh	r3, [r0, #2]
 800adae:	428b      	cmp	r3, r1
 800adb0:	d201      	bcs.n	800adb6 <GUIPROP__FindChar+0x12>
 800adb2:	6880      	ldr	r0, [r0, #8]
 800adb4:	e7f6      	b.n	800ada4 <GUIPROP__FindChar>
 800adb6:	4770      	bx	lr

0800adb8 <GUIPROP_DispChar>:
 800adb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800adbc:	4c38      	ldr	r4, [pc, #224]	; (800aea0 <GUIPROP_DispChar+0xe8>)
 800adbe:	6823      	ldr	r3, [r4, #0]
 800adc0:	f9b3 902a 	ldrsh.w	r9, [r3, #42]	; 0x2a
 800adc4:	69db      	ldr	r3, [r3, #28]
 800adc6:	4605      	mov	r5, r0
 800adc8:	b089      	sub	sp, #36	; 0x24
 800adca:	69d8      	ldr	r0, [r3, #28]
 800adcc:	4629      	mov	r1, r5
 800adce:	f7ff ffe9 	bl	800ada4 <GUIPROP__FindChar>
 800add2:	2800      	cmp	r0, #0
 800add4:	d061      	beq.n	800ae9a <GUIPROP_DispChar+0xe2>
 800add6:	f8b0 8000 	ldrh.w	r8, [r0]
 800adda:	6847      	ldr	r7, [r0, #4]
 800addc:	ebc8 0805 	rsb	r8, r8, r5
 800ade0:	eb07 06c8 	add.w	r6, r7, r8, lsl #3
 800ade4:	4648      	mov	r0, r9
 800ade6:	f896 b002 	ldrb.w	fp, [r6, #2]
 800adea:	f7fd fc9b 	bl	8008724 <LCD_SetDrawMode>
 800adee:	6825      	ldr	r5, [r4, #0]
 800adf0:	f817 2038 	ldrb.w	r2, [r7, r8, lsl #3]
 800adf4:	f8d5 e01c 	ldr.w	lr, [r5, #28]
 800adf8:	f9b5 1024 	ldrsh.w	r1, [r5, #36]	; 0x24
 800adfc:	f89e c01a 	ldrb.w	ip, [lr, #26]
 800ae00:	f89e 3018 	ldrb.w	r3, [lr, #24]
 800ae04:	9306      	str	r3, [sp, #24]
 800ae06:	4682      	mov	sl, r0
 800ae08:	f9b5 0022 	ldrsh.w	r0, [r5, #34]	; 0x22
 800ae0c:	f8cd c000 	str.w	ip, [sp]
 800ae10:	f89e e01b 	ldrb.w	lr, [lr, #27]
 800ae14:	f8cd e004 	str.w	lr, [sp, #4]
 800ae18:	f04f 0e01 	mov.w	lr, #1
 800ae1c:	f8cd b00c 	str.w	fp, [sp, #12]
 800ae20:	f8cd e008 	str.w	lr, [sp, #8]
 800ae24:	6873      	ldr	r3, [r6, #4]
 800ae26:	9304      	str	r3, [sp, #16]
 800ae28:	6bad      	ldr	r5, [r5, #56]	; 0x38
 800ae2a:	9b06      	ldr	r3, [sp, #24]
 800ae2c:	9505      	str	r5, [sp, #20]
 800ae2e:	f7fd fe03 	bl	8008a38 <LCD_DrawBitmap>
 800ae32:	6823      	ldr	r3, [r4, #0]
 800ae34:	69da      	ldr	r2, [r3, #28]
 800ae36:	f892 b019 	ldrb.w	fp, [r2, #25]
 800ae3a:	7e11      	ldrb	r1, [r2, #24]
 800ae3c:	458b      	cmp	fp, r1
 800ae3e:	d920      	bls.n	800ae82 <GUIPROP_DispChar+0xca>
 800ae40:	f1b9 0f02 	cmp.w	r9, #2
 800ae44:	7ed5      	ldrb	r5, [r2, #27]
 800ae46:	d01c      	beq.n	800ae82 <GUIPROP_DispChar+0xca>
 800ae48:	9107      	str	r1, [sp, #28]
 800ae4a:	f7ff fe0c 	bl	800aa66 <GUI_GetColor>
 800ae4e:	4681      	mov	r9, r0
 800ae50:	f7ff fe02 	bl	800aa58 <GUI_GetBkColor>
 800ae54:	f7ff fedb 	bl	800ac0e <GUI_SetColor>
 800ae58:	6824      	ldr	r4, [r4, #0]
 800ae5a:	f817 7038 	ldrb.w	r7, [r7, r8, lsl #3]
 800ae5e:	69e2      	ldr	r2, [r4, #28]
 800ae60:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
 800ae64:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800ae68:	7ed2      	ldrb	r2, [r2, #27]
 800ae6a:	9907      	ldr	r1, [sp, #28]
 800ae6c:	fb07 0202 	mla	r2, r7, r2, r0
 800ae70:	fb01 3105 	mla	r1, r1, r5, r3
 800ae74:	fb0b 3305 	mla	r3, fp, r5, r3
 800ae78:	f7fd fcd6 	bl	8008828 <LCD_FillRect>
 800ae7c:	4648      	mov	r0, r9
 800ae7e:	f7ff fec6 	bl	800ac0e <GUI_SetColor>
 800ae82:	4650      	mov	r0, sl
 800ae84:	f7fd fc4e 	bl	8008724 <LCD_SetDrawMode>
 800ae88:	4b05      	ldr	r3, [pc, #20]	; (800aea0 <GUIPROP_DispChar+0xe8>)
 800ae8a:	681b      	ldr	r3, [r3, #0]
 800ae8c:	69da      	ldr	r2, [r3, #28]
 800ae8e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800ae90:	7e90      	ldrb	r0, [r2, #26]
 800ae92:	7872      	ldrb	r2, [r6, #1]
 800ae94:	fb00 1202 	mla	r2, r0, r2, r1
 800ae98:	845a      	strh	r2, [r3, #34]	; 0x22
 800ae9a:	b009      	add	sp, #36	; 0x24
 800ae9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aea0:	200000b8 	.word	0x200000b8

0800aea4 <GUIPROP_GetCharDistX>:
 800aea4:	4b0d      	ldr	r3, [pc, #52]	; (800aedc <GUIPROP_GetCharDistX+0x38>)
 800aea6:	b570      	push	{r4, r5, r6, lr}
 800aea8:	681b      	ldr	r3, [r3, #0]
 800aeaa:	69dd      	ldr	r5, [r3, #28]
 800aeac:	4606      	mov	r6, r0
 800aeae:	460c      	mov	r4, r1
 800aeb0:	69e8      	ldr	r0, [r5, #28]
 800aeb2:	4631      	mov	r1, r6
 800aeb4:	f7ff ff76 	bl	800ada4 <GUIPROP__FindChar>
 800aeb8:	b170      	cbz	r0, 800aed8 <GUIPROP_GetCharDistX+0x34>
 800aeba:	8803      	ldrh	r3, [r0, #0]
 800aebc:	6842      	ldr	r2, [r0, #4]
 800aebe:	1af6      	subs	r6, r6, r3
 800aec0:	eb02 03c6 	add.w	r3, r2, r6, lsl #3
 800aec4:	7858      	ldrb	r0, [r3, #1]
 800aec6:	7eab      	ldrb	r3, [r5, #26]
 800aec8:	fb10 f003 	smulbb	r0, r0, r3
 800aecc:	b124      	cbz	r4, 800aed8 <GUIPROP_GetCharDistX+0x34>
 800aece:	f812 2036 	ldrb.w	r2, [r2, r6, lsl #3]
 800aed2:	fb12 f303 	smulbb	r3, r2, r3
 800aed6:	6023      	str	r3, [r4, #0]
 800aed8:	bd70      	pop	{r4, r5, r6, pc}
 800aeda:	bf00      	nop
 800aedc:	200000b8 	.word	0x200000b8

0800aee0 <GUIPROP_GetFontInfo>:
 800aee0:	2301      	movs	r3, #1
 800aee2:	800b      	strh	r3, [r1, #0]
 800aee4:	4770      	bx	lr

0800aee6 <GUIPROP_IsInFont>:
 800aee6:	b508      	push	{r3, lr}
 800aee8:	69c0      	ldr	r0, [r0, #28]
 800aeea:	f7ff ff5b 	bl	800ada4 <GUIPROP__FindChar>
 800aeee:	3000      	adds	r0, #0
 800aef0:	bf18      	it	ne
 800aef2:	2001      	movne	r0, #1
 800aef4:	bd08      	pop	{r3, pc}
	...

0800aef8 <GUIMONO_DispChar>:
 800aef8:	4b52      	ldr	r3, [pc, #328]	; (800b044 <GUIMONO_DispChar+0x14c>)
 800aefa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aefe:	681b      	ldr	r3, [r3, #0]
 800af00:	69d9      	ldr	r1, [r3, #28]
 800af02:	8c5f      	ldrh	r7, [r3, #34]	; 0x22
 800af04:	69cc      	ldr	r4, [r1, #28]
 800af06:	8c9d      	ldrh	r5, [r3, #36]	; 0x24
 800af08:	89a2      	ldrh	r2, [r4, #12]
 800af0a:	4290      	cmp	r0, r2
 800af0c:	b08b      	sub	sp, #44	; 0x2c
 800af0e:	d308      	bcc.n	800af22 <GUIMONO_DispChar+0x2a>
 800af10:	89e6      	ldrh	r6, [r4, #14]
 800af12:	4286      	cmp	r6, r0
 800af14:	d305      	bcc.n	800af22 <GUIMONO_DispChar+0x2a>
 800af16:	f8d4 9000 	ldr.w	r9, [r4]
 800af1a:	1a82      	subs	r2, r0, r2
 800af1c:	f04f 3bff 	mov.w	fp, #4294967295
 800af20:	e015      	b.n	800af4e <GUIMONO_DispChar+0x56>
 800af22:	68a2      	ldr	r2, [r4, #8]
 800af24:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800af28:	2a00      	cmp	r2, #0
 800af2a:	f000 8081 	beq.w	800b030 <GUIMONO_DispChar+0x138>
 800af2e:	8816      	ldrh	r6, [r2, #0]
 800af30:	42b0      	cmp	r0, r6
 800af32:	d37d      	bcc.n	800b030 <GUIMONO_DispChar+0x138>
 800af34:	f8b2 c002 	ldrh.w	ip, [r2, #2]
 800af38:	4584      	cmp	ip, r0
 800af3a:	d379      	bcc.n	800b030 <GUIMONO_DispChar+0x138>
 800af3c:	6852      	ldr	r2, [r2, #4]
 800af3e:	1b80      	subs	r0, r0, r6
 800af40:	b280      	uxth	r0, r0
 800af42:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 800af46:	f932 2020 	ldrsh.w	r2, [r2, r0, lsl #2]
 800af4a:	f9b6 b002 	ldrsh.w	fp, [r6, #2]
 800af4e:	1c50      	adds	r0, r2, #1
 800af50:	d06e      	beq.n	800b030 <GUIMONO_DispChar+0x138>
 800af52:	f891 8018 	ldrb.w	r8, [r1, #24]
 800af56:	7ca1      	ldrb	r1, [r4, #18]
 800af58:	f8b3 a02a 	ldrh.w	sl, [r3, #42]	; 0x2a
 800af5c:	7c26      	ldrb	r6, [r4, #16]
 800af5e:	9206      	str	r2, [sp, #24]
 800af60:	fb18 f101 	smulbb	r1, r8, r1
 800af64:	9107      	str	r1, [sp, #28]
 800af66:	fa0f f18a 	sxth.w	r1, sl
 800af6a:	4608      	mov	r0, r1
 800af6c:	9108      	str	r1, [sp, #32]
 800af6e:	f7fd fbd9 	bl	8008724 <LCD_SetDrawMode>
 800af72:	4934      	ldr	r1, [pc, #208]	; (800b044 <GUIMONO_DispChar+0x14c>)
 800af74:	9009      	str	r0, [sp, #36]	; 0x24
 800af76:	680b      	ldr	r3, [r1, #0]
 800af78:	9a06      	ldr	r2, [sp, #24]
 800af7a:	69d9      	ldr	r1, [r3, #28]
 800af7c:	7e88      	ldrb	r0, [r1, #26]
 800af7e:	9000      	str	r0, [sp, #0]
 800af80:	7ec9      	ldrb	r1, [r1, #27]
 800af82:	9101      	str	r1, [sp, #4]
 800af84:	2101      	movs	r1, #1
 800af86:	9102      	str	r1, [sp, #8]
 800af88:	7ca1      	ldrb	r1, [r4, #18]
 800af8a:	9103      	str	r1, [sp, #12]
 800af8c:	9907      	ldr	r1, [sp, #28]
 800af8e:	fb01 9202 	mla	r2, r1, r2, r9
 800af92:	9204      	str	r2, [sp, #16]
 800af94:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800af96:	9305      	str	r3, [sp, #20]
 800af98:	b23f      	sxth	r7, r7
 800af9a:	b22d      	sxth	r5, r5
 800af9c:	4638      	mov	r0, r7
 800af9e:	4629      	mov	r1, r5
 800afa0:	4632      	mov	r2, r6
 800afa2:	4643      	mov	r3, r8
 800afa4:	f7fd fd48 	bl	8008a38 <LCD_DrawBitmap>
 800afa8:	f1bb 3fff 	cmp.w	fp, #4294967295
 800afac:	d01b      	beq.n	800afe6 <GUIMONO_DispChar+0xee>
 800afae:	f04a 0002 	orr.w	r0, sl, #2
 800afb2:	b200      	sxth	r0, r0
 800afb4:	f7fd fbb6 	bl	8008724 <LCD_SetDrawMode>
 800afb8:	4a22      	ldr	r2, [pc, #136]	; (800b044 <GUIMONO_DispChar+0x14c>)
 800afba:	6813      	ldr	r3, [r2, #0]
 800afbc:	69da      	ldr	r2, [r3, #28]
 800afbe:	7e91      	ldrb	r1, [r2, #26]
 800afc0:	9100      	str	r1, [sp, #0]
 800afc2:	7ed2      	ldrb	r2, [r2, #27]
 800afc4:	9201      	str	r2, [sp, #4]
 800afc6:	2101      	movs	r1, #1
 800afc8:	9102      	str	r1, [sp, #8]
 800afca:	9907      	ldr	r1, [sp, #28]
 800afcc:	7ca2      	ldrb	r2, [r4, #18]
 800afce:	9203      	str	r2, [sp, #12]
 800afd0:	fb01 920b 	mla	r2, r1, fp, r9
 800afd4:	9204      	str	r2, [sp, #16]
 800afd6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800afd8:	9305      	str	r3, [sp, #20]
 800afda:	4638      	mov	r0, r7
 800afdc:	4629      	mov	r1, r5
 800afde:	4632      	mov	r2, r6
 800afe0:	4643      	mov	r3, r8
 800afe2:	f7fd fd29 	bl	8008a38 <LCD_DrawBitmap>
 800afe6:	f8df 805c 	ldr.w	r8, [pc, #92]	; 800b044 <GUIMONO_DispChar+0x14c>
 800afea:	f8d8 3000 	ldr.w	r3, [r8]
 800afee:	69db      	ldr	r3, [r3, #28]
 800aff0:	7e5a      	ldrb	r2, [r3, #25]
 800aff2:	7e1b      	ldrb	r3, [r3, #24]
 800aff4:	429a      	cmp	r2, r3
 800aff6:	d917      	bls.n	800b028 <GUIMONO_DispChar+0x130>
 800aff8:	9a08      	ldr	r2, [sp, #32]
 800affa:	2a02      	cmp	r2, #2
 800affc:	d014      	beq.n	800b028 <GUIMONO_DispChar+0x130>
 800affe:	f08a 0004 	eor.w	r0, sl, #4
 800b002:	b200      	sxth	r0, r0
 800b004:	f7fd fb8e 	bl	8008724 <LCD_SetDrawMode>
 800b008:	f8d8 3000 	ldr.w	r3, [r8]
 800b00c:	69db      	ldr	r3, [r3, #28]
 800b00e:	f893 e018 	ldrb.w	lr, [r3, #24]
 800b012:	7ed9      	ldrb	r1, [r3, #27]
 800b014:	7e9a      	ldrb	r2, [r3, #26]
 800b016:	7e5b      	ldrb	r3, [r3, #25]
 800b018:	4638      	mov	r0, r7
 800b01a:	fb0e 5101 	mla	r1, lr, r1, r5
 800b01e:	fb06 7202 	mla	r2, r6, r2, r7
 800b022:	442b      	add	r3, r5
 800b024:	f7fd fc00 	bl	8008828 <LCD_FillRect>
 800b028:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b02a:	b2d8      	uxtb	r0, r3
 800b02c:	f7fd fb7a 	bl	8008724 <LCD_SetDrawMode>
 800b030:	4b04      	ldr	r3, [pc, #16]	; (800b044 <GUIMONO_DispChar+0x14c>)
 800b032:	7c61      	ldrb	r1, [r4, #17]
 800b034:	681b      	ldr	r3, [r3, #0]
 800b036:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 800b038:	440a      	add	r2, r1
 800b03a:	845a      	strh	r2, [r3, #34]	; 0x22
 800b03c:	b00b      	add	sp, #44	; 0x2c
 800b03e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b042:	bf00      	nop
 800b044:	200000b8 	.word	0x200000b8

0800b048 <GUIMONO_GetCharDistX>:
 800b048:	4b04      	ldr	r3, [pc, #16]	; (800b05c <GUIMONO_GetCharDistX+0x14>)
 800b04a:	681b      	ldr	r3, [r3, #0]
 800b04c:	69db      	ldr	r3, [r3, #28]
 800b04e:	69db      	ldr	r3, [r3, #28]
 800b050:	b109      	cbz	r1, 800b056 <GUIMONO_GetCharDistX+0xe>
 800b052:	7c1a      	ldrb	r2, [r3, #16]
 800b054:	600a      	str	r2, [r1, #0]
 800b056:	7c58      	ldrb	r0, [r3, #17]
 800b058:	4770      	bx	lr
 800b05a:	bf00      	nop
 800b05c:	200000b8 	.word	0x200000b8

0800b060 <GUIMONO_GetFontInfo>:
 800b060:	2302      	movs	r3, #2
 800b062:	800b      	strh	r3, [r1, #0]
 800b064:	4770      	bx	lr

0800b066 <GUIMONO_IsInFont>:
 800b066:	69c3      	ldr	r3, [r0, #28]
 800b068:	899a      	ldrh	r2, [r3, #12]
 800b06a:	428a      	cmp	r2, r1
 800b06c:	d802      	bhi.n	800b074 <GUIMONO_IsInFont+0xe>
 800b06e:	89da      	ldrh	r2, [r3, #14]
 800b070:	428a      	cmp	r2, r1
 800b072:	d20f      	bcs.n	800b094 <GUIMONO_IsInFont+0x2e>
 800b074:	6898      	ldr	r0, [r3, #8]
 800b076:	b180      	cbz	r0, 800b09a <GUIMONO_IsInFont+0x34>
 800b078:	8803      	ldrh	r3, [r0, #0]
 800b07a:	4299      	cmp	r1, r3
 800b07c:	d30c      	bcc.n	800b098 <GUIMONO_IsInFont+0x32>
 800b07e:	8842      	ldrh	r2, [r0, #2]
 800b080:	428a      	cmp	r2, r1
 800b082:	d309      	bcc.n	800b098 <GUIMONO_IsInFont+0x32>
 800b084:	1ac9      	subs	r1, r1, r3
 800b086:	6842      	ldr	r2, [r0, #4]
 800b088:	f832 0021 	ldrh.w	r0, [r2, r1, lsl #2]
 800b08c:	43c0      	mvns	r0, r0
 800b08e:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 800b092:	4770      	bx	lr
 800b094:	2001      	movs	r0, #1
 800b096:	4770      	bx	lr
 800b098:	2000      	movs	r0, #0
 800b09a:	4770      	bx	lr

0800b09c <_Log2VisBuffered>:
 800b09c:	4770      	bx	lr
	...

0800b0a0 <_DispLine>:
 800b0a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b0a2:	4615      	mov	r5, r2
 800b0a4:	ab02      	add	r3, sp, #8
 800b0a6:	4a21      	ldr	r2, [pc, #132]	; (800b12c <_DispLine+0x8c>)
 800b0a8:	f843 1d08 	str.w	r1, [r3, #-8]!
 800b0ac:	9001      	str	r0, [sp, #4]
 800b0ae:	6812      	ldr	r2, [r2, #0]
 800b0b0:	4c1f      	ldr	r4, [pc, #124]	; (800b130 <_DispLine+0x90>)
 800b0b2:	4669      	mov	r1, sp
 800b0b4:	4790      	blx	r2
 800b0b6:	6823      	ldr	r3, [r4, #0]
 800b0b8:	9001      	str	r0, [sp, #4]
 800b0ba:	6958      	ldr	r0, [r3, #20]
 800b0bc:	b938      	cbnz	r0, 800b0ce <_DispLine+0x2e>
 800b0be:	2001      	movs	r0, #1
 800b0c0:	f7fe f838 	bl	8009134 <GUI__ManageCache>
 800b0c4:	6822      	ldr	r2, [r4, #0]
 800b0c6:	69d3      	ldr	r3, [r2, #28]
 800b0c8:	695b      	ldr	r3, [r3, #20]
 800b0ca:	b933      	cbnz	r3, 800b0da <_DispLine+0x3a>
 800b0cc:	e023      	b.n	800b116 <_DispLine+0x76>
 800b0ce:	4629      	mov	r1, r5
 800b0d0:	f7ff fd60 	bl	800ab94 <GUI_RectsIntersect>
 800b0d4:	2800      	cmp	r0, #0
 800b0d6:	d1f2      	bne.n	800b0be <_DispLine+0x1e>
 800b0d8:	e025      	b.n	800b126 <_DispLine+0x86>
 800b0da:	4c16      	ldr	r4, [pc, #88]	; (800b134 <_DispLine+0x94>)
 800b0dc:	689b      	ldr	r3, [r3, #8]
 800b0de:	6821      	ldr	r1, [r4, #0]
 800b0e0:	b141      	cbz	r1, 800b0f4 <_DispLine+0x54>
 800b0e2:	f9b2 5022 	ldrsh.w	r5, [r2, #34]	; 0x22
 800b0e6:	9801      	ldr	r0, [sp, #4]
 800b0e8:	9900      	ldr	r1, [sp, #0]
 800b0ea:	4798      	blx	r3
 800b0ec:	6823      	ldr	r3, [r4, #0]
 800b0ee:	4628      	mov	r0, r5
 800b0f0:	4798      	blx	r3
 800b0f2:	e015      	b.n	800b120 <_DispLine+0x80>
 800b0f4:	9801      	ldr	r0, [sp, #4]
 800b0f6:	9900      	ldr	r1, [sp, #0]
 800b0f8:	4798      	blx	r3
 800b0fa:	e011      	b.n	800b120 <_DispLine+0x80>
 800b0fc:	a801      	add	r0, sp, #4
 800b0fe:	f7fe f9e1 	bl	80094c4 <GUI_UC__GetCharCodeInc>
 800b102:	6823      	ldr	r3, [r4, #0]
 800b104:	69db      	ldr	r3, [r3, #28]
 800b106:	681b      	ldr	r3, [r3, #0]
 800b108:	4605      	mov	r5, r0
 800b10a:	4798      	blx	r3
 800b10c:	4b0a      	ldr	r3, [pc, #40]	; (800b138 <_DispLine+0x98>)
 800b10e:	681b      	ldr	r3, [r3, #0]
 800b110:	b10b      	cbz	r3, 800b116 <_DispLine+0x76>
 800b112:	4628      	mov	r0, r5
 800b114:	4798      	blx	r3
 800b116:	9b00      	ldr	r3, [sp, #0]
 800b118:	3b01      	subs	r3, #1
 800b11a:	2b00      	cmp	r3, #0
 800b11c:	9300      	str	r3, [sp, #0]
 800b11e:	daed      	bge.n	800b0fc <_DispLine+0x5c>
 800b120:	2000      	movs	r0, #0
 800b122:	f7fe f807 	bl	8009134 <GUI__ManageCache>
 800b126:	b003      	add	sp, #12
 800b128:	bd30      	pop	{r4, r5, pc}
 800b12a:	bf00      	nop
 800b12c:	200000c4 	.word	0x200000c4
 800b130:	200000b8 	.word	0x200000b8
 800b134:	20002cf4 	.word	0x20002cf4
 800b138:	20002d04 	.word	0x20002d04

0800b13c <GUI__GetLineNumChars>:
 800b13c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b13e:	460d      	mov	r5, r1
 800b140:	9001      	str	r0, [sp, #4]
 800b142:	4604      	mov	r4, r0
 800b144:	b198      	cbz	r0, 800b16e <GUI__GetLineNumChars+0x32>
 800b146:	4b0b      	ldr	r3, [pc, #44]	; (800b174 <GUI__GetLineNumChars+0x38>)
 800b148:	681b      	ldr	r3, [r3, #0]
 800b14a:	69db      	ldr	r3, [r3, #28]
 800b14c:	695b      	ldr	r3, [r3, #20]
 800b14e:	b10b      	cbz	r3, 800b154 <GUI__GetLineNumChars+0x18>
 800b150:	685b      	ldr	r3, [r3, #4]
 800b152:	b90b      	cbnz	r3, 800b158 <GUI__GetLineNumChars+0x1c>
 800b154:	2400      	movs	r4, #0
 800b156:	e008      	b.n	800b16a <GUI__GetLineNumChars+0x2e>
 800b158:	4798      	blx	r3
 800b15a:	e009      	b.n	800b170 <GUI__GetLineNumChars+0x34>
 800b15c:	a801      	add	r0, sp, #4
 800b15e:	f7fe f9b1 	bl	80094c4 <GUI_UC__GetCharCodeInc>
 800b162:	b120      	cbz	r0, 800b16e <GUI__GetLineNumChars+0x32>
 800b164:	280a      	cmp	r0, #10
 800b166:	d002      	beq.n	800b16e <GUI__GetLineNumChars+0x32>
 800b168:	3401      	adds	r4, #1
 800b16a:	42ac      	cmp	r4, r5
 800b16c:	dbf6      	blt.n	800b15c <GUI__GetLineNumChars+0x20>
 800b16e:	4620      	mov	r0, r4
 800b170:	b003      	add	sp, #12
 800b172:	bd30      	pop	{r4, r5, pc}
 800b174:	200000b8 	.word	0x200000b8

0800b178 <GUI__GetOverlap>:
 800b178:	b513      	push	{r0, r1, r4, lr}
 800b17a:	a902      	add	r1, sp, #8
 800b17c:	2400      	movs	r4, #0
 800b17e:	f841 4d04 	str.w	r4, [r1, #-4]!
 800b182:	f000 f8b7 	bl	800b2f4 <GUI_GetCharDistXEx>
 800b186:	9b01      	ldr	r3, [sp, #4]
 800b188:	4283      	cmp	r3, r0
 800b18a:	bfcc      	ite	gt
 800b18c:	ebc0 0003 	rsbgt	r0, r0, r3
 800b190:	4620      	movle	r0, r4
 800b192:	b002      	add	sp, #8
 800b194:	bd10      	pop	{r4, pc}
	...

0800b198 <GUI__GetLineDistX>:
 800b198:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b19a:	4a15      	ldr	r2, [pc, #84]	; (800b1f0 <GUI__GetLineDistX+0x58>)
 800b19c:	9001      	str	r0, [sp, #4]
 800b19e:	ab02      	add	r3, sp, #8
 800b1a0:	6812      	ldr	r2, [r2, #0]
 800b1a2:	f843 1d08 	str.w	r1, [r3, #-8]!
 800b1a6:	4669      	mov	r1, sp
 800b1a8:	4790      	blx	r2
 800b1aa:	9001      	str	r0, [sp, #4]
 800b1ac:	b1f0      	cbz	r0, 800b1ec <GUI__GetLineDistX+0x54>
 800b1ae:	4b11      	ldr	r3, [pc, #68]	; (800b1f4 <GUI__GetLineDistX+0x5c>)
 800b1b0:	681b      	ldr	r3, [r3, #0]
 800b1b2:	69db      	ldr	r3, [r3, #28]
 800b1b4:	695b      	ldr	r3, [r3, #20]
 800b1b6:	b10b      	cbz	r3, 800b1bc <GUI__GetLineDistX+0x24>
 800b1b8:	681b      	ldr	r3, [r3, #0]
 800b1ba:	b913      	cbnz	r3, 800b1c2 <GUI__GetLineDistX+0x2a>
 800b1bc:	2500      	movs	r5, #0
 800b1be:	462c      	mov	r4, r5
 800b1c0:	e002      	b.n	800b1c8 <GUI__GetLineDistX+0x30>
 800b1c2:	9900      	ldr	r1, [sp, #0]
 800b1c4:	4798      	blx	r3
 800b1c6:	e011      	b.n	800b1ec <GUI__GetLineDistX+0x54>
 800b1c8:	9b00      	ldr	r3, [sp, #0]
 800b1ca:	3b01      	subs	r3, #1
 800b1cc:	2b00      	cmp	r3, #0
 800b1ce:	9300      	str	r3, [sp, #0]
 800b1d0:	db07      	blt.n	800b1e2 <GUI__GetLineDistX+0x4a>
 800b1d2:	a801      	add	r0, sp, #4
 800b1d4:	f7fe f976 	bl	80094c4 <GUI_UC__GetCharCodeInc>
 800b1d8:	4605      	mov	r5, r0
 800b1da:	f000 f881 	bl	800b2e0 <GUI_GetCharDistX>
 800b1de:	4404      	add	r4, r0
 800b1e0:	e7f2      	b.n	800b1c8 <GUI__GetLineDistX+0x30>
 800b1e2:	4628      	mov	r0, r5
 800b1e4:	f7ff ffc8 	bl	800b178 <GUI__GetOverlap>
 800b1e8:	4420      	add	r0, r4
 800b1ea:	e7ff      	b.n	800b1ec <GUI__GetLineDistX+0x54>
 800b1ec:	b003      	add	sp, #12
 800b1ee:	bd30      	pop	{r4, r5, pc}
 800b1f0:	200000c4 	.word	0x200000c4
 800b1f4:	200000b8 	.word	0x200000b8

0800b1f8 <GUI__DispLine>:
 800b1f8:	4b27      	ldr	r3, [pc, #156]	; (800b298 <GUI__DispLine+0xa0>)
 800b1fa:	681b      	ldr	r3, [r3, #0]
 800b1fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b1fe:	4605      	mov	r5, r0
 800b200:	460c      	mov	r4, r1
 800b202:	b163      	cbz	r3, 800b21e <GUI__DispLine+0x26>
 800b204:	2000      	movs	r0, #0
 800b206:	f7fa fde7 	bl	8005dd8 <WM__InitIVRSearch>
 800b20a:	2800      	cmp	r0, #0
 800b20c:	d041      	beq.n	800b292 <GUI__DispLine+0x9a>
 800b20e:	4628      	mov	r0, r5
 800b210:	4621      	mov	r1, r4
 800b212:	466a      	mov	r2, sp
 800b214:	f7ff ff44 	bl	800b0a0 <_DispLine>
 800b218:	f7fa fd1c 	bl	8005c54 <WM__GetNextIVR>
 800b21c:	e7f5      	b.n	800b20a <GUI__DispLine+0x12>
 800b21e:	6810      	ldr	r0, [r2, #0]
 800b220:	6851      	ldr	r1, [r2, #4]
 800b222:	4e1e      	ldr	r6, [pc, #120]	; (800b29c <GUI__DispLine+0xa4>)
 800b224:	466b      	mov	r3, sp
 800b226:	c303      	stmia	r3!, {r0, r1}
 800b228:	6833      	ldr	r3, [r6, #0]
 800b22a:	f8bd 1000 	ldrh.w	r1, [sp]
 800b22e:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 800b232:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 800b236:	4411      	add	r1, r2
 800b238:	f8ad 1000 	strh.w	r1, [sp]
 800b23c:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800b240:	4419      	add	r1, r3
 800b242:	f8ad 1002 	strh.w	r1, [sp, #2]
 800b246:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 800b24a:	440a      	add	r2, r1
 800b24c:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b250:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b254:	4668      	mov	r0, sp
 800b256:	4413      	add	r3, r2
 800b258:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b25c:	f7fa fdbc 	bl	8005dd8 <WM__InitIVRSearch>
 800b260:	6833      	ldr	r3, [r6, #0]
 800b262:	b940      	cbnz	r0, 800b276 <GUI__DispLine+0x7e>
 800b264:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800b266:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800b268:	1a8a      	subs	r2, r1, r2
 800b26a:	845a      	strh	r2, [r3, #34]	; 0x22
 800b26c:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800b26e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b270:	1a8a      	subs	r2, r1, r2
 800b272:	849a      	strh	r2, [r3, #36]	; 0x24
 800b274:	e00d      	b.n	800b292 <GUI__DispLine+0x9a>
 800b276:	f8bd 2000 	ldrh.w	r2, [sp]
 800b27a:	845a      	strh	r2, [r3, #34]	; 0x22
 800b27c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800b280:	849a      	strh	r2, [r3, #36]	; 0x24
 800b282:	4628      	mov	r0, r5
 800b284:	4621      	mov	r1, r4
 800b286:	466a      	mov	r2, sp
 800b288:	f7ff ff0a 	bl	800b0a0 <_DispLine>
 800b28c:	f7fa fce2 	bl	8005c54 <WM__GetNextIVR>
 800b290:	e7e6      	b.n	800b260 <GUI__DispLine+0x68>
 800b292:	b002      	add	sp, #8
 800b294:	bd70      	pop	{r4, r5, r6, pc}
 800b296:	bf00      	nop
 800b298:	20002ce0 	.word	0x20002ce0
 800b29c:	200000b8 	.word	0x200000b8

0800b2a0 <GUI_GetYAdjust>:
 800b2a0:	4b0a      	ldr	r3, [pc, #40]	; (800b2cc <GUI_GetYAdjust+0x2c>)
 800b2a2:	681b      	ldr	r3, [r3, #0]
 800b2a4:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800b2a6:	f002 020c 	and.w	r2, r2, #12
 800b2aa:	2a08      	cmp	r2, #8
 800b2ac:	d007      	beq.n	800b2be <GUI_GetYAdjust+0x1e>
 800b2ae:	2a0c      	cmp	r2, #12
 800b2b0:	d005      	beq.n	800b2be <GUI_GetYAdjust+0x1e>
 800b2b2:	2a04      	cmp	r2, #4
 800b2b4:	d107      	bne.n	800b2c6 <GUI_GetYAdjust+0x26>
 800b2b6:	69db      	ldr	r3, [r3, #28]
 800b2b8:	7e18      	ldrb	r0, [r3, #24]
 800b2ba:	3801      	subs	r0, #1
 800b2bc:	4770      	bx	lr
 800b2be:	69db      	ldr	r3, [r3, #28]
 800b2c0:	7e18      	ldrb	r0, [r3, #24]
 800b2c2:	0840      	lsrs	r0, r0, #1
 800b2c4:	4770      	bx	lr
 800b2c6:	2000      	movs	r0, #0
 800b2c8:	4770      	bx	lr
 800b2ca:	bf00      	nop
 800b2cc:	200000b8 	.word	0x200000b8

0800b2d0 <GUI_GetFontDistY>:
 800b2d0:	4b02      	ldr	r3, [pc, #8]	; (800b2dc <GUI_GetFontDistY+0xc>)
 800b2d2:	681b      	ldr	r3, [r3, #0]
 800b2d4:	69db      	ldr	r3, [r3, #28]
 800b2d6:	7e58      	ldrb	r0, [r3, #25]
 800b2d8:	4770      	bx	lr
 800b2da:	bf00      	nop
 800b2dc:	200000b8 	.word	0x200000b8

0800b2e0 <GUI_GetCharDistX>:
 800b2e0:	b508      	push	{r3, lr}
 800b2e2:	4b03      	ldr	r3, [pc, #12]	; (800b2f0 <GUI_GetCharDistX+0x10>)
 800b2e4:	681b      	ldr	r3, [r3, #0]
 800b2e6:	69db      	ldr	r3, [r3, #28]
 800b2e8:	2100      	movs	r1, #0
 800b2ea:	685b      	ldr	r3, [r3, #4]
 800b2ec:	4798      	blx	r3
 800b2ee:	bd08      	pop	{r3, pc}
 800b2f0:	200000b8 	.word	0x200000b8

0800b2f4 <GUI_GetCharDistXEx>:
 800b2f4:	b508      	push	{r3, lr}
 800b2f6:	4b03      	ldr	r3, [pc, #12]	; (800b304 <GUI_GetCharDistXEx+0x10>)
 800b2f8:	681b      	ldr	r3, [r3, #0]
 800b2fa:	69db      	ldr	r3, [r3, #28]
 800b2fc:	685b      	ldr	r3, [r3, #4]
 800b2fe:	4798      	blx	r3
 800b300:	bd08      	pop	{r3, pc}
 800b302:	bf00      	nop
 800b304:	200000b8 	.word	0x200000b8

0800b308 <_PushFreeBlock>:
 800b308:	4b07      	ldr	r3, [pc, #28]	; (800b328 <_PushFreeBlock+0x20>)
 800b30a:	685a      	ldr	r2, [r3, #4]
 800b30c:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800b30e:	3201      	adds	r2, #1
 800b310:	b510      	push	{r4, lr}
 800b312:	605a      	str	r2, [r3, #4]
 800b314:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b316:	eb02 04c0 	add.w	r4, r2, r0, lsl #3
 800b31a:	6061      	str	r1, [r4, #4]
 800b31c:	2100      	movs	r1, #0
 800b31e:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 800b322:	6258      	str	r0, [r3, #36]	; 0x24
 800b324:	bd10      	pop	{r4, pc}
 800b326:	bf00      	nop
 800b328:	20002d38 	.word	0x20002d38

0800b32c <_RemoveFreeBlock>:
 800b32c:	b510      	push	{r4, lr}
 800b32e:	6842      	ldr	r2, [r0, #4]
 800b330:	230f      	movs	r3, #15
 800b332:	490d      	ldr	r1, [pc, #52]	; (800b368 <_RemoveFreeBlock+0x3c>)
 800b334:	eb01 04c3 	add.w	r4, r1, r3, lsl #3
 800b338:	6c24      	ldr	r4, [r4, #64]	; 0x40
 800b33a:	42a2      	cmp	r2, r4
 800b33c:	d203      	bcs.n	800b346 <_RemoveFreeBlock+0x1a>
 800b33e:	f113 33ff 	adds.w	r3, r3, #4294967295
 800b342:	d2f6      	bcs.n	800b332 <_RemoveFreeBlock+0x6>
 800b344:	bd10      	pop	{r4, pc}
 800b346:	2b0f      	cmp	r3, #15
 800b348:	d80c      	bhi.n	800b364 <_RemoveFreeBlock+0x38>
 800b34a:	680c      	ldr	r4, [r1, #0]
 800b34c:	1aa2      	subs	r2, r4, r2
 800b34e:	600a      	str	r2, [r1, #0]
 800b350:	6882      	ldr	r2, [r0, #8]
 800b352:	68c0      	ldr	r0, [r0, #12]
 800b354:	b102      	cbz	r2, 800b358 <_RemoveFreeBlock+0x2c>
 800b356:	6050      	str	r0, [r2, #4]
 800b358:	b108      	cbz	r0, 800b35e <_RemoveFreeBlock+0x32>
 800b35a:	6002      	str	r2, [r0, #0]
 800b35c:	bd10      	pop	{r4, pc}
 800b35e:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800b362:	645a      	str	r2, [r3, #68]	; 0x44
 800b364:	bd10      	pop	{r4, pc}
 800b366:	bf00      	nop
 800b368:	20002d38 	.word	0x20002d38

0800b36c <_AddFreeMemory>:
 800b36c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b36e:	4e26      	ldr	r6, [pc, #152]	; (800b408 <_AddFreeMemory+0x9c>)
 800b370:	68f3      	ldr	r3, [r6, #12]
 800b372:	1e5a      	subs	r2, r3, #1
 800b374:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800b376:	4605      	mov	r5, r0
 800b378:	4413      	add	r3, r2
 800b37a:	1808      	adds	r0, r1, r0
 800b37c:	4298      	cmp	r0, r3
 800b37e:	460c      	mov	r4, r1
 800b380:	d805      	bhi.n	800b38e <_AddFreeMemory+0x22>
 800b382:	594b      	ldr	r3, [r1, r5]
 800b384:	b91b      	cbnz	r3, 800b38e <_AddFreeMemory+0x22>
 800b386:	6843      	ldr	r3, [r0, #4]
 800b388:	441d      	add	r5, r3
 800b38a:	f7ff ffcf 	bl	800b32c <_RemoveFreeBlock>
 800b38e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800b390:	429c      	cmp	r4, r3
 800b392:	d90a      	bls.n	800b3aa <_AddFreeMemory+0x3e>
 800b394:	f854 7c04 	ldr.w	r7, [r4, #-4]
 800b398:	1be7      	subs	r7, r4, r7
 800b39a:	683b      	ldr	r3, [r7, #0]
 800b39c:	b92b      	cbnz	r3, 800b3aa <_AddFreeMemory+0x3e>
 800b39e:	687b      	ldr	r3, [r7, #4]
 800b3a0:	4638      	mov	r0, r7
 800b3a2:	441d      	add	r5, r3
 800b3a4:	f7ff ffc2 	bl	800b32c <_RemoveFreeBlock>
 800b3a8:	463c      	mov	r4, r7
 800b3aa:	230f      	movs	r3, #15
 800b3ac:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800b3b0:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800b3b2:	4295      	cmp	r5, r2
 800b3b4:	d203      	bcs.n	800b3be <_AddFreeMemory+0x52>
 800b3b6:	f113 33ff 	adds.w	r3, r3, #4294967295
 800b3ba:	d2f7      	bcs.n	800b3ac <_AddFreeMemory+0x40>
 800b3bc:	e022      	b.n	800b404 <_AddFreeMemory+0x98>
 800b3be:	2b0f      	cmp	r3, #15
 800b3c0:	d820      	bhi.n	800b404 <_AddFreeMemory+0x98>
 800b3c2:	3308      	adds	r3, #8
 800b3c4:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800b3c8:	1961      	adds	r1, r4, r5
 800b3ca:	6852      	ldr	r2, [r2, #4]
 800b3cc:	60a2      	str	r2, [r4, #8]
 800b3ce:	2000      	movs	r0, #0
 800b3d0:	e884 0021 	stmia.w	r4, {r0, r5}
 800b3d4:	6124      	str	r4, [r4, #16]
 800b3d6:	f841 5c04 	str.w	r5, [r1, #-4]
 800b3da:	f104 0108 	add.w	r1, r4, #8
 800b3de:	b102      	cbz	r2, 800b3e2 <_AddFreeMemory+0x76>
 800b3e0:	6051      	str	r1, [r2, #4]
 800b3e2:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 800b3e6:	60e0      	str	r0, [r4, #12]
 800b3e8:	6059      	str	r1, [r3, #4]
 800b3ea:	6833      	ldr	r3, [r6, #0]
 800b3ec:	f896 1029 	ldrb.w	r1, [r6, #41]	; 0x29
 800b3f0:	4a05      	ldr	r2, [pc, #20]	; (800b408 <_AddFreeMemory+0x9c>)
 800b3f2:	442b      	add	r3, r5
 800b3f4:	6033      	str	r3, [r6, #0]
 800b3f6:	b929      	cbnz	r1, 800b404 <_AddFreeMemory+0x98>
 800b3f8:	68d1      	ldr	r1, [r2, #12]
 800b3fa:	1acb      	subs	r3, r1, r3
 800b3fc:	6891      	ldr	r1, [r2, #8]
 800b3fe:	4299      	cmp	r1, r3
 800b400:	bf38      	it	cc
 800b402:	6093      	strcc	r3, [r2, #8]
 800b404:	4628      	mov	r0, r5
 800b406:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b408:	20002d38 	.word	0x20002d38

0800b40c <_RemoveHoles>:
 800b40c:	4b25      	ldr	r3, [pc, #148]	; (800b4a4 <_RemoveHoles+0x98>)
 800b40e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b412:	68da      	ldr	r2, [r3, #12]
 800b414:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800b416:	3a01      	subs	r2, #1
 800b418:	4682      	mov	sl, r0
 800b41a:	eb02 0904 	add.w	r9, r2, r4
 800b41e:	469b      	mov	fp, r3
 800b420:	e894 0028 	ldmia.w	r4, {r3, r5}
 800b424:	2b00      	cmp	r3, #0
 800b426:	d133      	bne.n	800b490 <_RemoveHoles+0x84>
 800b428:	eb04 0805 	add.w	r8, r4, r5
 800b42c:	45c8      	cmp	r8, r9
 800b42e:	d22f      	bcs.n	800b490 <_RemoveHoles+0x84>
 800b430:	f854 c005 	ldr.w	ip, [r4, r5]
 800b434:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800b438:	f1bc 0f00 	cmp.w	ip, #0
 800b43c:	d028      	beq.n	800b490 <_RemoveHoles+0x84>
 800b43e:	f8db 3034 	ldr.w	r3, [fp, #52]	; 0x34
 800b442:	4f18      	ldr	r7, [pc, #96]	; (800b4a4 <_RemoveHoles+0x98>)
 800b444:	f813 303c 	ldrb.w	r3, [r3, ip, lsl #3]
 800b448:	2b01      	cmp	r3, #1
 800b44a:	d121      	bne.n	800b490 <_RemoveHoles+0x84>
 800b44c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b44e:	4620      	mov	r0, r4
 800b450:	e88d 1008 	stmia.w	sp, {r3, ip}
 800b454:	f7ff ff6a 	bl	800b32c <_RemoveFreeBlock>
 800b458:	f8d8 1000 	ldr.w	r1, [r8]
 800b45c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b45e:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 800b462:	4620      	mov	r0, r4
 800b464:	6054      	str	r4, [r2, #4]
 800b466:	4641      	mov	r1, r8
 800b468:	4632      	mov	r2, r6
 800b46a:	f004 fc55 	bl	800fd18 <memmove>
 800b46e:	e89d 1008 	ldmia.w	sp, {r3, ip}
 800b472:	459c      	cmp	ip, r3
 800b474:	d102      	bne.n	800b47c <_RemoveHoles+0x70>
 800b476:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b478:	1b5b      	subs	r3, r3, r5
 800b47a:	637b      	str	r3, [r7, #52]	; 0x34
 800b47c:	4628      	mov	r0, r5
 800b47e:	19a1      	adds	r1, r4, r6
 800b480:	f7ff ff74 	bl	800b36c <_AddFreeMemory>
 800b484:	f1ba 0f00 	cmp.w	sl, #0
 800b488:	d001      	beq.n	800b48e <_RemoveHoles+0x82>
 800b48a:	4582      	cmp	sl, r0
 800b48c:	d905      	bls.n	800b49a <_RemoveHoles+0x8e>
 800b48e:	4635      	mov	r5, r6
 800b490:	442c      	add	r4, r5
 800b492:	454c      	cmp	r4, r9
 800b494:	d3c4      	bcc.n	800b420 <_RemoveHoles+0x14>
 800b496:	2001      	movs	r0, #1
 800b498:	e000      	b.n	800b49c <_RemoveHoles+0x90>
 800b49a:	2000      	movs	r0, #0
 800b49c:	b003      	add	sp, #12
 800b49e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b4a2:	bf00      	nop
 800b4a4:	20002d38 	.word	0x20002d38

0800b4a8 <GUI_ALLOC_FreeFixedBlock>:
 800b4a8:	b128      	cbz	r0, 800b4b6 <GUI_ALLOC_FreeFixedBlock+0xe>
 800b4aa:	4a03      	ldr	r2, [pc, #12]	; (800b4b8 <GUI_ALLOC_FreeFixedBlock+0x10>)
 800b4ac:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 800b4ae:	6003      	str	r3, [r0, #0]
 800b4b0:	b103      	cbz	r3, 800b4b4 <GUI_ALLOC_FreeFixedBlock+0xc>
 800b4b2:	6058      	str	r0, [r3, #4]
 800b4b4:	63d0      	str	r0, [r2, #60]	; 0x3c
 800b4b6:	4770      	bx	lr
 800b4b8:	20002d38 	.word	0x20002d38

0800b4bc <GUI_ALLOC_h2p>:
 800b4bc:	4b03      	ldr	r3, [pc, #12]	; (800b4cc <GUI_ALLOC_h2p+0x10>)
 800b4be:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b4c0:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800b4c4:	6840      	ldr	r0, [r0, #4]
 800b4c6:	3008      	adds	r0, #8
 800b4c8:	4770      	bx	lr
 800b4ca:	bf00      	nop
 800b4cc:	20002d38 	.word	0x20002d38

0800b4d0 <GUI_ALLOC_LockH>:
 800b4d0:	4b05      	ldr	r3, [pc, #20]	; (800b4e8 <GUI_ALLOC_LockH+0x18>)
 800b4d2:	69d9      	ldr	r1, [r3, #28]
 800b4d4:	3101      	adds	r1, #1
 800b4d6:	61d9      	str	r1, [r3, #28]
 800b4d8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b4da:	f813 1030 	ldrb.w	r1, [r3, r0, lsl #3]
 800b4de:	3101      	adds	r1, #1
 800b4e0:	f803 1030 	strb.w	r1, [r3, r0, lsl #3]
 800b4e4:	f7ff bfea 	b.w	800b4bc <GUI_ALLOC_h2p>
 800b4e8:	20002d38 	.word	0x20002d38

0800b4ec <GUI_ALLOC_UnlockH>:
 800b4ec:	b530      	push	{r4, r5, lr}
 800b4ee:	6802      	ldr	r2, [r0, #0]
 800b4f0:	4b09      	ldr	r3, [pc, #36]	; (800b518 <GUI_ALLOC_UnlockH+0x2c>)
 800b4f2:	f852 1c08 	ldr.w	r1, [r2, #-8]
 800b4f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b4f8:	f812 4031 	ldrb.w	r4, [r2, r1, lsl #3]
 800b4fc:	2c01      	cmp	r4, #1
 800b4fe:	d903      	bls.n	800b508 <GUI_ALLOC_UnlockH+0x1c>
 800b500:	69dd      	ldr	r5, [r3, #28]
 800b502:	b10d      	cbz	r5, 800b508 <GUI_ALLOC_UnlockH+0x1c>
 800b504:	3d01      	subs	r5, #1
 800b506:	61dd      	str	r5, [r3, #28]
 800b508:	3c01      	subs	r4, #1
 800b50a:	f802 4031 	strb.w	r4, [r2, r1, lsl #3]
 800b50e:	2300      	movs	r3, #0
 800b510:	6003      	str	r3, [r0, #0]
 800b512:	4618      	mov	r0, r3
 800b514:	bd30      	pop	{r4, r5, pc}
 800b516:	bf00      	nop
 800b518:	20002d38 	.word	0x20002d38

0800b51c <GUI_ALLOC_AssignMemory>:
 800b51c:	4b02      	ldr	r3, [pc, #8]	; (800b528 <GUI_ALLOC_AssignMemory+0xc>)
 800b51e:	f021 0103 	bic.w	r1, r1, #3
 800b522:	6018      	str	r0, [r3, #0]
 800b524:	6059      	str	r1, [r3, #4]
 800b526:	4770      	bx	lr
 800b528:	20002c2c 	.word	0x20002c2c

0800b52c <GUI_ALLOC_GetSize>:
 800b52c:	b130      	cbz	r0, 800b53c <GUI_ALLOC_GetSize+0x10>
 800b52e:	4b04      	ldr	r3, [pc, #16]	; (800b540 <GUI_ALLOC_GetSize+0x14>)
 800b530:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b532:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800b536:	6843      	ldr	r3, [r0, #4]
 800b538:	6858      	ldr	r0, [r3, #4]
 800b53a:	380c      	subs	r0, #12
 800b53c:	4770      	bx	lr
 800b53e:	bf00      	nop
 800b540:	20002d38 	.word	0x20002d38

0800b544 <GUI_ALLOC_Free>:
 800b544:	b510      	push	{r4, lr}
 800b546:	4604      	mov	r4, r0
 800b548:	b160      	cbz	r0, 800b564 <GUI_ALLOC_Free+0x20>
 800b54a:	4b07      	ldr	r3, [pc, #28]	; (800b568 <GUI_ALLOC_Free+0x24>)
 800b54c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b54e:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 800b552:	6859      	ldr	r1, [r3, #4]
 800b554:	6848      	ldr	r0, [r1, #4]
 800b556:	f7ff ff09 	bl	800b36c <_AddFreeMemory>
 800b55a:	4620      	mov	r0, r4
 800b55c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b560:	f7ff bed2 	b.w	800b308 <_PushFreeBlock>
 800b564:	bd10      	pop	{r4, pc}
 800b566:	bf00      	nop
 800b568:	20002d38 	.word	0x20002d38

0800b56c <_EnlargeBlocks>:
 800b56c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b570:	4c23      	ldr	r4, [pc, #140]	; (800b600 <_EnlargeBlocks+0x94>)
 800b572:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b574:	b93b      	cbnz	r3, 800b586 <_EnlargeBlocks+0x1a>
 800b576:	4b23      	ldr	r3, [pc, #140]	; (800b604 <_EnlargeBlocks+0x98>)
 800b578:	689d      	ldr	r5, [r3, #8]
 800b57a:	685b      	ldr	r3, [r3, #4]
 800b57c:	3508      	adds	r5, #8
 800b57e:	fbb3 f5f5 	udiv	r5, r3, r5
 800b582:	3502      	adds	r5, #2
 800b584:	e003      	b.n	800b58e <_EnlargeBlocks+0x22>
 800b586:	6923      	ldr	r3, [r4, #16]
 800b588:	1d1d      	adds	r5, r3, #4
 800b58a:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
 800b58e:	00e8      	lsls	r0, r5, #3
 800b590:	f000 f8f4 	bl	800b77c <_Alloc>
 800b594:	4680      	mov	r8, r0
 800b596:	b368      	cbz	r0, 800b5f4 <_EnlargeBlocks+0x88>
 800b598:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b59a:	6922      	ldr	r2, [r4, #16]
 800b59c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800b59e:	eb01 03c0 	add.w	r3, r1, r0, lsl #3
 800b5a2:	00d2      	lsls	r2, r2, #3
 800b5a4:	685e      	ldr	r6, [r3, #4]
 800b5a6:	4b18      	ldr	r3, [pc, #96]	; (800b608 <_EnlargeBlocks+0x9c>)
 800b5a8:	3608      	adds	r6, #8
 800b5aa:	681b      	ldr	r3, [r3, #0]
 800b5ac:	4630      	mov	r0, r6
 800b5ae:	4798      	blx	r3
 800b5b0:	6922      	ldr	r2, [r4, #16]
 800b5b2:	6366      	str	r6, [r4, #52]	; 0x34
 800b5b4:	eb06 01c2 	add.w	r1, r6, r2, lsl #3
 800b5b8:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
 800b5bc:	3104      	adds	r1, #4
 800b5be:	4613      	mov	r3, r2
 800b5c0:	1e68      	subs	r0, r5, #1
 800b5c2:	4283      	cmp	r3, r0
 800b5c4:	f101 0108 	add.w	r1, r1, #8
 800b5c8:	d203      	bcs.n	800b5d2 <_EnlargeBlocks+0x66>
 800b5ca:	3301      	adds	r3, #1
 800b5cc:	f841 3c08 	str.w	r3, [r1, #-8]
 800b5d0:	e7f6      	b.n	800b5c0 <_EnlargeBlocks+0x54>
 800b5d2:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 800b5d6:	2600      	movs	r6, #0
 800b5d8:	605e      	str	r6, [r3, #4]
 800b5da:	6863      	ldr	r3, [r4, #4]
 800b5dc:	6262      	str	r2, [r4, #36]	; 0x24
 800b5de:	1a9b      	subs	r3, r3, r2
 800b5e0:	442b      	add	r3, r5
 800b5e2:	6063      	str	r3, [r4, #4]
 800b5e4:	6125      	str	r5, [r4, #16]
 800b5e6:	4638      	mov	r0, r7
 800b5e8:	b13f      	cbz	r7, 800b5fa <_EnlargeBlocks+0x8e>
 800b5ea:	f7ff ffab 	bl	800b544 <GUI_ALLOC_Free>
 800b5ee:	4630      	mov	r0, r6
 800b5f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b5f4:	2001      	movs	r0, #1
 800b5f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b5fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b5fe:	bf00      	nop
 800b600:	20002d38 	.word	0x20002d38
 800b604:	20002c2c 	.word	0x20002c2c
 800b608:	200000a8 	.word	0x200000a8

0800b60c <_InitOnce>:
 800b60c:	b538      	push	{r3, r4, r5, lr}
 800b60e:	4916      	ldr	r1, [pc, #88]	; (800b668 <_InitOnce+0x5c>)
 800b610:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800b614:	bb3b      	cbnz	r3, 800b666 <_InitOnce+0x5a>
 800b616:	4a15      	ldr	r2, [pc, #84]	; (800b66c <_InitOnce+0x60>)
 800b618:	2301      	movs	r3, #1
 800b61a:	f881 3028 	strb.w	r3, [r1, #40]	; 0x28
 800b61e:	6893      	ldr	r3, [r2, #8]
 800b620:	b913      	cbnz	r3, 800b628 <_InitOnce+0x1c>
 800b622:	6853      	ldr	r3, [r2, #4]
 800b624:	089b      	lsrs	r3, r3, #2
 800b626:	6093      	str	r3, [r2, #8]
 800b628:	235a      	movs	r3, #90	; 0x5a
 800b62a:	620b      	str	r3, [r1, #32]
 800b62c:	2300      	movs	r3, #0
 800b62e:	2510      	movs	r5, #16
 800b630:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
 800b634:	409d      	lsls	r5, r3
 800b636:	3301      	adds	r3, #1
 800b638:	2b10      	cmp	r3, #16
 800b63a:	4c0b      	ldr	r4, [pc, #44]	; (800b668 <_InitOnce+0x5c>)
 800b63c:	6405      	str	r5, [r0, #64]	; 0x40
 800b63e:	d1f6      	bne.n	800b62e <_InitOnce+0x22>
 800b640:	6850      	ldr	r0, [r2, #4]
 800b642:	6811      	ldr	r1, [r2, #0]
 800b644:	63a1      	str	r1, [r4, #56]	; 0x38
 800b646:	2302      	movs	r3, #2
 800b648:	6123      	str	r3, [r4, #16]
 800b64a:	f1a0 0314 	sub.w	r3, r0, #20
 800b64e:	440b      	add	r3, r1
 800b650:	2501      	movs	r5, #1
 800b652:	6363      	str	r3, [r4, #52]	; 0x34
 800b654:	60e0      	str	r0, [r4, #12]
 800b656:	605d      	str	r5, [r3, #4]
 800b658:	6265      	str	r5, [r4, #36]	; 0x24
 800b65a:	6065      	str	r5, [r4, #4]
 800b65c:	f7ff fe86 	bl	800b36c <_AddFreeMemory>
 800b660:	f7ff ff84 	bl	800b56c <_EnlargeBlocks>
 800b664:	6325      	str	r5, [r4, #48]	; 0x30
 800b666:	bd38      	pop	{r3, r4, r5, pc}
 800b668:	20002d38 	.word	0x20002d38
 800b66c:	20002c2c 	.word	0x20002c2c

0800b670 <GUI_ALLOC_GetFixedBlock>:
 800b670:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b674:	4605      	mov	r5, r0
 800b676:	4e26      	ldr	r6, [pc, #152]	; (800b710 <GUI_ALLOC_GetFixedBlock+0xa0>)
 800b678:	3503      	adds	r5, #3
 800b67a:	f7ff ffc7 	bl	800b60c <_InitOnce>
 800b67e:	f025 0503 	bic.w	r5, r5, #3
 800b682:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800b684:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800b686:	3504      	adds	r5, #4
 800b688:	429d      	cmp	r5, r3
 800b68a:	bf38      	it	cc
 800b68c:	461d      	movcc	r5, r3
 800b68e:	4614      	mov	r4, r2
 800b690:	b12c      	cbz	r4, 800b69e <GUI_ALLOC_GetFixedBlock+0x2e>
 800b692:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800b696:	42ab      	cmp	r3, r5
 800b698:	d02c      	beq.n	800b6f4 <GUI_ALLOC_GetFixedBlock+0x84>
 800b69a:	6824      	ldr	r4, [r4, #0]
 800b69c:	e7f8      	b.n	800b690 <GUI_ALLOC_GetFixedBlock+0x20>
 800b69e:	68f3      	ldr	r3, [r6, #12]
 800b6a0:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 800b6a2:	eb02 0803 	add.w	r8, r2, r3
 800b6a6:	f858 7c04 	ldr.w	r7, [r8, #-4]
 800b6aa:	ebc7 0708 	rsb	r7, r7, r8
 800b6ae:	683b      	ldr	r3, [r7, #0]
 800b6b0:	b133      	cbz	r3, 800b6c0 <GUI_ALLOC_GetFixedBlock+0x50>
 800b6b2:	4620      	mov	r0, r4
 800b6b4:	f7ff feaa 	bl	800b40c <_RemoveHoles>
 800b6b8:	f858 7c04 	ldr.w	r7, [r8, #-4]
 800b6bc:	ebc7 0708 	rsb	r7, r7, r8
 800b6c0:	683b      	ldr	r3, [r7, #0]
 800b6c2:	bb13      	cbnz	r3, 800b70a <GUI_ALLOC_GetFixedBlock+0x9a>
 800b6c4:	687b      	ldr	r3, [r7, #4]
 800b6c6:	42ab      	cmp	r3, r5
 800b6c8:	db1f      	blt.n	800b70a <GUI_ALLOC_GetFixedBlock+0x9a>
 800b6ca:	4638      	mov	r0, r7
 800b6cc:	1d1c      	adds	r4, r3, #4
 800b6ce:	f7ff fe2d 	bl	800b32c <_RemoveFreeBlock>
 800b6d2:	68f3      	ldr	r3, [r6, #12]
 800b6d4:	6878      	ldr	r0, [r7, #4]
 800b6d6:	1b5b      	subs	r3, r3, r5
 800b6d8:	60f3      	str	r3, [r6, #12]
 800b6da:	6973      	ldr	r3, [r6, #20]
 800b6dc:	1b64      	subs	r4, r4, r5
 800b6de:	442b      	add	r3, r5
 800b6e0:	1b40      	subs	r0, r0, r5
 800b6e2:	443c      	add	r4, r7
 800b6e4:	6173      	str	r3, [r6, #20]
 800b6e6:	d002      	beq.n	800b6ee <GUI_ALLOC_GetFixedBlock+0x7e>
 800b6e8:	4639      	mov	r1, r7
 800b6ea:	f7ff fe3f 	bl	800b36c <_AddFreeMemory>
 800b6ee:	f844 5c04 	str.w	r5, [r4, #-4]
 800b6f2:	e00a      	b.n	800b70a <GUI_ALLOC_GetFixedBlock+0x9a>
 800b6f4:	6823      	ldr	r3, [r4, #0]
 800b6f6:	b10b      	cbz	r3, 800b6fc <GUI_ALLOC_GetFixedBlock+0x8c>
 800b6f8:	6861      	ldr	r1, [r4, #4]
 800b6fa:	6059      	str	r1, [r3, #4]
 800b6fc:	6861      	ldr	r1, [r4, #4]
 800b6fe:	b101      	cbz	r1, 800b702 <GUI_ALLOC_GetFixedBlock+0x92>
 800b700:	600b      	str	r3, [r1, #0]
 800b702:	42a2      	cmp	r2, r4
 800b704:	d101      	bne.n	800b70a <GUI_ALLOC_GetFixedBlock+0x9a>
 800b706:	6823      	ldr	r3, [r4, #0]
 800b708:	63f3      	str	r3, [r6, #60]	; 0x3c
 800b70a:	4620      	mov	r0, r4
 800b70c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b710:	20002d38 	.word	0x20002d38

0800b714 <GUI_ALLOC_GetMaxSize>:
 800b714:	b508      	push	{r3, lr}
 800b716:	f7ff ff79 	bl	800b60c <_InitOnce>
 800b71a:	2200      	movs	r2, #0
 800b71c:	4b0b      	ldr	r3, [pc, #44]	; (800b74c <GUI_ALLOC_GetMaxSize+0x38>)
 800b71e:	4413      	add	r3, r2
 800b720:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b724:	b113      	cbz	r3, 800b72c <GUI_ALLOC_GetMaxSize+0x18>
 800b726:	689b      	ldr	r3, [r3, #8]
 800b728:	2000      	movs	r0, #0
 800b72a:	e00b      	b.n	800b744 <GUI_ALLOC_GetMaxSize+0x30>
 800b72c:	3a08      	subs	r2, #8
 800b72e:	f112 0f80 	cmn.w	r2, #128	; 0x80
 800b732:	d1f3      	bne.n	800b71c <GUI_ALLOC_GetMaxSize+0x8>
 800b734:	e7f8      	b.n	800b728 <GUI_ALLOC_GetMaxSize+0x14>
 800b736:	685a      	ldr	r2, [r3, #4]
 800b738:	689b      	ldr	r3, [r3, #8]
 800b73a:	4290      	cmp	r0, r2
 800b73c:	bf38      	it	cc
 800b73e:	4610      	movcc	r0, r2
 800b740:	b113      	cbz	r3, 800b748 <GUI_ALLOC_GetMaxSize+0x34>
 800b742:	689b      	ldr	r3, [r3, #8]
 800b744:	2b00      	cmp	r3, #0
 800b746:	d1f6      	bne.n	800b736 <GUI_ALLOC_GetMaxSize+0x22>
 800b748:	380c      	subs	r0, #12
 800b74a:	bd08      	pop	{r3, pc}
 800b74c:	20002d38 	.word	0x20002d38

0800b750 <GUI_ALLOC_RequestSize>:
 800b750:	b508      	push	{r3, lr}
 800b752:	f7ff ffdf 	bl	800b714 <GUI_ALLOC_GetMaxSize>
 800b756:	f5b0 0f80 	cmp.w	r0, #4194304	; 0x400000
 800b75a:	f04f 0364 	mov.w	r3, #100	; 0x64
 800b75e:	4a06      	ldr	r2, [pc, #24]	; (800b778 <GUI_ALLOC_RequestSize+0x28>)
 800b760:	d904      	bls.n	800b76c <GUI_ALLOC_RequestSize+0x1c>
 800b762:	fb90 f0f3 	sdiv	r0, r0, r3
 800b766:	6a13      	ldr	r3, [r2, #32]
 800b768:	4358      	muls	r0, r3
 800b76a:	bd08      	pop	{r3, pc}
 800b76c:	6a12      	ldr	r2, [r2, #32]
 800b76e:	4350      	muls	r0, r2
 800b770:	fbb0 f0f3 	udiv	r0, r0, r3
 800b774:	bd08      	pop	{r3, pc}
 800b776:	bf00      	nop
 800b778:	20002d38 	.word	0x20002d38

0800b77c <_Alloc>:
 800b77c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b780:	4d38      	ldr	r5, [pc, #224]	; (800b864 <_Alloc+0xe8>)
 800b782:	4604      	mov	r4, r0
 800b784:	f7ff ff42 	bl	800b60c <_InitOnce>
 800b788:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 800b78a:	682b      	ldr	r3, [r5, #0]
 800b78c:	42bc      	cmp	r4, r7
 800b78e:	bf24      	itt	cs
 800b790:	1ce7      	addcs	r7, r4, #3
 800b792:	f027 0703 	biccs.w	r7, r7, #3
 800b796:	370c      	adds	r7, #12
 800b798:	429f      	cmp	r7, r3
 800b79a:	4c32      	ldr	r4, [pc, #200]	; (800b864 <_Alloc+0xe8>)
 800b79c:	d83e      	bhi.n	800b81c <_Alloc+0xa0>
 800b79e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b7a0:	6862      	ldr	r2, [r4, #4]
 800b7a2:	429a      	cmp	r2, r3
 800b7a4:	d90f      	bls.n	800b7c6 <_Alloc+0x4a>
 800b7a6:	686b      	ldr	r3, [r5, #4]
 800b7a8:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 800b7aa:	3b01      	subs	r3, #1
 800b7ac:	606b      	str	r3, [r5, #4]
 800b7ae:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800b7b0:	ea4f 09c6 	mov.w	r9, r6, lsl #3
 800b7b4:	eb03 0209 	add.w	r2, r3, r9
 800b7b8:	6852      	ldr	r2, [r2, #4]
 800b7ba:	626a      	str	r2, [r5, #36]	; 0x24
 800b7bc:	2201      	movs	r2, #1
 800b7be:	f803 2036 	strb.w	r2, [r3, r6, lsl #3]
 800b7c2:	b956      	cbnz	r6, 800b7da <_Alloc+0x5e>
 800b7c4:	e02a      	b.n	800b81c <_Alloc+0xa0>
 800b7c6:	3b01      	subs	r3, #1
 800b7c8:	6323      	str	r3, [r4, #48]	; 0x30
 800b7ca:	f7ff fecf 	bl	800b56c <_EnlargeBlocks>
 800b7ce:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b7d0:	3301      	adds	r3, #1
 800b7d2:	6323      	str	r3, [r4, #48]	; 0x30
 800b7d4:	2800      	cmp	r0, #0
 800b7d6:	d0e6      	beq.n	800b7a6 <_Alloc+0x2a>
 800b7d8:	e020      	b.n	800b81c <_Alloc+0xa0>
 800b7da:	230f      	movs	r3, #15
 800b7dc:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 800b7e0:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800b7e2:	4297      	cmp	r7, r2
 800b7e4:	d20c      	bcs.n	800b800 <_Alloc+0x84>
 800b7e6:	f113 33ff 	adds.w	r3, r3, #4294967295
 800b7ea:	d2f7      	bcs.n	800b7dc <_Alloc+0x60>
 800b7ec:	e008      	b.n	800b800 <_Alloc+0x84>
 800b7ee:	6894      	ldr	r4, [r2, #8]
 800b7f0:	b12c      	cbz	r4, 800b7fe <_Alloc+0x82>
 800b7f2:	6862      	ldr	r2, [r4, #4]
 800b7f4:	4297      	cmp	r7, r2
 800b7f6:	d914      	bls.n	800b822 <_Alloc+0xa6>
 800b7f8:	68a2      	ldr	r2, [r4, #8]
 800b7fa:	2a00      	cmp	r2, #0
 800b7fc:	d1f7      	bne.n	800b7ee <_Alloc+0x72>
 800b7fe:	3301      	adds	r3, #1
 800b800:	2b0f      	cmp	r3, #15
 800b802:	d803      	bhi.n	800b80c <_Alloc+0x90>
 800b804:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 800b808:	6c52      	ldr	r2, [r2, #68]	; 0x44
 800b80a:	e7f6      	b.n	800b7fa <_Alloc+0x7e>
 800b80c:	4638      	mov	r0, r7
 800b80e:	f7ff fdfd 	bl	800b40c <_RemoveHoles>
 800b812:	2800      	cmp	r0, #0
 800b814:	d0e1      	beq.n	800b7da <_Alloc+0x5e>
 800b816:	4630      	mov	r0, r6
 800b818:	f7ff fd76 	bl	800b308 <_PushFreeBlock>
 800b81c:	2000      	movs	r0, #0
 800b81e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b822:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800b826:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800b828:	ebc7 0208 	rsb	r2, r7, r8
 800b82c:	330c      	adds	r3, #12
 800b82e:	4620      	mov	r0, r4
 800b830:	429a      	cmp	r2, r3
 800b832:	bf38      	it	cc
 800b834:	4647      	movcc	r7, r8
 800b836:	f7ff fd79 	bl	800b32c <_RemoveFreeBlock>
 800b83a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800b83c:	444b      	add	r3, r9
 800b83e:	19e1      	adds	r1, r4, r7
 800b840:	605c      	str	r4, [r3, #4]
 800b842:	45b8      	cmp	r8, r7
 800b844:	f04f 0300 	mov.w	r3, #0
 800b848:	e884 00c0 	stmia.w	r4, {r6, r7}
 800b84c:	60a3      	str	r3, [r4, #8]
 800b84e:	6124      	str	r4, [r4, #16]
 800b850:	f841 7c04 	str.w	r7, [r1, #-4]
 800b854:	dd03      	ble.n	800b85e <_Alloc+0xe2>
 800b856:	ebc7 0008 	rsb	r0, r7, r8
 800b85a:	f7ff fd87 	bl	800b36c <_AddFreeMemory>
 800b85e:	4630      	mov	r0, r6
 800b860:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b864:	20002d38 	.word	0x20002d38

0800b868 <GUI_ALLOC_AllocNoInit>:
 800b868:	b108      	cbz	r0, 800b86e <GUI_ALLOC_AllocNoInit+0x6>
 800b86a:	f7ff bf87 	b.w	800b77c <_Alloc>
 800b86e:	4770      	bx	lr

0800b870 <GUI_ALLOC_FreePtr>:
 800b870:	b510      	push	{r4, lr}
 800b872:	4604      	mov	r4, r0
 800b874:	6800      	ldr	r0, [r0, #0]
 800b876:	f7ff fe65 	bl	800b544 <GUI_ALLOC_Free>
 800b87a:	2300      	movs	r3, #0
 800b87c:	6023      	str	r3, [r4, #0]
 800b87e:	bd10      	pop	{r4, pc}

0800b880 <GUI_ALLOC_AllocInit>:
 800b880:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b882:	4605      	mov	r5, r0
 800b884:	460c      	mov	r4, r1
 800b886:	b909      	cbnz	r1, 800b88c <GUI_ALLOC_AllocInit+0xc>
 800b888:	2000      	movs	r0, #0
 800b88a:	e014      	b.n	800b8b6 <GUI_ALLOC_AllocInit+0x36>
 800b88c:	4608      	mov	r0, r1
 800b88e:	f7ff ffeb 	bl	800b868 <GUI_ALLOC_AllocNoInit>
 800b892:	4606      	mov	r6, r0
 800b894:	2800      	cmp	r0, #0
 800b896:	d0f7      	beq.n	800b888 <GUI_ALLOC_AllocInit+0x8>
 800b898:	f7ff fe1a 	bl	800b4d0 <GUI_ALLOC_LockH>
 800b89c:	9001      	str	r0, [sp, #4]
 800b89e:	b10d      	cbz	r5, 800b8a4 <GUI_ALLOC_AllocInit+0x24>
 800b8a0:	4b06      	ldr	r3, [pc, #24]	; (800b8bc <GUI_ALLOC_AllocInit+0x3c>)
 800b8a2:	e000      	b.n	800b8a6 <GUI_ALLOC_AllocInit+0x26>
 800b8a4:	4b06      	ldr	r3, [pc, #24]	; (800b8c0 <GUI_ALLOC_AllocInit+0x40>)
 800b8a6:	681b      	ldr	r3, [r3, #0]
 800b8a8:	4629      	mov	r1, r5
 800b8aa:	4622      	mov	r2, r4
 800b8ac:	4798      	blx	r3
 800b8ae:	a801      	add	r0, sp, #4
 800b8b0:	f7ff fe1c 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800b8b4:	4630      	mov	r0, r6
 800b8b6:	b002      	add	sp, #8
 800b8b8:	bd70      	pop	{r4, r5, r6, pc}
 800b8ba:	bf00      	nop
 800b8bc:	200000a8 	.word	0x200000a8
 800b8c0:	200000a4 	.word	0x200000a4

0800b8c4 <GUI_ALLOC_AllocZero>:
 800b8c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b8c6:	4605      	mov	r5, r0
 800b8c8:	f7ff ffce 	bl	800b868 <GUI_ALLOC_AllocNoInit>
 800b8cc:	4606      	mov	r6, r0
 800b8ce:	b160      	cbz	r0, 800b8ea <GUI_ALLOC_AllocZero+0x26>
 800b8d0:	f7ff fdfe 	bl	800b4d0 <GUI_ALLOC_LockH>
 800b8d4:	ac02      	add	r4, sp, #8
 800b8d6:	4b06      	ldr	r3, [pc, #24]	; (800b8f0 <GUI_ALLOC_AllocZero+0x2c>)
 800b8d8:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b8dc:	681b      	ldr	r3, [r3, #0]
 800b8de:	2100      	movs	r1, #0
 800b8e0:	462a      	mov	r2, r5
 800b8e2:	4798      	blx	r3
 800b8e4:	4620      	mov	r0, r4
 800b8e6:	f7ff fe01 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800b8ea:	4630      	mov	r0, r6
 800b8ec:	b002      	add	sp, #8
 800b8ee:	bd70      	pop	{r4, r5, r6, pc}
 800b8f0:	200000a4 	.word	0x200000a4

0800b8f4 <GUI_ALLOC_Realloc>:
 800b8f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b8f6:	4604      	mov	r4, r0
 800b8f8:	4608      	mov	r0, r1
 800b8fa:	460e      	mov	r6, r1
 800b8fc:	f7ff ffb4 	bl	800b868 <GUI_ALLOC_AllocNoInit>
 800b900:	4605      	mov	r5, r0
 800b902:	b300      	cbz	r0, 800b946 <GUI_ALLOC_Realloc+0x52>
 800b904:	b1fc      	cbz	r4, 800b946 <GUI_ALLOC_Realloc+0x52>
 800b906:	4620      	mov	r0, r4
 800b908:	f7ff fe10 	bl	800b52c <GUI_ALLOC_GetSize>
 800b90c:	42b0      	cmp	r0, r6
 800b90e:	bfb4      	ite	lt
 800b910:	4607      	movlt	r7, r0
 800b912:	4637      	movge	r7, r6
 800b914:	4628      	mov	r0, r5
 800b916:	f7ff fddb 	bl	800b4d0 <GUI_ALLOC_LockH>
 800b91a:	9000      	str	r0, [sp, #0]
 800b91c:	4620      	mov	r0, r4
 800b91e:	f7ff fdd7 	bl	800b4d0 <GUI_ALLOC_LockH>
 800b922:	ae02      	add	r6, sp, #8
 800b924:	4b09      	ldr	r3, [pc, #36]	; (800b94c <GUI_ALLOC_Realloc+0x58>)
 800b926:	9001      	str	r0, [sp, #4]
 800b928:	4601      	mov	r1, r0
 800b92a:	681b      	ldr	r3, [r3, #0]
 800b92c:	f856 0d08 	ldr.w	r0, [r6, #-8]!
 800b930:	463a      	mov	r2, r7
 800b932:	4798      	blx	r3
 800b934:	4668      	mov	r0, sp
 800b936:	f7ff fdd9 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800b93a:	a801      	add	r0, sp, #4
 800b93c:	f7ff fdd6 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800b940:	4620      	mov	r0, r4
 800b942:	f7ff fdff 	bl	800b544 <GUI_ALLOC_Free>
 800b946:	4628      	mov	r0, r5
 800b948:	b003      	add	sp, #12
 800b94a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b94c:	200000a8 	.word	0x200000a8

0800b950 <GUI_DrawRect>:
 800b950:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b954:	4c1e      	ldr	r4, [pc, #120]	; (800b9d0 <GUI_DrawRect+0x80>)
 800b956:	f8d4 e000 	ldr.w	lr, [r4]
 800b95a:	f8de 404c 	ldr.w	r4, [lr, #76]	; 0x4c
 800b95e:	f8de 6050 	ldr.w	r6, [lr, #80]	; 0x50
 800b962:	1905      	adds	r5, r0, r4
 800b964:	4414      	add	r4, r2
 800b966:	f89e 2018 	ldrb.w	r2, [lr, #24]
 800b96a:	3a01      	subs	r2, #1
 800b96c:	b292      	uxth	r2, r2
 800b96e:	198f      	adds	r7, r1, r6
 800b970:	441e      	add	r6, r3
 800b972:	1aab      	subs	r3, r5, r2
 800b974:	f8ad 3000 	strh.w	r3, [sp]
 800b978:	1913      	adds	r3, r2, r4
 800b97a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b97e:	4668      	mov	r0, sp
 800b980:	1abb      	subs	r3, r7, r2
 800b982:	4432      	add	r2, r6
 800b984:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b988:	f8ad 2006 	strh.w	r2, [sp, #6]
 800b98c:	f7fa fa24 	bl	8005dd8 <WM__InitIVRSearch>
 800b990:	b1d0      	cbz	r0, 800b9c8 <GUI_DrawRect+0x78>
 800b992:	4628      	mov	r0, r5
 800b994:	4639      	mov	r1, r7
 800b996:	4622      	mov	r2, r4
 800b998:	f7fc fefa 	bl	8008790 <LCD_DrawHLine>
 800b99c:	f107 0901 	add.w	r9, r7, #1
 800b9a0:	4628      	mov	r0, r5
 800b9a2:	4631      	mov	r1, r6
 800b9a4:	4622      	mov	r2, r4
 800b9a6:	f106 38ff 	add.w	r8, r6, #4294967295
 800b9aa:	f7fc fef1 	bl	8008790 <LCD_DrawHLine>
 800b9ae:	4628      	mov	r0, r5
 800b9b0:	4649      	mov	r1, r9
 800b9b2:	4642      	mov	r2, r8
 800b9b4:	f7fc ff12 	bl	80087dc <LCD_DrawVLine>
 800b9b8:	4620      	mov	r0, r4
 800b9ba:	4649      	mov	r1, r9
 800b9bc:	4642      	mov	r2, r8
 800b9be:	f7fc ff0d 	bl	80087dc <LCD_DrawVLine>
 800b9c2:	f7fa f947 	bl	8005c54 <WM__GetNextIVR>
 800b9c6:	e7e3      	b.n	800b990 <GUI_DrawRect+0x40>
 800b9c8:	b003      	add	sp, #12
 800b9ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b9ce:	bf00      	nop
 800b9d0:	200000b8 	.word	0x200000b8

0800b9d4 <LCD_Index2Color_M565>:
 800b9d4:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 800b9d8:	4b06      	ldr	r3, [pc, #24]	; (800b9f4 <LCD_Index2Color_M565+0x20>)
 800b9da:	f000 021f 	and.w	r2, r0, #31
 800b9de:	f3c0 1045 	ubfx	r0, r0, #5, #6
 800b9e2:	5c9a      	ldrb	r2, [r3, r2]
 800b9e4:	5c5b      	ldrb	r3, [r3, r1]
 800b9e6:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 800b9ea:	4a03      	ldr	r2, [pc, #12]	; (800b9f8 <LCD_Index2Color_M565+0x24>)
 800b9ec:	5c10      	ldrb	r0, [r2, r0]
 800b9ee:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 800b9f2:	4770      	bx	lr
 800b9f4:	08012a96 	.word	0x08012a96
 800b9f8:	08012ab6 	.word	0x08012ab6

0800b9fc <_Color2Index_M565>:
 800b9fc:	f3c0 4107 	ubfx	r1, r0, #16, #8
 800ba00:	4b06      	ldr	r3, [pc, #24]	; (800ba1c <_Color2Index_M565+0x20>)
 800ba02:	b2c2      	uxtb	r2, r0
 800ba04:	f3c0 2007 	ubfx	r0, r0, #8, #8
 800ba08:	5c9a      	ldrb	r2, [r3, r2]
 800ba0a:	5c5b      	ldrb	r3, [r3, r1]
 800ba0c:	eb03 23c2 	add.w	r3, r3, r2, lsl #11
 800ba10:	4a03      	ldr	r2, [pc, #12]	; (800ba20 <_Color2Index_M565+0x24>)
 800ba12:	5c10      	ldrb	r0, [r2, r0]
 800ba14:	eb03 1040 	add.w	r0, r3, r0, lsl #5
 800ba18:	4770      	bx	lr
 800ba1a:	bf00      	nop
 800ba1c:	08012996 	.word	0x08012996
 800ba20:	08012af6 	.word	0x08012af6

0800ba24 <_GetIndexMask_M565>:
 800ba24:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800ba28:	4770      	bx	lr
	...

0800ba2c <_Color2IndexBulk>:
 800ba2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ba2e:	4f0f      	ldr	r7, [pc, #60]	; (800ba6c <_Color2IndexBulk+0x40>)
 800ba30:	683f      	ldr	r7, [r7, #0]
 800ba32:	4606      	mov	r6, r0
 800ba34:	460d      	mov	r5, r1
 800ba36:	4614      	mov	r4, r2
 800ba38:	469c      	mov	ip, r3
 800ba3a:	b10f      	cbz	r7, 800ba40 <_Color2IndexBulk+0x14>
 800ba3c:	47b8      	blx	r7
 800ba3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ba40:	f856 2b04 	ldr.w	r2, [r6], #4
 800ba44:	490a      	ldr	r1, [pc, #40]	; (800ba70 <_Color2IndexBulk+0x44>)
 800ba46:	b2d3      	uxtb	r3, r2
 800ba48:	3c01      	subs	r4, #1
 800ba4a:	5cc8      	ldrb	r0, [r1, r3]
 800ba4c:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800ba50:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800ba54:	5ccb      	ldrb	r3, [r1, r3]
 800ba56:	4907      	ldr	r1, [pc, #28]	; (800ba74 <_Color2IndexBulk+0x48>)
 800ba58:	5c8a      	ldrb	r2, [r1, r2]
 800ba5a:	eb03 23c0 	add.w	r3, r3, r0, lsl #11
 800ba5e:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 800ba62:	802b      	strh	r3, [r5, #0]
 800ba64:	4465      	add	r5, ip
 800ba66:	d1eb      	bne.n	800ba40 <_Color2IndexBulk+0x14>
 800ba68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ba6a:	bf00      	nop
 800ba6c:	20002c3c 	.word	0x20002c3c
 800ba70:	08012996 	.word	0x08012996
 800ba74:	08012af6 	.word	0x08012af6

0800ba78 <_Index2ColorBulk>:
 800ba78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ba7a:	4e13      	ldr	r6, [pc, #76]	; (800bac8 <_Index2ColorBulk+0x50>)
 800ba7c:	6836      	ldr	r6, [r6, #0]
 800ba7e:	4684      	mov	ip, r0
 800ba80:	4614      	mov	r4, r2
 800ba82:	461d      	mov	r5, r3
 800ba84:	b10e      	cbz	r6, 800ba8a <_Index2ColorBulk+0x12>
 800ba86:	47b0      	blx	r6
 800ba88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ba8a:	1e50      	subs	r0, r2, #1
 800ba8c:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 800ba90:	3a01      	subs	r2, #1
 800ba92:	fb03 c000 	mla	r0, r3, r0, ip
 800ba96:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800ba9a:	8802      	ldrh	r2, [r0, #0]
 800ba9c:	4b0b      	ldr	r3, [pc, #44]	; (800bacc <_Index2ColorBulk+0x54>)
 800ba9e:	f002 061f 	and.w	r6, r2, #31
 800baa2:	0ad7      	lsrs	r7, r2, #11
 800baa4:	5d9e      	ldrb	r6, [r3, r6]
 800baa6:	5ddb      	ldrb	r3, [r3, r7]
 800baa8:	f3c2 1245 	ubfx	r2, r2, #5, #6
 800baac:	eb03 4306 	add.w	r3, r3, r6, lsl #16
 800bab0:	4e07      	ldr	r6, [pc, #28]	; (800bad0 <_Index2ColorBulk+0x58>)
 800bab2:	5cb2      	ldrb	r2, [r6, r2]
 800bab4:	3c01      	subs	r4, #1
 800bab6:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800baba:	f841 3904 	str.w	r3, [r1], #-4
 800babe:	ebc5 0000 	rsb	r0, r5, r0
 800bac2:	d1ea      	bne.n	800ba9a <_Index2ColorBulk+0x22>
 800bac4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bac6:	bf00      	nop
 800bac8:	20002c38 	.word	0x20002c38
 800bacc:	08012a96 	.word	0x08012a96
 800bad0:	08012ab6 	.word	0x08012ab6

0800bad4 <LCD_Index2Color_888>:
 800bad4:	4770      	bx	lr

0800bad6 <LCD_Index2Color_8888>:
 800bad6:	4770      	bx	lr

0800bad8 <_Color2Index_8888>:
 800bad8:	4770      	bx	lr

0800bada <_GetIndexMask_8888>:
 800bada:	f04f 30ff 	mov.w	r0, #4294967295
 800bade:	4770      	bx	lr

0800bae0 <_Color2IndexBulk>:
 800bae0:	b510      	push	{r4, lr}
 800bae2:	f850 4b04 	ldr.w	r4, [r0], #4
 800bae6:	600c      	str	r4, [r1, #0]
 800bae8:	3a01      	subs	r2, #1
 800baea:	4419      	add	r1, r3
 800baec:	d1f9      	bne.n	800bae2 <_Color2IndexBulk+0x2>
 800baee:	bd10      	pop	{r4, pc}

0800baf0 <_Index2ColorBulk>:
 800baf0:	b510      	push	{r4, lr}
 800baf2:	6804      	ldr	r4, [r0, #0]
 800baf4:	f841 4b04 	str.w	r4, [r1], #4
 800baf8:	3a01      	subs	r2, #1
 800bafa:	4418      	add	r0, r3
 800bafc:	d1f9      	bne.n	800baf2 <_Index2ColorBulk+0x2>
 800bafe:	bd10      	pop	{r4, pc}

0800bb00 <_DrawDown>:
 800bb00:	4770      	bx	lr

0800bb02 <_DrawUp>:
 800bb02:	4770      	bx	lr

0800bb04 <_DrawDownRect>:
 800bb04:	4770      	bx	lr

0800bb06 <_DrawUpRect>:
 800bb06:	4770      	bx	lr

0800bb08 <_DrawFlat>:
 800bb08:	4770      	bx	lr

0800bb0a <_EffectRequiresRedraw>:
 800bb0a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bb0c:	460d      	mov	r5, r1
 800bb0e:	f100 0108 	add.w	r1, r0, #8
 800bb12:	4602      	mov	r2, r0
 800bb14:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800bb16:	c903      	ldmia	r1, {r0, r1}
 800bb18:	681c      	ldr	r4, [r3, #0]
 800bb1a:	e88d 0003 	stmia.w	sp, {r0, r1}
 800bb1e:	4610      	mov	r0, r2
 800bb20:	4669      	mov	r1, sp
 800bb22:	f7f8 fb6f 	bl	8004204 <WM__Screen2Client>
 800bb26:	f9b5 2000 	ldrsh.w	r2, [r5]
 800bb2a:	f9bd 3000 	ldrsh.w	r3, [sp]
 800bb2e:	4422      	add	r2, r4
 800bb30:	429a      	cmp	r2, r3
 800bb32:	dc17      	bgt.n	800bb64 <_EffectRequiresRedraw+0x5a>
 800bb34:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800bb38:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bb3c:	1b12      	subs	r2, r2, r4
 800bb3e:	429a      	cmp	r2, r3
 800bb40:	db10      	blt.n	800bb64 <_EffectRequiresRedraw+0x5a>
 800bb42:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800bb46:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800bb4a:	4422      	add	r2, r4
 800bb4c:	429a      	cmp	r2, r3
 800bb4e:	dc09      	bgt.n	800bb64 <_EffectRequiresRedraw+0x5a>
 800bb50:	f9b5 0006 	ldrsh.w	r0, [r5, #6]
 800bb54:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bb58:	1b04      	subs	r4, r0, r4
 800bb5a:	429c      	cmp	r4, r3
 800bb5c:	bfac      	ite	ge
 800bb5e:	2000      	movge	r0, #0
 800bb60:	2001      	movlt	r0, #1
 800bb62:	e000      	b.n	800bb66 <_EffectRequiresRedraw+0x5c>
 800bb64:	2001      	movs	r0, #1
 800bb66:	b003      	add	sp, #12
 800bb68:	bd30      	pop	{r4, r5, pc}

0800bb6a <WIDGET__RotateRect90>:
 800bb6a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800bb6e:	b570      	push	{r4, r5, r6, lr}
 800bb70:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800bb74:	8815      	ldrh	r5, [r2, #0]
 800bb76:	88d0      	ldrh	r0, [r2, #6]
 800bb78:	8894      	ldrh	r4, [r2, #4]
 800bb7a:	8852      	ldrh	r2, [r2, #2]
 800bb7c:	804d      	strh	r5, [r1, #2]
 800bb7e:	1af3      	subs	r3, r6, r3
 800bb80:	b29b      	uxth	r3, r3
 800bb82:	1a18      	subs	r0, r3, r0
 800bb84:	1a9b      	subs	r3, r3, r2
 800bb86:	8008      	strh	r0, [r1, #0]
 800bb88:	808b      	strh	r3, [r1, #4]
 800bb8a:	80cc      	strh	r4, [r1, #6]
 800bb8c:	bd70      	pop	{r4, r5, r6, pc}

0800bb8e <WIDGET__GetClientRect>:
 800bb8e:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800bb90:	071b      	lsls	r3, r3, #28
 800bb92:	b513      	push	{r0, r1, r4, lr}
 800bb94:	460c      	mov	r4, r1
 800bb96:	d50f      	bpl.n	800bbb8 <WIDGET__GetClientRect+0x2a>
 800bb98:	4668      	mov	r0, sp
 800bb9a:	f7f8 fdeb 	bl	8004774 <WM_GetClientRect>
 800bb9e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bba2:	8023      	strh	r3, [r4, #0]
 800bba4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bba8:	80a3      	strh	r3, [r4, #4]
 800bbaa:	f8bd 3000 	ldrh.w	r3, [sp]
 800bbae:	8063      	strh	r3, [r4, #2]
 800bbb0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bbb4:	80e3      	strh	r3, [r4, #6]
 800bbb6:	e002      	b.n	800bbbe <WIDGET__GetClientRect+0x30>
 800bbb8:	4608      	mov	r0, r1
 800bbba:	f7f8 fddb 	bl	8004774 <WM_GetClientRect>
 800bbbe:	b002      	add	sp, #8
 800bbc0:	bd10      	pop	{r4, pc}

0800bbc2 <WIDGET__GetInsideRect>:
 800bbc2:	b538      	push	{r3, r4, r5, lr}
 800bbc4:	4604      	mov	r4, r0
 800bbc6:	460d      	mov	r5, r1
 800bbc8:	f7f9 fd50 	bl	800566c <WM__GetClientRectWin>
 800bbcc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800bbce:	4628      	mov	r0, r5
 800bbd0:	4629      	mov	r1, r5
 800bbd2:	681a      	ldr	r2, [r3, #0]
 800bbd4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bbd8:	f7fd b9a5 	b.w	8008f26 <GUI__ReduceRect>

0800bbdc <WIDGET__Init>:
 800bbdc:	4b02      	ldr	r3, [pc, #8]	; (800bbe8 <WIDGET__Init+0xc>)
 800bbde:	8642      	strh	r2, [r0, #50]	; 0x32
 800bbe0:	681b      	ldr	r3, [r3, #0]
 800bbe2:	62c3      	str	r3, [r0, #44]	; 0x2c
 800bbe4:	8601      	strh	r1, [r0, #48]	; 0x30
 800bbe6:	4770      	bx	lr
 800bbe8:	200000c8 	.word	0x200000c8

0800bbec <WIDGET_SetState>:
 800bbec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bbee:	460c      	mov	r4, r1
 800bbf0:	4605      	mov	r5, r0
 800bbf2:	f7ff fc6d 	bl	800b4d0 <GUI_ALLOC_LockH>
 800bbf6:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800bbf8:	9001      	str	r0, [sp, #4]
 800bbfa:	4294      	cmp	r4, r2
 800bbfc:	d003      	beq.n	800bc06 <WIDGET_SetState+0x1a>
 800bbfe:	8644      	strh	r4, [r0, #50]	; 0x32
 800bc00:	4628      	mov	r0, r5
 800bc02:	f7f9 fe7d 	bl	8005900 <WM_InvalidateWindow>
 800bc06:	a801      	add	r0, sp, #4
 800bc08:	f7ff fc70 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800bc0c:	b003      	add	sp, #12
 800bc0e:	bd30      	pop	{r4, r5, pc}

0800bc10 <WIDGET_OrState>:
 800bc10:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bc12:	460c      	mov	r4, r1
 800bc14:	4605      	mov	r5, r0
 800bc16:	b178      	cbz	r0, 800bc38 <WIDGET_OrState+0x28>
 800bc18:	f7ff fc5a 	bl	800b4d0 <GUI_ALLOC_LockH>
 800bc1c:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800bc1e:	9001      	str	r0, [sp, #4]
 800bc20:	ea04 0102 	and.w	r1, r4, r2
 800bc24:	428c      	cmp	r4, r1
 800bc26:	d004      	beq.n	800bc32 <WIDGET_OrState+0x22>
 800bc28:	4314      	orrs	r4, r2
 800bc2a:	8644      	strh	r4, [r0, #50]	; 0x32
 800bc2c:	4628      	mov	r0, r5
 800bc2e:	f7f9 fe67 	bl	8005900 <WM_InvalidateWindow>
 800bc32:	a801      	add	r0, sp, #4
 800bc34:	f7ff fc5a 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800bc38:	b003      	add	sp, #12
 800bc3a:	bd30      	pop	{r4, r5, pc}

0800bc3c <WIDGET_AndState>:
 800bc3c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bc3e:	460d      	mov	r5, r1
 800bc40:	4604      	mov	r4, r0
 800bc42:	b170      	cbz	r0, 800bc62 <WIDGET_AndState+0x26>
 800bc44:	f7ff fc44 	bl	800b4d0 <GUI_ALLOC_LockH>
 800bc48:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800bc4a:	9001      	str	r0, [sp, #4]
 800bc4c:	ea22 0105 	bic.w	r1, r2, r5
 800bc50:	428a      	cmp	r2, r1
 800bc52:	d003      	beq.n	800bc5c <WIDGET_AndState+0x20>
 800bc54:	8641      	strh	r1, [r0, #50]	; 0x32
 800bc56:	4620      	mov	r0, r4
 800bc58:	f7f9 fe52 	bl	8005900 <WM_InvalidateWindow>
 800bc5c:	a801      	add	r0, sp, #4
 800bc5e:	f7ff fc45 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800bc62:	b003      	add	sp, #12
 800bc64:	bd30      	pop	{r4, r5, pc}

0800bc66 <WIDGET_HandleActive>:
 800bc66:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bc68:	460d      	mov	r5, r1
 800bc6a:	b085      	sub	sp, #20
 800bc6c:	4606      	mov	r6, r0
 800bc6e:	2800      	cmp	r0, #0
 800bc70:	f000 8095 	beq.w	800bd9e <WIDGET_HandleActive+0x138>
 800bc74:	f7ff fc2c 	bl	800b4d0 <GUI_ALLOC_LockH>
 800bc78:	682b      	ldr	r3, [r5, #0]
 800bc7a:	9002      	str	r0, [sp, #8]
 800bc7c:	2b16      	cmp	r3, #22
 800bc7e:	d054      	beq.n	800bd2a <WIDGET_HandleActive+0xc4>
 800bc80:	dc0c      	bgt.n	800bc9c <WIDGET_HandleActive+0x36>
 800bc82:	2b11      	cmp	r3, #17
 800bc84:	d033      	beq.n	800bcee <WIDGET_HandleActive+0x88>
 800bc86:	dc02      	bgt.n	800bc8e <WIDGET_HandleActive+0x28>
 800bc88:	2b0d      	cmp	r3, #13
 800bc8a:	d040      	beq.n	800bd0e <WIDGET_HandleActive+0xa8>
 800bc8c:	e080      	b.n	800bd90 <WIDGET_HandleActive+0x12a>
 800bc8e:	2b14      	cmp	r3, #20
 800bc90:	d079      	beq.n	800bd86 <WIDGET_HandleActive+0x120>
 800bc92:	2b15      	cmp	r3, #21
 800bc94:	d17c      	bne.n	800bd90 <WIDGET_HandleActive+0x12a>
 800bc96:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 800bc9a:	e072      	b.n	800bd82 <WIDGET_HandleActive+0x11c>
 800bc9c:	2b1f      	cmp	r3, #31
 800bc9e:	d06d      	beq.n	800bd7c <WIDGET_HandleActive+0x116>
 800bca0:	dc02      	bgt.n	800bca8 <WIDGET_HandleActive+0x42>
 800bca2:	2b1e      	cmp	r3, #30
 800bca4:	d044      	beq.n	800bd30 <WIDGET_HandleActive+0xca>
 800bca6:	e073      	b.n	800bd90 <WIDGET_HandleActive+0x12a>
 800bca8:	2b31      	cmp	r3, #49	; 0x31
 800bcaa:	d01e      	beq.n	800bcea <WIDGET_HandleActive+0x84>
 800bcac:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800bcb0:	d16e      	bne.n	800bd90 <WIDGET_HandleActive+0x12a>
 800bcb2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800bcb4:	6819      	ldr	r1, [r3, #0]
 800bcb6:	68eb      	ldr	r3, [r5, #12]
 800bcb8:	62c3      	str	r3, [r0, #44]	; 0x2c
 800bcba:	681b      	ldr	r3, [r3, #0]
 800bcbc:	a802      	add	r0, sp, #8
 800bcbe:	1acd      	subs	r5, r1, r3
 800bcc0:	f7ff fc14 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800bcc4:	4630      	mov	r0, r6
 800bcc6:	f7ff fc03 	bl	800b4d0 <GUI_ALLOC_LockH>
 800bcca:	ac04      	add	r4, sp, #16
 800bccc:	4269      	negs	r1, r5
 800bcce:	f844 0d04 	str.w	r0, [r4, #-4]!
 800bcd2:	460a      	mov	r2, r1
 800bcd4:	462b      	mov	r3, r5
 800bcd6:	9500      	str	r5, [sp, #0]
 800bcd8:	f7f8 fad0 	bl	800427c <WM__UpdateChildPositions>
 800bcdc:	4620      	mov	r0, r4
 800bcde:	f7ff fc05 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800bce2:	4630      	mov	r0, r6
 800bce4:	f7f9 fe0c 	bl	8005900 <WM_InvalidateWindow>
 800bce8:	e050      	b.n	800bd8c <WIDGET_HandleActive+0x126>
 800bcea:	2400      	movs	r4, #0
 800bcec:	e041      	b.n	800bd72 <WIDGET_HandleActive+0x10c>
 800bcee:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800bcf0:	06d9      	lsls	r1, r3, #27
 800bcf2:	d54d      	bpl.n	800bd90 <WIDGET_HandleActive+0x12a>
 800bcf4:	68eb      	ldr	r3, [r5, #12]
 800bcf6:	2b00      	cmp	r3, #0
 800bcf8:	d04a      	beq.n	800bd90 <WIDGET_HandleActive+0x12a>
 800bcfa:	7a1b      	ldrb	r3, [r3, #8]
 800bcfc:	2b00      	cmp	r3, #0
 800bcfe:	d047      	beq.n	800bd90 <WIDGET_HandleActive+0x12a>
 800bd00:	a802      	add	r0, sp, #8
 800bd02:	f7ff fbf3 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800bd06:	4630      	mov	r0, r6
 800bd08:	f7f8 ffbc 	bl	8004c84 <WM_SetFocus>
 800bd0c:	e040      	b.n	800bd90 <WIDGET_HandleActive+0x12a>
 800bd0e:	68eb      	ldr	r3, [r5, #12]
 800bd10:	68db      	ldr	r3, [r3, #12]
 800bd12:	2b00      	cmp	r3, #0
 800bd14:	d03c      	beq.n	800bd90 <WIDGET_HandleActive+0x12a>
 800bd16:	7a1b      	ldrb	r3, [r3, #8]
 800bd18:	2b00      	cmp	r3, #0
 800bd1a:	d039      	beq.n	800bd90 <WIDGET_HandleActive+0x12a>
 800bd1c:	a802      	add	r0, sp, #8
 800bd1e:	f7ff fbe5 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800bd22:	4630      	mov	r0, r6
 800bd24:	f7f9 f8c8 	bl	8004eb8 <WM_BringToTop>
 800bd28:	e030      	b.n	800bd8c <WIDGET_HandleActive+0x126>
 800bd2a:	68eb      	ldr	r3, [r5, #12]
 800bd2c:	8603      	strh	r3, [r0, #48]	; 0x30
 800bd2e:	e02d      	b.n	800bd8c <WIDGET_HandleActive+0x126>
 800bd30:	68eb      	ldr	r3, [r5, #12]
 800bd32:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 800bd34:	2b01      	cmp	r3, #1
 800bd36:	d108      	bne.n	800bd4a <WIDGET_HandleActive+0xe4>
 800bd38:	06ca      	lsls	r2, r1, #27
 800bd3a:	d50d      	bpl.n	800bd58 <WIDGET_HandleActive+0xf2>
 800bd3c:	4630      	mov	r0, r6
 800bd3e:	f041 0101 	orr.w	r1, r1, #1
 800bd42:	f7ff ff53 	bl	800bbec <WIDGET_SetState>
 800bd46:	2708      	movs	r7, #8
 800bd48:	e008      	b.n	800bd5c <WIDGET_HandleActive+0xf6>
 800bd4a:	f021 0101 	bic.w	r1, r1, #1
 800bd4e:	4630      	mov	r0, r6
 800bd50:	f7ff ff4c 	bl	800bbec <WIDGET_SetState>
 800bd54:	2709      	movs	r7, #9
 800bd56:	e001      	b.n	800bd5c <WIDGET_HandleActive+0xf6>
 800bd58:	f04f 37ff 	mov.w	r7, #4294967295
 800bd5c:	a802      	add	r0, sp, #8
 800bd5e:	f7ff fbc5 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800bd62:	1c7b      	adds	r3, r7, #1
 800bd64:	f04f 0400 	mov.w	r4, #0
 800bd68:	d005      	beq.n	800bd76 <WIDGET_HandleActive+0x110>
 800bd6a:	4630      	mov	r0, r6
 800bd6c:	4639      	mov	r1, r7
 800bd6e:	f7f8 ff7e 	bl	8004c6e <WM_NotifyParent>
 800bd72:	60ec      	str	r4, [r5, #12]
 800bd74:	e00d      	b.n	800bd92 <WIDGET_HandleActive+0x12c>
 800bd76:	2301      	movs	r3, #1
 800bd78:	60eb      	str	r3, [r5, #12]
 800bd7a:	e00a      	b.n	800bd92 <WIDGET_HandleActive+0x12c>
 800bd7c:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800bd7e:	f3c3 1300 	ubfx	r3, r3, #4, #1
 800bd82:	60eb      	str	r3, [r5, #12]
 800bd84:	e002      	b.n	800bd8c <WIDGET_HandleActive+0x126>
 800bd86:	68e9      	ldr	r1, [r5, #12]
 800bd88:	f7ff ff1b 	bl	800bbc2 <WIDGET__GetInsideRect>
 800bd8c:	2400      	movs	r4, #0
 800bd8e:	e000      	b.n	800bd92 <WIDGET_HandleActive+0x12c>
 800bd90:	2401      	movs	r4, #1
 800bd92:	9b02      	ldr	r3, [sp, #8]
 800bd94:	b123      	cbz	r3, 800bda0 <WIDGET_HandleActive+0x13a>
 800bd96:	a802      	add	r0, sp, #8
 800bd98:	f7ff fba8 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800bd9c:	e000      	b.n	800bda0 <WIDGET_HandleActive+0x13a>
 800bd9e:	2401      	movs	r4, #1
 800bda0:	4620      	mov	r0, r4
 800bda2:	b005      	add	sp, #20
 800bda4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bda6 <WIDGET__SetScrollState>:
 800bda6:	b570      	push	{r4, r5, r6, lr}
 800bda8:	460d      	mov	r5, r1
 800bdaa:	21fe      	movs	r1, #254	; 0xfe
 800bdac:	4616      	mov	r6, r2
 800bdae:	4604      	mov	r4, r0
 800bdb0:	f7f8 fd62 	bl	8004878 <WM_GetDialogItem>
 800bdb4:	4629      	mov	r1, r5
 800bdb6:	f7f8 ffb3 	bl	8004d20 <WM_SetScrollState>
 800bdba:	4620      	mov	r0, r4
 800bdbc:	21ff      	movs	r1, #255	; 0xff
 800bdbe:	f7f8 fd5b 	bl	8004878 <WM_GetDialogItem>
 800bdc2:	4631      	mov	r1, r6
 800bdc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bdc8:	f7f8 bfaa 	b.w	8004d20 <WM_SetScrollState>

0800bdcc <WIDGET__DrawTriangle>:
 800bdcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bdce:	461c      	mov	r4, r3
 800bdd0:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800bdd2:	9f06      	ldr	r7, [sp, #24]
 800bdd4:	071b      	lsls	r3, r3, #28
 800bdd6:	460d      	mov	r5, r1
 800bdd8:	4616      	mov	r6, r2
 800bdda:	d50a      	bpl.n	800bdf2 <WIDGET__DrawTriangle+0x26>
 800bddc:	2c00      	cmp	r4, #0
 800bdde:	db07      	blt.n	800bdf0 <WIDGET__DrawTriangle+0x24>
 800bde0:	4628      	mov	r0, r5
 800bde2:	1b31      	subs	r1, r6, r4
 800bde4:	19a2      	adds	r2, r4, r6
 800bde6:	f7fd fff1 	bl	8009dcc <GUI_DrawHLine>
 800bdea:	3c01      	subs	r4, #1
 800bdec:	443d      	add	r5, r7
 800bdee:	e7f5      	b.n	800bddc <WIDGET__DrawTriangle+0x10>
 800bdf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bdf2:	2c00      	cmp	r4, #0
 800bdf4:	db07      	blt.n	800be06 <WIDGET__DrawTriangle+0x3a>
 800bdf6:	4628      	mov	r0, r5
 800bdf8:	1b31      	subs	r1, r6, r4
 800bdfa:	19a2      	adds	r2, r4, r6
 800bdfc:	f7fe f840 	bl	8009e80 <GUI_DrawVLine>
 800be00:	3c01      	subs	r4, #1
 800be02:	443d      	add	r5, r7
 800be04:	e7f5      	b.n	800bdf2 <WIDGET__DrawTriangle+0x26>
 800be06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800be08 <WIDGET__EFFECT_DrawDownRect>:
 800be08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800be0a:	4605      	mov	r5, r0
 800be0c:	460c      	mov	r4, r1
 800be0e:	b919      	cbnz	r1, 800be18 <WIDGET__EFFECT_DrawDownRect+0x10>
 800be10:	4668      	mov	r0, sp
 800be12:	f7f8 fcaf 	bl	8004774 <WM_GetClientRect>
 800be16:	466c      	mov	r4, sp
 800be18:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 800be1a:	071b      	lsls	r3, r3, #28
 800be1c:	d505      	bpl.n	800be2a <WIDGET__EFFECT_DrawDownRect+0x22>
 800be1e:	4622      	mov	r2, r4
 800be20:	4628      	mov	r0, r5
 800be22:	4669      	mov	r1, sp
 800be24:	f7ff fea1 	bl	800bb6a <WIDGET__RotateRect90>
 800be28:	466c      	mov	r4, sp
 800be2a:	4628      	mov	r0, r5
 800be2c:	4621      	mov	r1, r4
 800be2e:	f7ff fe6c 	bl	800bb0a <_EffectRequiresRedraw>
 800be32:	b118      	cbz	r0, 800be3c <WIDGET__EFFECT_DrawDownRect+0x34>
 800be34:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800be36:	4620      	mov	r0, r4
 800be38:	691b      	ldr	r3, [r3, #16]
 800be3a:	4798      	blx	r3
 800be3c:	b003      	add	sp, #12
 800be3e:	bd30      	pop	{r4, r5, pc}

0800be40 <WIDGET_SetEffect>:
 800be40:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800be42:	2300      	movs	r3, #0
 800be44:	9302      	str	r3, [sp, #8]
 800be46:	9103      	str	r1, [sp, #12]
 800be48:	f44f 7340 	mov.w	r3, #768	; 0x300
 800be4c:	4669      	mov	r1, sp
 800be4e:	9300      	str	r3, [sp, #0]
 800be50:	f7f9 fbfd 	bl	800564e <WM_SendMessage>
 800be54:	b005      	add	sp, #20
 800be56:	f85d fb04 	ldr.w	pc, [sp], #4

0800be5a <_DeleteTimer>:
 800be5a:	b507      	push	{r0, r1, r2, lr}
 800be5c:	f7ff fb38 	bl	800b4d0 <GUI_ALLOC_LockH>
 800be60:	9001      	str	r0, [sp, #4]
 800be62:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800be64:	f000 ff93 	bl	800cd8e <WM_DeleteTimer>
 800be68:	a802      	add	r0, sp, #8
 800be6a:	2200      	movs	r2, #0
 800be6c:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800be70:	665a      	str	r2, [r3, #100]	; 0x64
 800be72:	65da      	str	r2, [r3, #92]	; 0x5c
 800be74:	f7ff fb3a 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800be78:	b003      	add	sp, #12
 800be7a:	f85d fb04 	ldr.w	pc, [sp], #4

0800be7e <SCROLLBAR__Rect2VRect>:
 800be7e:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800be80:	071b      	lsls	r3, r3, #28
 800be82:	b510      	push	{r4, lr}
 800be84:	d512      	bpl.n	800beac <SCROLLBAR__Rect2VRect+0x2e>
 800be86:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800be8a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800be8e:	8808      	ldrh	r0, [r1, #0]
 800be90:	884c      	ldrh	r4, [r1, #2]
 800be92:	800c      	strh	r4, [r1, #0]
 800be94:	1ad3      	subs	r3, r2, r3
 800be96:	888a      	ldrh	r2, [r1, #4]
 800be98:	88cc      	ldrh	r4, [r1, #6]
 800be9a:	808c      	strh	r4, [r1, #4]
 800be9c:	3301      	adds	r3, #1
 800be9e:	b29b      	uxth	r3, r3
 800bea0:	43c0      	mvns	r0, r0
 800bea2:	43d2      	mvns	r2, r2
 800bea4:	4418      	add	r0, r3
 800bea6:	4413      	add	r3, r2
 800bea8:	80c8      	strh	r0, [r1, #6]
 800beaa:	804b      	strh	r3, [r1, #2]
 800beac:	bd10      	pop	{r4, pc}

0800beae <SCROLLBAR__InvalidatePartner>:
 800beae:	b510      	push	{r4, lr}
 800beb0:	4604      	mov	r4, r0
 800beb2:	f7f8 fd8c 	bl	80049ce <WM_GetScrollPartner>
 800beb6:	f7f9 fd23 	bl	8005900 <WM_InvalidateWindow>
 800beba:	4620      	mov	r0, r4
 800bebc:	f7f8 fd32 	bl	8004924 <WM_GetParent>
 800bec0:	2125      	movs	r1, #37	; 0x25
 800bec2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bec6:	f7f8 bec2 	b.w	8004c4e <WM_SendMessageNoPara>
	...

0800becc <SCROLLBAR_CreateUser>:
 800becc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bece:	b089      	sub	sp, #36	; 0x24
 800bed0:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800bed2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800bed4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800bed6:	b9fa      	cbnz	r2, 800bf18 <SCROLLBAR_CreateUser+0x4c>
 800bed8:	b9f3      	cbnz	r3, 800bf18 <SCROLLBAR_CreateUser+0x4c>
 800beda:	4630      	mov	r0, r6
 800bedc:	a906      	add	r1, sp, #24
 800bede:	f7f8 fcec 	bl	80048ba <WM_GetInsideRectEx>
 800bee2:	f014 0f08 	tst.w	r4, #8
 800bee6:	4b2c      	ldr	r3, [pc, #176]	; (800bf98 <SCROLLBAR_CreateUser+0xcc>)
 800bee8:	f9bd 701c 	ldrsh.w	r7, [sp, #28]
 800beec:	f9bd e01e 	ldrsh.w	lr, [sp, #30]
 800bef0:	d009      	beq.n	800bf06 <SCROLLBAR_CreateUser+0x3a>
 800bef2:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800bef6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800befa:	1c78      	adds	r0, r7, #1
 800befc:	ebc1 030e 	rsb	r3, r1, lr
 800bf00:	1a80      	subs	r0, r0, r2
 800bf02:	3301      	adds	r3, #1
 800bf04:	e008      	b.n	800bf18 <SCROLLBAR_CreateUser+0x4c>
 800bf06:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800bf0a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bf0e:	f10e 0101 	add.w	r1, lr, #1
 800bf12:	1a3a      	subs	r2, r7, r0
 800bf14:	1ac9      	subs	r1, r1, r3
 800bf16:	3201      	adds	r2, #1
 800bf18:	9600      	str	r6, [sp, #0]
 800bf1a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800bf1c:	9601      	str	r6, [sp, #4]
 800bf1e:	4e1f      	ldr	r6, [pc, #124]	; (800bf9c <SCROLLBAR_CreateUser+0xd0>)
 800bf20:	9602      	str	r6, [sp, #8]
 800bf22:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800bf24:	363c      	adds	r6, #60	; 0x3c
 800bf26:	9603      	str	r6, [sp, #12]
 800bf28:	f7f9 fd18 	bl	800595c <WM_CreateWindowAsChild>
 800bf2c:	4606      	mov	r6, r0
 800bf2e:	2800      	cmp	r0, #0
 800bf30:	d02f      	beq.n	800bf92 <SCROLLBAR_CreateUser+0xc6>
 800bf32:	f7ff facd 	bl	800b4d0 <GUI_ALLOC_LockH>
 800bf36:	f004 0208 	and.w	r2, r4, #8
 800bf3a:	06e3      	lsls	r3, r4, #27
 800bf3c:	bf48      	it	mi
 800bf3e:	f042 0210 	orrmi.w	r2, r2, #16
 800bf42:	f1a5 03fe 	sub.w	r3, r5, #254	; 0xfe
 800bf46:	bf48      	it	mi
 800bf48:	b292      	uxthmi	r2, r2
 800bf4a:	2b01      	cmp	r3, #1
 800bf4c:	bf88      	it	hi
 800bf4e:	f042 0210 	orrhi.w	r2, r2, #16
 800bf52:	4629      	mov	r1, r5
 800bf54:	9005      	str	r0, [sp, #20]
 800bf56:	f7ff fe41 	bl	800bbdc <WIDGET__Init>
 800bf5a:	4b11      	ldr	r3, [pc, #68]	; (800bfa0 <SCROLLBAR_CreateUser+0xd4>)
 800bf5c:	af08      	add	r7, sp, #32
 800bf5e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800bf60:	f857 4d0c 	ldr.w	r4, [r7, #-12]!
 800bf64:	f104 0534 	add.w	r5, r4, #52	; 0x34
 800bf68:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800bf6c:	2364      	movs	r3, #100	; 0x64
 800bf6e:	64e3      	str	r3, [r4, #76]	; 0x4c
 800bf70:	4d0c      	ldr	r5, [pc, #48]	; (800bfa4 <SCROLLBAR_CreateUser+0xd8>)
 800bf72:	230a      	movs	r3, #10
 800bf74:	6563      	str	r3, [r4, #84]	; 0x54
 800bf76:	2300      	movs	r3, #0
 800bf78:	6523      	str	r3, [r4, #80]	; 0x50
 800bf7a:	682b      	ldr	r3, [r5, #0]
 800bf7c:	6463      	str	r3, [r4, #68]	; 0x44
 800bf7e:	4638      	mov	r0, r7
 800bf80:	f7ff fab4 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800bf84:	682b      	ldr	r3, [r5, #0]
 800bf86:	4630      	mov	r0, r6
 800bf88:	685b      	ldr	r3, [r3, #4]
 800bf8a:	4798      	blx	r3
 800bf8c:	4630      	mov	r0, r6
 800bf8e:	f7ff ff8e 	bl	800beae <SCROLLBAR__InvalidatePartner>
 800bf92:	4630      	mov	r0, r6
 800bf94:	b009      	add	sp, #36	; 0x24
 800bf96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bf98:	200000e0 	.word	0x200000e0
 800bf9c:	0800c087 	.word	0x0800c087
 800bfa0:	200000cc 	.word	0x200000cc
 800bfa4:	200000dc 	.word	0x200000dc

0800bfa8 <SCROLLBAR_CreateEx>:
 800bfa8:	b510      	push	{r4, lr}
 800bfaa:	b086      	sub	sp, #24
 800bfac:	9c08      	ldr	r4, [sp, #32]
 800bfae:	9400      	str	r4, [sp, #0]
 800bfb0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800bfb2:	9401      	str	r4, [sp, #4]
 800bfb4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800bfb6:	9402      	str	r4, [sp, #8]
 800bfb8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800bfba:	9403      	str	r4, [sp, #12]
 800bfbc:	2400      	movs	r4, #0
 800bfbe:	9404      	str	r4, [sp, #16]
 800bfc0:	f7ff ff84 	bl	800becc <SCROLLBAR_CreateUser>
 800bfc4:	b006      	add	sp, #24
 800bfc6:	bd10      	pop	{r4, pc}

0800bfc8 <SCROLLBAR_CreateAttached>:
 800bfc8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bfca:	f001 0308 	and.w	r3, r1, #8
 800bfce:	2b00      	cmp	r3, #0
 800bfd0:	f240 348a 	movw	r4, #906	; 0x38a
 800bfd4:	f240 528a 	movw	r2, #1418	; 0x58a
 800bfd8:	bf08      	it	eq
 800bfda:	4622      	moveq	r2, r4
 800bfdc:	bf0c      	ite	eq
 800bfde:	23ff      	moveq	r3, #255	; 0xff
 800bfe0:	23fe      	movne	r3, #254	; 0xfe
 800bfe2:	e88d 0005 	stmia.w	sp, {r0, r2}
 800bfe6:	2000      	movs	r0, #0
 800bfe8:	9102      	str	r1, [sp, #8]
 800bfea:	9303      	str	r3, [sp, #12]
 800bfec:	4602      	mov	r2, r0
 800bfee:	4603      	mov	r3, r0
 800bff0:	4601      	mov	r1, r0
 800bff2:	f7ff ffd9 	bl	800bfa8 <SCROLLBAR_CreateEx>
 800bff6:	2106      	movs	r1, #6
 800bff8:	4604      	mov	r4, r0
 800bffa:	f7f8 fe38 	bl	8004c6e <WM_NotifyParent>
 800bffe:	4620      	mov	r0, r4
 800c000:	b004      	add	sp, #16
 800c002:	bd10      	pop	{r4, pc}

0800c004 <SCROLLBAR_SetValue>:
 800c004:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c006:	460c      	mov	r4, r1
 800c008:	4605      	mov	r5, r0
 800c00a:	b300      	cbz	r0, 800c04e <SCROLLBAR_SetValue+0x4a>
 800c00c:	f7ff fa60 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c010:	2c00      	cmp	r4, #0
 800c012:	9001      	str	r0, [sp, #4]
 800c014:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 800c016:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800c018:	db05      	blt.n	800c026 <SCROLLBAR_SetValue+0x22>
 800c01a:	1a8a      	subs	r2, r1, r2
 800c01c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c020:	4294      	cmp	r4, r2
 800c022:	dc02      	bgt.n	800c02a <SCROLLBAR_SetValue+0x26>
 800c024:	e000      	b.n	800c028 <SCROLLBAR_SetValue+0x24>
 800c026:	2400      	movs	r4, #0
 800c028:	4622      	mov	r2, r4
 800c02a:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800c02c:	4291      	cmp	r1, r2
 800c02e:	d00b      	beq.n	800c048 <SCROLLBAR_SetValue+0x44>
 800c030:	6502      	str	r2, [r0, #80]	; 0x50
 800c032:	4628      	mov	r0, r5
 800c034:	f7f9 fc64 	bl	8005900 <WM_InvalidateWindow>
 800c038:	a801      	add	r0, sp, #4
 800c03a:	f7ff fa57 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c03e:	4628      	mov	r0, r5
 800c040:	2105      	movs	r1, #5
 800c042:	f7f8 fe14 	bl	8004c6e <WM_NotifyParent>
 800c046:	e002      	b.n	800c04e <SCROLLBAR_SetValue+0x4a>
 800c048:	a801      	add	r0, sp, #4
 800c04a:	f7ff fa4f 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c04e:	b003      	add	sp, #12
 800c050:	bd30      	pop	{r4, r5, pc}

0800c052 <SCROLLBAR_AddValue>:
 800c052:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c054:	460d      	mov	r5, r1
 800c056:	4606      	mov	r6, r0
 800c058:	b160      	cbz	r0, 800c074 <SCROLLBAR_AddValue+0x22>
 800c05a:	f7ff fa39 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c05e:	4602      	mov	r2, r0
 800c060:	a802      	add	r0, sp, #8
 800c062:	6d14      	ldr	r4, [r2, #80]	; 0x50
 800c064:	f840 2d04 	str.w	r2, [r0, #-4]!
 800c068:	f7ff fa40 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c06c:	4630      	mov	r0, r6
 800c06e:	1961      	adds	r1, r4, r5
 800c070:	f7ff ffc8 	bl	800c004 <SCROLLBAR_SetValue>
 800c074:	b002      	add	sp, #8
 800c076:	bd70      	pop	{r4, r5, r6, pc}

0800c078 <SCROLLBAR_Dec>:
 800c078:	f04f 31ff 	mov.w	r1, #4294967295
 800c07c:	f7ff bfe9 	b.w	800c052 <SCROLLBAR_AddValue>

0800c080 <SCROLLBAR_Inc>:
 800c080:	2101      	movs	r1, #1
 800c082:	f7ff bfe6 	b.w	800c052 <SCROLLBAR_AddValue>

0800c086 <SCROLLBAR_Callback>:
 800c086:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c08a:	6844      	ldr	r4, [r0, #4]
 800c08c:	4680      	mov	r8, r0
 800c08e:	b08f      	sub	sp, #60	; 0x3c
 800c090:	4620      	mov	r0, r4
 800c092:	4641      	mov	r1, r8
 800c094:	f7ff fde7 	bl	800bc66 <WIDGET_HandleActive>
 800c098:	2800      	cmp	r0, #0
 800c09a:	f000 81c0 	beq.w	800c41e <SCROLLBAR_Callback+0x398>
 800c09e:	f8d8 3000 	ldr.w	r3, [r8]
 800c0a2:	2b23      	cmp	r3, #35	; 0x23
 800c0a4:	f000 8182 	beq.w	800c3ac <SCROLLBAR_Callback+0x326>
 800c0a8:	dc0b      	bgt.n	800c0c2 <SCROLLBAR_Callback+0x3c>
 800c0aa:	2b0e      	cmp	r3, #14
 800c0ac:	f000 812a 	beq.w	800c304 <SCROLLBAR_Callback+0x27e>
 800c0b0:	2b0f      	cmp	r3, #15
 800c0b2:	d012      	beq.n	800c0da <SCROLLBAR_Callback+0x54>
 800c0b4:	2b0b      	cmp	r3, #11
 800c0b6:	f040 81af 	bne.w	800c418 <SCROLLBAR_Callback+0x392>
 800c0ba:	4620      	mov	r0, r4
 800c0bc:	f7ff fef7 	bl	800beae <SCROLLBAR__InvalidatePartner>
 800c0c0:	e1aa      	b.n	800c418 <SCROLLBAR_Callback+0x392>
 800c0c2:	f240 1213 	movw	r2, #275	; 0x113
 800c0c6:	4293      	cmp	r3, r2
 800c0c8:	f000 817f 	beq.w	800c3ca <SCROLLBAR_Callback+0x344>
 800c0cc:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800c0d0:	d012      	beq.n	800c0f8 <SCROLLBAR_Callback+0x72>
 800c0d2:	2b24      	cmp	r3, #36	; 0x24
 800c0d4:	f040 81a0 	bne.w	800c418 <SCROLLBAR_Callback+0x392>
 800c0d8:	e143      	b.n	800c362 <SCROLLBAR_Callback+0x2dc>
 800c0da:	4620      	mov	r0, r4
 800c0dc:	f7ff f9f8 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c0e0:	9005      	str	r0, [sp, #20]
 800c0e2:	2800      	cmp	r0, #0
 800c0e4:	f000 819b 	beq.w	800c41e <SCROLLBAR_Callback+0x398>
 800c0e8:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800c0ea:	a805      	add	r0, sp, #20
 800c0ec:	681d      	ldr	r5, [r3, #0]
 800c0ee:	f7ff f9fd 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c0f2:	4620      	mov	r0, r4
 800c0f4:	47a8      	blx	r5
 800c0f6:	e192      	b.n	800c41e <SCROLLBAR_Callback+0x398>
 800c0f8:	f8d8 700c 	ldr.w	r7, [r8, #12]
 800c0fc:	2f00      	cmp	r7, #0
 800c0fe:	f000 818b 	beq.w	800c418 <SCROLLBAR_Callback+0x392>
 800c102:	7a3b      	ldrb	r3, [r7, #8]
 800c104:	4620      	mov	r0, r4
 800c106:	2b00      	cmp	r3, #0
 800c108:	f000 80d6 	beq.w	800c2b8 <SCROLLBAR_Callback+0x232>
 800c10c:	f7ff f9e0 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c110:	a905      	add	r1, sp, #20
 800c112:	6c83      	ldr	r3, [r0, #72]	; 0x48
 800c114:	9003      	str	r0, [sp, #12]
 800c116:	6d06      	ldr	r6, [r0, #80]	; 0x50
 800c118:	4620      	mov	r0, r4
 800c11a:	4798      	blx	r3
 800c11c:	9b03      	ldr	r3, [sp, #12]
 800c11e:	f8b3 a032 	ldrh.w	sl, [r3, #50]	; 0x32
 800c122:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 800c124:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800c126:	f01a 0f08 	tst.w	sl, #8
 800c12a:	ebc5 0902 	rsb	r9, r5, r2
 800c12e:	d003      	beq.n	800c138 <SCROLLBAR_Callback+0xb2>
 800c130:	e897 0006 	ldmia.w	r7, {r1, r2}
 800c134:	603a      	str	r2, [r7, #0]
 800c136:	6079      	str	r1, [r7, #4]
 800c138:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800c13a:	683f      	ldr	r7, [r7, #0]
 800c13c:	2a03      	cmp	r2, #3
 800c13e:	d114      	bne.n	800c16a <SCROLLBAR_Callback+0xe4>
 800c140:	4620      	mov	r0, r4
 800c142:	f7ff fe8a 	bl	800be5a <_DeleteTimer>
 800c146:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c148:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c14a:	2002      	movs	r0, #2
 800c14c:	fb93 f3f0 	sdiv	r3, r3, r0
 800c150:	1aff      	subs	r7, r7, r3
 800c152:	9b06      	ldr	r3, [sp, #24]
 800c154:	1afb      	subs	r3, r7, r3
 800c156:	1e58      	subs	r0, r3, #1
 800c158:	fb00 f009 	mul.w	r0, r0, r9
 800c15c:	f7fc fe44 	bl	8008de8 <GUI__DivideRound32>
 800c160:	9b03      	ldr	r3, [sp, #12]
 800c162:	4606      	mov	r6, r0
 800c164:	6618      	str	r0, [r3, #96]	; 0x60
 800c166:	a803      	add	r0, sp, #12
 800c168:	e07e      	b.n	800c268 <SCROLLBAR_Callback+0x1e2>
 800c16a:	9806      	ldr	r0, [sp, #24]
 800c16c:	4287      	cmp	r7, r0
 800c16e:	dc0b      	bgt.n	800c188 <SCROLLBAR_Callback+0x102>
 800c170:	2a02      	cmp	r2, #2
 800c172:	d039      	beq.n	800c1e8 <SCROLLBAR_Callback+0x162>
 800c174:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c176:	b113      	cbz	r3, 800c17e <SCROLLBAR_Callback+0xf8>
 800c178:	4620      	mov	r0, r4
 800c17a:	f7ff fe6e 	bl	800be5a <_DeleteTimer>
 800c17e:	9b03      	ldr	r3, [sp, #12]
 800c180:	2202      	movs	r2, #2
 800c182:	3e01      	subs	r6, #1
 800c184:	659a      	str	r2, [r3, #88]	; 0x58
 800c186:	e02f      	b.n	800c1e8 <SCROLLBAR_Callback+0x162>
 800c188:	9907      	ldr	r1, [sp, #28]
 800c18a:	428f      	cmp	r7, r1
 800c18c:	da02      	bge.n	800c194 <SCROLLBAR_Callback+0x10e>
 800c18e:	1b76      	subs	r6, r6, r5
 800c190:	426d      	negs	r5, r5
 800c192:	e02f      	b.n	800c1f4 <SCROLLBAR_Callback+0x16e>
 800c194:	9908      	ldr	r1, [sp, #32]
 800c196:	428f      	cmp	r7, r1
 800c198:	dc12      	bgt.n	800c1c0 <SCROLLBAR_Callback+0x13a>
 800c19a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c19c:	2900      	cmp	r1, #0
 800c19e:	dd0b      	ble.n	800c1b8 <SCROLLBAR_Callback+0x132>
 800c1a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c1a2:	2202      	movs	r2, #2
 800c1a4:	fb93 f3f2 	sdiv	r3, r3, r2
 800c1a8:	1aff      	subs	r7, r7, r3
 800c1aa:	1a3f      	subs	r7, r7, r0
 800c1ac:	3f01      	subs	r7, #1
 800c1ae:	fb07 f009 	mul.w	r0, r7, r9
 800c1b2:	f7fc fe19 	bl	8008de8 <GUI__DivideRound32>
 800c1b6:	4606      	mov	r6, r0
 800c1b8:	9b03      	ldr	r3, [sp, #12]
 800c1ba:	2203      	movs	r2, #3
 800c1bc:	659a      	str	r2, [r3, #88]	; 0x58
 800c1be:	e016      	b.n	800c1ee <SCROLLBAR_Callback+0x168>
 800c1c0:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c1c2:	428f      	cmp	r7, r1
 800c1c4:	da01      	bge.n	800c1ca <SCROLLBAR_Callback+0x144>
 800c1c6:	442e      	add	r6, r5
 800c1c8:	e014      	b.n	800c1f4 <SCROLLBAR_Callback+0x16e>
 800c1ca:	990a      	ldr	r1, [sp, #40]	; 0x28
 800c1cc:	428f      	cmp	r7, r1
 800c1ce:	dc0e      	bgt.n	800c1ee <SCROLLBAR_Callback+0x168>
 800c1d0:	2a01      	cmp	r2, #1
 800c1d2:	d00e      	beq.n	800c1f2 <SCROLLBAR_Callback+0x16c>
 800c1d4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c1d6:	b113      	cbz	r3, 800c1de <SCROLLBAR_Callback+0x158>
 800c1d8:	4620      	mov	r0, r4
 800c1da:	f7ff fe3e 	bl	800be5a <_DeleteTimer>
 800c1de:	9b03      	ldr	r3, [sp, #12]
 800c1e0:	2501      	movs	r5, #1
 800c1e2:	3601      	adds	r6, #1
 800c1e4:	659d      	str	r5, [r3, #88]	; 0x58
 800c1e6:	e005      	b.n	800c1f4 <SCROLLBAR_Callback+0x16e>
 800c1e8:	f04f 35ff 	mov.w	r5, #4294967295
 800c1ec:	e002      	b.n	800c1f4 <SCROLLBAR_Callback+0x16e>
 800c1ee:	2500      	movs	r5, #0
 800c1f0:	e000      	b.n	800c1f4 <SCROLLBAR_Callback+0x16e>
 800c1f2:	4615      	mov	r5, r2
 800c1f4:	f8dd b00c 	ldr.w	fp, [sp, #12]
 800c1f8:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c1fa:	f8db 305c 	ldr.w	r3, [fp, #92]	; 0x5c
 800c1fe:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 800c202:	9a06      	ldr	r2, [sp, #24]
 800c204:	b171      	cbz	r1, 800c224 <SCROLLBAR_Callback+0x19e>
 800c206:	2002      	movs	r0, #2
 800c208:	fb9e f0f0 	sdiv	r0, lr, r0
 800c20c:	1a38      	subs	r0, r7, r0
 800c20e:	1a80      	subs	r0, r0, r2
 800c210:	3801      	subs	r0, #1
 800c212:	fb00 f009 	mul.w	r0, r0, r9
 800c216:	9301      	str	r3, [sp, #4]
 800c218:	f7fc fde6 	bl	8008de8 <GUI__DivideRound32>
 800c21c:	9b01      	ldr	r3, [sp, #4]
 800c21e:	f8cb 0060 	str.w	r0, [fp, #96]	; 0x60
 800c222:	e009      	b.n	800c238 <SCROLLBAR_Callback+0x1b2>
 800c224:	f8db 2058 	ldr.w	r2, [fp, #88]	; 0x58
 800c228:	2a01      	cmp	r2, #1
 800c22a:	bf04      	itt	eq
 800c22c:	f8db 104c 	ldreq.w	r1, [fp, #76]	; 0x4c
 800c230:	f101 31ff 	addeq.w	r1, r1, #4294967295
 800c234:	f8cb 1060 	str.w	r1, [fp, #96]	; 0x60
 800c238:	a803      	add	r0, sp, #12
 800c23a:	9301      	str	r3, [sp, #4]
 800c23c:	f7ff f956 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c240:	9b01      	ldr	r3, [sp, #4]
 800c242:	b1a5      	cbz	r5, 800c26e <SCROLLBAR_Callback+0x1e8>
 800c244:	b9bb      	cbnz	r3, 800c276 <SCROLLBAR_Callback+0x1f0>
 800c246:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800c24a:	f240 41d2 	movw	r1, #1234	; 0x4d2
 800c24e:	4620      	mov	r0, r4
 800c250:	f000 fdd6 	bl	800ce00 <WM_CreateTimer>
 800c254:	4607      	mov	r7, r0
 800c256:	4620      	mov	r0, r4
 800c258:	f7ff f93a 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c25c:	4602      	mov	r2, r0
 800c25e:	a80e      	add	r0, sp, #56	; 0x38
 800c260:	f840 2d28 	str.w	r2, [r0, #-40]!
 800c264:	6657      	str	r7, [r2, #100]	; 0x64
 800c266:	65d5      	str	r5, [r2, #92]	; 0x5c
 800c268:	f7ff f940 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c26c:	e003      	b.n	800c276 <SCROLLBAR_Callback+0x1f0>
 800c26e:	b113      	cbz	r3, 800c276 <SCROLLBAR_Callback+0x1f0>
 800c270:	4620      	mov	r0, r4
 800c272:	f7ff fdf2 	bl	800be5a <_DeleteTimer>
 800c276:	4620      	mov	r0, r4
 800c278:	2101      	movs	r1, #1
 800c27a:	f7f8 f9c5 	bl	8004608 <WM_SetCapture>
 800c27e:	4620      	mov	r0, r4
 800c280:	4631      	mov	r1, r6
 800c282:	f7ff febf 	bl	800c004 <SCROLLBAR_SetValue>
 800c286:	f41a 7f80 	tst.w	sl, #256	; 0x100
 800c28a:	f040 80c5 	bne.w	800c418 <SCROLLBAR_Callback+0x392>
 800c28e:	4620      	mov	r0, r4
 800c290:	f7ff f91e 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c294:	ab0e      	add	r3, sp, #56	; 0x38
 800c296:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800c298:	f843 0d28 	str.w	r0, [r3, #-40]!
 800c29c:	4618      	mov	r0, r3
 800c29e:	f7ff f925 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c2a2:	f44f 7180 	mov.w	r1, #256	; 0x100
 800c2a6:	4620      	mov	r0, r4
 800c2a8:	f7ff fcb2 	bl	800bc10 <WIDGET_OrState>
 800c2ac:	07a9      	lsls	r1, r5, #30
 800c2ae:	f140 80b3 	bpl.w	800c418 <SCROLLBAR_Callback+0x392>
 800c2b2:	4620      	mov	r0, r4
 800c2b4:	2101      	movs	r1, #1
 800c2b6:	e074      	b.n	800c3a2 <SCROLLBAR_Callback+0x31c>
 800c2b8:	f7ff f90a 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c2bc:	8e45      	ldrh	r5, [r0, #50]	; 0x32
 800c2be:	9003      	str	r0, [sp, #12]
 800c2c0:	a803      	add	r0, sp, #12
 800c2c2:	f7ff f913 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c2c6:	05ea      	lsls	r2, r5, #23
 800c2c8:	f140 80a6 	bpl.w	800c418 <SCROLLBAR_Callback+0x392>
 800c2cc:	4620      	mov	r0, r4
 800c2ce:	f44f 7180 	mov.w	r1, #256	; 0x100
 800c2d2:	f7ff fcb3 	bl	800bc3c <WIDGET_AndState>
 800c2d6:	4620      	mov	r0, r4
 800c2d8:	f7ff f8fa 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c2dc:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 800c2de:	9005      	str	r0, [sp, #20]
 800c2e0:	b113      	cbz	r3, 800c2e8 <SCROLLBAR_Callback+0x262>
 800c2e2:	4620      	mov	r0, r4
 800c2e4:	f7ff fdb9 	bl	800be5a <_DeleteTimer>
 800c2e8:	a80e      	add	r0, sp, #56	; 0x38
 800c2ea:	2200      	movs	r2, #0
 800c2ec:	f850 3d24 	ldr.w	r3, [r0, #-36]!
 800c2f0:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800c2f2:	659a      	str	r2, [r3, #88]	; 0x58
 800c2f4:	f7ff f8fa 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c2f8:	07ab      	lsls	r3, r5, #30
 800c2fa:	f140 808d 	bpl.w	800c418 <SCROLLBAR_Callback+0x392>
 800c2fe:	4620      	mov	r0, r4
 800c300:	2102      	movs	r1, #2
 800c302:	e04e      	b.n	800c3a2 <SCROLLBAR_Callback+0x31c>
 800c304:	4620      	mov	r0, r4
 800c306:	f7ff f8e3 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c30a:	ab0e      	add	r3, sp, #56	; 0x38
 800c30c:	6d45      	ldr	r5, [r0, #84]	; 0x54
 800c30e:	f843 0d24 	str.w	r0, [r3, #-36]!
 800c312:	4618      	mov	r0, r3
 800c314:	f7ff f8ea 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c318:	f8d8 200c 	ldr.w	r2, [r8, #12]
 800c31c:	6813      	ldr	r3, [r2, #0]
 800c31e:	6852      	ldr	r2, [r2, #4]
 800c320:	2a00      	cmp	r2, #0
 800c322:	dd79      	ble.n	800c418 <SCROLLBAR_Callback+0x392>
 800c324:	3b10      	subs	r3, #16
 800c326:	2b12      	cmp	r3, #18
 800c328:	d876      	bhi.n	800c418 <SCROLLBAR_Callback+0x392>
 800c32a:	e8df f003 	tbb	[pc, r3]
 800c32e:	1616      	.short	0x1616
 800c330:	75751212 	.word	0x75751212
 800c334:	75757575 	.word	0x75757575
 800c338:	75757575 	.word	0x75757575
 800c33c:	0a757575 	.word	0x0a757575
 800c340:	0d          	.byte	0x0d
 800c341:	00          	.byte	0x00
 800c342:	4620      	mov	r0, r4
 800c344:	4629      	mov	r1, r5
 800c346:	e001      	b.n	800c34c <SCROLLBAR_Callback+0x2c6>
 800c348:	4620      	mov	r0, r4
 800c34a:	4269      	negs	r1, r5
 800c34c:	f7ff fe81 	bl	800c052 <SCROLLBAR_AddValue>
 800c350:	e062      	b.n	800c418 <SCROLLBAR_Callback+0x392>
 800c352:	4620      	mov	r0, r4
 800c354:	f7ff fe94 	bl	800c080 <SCROLLBAR_Inc>
 800c358:	e05e      	b.n	800c418 <SCROLLBAR_Callback+0x392>
 800c35a:	4620      	mov	r0, r4
 800c35c:	f7ff fe8c 	bl	800c078 <SCROLLBAR_Dec>
 800c360:	e05a      	b.n	800c418 <SCROLLBAR_Callback+0x392>
 800c362:	4620      	mov	r0, r4
 800c364:	f8d8 600c 	ldr.w	r6, [r8, #12]
 800c368:	f7ff f8b2 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c36c:	ad0e      	add	r5, sp, #56	; 0x38
 800c36e:	4603      	mov	r3, r0
 800c370:	f845 0d24 	str.w	r0, [r5, #-36]!
 800c374:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800c376:	6830      	ldr	r0, [r6, #0]
 800c378:	68b1      	ldr	r1, [r6, #8]
 800c37a:	4290      	cmp	r0, r2
 800c37c:	6872      	ldr	r2, [r6, #4]
 800c37e:	d105      	bne.n	800c38c <SCROLLBAR_Callback+0x306>
 800c380:	6d5e      	ldr	r6, [r3, #84]	; 0x54
 800c382:	428e      	cmp	r6, r1
 800c384:	d102      	bne.n	800c38c <SCROLLBAR_Callback+0x306>
 800c386:	6d1e      	ldr	r6, [r3, #80]	; 0x50
 800c388:	4296      	cmp	r6, r2
 800c38a:	d00d      	beq.n	800c3a8 <SCROLLBAR_Callback+0x322>
 800c38c:	64d8      	str	r0, [r3, #76]	; 0x4c
 800c38e:	6559      	str	r1, [r3, #84]	; 0x54
 800c390:	651a      	str	r2, [r3, #80]	; 0x50
 800c392:	4620      	mov	r0, r4
 800c394:	f7f9 fab4 	bl	8005900 <WM_InvalidateWindow>
 800c398:	4628      	mov	r0, r5
 800c39a:	f7ff f8a7 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c39e:	4620      	mov	r0, r4
 800c3a0:	2105      	movs	r1, #5
 800c3a2:	f7f8 fc64 	bl	8004c6e <WM_NotifyParent>
 800c3a6:	e037      	b.n	800c418 <SCROLLBAR_Callback+0x392>
 800c3a8:	4628      	mov	r0, r5
 800c3aa:	e033      	b.n	800c414 <SCROLLBAR_Callback+0x38e>
 800c3ac:	4620      	mov	r0, r4
 800c3ae:	f7ff f88f 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c3b2:	9005      	str	r0, [sp, #20]
 800c3b4:	2800      	cmp	r0, #0
 800c3b6:	d02f      	beq.n	800c418 <SCROLLBAR_Callback+0x392>
 800c3b8:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800c3bc:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800c3be:	601a      	str	r2, [r3, #0]
 800c3c0:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800c3c2:	609a      	str	r2, [r3, #8]
 800c3c4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c3c6:	605a      	str	r2, [r3, #4]
 800c3c8:	e023      	b.n	800c412 <SCROLLBAR_Callback+0x38c>
 800c3ca:	4620      	mov	r0, r4
 800c3cc:	f7ff f880 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c3d0:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 800c3d2:	9005      	str	r0, [sp, #20]
 800c3d4:	b111      	cbz	r1, 800c3dc <SCROLLBAR_Callback+0x356>
 800c3d6:	4620      	mov	r0, r4
 800c3d8:	f7ff fe3b 	bl	800c052 <SCROLLBAR_AddValue>
 800c3dc:	9b05      	ldr	r3, [sp, #20]
 800c3de:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800c3e0:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800c3e2:	2a00      	cmp	r2, #0
 800c3e4:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800c3e6:	dd05      	ble.n	800c3f4 <SCROLLBAR_Callback+0x36e>
 800c3e8:	4291      	cmp	r1, r2
 800c3ea:	bfb4      	ite	lt
 800c3ec:	2100      	movlt	r1, #0
 800c3ee:	2101      	movge	r1, #1
 800c3f0:	dd06      	ble.n	800c400 <SCROLLBAR_Callback+0x37a>
 800c3f2:	e004      	b.n	800c3fe <SCROLLBAR_Callback+0x378>
 800c3f4:	4291      	cmp	r1, r2
 800c3f6:	bfcc      	ite	gt
 800c3f8:	2100      	movgt	r1, #0
 800c3fa:	2101      	movle	r1, #1
 800c3fc:	da00      	bge.n	800c400 <SCROLLBAR_Callback+0x37a>
 800c3fe:	651a      	str	r2, [r3, #80]	; 0x50
 800c400:	b119      	cbz	r1, 800c40a <SCROLLBAR_Callback+0x384>
 800c402:	4620      	mov	r0, r4
 800c404:	f7ff fd29 	bl	800be5a <_DeleteTimer>
 800c408:	e003      	b.n	800c412 <SCROLLBAR_Callback+0x38c>
 800c40a:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800c40c:	2132      	movs	r1, #50	; 0x32
 800c40e:	f000 fd27 	bl	800ce60 <WM_RestartTimer>
 800c412:	a805      	add	r0, sp, #20
 800c414:	f7ff f86a 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c418:	4640      	mov	r0, r8
 800c41a:	f7f9 fe9f 	bl	800615c <WM_DefaultProc>
 800c41e:	b00f      	add	sp, #60	; 0x3c
 800c420:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c424 <SCROLLBAR_GetValue>:
 800c424:	b513      	push	{r0, r1, r4, lr}
 800c426:	4604      	mov	r4, r0
 800c428:	b140      	cbz	r0, 800c43c <SCROLLBAR_GetValue+0x18>
 800c42a:	f7ff f851 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c42e:	ab02      	add	r3, sp, #8
 800c430:	6d04      	ldr	r4, [r0, #80]	; 0x50
 800c432:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c436:	4618      	mov	r0, r3
 800c438:	f7ff f858 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c43c:	4620      	mov	r0, r4
 800c43e:	b002      	add	sp, #8
 800c440:	bd10      	pop	{r4, pc}
	...

0800c444 <PROGBAR_DrawSkinFlex>:
 800c444:	6843      	ldr	r3, [r0, #4]
 800c446:	2b0b      	cmp	r3, #11
 800c448:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c44c:	4604      	mov	r4, r0
 800c44e:	6a06      	ldr	r6, [r0, #32]
 800c450:	d006      	beq.n	800c460 <PROGBAR_DrawSkinFlex+0x1c>
 800c452:	2b12      	cmp	r3, #18
 800c454:	f000 8094 	beq.w	800c580 <PROGBAR_DrawSkinFlex+0x13c>
 800c458:	2b05      	cmp	r3, #5
 800c45a:	f040 80a0 	bne.w	800c59e <PROGBAR_DrawSkinFlex+0x15a>
 800c45e:	e01c      	b.n	800c49a <PROGBAR_DrawSkinFlex+0x56>
 800c460:	4b51      	ldr	r3, [pc, #324]	; (800c5a8 <PROGBAR_DrawSkinFlex+0x164>)
 800c462:	6a18      	ldr	r0, [r3, #32]
 800c464:	f7fe fbd3 	bl	800ac0e <GUI_SetColor>
 800c468:	6960      	ldr	r0, [r4, #20]
 800c46a:	6921      	ldr	r1, [r4, #16]
 800c46c:	69a2      	ldr	r2, [r4, #24]
 800c46e:	f7fd fcad 	bl	8009dcc <GUI_DrawHLine>
 800c472:	69e0      	ldr	r0, [r4, #28]
 800c474:	6921      	ldr	r1, [r4, #16]
 800c476:	69a2      	ldr	r2, [r4, #24]
 800c478:	f7fd fca8 	bl	8009dcc <GUI_DrawHLine>
 800c47c:	6961      	ldr	r1, [r4, #20]
 800c47e:	69e2      	ldr	r2, [r4, #28]
 800c480:	6920      	ldr	r0, [r4, #16]
 800c482:	3101      	adds	r1, #1
 800c484:	3a01      	subs	r2, #1
 800c486:	f7fd fcfb 	bl	8009e80 <GUI_DrawVLine>
 800c48a:	6961      	ldr	r1, [r4, #20]
 800c48c:	69e2      	ldr	r2, [r4, #28]
 800c48e:	69a0      	ldr	r0, [r4, #24]
 800c490:	3101      	adds	r1, #1
 800c492:	3a01      	subs	r2, #1
 800c494:	f7fd fcf4 	bl	8009e80 <GUI_DrawVLine>
 800c498:	e081      	b.n	800c59e <PROGBAR_DrawSkinFlex+0x15a>
 800c49a:	6830      	ldr	r0, [r6, #0]
 800c49c:	4d42      	ldr	r5, [pc, #264]	; (800c5a8 <PROGBAR_DrawSkinFlex+0x164>)
 800c49e:	6967      	ldr	r7, [r4, #20]
 800c4a0:	69e3      	ldr	r3, [r4, #28]
 800c4a2:	6922      	ldr	r2, [r4, #16]
 800c4a4:	f8d4 9018 	ldr.w	r9, [r4, #24]
 800c4a8:	6871      	ldr	r1, [r6, #4]
 800c4aa:	2800      	cmp	r0, #0
 800c4ac:	d034      	beq.n	800c518 <PROGBAR_DrawSkinFlex+0xd4>
 800c4ae:	ebc2 0909 	rsb	r9, r2, r9
 800c4b2:	f109 0901 	add.w	r9, r9, #1
 800c4b6:	ea4f 0969 	mov.w	r9, r9, asr #1
 800c4ba:	b929      	cbnz	r1, 800c4c8 <PROGBAR_DrawSkinFlex+0x84>
 800c4bc:	468e      	mov	lr, r1
 800c4be:	f8d5 c010 	ldr.w	ip, [r5, #16]
 800c4c2:	6968      	ldr	r0, [r5, #20]
 800c4c4:	2101      	movs	r1, #1
 800c4c6:	e005      	b.n	800c4d4 <PROGBAR_DrawSkinFlex+0x90>
 800c4c8:	f8d5 c000 	ldr.w	ip, [r5]
 800c4cc:	6868      	ldr	r0, [r5, #4]
 800c4ce:	f04f 0e01 	mov.w	lr, #1
 800c4d2:	2100      	movs	r1, #0
 800c4d4:	9001      	str	r0, [sp, #4]
 800c4d6:	ebce 0303 	rsb	r3, lr, r3
 800c4da:	1c50      	adds	r0, r2, #1
 800c4dc:	f8cd c000 	str.w	ip, [sp]
 800c4e0:	4439      	add	r1, r7
 800c4e2:	444a      	add	r2, r9
 800c4e4:	f002 ff9c 	bl	800f420 <GUI_DrawGradientH>
 800c4e8:	6873      	ldr	r3, [r6, #4]
 800c4ea:	b91b      	cbnz	r3, 800c4f4 <PROGBAR_DrawSkinFlex+0xb0>
 800c4ec:	69ae      	ldr	r6, [r5, #24]
 800c4ee:	69ed      	ldr	r5, [r5, #28]
 800c4f0:	2101      	movs	r1, #1
 800c4f2:	e003      	b.n	800c4fc <PROGBAR_DrawSkinFlex+0xb8>
 800c4f4:	68ae      	ldr	r6, [r5, #8]
 800c4f6:	68ed      	ldr	r5, [r5, #12]
 800c4f8:	2301      	movs	r3, #1
 800c4fa:	2100      	movs	r1, #0
 800c4fc:	6920      	ldr	r0, [r4, #16]
 800c4fe:	6967      	ldr	r7, [r4, #20]
 800c500:	69a2      	ldr	r2, [r4, #24]
 800c502:	69e4      	ldr	r4, [r4, #28]
 800c504:	9600      	str	r6, [sp, #0]
 800c506:	4448      	add	r0, r9
 800c508:	9501      	str	r5, [sp, #4]
 800c50a:	3001      	adds	r0, #1
 800c50c:	4439      	add	r1, r7
 800c50e:	3a01      	subs	r2, #1
 800c510:	1ae3      	subs	r3, r4, r3
 800c512:	f002 ff85 	bl	800f420 <GUI_DrawGradientH>
 800c516:	e042      	b.n	800c59e <PROGBAR_DrawSkinFlex+0x15a>
 800c518:	ebc7 0803 	rsb	r8, r7, r3
 800c51c:	f108 0801 	add.w	r8, r8, #1
 800c520:	ea4f 0868 	mov.w	r8, r8, asr #1
 800c524:	b921      	cbnz	r1, 800c530 <PROGBAR_DrawSkinFlex+0xec>
 800c526:	e895 5000 	ldmia.w	r5, {ip, lr}
 800c52a:	460b      	mov	r3, r1
 800c52c:	2001      	movs	r0, #1
 800c52e:	e004      	b.n	800c53a <PROGBAR_DrawSkinFlex+0xf6>
 800c530:	f8d5 c010 	ldr.w	ip, [r5, #16]
 800c534:	f8d5 e014 	ldr.w	lr, [r5, #20]
 800c538:	2301      	movs	r3, #1
 800c53a:	4410      	add	r0, r2
 800c53c:	e88d 5000 	stmia.w	sp, {ip, lr}
 800c540:	ebc3 0209 	rsb	r2, r3, r9
 800c544:	1c79      	adds	r1, r7, #1
 800c546:	eb07 0308 	add.w	r3, r7, r8
 800c54a:	f002 ff37 	bl	800f3bc <GUI_DrawGradientV>
 800c54e:	6872      	ldr	r2, [r6, #4]
 800c550:	b91a      	cbnz	r2, 800c55a <PROGBAR_DrawSkinFlex+0x116>
 800c552:	68ae      	ldr	r6, [r5, #8]
 800c554:	68ed      	ldr	r5, [r5, #12]
 800c556:	2001      	movs	r0, #1
 800c558:	e003      	b.n	800c562 <PROGBAR_DrawSkinFlex+0x11e>
 800c55a:	69ae      	ldr	r6, [r5, #24]
 800c55c:	69ed      	ldr	r5, [r5, #28]
 800c55e:	2201      	movs	r2, #1
 800c560:	2000      	movs	r0, #0
 800c562:	6961      	ldr	r1, [r4, #20]
 800c564:	f8d4 e010 	ldr.w	lr, [r4, #16]
 800c568:	69a7      	ldr	r7, [r4, #24]
 800c56a:	69e3      	ldr	r3, [r4, #28]
 800c56c:	9600      	str	r6, [sp, #0]
 800c56e:	4441      	add	r1, r8
 800c570:	9501      	str	r5, [sp, #4]
 800c572:	4470      	add	r0, lr
 800c574:	3101      	adds	r1, #1
 800c576:	1aba      	subs	r2, r7, r2
 800c578:	3b01      	subs	r3, #1
 800c57a:	f002 ff1f 	bl	800f3bc <GUI_DrawGradientV>
 800c57e:	e00e      	b.n	800c59e <PROGBAR_DrawSkinFlex+0x15a>
 800c580:	6833      	ldr	r3, [r6, #0]
 800c582:	b963      	cbnz	r3, 800c59e <PROGBAR_DrawSkinFlex+0x15a>
 800c584:	4b08      	ldr	r3, [pc, #32]	; (800c5a8 <PROGBAR_DrawSkinFlex+0x164>)
 800c586:	68b5      	ldr	r5, [r6, #8]
 800c588:	6a58      	ldr	r0, [r3, #36]	; 0x24
 800c58a:	f7fe fb40 	bl	800ac0e <GUI_SetColor>
 800c58e:	2002      	movs	r0, #2
 800c590:	f7fe fb78 	bl	800ac84 <GUI_SetTextMode>
 800c594:	4628      	mov	r0, r5
 800c596:	6921      	ldr	r1, [r4, #16]
 800c598:	6962      	ldr	r2, [r4, #20]
 800c59a:	f7fd fe4d 	bl	800a238 <GUI_DispStringAt>
 800c59e:	2000      	movs	r0, #0
 800c5a0:	b003      	add	sp, #12
 800c5a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c5a6:	bf00      	nop
 800c5a8:	200000e4 	.word	0x200000e4

0800c5ac <_Create>:
 800c5ac:	b530      	push	{r4, r5, lr}
 800c5ae:	b08b      	sub	sp, #44	; 0x2c
 800c5b0:	4605      	mov	r5, r0
 800c5b2:	f7fe ff8d 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c5b6:	ab0a      	add	r3, sp, #40	; 0x28
 800c5b8:	6e42      	ldr	r2, [r0, #100]	; 0x64
 800c5ba:	f843 0d28 	str.w	r0, [r3, #-40]!
 800c5be:	4668      	mov	r0, sp
 800c5c0:	6894      	ldr	r4, [r2, #8]
 800c5c2:	f7fe ff93 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c5c6:	a80a      	add	r0, sp, #40	; 0x28
 800c5c8:	2300      	movs	r3, #0
 800c5ca:	9302      	str	r3, [sp, #8]
 800c5cc:	f840 5d24 	str.w	r5, [r0, #-36]!
 800c5d0:	6823      	ldr	r3, [r4, #0]
 800c5d2:	4798      	blx	r3
 800c5d4:	b00b      	add	sp, #44	; 0x2c
 800c5d6:	bd30      	pop	{r4, r5, pc}

0800c5d8 <_Paint>:
 800c5d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c5dc:	b093      	sub	sp, #76	; 0x4c
 800c5de:	4604      	mov	r4, r0
 800c5e0:	f7fe ff76 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c5e4:	f890 2068 	ldrb.w	r2, [r0, #104]	; 0x68
 800c5e8:	6b41      	ldr	r1, [r0, #52]	; 0x34
 800c5ea:	6e06      	ldr	r6, [r0, #96]	; 0x60
 800c5ec:	9000      	str	r0, [sp, #0]
 800c5ee:	f002 0201 	and.w	r2, r2, #1
 800c5f2:	9206      	str	r2, [sp, #24]
 800c5f4:	f8d0 904c 	ldr.w	r9, [r0, #76]	; 0x4c
 800c5f8:	f7f6 fb2b 	bl	8002c52 <PROGBAR__Value2Pos>
 800c5fc:	af02      	add	r7, sp, #8
 800c5fe:	4680      	mov	r8, r0
 800c600:	4668      	mov	r0, sp
 800c602:	f7fe ff73 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c606:	ab06      	add	r3, sp, #24
 800c608:	4639      	mov	r1, r7
 800c60a:	4620      	mov	r0, r4
 800c60c:	9311      	str	r3, [sp, #68]	; 0x44
 800c60e:	f7f8 f8ae 	bl	800476e <WM_GetClientRectEx>
 800c612:	230b      	movs	r3, #11
 800c614:	930a      	str	r3, [sp, #40]	; 0x28
 800c616:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800c61a:	930d      	str	r3, [sp, #52]	; 0x34
 800c61c:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800c620:	930e      	str	r3, [sp, #56]	; 0x38
 800c622:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c626:	930f      	str	r3, [sp, #60]	; 0x3c
 800c628:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c62c:	9310      	str	r3, [sp, #64]	; 0x40
 800c62e:	9409      	str	r4, [sp, #36]	; 0x24
 800c630:	a809      	add	r0, sp, #36	; 0x24
 800c632:	47b0      	blx	r6
 800c634:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c638:	ad04      	add	r5, sp, #16
 800c63a:	e885 0003 	stmia.w	r5, {r0, r1}
 800c63e:	2201      	movs	r2, #1
 800c640:	4629      	mov	r1, r5
 800c642:	4628      	mov	r0, r5
 800c644:	f7fc fc6f 	bl	8008f26 <GUI__ReduceRect>
 800c648:	4628      	mov	r0, r5
 800c64a:	f7f8 fb99 	bl	8004d80 <WM_SetUserClipRect>
 800c64e:	2305      	movs	r3, #5
 800c650:	9906      	ldr	r1, [sp, #24]
 800c652:	930a      	str	r3, [sp, #40]	; 0x28
 800c654:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800c658:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800c65c:	9409      	str	r4, [sp, #36]	; 0x24
 800c65e:	930d      	str	r3, [sp, #52]	; 0x34
 800c660:	920e      	str	r2, [sp, #56]	; 0x38
 800c662:	b129      	cbz	r1, 800c670 <_Paint+0x98>
 800c664:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c668:	930f      	str	r3, [sp, #60]	; 0x3c
 800c66a:	4442      	add	r2, r8
 800c66c:	9210      	str	r2, [sp, #64]	; 0x40
 800c66e:	e004      	b.n	800c67a <_Paint+0xa2>
 800c670:	4443      	add	r3, r8
 800c672:	930f      	str	r3, [sp, #60]	; 0x3c
 800c674:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c678:	9310      	str	r3, [sp, #64]	; 0x40
 800c67a:	2300      	movs	r3, #0
 800c67c:	9307      	str	r3, [sp, #28]
 800c67e:	a809      	add	r0, sp, #36	; 0x24
 800c680:	47b0      	blx	r6
 800c682:	9906      	ldr	r1, [sp, #24]
 800c684:	f9bd 5008 	ldrsh.w	r5, [sp, #8]
 800c688:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 800c68c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800c690:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c694:	b119      	cbz	r1, 800c69e <_Paint+0xc6>
 800c696:	4440      	add	r0, r8
 800c698:	950d      	str	r5, [sp, #52]	; 0x34
 800c69a:	3001      	adds	r0, #1
 800c69c:	e002      	b.n	800c6a4 <_Paint+0xcc>
 800c69e:	4445      	add	r5, r8
 800c6a0:	3501      	adds	r5, #1
 800c6a2:	950d      	str	r5, [sp, #52]	; 0x34
 800c6a4:	9310      	str	r3, [sp, #64]	; 0x40
 800c6a6:	2301      	movs	r3, #1
 800c6a8:	920f      	str	r2, [sp, #60]	; 0x3c
 800c6aa:	9307      	str	r3, [sp, #28]
 800c6ac:	900e      	str	r0, [sp, #56]	; 0x38
 800c6ae:	a809      	add	r0, sp, #36	; 0x24
 800c6b0:	47b0      	blx	r6
 800c6b2:	4620      	mov	r0, r4
 800c6b4:	f7fe ff0c 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c6b8:	9000      	str	r0, [sp, #0]
 800c6ba:	f7f6 fa83 	bl	8002bc4 <PROGBAR__GetTextLocked>
 800c6be:	9001      	str	r0, [sp, #4]
 800c6c0:	b1f8      	cbz	r0, 800c702 <_Paint+0x12a>
 800c6c2:	4648      	mov	r0, r9
 800c6c4:	f7fe faa8 	bl	800ac18 <GUI_SetFont>
 800c6c8:	4639      	mov	r1, r7
 800c6ca:	9a01      	ldr	r2, [sp, #4]
 800c6cc:	9800      	ldr	r0, [sp, #0]
 800c6ce:	f7f6 fa7c 	bl	8002bca <PROGBAR__GetTextRect>
 800c6d2:	4668      	mov	r0, sp
 800c6d4:	f7fe ff0a 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c6d8:	9b01      	ldr	r3, [sp, #4]
 800c6da:	9308      	str	r3, [sp, #32]
 800c6dc:	2312      	movs	r3, #18
 800c6de:	930a      	str	r3, [sp, #40]	; 0x28
 800c6e0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800c6e4:	930d      	str	r3, [sp, #52]	; 0x34
 800c6e6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800c6ea:	930e      	str	r3, [sp, #56]	; 0x38
 800c6ec:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c6f0:	930f      	str	r3, [sp, #60]	; 0x3c
 800c6f2:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c6f6:	9409      	str	r4, [sp, #36]	; 0x24
 800c6f8:	9310      	str	r3, [sp, #64]	; 0x40
 800c6fa:	a809      	add	r0, sp, #36	; 0x24
 800c6fc:	47b0      	blx	r6
 800c6fe:	a801      	add	r0, sp, #4
 800c700:	e000      	b.n	800c704 <_Paint+0x12c>
 800c702:	4668      	mov	r0, sp
 800c704:	f7fe fef2 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c708:	2000      	movs	r0, #0
 800c70a:	f7f8 fb39 	bl	8004d80 <WM_SetUserClipRect>
 800c70e:	b013      	add	sp, #76	; 0x4c
 800c710:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c714 <GUI_ARRAY__GethItem>:
 800c714:	8803      	ldrh	r3, [r0, #0]
 800c716:	4299      	cmp	r1, r3
 800c718:	b513      	push	{r0, r1, r4, lr}
 800c71a:	460c      	mov	r4, r1
 800c71c:	d20e      	bcs.n	800c73c <GUI_ARRAY__GethItem+0x28>
 800c71e:	6840      	ldr	r0, [r0, #4]
 800c720:	b150      	cbz	r0, 800c738 <GUI_ARRAY__GethItem+0x24>
 800c722:	f7fe fed5 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c726:	ab02      	add	r3, sp, #8
 800c728:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 800c72c:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c730:	4618      	mov	r0, r3
 800c732:	f7fe fedb 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c736:	e002      	b.n	800c73e <GUI_ARRAY__GethItem+0x2a>
 800c738:	4604      	mov	r4, r0
 800c73a:	e000      	b.n	800c73e <GUI_ARRAY__GethItem+0x2a>
 800c73c:	2400      	movs	r4, #0
 800c73e:	4620      	mov	r0, r4
 800c740:	b002      	add	sp, #8
 800c742:	bd10      	pop	{r4, pc}

0800c744 <GUI_ARRAY_GetNumItems>:
 800c744:	b513      	push	{r0, r1, r4, lr}
 800c746:	4604      	mov	r4, r0
 800c748:	b140      	cbz	r0, 800c75c <GUI_ARRAY_GetNumItems+0x18>
 800c74a:	f7fe fec1 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c74e:	ab02      	add	r3, sp, #8
 800c750:	8804      	ldrh	r4, [r0, #0]
 800c752:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c756:	4618      	mov	r0, r3
 800c758:	f7fe fec8 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c75c:	4620      	mov	r0, r4
 800c75e:	b002      	add	sp, #8
 800c760:	bd10      	pop	{r4, pc}

0800c762 <GUI_ARRAY_AddItem>:
 800c762:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c766:	4605      	mov	r5, r0
 800c768:	2800      	cmp	r0, #0
 800c76a:	d03d      	beq.n	800c7e8 <GUI_ARRAY_AddItem+0x86>
 800c76c:	b14a      	cbz	r2, 800c782 <GUI_ARRAY_AddItem+0x20>
 800c76e:	4608      	mov	r0, r1
 800c770:	4611      	mov	r1, r2
 800c772:	f7ff f885 	bl	800b880 <GUI_ALLOC_AllocInit>
 800c776:	f1d0 0401 	rsbs	r4, r0, #1
 800c77a:	4607      	mov	r7, r0
 800c77c:	bf38      	it	cc
 800c77e:	2400      	movcc	r4, #0
 800c780:	e001      	b.n	800c786 <GUI_ARRAY_AddItem+0x24>
 800c782:	4614      	mov	r4, r2
 800c784:	4617      	mov	r7, r2
 800c786:	4628      	mov	r0, r5
 800c788:	f7fe fea2 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c78c:	ae02      	add	r6, sp, #8
 800c78e:	f8b0 8000 	ldrh.w	r8, [r0]
 800c792:	f846 0d08 	str.w	r0, [r6, #-8]!
 800c796:	f8d0 9004 	ldr.w	r9, [r0, #4]
 800c79a:	4668      	mov	r0, sp
 800c79c:	f7fe fea6 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c7a0:	bb24      	cbnz	r4, 800c7ec <GUI_ARRAY_AddItem+0x8a>
 800c7a2:	f108 0101 	add.w	r1, r8, #1
 800c7a6:	4648      	mov	r0, r9
 800c7a8:	0089      	lsls	r1, r1, #2
 800c7aa:	f7ff f8a3 	bl	800b8f4 <GUI_ALLOC_Realloc>
 800c7ae:	4681      	mov	r9, r0
 800c7b0:	b918      	cbnz	r0, 800c7ba <GUI_ARRAY_AddItem+0x58>
 800c7b2:	4638      	mov	r0, r7
 800c7b4:	f7fe fec6 	bl	800b544 <GUI_ALLOC_Free>
 800c7b8:	e018      	b.n	800c7ec <GUI_ARRAY_AddItem+0x8a>
 800c7ba:	f7fe fe89 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c7be:	ab02      	add	r3, sp, #8
 800c7c0:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c7c4:	f840 7028 	str.w	r7, [r0, r8, lsl #2]
 800c7c8:	4618      	mov	r0, r3
 800c7ca:	f7fe fe8f 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c7ce:	4628      	mov	r0, r5
 800c7d0:	f7fe fe7e 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c7d4:	8803      	ldrh	r3, [r0, #0]
 800c7d6:	9000      	str	r0, [sp, #0]
 800c7d8:	3301      	adds	r3, #1
 800c7da:	f8c0 9004 	str.w	r9, [r0, #4]
 800c7de:	8003      	strh	r3, [r0, #0]
 800c7e0:	4668      	mov	r0, sp
 800c7e2:	f7fe fe83 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c7e6:	e002      	b.n	800c7ee <GUI_ARRAY_AddItem+0x8c>
 800c7e8:	4604      	mov	r4, r0
 800c7ea:	e000      	b.n	800c7ee <GUI_ARRAY_AddItem+0x8c>
 800c7ec:	2401      	movs	r4, #1
 800c7ee:	4620      	mov	r0, r4
 800c7f0:	b003      	add	sp, #12
 800c7f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c7f6 <GUI_ARRAY_Delete>:
 800c7f6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c7f8:	4605      	mov	r5, r0
 800c7fa:	b318      	cbz	r0, 800c844 <GUI_ARRAY_Delete+0x4e>
 800c7fc:	f7fe fe68 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c800:	9000      	str	r0, [sp, #0]
 800c802:	6840      	ldr	r0, [r0, #4]
 800c804:	b1c0      	cbz	r0, 800c838 <GUI_ARRAY_Delete+0x42>
 800c806:	f7fe fe63 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c80a:	2400      	movs	r4, #0
 800c80c:	9001      	str	r0, [sp, #4]
 800c80e:	9b00      	ldr	r3, [sp, #0]
 800c810:	881b      	ldrh	r3, [r3, #0]
 800c812:	429c      	cmp	r4, r3
 800c814:	da06      	bge.n	800c824 <GUI_ARRAY_Delete+0x2e>
 800c816:	9801      	ldr	r0, [sp, #4]
 800c818:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 800c81c:	f7ff f828 	bl	800b870 <GUI_ALLOC_FreePtr>
 800c820:	3401      	adds	r4, #1
 800c822:	e7f4      	b.n	800c80e <GUI_ARRAY_Delete+0x18>
 800c824:	a801      	add	r0, sp, #4
 800c826:	f7fe fe61 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c82a:	9800      	ldr	r0, [sp, #0]
 800c82c:	3004      	adds	r0, #4
 800c82e:	f7ff f81f 	bl	800b870 <GUI_ALLOC_FreePtr>
 800c832:	9b00      	ldr	r3, [sp, #0]
 800c834:	2200      	movs	r2, #0
 800c836:	801a      	strh	r2, [r3, #0]
 800c838:	4668      	mov	r0, sp
 800c83a:	f7fe fe57 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c83e:	4628      	mov	r0, r5
 800c840:	f7fe fe80 	bl	800b544 <GUI_ALLOC_Free>
 800c844:	b003      	add	sp, #12
 800c846:	bd30      	pop	{r4, r5, pc}

0800c848 <GUI_ARRAY_GethItem>:
 800c848:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c84a:	460e      	mov	r6, r1
 800c84c:	4605      	mov	r5, r0
 800c84e:	b158      	cbz	r0, 800c868 <GUI_ARRAY_GethItem+0x20>
 800c850:	f7fe fe3e 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c854:	ac02      	add	r4, sp, #8
 800c856:	4631      	mov	r1, r6
 800c858:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c85c:	f7ff ff5a 	bl	800c714 <GUI_ARRAY__GethItem>
 800c860:	4605      	mov	r5, r0
 800c862:	4620      	mov	r0, r4
 800c864:	f7fe fe42 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c868:	4628      	mov	r0, r5
 800c86a:	b002      	add	sp, #8
 800c86c:	bd70      	pop	{r4, r5, r6, pc}

0800c86e <GUI_ARRAY_Create>:
 800c86e:	2008      	movs	r0, #8
 800c870:	f7ff b828 	b.w	800b8c4 <GUI_ALLOC_AllocZero>

0800c874 <FRAMEWIN_DrawSkinFlex>:
 800c874:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c878:	4604      	mov	r4, r0
 800c87a:	b090      	sub	sp, #64	; 0x40
 800c87c:	6800      	ldr	r0, [r0, #0]
 800c87e:	4d9b      	ldr	r5, [pc, #620]	; (800caec <FRAMEWIN_DrawSkinFlex+0x278>)
 800c880:	f7f7 fbe2 	bl	8004048 <FRAMEWIN_GetActive>
 800c884:	4b9a      	ldr	r3, [pc, #616]	; (800caf0 <FRAMEWIN_DrawSkinFlex+0x27c>)
 800c886:	6866      	ldr	r6, [r4, #4]
 800c888:	2800      	cmp	r0, #0
 800c88a:	bf18      	it	ne
 800c88c:	461d      	movne	r5, r3
 800c88e:	2e1c      	cmp	r6, #28
 800c890:	f200 81a6 	bhi.w	800cbe0 <FRAMEWIN_DrawSkinFlex+0x36c>
 800c894:	e8df f016 	tbh	[pc, r6, lsl #1]
 800c898:	01a40191 	.word	0x01a40191
 800c89c:	01a401a4 	.word	0x01a401a4
 800c8a0:	012e01a4 	.word	0x012e01a4
 800c8a4:	01a401a4 	.word	0x01a401a4
 800c8a8:	01a401a4 	.word	0x01a401a4
 800c8ac:	002701a4 	.word	0x002701a4
 800c8b0:	01a401a4 	.word	0x01a401a4
 800c8b4:	01a4017e 	.word	0x01a4017e
 800c8b8:	01a401a4 	.word	0x01a401a4
 800c8bc:	01a40145 	.word	0x01a40145
 800c8c0:	002301a4 	.word	0x002301a4
 800c8c4:	001f001d 	.word	0x001f001d
 800c8c8:	01a40021 	.word	0x01a40021
 800c8cc:	01a401a4 	.word	0x01a401a4
 800c8d0:	0025      	.short	0x0025
 800c8d2:	69ee      	ldr	r6, [r5, #28]
 800c8d4:	e189      	b.n	800cbea <FRAMEWIN_DrawSkinFlex+0x376>
 800c8d6:	6a2e      	ldr	r6, [r5, #32]
 800c8d8:	e187      	b.n	800cbea <FRAMEWIN_DrawSkinFlex+0x376>
 800c8da:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 800c8dc:	e185      	b.n	800cbea <FRAMEWIN_DrawSkinFlex+0x376>
 800c8de:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800c8e0:	e183      	b.n	800cbea <FRAMEWIN_DrawSkinFlex+0x376>
 800c8e2:	696e      	ldr	r6, [r5, #20]
 800c8e4:	e181      	b.n	800cbea <FRAMEWIN_DrawSkinFlex+0x376>
 800c8e6:	231c      	movs	r3, #28
 800c8e8:	6820      	ldr	r0, [r4, #0]
 800c8ea:	9308      	str	r3, [sp, #32]
 800c8ec:	9007      	str	r0, [sp, #28]
 800c8ee:	f7fe fdef 	bl	800b4d0 <GUI_ALLOC_LockH>
 800c8f2:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800c8f4:	9005      	str	r0, [sp, #20]
 800c8f6:	a807      	add	r0, sp, #28
 800c8f8:	4798      	blx	r3
 800c8fa:	4606      	mov	r6, r0
 800c8fc:	a805      	add	r0, sp, #20
 800c8fe:	f7fe fdf5 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800c902:	2e01      	cmp	r6, #1
 800c904:	dd11      	ble.n	800c92a <FRAMEWIN_DrawSkinFlex+0xb6>
 800c906:	682b      	ldr	r3, [r5, #0]
 800c908:	9300      	str	r3, [sp, #0]
 800c90a:	686b      	ldr	r3, [r5, #4]
 800c90c:	9301      	str	r3, [sp, #4]
 800c90e:	68ab      	ldr	r3, [r5, #8]
 800c910:	9302      	str	r3, [sp, #8]
 800c912:	6920      	ldr	r0, [r4, #16]
 800c914:	69a1      	ldr	r1, [r4, #24]
 800c916:	6962      	ldr	r2, [r4, #20]
 800c918:	4633      	mov	r3, r6
 800c91a:	f002 f923 	bl	800eb64 <GUI__DrawTwinArc2>
 800c91e:	6923      	ldr	r3, [r4, #16]
 800c920:	69a7      	ldr	r7, [r4, #24]
 800c922:	eb06 0803 	add.w	r8, r6, r3
 800c926:	1bbf      	subs	r7, r7, r6
 800c928:	e02c      	b.n	800c984 <FRAMEWIN_DrawSkinFlex+0x110>
 800c92a:	6828      	ldr	r0, [r5, #0]
 800c92c:	f7fe f96f 	bl	800ac0e <GUI_SetColor>
 800c930:	6921      	ldr	r1, [r4, #16]
 800c932:	69ea      	ldr	r2, [r5, #28]
 800c934:	6960      	ldr	r0, [r4, #20]
 800c936:	440a      	add	r2, r1
 800c938:	3a01      	subs	r2, #1
 800c93a:	f7fd fa47 	bl	8009dcc <GUI_DrawHLine>
 800c93e:	69a2      	ldr	r2, [r4, #24]
 800c940:	69e9      	ldr	r1, [r5, #28]
 800c942:	6960      	ldr	r0, [r4, #20]
 800c944:	1a51      	subs	r1, r2, r1
 800c946:	3101      	adds	r1, #1
 800c948:	f7fd fa40 	bl	8009dcc <GUI_DrawHLine>
 800c94c:	6967      	ldr	r7, [r4, #20]
 800c94e:	6920      	ldr	r0, [r4, #16]
 800c950:	3701      	adds	r7, #1
 800c952:	4639      	mov	r1, r7
 800c954:	f7fd fa5e 	bl	8009e14 <GUI_DrawPixel>
 800c958:	4639      	mov	r1, r7
 800c95a:	69a0      	ldr	r0, [r4, #24]
 800c95c:	f7fd fa5a 	bl	8009e14 <GUI_DrawPixel>
 800c960:	6868      	ldr	r0, [r5, #4]
 800c962:	f7fe f954 	bl	800ac0e <GUI_SetColor>
 800c966:	6920      	ldr	r0, [r4, #16]
 800c968:	4639      	mov	r1, r7
 800c96a:	3001      	adds	r0, #1
 800c96c:	f7fd fa52 	bl	8009e14 <GUI_DrawPixel>
 800c970:	69a0      	ldr	r0, [r4, #24]
 800c972:	4639      	mov	r1, r7
 800c974:	3801      	subs	r0, #1
 800c976:	f7fd fa4d 	bl	8009e14 <GUI_DrawPixel>
 800c97a:	6923      	ldr	r3, [r4, #16]
 800c97c:	69a7      	ldr	r7, [r4, #24]
 800c97e:	f103 0802 	add.w	r8, r3, #2
 800c982:	3f02      	subs	r7, #2
 800c984:	6828      	ldr	r0, [r5, #0]
 800c986:	f7fe f942 	bl	800ac0e <GUI_SetColor>
 800c98a:	4641      	mov	r1, r8
 800c98c:	463a      	mov	r2, r7
 800c98e:	6960      	ldr	r0, [r4, #20]
 800c990:	f7fd fa1c 	bl	8009dcc <GUI_DrawHLine>
 800c994:	6868      	ldr	r0, [r5, #4]
 800c996:	f7fe f93a 	bl	800ac0e <GUI_SetColor>
 800c99a:	6960      	ldr	r0, [r4, #20]
 800c99c:	4641      	mov	r1, r8
 800c99e:	3001      	adds	r0, #1
 800c9a0:	463a      	mov	r2, r7
 800c9a2:	f7fd fa13 	bl	8009dcc <GUI_DrawHLine>
 800c9a6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800c9a8:	2b02      	cmp	r3, #2
 800c9aa:	dd0a      	ble.n	800c9c2 <FRAMEWIN_DrawSkinFlex+0x14e>
 800c9ac:	68a8      	ldr	r0, [r5, #8]
 800c9ae:	f7fe f92e 	bl	800ac0e <GUI_SetColor>
 800c9b2:	6961      	ldr	r1, [r4, #20]
 800c9b4:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800c9b6:	440b      	add	r3, r1
 800c9b8:	4640      	mov	r0, r8
 800c9ba:	3102      	adds	r1, #2
 800c9bc:	463a      	mov	r2, r7
 800c9be:	3b01      	subs	r3, #1
 800c9c0:	e01d      	b.n	800c9fe <FRAMEWIN_DrawSkinFlex+0x18a>
 800c9c2:	6a2a      	ldr	r2, [r5, #32]
 800c9c4:	42b2      	cmp	r2, r6
 800c9c6:	dd1c      	ble.n	800ca02 <FRAMEWIN_DrawSkinFlex+0x18e>
 800c9c8:	6967      	ldr	r7, [r4, #20]
 800c9ca:	6923      	ldr	r3, [r4, #16]
 800c9cc:	2e01      	cmp	r6, #1
 800c9ce:	f107 0802 	add.w	r8, r7, #2
 800c9d2:	f340 8107 	ble.w	800cbe4 <FRAMEWIN_DrawSkinFlex+0x370>
 800c9d6:	4437      	add	r7, r6
 800c9d8:	18f0      	adds	r0, r6, r3
 800c9da:	441a      	add	r2, r3
 800c9dc:	3a01      	subs	r2, #1
 800c9de:	4641      	mov	r1, r8
 800c9e0:	463b      	mov	r3, r7
 800c9e2:	f7fd fa6f 	bl	8009ec4 <GUI_FillRect>
 800c9e6:	69a3      	ldr	r3, [r4, #24]
 800c9e8:	69e8      	ldr	r0, [r5, #28]
 800c9ea:	2e01      	cmp	r6, #1
 800c9ec:	ebc0 0003 	rsb	r0, r0, r3
 800c9f0:	bfcc      	ite	gt
 800c9f2:	ebc6 0203 	rsbgt	r2, r6, r3
 800c9f6:	1e9a      	suble	r2, r3, #2
 800c9f8:	3001      	adds	r0, #1
 800c9fa:	4641      	mov	r1, r8
 800c9fc:	463b      	mov	r3, r7
 800c9fe:	f7fd fa61 	bl	8009ec4 <GUI_FillRect>
 800ca02:	6963      	ldr	r3, [r4, #20]
 800ca04:	69e7      	ldr	r7, [r4, #28]
 800ca06:	6828      	ldr	r0, [r5, #0]
 800ca08:	2e01      	cmp	r6, #1
 800ca0a:	bfcc      	ite	gt
 800ca0c:	18f6      	addgt	r6, r6, r3
 800ca0e:	1c9e      	addle	r6, r3, #2
 800ca10:	3f01      	subs	r7, #1
 800ca12:	f7fe f8fc 	bl	800ac0e <GUI_SetColor>
 800ca16:	463a      	mov	r2, r7
 800ca18:	6920      	ldr	r0, [r4, #16]
 800ca1a:	4631      	mov	r1, r6
 800ca1c:	f7fd fa30 	bl	8009e80 <GUI_DrawVLine>
 800ca20:	463a      	mov	r2, r7
 800ca22:	4631      	mov	r1, r6
 800ca24:	69a0      	ldr	r0, [r4, #24]
 800ca26:	f7fd fa2b 	bl	8009e80 <GUI_DrawVLine>
 800ca2a:	69e7      	ldr	r7, [r4, #28]
 800ca2c:	6868      	ldr	r0, [r5, #4]
 800ca2e:	f7fe f8ee 	bl	800ac0e <GUI_SetColor>
 800ca32:	6920      	ldr	r0, [r4, #16]
 800ca34:	3f02      	subs	r7, #2
 800ca36:	3001      	adds	r0, #1
 800ca38:	4631      	mov	r1, r6
 800ca3a:	463a      	mov	r2, r7
 800ca3c:	f7fd fa20 	bl	8009e80 <GUI_DrawVLine>
 800ca40:	69a0      	ldr	r0, [r4, #24]
 800ca42:	4631      	mov	r1, r6
 800ca44:	3801      	subs	r0, #1
 800ca46:	463a      	mov	r2, r7
 800ca48:	f7fd fa1a 	bl	8009e80 <GUI_DrawVLine>
 800ca4c:	69eb      	ldr	r3, [r5, #28]
 800ca4e:	2b02      	cmp	r3, #2
 800ca50:	dc02      	bgt.n	800ca58 <FRAMEWIN_DrawSkinFlex+0x1e4>
 800ca52:	6a2b      	ldr	r3, [r5, #32]
 800ca54:	2b02      	cmp	r3, #2
 800ca56:	dd20      	ble.n	800ca9a <FRAMEWIN_DrawSkinFlex+0x226>
 800ca58:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800ca5a:	69e7      	ldr	r7, [r4, #28]
 800ca5c:	68a8      	ldr	r0, [r5, #8]
 800ca5e:	2b02      	cmp	r3, #2
 800ca60:	bfcc      	ite	gt
 800ca62:	ebc3 0707 	rsbgt	r7, r3, r7
 800ca66:	3f02      	suble	r7, #2
 800ca68:	f7fe f8d1 	bl	800ac0e <GUI_SetColor>
 800ca6c:	69ea      	ldr	r2, [r5, #28]
 800ca6e:	2a02      	cmp	r2, #2
 800ca70:	dd07      	ble.n	800ca82 <FRAMEWIN_DrawSkinFlex+0x20e>
 800ca72:	6920      	ldr	r0, [r4, #16]
 800ca74:	4402      	add	r2, r0
 800ca76:	4631      	mov	r1, r6
 800ca78:	3002      	adds	r0, #2
 800ca7a:	3a01      	subs	r2, #1
 800ca7c:	463b      	mov	r3, r7
 800ca7e:	f7fd fa21 	bl	8009ec4 <GUI_FillRect>
 800ca82:	6a2b      	ldr	r3, [r5, #32]
 800ca84:	2b02      	cmp	r3, #2
 800ca86:	dd08      	ble.n	800ca9a <FRAMEWIN_DrawSkinFlex+0x226>
 800ca88:	69a2      	ldr	r2, [r4, #24]
 800ca8a:	69e8      	ldr	r0, [r5, #28]
 800ca8c:	1a10      	subs	r0, r2, r0
 800ca8e:	3001      	adds	r0, #1
 800ca90:	4631      	mov	r1, r6
 800ca92:	3a02      	subs	r2, #2
 800ca94:	463b      	mov	r3, r7
 800ca96:	f7fd fa15 	bl	8009ec4 <GUI_FillRect>
 800ca9a:	6828      	ldr	r0, [r5, #0]
 800ca9c:	f7fe f8b7 	bl	800ac0e <GUI_SetColor>
 800caa0:	6921      	ldr	r1, [r4, #16]
 800caa2:	69a2      	ldr	r2, [r4, #24]
 800caa4:	69e0      	ldr	r0, [r4, #28]
 800caa6:	f7fd f991 	bl	8009dcc <GUI_DrawHLine>
 800caaa:	6868      	ldr	r0, [r5, #4]
 800caac:	f7fe f8af 	bl	800ac0e <GUI_SetColor>
 800cab0:	69e0      	ldr	r0, [r4, #28]
 800cab2:	6921      	ldr	r1, [r4, #16]
 800cab4:	69a2      	ldr	r2, [r4, #24]
 800cab6:	3801      	subs	r0, #1
 800cab8:	3101      	adds	r1, #1
 800caba:	3a01      	subs	r2, #1
 800cabc:	f7fd f986 	bl	8009dcc <GUI_DrawHLine>
 800cac0:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800cac2:	2e02      	cmp	r6, #2
 800cac4:	f340 808c 	ble.w	800cbe0 <FRAMEWIN_DrawSkinFlex+0x36c>
 800cac8:	6920      	ldr	r0, [r4, #16]
 800caca:	69a2      	ldr	r2, [r4, #24]
 800cacc:	69e4      	ldr	r4, [r4, #28]
 800cace:	f100 0802 	add.w	r8, r0, #2
 800cad2:	68a8      	ldr	r0, [r5, #8]
 800cad4:	1e97      	subs	r7, r2, #2
 800cad6:	f7fe f89a 	bl	800ac0e <GUI_SetColor>
 800cada:	1ba1      	subs	r1, r4, r6
 800cadc:	4640      	mov	r0, r8
 800cade:	3101      	adds	r1, #1
 800cae0:	463a      	mov	r2, r7
 800cae2:	1ea3      	subs	r3, r4, #2
 800cae4:	f7fd f9ee 	bl	8009ec4 <GUI_FillRect>
 800cae8:	e07a      	b.n	800cbe0 <FRAMEWIN_DrawSkinFlex+0x36c>
 800caea:	bf00      	nop
 800caec:	20000144 	.word	0x20000144
 800caf0:	20000118 	.word	0x20000118
 800caf4:	8a20      	ldrh	r0, [r4, #16]
 800caf6:	8aa1      	ldrh	r1, [r4, #20]
 800caf8:	8b22      	ldrh	r2, [r4, #24]
 800cafa:	8ba3      	ldrh	r3, [r4, #28]
 800cafc:	68ec      	ldr	r4, [r5, #12]
 800cafe:	9400      	str	r4, [sp, #0]
 800cb00:	692c      	ldr	r4, [r5, #16]
 800cb02:	f8ad 001c 	strh.w	r0, [sp, #28]
 800cb06:	f8ad 101e 	strh.w	r1, [sp, #30]
 800cb0a:	f8ad 2020 	strh.w	r2, [sp, #32]
 800cb0e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cb12:	9401      	str	r4, [sp, #4]
 800cb14:	b200      	sxth	r0, r0
 800cb16:	b209      	sxth	r1, r1
 800cb18:	b212      	sxth	r2, r2
 800cb1a:	b21b      	sxth	r3, r3
 800cb1c:	f002 fc4e 	bl	800f3bc <GUI_DrawGradientV>
 800cb20:	e05e      	b.n	800cbe0 <FRAMEWIN_DrawSkinFlex+0x36c>
 800cb22:	8b2b      	ldrh	r3, [r5, #24]
 800cb24:	6922      	ldr	r2, [r4, #16]
 800cb26:	6820      	ldr	r0, [r4, #0]
 800cb28:	441a      	add	r2, r3
 800cb2a:	f8ad 201c 	strh.w	r2, [sp, #28]
 800cb2e:	6962      	ldr	r2, [r4, #20]
 800cb30:	f8ad 201e 	strh.w	r2, [sp, #30]
 800cb34:	69a2      	ldr	r2, [r4, #24]
 800cb36:	1ad3      	subs	r3, r2, r3
 800cb38:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cb3c:	69e3      	ldr	r3, [r4, #28]
 800cb3e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cb42:	f7fe fcc5 	bl	800b4d0 <GUI_ALLOC_LockH>
 800cb46:	6f03      	ldr	r3, [r0, #112]	; 0x70
 800cb48:	9005      	str	r0, [sp, #20]
 800cb4a:	b1fb      	cbz	r3, 800cb8c <FRAMEWIN_DrawSkinFlex+0x318>
 800cb4c:	2002      	movs	r0, #2
 800cb4e:	f7fe f899 	bl	800ac84 <GUI_SetTextMode>
 800cb52:	9b05      	ldr	r3, [sp, #20]
 800cb54:	f8b3 207c 	ldrh.w	r2, [r3, #124]	; 0x7c
 800cb58:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800cb5c:	320e      	adds	r2, #14
 800cb5e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800cb62:	6898      	ldr	r0, [r3, #8]
 800cb64:	f7fe f853 	bl	800ac0e <GUI_SetColor>
 800cb68:	9b05      	ldr	r3, [sp, #20]
 800cb6a:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800cb6c:	f7fe f854 	bl	800ac18 <GUI_SetFont>
 800cb70:	9b05      	ldr	r3, [sp, #20]
 800cb72:	6f18      	ldr	r0, [r3, #112]	; 0x70
 800cb74:	f7fe fcac 	bl	800b4d0 <GUI_ALLOC_LockH>
 800cb78:	9b05      	ldr	r3, [sp, #20]
 800cb7a:	9006      	str	r0, [sp, #24]
 800cb7c:	a907      	add	r1, sp, #28
 800cb7e:	f9b3 205a 	ldrsh.w	r2, [r3, #90]	; 0x5a
 800cb82:	f7fd fc2a 	bl	800a3da <GUI_DispStringInRect>
 800cb86:	a806      	add	r0, sp, #24
 800cb88:	f7fe fcb0 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800cb8c:	a805      	add	r0, sp, #20
 800cb8e:	f7fe fcad 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800cb92:	e025      	b.n	800cbe0 <FRAMEWIN_DrawSkinFlex+0x36c>
 800cb94:	6923      	ldr	r3, [r4, #16]
 800cb96:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cb9a:	6963      	ldr	r3, [r4, #20]
 800cb9c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cba0:	69a3      	ldr	r3, [r4, #24]
 800cba2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cba6:	68a8      	ldr	r0, [r5, #8]
 800cba8:	69e3      	ldr	r3, [r4, #28]
 800cbaa:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cbae:	f7fe f82e 	bl	800ac0e <GUI_SetColor>
 800cbb2:	a807      	add	r0, sp, #28
 800cbb4:	f7fd f9a8 	bl	8009f08 <GUI_FillRectEx>
 800cbb8:	e012      	b.n	800cbe0 <FRAMEWIN_DrawSkinFlex+0x36c>
 800cbba:	6820      	ldr	r0, [r4, #0]
 800cbbc:	f7fe fc88 	bl	800b4d0 <GUI_ALLOC_LockH>
 800cbc0:	ab10      	add	r3, sp, #64	; 0x40
 800cbc2:	f8b0 205a 	ldrh.w	r2, [r0, #90]	; 0x5a
 800cbc6:	f843 0d2c 	str.w	r0, [r3, #-44]!
 800cbca:	f042 020c 	orr.w	r2, r2, #12
 800cbce:	f8a0 205a 	strh.w	r2, [r0, #90]	; 0x5a
 800cbd2:	4618      	mov	r0, r3
 800cbd4:	f7fe fc8a 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800cbd8:	6820      	ldr	r0, [r4, #0]
 800cbda:	f7f7 fbe3 	bl	80043a4 <WM_SetHasTrans>
 800cbde:	e004      	b.n	800cbea <FRAMEWIN_DrawSkinFlex+0x376>
 800cbe0:	2600      	movs	r6, #0
 800cbe2:	e002      	b.n	800cbea <FRAMEWIN_DrawSkinFlex+0x376>
 800cbe4:	1c98      	adds	r0, r3, #2
 800cbe6:	4647      	mov	r7, r8
 800cbe8:	e6f7      	b.n	800c9da <FRAMEWIN_DrawSkinFlex+0x166>
 800cbea:	4630      	mov	r0, r6
 800cbec:	b010      	add	sp, #64	; 0x40
 800cbee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cbf2:	bf00      	nop

0800cbf4 <_GetBorderSize>:
 800cbf4:	b570      	push	{r4, r5, r6, lr}
 800cbf6:	b08a      	sub	sp, #40	; 0x28
 800cbf8:	4605      	mov	r5, r0
 800cbfa:	460c      	mov	r4, r1
 800cbfc:	f7fe fc68 	bl	800b4d0 <GUI_ALLOC_LockH>
 800cc00:	ab0a      	add	r3, sp, #40	; 0x28
 800cc02:	6d06      	ldr	r6, [r0, #80]	; 0x50
 800cc04:	f843 0d28 	str.w	r0, [r3, #-40]!
 800cc08:	4668      	mov	r0, sp
 800cc0a:	f7fe fc6f 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800cc0e:	9501      	str	r5, [sp, #4]
 800cc10:	2c03      	cmp	r4, #3
 800cc12:	d80b      	bhi.n	800cc2c <_GetBorderSize+0x38>
 800cc14:	e8df f004 	tbb	[pc, r4]
 800cc18:	08060402 	.word	0x08060402
 800cc1c:	2318      	movs	r3, #24
 800cc1e:	e004      	b.n	800cc2a <_GetBorderSize+0x36>
 800cc20:	2316      	movs	r3, #22
 800cc22:	e002      	b.n	800cc2a <_GetBorderSize+0x36>
 800cc24:	2315      	movs	r3, #21
 800cc26:	e000      	b.n	800cc2a <_GetBorderSize+0x36>
 800cc28:	2317      	movs	r3, #23
 800cc2a:	9302      	str	r3, [sp, #8]
 800cc2c:	a801      	add	r0, sp, #4
 800cc2e:	47b0      	blx	r6
 800cc30:	b00a      	add	sp, #40	; 0x28
 800cc32:	bd70      	pop	{r4, r5, r6, pc}

0800cc34 <_Create>:
 800cc34:	b530      	push	{r4, r5, lr}
 800cc36:	b08b      	sub	sp, #44	; 0x2c
 800cc38:	4605      	mov	r5, r0
 800cc3a:	f7fe fc49 	bl	800b4d0 <GUI_ALLOC_LockH>
 800cc3e:	ab0a      	add	r3, sp, #40	; 0x28
 800cc40:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 800cc42:	f843 0d28 	str.w	r0, [r3, #-40]!
 800cc46:	4668      	mov	r0, sp
 800cc48:	6894      	ldr	r4, [r2, #8]
 800cc4a:	f7fe fc4f 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800cc4e:	a80a      	add	r0, sp, #40	; 0x28
 800cc50:	2300      	movs	r3, #0
 800cc52:	9302      	str	r3, [sp, #8]
 800cc54:	f840 5d24 	str.w	r5, [r0, #-36]!
 800cc58:	6863      	ldr	r3, [r4, #4]
 800cc5a:	4798      	blx	r3
 800cc5c:	b00b      	add	sp, #44	; 0x2c
 800cc5e:	bd30      	pop	{r4, r5, pc}

0800cc60 <_Paint>:
 800cc60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc64:	b091      	sub	sp, #68	; 0x44
 800cc66:	4604      	mov	r4, r0
 800cc68:	f7fe fc32 	bl	800b4d0 <GUI_ALLOC_LockH>
 800cc6c:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 800cc6e:	6b46      	ldr	r6, [r0, #52]	; 0x34
 800cc70:	9603      	str	r6, [sp, #12]
 800cc72:	9006      	str	r0, [sp, #24]
 800cc74:	689e      	ldr	r6, [r3, #8]
 800cc76:	6d05      	ldr	r5, [r0, #80]	; 0x50
 800cc78:	f7f6 ff1d 	bl	8003ab6 <FRAMEWIN__CalcTitleHeight>
 800cc7c:	4683      	mov	fp, r0
 800cc7e:	a810      	add	r0, sp, #64	; 0x40
 800cc80:	f850 2d28 	ldr.w	r2, [r0, #-40]!
 800cc84:	f8b2 2058 	ldrh.w	r2, [r2, #88]	; 0x58
 800cc88:	9204      	str	r2, [sp, #16]
 800cc8a:	f7fe fc2f 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800cc8e:	4620      	mov	r0, r4
 800cc90:	f7f8 f8e6 	bl	8004e60 <WM_GetWindowSizeX>
 800cc94:	4681      	mov	r9, r0
 800cc96:	4620      	mov	r0, r4
 800cc98:	f7f8 f8f7 	bl	8004e8a <WM_GetWindowSizeY>
 800cc9c:	6832      	ldr	r2, [r6, #0]
 800cc9e:	2101      	movs	r1, #1
 800cca0:	4680      	mov	r8, r0
 800cca2:	4620      	mov	r0, r4
 800cca4:	4790      	blx	r2
 800cca6:	6832      	ldr	r2, [r6, #0]
 800cca8:	2103      	movs	r1, #3
 800ccaa:	4607      	mov	r7, r0
 800ccac:	4620      	mov	r0, r4
 800ccae:	4790      	blx	r2
 800ccb0:	6832      	ldr	r2, [r6, #0]
 800ccb2:	2100      	movs	r1, #0
 800ccb4:	4682      	mov	sl, r0
 800ccb6:	4620      	mov	r0, r4
 800ccb8:	4790      	blx	r2
 800ccba:	6833      	ldr	r3, [r6, #0]
 800ccbc:	9002      	str	r0, [sp, #8]
 800ccbe:	2102      	movs	r1, #2
 800ccc0:	4620      	mov	r0, r4
 800ccc2:	4798      	blx	r3
 800ccc4:	9005      	str	r0, [sp, #20]
 800ccc6:	2000      	movs	r0, #0
 800ccc8:	9407      	str	r4, [sp, #28]
 800ccca:	f7f9 f885 	bl	8005dd8 <WM__InitIVRSearch>
 800ccce:	2800      	cmp	r0, #0
 800ccd0:	d044      	beq.n	800cd5c <_Paint+0xfc>
 800ccd2:	2300      	movs	r3, #0
 800ccd4:	930c      	str	r3, [sp, #48]	; 0x30
 800ccd6:	930b      	str	r3, [sp, #44]	; 0x2c
 800ccd8:	f109 33ff 	add.w	r3, r9, #4294967295
 800ccdc:	930d      	str	r3, [sp, #52]	; 0x34
 800ccde:	f108 33ff 	add.w	r3, r8, #4294967295
 800cce2:	930e      	str	r3, [sp, #56]	; 0x38
 800cce4:	230b      	movs	r3, #11
 800cce6:	9308      	str	r3, [sp, #32]
 800cce8:	a807      	add	r0, sp, #28
 800ccea:	47a8      	blx	r5
 800ccec:	9b02      	ldr	r3, [sp, #8]
 800ccee:	9e04      	ldr	r6, [sp, #16]
 800ccf0:	970b      	str	r7, [sp, #44]	; 0x2c
 800ccf2:	445b      	add	r3, fp
 800ccf4:	fa03 f086 	sxtah	r0, r3, r6
 800ccf8:	9e05      	ldr	r6, [sp, #20]
 800ccfa:	930c      	str	r3, [sp, #48]	; 0x30
 800ccfc:	ebc6 0108 	rsb	r1, r6, r8
 800cd00:	ebca 0209 	rsb	r2, sl, r9
 800cd04:	3801      	subs	r0, #1
 800cd06:	3901      	subs	r1, #1
 800cd08:	3a01      	subs	r2, #1
 800cd0a:	4288      	cmp	r0, r1
 800cd0c:	bfd4      	ite	le
 800cd0e:	900e      	strle	r0, [sp, #56]	; 0x38
 800cd10:	910e      	strgt	r1, [sp, #56]	; 0x38
 800cd12:	210e      	movs	r1, #14
 800cd14:	9108      	str	r1, [sp, #32]
 800cd16:	e88d 000c 	stmia.w	sp, {r2, r3}
 800cd1a:	920d      	str	r2, [sp, #52]	; 0x34
 800cd1c:	a807      	add	r0, sp, #28
 800cd1e:	47a8      	blx	r5
 800cd20:	9b01      	ldr	r3, [sp, #4]
 800cd22:	9a00      	ldr	r2, [sp, #0]
 800cd24:	9e02      	ldr	r6, [sp, #8]
 800cd26:	920d      	str	r2, [sp, #52]	; 0x34
 800cd28:	3b01      	subs	r3, #1
 800cd2a:	930e      	str	r3, [sp, #56]	; 0x38
 800cd2c:	2305      	movs	r3, #5
 800cd2e:	9308      	str	r3, [sp, #32]
 800cd30:	970b      	str	r7, [sp, #44]	; 0x2c
 800cd32:	960c      	str	r6, [sp, #48]	; 0x30
 800cd34:	a807      	add	r0, sp, #28
 800cd36:	47a8      	blx	r5
 800cd38:	a90b      	add	r1, sp, #44	; 0x2c
 800cd3a:	aa0d      	add	r2, sp, #52	; 0x34
 800cd3c:	4620      	mov	r0, r4
 800cd3e:	f7f6 fec9 	bl	8003ad4 <FRAMEWIN__GetTitleLimits>
 800cd42:	2002      	movs	r0, #2
 800cd44:	f7fd ff9e 	bl	800ac84 <GUI_SetTextMode>
 800cd48:	9803      	ldr	r0, [sp, #12]
 800cd4a:	f7fd ff65 	bl	800ac18 <GUI_SetFont>
 800cd4e:	2312      	movs	r3, #18
 800cd50:	9308      	str	r3, [sp, #32]
 800cd52:	a807      	add	r0, sp, #28
 800cd54:	47a8      	blx	r5
 800cd56:	f7f8 ff7d 	bl	8005c54 <WM__GetNextIVR>
 800cd5a:	e7b8      	b.n	800ccce <_Paint+0x6e>
 800cd5c:	b011      	add	sp, #68	; 0x44
 800cd5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800cd62 <_cbTimer>:
 800cd62:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800cd64:	4604      	mov	r4, r0
 800cd66:	2100      	movs	r1, #0
 800cd68:	4668      	mov	r0, sp
 800cd6a:	2210      	movs	r2, #16
 800cd6c:	f002 ffee 	bl	800fd4c <memset>
 800cd70:	6860      	ldr	r0, [r4, #4]
 800cd72:	b150      	cbz	r0, 800cd8a <_cbTimer+0x28>
 800cd74:	f7fe fba2 	bl	800b4bc <GUI_ALLOC_h2p>
 800cd78:	f240 1313 	movw	r3, #275	; 0x113
 800cd7c:	6840      	ldr	r0, [r0, #4]
 800cd7e:	9300      	str	r3, [sp, #0]
 800cd80:	4669      	mov	r1, sp
 800cd82:	6863      	ldr	r3, [r4, #4]
 800cd84:	9303      	str	r3, [sp, #12]
 800cd86:	f7f8 fc62 	bl	800564e <WM_SendMessage>
 800cd8a:	b004      	add	sp, #16
 800cd8c:	bd10      	pop	{r4, pc}

0800cd8e <WM_DeleteTimer>:
 800cd8e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cd90:	4605      	mov	r5, r0
 800cd92:	b168      	cbz	r0, 800cdb0 <WM_DeleteTimer+0x22>
 800cd94:	f7fe fb9c 	bl	800b4d0 <GUI_ALLOC_LockH>
 800cd98:	ac02      	add	r4, sp, #8
 800cd9a:	f844 0d04 	str.w	r0, [r4, #-4]!
 800cd9e:	6800      	ldr	r0, [r0, #0]
 800cda0:	f7fc fd00 	bl	80097a4 <GUI_TIMER_Delete>
 800cda4:	4620      	mov	r0, r4
 800cda6:	f7fe fba1 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800cdaa:	4628      	mov	r0, r5
 800cdac:	f7fe fbca 	bl	800b544 <GUI_ALLOC_Free>
 800cdb0:	b003      	add	sp, #12
 800cdb2:	bd30      	pop	{r4, r5, pc}

0800cdb4 <WM__DeleteAssocTimer>:
 800cdb4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cdb6:	4605      	mov	r5, r0
 800cdb8:	a801      	add	r0, sp, #4
 800cdba:	f7fc fc71 	bl	80096a0 <GUI_TIMER__GetFirstTimer>
 800cdbe:	4604      	mov	r4, r0
 800cdc0:	b1dc      	cbz	r4, 800cdfa <WM__DeleteAssocTimer+0x46>
 800cdc2:	4620      	mov	r0, r4
 800cdc4:	2101      	movs	r1, #1
 800cdc6:	f7fc fd48 	bl	800985a <GUI_TIMER_GetFlag>
 800cdca:	9b01      	ldr	r3, [sp, #4]
 800cdcc:	b183      	cbz	r3, 800cdf0 <WM__DeleteAssocTimer+0x3c>
 800cdce:	b178      	cbz	r0, 800cdf0 <WM__DeleteAssocTimer+0x3c>
 800cdd0:	4618      	mov	r0, r3
 800cdd2:	f7fe fb73 	bl	800b4bc <GUI_ALLOC_h2p>
 800cdd6:	6843      	ldr	r3, [r0, #4]
 800cdd8:	42ab      	cmp	r3, r5
 800cdda:	d109      	bne.n	800cdf0 <WM__DeleteAssocTimer+0x3c>
 800cddc:	4620      	mov	r0, r4
 800cdde:	a901      	add	r1, sp, #4
 800cde0:	9e01      	ldr	r6, [sp, #4]
 800cde2:	f7fc fc75 	bl	80096d0 <GUI_TIMER__GetNextTimerLin>
 800cde6:	4604      	mov	r4, r0
 800cde8:	4630      	mov	r0, r6
 800cdea:	f7ff ffd0 	bl	800cd8e <WM_DeleteTimer>
 800cdee:	e7e7      	b.n	800cdc0 <WM__DeleteAssocTimer+0xc>
 800cdf0:	4620      	mov	r0, r4
 800cdf2:	a901      	add	r1, sp, #4
 800cdf4:	f7fc fc6c 	bl	80096d0 <GUI_TIMER__GetNextTimerLin>
 800cdf8:	e7e1      	b.n	800cdbe <WM__DeleteAssocTimer+0xa>
 800cdfa:	b002      	add	sp, #8
 800cdfc:	bd70      	pop	{r4, r5, r6, pc}
	...

0800ce00 <WM_CreateTimer>:
 800ce00:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ce04:	4680      	mov	r8, r0
 800ce06:	200c      	movs	r0, #12
 800ce08:	460f      	mov	r7, r1
 800ce0a:	4616      	mov	r6, r2
 800ce0c:	f7fe fd5a 	bl	800b8c4 <GUI_ALLOC_AllocZero>
 800ce10:	4604      	mov	r4, r0
 800ce12:	b1f0      	cbz	r0, 800ce52 <WM_CreateTimer+0x52>
 800ce14:	f7fc fd36 	bl	8009884 <GUI_GetTime>
 800ce18:	4622      	mov	r2, r4
 800ce1a:	1981      	adds	r1, r0, r6
 800ce1c:	2301      	movs	r3, #1
 800ce1e:	480f      	ldr	r0, [pc, #60]	; (800ce5c <WM_CreateTimer+0x5c>)
 800ce20:	f7fc fc72 	bl	8009708 <GUI_TIMER_Create>
 800ce24:	4605      	mov	r5, r0
 800ce26:	4620      	mov	r0, r4
 800ce28:	b185      	cbz	r5, 800ce4c <WM_CreateTimer+0x4c>
 800ce2a:	f7fe fb51 	bl	800b4d0 <GUI_ALLOC_LockH>
 800ce2e:	4603      	mov	r3, r0
 800ce30:	a802      	add	r0, sp, #8
 800ce32:	f8c3 8004 	str.w	r8, [r3, #4]
 800ce36:	f840 3d04 	str.w	r3, [r0, #-4]!
 800ce3a:	609f      	str	r7, [r3, #8]
 800ce3c:	601d      	str	r5, [r3, #0]
 800ce3e:	f7fe fb55 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800ce42:	4628      	mov	r0, r5
 800ce44:	4631      	mov	r1, r6
 800ce46:	f7fc fce1 	bl	800980c <GUI_TIMER_SetPeriod>
 800ce4a:	e002      	b.n	800ce52 <WM_CreateTimer+0x52>
 800ce4c:	f7fe fb7a 	bl	800b544 <GUI_ALLOC_Free>
 800ce50:	462c      	mov	r4, r5
 800ce52:	4620      	mov	r0, r4
 800ce54:	b002      	add	sp, #8
 800ce56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ce5a:	bf00      	nop
 800ce5c:	0800cd63 	.word	0x0800cd63

0800ce60 <WM_RestartTimer>:
 800ce60:	b513      	push	{r0, r1, r4, lr}
 800ce62:	460c      	mov	r4, r1
 800ce64:	b180      	cbz	r0, 800ce88 <WM_RestartTimer+0x28>
 800ce66:	f7fe fb33 	bl	800b4d0 <GUI_ALLOC_LockH>
 800ce6a:	9001      	str	r0, [sp, #4]
 800ce6c:	b11c      	cbz	r4, 800ce76 <WM_RestartTimer+0x16>
 800ce6e:	6800      	ldr	r0, [r0, #0]
 800ce70:	4621      	mov	r1, r4
 800ce72:	f7fc fccb 	bl	800980c <GUI_TIMER_SetPeriod>
 800ce76:	ac02      	add	r4, sp, #8
 800ce78:	f854 3d04 	ldr.w	r3, [r4, #-4]!
 800ce7c:	6818      	ldr	r0, [r3, #0]
 800ce7e:	f7fc fcd3 	bl	8009828 <GUI_TIMER_Restart>
 800ce82:	4620      	mov	r0, r4
 800ce84:	f7fe fb32 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800ce88:	b002      	add	sp, #8
 800ce8a:	bd10      	pop	{r4, pc}

0800ce8c <_Convert16>:
 800ce8c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce90:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800ce94:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800ce98:	4605      	mov	r5, r0
 800ce9a:	460e      	mov	r6, r1
 800ce9c:	4690      	mov	r8, r2
 800ce9e:	461f      	mov	r7, r3
 800cea0:	4614      	mov	r4, r2
 800cea2:	4689      	mov	r9, r1
 800cea4:	f835 0b02 	ldrh.w	r0, [r5], #2
 800cea8:	47d8      	blx	fp
 800ceaa:	47d0      	blx	sl
 800ceac:	3c01      	subs	r4, #1
 800ceae:	f849 0b04 	str.w	r0, [r9], #4
 800ceb2:	d1f7      	bne.n	800cea4 <_Convert16+0x18>
 800ceb4:	2f1f      	cmp	r7, #31
 800ceb6:	d806      	bhi.n	800cec6 <_Convert16+0x3a>
 800ceb8:	4630      	mov	r0, r6
 800ceba:	4641      	mov	r1, r8
 800cebc:	463a      	mov	r2, r7
 800cebe:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cec2:	f001 bf03 	b.w	800eccc <GUI__CompactPixelIndices>
 800cec6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ceca <_Convert8>:
 800ceca:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cece:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800ced2:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800ced6:	4605      	mov	r5, r0
 800ced8:	460e      	mov	r6, r1
 800ceda:	4690      	mov	r8, r2
 800cedc:	461f      	mov	r7, r3
 800cede:	4689      	mov	r9, r1
 800cee0:	4604      	mov	r4, r0
 800cee2:	f814 0b01 	ldrb.w	r0, [r4], #1
 800cee6:	47d8      	blx	fp
 800cee8:	47d0      	blx	sl
 800ceea:	1b2b      	subs	r3, r5, r4
 800ceec:	4443      	add	r3, r8
 800ceee:	f849 0b04 	str.w	r0, [r9], #4
 800cef2:	2b00      	cmp	r3, #0
 800cef4:	d1f5      	bne.n	800cee2 <_Convert8+0x18>
 800cef6:	2f1f      	cmp	r7, #31
 800cef8:	d806      	bhi.n	800cf08 <_Convert8+0x3e>
 800cefa:	4630      	mov	r0, r6
 800cefc:	4641      	mov	r1, r8
 800cefe:	463a      	mov	r2, r7
 800cf00:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf04:	f001 bee2 	b.w	800eccc <GUI__CompactPixelIndices>
 800cf08:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800cf0c <GUI_MEMDEV__WriteToActiveOpaque>:
 800cf0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf10:	b09d      	sub	sp, #116	; 0x74
 800cf12:	4606      	mov	r6, r0
 800cf14:	910f      	str	r1, [sp, #60]	; 0x3c
 800cf16:	920d      	str	r2, [sp, #52]	; 0x34
 800cf18:	2800      	cmp	r0, #0
 800cf1a:	f000 8386 	beq.w	800d62a <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800cf1e:	f7fe fad7 	bl	800b4d0 <GUI_ALLOC_LockH>
 800cf22:	ab1c      	add	r3, sp, #112	; 0x70
 800cf24:	6944      	ldr	r4, [r0, #20]
 800cf26:	f843 0d1c 	str.w	r0, [r3, #-28]!
 800cf2a:	4618      	mov	r0, r3
 800cf2c:	f7fe fade 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800cf30:	4630      	mov	r0, r6
 800cf32:	f7fa f955 	bl	80071e0 <GUI_MEMDEV_GetBitsPerPixel>
 800cf36:	2808      	cmp	r0, #8
 800cf38:	4601      	mov	r1, r0
 800cf3a:	dd02      	ble.n	800cf42 <GUI_MEMDEV__WriteToActiveOpaque+0x36>
 800cf3c:	2c00      	cmp	r4, #0
 800cf3e:	f000 81c3 	beq.w	800d2c8 <GUI_MEMDEV__WriteToActiveOpaque+0x3bc>
 800cf42:	2201      	movs	r2, #1
 800cf44:	f04f 0800 	mov.w	r8, #0
 800cf48:	4630      	mov	r0, r6
 800cf4a:	921b      	str	r2, [sp, #108]	; 0x6c
 800cf4c:	920b      	str	r2, [sp, #44]	; 0x2c
 800cf4e:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 800cf52:	f7fe fabd 	bl	800b4d0 <GUI_ALLOC_LockH>
 800cf56:	6803      	ldr	r3, [r0, #0]
 800cf58:	f8df a60c 	ldr.w	sl, [pc, #1548]	; 800d568 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>
 800cf5c:	691b      	ldr	r3, [r3, #16]
 800cf5e:	f9b0 100a 	ldrsh.w	r1, [r0, #10]
 800cf62:	685b      	ldr	r3, [r3, #4]
 800cf64:	930e      	str	r3, [sp, #56]	; 0x38
 800cf66:	f10d 0b70 	add.w	fp, sp, #112	; 0x70
 800cf6a:	f8da 3000 	ldr.w	r3, [sl]
 800cf6e:	f84b 0d14 	str.w	r0, [fp, #-20]!
 800cf72:	6904      	ldr	r4, [r0, #16]
 800cf74:	6945      	ldr	r5, [r0, #20]
 800cf76:	f8d0 900c 	ldr.w	r9, [r0, #12]
 800cf7a:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 800cf7e:	7c58      	ldrb	r0, [r3, #17]
 800cf80:	9112      	str	r1, [sp, #72]	; 0x48
 800cf82:	f7fb fb17 	bl	80085b4 <GUI_GetBitsPerPixelEx>
 800cf86:	f8da 3000 	ldr.w	r3, [sl]
 800cf8a:	9010      	str	r0, [sp, #64]	; 0x40
 800cf8c:	7c58      	ldrb	r0, [r3, #17]
 800cf8e:	f7fb fb2f 	bl	80085f0 <GUI_GetpfIndex2ColorEx>
 800cf92:	4603      	mov	r3, r0
 800cf94:	4658      	mov	r0, fp
 800cf96:	9309      	str	r3, [sp, #36]	; 0x24
 800cf98:	f7fe faa8 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800cf9c:	2c08      	cmp	r4, #8
 800cf9e:	4651      	mov	r1, sl
 800cfa0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cfa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cfa4:	d904      	bls.n	800cfb0 <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 800cfa6:	2c10      	cmp	r4, #16
 800cfa8:	bf8c      	ite	hi
 800cfaa:	2204      	movhi	r2, #4
 800cfac:	2202      	movls	r2, #2
 800cfae:	e005      	b.n	800cfbc <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 800cfb0:	2c01      	cmp	r4, #1
 800cfb2:	d103      	bne.n	800cfbc <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 800cfb4:	9411      	str	r4, [sp, #68]	; 0x44
 800cfb6:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 800cfba:	e000      	b.n	800cfbe <GUI_MEMDEV__WriteToActiveOpaque+0xb2>
 800cfbc:	9211      	str	r2, [sp, #68]	; 0x44
 800cfbe:	980e      	ldr	r0, [sp, #56]	; 0x38
 800cfc0:	4298      	cmp	r0, r3
 800cfc2:	f000 80e2 	beq.w	800d18a <GUI_MEMDEV__WriteToActiveOpaque+0x27e>
 800cfc6:	680b      	ldr	r3, [r1, #0]
 800cfc8:	7c58      	ldrb	r0, [r3, #17]
 800cfca:	f7fb fb19 	bl	8008600 <GUI_GetpfColor2IndexEx>
 800cfce:	9013      	str	r0, [sp, #76]	; 0x4c
 800cfd0:	00b8      	lsls	r0, r7, #2
 800cfd2:	f7fe fc49 	bl	800b868 <GUI_ALLOC_AllocNoInit>
 800cfd6:	900c      	str	r0, [sp, #48]	; 0x30
 800cfd8:	2800      	cmp	r0, #0
 800cfda:	f000 8326 	beq.w	800d62a <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800cfde:	4630      	mov	r0, r6
 800cfe0:	f7f9 fa96 	bl	8006510 <GUI_MEMDEV_GetDataPtr>
 800cfe4:	4606      	mov	r6, r0
 800cfe6:	2d00      	cmp	r5, #0
 800cfe8:	f000 80be 	beq.w	800d168 <GUI_MEMDEV__WriteToActiveOpaque+0x25c>
 800cfec:	4628      	mov	r0, r5
 800cfee:	f7fe fa6f 	bl	800b4d0 <GUI_ALLOC_LockH>
 800cff2:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 800cff6:	9018      	str	r0, [sp, #96]	; 0x60
 800cff8:	f04f 0a00 	mov.w	sl, #0
 800cffc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800cffe:	4592      	cmp	sl, r2
 800d000:	f280 80ae 	bge.w	800d160 <GUI_MEMDEV__WriteToActiveOpaque+0x254>
 800d004:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d006:	2300      	movs	r3, #0
 800d008:	9319      	str	r3, [sp, #100]	; 0x64
 800d00a:	6883      	ldr	r3, [r0, #8]
 800d00c:	a919      	add	r1, sp, #100	; 0x64
 800d00e:	695b      	ldr	r3, [r3, #20]
 800d010:	4652      	mov	r2, sl
 800d012:	4798      	blx	r3
 800d014:	42b8      	cmp	r0, r7
 800d016:	4605      	mov	r5, r0
 800d018:	d12f      	bne.n	800d07a <GUI_MEMDEV__WriteToActiveOpaque+0x16e>
 800d01a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d01c:	f7fe fa58 	bl	800b4d0 <GUI_ALLOC_LockH>
 800d020:	2c08      	cmp	r4, #8
 800d022:	4601      	mov	r1, r0
 800d024:	9016      	str	r0, [sp, #88]	; 0x58
 800d026:	d909      	bls.n	800d03c <GUI_MEMDEV__WriteToActiveOpaque+0x130>
 800d028:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d02a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800d02c:	9200      	str	r2, [sp, #0]
 800d02e:	9301      	str	r3, [sp, #4]
 800d030:	4630      	mov	r0, r6
 800d032:	463a      	mov	r2, r7
 800d034:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d036:	f7ff ff29 	bl	800ce8c <_Convert16>
 800d03a:	e008      	b.n	800d04e <GUI_MEMDEV__WriteToActiveOpaque+0x142>
 800d03c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800d03e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800d040:	9000      	str	r0, [sp, #0]
 800d042:	9201      	str	r2, [sp, #4]
 800d044:	4630      	mov	r0, r6
 800d046:	463a      	mov	r2, r7
 800d048:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d04a:	f7ff ff3e 	bl	800ceca <_Convert8>
 800d04e:	2301      	movs	r3, #1
 800d050:	9810      	ldr	r0, [sp, #64]	; 0x40
 800d052:	9002      	str	r0, [sp, #8]
 800d054:	ad1c      	add	r5, sp, #112	; 0x70
 800d056:	2200      	movs	r2, #0
 800d058:	9300      	str	r3, [sp, #0]
 800d05a:	9301      	str	r3, [sp, #4]
 800d05c:	9203      	str	r2, [sp, #12]
 800d05e:	f855 2d18 	ldr.w	r2, [r5, #-24]!
 800d062:	9204      	str	r2, [sp, #16]
 800d064:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d066:	f8cd 8014 	str.w	r8, [sp, #20]
 800d06a:	4659      	mov	r1, fp
 800d06c:	463a      	mov	r2, r7
 800d06e:	f7fb fce3 	bl	8008a38 <LCD_DrawBitmap>
 800d072:	4628      	mov	r0, r5
 800d074:	f7fe fa3a 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800d078:	e060      	b.n	800d13c <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 800d07a:	2c01      	cmp	r4, #1
 800d07c:	d15c      	bne.n	800d138 <GUI_MEMDEV__WriteToActiveOpaque+0x22c>
 800d07e:	2d00      	cmp	r5, #0
 800d080:	d05c      	beq.n	800d13c <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 800d082:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d084:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800d086:	f8cd 900c 	str.w	r9, [sp, #12]
 800d08a:	2208      	movs	r2, #8
 800d08c:	fb90 f2f2 	sdiv	r2, r0, r2
 800d090:	4432      	add	r2, r6
 800d092:	2301      	movs	r3, #1
 800d094:	9204      	str	r2, [sp, #16]
 800d096:	f000 0207 	and.w	r2, r0, #7
 800d09a:	9300      	str	r3, [sp, #0]
 800d09c:	4408      	add	r0, r1
 800d09e:	9301      	str	r3, [sp, #4]
 800d0a0:	9302      	str	r3, [sp, #8]
 800d0a2:	9206      	str	r2, [sp, #24]
 800d0a4:	4659      	mov	r1, fp
 800d0a6:	462a      	mov	r2, r5
 800d0a8:	f8cd 8014 	str.w	r8, [sp, #20]
 800d0ac:	f7fb fbe8 	bl	8008880 <LCD__DrawBitmap_1bpp>
 800d0b0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d0b2:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d0b4:	441d      	add	r5, r3
 800d0b6:	6883      	ldr	r3, [r0, #8]
 800d0b8:	9519      	str	r5, [sp, #100]	; 0x64
 800d0ba:	695b      	ldr	r3, [r3, #20]
 800d0bc:	a919      	add	r1, sp, #100	; 0x64
 800d0be:	4652      	mov	r2, sl
 800d0c0:	4798      	blx	r3
 800d0c2:	4605      	mov	r5, r0
 800d0c4:	e7db      	b.n	800d07e <GUI_MEMDEV__WriteToActiveOpaque+0x172>
 800d0c6:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d0c8:	f7fe fa02 	bl	800b4d0 <GUI_ALLOC_LockH>
 800d0cc:	2c08      	cmp	r4, #8
 800d0ce:	4601      	mov	r1, r0
 800d0d0:	9016      	str	r0, [sp, #88]	; 0x58
 800d0d2:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d0d4:	d938      	bls.n	800d148 <GUI_MEMDEV__WriteToActiveOpaque+0x23c>
 800d0d6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d0d8:	9200      	str	r2, [sp, #0]
 800d0da:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800d0dc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800d0de:	9301      	str	r3, [sp, #4]
 800d0e0:	fb00 6002 	mla	r0, r0, r2, r6
 800d0e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d0e6:	462a      	mov	r2, r5
 800d0e8:	f7ff fed0 	bl	800ce8c <_Convert16>
 800d0ec:	2301      	movs	r3, #1
 800d0ee:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 800d0f2:	9810      	ldr	r0, [sp, #64]	; 0x40
 800d0f4:	9300      	str	r3, [sp, #0]
 800d0f6:	2200      	movs	r2, #0
 800d0f8:	9301      	str	r3, [sp, #4]
 800d0fa:	9002      	str	r0, [sp, #8]
 800d0fc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800d0fe:	9203      	str	r2, [sp, #12]
 800d100:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d102:	f85c 2d18 	ldr.w	r2, [ip, #-24]!
 800d106:	9204      	str	r2, [sp, #16]
 800d108:	4408      	add	r0, r1
 800d10a:	462a      	mov	r2, r5
 800d10c:	4659      	mov	r1, fp
 800d10e:	f8cd 8014 	str.w	r8, [sp, #20]
 800d112:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 800d116:	f7fb fc8f 	bl	8008a38 <LCD_DrawBitmap>
 800d11a:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 800d11e:	4660      	mov	r0, ip
 800d120:	f7fe f9e4 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800d124:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d126:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d128:	441d      	add	r5, r3
 800d12a:	6883      	ldr	r3, [r0, #8]
 800d12c:	9519      	str	r5, [sp, #100]	; 0x64
 800d12e:	695b      	ldr	r3, [r3, #20]
 800d130:	a919      	add	r1, sp, #100	; 0x64
 800d132:	4652      	mov	r2, sl
 800d134:	4798      	blx	r3
 800d136:	4605      	mov	r5, r0
 800d138:	2d00      	cmp	r5, #0
 800d13a:	d1c4      	bne.n	800d0c6 <GUI_MEMDEV__WriteToActiveOpaque+0x1ba>
 800d13c:	444e      	add	r6, r9
 800d13e:	f10a 0a01 	add.w	sl, sl, #1
 800d142:	f10b 0b01 	add.w	fp, fp, #1
 800d146:	e759      	b.n	800cffc <GUI_MEMDEV__WriteToActiveOpaque+0xf0>
 800d148:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d14a:	9300      	str	r3, [sp, #0]
 800d14c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d14e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800d150:	9201      	str	r2, [sp, #4]
 800d152:	fb00 6003 	mla	r0, r0, r3, r6
 800d156:	462a      	mov	r2, r5
 800d158:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d15a:	f7ff feb6 	bl	800ceca <_Convert8>
 800d15e:	e7c5      	b.n	800d0ec <GUI_MEMDEV__WriteToActiveOpaque+0x1e0>
 800d160:	a818      	add	r0, sp, #96	; 0x60
 800d162:	f7fe f9c3 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800d166:	e00e      	b.n	800d186 <GUI_MEMDEV__WriteToActiveOpaque+0x27a>
 800d168:	2301      	movs	r3, #1
 800d16a:	9300      	str	r3, [sp, #0]
 800d16c:	9301      	str	r3, [sp, #4]
 800d16e:	9004      	str	r0, [sp, #16]
 800d170:	9402      	str	r4, [sp, #8]
 800d172:	f8cd 900c 	str.w	r9, [sp, #12]
 800d176:	f8cd 8014 	str.w	r8, [sp, #20]
 800d17a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d17c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d17e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d180:	463a      	mov	r2, r7
 800d182:	f7fb fc59 	bl	8008a38 <LCD_DrawBitmap>
 800d186:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d188:	e24d      	b.n	800d626 <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 800d18a:	4630      	mov	r0, r6
 800d18c:	f7f9 f9c0 	bl	8006510 <GUI_MEMDEV_GetDataPtr>
 800d190:	4606      	mov	r6, r0
 800d192:	2d00      	cmp	r5, #0
 800d194:	f000 808a 	beq.w	800d2ac <GUI_MEMDEV__WriteToActiveOpaque+0x3a0>
 800d198:	4628      	mov	r0, r5
 800d19a:	f7fe f999 	bl	800b4d0 <GUI_ALLOC_LockH>
 800d19e:	2500      	movs	r5, #0
 800d1a0:	9018      	str	r0, [sp, #96]	; 0x60
 800d1a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d1a4:	429d      	cmp	r5, r3
 800d1a6:	da7d      	bge.n	800d2a4 <GUI_MEMDEV__WriteToActiveOpaque+0x398>
 800d1a8:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d1aa:	2300      	movs	r3, #0
 800d1ac:	9319      	str	r3, [sp, #100]	; 0x64
 800d1ae:	6883      	ldr	r3, [r0, #8]
 800d1b0:	a919      	add	r1, sp, #100	; 0x64
 800d1b2:	695b      	ldr	r3, [r3, #20]
 800d1b4:	462a      	mov	r2, r5
 800d1b6:	4798      	blx	r3
 800d1b8:	42b8      	cmp	r0, r7
 800d1ba:	4682      	mov	sl, r0
 800d1bc:	d124      	bne.n	800d208 <GUI_MEMDEV__WriteToActiveOpaque+0x2fc>
 800d1be:	46aa      	mov	sl, r5
 800d1c0:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d1c2:	6883      	ldr	r3, [r0, #8]
 800d1c4:	f10a 0b01 	add.w	fp, sl, #1
 800d1c8:	695b      	ldr	r3, [r3, #20]
 800d1ca:	a919      	add	r1, sp, #100	; 0x64
 800d1cc:	465a      	mov	r2, fp
 800d1ce:	4798      	blx	r3
 800d1d0:	42b8      	cmp	r0, r7
 800d1d2:	d101      	bne.n	800d1d8 <GUI_MEMDEV__WriteToActiveOpaque+0x2cc>
 800d1d4:	46da      	mov	sl, fp
 800d1d6:	e7f3      	b.n	800d1c0 <GUI_MEMDEV__WriteToActiveOpaque+0x2b4>
 800d1d8:	ebc5 0b0a 	rsb	fp, r5, sl
 800d1dc:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d1de:	9604      	str	r6, [sp, #16]
 800d1e0:	2301      	movs	r3, #1
 800d1e2:	f10b 0b01 	add.w	fp, fp, #1
 800d1e6:	9300      	str	r3, [sp, #0]
 800d1e8:	9301      	str	r3, [sp, #4]
 800d1ea:	4429      	add	r1, r5
 800d1ec:	9402      	str	r4, [sp, #8]
 800d1ee:	f8cd 900c 	str.w	r9, [sp, #12]
 800d1f2:	f8cd 8014 	str.w	r8, [sp, #20]
 800d1f6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d1f8:	463a      	mov	r2, r7
 800d1fa:	465b      	mov	r3, fp
 800d1fc:	f7fb fc1c 	bl	8008a38 <LCD_DrawBitmap>
 800d200:	fb09 660b 	mla	r6, r9, fp, r6
 800d204:	4655      	mov	r5, sl
 800d206:	e04b      	b.n	800d2a0 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 800d208:	2c01      	cmp	r4, #1
 800d20a:	d127      	bne.n	800d25c <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 800d20c:	f1ba 0f00 	cmp.w	sl, #0
 800d210:	d022      	beq.n	800d258 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 800d212:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d214:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800d216:	f8cd 900c 	str.w	r9, [sp, #12]
 800d21a:	2208      	movs	r2, #8
 800d21c:	fb90 f2f2 	sdiv	r2, r0, r2
 800d220:	4432      	add	r2, r6
 800d222:	9204      	str	r2, [sp, #16]
 800d224:	f000 0207 	and.w	r2, r0, #7
 800d228:	4408      	add	r0, r1
 800d22a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d22c:	9206      	str	r2, [sp, #24]
 800d22e:	2301      	movs	r3, #1
 800d230:	4652      	mov	r2, sl
 800d232:	9300      	str	r3, [sp, #0]
 800d234:	9301      	str	r3, [sp, #4]
 800d236:	9302      	str	r3, [sp, #8]
 800d238:	4429      	add	r1, r5
 800d23a:	f8cd 8014 	str.w	r8, [sp, #20]
 800d23e:	f7fb fb1f 	bl	8008880 <LCD__DrawBitmap_1bpp>
 800d242:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d244:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d246:	4453      	add	r3, sl
 800d248:	9319      	str	r3, [sp, #100]	; 0x64
 800d24a:	6883      	ldr	r3, [r0, #8]
 800d24c:	a919      	add	r1, sp, #100	; 0x64
 800d24e:	695b      	ldr	r3, [r3, #20]
 800d250:	462a      	mov	r2, r5
 800d252:	4798      	blx	r3
 800d254:	4682      	mov	sl, r0
 800d256:	e7d9      	b.n	800d20c <GUI_MEMDEV__WriteToActiveOpaque+0x300>
 800d258:	444e      	add	r6, r9
 800d25a:	e021      	b.n	800d2a0 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 800d25c:	f1ba 0f00 	cmp.w	sl, #0
 800d260:	d0fa      	beq.n	800d258 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 800d262:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d264:	9911      	ldr	r1, [sp, #68]	; 0x44
 800d266:	9402      	str	r4, [sp, #8]
 800d268:	fb00 6201 	mla	r2, r0, r1, r6
 800d26c:	9204      	str	r2, [sp, #16]
 800d26e:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d270:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800d272:	f8cd 900c 	str.w	r9, [sp, #12]
 800d276:	2301      	movs	r3, #1
 800d278:	4410      	add	r0, r2
 800d27a:	9300      	str	r3, [sp, #0]
 800d27c:	4652      	mov	r2, sl
 800d27e:	9301      	str	r3, [sp, #4]
 800d280:	4429      	add	r1, r5
 800d282:	f8cd 8014 	str.w	r8, [sp, #20]
 800d286:	f7fb fbd7 	bl	8008a38 <LCD_DrawBitmap>
 800d28a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d28c:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d28e:	4453      	add	r3, sl
 800d290:	9319      	str	r3, [sp, #100]	; 0x64
 800d292:	6883      	ldr	r3, [r0, #8]
 800d294:	a919      	add	r1, sp, #100	; 0x64
 800d296:	695b      	ldr	r3, [r3, #20]
 800d298:	462a      	mov	r2, r5
 800d29a:	4798      	blx	r3
 800d29c:	4682      	mov	sl, r0
 800d29e:	e7dd      	b.n	800d25c <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 800d2a0:	3501      	adds	r5, #1
 800d2a2:	e77e      	b.n	800d1a2 <GUI_MEMDEV__WriteToActiveOpaque+0x296>
 800d2a4:	a818      	add	r0, sp, #96	; 0x60
 800d2a6:	f7fe f921 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800d2aa:	e1be      	b.n	800d62a <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d2ac:	2301      	movs	r3, #1
 800d2ae:	9300      	str	r3, [sp, #0]
 800d2b0:	9301      	str	r3, [sp, #4]
 800d2b2:	9004      	str	r0, [sp, #16]
 800d2b4:	9402      	str	r4, [sp, #8]
 800d2b6:	f8cd 900c 	str.w	r9, [sp, #12]
 800d2ba:	f8cd 8014 	str.w	r8, [sp, #20]
 800d2be:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d2c0:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d2c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d2c4:	463a      	mov	r2, r7
 800d2c6:	e041      	b.n	800d34c <GUI_MEMDEV__WriteToActiveOpaque+0x440>
 800d2c8:	4630      	mov	r0, r6
 800d2ca:	910a      	str	r1, [sp, #40]	; 0x28
 800d2cc:	f7fe f900 	bl	800b4d0 <GUI_ALLOC_LockH>
 800d2d0:	4682      	mov	sl, r0
 800d2d2:	a81c      	add	r0, sp, #112	; 0x70
 800d2d4:	f8ba 200a 	ldrh.w	r2, [sl, #10]
 800d2d8:	f840 ad10 	str.w	sl, [r0, #-16]!
 800d2dc:	f8da 4000 	ldr.w	r4, [sl]
 800d2e0:	9210      	str	r2, [sp, #64]	; 0x40
 800d2e2:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800d2e6:	f8ba 7008 	ldrh.w	r7, [sl, #8]
 800d2ea:	4c9e      	ldr	r4, [pc, #632]	; (800d564 <GUI_MEMDEV__WriteToActiveOpaque+0x658>)
 800d2ec:	b213      	sxth	r3, r2
 800d2ee:	f8da 200c 	ldr.w	r2, [sl, #12]
 800d2f2:	920b      	str	r2, [sp, #44]	; 0x2c
 800d2f4:	9309      	str	r3, [sp, #36]	; 0x24
 800d2f6:	f7fe f8f9 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800d2fa:	f8d9 0004 	ldr.w	r0, [r9, #4]
 800d2fe:	900e      	str	r0, [sp, #56]	; 0x38
 800d300:	4899      	ldr	r0, [pc, #612]	; (800d568 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>)
 800d302:	6800      	ldr	r0, [r0, #0]
 800d304:	7c40      	ldrb	r0, [r0, #17]
 800d306:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
 800d30a:	6925      	ldr	r5, [r4, #16]
 800d30c:	f8d5 8000 	ldr.w	r8, [r5]
 800d310:	f7fb f950 	bl	80085b4 <GUI_GetBitsPerPixelEx>
 800d314:	2808      	cmp	r0, #8
 800d316:	fa0f fb87 	sxth.w	fp, r7
 800d31a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d31c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d31e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d320:	d904      	bls.n	800d32c <GUI_MEMDEV__WriteToActiveOpaque+0x420>
 800d322:	2810      	cmp	r0, #16
 800d324:	bf8c      	ite	hi
 800d326:	2404      	movhi	r4, #4
 800d328:	2402      	movls	r4, #2
 800d32a:	e000      	b.n	800d32e <GUI_MEMDEV__WriteToActiveOpaque+0x422>
 800d32c:	2401      	movs	r4, #1
 800d32e:	45a9      	cmp	r9, r5
 800d330:	d10f      	bne.n	800d352 <GUI_MEMDEV__WriteToActiveOpaque+0x446>
 800d332:	2001      	movs	r0, #1
 800d334:	9203      	str	r2, [sp, #12]
 800d336:	f10a 0218 	add.w	r2, sl, #24
 800d33a:	9000      	str	r0, [sp, #0]
 800d33c:	9001      	str	r0, [sp, #4]
 800d33e:	9102      	str	r1, [sp, #8]
 800d340:	9204      	str	r2, [sp, #16]
 800d342:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d344:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d346:	2200      	movs	r2, #0
 800d348:	9205      	str	r2, [sp, #20]
 800d34a:	465a      	mov	r2, fp
 800d34c:	f7fb fb74 	bl	8008a38 <LCD_DrawBitmap>
 800d350:	e16b      	b.n	800d62a <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d352:	2920      	cmp	r1, #32
 800d354:	f040 808e 	bne.w	800d474 <GUI_MEMDEV__WriteToActiveOpaque+0x568>
 800d358:	fb0b f004 	mul.w	r0, fp, r4
 800d35c:	f7fe fa84 	bl	800b868 <GUI_ALLOC_AllocNoInit>
 800d360:	900e      	str	r0, [sp, #56]	; 0x38
 800d362:	2800      	cmp	r0, #0
 800d364:	f000 8161 	beq.w	800d62a <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d368:	f7fe f8b2 	bl	800b4d0 <GUI_ALLOC_LockH>
 800d36c:	901a      	str	r0, [sp, #104]	; 0x68
 800d36e:	4630      	mov	r0, r6
 800d370:	f7fe f8ae 	bl	800b4d0 <GUI_ALLOC_LockH>
 800d374:	9018      	str	r0, [sp, #96]	; 0x60
 800d376:	692b      	ldr	r3, [r5, #16]
 800d378:	f100 0a18 	add.w	sl, r0, #24
 800d37c:	ea4f 068b 	mov.w	r6, fp, lsl #2
 800d380:	ea4f 09c4 	mov.w	r9, r4, lsl #3
 800d384:	2b00      	cmp	r3, #0
 800d386:	d02f      	beq.n	800d3e8 <GUI_MEMDEV__WriteToActiveOpaque+0x4dc>
 800d388:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 800d38c:	2c02      	cmp	r4, #2
 800d38e:	d003      	beq.n	800d398 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 800d390:	2c04      	cmp	r4, #4
 800d392:	d001      	beq.n	800d398 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 800d394:	2c01      	cmp	r4, #1
 800d396:	d106      	bne.n	800d3a6 <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 800d398:	4650      	mov	r0, sl
 800d39a:	692f      	ldr	r7, [r5, #16]
 800d39c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d39e:	465a      	mov	r2, fp
 800d3a0:	4623      	mov	r3, r4
 800d3a2:	47b8      	blx	r7
 800d3a4:	44b2      	add	sl, r6
 800d3a6:	2301      	movs	r3, #1
 800d3a8:	2200      	movs	r2, #0
 800d3aa:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d3ac:	9300      	str	r3, [sp, #0]
 800d3ae:	9301      	str	r3, [sp, #4]
 800d3b0:	9203      	str	r2, [sp, #12]
 800d3b2:	9104      	str	r1, [sp, #16]
 800d3b4:	9205      	str	r2, [sp, #20]
 800d3b6:	4641      	mov	r1, r8
 800d3b8:	465a      	mov	r2, fp
 800d3ba:	f8cd 9008 	str.w	r9, [sp, #8]
 800d3be:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d3c0:	f7fb fb3a 	bl	8008a38 <LCD_DrawBitmap>
 800d3c4:	9910      	ldr	r1, [sp, #64]	; 0x40
 800d3c6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d3c8:	f108 0701 	add.w	r7, r8, #1
 800d3cc:	fa02 f381 	sxtah	r3, r2, r1
 800d3d0:	42bb      	cmp	r3, r7
 800d3d2:	d107      	bne.n	800d3e4 <GUI_MEMDEV__WriteToActiveOpaque+0x4d8>
 800d3d4:	a818      	add	r0, sp, #96	; 0x60
 800d3d6:	f7fe f889 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800d3da:	a81a      	add	r0, sp, #104	; 0x68
 800d3dc:	f7fe f886 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800d3e0:	980e      	ldr	r0, [sp, #56]	; 0x38
 800d3e2:	e120      	b.n	800d626 <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 800d3e4:	46b8      	mov	r8, r7
 800d3e6:	e7d1      	b.n	800d38c <GUI_MEMDEV__WriteToActiveOpaque+0x480>
 800d3e8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800d3ea:	2c02      	cmp	r4, #2
 800d3ec:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800d3ee:	d00e      	beq.n	800d40e <GUI_MEMDEV__WriteToActiveOpaque+0x502>
 800d3f0:	2c04      	cmp	r4, #4
 800d3f2:	d018      	beq.n	800d426 <GUI_MEMDEV__WriteToActiveOpaque+0x51a>
 800d3f4:	2c01      	cmp	r4, #1
 800d3f6:	d125      	bne.n	800d444 <GUI_MEMDEV__WriteToActiveOpaque+0x538>
 800d3f8:	2300      	movs	r3, #0
 800d3fa:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 800d3fe:	9309      	str	r3, [sp, #36]	; 0x24
 800d400:	47c0      	blx	r8
 800d402:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d404:	54f8      	strb	r0, [r7, r3]
 800d406:	3301      	adds	r3, #1
 800d408:	459b      	cmp	fp, r3
 800d40a:	d1f6      	bne.n	800d3fa <GUI_MEMDEV__WriteToActiveOpaque+0x4ee>
 800d40c:	e019      	b.n	800d442 <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 800d40e:	2300      	movs	r3, #0
 800d410:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 800d414:	9309      	str	r3, [sp, #36]	; 0x24
 800d416:	47c0      	blx	r8
 800d418:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d41a:	f827 0013 	strh.w	r0, [r7, r3, lsl #1]
 800d41e:	3301      	adds	r3, #1
 800d420:	459b      	cmp	fp, r3
 800d422:	d1f5      	bne.n	800d410 <GUI_MEMDEV__WriteToActiveOpaque+0x504>
 800d424:	e00d      	b.n	800d442 <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 800d426:	465a      	mov	r2, fp
 800d428:	2300      	movs	r3, #0
 800d42a:	f85a 0003 	ldr.w	r0, [sl, r3]
 800d42e:	920b      	str	r2, [sp, #44]	; 0x2c
 800d430:	9309      	str	r3, [sp, #36]	; 0x24
 800d432:	47c0      	blx	r8
 800d434:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d436:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d438:	3a01      	subs	r2, #1
 800d43a:	50f8      	str	r0, [r7, r3]
 800d43c:	f103 0304 	add.w	r3, r3, #4
 800d440:	d1f3      	bne.n	800d42a <GUI_MEMDEV__WriteToActiveOpaque+0x51e>
 800d442:	44b2      	add	sl, r6
 800d444:	2301      	movs	r3, #1
 800d446:	2200      	movs	r2, #0
 800d448:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d44a:	9300      	str	r3, [sp, #0]
 800d44c:	9301      	str	r3, [sp, #4]
 800d44e:	9203      	str	r2, [sp, #12]
 800d450:	9104      	str	r1, [sp, #16]
 800d452:	9205      	str	r2, [sp, #20]
 800d454:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d456:	f8cd 9008 	str.w	r9, [sp, #8]
 800d45a:	4629      	mov	r1, r5
 800d45c:	465a      	mov	r2, fp
 800d45e:	f7fb faeb 	bl	8008a38 <LCD_DrawBitmap>
 800d462:	9810      	ldr	r0, [sp, #64]	; 0x40
 800d464:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d466:	1c6f      	adds	r7, r5, #1
 800d468:	fa01 f380 	sxtah	r3, r1, r0
 800d46c:	42bb      	cmp	r3, r7
 800d46e:	d0b1      	beq.n	800d3d4 <GUI_MEMDEV__WriteToActiveOpaque+0x4c8>
 800d470:	463d      	mov	r5, r7
 800d472:	e7ba      	b.n	800d3ea <GUI_MEMDEV__WriteToActiveOpaque+0x4de>
 800d474:	2910      	cmp	r1, #16
 800d476:	f040 80d8 	bne.w	800d62a <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d47a:	fa0f fa87 	sxth.w	sl, r7
 800d47e:	fb0a f004 	mul.w	r0, sl, r4
 800d482:	f7fe f9f1 	bl	800b868 <GUI_ALLOC_AllocNoInit>
 800d486:	9012      	str	r0, [sp, #72]	; 0x48
 800d488:	2800      	cmp	r0, #0
 800d48a:	f000 80ce 	beq.w	800d62a <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d48e:	f7fe f81f 	bl	800b4d0 <GUI_ALLOC_LockH>
 800d492:	901a      	str	r0, [sp, #104]	; 0x68
 800d494:	4630      	mov	r0, r6
 800d496:	f7fe f81b 	bl	800b4d0 <GUI_ALLOC_LockH>
 800d49a:	9018      	str	r0, [sp, #96]	; 0x60
 800d49c:	692b      	ldr	r3, [r5, #16]
 800d49e:	f100 0618 	add.w	r6, r0, #24
 800d4a2:	b113      	cbz	r3, 800d4aa <GUI_MEMDEV__WriteToActiveOpaque+0x59e>
 800d4a4:	f8d9 3014 	ldr.w	r3, [r9, #20]
 800d4a8:	b92b      	cbnz	r3, 800d4b6 <GUI_MEMDEV__WriteToActiveOpaque+0x5aa>
 800d4aa:	00e2      	lsls	r2, r4, #3
 800d4ac:	b23f      	sxth	r7, r7
 800d4ae:	9211      	str	r2, [sp, #68]	; 0x44
 800d4b0:	007f      	lsls	r7, r7, #1
 800d4b2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800d4b4:	e088      	b.n	800d5c8 <GUI_MEMDEV__WriteToActiveOpaque+0x6bc>
 800d4b6:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 800d4ba:	0080      	lsls	r0, r0, #2
 800d4bc:	f7fe f9d4 	bl	800b868 <GUI_ALLOC_AllocNoInit>
 800d4c0:	9011      	str	r0, [sp, #68]	; 0x44
 800d4c2:	b118      	cbz	r0, 800d4cc <GUI_MEMDEV__WriteToActiveOpaque+0x5c0>
 800d4c4:	f7fe f804 	bl	800b4d0 <GUI_ALLOC_LockH>
 800d4c8:	9019      	str	r0, [sp, #100]	; 0x64
 800d4ca:	e001      	b.n	800d4d0 <GUI_MEMDEV__WriteToActiveOpaque+0x5c4>
 800d4cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d4ce:	9319      	str	r3, [sp, #100]	; 0x64
 800d4d0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d4d2:	2b00      	cmp	r3, #0
 800d4d4:	f000 80a0 	beq.w	800d618 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800d4d8:	b23f      	sxth	r7, r7
 800d4da:	007f      	lsls	r7, r7, #1
 800d4dc:	970e      	str	r7, [sp, #56]	; 0x38
 800d4de:	00e7      	lsls	r7, r4, #3
 800d4e0:	9713      	str	r7, [sp, #76]	; 0x4c
 800d4e2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800d4e4:	970c      	str	r7, [sp, #48]	; 0x30
 800d4e6:	2c02      	cmp	r4, #2
 800d4e8:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800d4ec:	d004      	beq.n	800d4f8 <GUI_MEMDEV__WriteToActiveOpaque+0x5ec>
 800d4ee:	2c04      	cmp	r4, #4
 800d4f0:	d007      	beq.n	800d502 <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 800d4f2:	2c01      	cmp	r4, #1
 800d4f4:	d114      	bne.n	800d520 <GUI_MEMDEV__WriteToActiveOpaque+0x614>
 800d4f6:	e004      	b.n	800d502 <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 800d4f8:	4630      	mov	r0, r6
 800d4fa:	9919      	ldr	r1, [sp, #100]	; 0x64
 800d4fc:	4652      	mov	r2, sl
 800d4fe:	4623      	mov	r3, r4
 800d500:	e003      	b.n	800d50a <GUI_MEMDEV__WriteToActiveOpaque+0x5fe>
 800d502:	9919      	ldr	r1, [sp, #100]	; 0x64
 800d504:	4630      	mov	r0, r6
 800d506:	4652      	mov	r2, sl
 800d508:	2302      	movs	r3, #2
 800d50a:	f8d9 7014 	ldr.w	r7, [r9, #20]
 800d50e:	47b8      	blx	r7
 800d510:	692f      	ldr	r7, [r5, #16]
 800d512:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d514:	4641      	mov	r1, r8
 800d516:	4652      	mov	r2, sl
 800d518:	4623      	mov	r3, r4
 800d51a:	47b8      	blx	r7
 800d51c:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800d51e:	443e      	add	r6, r7
 800d520:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800d522:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d524:	9104      	str	r1, [sp, #16]
 800d526:	2301      	movs	r3, #1
 800d528:	2200      	movs	r2, #0
 800d52a:	f107 0801 	add.w	r8, r7, #1
 800d52e:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 800d530:	9300      	str	r3, [sp, #0]
 800d532:	9301      	str	r3, [sp, #4]
 800d534:	9702      	str	r7, [sp, #8]
 800d536:	9203      	str	r2, [sp, #12]
 800d538:	9205      	str	r2, [sp, #20]
 800d53a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d53c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800d53e:	465a      	mov	r2, fp
 800d540:	f7fb fa7a 	bl	8008a38 <LCD_DrawBitmap>
 800d544:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800d546:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d548:	fa00 f387 	sxtah	r3, r0, r7
 800d54c:	4543      	cmp	r3, r8
 800d54e:	d002      	beq.n	800d556 <GUI_MEMDEV__WriteToActiveOpaque+0x64a>
 800d550:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800d554:	e7c7      	b.n	800d4e6 <GUI_MEMDEV__WriteToActiveOpaque+0x5da>
 800d556:	a819      	add	r0, sp, #100	; 0x64
 800d558:	f7fd ffc8 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800d55c:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d55e:	f7fd fff1 	bl	800b544 <GUI_ALLOC_Free>
 800d562:	e059      	b.n	800d618 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800d564:	20002d28 	.word	0x20002d28
 800d568:	200000b8 	.word	0x200000b8
 800d56c:	2c04      	cmp	r4, #4
 800d56e:	d041      	beq.n	800d5f4 <GUI_MEMDEV__WriteToActiveOpaque+0x6e8>
 800d570:	2c01      	cmp	r4, #1
 800d572:	d111      	bne.n	800d598 <GUI_MEMDEV__WriteToActiveOpaque+0x68c>
 800d574:	464a      	mov	r2, r9
 800d576:	4631      	mov	r1, r6
 800d578:	f831 0b02 	ldrh.w	r0, [r1], #2
 800d57c:	910a      	str	r1, [sp, #40]	; 0x28
 800d57e:	920b      	str	r2, [sp, #44]	; 0x2c
 800d580:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d582:	4798      	blx	r3
 800d584:	47c0      	blx	r8
 800d586:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d588:	f802 0b01 	strb.w	r0, [r2], #1
 800d58c:	eb09 000a 	add.w	r0, r9, sl
 800d590:	4282      	cmp	r2, r0
 800d592:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d594:	d1f0      	bne.n	800d578 <GUI_MEMDEV__WriteToActiveOpaque+0x66c>
 800d596:	443e      	add	r6, r7
 800d598:	2301      	movs	r3, #1
 800d59a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d59c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d59e:	9300      	str	r3, [sp, #0]
 800d5a0:	2200      	movs	r2, #0
 800d5a2:	9301      	str	r3, [sp, #4]
 800d5a4:	9002      	str	r0, [sp, #8]
 800d5a6:	9203      	str	r2, [sp, #12]
 800d5a8:	9104      	str	r1, [sp, #16]
 800d5aa:	9205      	str	r2, [sp, #20]
 800d5ac:	4629      	mov	r1, r5
 800d5ae:	465a      	mov	r2, fp
 800d5b0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d5b2:	f7fb fa41 	bl	8008a38 <LCD_DrawBitmap>
 800d5b6:	9910      	ldr	r1, [sp, #64]	; 0x40
 800d5b8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d5ba:	f105 0901 	add.w	r9, r5, #1
 800d5be:	fa02 f381 	sxtah	r3, r2, r1
 800d5c2:	454b      	cmp	r3, r9
 800d5c4:	d028      	beq.n	800d618 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800d5c6:	464d      	mov	r5, r9
 800d5c8:	2c02      	cmp	r4, #2
 800d5ca:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
 800d5ce:	d1cd      	bne.n	800d56c <GUI_MEMDEV__WriteToActiveOpaque+0x660>
 800d5d0:	464b      	mov	r3, r9
 800d5d2:	4631      	mov	r1, r6
 800d5d4:	46d9      	mov	r9, fp
 800d5d6:	f831 0b02 	ldrh.w	r0, [r1], #2
 800d5da:	910a      	str	r1, [sp, #40]	; 0x28
 800d5dc:	9309      	str	r3, [sp, #36]	; 0x24
 800d5de:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d5e0:	4790      	blx	r2
 800d5e2:	47c0      	blx	r8
 800d5e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d5e6:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d5e8:	f823 0b02 	strh.w	r0, [r3], #2
 800d5ec:	f1b9 0901 	subs.w	r9, r9, #1
 800d5f0:	d1f1      	bne.n	800d5d6 <GUI_MEMDEV__WriteToActiveOpaque+0x6ca>
 800d5f2:	e7d0      	b.n	800d596 <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 800d5f4:	464b      	mov	r3, r9
 800d5f6:	4631      	mov	r1, r6
 800d5f8:	46d9      	mov	r9, fp
 800d5fa:	f831 0b02 	ldrh.w	r0, [r1], #2
 800d5fe:	910a      	str	r1, [sp, #40]	; 0x28
 800d600:	9309      	str	r3, [sp, #36]	; 0x24
 800d602:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d604:	4790      	blx	r2
 800d606:	47c0      	blx	r8
 800d608:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d60a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d60c:	f843 0b04 	str.w	r0, [r3], #4
 800d610:	f1b9 0901 	subs.w	r9, r9, #1
 800d614:	d1f1      	bne.n	800d5fa <GUI_MEMDEV__WriteToActiveOpaque+0x6ee>
 800d616:	e7be      	b.n	800d596 <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 800d618:	a818      	add	r0, sp, #96	; 0x60
 800d61a:	f7fd ff67 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800d61e:	a81a      	add	r0, sp, #104	; 0x68
 800d620:	f7fd ff64 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800d624:	9812      	ldr	r0, [sp, #72]	; 0x48
 800d626:	f7fd ff8d 	bl	800b544 <GUI_ALLOC_Free>
 800d62a:	b01d      	add	sp, #116	; 0x74
 800d62c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d630 <GUI_MEMDEV__WriteToActiveAlpha>:
 800d630:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d634:	4d5f      	ldr	r5, [pc, #380]	; (800d7b4 <GUI_MEMDEV__WriteToActiveAlpha+0x184>)
 800d636:	4f60      	ldr	r7, [pc, #384]	; (800d7b8 <GUI_MEMDEV__WriteToActiveAlpha+0x188>)
 800d638:	682b      	ldr	r3, [r5, #0]
 800d63a:	7c5b      	ldrb	r3, [r3, #17]
 800d63c:	b091      	sub	sp, #68	; 0x44
 800d63e:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 800d642:	900d      	str	r0, [sp, #52]	; 0x34
 800d644:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800d648:	460e      	mov	r6, r1
 800d64a:	4614      	mov	r4, r2
 800d64c:	f7fd ff40 	bl	800b4d0 <GUI_ALLOC_LockH>
 800d650:	4602      	mov	r2, r0
 800d652:	a810      	add	r0, sp, #64	; 0x40
 800d654:	6813      	ldr	r3, [r2, #0]
 800d656:	f840 2d08 	str.w	r2, [r0, #-8]!
 800d65a:	691b      	ldr	r3, [r3, #16]
 800d65c:	f8b2 a008 	ldrh.w	sl, [r2, #8]
 800d660:	685b      	ldr	r3, [r3, #4]
 800d662:	f8b2 900a 	ldrh.w	r9, [r2, #10]
 800d666:	9309      	str	r3, [sp, #36]	; 0x24
 800d668:	f7fd ff40 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800d66c:	682b      	ldr	r3, [r5, #0]
 800d66e:	7c5b      	ldrb	r3, [r3, #17]
 800d670:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 800d674:	68c3      	ldr	r3, [r0, #12]
 800d676:	2108      	movs	r1, #8
 800d678:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d67a:	4798      	blx	r3
 800d67c:	2817      	cmp	r0, #23
 800d67e:	bf88      	it	hi
 800d680:	2020      	movhi	r0, #32
 800d682:	9008      	str	r0, [sp, #32]
 800d684:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800d688:	f8d8 2000 	ldr.w	r2, [r8]
 800d68c:	910a      	str	r1, [sp, #40]	; 0x28
 800d68e:	2000      	movs	r0, #0
 800d690:	920b      	str	r2, [sp, #44]	; 0x2c
 800d692:	f7fb fef3 	bl	800947c <GUI__AllocAlphaBuffer>
 800d696:	2800      	cmp	r0, #0
 800d698:	f040 8089 	bne.w	800d7ae <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800d69c:	682a      	ldr	r2, [r5, #0]
 800d69e:	fa0f f78a 	sxth.w	r7, sl
 800d6a2:	19f5      	adds	r5, r6, r7
 800d6a4:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
 800d6a8:	3d01      	subs	r5, #1
 800d6aa:	1aed      	subs	r5, r5, r3
 800d6ac:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 800d6b0:	2d00      	cmp	r5, #0
 800d6b2:	bfcc      	ite	gt
 800d6b4:	ebc5 0507 	rsbgt	r5, r5, r7
 800d6b8:	463d      	movle	r5, r7
 800d6ba:	42b3      	cmp	r3, r6
 800d6bc:	bfc3      	ittte	gt
 800d6be:	ebc6 0103 	rsbgt	r1, r6, r3
 800d6c2:	ebc1 0505 	rsbgt	r5, r1, r5
 800d6c6:	461e      	movgt	r6, r3
 800d6c8:	2100      	movle	r1, #0
 800d6ca:	2d00      	cmp	r5, #0
 800d6cc:	dd6f      	ble.n	800d7ae <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800d6ce:	fa0f f389 	sxth.w	r3, r9
 800d6d2:	18e0      	adds	r0, r4, r3
 800d6d4:	f9b2 c00e 	ldrsh.w	ip, [r2, #14]
 800d6d8:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 800d6dc:	3801      	subs	r0, #1
 800d6de:	ebcc 0000 	rsb	r0, ip, r0
 800d6e2:	2800      	cmp	r0, #0
 800d6e4:	bfc8      	it	gt
 800d6e6:	ebc0 0303 	rsbgt	r3, r0, r3
 800d6ea:	4294      	cmp	r4, r2
 800d6ec:	bfbd      	ittte	lt
 800d6ee:	ebc4 0b02 	rsblt	fp, r4, r2
 800d6f2:	ebcb 0303 	rsblt	r3, fp, r3
 800d6f6:	4614      	movlt	r4, r2
 800d6f8:	f04f 0b00 	movge.w	fp, #0
 800d6fc:	2b00      	cmp	r3, #0
 800d6fe:	dd56      	ble.n	800d7ae <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800d700:	fb07 1b0b 	mla	fp, r7, fp, r1
 800d704:	18e3      	adds	r3, r4, r3
 800d706:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800d70a:	930c      	str	r3, [sp, #48]	; 0x30
 800d70c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d70e:	f7f8 feff 	bl	8006510 <GUI_MEMDEV_GetDataPtr>
 800d712:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d714:	9300      	str	r3, [sp, #0]
 800d716:	ab0f      	add	r3, sp, #60	; 0x3c
 800d718:	eb00 020b 	add.w	r2, r0, fp
 800d71c:	9301      	str	r3, [sp, #4]
 800d71e:	4630      	mov	r0, r6
 800d720:	4621      	mov	r1, r4
 800d722:	462b      	mov	r3, r5
 800d724:	f7fb fdc0 	bl	80092a8 <GUI__DoAlphaBlending>
 800d728:	4681      	mov	r9, r0
 800d72a:	2800      	cmp	r0, #0
 800d72c:	d03f      	beq.n	800d7ae <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800d72e:	4b23      	ldr	r3, [pc, #140]	; (800d7bc <GUI_MEMDEV__WriteToActiveAlpha+0x18c>)
 800d730:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d732:	4299      	cmp	r1, r3
 800d734:	d01e      	beq.n	800d774 <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800d736:	4629      	mov	r1, r5
 800d738:	9a08      	ldr	r2, [sp, #32]
 800d73a:	4643      	mov	r3, r8
 800d73c:	f001 fc50 	bl	800efe0 <GUI__CompactPixelIndicesEx>
 800d740:	b9c0      	cbnz	r0, 800d774 <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800d742:	f8d8 c010 	ldr.w	ip, [r8, #16]
 800d746:	f1bc 0f00 	cmp.w	ip, #0
 800d74a:	d006      	beq.n	800d75a <GUI_MEMDEV__WriteToActiveAlpha+0x12a>
 800d74c:	4648      	mov	r0, r9
 800d74e:	4649      	mov	r1, r9
 800d750:	fa0f f28a 	sxth.w	r2, sl
 800d754:	2304      	movs	r3, #4
 800d756:	47e0      	blx	ip
 800d758:	e00c      	b.n	800d774 <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800d75a:	464a      	mov	r2, r9
 800d75c:	463b      	mov	r3, r7
 800d75e:	6810      	ldr	r0, [r2, #0]
 800d760:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d762:	9206      	str	r2, [sp, #24]
 800d764:	9307      	str	r3, [sp, #28]
 800d766:	4788      	blx	r1
 800d768:	9b07      	ldr	r3, [sp, #28]
 800d76a:	9a06      	ldr	r2, [sp, #24]
 800d76c:	3b01      	subs	r3, #1
 800d76e:	f842 0b04 	str.w	r0, [r2], #4
 800d772:	d1f4      	bne.n	800d75e <GUI_MEMDEV__WriteToActiveAlpha+0x12e>
 800d774:	9a08      	ldr	r2, [sp, #32]
 800d776:	9202      	str	r2, [sp, #8]
 800d778:	2301      	movs	r3, #1
 800d77a:	2200      	movs	r2, #0
 800d77c:	f104 0c01 	add.w	ip, r4, #1
 800d780:	9300      	str	r3, [sp, #0]
 800d782:	9301      	str	r3, [sp, #4]
 800d784:	9203      	str	r2, [sp, #12]
 800d786:	9205      	str	r2, [sp, #20]
 800d788:	f8cd 9010 	str.w	r9, [sp, #16]
 800d78c:	4630      	mov	r0, r6
 800d78e:	4621      	mov	r1, r4
 800d790:	462a      	mov	r2, r5
 800d792:	f8cd c01c 	str.w	ip, [sp, #28]
 800d796:	f7fb f94f 	bl	8008a38 <LCD_DrawBitmap>
 800d79a:	2304      	movs	r3, #4
 800d79c:	fb1a bb03 	smlabb	fp, sl, r3, fp
 800d7a0:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800d7a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d7a6:	459c      	cmp	ip, r3
 800d7a8:	d001      	beq.n	800d7ae <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800d7aa:	4664      	mov	r4, ip
 800d7ac:	e7ae      	b.n	800d70c <GUI_MEMDEV__WriteToActiveAlpha+0xdc>
 800d7ae:	b011      	add	sp, #68	; 0x44
 800d7b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d7b4:	200000b8 	.word	0x200000b8
 800d7b8:	20002d28 	.word	0x20002d28
 800d7bc:	0800bad7 	.word	0x0800bad7

0800d7c0 <GUI_MEMDEV_WriteAt>:
 800d7c0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d7c2:	460c      	mov	r4, r1
 800d7c4:	4615      	mov	r5, r2
 800d7c6:	4606      	mov	r6, r0
 800d7c8:	b330      	cbz	r0, 800d818 <GUI_MEMDEV_WriteAt+0x58>
 800d7ca:	f7fd fe81 	bl	800b4d0 <GUI_ALLOC_LockH>
 800d7ce:	4a13      	ldr	r2, [pc, #76]	; (800d81c <GUI_MEMDEV_WriteAt+0x5c>)
 800d7d0:	8943      	ldrh	r3, [r0, #10]
 800d7d2:	9001      	str	r0, [sp, #4]
 800d7d4:	4294      	cmp	r4, r2
 800d7d6:	8902      	ldrh	r2, [r0, #8]
 800d7d8:	bf04      	itt	eq
 800d7da:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 800d7de:	f9b0 5006 	ldrsheq.w	r5, [r0, #6]
 800d7e2:	f8ad 4008 	strh.w	r4, [sp, #8]
 800d7e6:	3a01      	subs	r2, #1
 800d7e8:	3b01      	subs	r3, #1
 800d7ea:	4422      	add	r2, r4
 800d7ec:	442b      	add	r3, r5
 800d7ee:	a801      	add	r0, sp, #4
 800d7f0:	f8ad 200c 	strh.w	r2, [sp, #12]
 800d7f4:	f8ad 500a 	strh.w	r5, [sp, #10]
 800d7f8:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d7fc:	f7fd fe76 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800d800:	a802      	add	r0, sp, #8
 800d802:	f7f8 fae9 	bl	8005dd8 <WM__InitIVRSearch>
 800d806:	b138      	cbz	r0, 800d818 <GUI_MEMDEV_WriteAt+0x58>
 800d808:	4630      	mov	r0, r6
 800d80a:	4621      	mov	r1, r4
 800d80c:	462a      	mov	r2, r5
 800d80e:	f7f9 fc49 	bl	80070a4 <GUI_MEMDEV__WriteToActiveAt>
 800d812:	f7f8 fa1f 	bl	8005c54 <WM__GetNextIVR>
 800d816:	e7f6      	b.n	800d806 <GUI_MEMDEV_WriteAt+0x46>
 800d818:	b004      	add	sp, #16
 800d81a:	bd70      	pop	{r4, r5, r6, pc}
 800d81c:	fffff001 	.word	0xfffff001

0800d820 <GUI_MEMDEV_Write>:
 800d820:	4901      	ldr	r1, [pc, #4]	; (800d828 <GUI_MEMDEV_Write+0x8>)
 800d822:	460a      	mov	r2, r1
 800d824:	f7ff bfcc 	b.w	800d7c0 <GUI_MEMDEV_WriteAt>
 800d828:	fffff001 	.word	0xfffff001

0800d82c <GUI_USAGE_BM_AddPixel>:
 800d82c:	4603      	mov	r3, r0
 800d82e:	b510      	push	{r4, lr}
 800d830:	f933 4b14 	ldrsh.w	r4, [r3], #20
 800d834:	1b09      	subs	r1, r1, r4
 800d836:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800d83a:	6900      	ldr	r0, [r0, #16]
 800d83c:	1b12      	subs	r2, r2, r4
 800d83e:	fb00 3302 	mla	r3, r0, r2, r3
 800d842:	10c8      	asrs	r0, r1, #3
 800d844:	2280      	movs	r2, #128	; 0x80
 800d846:	f001 0107 	and.w	r1, r1, #7
 800d84a:	fa42 f101 	asr.w	r1, r2, r1
 800d84e:	5c1a      	ldrb	r2, [r3, r0]
 800d850:	4311      	orrs	r1, r2
 800d852:	5419      	strb	r1, [r3, r0]
 800d854:	bd10      	pop	{r4, pc}

0800d856 <GUI_USAGE_BM_GetNextDirty>:
 800d856:	b570      	push	{r4, r5, r6, lr}
 800d858:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800d85c:	680b      	ldr	r3, [r1, #0]
 800d85e:	8886      	ldrh	r6, [r0, #4]
 800d860:	42a2      	cmp	r2, r4
 800d862:	da41      	bge.n	800d8e8 <GUI_USAGE_BM_GetNextDirty+0x92>
 800d864:	b236      	sxth	r6, r6
 800d866:	42b3      	cmp	r3, r6
 800d868:	6904      	ldr	r4, [r0, #16]
 800d86a:	da3d      	bge.n	800d8e8 <GUI_USAGE_BM_GetNextDirty+0x92>
 800d86c:	3014      	adds	r0, #20
 800d86e:	fb04 0202 	mla	r2, r4, r2, r0
 800d872:	10dd      	asrs	r5, r3, #3
 800d874:	1e70      	subs	r0, r6, #1
 800d876:	1954      	adds	r4, r2, r5
 800d878:	ebc5 00e0 	rsb	r0, r5, r0, asr #3
 800d87c:	5d55      	ldrb	r5, [r2, r5]
 800d87e:	f003 0207 	and.w	r2, r3, #7
 800d882:	fa05 f202 	lsl.w	r2, r5, r2
 800d886:	3401      	adds	r4, #1
 800d888:	b2d2      	uxtb	r2, r2
 800d88a:	b93a      	cbnz	r2, 800d89c <GUI_USAGE_BM_GetNextDirty+0x46>
 800d88c:	b368      	cbz	r0, 800d8ea <GUI_USAGE_BM_GetNextDirty+0x94>
 800d88e:	3308      	adds	r3, #8
 800d890:	f814 2b01 	ldrb.w	r2, [r4], #1
 800d894:	3801      	subs	r0, #1
 800d896:	f023 0307 	bic.w	r3, r3, #7
 800d89a:	e7f6      	b.n	800d88a <GUI_USAGE_BM_GetNextDirty+0x34>
 800d89c:	0615      	lsls	r5, r2, #24
 800d89e:	d403      	bmi.n	800d8a8 <GUI_USAGE_BM_GetNextDirty+0x52>
 800d8a0:	0052      	lsls	r2, r2, #1
 800d8a2:	b2d2      	uxtb	r2, r2
 800d8a4:	3301      	adds	r3, #1
 800d8a6:	e7f9      	b.n	800d89c <GUI_USAGE_BM_GetNextDirty+0x46>
 800d8a8:	2aff      	cmp	r2, #255	; 0xff
 800d8aa:	461d      	mov	r5, r3
 800d8ac:	d005      	beq.n	800d8ba <GUI_USAGE_BM_GetNextDirty+0x64>
 800d8ae:	0656      	lsls	r6, r2, #25
 800d8b0:	d504      	bpl.n	800d8bc <GUI_USAGE_BM_GetNextDirty+0x66>
 800d8b2:	0052      	lsls	r2, r2, #1
 800d8b4:	b2d2      	uxtb	r2, r2
 800d8b6:	3301      	adds	r3, #1
 800d8b8:	e7f9      	b.n	800d8ae <GUI_USAGE_BM_GetNextDirty+0x58>
 800d8ba:	3307      	adds	r3, #7
 800d8bc:	f003 0207 	and.w	r2, r3, #7
 800d8c0:	2a07      	cmp	r2, #7
 800d8c2:	d10d      	bne.n	800d8e0 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800d8c4:	3801      	subs	r0, #1
 800d8c6:	d40b      	bmi.n	800d8e0 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800d8c8:	f814 2b01 	ldrb.w	r2, [r4], #1
 800d8cc:	2aff      	cmp	r2, #255	; 0xff
 800d8ce:	d101      	bne.n	800d8d4 <GUI_USAGE_BM_GetNextDirty+0x7e>
 800d8d0:	3308      	adds	r3, #8
 800d8d2:	e7f7      	b.n	800d8c4 <GUI_USAGE_BM_GetNextDirty+0x6e>
 800d8d4:	0610      	lsls	r0, r2, #24
 800d8d6:	d503      	bpl.n	800d8e0 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800d8d8:	0052      	lsls	r2, r2, #1
 800d8da:	b2d2      	uxtb	r2, r2
 800d8dc:	3301      	adds	r3, #1
 800d8de:	e7f9      	b.n	800d8d4 <GUI_USAGE_BM_GetNextDirty+0x7e>
 800d8e0:	1b58      	subs	r0, r3, r5
 800d8e2:	600d      	str	r5, [r1, #0]
 800d8e4:	3001      	adds	r0, #1
 800d8e6:	bd70      	pop	{r4, r5, r6, pc}
 800d8e8:	2000      	movs	r0, #0
 800d8ea:	bd70      	pop	{r4, r5, r6, pc}

0800d8ec <_GUI_USAGE_BM_Delete>:
 800d8ec:	f7fd be2a 	b.w	800b544 <GUI_ALLOC_Free>

0800d8f0 <GUI_USAGE_BM_Clear>:
 800d8f0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800d8f4:	6902      	ldr	r2, [r0, #16]
 800d8f6:	2100      	movs	r1, #0
 800d8f8:	3014      	adds	r0, #20
 800d8fa:	435a      	muls	r2, r3
 800d8fc:	f002 ba26 	b.w	800fd4c <memset>

0800d900 <GUI_USAGE_BM_AddHLine>:
 800d900:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d902:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d906:	1b09      	subs	r1, r1, r4
 800d908:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800d90c:	42a1      	cmp	r1, r4
 800d90e:	da2f      	bge.n	800d970 <GUI_USAGE_BM_AddHLine+0x70>
 800d910:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 800d914:	440b      	add	r3, r1
 800d916:	f100 0414 	add.w	r4, r0, #20
 800d91a:	3b01      	subs	r3, #1
 800d91c:	6900      	ldr	r0, [r0, #16]
 800d91e:	1b52      	subs	r2, r2, r5
 800d920:	43de      	mvns	r6, r3
 800d922:	fb00 4202 	mla	r2, r0, r2, r4
 800d926:	f001 0707 	and.w	r7, r1, #7
 800d92a:	10cc      	asrs	r4, r1, #3
 800d92c:	f006 0607 	and.w	r6, r6, #7
 800d930:	21ff      	movs	r1, #255	; 0xff
 800d932:	fa41 f707 	asr.w	r7, r1, r7
 800d936:	fa01 f606 	lsl.w	r6, r1, r6
 800d93a:	ebd4 03e3 	rsbs	r3, r4, r3, asr #3
 800d93e:	eb02 0504 	add.w	r5, r2, r4
 800d942:	b2ff      	uxtb	r7, r7
 800d944:	b2f6      	uxtb	r6, r6
 800d946:	5d10      	ldrb	r0, [r2, r4]
 800d948:	d103      	bne.n	800d952 <GUI_USAGE_BM_AddHLine+0x52>
 800d94a:	403e      	ands	r6, r7
 800d94c:	4330      	orrs	r0, r6
 800d94e:	5510      	strb	r0, [r2, r4]
 800d950:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d952:	4338      	orrs	r0, r7
 800d954:	5510      	strb	r0, [r2, r4]
 800d956:	1e5c      	subs	r4, r3, #1
 800d958:	2c00      	cmp	r4, #0
 800d95a:	f105 0501 	add.w	r5, r5, #1
 800d95e:	dd04      	ble.n	800d96a <GUI_USAGE_BM_AddHLine+0x6a>
 800d960:	4628      	mov	r0, r5
 800d962:	4622      	mov	r2, r4
 800d964:	f002 f9f2 	bl	800fd4c <memset>
 800d968:	4425      	add	r5, r4
 800d96a:	782b      	ldrb	r3, [r5, #0]
 800d96c:	431e      	orrs	r6, r3
 800d96e:	702e      	strb	r6, [r5, #0]
 800d970:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800d974 <GUI_USAGE_BM_Create>:
 800d974:	e92d 4fd3 	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, sl, fp, lr}
 800d978:	f102 060f 	add.w	r6, r2, #15
 800d97c:	1136      	asrs	r6, r6, #4
 800d97e:	0076      	lsls	r6, r6, #1
 800d980:	4682      	mov	sl, r0
 800d982:	fb06 f003 	mul.w	r0, r6, r3
 800d986:	3014      	adds	r0, #20
 800d988:	4689      	mov	r9, r1
 800d98a:	4690      	mov	r8, r2
 800d98c:	461f      	mov	r7, r3
 800d98e:	f7fd ff99 	bl	800b8c4 <GUI_ALLOC_AllocZero>
 800d992:	4683      	mov	fp, r0
 800d994:	b198      	cbz	r0, 800d9be <GUI_USAGE_BM_Create+0x4a>
 800d996:	f7fd fd9b 	bl	800b4d0 <GUI_ALLOC_LockH>
 800d99a:	4604      	mov	r4, r0
 800d99c:	4b0a      	ldr	r3, [pc, #40]	; (800d9c8 <GUI_USAGE_BM_Create+0x54>)
 800d99e:	60a3      	str	r3, [r4, #8]
 800d9a0:	a802      	add	r0, sp, #8
 800d9a2:	2301      	movs	r3, #1
 800d9a4:	f840 4d04 	str.w	r4, [r0, #-4]!
 800d9a8:	f8a4 8004 	strh.w	r8, [r4, #4]
 800d9ac:	f8a4 a000 	strh.w	sl, [r4]
 800d9b0:	f8a4 9002 	strh.w	r9, [r4, #2]
 800d9b4:	80e7      	strh	r7, [r4, #6]
 800d9b6:	81a3      	strh	r3, [r4, #12]
 800d9b8:	6126      	str	r6, [r4, #16]
 800d9ba:	f7fd fd97 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800d9be:	4658      	mov	r0, fp
 800d9c0:	b002      	add	sp, #8
 800d9c2:	e8bd 8fd0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
 800d9c6:	bf00      	nop
 800d9c8:	08012108 	.word	0x08012108

0800d9cc <GUI_USAGE_DecUseCnt>:
 800d9cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d9ce:	4605      	mov	r5, r0
 800d9d0:	f7fd fd7e 	bl	800b4d0 <GUI_ALLOC_LockH>
 800d9d4:	4602      	mov	r2, r0
 800d9d6:	a802      	add	r0, sp, #8
 800d9d8:	8994      	ldrh	r4, [r2, #12]
 800d9da:	f840 2d04 	str.w	r2, [r0, #-4]!
 800d9de:	3c01      	subs	r4, #1
 800d9e0:	b2a4      	uxth	r4, r4
 800d9e2:	8194      	strh	r4, [r2, #12]
 800d9e4:	f7fd fd82 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800d9e8:	b914      	cbnz	r4, 800d9f0 <GUI_USAGE_DecUseCnt+0x24>
 800d9ea:	4628      	mov	r0, r5
 800d9ec:	f7fd fdaa 	bl	800b544 <GUI_ALLOC_Free>
 800d9f0:	b003      	add	sp, #12
 800d9f2:	bd30      	pop	{r4, r5, pc}

0800d9f4 <GUI_USAGE_AddRect>:
 800d9f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d9f8:	4605      	mov	r5, r0
 800d9fa:	4688      	mov	r8, r1
 800d9fc:	4617      	mov	r7, r2
 800d9fe:	4699      	mov	r9, r3
 800da00:	68a8      	ldr	r0, [r5, #8]
 800da02:	464b      	mov	r3, r9
 800da04:	6846      	ldr	r6, [r0, #4]
 800da06:	4641      	mov	r1, r8
 800da08:	4628      	mov	r0, r5
 800da0a:	1c54      	adds	r4, r2, #1
 800da0c:	47b0      	blx	r6
 800da0e:	9b08      	ldr	r3, [sp, #32]
 800da10:	443b      	add	r3, r7
 800da12:	42a3      	cmp	r3, r4
 800da14:	d001      	beq.n	800da1a <GUI_USAGE_AddRect+0x26>
 800da16:	4622      	mov	r2, r4
 800da18:	e7f2      	b.n	800da00 <GUI_USAGE_AddRect+0xc>
 800da1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0800da20 <GUI_MEMDEV_ReduceYSize>:
 800da20:	b513      	push	{r0, r1, r4, lr}
 800da22:	460c      	mov	r4, r1
 800da24:	b918      	cbnz	r0, 800da2e <GUI_MEMDEV_ReduceYSize+0xe>
 800da26:	4b08      	ldr	r3, [pc, #32]	; (800da48 <GUI_MEMDEV_ReduceYSize+0x28>)
 800da28:	681b      	ldr	r3, [r3, #0]
 800da2a:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800da2c:	b150      	cbz	r0, 800da44 <GUI_MEMDEV_ReduceYSize+0x24>
 800da2e:	f7fd fd4f 	bl	800b4d0 <GUI_ALLOC_LockH>
 800da32:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800da36:	9001      	str	r0, [sp, #4]
 800da38:	429c      	cmp	r4, r3
 800da3a:	bfb8      	it	lt
 800da3c:	8144      	strhlt	r4, [r0, #10]
 800da3e:	a801      	add	r0, sp, #4
 800da40:	f7fd fd54 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800da44:	b002      	add	sp, #8
 800da46:	bd10      	pop	{r4, pc}
 800da48:	200000b8 	.word	0x200000b8

0800da4c <GUI_MEMDEV_Clear>:
 800da4c:	b513      	push	{r0, r1, r4, lr}
 800da4e:	b918      	cbnz	r0, 800da58 <GUI_MEMDEV_Clear+0xc>
 800da50:	4b0d      	ldr	r3, [pc, #52]	; (800da88 <GUI_MEMDEV_Clear+0x3c>)
 800da52:	681b      	ldr	r3, [r3, #0]
 800da54:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800da56:	b1a8      	cbz	r0, 800da84 <GUI_MEMDEV_Clear+0x38>
 800da58:	f7fd fd3a 	bl	800b4d0 <GUI_ALLOC_LockH>
 800da5c:	ab02      	add	r3, sp, #8
 800da5e:	6944      	ldr	r4, [r0, #20]
 800da60:	f843 0d08 	str.w	r0, [r3, #-8]!
 800da64:	4668      	mov	r0, sp
 800da66:	f7fd fd41 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800da6a:	b15c      	cbz	r4, 800da84 <GUI_MEMDEV_Clear+0x38>
 800da6c:	4620      	mov	r0, r4
 800da6e:	f7fd fd2f 	bl	800b4d0 <GUI_ALLOC_LockH>
 800da72:	ac02      	add	r4, sp, #8
 800da74:	6883      	ldr	r3, [r0, #8]
 800da76:	f844 0d04 	str.w	r0, [r4, #-4]!
 800da7a:	689b      	ldr	r3, [r3, #8]
 800da7c:	4798      	blx	r3
 800da7e:	4620      	mov	r0, r4
 800da80:	f7fd fd34 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800da84:	b002      	add	sp, #8
 800da86:	bd10      	pop	{r4, pc}
 800da88:	200000b8 	.word	0x200000b8

0800da8c <_GetDevData>:
 800da8c:	4802      	ldr	r0, [pc, #8]	; (800da98 <_GetDevData+0xc>)
 800da8e:	2901      	cmp	r1, #1
 800da90:	bf18      	it	ne
 800da92:	2000      	movne	r0, #0
 800da94:	4770      	bx	lr
 800da96:	bf00      	nop
 800da98:	08012160 	.word	0x08012160

0800da9c <_GetDevFunc>:
 800da9c:	4802      	ldr	r0, [pc, #8]	; (800daa8 <_GetDevFunc+0xc>)
 800da9e:	2916      	cmp	r1, #22
 800daa0:	bf18      	it	ne
 800daa2:	2000      	movne	r0, #0
 800daa4:	4770      	bx	lr
 800daa6:	bf00      	nop
 800daa8:	0800cf0d 	.word	0x0800cf0d

0800daac <_SetOrg>:
 800daac:	6800      	ldr	r0, [r0, #0]
 800daae:	b508      	push	{r3, lr}
 800dab0:	b110      	cbz	r0, 800dab8 <_SetOrg+0xc>
 800dab2:	68c3      	ldr	r3, [r0, #12]
 800dab4:	6a1b      	ldr	r3, [r3, #32]
 800dab6:	4798      	blx	r3
 800dab8:	bd08      	pop	{r3, pc}

0800daba <_GetRect>:
 800daba:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dabc:	6880      	ldr	r0, [r0, #8]
 800dabe:	460c      	mov	r4, r1
 800dac0:	f7fd fd06 	bl	800b4d0 <GUI_ALLOC_LockH>
 800dac4:	4603      	mov	r3, r0
 800dac6:	a802      	add	r0, sp, #8
 800dac8:	8899      	ldrh	r1, [r3, #4]
 800daca:	88da      	ldrh	r2, [r3, #6]
 800dacc:	891d      	ldrh	r5, [r3, #8]
 800dace:	f840 3d04 	str.w	r3, [r0, #-4]!
 800dad2:	895b      	ldrh	r3, [r3, #10]
 800dad4:	8021      	strh	r1, [r4, #0]
 800dad6:	8062      	strh	r2, [r4, #2]
 800dad8:	4429      	add	r1, r5
 800dada:	441a      	add	r2, r3
 800dadc:	3901      	subs	r1, #1
 800dade:	3a01      	subs	r2, #1
 800dae0:	80a1      	strh	r1, [r4, #4]
 800dae2:	80e2      	strh	r2, [r4, #6]
 800dae4:	f7fd fd02 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800dae8:	b003      	add	sp, #12
 800daea:	bd30      	pop	{r4, r5, pc}

0800daec <_XY2PTR>:
 800daec:	4b0e      	ldr	r3, [pc, #56]	; (800db28 <_XY2PTR+0x3c>)
 800daee:	681b      	ldr	r3, [r3, #0]
 800daf0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800daf2:	4605      	mov	r5, r0
 800daf4:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800daf6:	460e      	mov	r6, r1
 800daf8:	f7fd fcea 	bl	800b4d0 <GUI_ALLOC_LockH>
 800dafc:	4603      	mov	r3, r0
 800dafe:	a802      	add	r0, sp, #8
 800db00:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 800db04:	f840 3d04 	str.w	r3, [r0, #-4]!
 800db08:	f103 0118 	add.w	r1, r3, #24
 800db0c:	1b36      	subs	r6, r6, r4
 800db0e:	68dc      	ldr	r4, [r3, #12]
 800db10:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800db14:	fb04 1406 	mla	r4, r4, r6, r1
 800db18:	1aed      	subs	r5, r5, r3
 800db1a:	f7fd fce7 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800db1e:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800db22:	4620      	mov	r0, r4
 800db24:	b002      	add	sp, #8
 800db26:	bd70      	pop	{r4, r5, r6, pc}
 800db28:	200000b8 	.word	0x200000b8

0800db2c <_GetPixelIndex>:
 800db2c:	b508      	push	{r3, lr}
 800db2e:	4608      	mov	r0, r1
 800db30:	4611      	mov	r1, r2
 800db32:	f7ff ffdb 	bl	800daec <_XY2PTR>
 800db36:	8800      	ldrh	r0, [r0, #0]
 800db38:	bd08      	pop	{r3, pc}
	...

0800db3c <_XorPixel>:
 800db3c:	4b14      	ldr	r3, [pc, #80]	; (800db90 <_XorPixel+0x54>)
 800db3e:	681b      	ldr	r3, [r3, #0]
 800db40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800db42:	4607      	mov	r7, r0
 800db44:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800db46:	4615      	mov	r5, r2
 800db48:	460e      	mov	r6, r1
 800db4a:	f7fd fcc1 	bl	800b4d0 <GUI_ALLOC_LockH>
 800db4e:	4629      	mov	r1, r5
 800db50:	9000      	str	r0, [sp, #0]
 800db52:	4630      	mov	r0, r6
 800db54:	f7ff ffca 	bl	800daec <_XY2PTR>
 800db58:	693b      	ldr	r3, [r7, #16]
 800db5a:	4604      	mov	r4, r0
 800db5c:	689b      	ldr	r3, [r3, #8]
 800db5e:	4798      	blx	r3
 800db60:	8823      	ldrh	r3, [r4, #0]
 800db62:	4058      	eors	r0, r3
 800db64:	9b00      	ldr	r3, [sp, #0]
 800db66:	8020      	strh	r0, [r4, #0]
 800db68:	6958      	ldr	r0, [r3, #20]
 800db6a:	b160      	cbz	r0, 800db86 <_XorPixel+0x4a>
 800db6c:	f7fd fcb0 	bl	800b4d0 <GUI_ALLOC_LockH>
 800db70:	ac02      	add	r4, sp, #8
 800db72:	6883      	ldr	r3, [r0, #8]
 800db74:	f844 0d04 	str.w	r0, [r4, #-4]!
 800db78:	681b      	ldr	r3, [r3, #0]
 800db7a:	4631      	mov	r1, r6
 800db7c:	462a      	mov	r2, r5
 800db7e:	4798      	blx	r3
 800db80:	4620      	mov	r0, r4
 800db82:	f7fd fcb3 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800db86:	4668      	mov	r0, sp
 800db88:	f7fd fcb0 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800db8c:	b003      	add	sp, #12
 800db8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800db90:	200000b8 	.word	0x200000b8

0800db94 <_SetPixelIndex>:
 800db94:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800db96:	461c      	mov	r4, r3
 800db98:	4b10      	ldr	r3, [pc, #64]	; (800dbdc <_SetPixelIndex+0x48>)
 800db9a:	681b      	ldr	r3, [r3, #0]
 800db9c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800db9e:	460e      	mov	r6, r1
 800dba0:	4615      	mov	r5, r2
 800dba2:	f7fd fc95 	bl	800b4d0 <GUI_ALLOC_LockH>
 800dba6:	4629      	mov	r1, r5
 800dba8:	9000      	str	r0, [sp, #0]
 800dbaa:	4630      	mov	r0, r6
 800dbac:	f7ff ff9e 	bl	800daec <_XY2PTR>
 800dbb0:	9b00      	ldr	r3, [sp, #0]
 800dbb2:	8004      	strh	r4, [r0, #0]
 800dbb4:	6958      	ldr	r0, [r3, #20]
 800dbb6:	b160      	cbz	r0, 800dbd2 <_SetPixelIndex+0x3e>
 800dbb8:	f7fd fc8a 	bl	800b4d0 <GUI_ALLOC_LockH>
 800dbbc:	ac02      	add	r4, sp, #8
 800dbbe:	6883      	ldr	r3, [r0, #8]
 800dbc0:	f844 0d04 	str.w	r0, [r4, #-4]!
 800dbc4:	681b      	ldr	r3, [r3, #0]
 800dbc6:	4631      	mov	r1, r6
 800dbc8:	462a      	mov	r2, r5
 800dbca:	4798      	blx	r3
 800dbcc:	4620      	mov	r0, r4
 800dbce:	f7fd fc8d 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800dbd2:	4668      	mov	r0, sp
 800dbd4:	f7fd fc8a 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800dbd8:	b002      	add	sp, #8
 800dbda:	bd70      	pop	{r4, r5, r6, pc}
 800dbdc:	200000b8 	.word	0x200000b8

0800dbe0 <_DrawVLine>:
 800dbe0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800dbe4:	4d2c      	ldr	r5, [pc, #176]	; (800dc98 <_DrawVLine+0xb8>)
 800dbe6:	461e      	mov	r6, r3
 800dbe8:	682b      	ldr	r3, [r5, #0]
 800dbea:	4681      	mov	r9, r0
 800dbec:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800dbee:	460f      	mov	r7, r1
 800dbf0:	4614      	mov	r4, r2
 800dbf2:	f7fd fc6d 	bl	800b4d0 <GUI_ALLOC_LockH>
 800dbf6:	9000      	str	r0, [sp, #0]
 800dbf8:	6940      	ldr	r0, [r0, #20]
 800dbfa:	46aa      	mov	sl, r5
 800dbfc:	b108      	cbz	r0, 800dc02 <_DrawVLine+0x22>
 800dbfe:	f7fd fc67 	bl	800b4d0 <GUI_ALLOC_LockH>
 800dc02:	9001      	str	r0, [sp, #4]
 800dc04:	4621      	mov	r1, r4
 800dc06:	4638      	mov	r0, r7
 800dc08:	f7ff ff70 	bl	800daec <_XY2PTR>
 800dc0c:	9b00      	ldr	r3, [sp, #0]
 800dc0e:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800dc12:	f8da 3000 	ldr.w	r3, [sl]
 800dc16:	7c1a      	ldrb	r2, [r3, #16]
 800dc18:	07d2      	lsls	r2, r2, #31
 800dc1a:	4605      	mov	r5, r0
 800dc1c:	d51f      	bpl.n	800dc5e <_DrawVLine+0x7e>
 800dc1e:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800dc22:	689b      	ldr	r3, [r3, #8]
 800dc24:	4798      	blx	r3
 800dc26:	fa1f f880 	uxth.w	r8, r0
 800dc2a:	9801      	ldr	r0, [sp, #4]
 800dc2c:	b120      	cbz	r0, 800dc38 <_DrawVLine+0x58>
 800dc2e:	6883      	ldr	r3, [r0, #8]
 800dc30:	4639      	mov	r1, r7
 800dc32:	681b      	ldr	r3, [r3, #0]
 800dc34:	4622      	mov	r2, r4
 800dc36:	4798      	blx	r3
 800dc38:	882b      	ldrh	r3, [r5, #0]
 800dc3a:	ea88 0303 	eor.w	r3, r8, r3
 800dc3e:	802b      	strh	r3, [r5, #0]
 800dc40:	9b00      	ldr	r3, [sp, #0]
 800dc42:	3401      	adds	r4, #1
 800dc44:	68db      	ldr	r3, [r3, #12]
 800dc46:	42b4      	cmp	r4, r6
 800dc48:	441d      	add	r5, r3
 800dc4a:	ddee      	ble.n	800dc2a <_DrawVLine+0x4a>
 800dc4c:	4668      	mov	r0, sp
 800dc4e:	f7fd fc4d 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800dc52:	9b01      	ldr	r3, [sp, #4]
 800dc54:	b1eb      	cbz	r3, 800dc92 <_DrawVLine+0xb2>
 800dc56:	a801      	add	r0, sp, #4
 800dc58:	f7fd fc48 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800dc5c:	e019      	b.n	800dc92 <_DrawVLine+0xb2>
 800dc5e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc60:	f8d3 9000 	ldr.w	r9, [r3]
 800dc64:	9b01      	ldr	r3, [sp, #4]
 800dc66:	b163      	cbz	r3, 800dc82 <_DrawVLine+0xa2>
 800dc68:	9801      	ldr	r0, [sp, #4]
 800dc6a:	6883      	ldr	r3, [r0, #8]
 800dc6c:	4622      	mov	r2, r4
 800dc6e:	681b      	ldr	r3, [r3, #0]
 800dc70:	4639      	mov	r1, r7
 800dc72:	3401      	adds	r4, #1
 800dc74:	4798      	blx	r3
 800dc76:	42b4      	cmp	r4, r6
 800dc78:	f8a5 9000 	strh.w	r9, [r5]
 800dc7c:	4445      	add	r5, r8
 800dc7e:	ddf3      	ble.n	800dc68 <_DrawVLine+0x88>
 800dc80:	e7e4      	b.n	800dc4c <_DrawVLine+0x6c>
 800dc82:	1b34      	subs	r4, r6, r4
 800dc84:	3401      	adds	r4, #1
 800dc86:	3c01      	subs	r4, #1
 800dc88:	f8a5 9000 	strh.w	r9, [r5]
 800dc8c:	4445      	add	r5, r8
 800dc8e:	d1fa      	bne.n	800dc86 <_DrawVLine+0xa6>
 800dc90:	e7dc      	b.n	800dc4c <_DrawVLine+0x6c>
 800dc92:	b002      	add	sp, #8
 800dc94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dc98:	200000b8 	.word	0x200000b8

0800dc9c <_FillRect>:
 800dc9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dca0:	4f2a      	ldr	r7, [pc, #168]	; (800dd4c <_FillRect+0xb0>)
 800dca2:	4614      	mov	r4, r2
 800dca4:	683a      	ldr	r2, [r7, #0]
 800dca6:	4698      	mov	r8, r3
 800dca8:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 800dcaa:	b087      	sub	sp, #28
 800dcac:	681b      	ldr	r3, [r3, #0]
 800dcae:	9302      	str	r3, [sp, #8]
 800dcb0:	4682      	mov	sl, r0
 800dcb2:	6e10      	ldr	r0, [r2, #96]	; 0x60
 800dcb4:	460e      	mov	r6, r1
 800dcb6:	f7fd fc0b 	bl	800b4d0 <GUI_ALLOC_LockH>
 800dcba:	4621      	mov	r1, r4
 800dcbc:	9004      	str	r0, [sp, #16]
 800dcbe:	4630      	mov	r0, r6
 800dcc0:	f7ff ff14 	bl	800daec <_XY2PTR>
 800dcc4:	9a04      	ldr	r2, [sp, #16]
 800dcc6:	4605      	mov	r5, r0
 800dcc8:	6950      	ldr	r0, [r2, #20]
 800dcca:	68d3      	ldr	r3, [r2, #12]
 800dccc:	9303      	str	r3, [sp, #12]
 800dcce:	ebc6 0908 	rsb	r9, r6, r8
 800dcd2:	f109 0801 	add.w	r8, r9, #1
 800dcd6:	46bb      	mov	fp, r7
 800dcd8:	b180      	cbz	r0, 800dcfc <_FillRect+0x60>
 800dcda:	f7fd fbf9 	bl	800b4d0 <GUI_ALLOC_LockH>
 800dcde:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800dce0:	af06      	add	r7, sp, #24
 800dce2:	1b13      	subs	r3, r2, r4
 800dce4:	f847 0d04 	str.w	r0, [r7, #-4]!
 800dce8:	3301      	adds	r3, #1
 800dcea:	9300      	str	r3, [sp, #0]
 800dcec:	4631      	mov	r1, r6
 800dcee:	4622      	mov	r2, r4
 800dcf0:	4643      	mov	r3, r8
 800dcf2:	f7ff fe7f 	bl	800d9f4 <GUI_USAGE_AddRect>
 800dcf6:	4638      	mov	r0, r7
 800dcf8:	f7fd fbf8 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800dcfc:	ea4f 0649 	mov.w	r6, r9, lsl #1
 800dd00:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800dd02:	429c      	cmp	r4, r3
 800dd04:	dc1c      	bgt.n	800dd40 <_FillRect+0xa4>
 800dd06:	f8db 3000 	ldr.w	r3, [fp]
 800dd0a:	7c1b      	ldrb	r3, [r3, #16]
 800dd0c:	07db      	lsls	r3, r3, #31
 800dd0e:	d50d      	bpl.n	800dd2c <_FillRect+0x90>
 800dd10:	f8da 3010 	ldr.w	r3, [sl, #16]
 800dd14:	689b      	ldr	r3, [r3, #8]
 800dd16:	4798      	blx	r3
 800dd18:	19aa      	adds	r2, r5, r6
 800dd1a:	b280      	uxth	r0, r0
 800dd1c:	1eab      	subs	r3, r5, #2
 800dd1e:	8859      	ldrh	r1, [r3, #2]
 800dd20:	4041      	eors	r1, r0
 800dd22:	f823 1f02 	strh.w	r1, [r3, #2]!
 800dd26:	4293      	cmp	r3, r2
 800dd28:	d1f9      	bne.n	800dd1e <_FillRect+0x82>
 800dd2a:	e005      	b.n	800dd38 <_FillRect+0x9c>
 800dd2c:	9b02      	ldr	r3, [sp, #8]
 800dd2e:	4628      	mov	r0, r5
 800dd30:	b299      	uxth	r1, r3
 800dd32:	4642      	mov	r2, r8
 800dd34:	f7fb f8c9 	bl	8008eca <GUI__memset16>
 800dd38:	9a03      	ldr	r2, [sp, #12]
 800dd3a:	3401      	adds	r4, #1
 800dd3c:	4415      	add	r5, r2
 800dd3e:	e7df      	b.n	800dd00 <_FillRect+0x64>
 800dd40:	a804      	add	r0, sp, #16
 800dd42:	f7fd fbd3 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800dd46:	b007      	add	sp, #28
 800dd48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd4c:	200000b8 	.word	0x200000b8

0800dd50 <_DrawHLine>:
 800dd50:	b507      	push	{r0, r1, r2, lr}
 800dd52:	9200      	str	r2, [sp, #0]
 800dd54:	f7ff ffa2 	bl	800dc9c <_FillRect>
 800dd58:	b003      	add	sp, #12
 800dd5a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800dd60 <_DrawBitmap>:
 800dd60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd64:	4c8b      	ldr	r4, [pc, #556]	; (800df94 <_DrawBitmap+0x234>)
 800dd66:	b093      	sub	sp, #76	; 0x4c
 800dd68:	469b      	mov	fp, r3
 800dd6a:	6823      	ldr	r3, [r4, #0]
 800dd6c:	900d      	str	r0, [sp, #52]	; 0x34
 800dd6e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800dd70:	9207      	str	r2, [sp, #28]
 800dd72:	460d      	mov	r5, r1
 800dd74:	f8dd a07c 	ldr.w	sl, [sp, #124]	; 0x7c
 800dd78:	f7fd fbaa 	bl	800b4d0 <GUI_ALLOC_LockH>
 800dd7c:	9010      	str	r0, [sp, #64]	; 0x40
 800dd7e:	6940      	ldr	r0, [r0, #20]
 800dd80:	b108      	cbz	r0, 800dd86 <_DrawBitmap+0x26>
 800dd82:	f7fd fba5 	bl	800b4d0 <GUI_ALLOC_LockH>
 800dd86:	9011      	str	r0, [sp, #68]	; 0x44
 800dd88:	a812      	add	r0, sp, #72	; 0x48
 800dd8a:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 800dd8e:	68db      	ldr	r3, [r3, #12]
 800dd90:	9308      	str	r3, [sp, #32]
 800dd92:	f7fd fbab 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800dd96:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800dd98:	9811      	ldr	r0, [sp, #68]	; 0x44
 800dd9a:	442e      	add	r6, r5
 800dd9c:	9604      	str	r6, [sp, #16]
 800dd9e:	b150      	cbz	r0, 800ddb6 <_DrawBitmap+0x56>
 800dda0:	6823      	ldr	r3, [r4, #0]
 800dda2:	7c1b      	ldrb	r3, [r3, #16]
 800dda4:	0799      	lsls	r1, r3, #30
 800dda6:	d106      	bne.n	800ddb6 <_DrawBitmap+0x56>
 800dda8:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800ddaa:	9700      	str	r7, [sp, #0]
 800ddac:	4631      	mov	r1, r6
 800ddae:	9a07      	ldr	r2, [sp, #28]
 800ddb0:	465b      	mov	r3, fp
 800ddb2:	f7ff fe1f 	bl	800d9f4 <GUI_USAGE_AddRect>
 800ddb6:	9804      	ldr	r0, [sp, #16]
 800ddb8:	9907      	ldr	r1, [sp, #28]
 800ddba:	f7ff fe97 	bl	800daec <_XY2PTR>
 800ddbe:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800ddc0:	2e10      	cmp	r6, #16
 800ddc2:	4604      	mov	r4, r0
 800ddc4:	d13a      	bne.n	800de3c <_DrawBitmap+0xdc>
 800ddc6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800ddc8:	b11b      	cbz	r3, 800ddd2 <_DrawBitmap+0x72>
 800ddca:	ea4f 064b 	mov.w	r6, fp, lsl #1
 800ddce:	2500      	movs	r5, #0
 800ddd0:	e014      	b.n	800ddfc <_DrawBitmap+0x9c>
 800ddd2:	4b71      	ldr	r3, [pc, #452]	; (800df98 <_DrawBitmap+0x238>)
 800ddd4:	681d      	ldr	r5, [r3, #0]
 800ddd6:	2d00      	cmp	r5, #0
 800ddd8:	d0f7      	beq.n	800ddca <_DrawBitmap+0x6a>
 800ddda:	9e08      	ldr	r6, [sp, #32]
 800dddc:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800ddde:	9600      	str	r6, [sp, #0]
 800dde0:	9701      	str	r7, [sp, #4]
 800dde2:	4651      	mov	r1, sl
 800dde4:	465a      	mov	r2, fp
 800dde6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800dde8:	47a8      	blx	r5
 800ddea:	e349      	b.n	800e480 <_DrawBitmap+0x720>
 800ddec:	f1ba 0f00 	cmp.w	sl, #0
 800ddf0:	d10a      	bne.n	800de08 <_DrawBitmap+0xa8>
 800ddf2:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800ddf4:	44ba      	add	sl, r7
 800ddf6:	9f08      	ldr	r7, [sp, #32]
 800ddf8:	3501      	adds	r5, #1
 800ddfa:	443c      	add	r4, r7
 800ddfc:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800ddfe:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 800de02:	42bd      	cmp	r5, r7
 800de04:	dbf2      	blt.n	800ddec <_DrawBitmap+0x8c>
 800de06:	e014      	b.n	800de32 <_DrawBitmap+0xd2>
 800de08:	2c00      	cmp	r4, #0
 800de0a:	d0f2      	beq.n	800ddf2 <_DrawBitmap+0x92>
 800de0c:	4b63      	ldr	r3, [pc, #396]	; (800df9c <_DrawBitmap+0x23c>)
 800de0e:	4620      	mov	r0, r4
 800de10:	681b      	ldr	r3, [r3, #0]
 800de12:	4651      	mov	r1, sl
 800de14:	4632      	mov	r2, r6
 800de16:	4798      	blx	r3
 800de18:	f1b8 0f00 	cmp.w	r8, #0
 800de1c:	d0e9      	beq.n	800ddf2 <_DrawBitmap+0x92>
 800de1e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800de22:	9a07      	ldr	r2, [sp, #28]
 800de24:	685f      	ldr	r7, [r3, #4]
 800de26:	9904      	ldr	r1, [sp, #16]
 800de28:	4640      	mov	r0, r8
 800de2a:	442a      	add	r2, r5
 800de2c:	465b      	mov	r3, fp
 800de2e:	47b8      	blx	r7
 800de30:	e7df      	b.n	800ddf2 <_DrawBitmap+0x92>
 800de32:	f1b8 0f00 	cmp.w	r8, #0
 800de36:	f040 8320 	bne.w	800e47a <_DrawBitmap+0x71a>
 800de3a:	e321      	b.n	800e480 <_DrawBitmap+0x720>
 800de3c:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800de3e:	2e17      	cmp	r6, #23
 800de40:	dd38      	ble.n	800deb4 <_DrawBitmap+0x154>
 800de42:	2600      	movs	r6, #0
 800de44:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800de46:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800de48:	42be      	cmp	r6, r7
 800de4a:	f280 809e 	bge.w	800df8a <_DrawBitmap+0x22a>
 800de4e:	9f07      	ldr	r7, [sp, #28]
 800de50:	4437      	add	r7, r6
 800de52:	f1ba 0f00 	cmp.w	sl, #0
 800de56:	d027      	beq.n	800dea8 <_DrawBitmap+0x148>
 800de58:	b334      	cbz	r4, 800dea8 <_DrawBitmap+0x148>
 800de5a:	b13d      	cbz	r5, 800de6c <_DrawBitmap+0x10c>
 800de5c:	68ab      	ldr	r3, [r5, #8]
 800de5e:	9904      	ldr	r1, [sp, #16]
 800de60:	f8d3 c004 	ldr.w	ip, [r3, #4]
 800de64:	4628      	mov	r0, r5
 800de66:	463a      	mov	r2, r7
 800de68:	465b      	mov	r3, fp
 800de6a:	47e0      	blx	ip
 800de6c:	1ea3      	subs	r3, r4, #2
 800de6e:	f1aa 0904 	sub.w	r9, sl, #4
 800de72:	9303      	str	r3, [sp, #12]
 800de74:	46d8      	mov	r8, fp
 800de76:	9b04      	ldr	r3, [sp, #16]
 800de78:	980d      	ldr	r0, [sp, #52]	; 0x34
 800de7a:	445b      	add	r3, fp
 800de7c:	ebc8 0103 	rsb	r1, r8, r3
 800de80:	6903      	ldr	r3, [r0, #16]
 800de82:	f859 0f04 	ldr.w	r0, [r9, #4]!
 800de86:	681b      	ldr	r3, [r3, #0]
 800de88:	9102      	str	r1, [sp, #8]
 800de8a:	4798      	blx	r3
 800de8c:	9b03      	ldr	r3, [sp, #12]
 800de8e:	9902      	ldr	r1, [sp, #8]
 800de90:	f823 0f02 	strh.w	r0, [r3, #2]!
 800de94:	9303      	str	r3, [sp, #12]
 800de96:	b125      	cbz	r5, 800dea2 <_DrawBitmap+0x142>
 800de98:	68ab      	ldr	r3, [r5, #8]
 800de9a:	4628      	mov	r0, r5
 800de9c:	681b      	ldr	r3, [r3, #0]
 800de9e:	463a      	mov	r2, r7
 800dea0:	4798      	blx	r3
 800dea2:	f1b8 0801 	subs.w	r8, r8, #1
 800dea6:	d1e6      	bne.n	800de76 <_DrawBitmap+0x116>
 800dea8:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800deaa:	44ba      	add	sl, r7
 800deac:	9f08      	ldr	r7, [sp, #32]
 800deae:	3601      	adds	r6, #1
 800deb0:	443c      	add	r4, r7
 800deb2:	e7c7      	b.n	800de44 <_DrawBitmap+0xe4>
 800deb4:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800deb6:	2e08      	cmp	r6, #8
 800deb8:	f100 0402 	add.w	r4, r0, #2
 800debc:	d170      	bne.n	800dfa0 <_DrawBitmap+0x240>
 800debe:	9e07      	ldr	r6, [sp, #28]
 800dec0:	9f07      	ldr	r7, [sp, #28]
 800dec2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800dec4:	1bf3      	subs	r3, r6, r7
 800dec6:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800dec8:	42bb      	cmp	r3, r7
 800deca:	f1a4 0002 	sub.w	r0, r4, #2
 800dece:	da5c      	bge.n	800df8a <_DrawBitmap+0x22a>
 800ded0:	4b30      	ldr	r3, [pc, #192]	; (800df94 <_DrawBitmap+0x234>)
 800ded2:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800ded4:	681b      	ldr	r3, [r3, #0]
 800ded6:	7c1b      	ldrb	r3, [r3, #16]
 800ded8:	b367      	cbz	r7, 800df34 <_DrawBitmap+0x1d4>
 800deda:	f013 0303 	ands.w	r3, r3, #3
 800dede:	d004      	beq.n	800deea <_DrawBitmap+0x18a>
 800dee0:	2b02      	cmp	r3, #2
 800dee2:	d14c      	bne.n	800df7e <_DrawBitmap+0x21e>
 800dee4:	46a0      	mov	r8, r4
 800dee6:	9f04      	ldr	r7, [sp, #16]
 800dee8:	e01d      	b.n	800df26 <_DrawBitmap+0x1c6>
 800deea:	f81a 2003 	ldrb.w	r2, [sl, r3]
 800deee:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800def0:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 800def4:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 800def8:	3301      	adds	r3, #1
 800defa:	455b      	cmp	r3, fp
 800defc:	d1f5      	bne.n	800deea <_DrawBitmap+0x18a>
 800defe:	e03e      	b.n	800df7e <_DrawBitmap+0x21e>
 800df00:	9921      	ldr	r1, [sp, #132]	; 0x84
 800df02:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800df06:	f828 3c02 	strh.w	r3, [r8, #-2]
 800df0a:	b12d      	cbz	r5, 800df18 <_DrawBitmap+0x1b8>
 800df0c:	68ab      	ldr	r3, [r5, #8]
 800df0e:	4628      	mov	r0, r5
 800df10:	681b      	ldr	r3, [r3, #0]
 800df12:	4639      	mov	r1, r7
 800df14:	4632      	mov	r2, r6
 800df16:	4798      	blx	r3
 800df18:	9b04      	ldr	r3, [sp, #16]
 800df1a:	3701      	adds	r7, #1
 800df1c:	445b      	add	r3, fp
 800df1e:	42bb      	cmp	r3, r7
 800df20:	f108 0802 	add.w	r8, r8, #2
 800df24:	d02b      	beq.n	800df7e <_DrawBitmap+0x21e>
 800df26:	9804      	ldr	r0, [sp, #16]
 800df28:	ebc0 030a 	rsb	r3, r0, sl
 800df2c:	5ddb      	ldrb	r3, [r3, r7]
 800df2e:	2b00      	cmp	r3, #0
 800df30:	d0f2      	beq.n	800df18 <_DrawBitmap+0x1b8>
 800df32:	e7e5      	b.n	800df00 <_DrawBitmap+0x1a0>
 800df34:	f013 0303 	ands.w	r3, r3, #3
 800df38:	d004      	beq.n	800df44 <_DrawBitmap+0x1e4>
 800df3a:	2b02      	cmp	r3, #2
 800df3c:	d11f      	bne.n	800df7e <_DrawBitmap+0x21e>
 800df3e:	46a0      	mov	r8, r4
 800df40:	9f04      	ldr	r7, [sp, #16]
 800df42:	e015      	b.n	800df70 <_DrawBitmap+0x210>
 800df44:	4b15      	ldr	r3, [pc, #84]	; (800df9c <_DrawBitmap+0x23c>)
 800df46:	4651      	mov	r1, sl
 800df48:	681b      	ldr	r3, [r3, #0]
 800df4a:	465a      	mov	r2, fp
 800df4c:	4798      	blx	r3
 800df4e:	e016      	b.n	800df7e <_DrawBitmap+0x21e>
 800df50:	f828 3c02 	strh.w	r3, [r8, #-2]
 800df54:	b12d      	cbz	r5, 800df62 <_DrawBitmap+0x202>
 800df56:	68ab      	ldr	r3, [r5, #8]
 800df58:	4628      	mov	r0, r5
 800df5a:	681b      	ldr	r3, [r3, #0]
 800df5c:	4639      	mov	r1, r7
 800df5e:	4632      	mov	r2, r6
 800df60:	4798      	blx	r3
 800df62:	9b04      	ldr	r3, [sp, #16]
 800df64:	3701      	adds	r7, #1
 800df66:	445b      	add	r3, fp
 800df68:	42bb      	cmp	r3, r7
 800df6a:	f108 0802 	add.w	r8, r8, #2
 800df6e:	d006      	beq.n	800df7e <_DrawBitmap+0x21e>
 800df70:	9a04      	ldr	r2, [sp, #16]
 800df72:	ebc2 030a 	rsb	r3, r2, sl
 800df76:	5ddb      	ldrb	r3, [r3, r7]
 800df78:	2b00      	cmp	r3, #0
 800df7a:	d0f2      	beq.n	800df62 <_DrawBitmap+0x202>
 800df7c:	e7e8      	b.n	800df50 <_DrawBitmap+0x1f0>
 800df7e:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800df80:	44ba      	add	sl, r7
 800df82:	9f08      	ldr	r7, [sp, #32]
 800df84:	3601      	adds	r6, #1
 800df86:	443c      	add	r4, r7
 800df88:	e79a      	b.n	800dec0 <_DrawBitmap+0x160>
 800df8a:	2d00      	cmp	r5, #0
 800df8c:	f040 8275 	bne.w	800e47a <_DrawBitmap+0x71a>
 800df90:	e276      	b.n	800e480 <_DrawBitmap+0x720>
 800df92:	bf00      	nop
 800df94:	200000b8 	.word	0x200000b8
 800df98:	20002c40 	.word	0x20002c40
 800df9c:	200000a8 	.word	0x200000a8
 800dfa0:	9e21      	ldr	r6, [sp, #132]	; 0x84
 800dfa2:	4bab      	ldr	r3, [pc, #684]	; (800e250 <_DrawBitmap+0x4f0>)
 800dfa4:	9f20      	ldr	r7, [sp, #128]	; 0x80
 800dfa6:	9409      	str	r4, [sp, #36]	; 0x24
 800dfa8:	2e00      	cmp	r6, #0
 800dfaa:	bf08      	it	eq
 800dfac:	461e      	moveq	r6, r3
 800dfae:	9621      	str	r6, [sp, #132]	; 0x84
 800dfb0:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800dfb2:	0076      	lsls	r6, r6, #1
 800dfb4:	960e      	str	r6, [sp, #56]	; 0x38
 800dfb6:	00bf      	lsls	r7, r7, #2
 800dfb8:	9e07      	ldr	r6, [sp, #28]
 800dfba:	970f      	str	r7, [sp, #60]	; 0x3c
 800dfbc:	9605      	str	r6, [sp, #20]
 800dfbe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dfc0:	9e05      	ldr	r6, [sp, #20]
 800dfc2:	9f07      	ldr	r7, [sp, #28]
 800dfc4:	1e9c      	subs	r4, r3, #2
 800dfc6:	1bf3      	subs	r3, r6, r7
 800dfc8:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 800dfca:	42b3      	cmp	r3, r6
 800dfcc:	f280 8253 	bge.w	800e476 <_DrawBitmap+0x716>
 800dfd0:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800dfd2:	2f02      	cmp	r7, #2
 800dfd4:	f000 80d9 	beq.w	800e18a <_DrawBitmap+0x42a>
 800dfd8:	2f04      	cmp	r7, #4
 800dfda:	f000 8178 	beq.w	800e2ce <_DrawBitmap+0x56e>
 800dfde:	2f01      	cmp	r7, #1
 800dfe0:	f040 823f 	bne.w	800e462 <_DrawBitmap+0x702>
 800dfe4:	f8df 9270 	ldr.w	r9, [pc, #624]	; 800e258 <_DrawBitmap+0x4f8>
 800dfe8:	f8d9 3000 	ldr.w	r3, [r9]
 800dfec:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800dfee:	f7fd fa6f 	bl	800b4d0 <GUI_ALLOC_LockH>
 800dff2:	f89a 3000 	ldrb.w	r3, [sl]
 800dff6:	4a97      	ldr	r2, [pc, #604]	; (800e254 <_DrawBitmap+0x4f4>)
 800dff8:	9010      	str	r0, [sp, #64]	; 0x40
 800dffa:	5cd5      	ldrb	r5, [r2, r3]
 800dffc:	f8d9 3000 	ldr.w	r3, [r9]
 800e000:	9820      	ldr	r0, [sp, #128]	; 0x80
 800e002:	7c1b      	ldrb	r3, [r3, #16]
 800e004:	9f11      	ldr	r7, [sp, #68]	; 0x44
 800e006:	f003 0303 	and.w	r3, r3, #3
 800e00a:	2b02      	cmp	r3, #2
 800e00c:	465e      	mov	r6, fp
 800e00e:	f1c0 0808 	rsb	r8, r0, #8
 800e012:	fa45 f500 	asr.w	r5, r5, r0
 800e016:	d022      	beq.n	800e05e <_DrawBitmap+0x2fe>
 800e018:	2b03      	cmp	r3, #3
 800e01a:	d062      	beq.n	800e0e2 <_DrawBitmap+0x382>
 800e01c:	2b01      	cmp	r3, #1
 800e01e:	d060      	beq.n	800e0e2 <_DrawBitmap+0x382>
 800e020:	4652      	mov	r2, sl
 800e022:	4546      	cmp	r6, r8
 800e024:	bf38      	it	cc
 800e026:	46b0      	movcc	r8, r6
 800e028:	ebc8 0606 	rsb	r6, r8, r6
 800e02c:	4643      	mov	r3, r8
 800e02e:	4621      	mov	r1, r4
 800e030:	f005 0001 	and.w	r0, r5, #1
 800e034:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e036:	3b01      	subs	r3, #1
 800e038:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 800e03c:	f821 0b02 	strh.w	r0, [r1], #2
 800e040:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800e044:	d1f4      	bne.n	800e030 <_DrawBitmap+0x2d0>
 800e046:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e04a:	2e00      	cmp	r6, #0
 800e04c:	f000 8099 	beq.w	800e182 <_DrawBitmap+0x422>
 800e050:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800e054:	497f      	ldr	r1, [pc, #508]	; (800e254 <_DrawBitmap+0x4f4>)
 800e056:	f04f 0808 	mov.w	r8, #8
 800e05a:	5ccd      	ldrb	r5, [r1, r3]
 800e05c:	e7e1      	b.n	800e022 <_DrawBitmap+0x2c2>
 800e05e:	9821      	ldr	r0, [sp, #132]	; 0x84
 800e060:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800e064:	f8b0 c004 	ldrh.w	ip, [r0, #4]
 800e068:	f8cd a018 	str.w	sl, [sp, #24]
 800e06c:	4546      	cmp	r6, r8
 800e06e:	bf38      	it	cc
 800e070:	46b0      	movcc	r8, r6
 800e072:	ebc8 0606 	rsb	r6, r8, r6
 800e076:	b32f      	cbz	r7, 800e0c4 <_DrawBitmap+0x364>
 800e078:	b91d      	cbnz	r5, 800e082 <_DrawBitmap+0x322>
 800e07a:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e07e:	44c1      	add	r9, r8
 800e080:	e024      	b.n	800e0cc <_DrawBitmap+0x36c>
 800e082:	07ea      	lsls	r2, r5, #31
 800e084:	d50b      	bpl.n	800e09e <_DrawBitmap+0x33e>
 800e086:	68bb      	ldr	r3, [r7, #8]
 800e088:	9a05      	ldr	r2, [sp, #20]
 800e08a:	681b      	ldr	r3, [r3, #0]
 800e08c:	f8cd c008 	str.w	ip, [sp, #8]
 800e090:	4638      	mov	r0, r7
 800e092:	4649      	mov	r1, r9
 800e094:	4798      	blx	r3
 800e096:	f8dd c008 	ldr.w	ip, [sp, #8]
 800e09a:	f8a4 c000 	strh.w	ip, [r4]
 800e09e:	f1b8 0801 	subs.w	r8, r8, #1
 800e0a2:	f109 0901 	add.w	r9, r9, #1
 800e0a6:	f104 0402 	add.w	r4, r4, #2
 800e0aa:	d00f      	beq.n	800e0cc <_DrawBitmap+0x36c>
 800e0ac:	086d      	lsrs	r5, r5, #1
 800e0ae:	e7e3      	b.n	800e078 <_DrawBitmap+0x318>
 800e0b0:	07eb      	lsls	r3, r5, #31
 800e0b2:	bf48      	it	mi
 800e0b4:	f8a4 c000 	strhmi.w	ip, [r4]
 800e0b8:	f1b8 0801 	subs.w	r8, r8, #1
 800e0bc:	f104 0402 	add.w	r4, r4, #2
 800e0c0:	d004      	beq.n	800e0cc <_DrawBitmap+0x36c>
 800e0c2:	086d      	lsrs	r5, r5, #1
 800e0c4:	2d00      	cmp	r5, #0
 800e0c6:	d1f3      	bne.n	800e0b0 <_DrawBitmap+0x350>
 800e0c8:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e0cc:	2e00      	cmp	r6, #0
 800e0ce:	d058      	beq.n	800e182 <_DrawBitmap+0x422>
 800e0d0:	9906      	ldr	r1, [sp, #24]
 800e0d2:	4a60      	ldr	r2, [pc, #384]	; (800e254 <_DrawBitmap+0x4f4>)
 800e0d4:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800e0d8:	9106      	str	r1, [sp, #24]
 800e0da:	5cd5      	ldrb	r5, [r2, r3]
 800e0dc:	f04f 0808 	mov.w	r8, #8
 800e0e0:	e7c4      	b.n	800e06c <_DrawBitmap+0x30c>
 800e0e2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e0e4:	6913      	ldr	r3, [r2, #16]
 800e0e6:	689b      	ldr	r3, [r3, #8]
 800e0e8:	4798      	blx	r3
 800e0ea:	9b04      	ldr	r3, [sp, #16]
 800e0ec:	930b      	str	r3, [sp, #44]	; 0x2c
 800e0ee:	b280      	uxth	r0, r0
 800e0f0:	900a      	str	r0, [sp, #40]	; 0x28
 800e0f2:	f10a 0901 	add.w	r9, sl, #1
 800e0f6:	4546      	cmp	r6, r8
 800e0f8:	bf38      	it	cc
 800e0fa:	46b0      	movcc	r8, r6
 800e0fc:	ebc8 0606 	rsb	r6, r8, r6
 800e100:	1ca3      	adds	r3, r4, #2
 800e102:	b31f      	cbz	r7, 800e14c <_DrawBitmap+0x3ec>
 800e104:	f8cd 8018 	str.w	r8, [sp, #24]
 800e108:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800e10a:	9a06      	ldr	r2, [sp, #24]
 800e10c:	4440      	add	r0, r8
 800e10e:	900c      	str	r0, [sp, #48]	; 0x30
 800e110:	1a81      	subs	r1, r0, r2
 800e112:	07e8      	lsls	r0, r5, #31
 800e114:	d50d      	bpl.n	800e132 <_DrawBitmap+0x3d2>
 800e116:	68ba      	ldr	r2, [r7, #8]
 800e118:	4638      	mov	r0, r7
 800e11a:	f8d2 c000 	ldr.w	ip, [r2]
 800e11e:	9a05      	ldr	r2, [sp, #20]
 800e120:	9302      	str	r3, [sp, #8]
 800e122:	47e0      	blx	ip
 800e124:	9b02      	ldr	r3, [sp, #8]
 800e126:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e128:	f833 2c02 	ldrh.w	r2, [r3, #-2]
 800e12c:	4042      	eors	r2, r0
 800e12e:	f823 2c02 	strh.w	r2, [r3, #-2]
 800e132:	9906      	ldr	r1, [sp, #24]
 800e134:	3901      	subs	r1, #1
 800e136:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800e13a:	f103 0302 	add.w	r3, r3, #2
 800e13e:	9106      	str	r1, [sp, #24]
 800e140:	d1e2      	bne.n	800e108 <_DrawBitmap+0x3a8>
 800e142:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e144:	930b      	str	r3, [sp, #44]	; 0x2c
 800e146:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e14a:	e010      	b.n	800e16e <_DrawBitmap+0x40e>
 800e14c:	4642      	mov	r2, r8
 800e14e:	07e9      	lsls	r1, r5, #31
 800e150:	d505      	bpl.n	800e15e <_DrawBitmap+0x3fe>
 800e152:	f833 1c02 	ldrh.w	r1, [r3, #-2]
 800e156:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e158:	4041      	eors	r1, r0
 800e15a:	f823 1c02 	strh.w	r1, [r3, #-2]
 800e15e:	3a01      	subs	r2, #1
 800e160:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800e164:	f103 0302 	add.w	r3, r3, #2
 800e168:	d1f1      	bne.n	800e14e <_DrawBitmap+0x3ee>
 800e16a:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e16e:	b146      	cbz	r6, 800e182 <_DrawBitmap+0x422>
 800e170:	f899 3000 	ldrb.w	r3, [r9]
 800e174:	4a37      	ldr	r2, [pc, #220]	; (800e254 <_DrawBitmap+0x4f4>)
 800e176:	f109 0901 	add.w	r9, r9, #1
 800e17a:	5cd5      	ldrb	r5, [r2, r3]
 800e17c:	f04f 0808 	mov.w	r8, #8
 800e180:	e7b9      	b.n	800e0f6 <_DrawBitmap+0x396>
 800e182:	a810      	add	r0, sp, #64	; 0x40
 800e184:	f7fd f9b2 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800e188:	e16b      	b.n	800e462 <_DrawBitmap+0x702>
 800e18a:	4b33      	ldr	r3, [pc, #204]	; (800e258 <_DrawBitmap+0x4f8>)
 800e18c:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e18e:	681b      	ldr	r3, [r3, #0]
 800e190:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800e192:	7c1b      	ldrb	r3, [r3, #16]
 800e194:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
 800e198:	f1c6 0504 	rsb	r5, r6, #4
 800e19c:	f89a 6000 	ldrb.w	r6, [sl]
 800e1a0:	f003 0303 	and.w	r3, r3, #3
 800e1a4:	40be      	lsls	r6, r7
 800e1a6:	2b01      	cmp	r3, #1
 800e1a8:	b2ed      	uxtb	r5, r5
 800e1aa:	b2f6      	uxtb	r6, r6
 800e1ac:	d06a      	beq.n	800e284 <_DrawBitmap+0x524>
 800e1ae:	d308      	bcc.n	800e1c2 <_DrawBitmap+0x462>
 800e1b0:	2b02      	cmp	r3, #2
 800e1b2:	f040 8156 	bne.w	800e462 <_DrawBitmap+0x702>
 800e1b6:	f8cd a018 	str.w	sl, [sp, #24]
 800e1ba:	465f      	mov	r7, fp
 800e1bc:	f8dd c010 	ldr.w	ip, [sp, #16]
 800e1c0:	e03e      	b.n	800e240 <_DrawBitmap+0x4e0>
 800e1c2:	4652      	mov	r2, sl
 800e1c4:	465b      	mov	r3, fp
 800e1c6:	429d      	cmp	r5, r3
 800e1c8:	bfc8      	it	gt
 800e1ca:	b2dd      	uxtbgt	r5, r3
 800e1cc:	1b5b      	subs	r3, r3, r5
 800e1ce:	4629      	mov	r1, r5
 800e1d0:	4620      	mov	r0, r4
 800e1d2:	ea4f 1c96 	mov.w	ip, r6, lsr #6
 800e1d6:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e1d8:	3901      	subs	r1, #1
 800e1da:	f857 c02c 	ldr.w	ip, [r7, ip, lsl #2]
 800e1de:	f820 cb02 	strh.w	ip, [r0], #2
 800e1e2:	00b6      	lsls	r6, r6, #2
 800e1e4:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800e1e8:	b2f6      	uxtb	r6, r6
 800e1ea:	d1f2      	bne.n	800e1d2 <_DrawBitmap+0x472>
 800e1ec:	3d01      	subs	r5, #1
 800e1ee:	b2ed      	uxtb	r5, r5
 800e1f0:	3501      	adds	r5, #1
 800e1f2:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800e1f6:	2b00      	cmp	r3, #0
 800e1f8:	f000 8133 	beq.w	800e462 <_DrawBitmap+0x702>
 800e1fc:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800e200:	2504      	movs	r5, #4
 800e202:	e7e0      	b.n	800e1c6 <_DrawBitmap+0x466>
 800e204:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800e208:	eb08 010c 	add.w	r1, r8, ip
 800e20c:	d126      	bne.n	800e25c <_DrawBitmap+0x4fc>
 800e20e:	f108 0801 	add.w	r8, r8, #1
 800e212:	fa5f f388 	uxtb.w	r3, r8
 800e216:	00b6      	lsls	r6, r6, #2
 800e218:	429d      	cmp	r5, r3
 800e21a:	b2f6      	uxtb	r6, r6
 800e21c:	d1f2      	bne.n	800e204 <_DrawBitmap+0x4a4>
 800e21e:	3d01      	subs	r5, #1
 800e220:	b2ed      	uxtb	r5, r5
 800e222:	1c6b      	adds	r3, r5, #1
 800e224:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e228:	f10c 0301 	add.w	r3, ip, #1
 800e22c:	eb03 0c05 	add.w	ip, r3, r5
 800e230:	2f00      	cmp	r7, #0
 800e232:	f000 8116 	beq.w	800e462 <_DrawBitmap+0x702>
 800e236:	9b06      	ldr	r3, [sp, #24]
 800e238:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800e23c:	9306      	str	r3, [sp, #24]
 800e23e:	2504      	movs	r5, #4
 800e240:	42bd      	cmp	r5, r7
 800e242:	bfc8      	it	gt
 800e244:	b2fd      	uxtbgt	r5, r7
 800e246:	1b7f      	subs	r7, r7, r5
 800e248:	f04f 0800 	mov.w	r8, #0
 800e24c:	e7da      	b.n	800e204 <_DrawBitmap+0x4a4>
 800e24e:	bf00      	nop
 800e250:	08012120 	.word	0x08012120
 800e254:	08011f3c 	.word	0x08011f3c
 800e258:	200000b8 	.word	0x200000b8
 800e25c:	09b3      	lsrs	r3, r6, #6
 800e25e:	9821      	ldr	r0, [sp, #132]	; 0x84
 800e260:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800e264:	f824 3018 	strh.w	r3, [r4, r8, lsl #1]
 800e268:	f1b9 0f00 	cmp.w	r9, #0
 800e26c:	d0cf      	beq.n	800e20e <_DrawBitmap+0x4ae>
 800e26e:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800e272:	9a05      	ldr	r2, [sp, #20]
 800e274:	681b      	ldr	r3, [r3, #0]
 800e276:	f8cd c008 	str.w	ip, [sp, #8]
 800e27a:	4648      	mov	r0, r9
 800e27c:	4798      	blx	r3
 800e27e:	f8dd c008 	ldr.w	ip, [sp, #8]
 800e282:	e7c4      	b.n	800e20e <_DrawBitmap+0x4ae>
 800e284:	4651      	mov	r1, sl
 800e286:	465b      	mov	r3, fp
 800e288:	429d      	cmp	r5, r3
 800e28a:	bfc8      	it	gt
 800e28c:	b2dd      	uxtbgt	r5, r3
 800e28e:	1b5b      	subs	r3, r3, r5
 800e290:	1ca2      	adds	r2, r4, #2
 800e292:	4628      	mov	r0, r5
 800e294:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800e298:	d005      	beq.n	800e2a6 <_DrawBitmap+0x546>
 800e29a:	f832 7c02 	ldrh.w	r7, [r2, #-2]
 800e29e:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 800e2a2:	f822 7c02 	strh.w	r7, [r2, #-2]
 800e2a6:	3801      	subs	r0, #1
 800e2a8:	00b6      	lsls	r6, r6, #2
 800e2aa:	f010 00ff 	ands.w	r0, r0, #255	; 0xff
 800e2ae:	b2f6      	uxtb	r6, r6
 800e2b0:	f102 0202 	add.w	r2, r2, #2
 800e2b4:	d1ee      	bne.n	800e294 <_DrawBitmap+0x534>
 800e2b6:	3d01      	subs	r5, #1
 800e2b8:	b2ed      	uxtb	r5, r5
 800e2ba:	3501      	adds	r5, #1
 800e2bc:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800e2c0:	2b00      	cmp	r3, #0
 800e2c2:	f000 80ce 	beq.w	800e462 <_DrawBitmap+0x702>
 800e2c6:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800e2ca:	2504      	movs	r5, #4
 800e2cc:	e7dc      	b.n	800e288 <_DrawBitmap+0x528>
 800e2ce:	4a6e      	ldr	r2, [pc, #440]	; (800e488 <_DrawBitmap+0x728>)
 800e2d0:	f89a 3000 	ldrb.w	r3, [sl]
 800e2d4:	6812      	ldr	r2, [r2, #0]
 800e2d6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800e2d8:	7c12      	ldrb	r2, [r2, #16]
 800e2da:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800e2dc:	f002 0203 	and.w	r2, r2, #3
 800e2e0:	40bb      	lsls	r3, r7
 800e2e2:	2a01      	cmp	r2, #1
 800e2e4:	b2dd      	uxtb	r5, r3
 800e2e6:	f000 8095 	beq.w	800e414 <_DrawBitmap+0x6b4>
 800e2ea:	d302      	bcc.n	800e2f2 <_DrawBitmap+0x592>
 800e2ec:	2a02      	cmp	r2, #2
 800e2ee:	d036      	beq.n	800e35e <_DrawBitmap+0x5fe>
 800e2f0:	e0b7      	b.n	800e462 <_DrawBitmap+0x702>
 800e2f2:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e2f4:	b166      	cbz	r6, 800e310 <_DrawBitmap+0x5b0>
 800e2f6:	092d      	lsrs	r5, r5, #4
 800e2f8:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e2fa:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 800e2fe:	8023      	strh	r3, [r4, #0]
 800e300:	f10a 0201 	add.w	r2, sl, #1
 800e304:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800e306:	f89a 5001 	ldrb.w	r5, [sl, #1]
 800e30a:	f10b 33ff 	add.w	r3, fp, #4294967295
 800e30e:	e001      	b.n	800e314 <_DrawBitmap+0x5b4>
 800e310:	465b      	mov	r3, fp
 800e312:	4652      	mov	r2, sl
 800e314:	2b01      	cmp	r3, #1
 800e316:	dd19      	ble.n	800e34c <_DrawBitmap+0x5ec>
 800e318:	1058      	asrs	r0, r3, #1
 800e31a:	1d21      	adds	r1, r4, #4
 800e31c:	f003 0301 	and.w	r3, r3, #1
 800e320:	eb02 0c00 	add.w	ip, r2, r0
 800e324:	092f      	lsrs	r7, r5, #4
 800e326:	9e21      	ldr	r6, [sp, #132]	; 0x84
 800e328:	f005 050f 	and.w	r5, r5, #15
 800e32c:	f856 7027 	ldr.w	r7, [r6, r7, lsl #2]
 800e330:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 800e334:	f821 7c04 	strh.w	r7, [r1, #-4]
 800e338:	f821 5c02 	strh.w	r5, [r1, #-2]
 800e33c:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 800e340:	4562      	cmp	r2, ip
 800e342:	f101 0104 	add.w	r1, r1, #4
 800e346:	d1ed      	bne.n	800e324 <_DrawBitmap+0x5c4>
 800e348:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 800e34c:	2b00      	cmp	r3, #0
 800e34e:	f000 8088 	beq.w	800e462 <_DrawBitmap+0x702>
 800e352:	092d      	lsrs	r5, r5, #4
 800e354:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e356:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 800e35a:	8023      	strh	r3, [r4, #0]
 800e35c:	e081      	b.n	800e462 <_DrawBitmap+0x702>
 800e35e:	9f20      	ldr	r7, [sp, #128]	; 0x80
 800e360:	b1c7      	cbz	r7, 800e394 <_DrawBitmap+0x634>
 800e362:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 800e366:	d00b      	beq.n	800e380 <_DrawBitmap+0x620>
 800e368:	092d      	lsrs	r5, r5, #4
 800e36a:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e36c:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 800e370:	8023      	strh	r3, [r4, #0]
 800e372:	b12e      	cbz	r6, 800e380 <_DrawBitmap+0x620>
 800e374:	68b3      	ldr	r3, [r6, #8]
 800e376:	9904      	ldr	r1, [sp, #16]
 800e378:	681b      	ldr	r3, [r3, #0]
 800e37a:	9a05      	ldr	r2, [sp, #20]
 800e37c:	4630      	mov	r0, r6
 800e37e:	4798      	blx	r3
 800e380:	9804      	ldr	r0, [sp, #16]
 800e382:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800e384:	f89a 5001 	ldrb.w	r5, [sl, #1]
 800e388:	1c47      	adds	r7, r0, #1
 800e38a:	f10b 39ff 	add.w	r9, fp, #4294967295
 800e38e:	f10a 0801 	add.w	r8, sl, #1
 800e392:	e00f      	b.n	800e3b4 <_DrawBitmap+0x654>
 800e394:	46d9      	mov	r9, fp
 800e396:	46d0      	mov	r8, sl
 800e398:	9f04      	ldr	r7, [sp, #16]
 800e39a:	e00b      	b.n	800e3b4 <_DrawBitmap+0x654>
 800e39c:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 800e3a0:	d10c      	bne.n	800e3bc <_DrawBitmap+0x65c>
 800e3a2:	f015 050f 	ands.w	r5, r5, #15
 800e3a6:	d117      	bne.n	800e3d8 <_DrawBitmap+0x678>
 800e3a8:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 800e3ac:	3404      	adds	r4, #4
 800e3ae:	3702      	adds	r7, #2
 800e3b0:	f1a9 0902 	sub.w	r9, r9, #2
 800e3b4:	f1b9 0f01 	cmp.w	r9, #1
 800e3b8:	dcf0      	bgt.n	800e39c <_DrawBitmap+0x63c>
 800e3ba:	e01a      	b.n	800e3f2 <_DrawBitmap+0x692>
 800e3bc:	092b      	lsrs	r3, r5, #4
 800e3be:	9921      	ldr	r1, [sp, #132]	; 0x84
 800e3c0:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800e3c4:	8023      	strh	r3, [r4, #0]
 800e3c6:	2e00      	cmp	r6, #0
 800e3c8:	d0eb      	beq.n	800e3a2 <_DrawBitmap+0x642>
 800e3ca:	68b3      	ldr	r3, [r6, #8]
 800e3cc:	9a05      	ldr	r2, [sp, #20]
 800e3ce:	681b      	ldr	r3, [r3, #0]
 800e3d0:	4630      	mov	r0, r6
 800e3d2:	4639      	mov	r1, r7
 800e3d4:	4798      	blx	r3
 800e3d6:	e7e4      	b.n	800e3a2 <_DrawBitmap+0x642>
 800e3d8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e3da:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
 800e3de:	8063      	strh	r3, [r4, #2]
 800e3e0:	2e00      	cmp	r6, #0
 800e3e2:	d0e1      	beq.n	800e3a8 <_DrawBitmap+0x648>
 800e3e4:	68b3      	ldr	r3, [r6, #8]
 800e3e6:	9a05      	ldr	r2, [sp, #20]
 800e3e8:	681b      	ldr	r3, [r3, #0]
 800e3ea:	4630      	mov	r0, r6
 800e3ec:	1c79      	adds	r1, r7, #1
 800e3ee:	4798      	blx	r3
 800e3f0:	e7da      	b.n	800e3a8 <_DrawBitmap+0x648>
 800e3f2:	f1b9 0f00 	cmp.w	r9, #0
 800e3f6:	d034      	beq.n	800e462 <_DrawBitmap+0x702>
 800e3f8:	092d      	lsrs	r5, r5, #4
 800e3fa:	d032      	beq.n	800e462 <_DrawBitmap+0x702>
 800e3fc:	9821      	ldr	r0, [sp, #132]	; 0x84
 800e3fe:	f850 3025 	ldr.w	r3, [r0, r5, lsl #2]
 800e402:	8023      	strh	r3, [r4, #0]
 800e404:	b36e      	cbz	r6, 800e462 <_DrawBitmap+0x702>
 800e406:	68b3      	ldr	r3, [r6, #8]
 800e408:	9a05      	ldr	r2, [sp, #20]
 800e40a:	681b      	ldr	r3, [r3, #0]
 800e40c:	4630      	mov	r0, r6
 800e40e:	4639      	mov	r1, r7
 800e410:	4798      	blx	r3
 800e412:	e026      	b.n	800e462 <_DrawBitmap+0x702>
 800e414:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e416:	f1c6 0302 	rsb	r3, r6, #2
 800e41a:	b2db      	uxtb	r3, r3
 800e41c:	4650      	mov	r0, sl
 800e41e:	465a      	mov	r2, fp
 800e420:	4293      	cmp	r3, r2
 800e422:	bfc8      	it	gt
 800e424:	b2d3      	uxtbgt	r3, r2
 800e426:	1ad2      	subs	r2, r2, r3
 800e428:	1ca1      	adds	r1, r4, #2
 800e42a:	461e      	mov	r6, r3
 800e42c:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 800e430:	d005      	beq.n	800e43e <_DrawBitmap+0x6de>
 800e432:	f831 7c02 	ldrh.w	r7, [r1, #-2]
 800e436:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 800e43a:	f821 7c02 	strh.w	r7, [r1, #-2]
 800e43e:	3e01      	subs	r6, #1
 800e440:	012d      	lsls	r5, r5, #4
 800e442:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
 800e446:	b2ed      	uxtb	r5, r5
 800e448:	f101 0102 	add.w	r1, r1, #2
 800e44c:	d1ee      	bne.n	800e42c <_DrawBitmap+0x6cc>
 800e44e:	3b01      	subs	r3, #1
 800e450:	b2db      	uxtb	r3, r3
 800e452:	3301      	adds	r3, #1
 800e454:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e458:	b11a      	cbz	r2, 800e462 <_DrawBitmap+0x702>
 800e45a:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 800e45e:	2302      	movs	r3, #2
 800e460:	e7de      	b.n	800e420 <_DrawBitmap+0x6c0>
 800e462:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e464:	9b05      	ldr	r3, [sp, #20]
 800e466:	9e08      	ldr	r6, [sp, #32]
 800e468:	44ba      	add	sl, r7
 800e46a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800e46c:	3301      	adds	r3, #1
 800e46e:	4437      	add	r7, r6
 800e470:	9305      	str	r3, [sp, #20]
 800e472:	9709      	str	r7, [sp, #36]	; 0x24
 800e474:	e5a3      	b.n	800dfbe <_DrawBitmap+0x25e>
 800e476:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e478:	b113      	cbz	r3, 800e480 <_DrawBitmap+0x720>
 800e47a:	a811      	add	r0, sp, #68	; 0x44
 800e47c:	f7fd f836 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800e480:	b013      	add	sp, #76	; 0x4c
 800e482:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e486:	bf00      	nop
 800e488:	200000b8 	.word	0x200000b8

0800e48c <_GetDevProp>:
 800e48c:	2908      	cmp	r1, #8
 800e48e:	b508      	push	{r3, lr}
 800e490:	d008      	beq.n	800e4a4 <_GetDevProp+0x18>
 800e492:	6800      	ldr	r0, [r0, #0]
 800e494:	b118      	cbz	r0, 800e49e <_GetDevProp+0x12>
 800e496:	68c3      	ldr	r3, [r0, #12]
 800e498:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e49a:	4798      	blx	r3
 800e49c:	bd08      	pop	{r3, pc}
 800e49e:	f04f 30ff 	mov.w	r0, #4294967295
 800e4a2:	bd08      	pop	{r3, pc}
 800e4a4:	2010      	movs	r0, #16
 800e4a6:	bd08      	pop	{r3, pc}

0800e4a8 <LCD_SelectLCD>:
 800e4a8:	b510      	push	{r4, lr}
 800e4aa:	4b0d      	ldr	r3, [pc, #52]	; (800e4e0 <LCD_SelectLCD+0x38>)
 800e4ac:	681a      	ldr	r2, [r3, #0]
 800e4ae:	7c51      	ldrb	r1, [r2, #17]
 800e4b0:	4a0c      	ldr	r2, [pc, #48]	; (800e4e4 <LCD_SelectLCD+0x3c>)
 800e4b2:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 800e4b6:	461c      	mov	r4, r3
 800e4b8:	b140      	cbz	r0, 800e4cc <LCD_SelectLCD+0x24>
 800e4ba:	68c3      	ldr	r3, [r0, #12]
 800e4bc:	b113      	cbz	r3, 800e4c4 <LCD_SelectLCD+0x1c>
 800e4be:	681b      	ldr	r3, [r3, #0]
 800e4c0:	2b04      	cmp	r3, #4
 800e4c2:	d001      	beq.n	800e4c8 <LCD_SelectLCD+0x20>
 800e4c4:	6800      	ldr	r0, [r0, #0]
 800e4c6:	e7f7      	b.n	800e4b8 <LCD_SelectLCD+0x10>
 800e4c8:	f7fc f87c 	bl	800a5c4 <GUI_DEVICE_Unlink>
 800e4cc:	6823      	ldr	r3, [r4, #0]
 800e4ce:	2200      	movs	r2, #0
 800e4d0:	661a      	str	r2, [r3, #96]	; 0x60
 800e4d2:	f103 0208 	add.w	r2, r3, #8
 800e4d6:	615a      	str	r2, [r3, #20]
 800e4d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e4dc:	f7fa bbb8 	b.w	8008c50 <LCD_SetClipRectMax>
 800e4e0:	200000b8 	.word	0x200000b8
 800e4e4:	20002d28 	.word	0x20002d28

0800e4e8 <LCD_ReadRectEx>:
 800e4e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4ec:	b087      	sub	sp, #28
 800e4ee:	4617      	mov	r7, r2
 800e4f0:	9304      	str	r3, [sp, #16]
 800e4f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e4f4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800e4f6:	68da      	ldr	r2, [r3, #12]
 800e4f8:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800e4fa:	f8d2 8014 	ldr.w	r8, [r2, #20]
 800e4fe:	4606      	mov	r6, r0
 800e500:	460d      	mov	r5, r1
 800e502:	b973      	cbnz	r3, 800e522 <LCD_ReadRectEx+0x3a>
 800e504:	4b71      	ldr	r3, [pc, #452]	; (800e6cc <LCD_ReadRectEx+0x1e4>)
 800e506:	681b      	ldr	r3, [r3, #0]
 800e508:	7c58      	ldrb	r0, [r3, #17]
 800e50a:	f7fa f853 	bl	80085b4 <GUI_GetBitsPerPixelEx>
 800e50e:	2808      	cmp	r0, #8
 800e510:	4682      	mov	sl, r0
 800e512:	dd15      	ble.n	800e540 <LCD_ReadRectEx+0x58>
 800e514:	2810      	cmp	r0, #16
 800e516:	bfcc      	ite	gt
 800e518:	f04f 0904 	movgt.w	r9, #4
 800e51c:	f04f 0902 	movle.w	r9, #2
 800e520:	e010      	b.n	800e544 <LCD_ReadRectEx+0x5c>
 800e522:	a811      	add	r0, sp, #68	; 0x44
 800e524:	2101      	movs	r1, #1
 800e526:	4798      	blx	r3
 800e528:	4684      	mov	ip, r0
 800e52a:	2800      	cmp	r0, #0
 800e52c:	d0ea      	beq.n	800e504 <LCD_ReadRectEx+0x1c>
 800e52e:	9b04      	ldr	r3, [sp, #16]
 800e530:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e532:	e88d 0018 	stmia.w	sp, {r3, r4}
 800e536:	4631      	mov	r1, r6
 800e538:	462a      	mov	r2, r5
 800e53a:	463b      	mov	r3, r7
 800e53c:	47e0      	blx	ip
 800e53e:	e0c1      	b.n	800e6c4 <LCD_ReadRectEx+0x1dc>
 800e540:	f04f 0901 	mov.w	r9, #1
 800e544:	f04f 0b00 	mov.w	fp, #0
 800e548:	9b04      	ldr	r3, [sp, #16]
 800e54a:	429d      	cmp	r5, r3
 800e54c:	f300 80ba 	bgt.w	800e6c4 <LCD_ReadRectEx+0x1dc>
 800e550:	f1b9 0f02 	cmp.w	r9, #2
 800e554:	d009      	beq.n	800e56a <LCD_ReadRectEx+0x82>
 800e556:	f1b9 0f04 	cmp.w	r9, #4
 800e55a:	d004      	beq.n	800e566 <LCD_ReadRectEx+0x7e>
 800e55c:	f1b9 0f01 	cmp.w	r9, #1
 800e560:	f040 80ae 	bne.w	800e6c0 <LCD_ReadRectEx+0x1d8>
 800e564:	e003      	b.n	800e56e <LCD_ReadRectEx+0x86>
 800e566:	46b4      	mov	ip, r6
 800e568:	e09b      	b.n	800e6a2 <LCD_ReadRectEx+0x1ba>
 800e56a:	46b4      	mov	ip, r6
 800e56c:	e08a      	b.n	800e684 <LCD_ReadRectEx+0x19c>
 800e56e:	f10a 32ff 	add.w	r2, sl, #4294967295
 800e572:	2a07      	cmp	r2, #7
 800e574:	f200 80a4 	bhi.w	800e6c0 <LCD_ReadRectEx+0x1d8>
 800e578:	e8df f002 	tbb	[pc, r2]
 800e57c:	0606080a 	.word	0x0606080a
 800e580:	04040404 	.word	0x04040404
 800e584:	46b4      	mov	ip, r6
 800e586:	e066      	b.n	800e656 <LCD_ReadRectEx+0x16e>
 800e588:	46b4      	mov	ip, r6
 800e58a:	e047      	b.n	800e61c <LCD_ReadRectEx+0x134>
 800e58c:	46b4      	mov	ip, r6
 800e58e:	e022      	b.n	800e5d6 <LCD_ReadRectEx+0xee>
 800e590:	46b4      	mov	ip, r6
 800e592:	45bc      	cmp	ip, r7
 800e594:	f300 8094 	bgt.w	800e6c0 <LCD_ReadRectEx+0x1d8>
 800e598:	4661      	mov	r1, ip
 800e59a:	462a      	mov	r2, r5
 800e59c:	f8cd c00c 	str.w	ip, [sp, #12]
 800e5a0:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e5a2:	47c0      	blx	r8
 800e5a4:	f1cb 0207 	rsb	r2, fp, #7
 800e5a8:	fa00 f202 	lsl.w	r2, r0, r2
 800e5ac:	f64f 717f 	movw	r1, #65407	; 0xff7f
 800e5b0:	7820      	ldrb	r0, [r4, #0]
 800e5b2:	fa41 f10b 	asr.w	r1, r1, fp
 800e5b6:	4001      	ands	r1, r0
 800e5b8:	430a      	orrs	r2, r1
 800e5ba:	7022      	strb	r2, [r4, #0]
 800e5bc:	f10b 0301 	add.w	r3, fp, #1
 800e5c0:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e5c4:	f023 0207 	bic.w	r2, r3, #7
 800e5c8:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 800e5cc:	fa43 fb02 	asr.w	fp, r3, r2
 800e5d0:	f10c 0c01 	add.w	ip, ip, #1
 800e5d4:	e7dd      	b.n	800e592 <LCD_ReadRectEx+0xaa>
 800e5d6:	45bc      	cmp	ip, r7
 800e5d8:	dc72      	bgt.n	800e6c0 <LCD_ReadRectEx+0x1d8>
 800e5da:	4661      	mov	r1, ip
 800e5dc:	462a      	mov	r2, r5
 800e5de:	f8cd c00c 	str.w	ip, [sp, #12]
 800e5e2:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e5e4:	47c0      	blx	r8
 800e5e6:	ea4f 024b 	mov.w	r2, fp, lsl #1
 800e5ea:	f1c2 0106 	rsb	r1, r2, #6
 800e5ee:	fa00 f101 	lsl.w	r1, r0, r1
 800e5f2:	f64f 703f 	movw	r0, #65343	; 0xff3f
 800e5f6:	fa40 f202 	asr.w	r2, r0, r2
 800e5fa:	7820      	ldrb	r0, [r4, #0]
 800e5fc:	4002      	ands	r2, r0
 800e5fe:	4311      	orrs	r1, r2
 800e600:	7021      	strb	r1, [r4, #0]
 800e602:	f10b 0301 	add.w	r3, fp, #1
 800e606:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e60a:	f023 0203 	bic.w	r2, r3, #3
 800e60e:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 800e612:	fa43 fb02 	asr.w	fp, r3, r2
 800e616:	f10c 0c01 	add.w	ip, ip, #1
 800e61a:	e7dc      	b.n	800e5d6 <LCD_ReadRectEx+0xee>
 800e61c:	45bc      	cmp	ip, r7
 800e61e:	dc4f      	bgt.n	800e6c0 <LCD_ReadRectEx+0x1d8>
 800e620:	4661      	mov	r1, ip
 800e622:	462a      	mov	r2, r5
 800e624:	f8cd c00c 	str.w	ip, [sp, #12]
 800e628:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e62a:	47c0      	blx	r8
 800e62c:	ea4f 028b 	mov.w	r2, fp, lsl #2
 800e630:	f1c2 0104 	rsb	r1, r2, #4
 800e634:	fa00 f101 	lsl.w	r1, r0, r1
 800e638:	200f      	movs	r0, #15
 800e63a:	fa00 f202 	lsl.w	r2, r0, r2
 800e63e:	7820      	ldrb	r0, [r4, #0]
 800e640:	4002      	ands	r2, r0
 800e642:	4311      	orrs	r1, r2
 800e644:	7021      	strb	r1, [r4, #0]
 800e646:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e64a:	445c      	add	r4, fp
 800e64c:	f10c 0c01 	add.w	ip, ip, #1
 800e650:	f08b 0b01 	eor.w	fp, fp, #1
 800e654:	e7e2      	b.n	800e61c <LCD_ReadRectEx+0x134>
 800e656:	4273      	negs	r3, r6
 800e658:	1ba2      	subs	r2, r4, r6
 800e65a:	45bc      	cmp	ip, r7
 800e65c:	9305      	str	r3, [sp, #20]
 800e65e:	4462      	add	r2, ip
 800e660:	dc0e      	bgt.n	800e680 <LCD_ReadRectEx+0x198>
 800e662:	4661      	mov	r1, ip
 800e664:	462a      	mov	r2, r5
 800e666:	f8cd c00c 	str.w	ip, [sp, #12]
 800e66a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e66c:	47c0      	blx	r8
 800e66e:	9a05      	ldr	r2, [sp, #20]
 800e670:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e674:	4422      	add	r2, r4
 800e676:	f802 000c 	strb.w	r0, [r2, ip]
 800e67a:	f10c 0c01 	add.w	ip, ip, #1
 800e67e:	e7ea      	b.n	800e656 <LCD_ReadRectEx+0x16e>
 800e680:	4614      	mov	r4, r2
 800e682:	e01d      	b.n	800e6c0 <LCD_ReadRectEx+0x1d8>
 800e684:	45bc      	cmp	ip, r7
 800e686:	dc1b      	bgt.n	800e6c0 <LCD_ReadRectEx+0x1d8>
 800e688:	4661      	mov	r1, ip
 800e68a:	f8cd c00c 	str.w	ip, [sp, #12]
 800e68e:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e690:	462a      	mov	r2, r5
 800e692:	47c0      	blx	r8
 800e694:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e698:	f824 0b02 	strh.w	r0, [r4], #2
 800e69c:	f10c 0c01 	add.w	ip, ip, #1
 800e6a0:	e7f0      	b.n	800e684 <LCD_ReadRectEx+0x19c>
 800e6a2:	45bc      	cmp	ip, r7
 800e6a4:	dc0c      	bgt.n	800e6c0 <LCD_ReadRectEx+0x1d8>
 800e6a6:	4661      	mov	r1, ip
 800e6a8:	f8cd c00c 	str.w	ip, [sp, #12]
 800e6ac:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e6ae:	462a      	mov	r2, r5
 800e6b0:	47c0      	blx	r8
 800e6b2:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e6b6:	f844 0b04 	str.w	r0, [r4], #4
 800e6ba:	f10c 0c01 	add.w	ip, ip, #1
 800e6be:	e7f0      	b.n	800e6a2 <LCD_ReadRectEx+0x1ba>
 800e6c0:	3501      	adds	r5, #1
 800e6c2:	e741      	b.n	800e548 <LCD_ReadRectEx+0x60>
 800e6c4:	b007      	add	sp, #28
 800e6c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e6ca:	bf00      	nop
 800e6cc:	200000b8 	.word	0x200000b8

0800e6d0 <GUI_ReadRectEx>:
 800e6d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e6d2:	4d16      	ldr	r5, [pc, #88]	; (800e72c <GUI_ReadRectEx+0x5c>)
 800e6d4:	9e05      	ldr	r6, [sp, #20]
 800e6d6:	682d      	ldr	r5, [r5, #0]
 800e6d8:	9c06      	ldr	r4, [sp, #24]
 800e6da:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 800e6de:	42b8      	cmp	r0, r7
 800e6e0:	bfb8      	it	lt
 800e6e2:	4638      	movlt	r0, r7
 800e6e4:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 800e6e8:	42ba      	cmp	r2, r7
 800e6ea:	bfa8      	it	ge
 800e6ec:	463a      	movge	r2, r7
 800e6ee:	4282      	cmp	r2, r0
 800e6f0:	db1b      	blt.n	800e72a <GUI_ReadRectEx+0x5a>
 800e6f2:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800e6f6:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 800e6fa:	42b9      	cmp	r1, r7
 800e6fc:	bfb8      	it	lt
 800e6fe:	4639      	movlt	r1, r7
 800e700:	42ab      	cmp	r3, r5
 800e702:	bfa8      	it	ge
 800e704:	462b      	movge	r3, r5
 800e706:	428b      	cmp	r3, r1
 800e708:	db0f      	blt.n	800e72a <GUI_ReadRectEx+0x5a>
 800e70a:	68e5      	ldr	r5, [r4, #12]
 800e70c:	682d      	ldr	r5, [r5, #0]
 800e70e:	f035 0704 	bics.w	r7, r5, #4
 800e712:	d105      	bne.n	800e720 <GUI_ReadRectEx+0x50>
 800e714:	9605      	str	r6, [sp, #20]
 800e716:	9406      	str	r4, [sp, #24]
 800e718:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e71c:	f7ff bee4 	b.w	800e4e8 <LCD_ReadRectEx>
 800e720:	6825      	ldr	r5, [r4, #0]
 800e722:	2d00      	cmp	r5, #0
 800e724:	d0f6      	beq.n	800e714 <GUI_ReadRectEx+0x44>
 800e726:	462c      	mov	r4, r5
 800e728:	e7ef      	b.n	800e70a <GUI_ReadRectEx+0x3a>
 800e72a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e72c:	200000b8 	.word	0x200000b8

0800e730 <LCD_GetBkColorIndex>:
 800e730:	4b02      	ldr	r3, [pc, #8]	; (800e73c <LCD_GetBkColorIndex+0xc>)
 800e732:	681b      	ldr	r3, [r3, #0]
 800e734:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e736:	6818      	ldr	r0, [r3, #0]
 800e738:	4770      	bx	lr
 800e73a:	bf00      	nop
 800e73c:	200000b8 	.word	0x200000b8

0800e740 <LCD_GetColorIndex>:
 800e740:	4b02      	ldr	r3, [pc, #8]	; (800e74c <LCD_GetColorIndex+0xc>)
 800e742:	681b      	ldr	r3, [r3, #0]
 800e744:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e746:	6818      	ldr	r0, [r3, #0]
 800e748:	4770      	bx	lr
 800e74a:	bf00      	nop
 800e74c:	200000b8 	.word	0x200000b8

0800e750 <_OnExit>:
 800e750:	b510      	push	{r4, lr}
 800e752:	4c04      	ldr	r4, [pc, #16]	; (800e764 <_OnExit+0x14>)
 800e754:	6820      	ldr	r0, [r4, #0]
 800e756:	f7fc fea7 	bl	800b4a8 <GUI_ALLOC_FreeFixedBlock>
 800e75a:	4a03      	ldr	r2, [pc, #12]	; (800e768 <_OnExit+0x18>)
 800e75c:	2300      	movs	r3, #0
 800e75e:	6023      	str	r3, [r4, #0]
 800e760:	6013      	str	r3, [r2, #0]
 800e762:	bd10      	pop	{r4, pc}
 800e764:	20002e28 	.word	0x20002e28
 800e768:	20002c44 	.word	0x20002c44

0800e76c <LCD_InitColors>:
 800e76c:	b538      	push	{r3, r4, r5, lr}
 800e76e:	4d09      	ldr	r5, [pc, #36]	; (800e794 <LCD_InitColors+0x28>)
 800e770:	682c      	ldr	r4, [r5, #0]
 800e772:	b95c      	cbnz	r4, 800e78c <LCD_InitColors+0x20>
 800e774:	4b08      	ldr	r3, [pc, #32]	; (800e798 <LCD_InitColors+0x2c>)
 800e776:	6818      	ldr	r0, [r3, #0]
 800e778:	0080      	lsls	r0, r0, #2
 800e77a:	f7fc ff79 	bl	800b670 <GUI_ALLOC_GetFixedBlock>
 800e77e:	6028      	str	r0, [r5, #0]
 800e780:	b130      	cbz	r0, 800e790 <LCD_InitColors+0x24>
 800e782:	4806      	ldr	r0, [pc, #24]	; (800e79c <LCD_InitColors+0x30>)
 800e784:	4b06      	ldr	r3, [pc, #24]	; (800e7a0 <LCD_InitColors+0x34>)
 800e786:	6003      	str	r3, [r0, #0]
 800e788:	f7fc f83e 	bl	800a808 <GUI__RegisterExit>
 800e78c:	2000      	movs	r0, #0
 800e78e:	bd38      	pop	{r3, r4, r5, pc}
 800e790:	2001      	movs	r0, #1
 800e792:	bd38      	pop	{r3, r4, r5, pc}
 800e794:	20002e28 	.word	0x20002e28
 800e798:	20000184 	.word	0x20000184
 800e79c:	20002c48 	.word	0x20002c48
 800e7a0:	0800e751 	.word	0x0800e751

0800e7a4 <LCD_InitLUT>:
 800e7a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e7a8:	f001 fa5b 	bl	800fc62 <LCD_GetNumLayers>
 800e7ac:	2400      	movs	r4, #0
 800e7ae:	4680      	mov	r8, r0
 800e7b0:	4544      	cmp	r4, r8
 800e7b2:	da2c      	bge.n	800e80e <LCD_InitLUT+0x6a>
 800e7b4:	4620      	mov	r0, r4
 800e7b6:	f7fb fecd 	bl	800a554 <GUI_DEVICE__GetpDriver>
 800e7ba:	b330      	cbz	r0, 800e80a <LCD_InitLUT+0x66>
 800e7bc:	4e15      	ldr	r6, [pc, #84]	; (800e814 <LCD_InitLUT+0x70>)
 800e7be:	6833      	ldr	r3, [r6, #0]
 800e7c0:	4620      	mov	r0, r4
 800e7c2:	f893 9011 	ldrb.w	r9, [r3, #17]
 800e7c6:	745c      	strb	r4, [r3, #17]
 800e7c8:	f7f9 fed6 	bl	8008578 <LCD_GetBitsPerPixelEx>
 800e7cc:	2808      	cmp	r0, #8
 800e7ce:	dd03      	ble.n	800e7d8 <LCD_InitLUT+0x34>
 800e7d0:	6833      	ldr	r3, [r6, #0]
 800e7d2:	f883 9011 	strb.w	r9, [r3, #17]
 800e7d6:	e018      	b.n	800e80a <LCD_InitLUT+0x66>
 800e7d8:	4b0f      	ldr	r3, [pc, #60]	; (800e818 <LCD_InitLUT+0x74>)
 800e7da:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 800e7de:	691a      	ldr	r2, [r3, #16]
 800e7e0:	4b0e      	ldr	r3, [pc, #56]	; (800e81c <LCD_InitLUT+0x78>)
 800e7e2:	429a      	cmp	r2, r3
 800e7e4:	d0f4      	beq.n	800e7d0 <LCD_InitLUT+0x2c>
 800e7e6:	4620      	mov	r0, r4
 800e7e8:	f7f9 fec9 	bl	800857e <LCD_GetNumColorsEx>
 800e7ec:	2500      	movs	r5, #0
 800e7ee:	4682      	mov	sl, r0
 800e7f0:	4555      	cmp	r5, sl
 800e7f2:	daed      	bge.n	800e7d0 <LCD_InitLUT+0x2c>
 800e7f4:	b2ef      	uxtb	r7, r5
 800e7f6:	4638      	mov	r0, r7
 800e7f8:	f7fa fa9e 	bl	8008d38 <LCD_Index2Color>
 800e7fc:	4639      	mov	r1, r7
 800e7fe:	4602      	mov	r2, r0
 800e800:	4620      	mov	r0, r4
 800e802:	f7f9 fe75 	bl	80084f0 <LCD_SetLUTEntryEx>
 800e806:	3501      	adds	r5, #1
 800e808:	e7f2      	b.n	800e7f0 <LCD_InitLUT+0x4c>
 800e80a:	3401      	adds	r4, #1
 800e80c:	e7d0      	b.n	800e7b0 <LCD_InitLUT+0xc>
 800e80e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e812:	bf00      	nop
 800e814:	200000b8 	.word	0x200000b8
 800e818:	20002d28 	.word	0x20002d28
 800e81c:	08012c08 	.word	0x08012c08

0800e820 <LCD_AA_SetAndMask>:
 800e820:	4b02      	ldr	r3, [pc, #8]	; (800e82c <LCD_AA_SetAndMask+0xc>)
 800e822:	681a      	ldr	r2, [r3, #0]
 800e824:	6018      	str	r0, [r3, #0]
 800e826:	4610      	mov	r0, r2
 800e828:	4770      	bx	lr
 800e82a:	bf00      	nop
 800e82c:	20000188 	.word	0x20000188

0800e830 <_GetWordWrap>:
 800e830:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800e834:	2500      	movs	r5, #0
 800e836:	9001      	str	r0, [sp, #4]
 800e838:	4689      	mov	r9, r1
 800e83a:	4690      	mov	r8, r2
 800e83c:	46aa      	mov	sl, r5
 800e83e:	462e      	mov	r6, r5
 800e840:	462c      	mov	r4, r5
 800e842:	462f      	mov	r7, r5
 800e844:	a801      	add	r0, sp, #4
 800e846:	f7fa fe3d 	bl	80094c4 <GUI_UC__GetCharCodeInc>
 800e84a:	2d00      	cmp	r5, #0
 800e84c:	bf08      	it	eq
 800e84e:	4605      	moveq	r5, r0
 800e850:	b108      	cbz	r0, 800e856 <_GetWordWrap+0x26>
 800e852:	280a      	cmp	r0, #10
 800e854:	d10b      	bne.n	800e86e <_GetWordWrap+0x3e>
 800e856:	4626      	mov	r6, r4
 800e858:	2e00      	cmp	r6, #0
 800e85a:	bf18      	it	ne
 800e85c:	4634      	movne	r4, r6
 800e85e:	f1b8 0f00 	cmp.w	r8, #0
 800e862:	d025      	beq.n	800e8b0 <_GetWordWrap+0x80>
 800e864:	ebca 0707 	rsb	r7, sl, r7
 800e868:	f8c8 7000 	str.w	r7, [r8]
 800e86c:	e020      	b.n	800e8b0 <_GetWordWrap+0x80>
 800e86e:	2820      	cmp	r0, #32
 800e870:	d01c      	beq.n	800e8ac <_GetWordWrap+0x7c>
 800e872:	2d20      	cmp	r5, #32
 800e874:	d00e      	beq.n	800e894 <_GetWordWrap+0x64>
 800e876:	4b10      	ldr	r3, [pc, #64]	; (800e8b8 <_GetWordWrap+0x88>)
 800e878:	6819      	ldr	r1, [r3, #0]
 800e87a:	4b10      	ldr	r3, [pc, #64]	; (800e8bc <_GetWordWrap+0x8c>)
 800e87c:	681a      	ldr	r2, [r3, #0]
 800e87e:	2300      	movs	r3, #0
 800e880:	4293      	cmp	r3, r2
 800e882:	da09      	bge.n	800e898 <_GetWordWrap+0x68>
 800e884:	f831 e013 	ldrh.w	lr, [r1, r3, lsl #1]
 800e888:	4586      	cmp	lr, r0
 800e88a:	d101      	bne.n	800e890 <_GetWordWrap+0x60>
 800e88c:	1c66      	adds	r6, r4, #1
 800e88e:	e003      	b.n	800e898 <_GetWordWrap+0x68>
 800e890:	3301      	adds	r3, #1
 800e892:	e7f5      	b.n	800e880 <_GetWordWrap+0x50>
 800e894:	4626      	mov	r6, r4
 800e896:	2500      	movs	r5, #0
 800e898:	f7fc fd22 	bl	800b2e0 <GUI_GetCharDistX>
 800e89c:	4407      	add	r7, r0
 800e89e:	454f      	cmp	r7, r9
 800e8a0:	4682      	mov	sl, r0
 800e8a2:	dd01      	ble.n	800e8a8 <_GetWordWrap+0x78>
 800e8a4:	2c00      	cmp	r4, #0
 800e8a6:	d1d7      	bne.n	800e858 <_GetWordWrap+0x28>
 800e8a8:	3401      	adds	r4, #1
 800e8aa:	e7cb      	b.n	800e844 <_GetWordWrap+0x14>
 800e8ac:	4626      	mov	r6, r4
 800e8ae:	e7f3      	b.n	800e898 <_GetWordWrap+0x68>
 800e8b0:	4620      	mov	r0, r4
 800e8b2:	b002      	add	sp, #8
 800e8b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e8b8:	20002c50 	.word	0x20002c50
 800e8bc:	20002c54 	.word	0x20002c54

0800e8c0 <_GetCharWrap>:
 800e8c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e8c2:	2400      	movs	r4, #0
 800e8c4:	9001      	str	r0, [sp, #4]
 800e8c6:	460e      	mov	r6, r1
 800e8c8:	4625      	mov	r5, r4
 800e8ca:	a801      	add	r0, sp, #4
 800e8cc:	f7fa fdfa 	bl	80094c4 <GUI_UC__GetCharCodeInc>
 800e8d0:	4607      	mov	r7, r0
 800e8d2:	b148      	cbz	r0, 800e8e8 <_GetCharWrap+0x28>
 800e8d4:	f7fc fd04 	bl	800b2e0 <GUI_GetCharDistX>
 800e8d8:	4405      	add	r5, r0
 800e8da:	b10c      	cbz	r4, 800e8e0 <_GetCharWrap+0x20>
 800e8dc:	42b5      	cmp	r5, r6
 800e8de:	dc03      	bgt.n	800e8e8 <_GetCharWrap+0x28>
 800e8e0:	2f0a      	cmp	r7, #10
 800e8e2:	d001      	beq.n	800e8e8 <_GetCharWrap+0x28>
 800e8e4:	3401      	adds	r4, #1
 800e8e6:	e7f0      	b.n	800e8ca <_GetCharWrap+0xa>
 800e8e8:	4620      	mov	r0, r4
 800e8ea:	b003      	add	sp, #12
 800e8ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800e8f0 <_WrapGetNumCharsDisp>:
 800e8f0:	2a01      	cmp	r2, #1
 800e8f2:	b510      	push	{r4, lr}
 800e8f4:	d005      	beq.n	800e902 <_WrapGetNumCharsDisp+0x12>
 800e8f6:	2a02      	cmp	r2, #2
 800e8f8:	d108      	bne.n	800e90c <_WrapGetNumCharsDisp+0x1c>
 800e8fa:	4b07      	ldr	r3, [pc, #28]	; (800e918 <_WrapGetNumCharsDisp+0x28>)
 800e8fc:	681b      	ldr	r3, [r3, #0]
 800e8fe:	4798      	blx	r3
 800e900:	bd10      	pop	{r4, pc}
 800e902:	4a06      	ldr	r2, [pc, #24]	; (800e91c <_WrapGetNumCharsDisp+0x2c>)
 800e904:	6814      	ldr	r4, [r2, #0]
 800e906:	461a      	mov	r2, r3
 800e908:	47a0      	blx	r4
 800e90a:	bd10      	pop	{r4, pc}
 800e90c:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800e910:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e914:	f7fc bc12 	b.w	800b13c <GUI__GetLineNumChars>
 800e918:	2000018c 	.word	0x2000018c
 800e91c:	20000190 	.word	0x20000190

0800e920 <GUI__WrapGetNumCharsDisp>:
 800e920:	2300      	movs	r3, #0
 800e922:	f7ff bfe5 	b.w	800e8f0 <_WrapGetNumCharsDisp>

0800e926 <GUI__WrapGetNumCharsToNextLine>:
 800e926:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e928:	b085      	sub	sp, #20
 800e92a:	ab03      	add	r3, sp, #12
 800e92c:	4617      	mov	r7, r2
 800e92e:	460e      	mov	r6, r1
 800e930:	9001      	str	r0, [sp, #4]
 800e932:	f7ff ffdd 	bl	800e8f0 <_WrapGetNumCharsDisp>
 800e936:	9d01      	ldr	r5, [sp, #4]
 800e938:	4604      	mov	r4, r0
 800e93a:	4621      	mov	r1, r4
 800e93c:	4628      	mov	r0, r5
 800e93e:	f7fa fdd5 	bl	80094ec <GUI_UC__NumChars2NumBytes>
 800e942:	4428      	add	r0, r5
 800e944:	ad04      	add	r5, sp, #16
 800e946:	f845 0d0c 	str.w	r0, [r5, #-12]!
 800e94a:	4628      	mov	r0, r5
 800e94c:	f7fa fdba 	bl	80094c4 <GUI_UC__GetCharCodeInc>
 800e950:	280a      	cmp	r0, #10
 800e952:	d101      	bne.n	800e958 <GUI__WrapGetNumCharsToNextLine+0x32>
 800e954:	3401      	adds	r4, #1
 800e956:	e012      	b.n	800e97e <GUI__WrapGetNumCharsToNextLine+0x58>
 800e958:	2f01      	cmp	r7, #1
 800e95a:	d110      	bne.n	800e97e <GUI__WrapGetNumCharsToNextLine+0x58>
 800e95c:	2820      	cmp	r0, #32
 800e95e:	d10e      	bne.n	800e97e <GUI__WrapGetNumCharsToNextLine+0x58>
 800e960:	f7fc fcbe 	bl	800b2e0 <GUI_GetCharDistX>
 800e964:	4607      	mov	r7, r0
 800e966:	9b03      	ldr	r3, [sp, #12]
 800e968:	429e      	cmp	r6, r3
 800e96a:	db08      	blt.n	800e97e <GUI__WrapGetNumCharsToNextLine+0x58>
 800e96c:	443b      	add	r3, r7
 800e96e:	4628      	mov	r0, r5
 800e970:	9303      	str	r3, [sp, #12]
 800e972:	f7fa fda7 	bl	80094c4 <GUI_UC__GetCharCodeInc>
 800e976:	2820      	cmp	r0, #32
 800e978:	f104 0401 	add.w	r4, r4, #1
 800e97c:	d0f3      	beq.n	800e966 <GUI__WrapGetNumCharsToNextLine+0x40>
 800e97e:	4620      	mov	r0, r4
 800e980:	b005      	add	sp, #20
 800e982:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e984 <GUI__WrapGetNumBytesToNextLine>:
 800e984:	b510      	push	{r4, lr}
 800e986:	4604      	mov	r4, r0
 800e988:	f7ff ffcd 	bl	800e926 <GUI__WrapGetNumCharsToNextLine>
 800e98c:	4601      	mov	r1, r0
 800e98e:	4620      	mov	r0, r4
 800e990:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e994:	f7fa bdaa 	b.w	80094ec <GUI_UC__NumChars2NumBytes>

0800e998 <GUI__ExpandPixelIndicesEx>:
 800e998:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e99c:	1e0c      	subs	r4, r1, #0
 800e99e:	4605      	mov	r5, r0
 800e9a0:	f340 80b3 	ble.w	800eb0a <GUI__ExpandPixelIndicesEx+0x172>
 800e9a4:	2a08      	cmp	r2, #8
 800e9a6:	685f      	ldr	r7, [r3, #4]
 800e9a8:	dd04      	ble.n	800e9b4 <GUI__ExpandPixelIndicesEx+0x1c>
 800e9aa:	2a10      	cmp	r2, #16
 800e9ac:	f340 8098 	ble.w	800eae0 <GUI__ExpandPixelIndicesEx+0x148>
 800e9b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e9b4:	3a01      	subs	r2, #1
 800e9b6:	2a07      	cmp	r2, #7
 800e9b8:	f200 80a7 	bhi.w	800eb0a <GUI__ExpandPixelIndicesEx+0x172>
 800e9bc:	e8df f002 	tbb	[pc, r2]
 800e9c0:	58a52d04 	.word	0x58a52d04
 800e9c4:	83a5a5a5 	.word	0x83a5a5a5
 800e9c8:	1e66      	subs	r6, r4, #1
 800e9ca:	10f2      	asrs	r2, r6, #3
 800e9cc:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800e9d0:	3b01      	subs	r3, #1
 800e9d2:	eb05 0802 	add.w	r8, r5, r2
 800e9d6:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800e9da:	f006 0607 	and.w	r6, r6, #7
 800e9de:	f815 a002 	ldrb.w	sl, [r5, r2]
 800e9e2:	2580      	movs	r5, #128	; 0x80
 800e9e4:	4135      	asrs	r5, r6
 800e9e6:	f108 38ff 	add.w	r8, r8, #4294967295
 800e9ea:	b2ed      	uxtb	r5, r5
 800e9ec:	f1c6 0307 	rsb	r3, r6, #7
 800e9f0:	ea0a 0005 	and.w	r0, sl, r5
 800e9f4:	4118      	asrs	r0, r3
 800e9f6:	47b8      	blx	r7
 800e9f8:	f849 0904 	str.w	r0, [r9], #-4
 800e9fc:	b936      	cbnz	r6, 800ea0c <GUI__ExpandPixelIndicesEx+0x74>
 800e9fe:	f898 a000 	ldrb.w	sl, [r8]
 800ea02:	2501      	movs	r5, #1
 800ea04:	f108 38ff 	add.w	r8, r8, #4294967295
 800ea08:	2607      	movs	r6, #7
 800ea0a:	e002      	b.n	800ea12 <GUI__ExpandPixelIndicesEx+0x7a>
 800ea0c:	006d      	lsls	r5, r5, #1
 800ea0e:	3e01      	subs	r6, #1
 800ea10:	b2ed      	uxtb	r5, r5
 800ea12:	3c01      	subs	r4, #1
 800ea14:	d1ea      	bne.n	800e9ec <GUI__ExpandPixelIndicesEx+0x54>
 800ea16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ea1a:	1e66      	subs	r6, r4, #1
 800ea1c:	10b2      	asrs	r2, r6, #2
 800ea1e:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800ea22:	3b01      	subs	r3, #1
 800ea24:	f006 0603 	and.w	r6, r6, #3
 800ea28:	eb05 0802 	add.w	r8, r5, r2
 800ea2c:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800ea30:	f815 a002 	ldrb.w	sl, [r5, r2]
 800ea34:	0073      	lsls	r3, r6, #1
 800ea36:	25c0      	movs	r5, #192	; 0xc0
 800ea38:	411d      	asrs	r5, r3
 800ea3a:	f108 38ff 	add.w	r8, r8, #4294967295
 800ea3e:	b2ed      	uxtb	r5, r5
 800ea40:	0073      	lsls	r3, r6, #1
 800ea42:	f1c3 0306 	rsb	r3, r3, #6
 800ea46:	ea0a 0005 	and.w	r0, sl, r5
 800ea4a:	4118      	asrs	r0, r3
 800ea4c:	47b8      	blx	r7
 800ea4e:	f849 0904 	str.w	r0, [r9], #-4
 800ea52:	b936      	cbnz	r6, 800ea62 <GUI__ExpandPixelIndicesEx+0xca>
 800ea54:	2503      	movs	r5, #3
 800ea56:	f898 a000 	ldrb.w	sl, [r8]
 800ea5a:	462e      	mov	r6, r5
 800ea5c:	f108 38ff 	add.w	r8, r8, #4294967295
 800ea60:	e002      	b.n	800ea68 <GUI__ExpandPixelIndicesEx+0xd0>
 800ea62:	00ad      	lsls	r5, r5, #2
 800ea64:	3e01      	subs	r6, #1
 800ea66:	b2ed      	uxtb	r5, r5
 800ea68:	3c01      	subs	r4, #1
 800ea6a:	d1e9      	bne.n	800ea40 <GUI__ExpandPixelIndicesEx+0xa8>
 800ea6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ea70:	1e66      	subs	r6, r4, #1
 800ea72:	1072      	asrs	r2, r6, #1
 800ea74:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800ea78:	3b01      	subs	r3, #1
 800ea7a:	f006 0601 	and.w	r6, r6, #1
 800ea7e:	eb05 0802 	add.w	r8, r5, r2
 800ea82:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800ea86:	f815 a002 	ldrb.w	sl, [r5, r2]
 800ea8a:	00b3      	lsls	r3, r6, #2
 800ea8c:	25f0      	movs	r5, #240	; 0xf0
 800ea8e:	411d      	asrs	r5, r3
 800ea90:	f108 38ff 	add.w	r8, r8, #4294967295
 800ea94:	b2ed      	uxtb	r5, r5
 800ea96:	00b3      	lsls	r3, r6, #2
 800ea98:	f1c3 0304 	rsb	r3, r3, #4
 800ea9c:	ea0a 0005 	and.w	r0, sl, r5
 800eaa0:	4118      	asrs	r0, r3
 800eaa2:	47b8      	blx	r7
 800eaa4:	f849 0904 	str.w	r0, [r9], #-4
 800eaa8:	b936      	cbnz	r6, 800eab8 <GUI__ExpandPixelIndicesEx+0x120>
 800eaaa:	f898 a000 	ldrb.w	sl, [r8]
 800eaae:	250f      	movs	r5, #15
 800eab0:	f108 38ff 	add.w	r8, r8, #4294967295
 800eab4:	2601      	movs	r6, #1
 800eab6:	e002      	b.n	800eabe <GUI__ExpandPixelIndicesEx+0x126>
 800eab8:	012d      	lsls	r5, r5, #4
 800eaba:	b2ed      	uxtb	r5, r5
 800eabc:	2600      	movs	r6, #0
 800eabe:	3c01      	subs	r4, #1
 800eac0:	d1e9      	bne.n	800ea96 <GUI__ExpandPixelIndicesEx+0xfe>
 800eac2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eac6:	192e      	adds	r6, r5, r4
 800eac8:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 800eacc:	1b34      	subs	r4, r6, r4
 800eace:	f816 0d01 	ldrb.w	r0, [r6, #-1]!
 800ead2:	47b8      	blx	r7
 800ead4:	42a6      	cmp	r6, r4
 800ead6:	f845 0d04 	str.w	r0, [r5, #-4]!
 800eada:	d1f8      	bne.n	800eace <GUI__ExpandPixelIndicesEx+0x136>
 800eadc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eae0:	695e      	ldr	r6, [r3, #20]
 800eae2:	b12e      	cbz	r6, 800eaf0 <GUI__ExpandPixelIndicesEx+0x158>
 800eae4:	4629      	mov	r1, r5
 800eae6:	4622      	mov	r2, r4
 800eae8:	2302      	movs	r3, #2
 800eaea:	47b0      	blx	r6
 800eaec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eaf0:	0064      	lsls	r4, r4, #1
 800eaf2:	4425      	add	r5, r4
 800eaf4:	192e      	adds	r6, r5, r4
 800eaf6:	1b2c      	subs	r4, r5, r4
 800eaf8:	f835 0d02 	ldrh.w	r0, [r5, #-2]!
 800eafc:	47b8      	blx	r7
 800eafe:	42a5      	cmp	r5, r4
 800eb00:	f846 0d04 	str.w	r0, [r6, #-4]!
 800eb04:	d1f8      	bne.n	800eaf8 <GUI__ExpandPixelIndicesEx+0x160>
 800eb06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eb0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800eb0e <_GetTwinArcPara>:
 800eb0e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800eb12:	fb01 f901 	mul.w	r9, r1, r1
 800eb16:	1e47      	subs	r7, r0, #1
 800eb18:	4604      	mov	r4, r0
 800eb1a:	4340      	muls	r0, r0
 800eb1c:	ebc9 0000 	rsb	r0, r9, r0
 800eb20:	460d      	mov	r5, r1
 800eb22:	4692      	mov	sl, r2
 800eb24:	4698      	mov	r8, r3
 800eb26:	9e08      	ldr	r6, [sp, #32]
 800eb28:	f7fa fa0b 	bl	8008f42 <GUI__sqrt32>
 800eb2c:	42bd      	cmp	r5, r7
 800eb2e:	f8ca 0000 	str.w	r0, [sl]
 800eb32:	da10      	bge.n	800eb56 <_GetTwinArcPara+0x48>
 800eb34:	fb07 f007 	mul.w	r0, r7, r7
 800eb38:	ebc9 0000 	rsb	r0, r9, r0
 800eb3c:	f7fa fa01 	bl	8008f42 <GUI__sqrt32>
 800eb40:	3c02      	subs	r4, #2
 800eb42:	42a5      	cmp	r5, r4
 800eb44:	f8c8 0000 	str.w	r0, [r8]
 800eb48:	da03      	bge.n	800eb52 <_GetTwinArcPara+0x44>
 800eb4a:	3801      	subs	r0, #1
 800eb4c:	6030      	str	r0, [r6, #0]
 800eb4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eb52:	2300      	movs	r3, #0
 800eb54:	e002      	b.n	800eb5c <_GetTwinArcPara+0x4e>
 800eb56:	2300      	movs	r3, #0
 800eb58:	f8c8 3000 	str.w	r3, [r8]
 800eb5c:	6033      	str	r3, [r6, #0]
 800eb5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800eb64 <GUI__DrawTwinArc2>:
 800eb64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb68:	461c      	mov	r4, r3
 800eb6a:	4b57      	ldr	r3, [pc, #348]	; (800ecc8 <GUI__DrawTwinArc2+0x164>)
 800eb6c:	681b      	ldr	r3, [r3, #0]
 800eb6e:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 800eb70:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800eb72:	b08b      	sub	sp, #44	; 0x2c
 800eb74:	4415      	add	r5, r2
 800eb76:	1e63      	subs	r3, r4, #1
 800eb78:	19c6      	adds	r6, r0, r7
 800eb7a:	442b      	add	r3, r5
 800eb7c:	440f      	add	r7, r1
 800eb7e:	a808      	add	r0, sp, #32
 800eb80:	f8ad 6020 	strh.w	r6, [sp, #32]
 800eb84:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800eb88:	f8ad 5022 	strh.w	r5, [sp, #34]	; 0x22
 800eb8c:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800eb90:	f7f7 f922 	bl	8005dd8 <WM__InitIVRSearch>
 800eb94:	2800      	cmp	r0, #0
 800eb96:	f000 8094 	beq.w	800ecc2 <GUI__DrawTwinArc2+0x15e>
 800eb9a:	2c00      	cmp	r4, #0
 800eb9c:	dc02      	bgt.n	800eba4 <GUI__DrawTwinArc2+0x40>
 800eb9e:	f7f7 f859 	bl	8005c54 <WM__GetNextIVR>
 800eba2:	e7f7      	b.n	800eb94 <GUI__DrawTwinArc2+0x30>
 800eba4:	9814      	ldr	r0, [sp, #80]	; 0x50
 800eba6:	f7fc f832 	bl	800ac0e <GUI_SetColor>
 800ebaa:	f104 38ff 	add.w	r8, r4, #4294967295
 800ebae:	4641      	mov	r1, r8
 800ebb0:	f118 38ff 	adds.w	r8, r8, #4294967295
 800ebb4:	d324      	bcc.n	800ec00 <GUI__DrawTwinArc2+0x9c>
 800ebb6:	ab07      	add	r3, sp, #28
 800ebb8:	9300      	str	r3, [sp, #0]
 800ebba:	4620      	mov	r0, r4
 800ebbc:	aa05      	add	r2, sp, #20
 800ebbe:	ab06      	add	r3, sp, #24
 800ebc0:	f7ff ffa5 	bl	800eb0e <_GetTwinArcPara>
 800ebc4:	f104 39ff 	add.w	r9, r4, #4294967295
 800ebc8:	f8dd a018 	ldr.w	sl, [sp, #24]
 800ebcc:	9905      	ldr	r1, [sp, #20]
 800ebce:	1930      	adds	r0, r6, r4
 800ebd0:	44a9      	add	r9, r5
 800ebd2:	ebc8 0909 	rsb	r9, r8, r9
 800ebd6:	ebc4 0b07 	rsb	fp, r4, r7
 800ebda:	ebca 0200 	rsb	r2, sl, r0
 800ebde:	eb0b 0301 	add.w	r3, fp, r1
 800ebe2:	1a40      	subs	r0, r0, r1
 800ebe4:	3a01      	subs	r2, #1
 800ebe6:	4649      	mov	r1, r9
 800ebe8:	9302      	str	r3, [sp, #8]
 800ebea:	f7f9 fdd1 	bl	8008790 <LCD_DrawHLine>
 800ebee:	9b02      	ldr	r3, [sp, #8]
 800ebf0:	eb0b 000a 	add.w	r0, fp, sl
 800ebf4:	3001      	adds	r0, #1
 800ebf6:	4649      	mov	r1, r9
 800ebf8:	461a      	mov	r2, r3
 800ebfa:	f7f9 fdc9 	bl	8008790 <LCD_DrawHLine>
 800ebfe:	e7d6      	b.n	800ebae <GUI__DrawTwinArc2+0x4a>
 800ec00:	2c01      	cmp	r4, #1
 800ec02:	d0cc      	beq.n	800eb9e <GUI__DrawTwinArc2+0x3a>
 800ec04:	9815      	ldr	r0, [sp, #84]	; 0x54
 800ec06:	f7fc f802 	bl	800ac0e <GUI_SetColor>
 800ec0a:	f1a4 0902 	sub.w	r9, r4, #2
 800ec0e:	eb05 0b04 	add.w	fp, r5, r4
 800ec12:	f105 0802 	add.w	r8, r5, #2
 800ec16:	f1b9 0f00 	cmp.w	r9, #0
 800ec1a:	d027      	beq.n	800ec6c <GUI__DrawTwinArc2+0x108>
 800ec1c:	ab07      	add	r3, sp, #28
 800ec1e:	4649      	mov	r1, r9
 800ec20:	9300      	str	r3, [sp, #0]
 800ec22:	4620      	mov	r0, r4
 800ec24:	aa05      	add	r2, sp, #20
 800ec26:	ab06      	add	r3, sp, #24
 800ec28:	f7ff ff71 	bl	800eb0e <_GetTwinArcPara>
 800ec2c:	f8dd a01c 	ldr.w	sl, [sp, #28]
 800ec30:	9906      	ldr	r1, [sp, #24]
 800ec32:	1930      	adds	r0, r6, r4
 800ec34:	1b3b      	subs	r3, r7, r4
 800ec36:	ebca 0200 	rsb	r2, sl, r0
 800ec3a:	eb03 0c01 	add.w	ip, r3, r1
 800ec3e:	1a40      	subs	r0, r0, r1
 800ec40:	3a01      	subs	r2, #1
 800ec42:	4641      	mov	r1, r8
 800ec44:	9302      	str	r3, [sp, #8]
 800ec46:	f8cd c00c 	str.w	ip, [sp, #12]
 800ec4a:	f7f9 fda1 	bl	8008790 <LCD_DrawHLine>
 800ec4e:	9b02      	ldr	r3, [sp, #8]
 800ec50:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800ec54:	eb03 000a 	add.w	r0, r3, sl
 800ec58:	4641      	mov	r1, r8
 800ec5a:	3001      	adds	r0, #1
 800ec5c:	4662      	mov	r2, ip
 800ec5e:	f7f9 fd97 	bl	8008790 <LCD_DrawHLine>
 800ec62:	f109 39ff 	add.w	r9, r9, #4294967295
 800ec66:	f108 0801 	add.w	r8, r8, #1
 800ec6a:	e7d4      	b.n	800ec16 <GUI__DrawTwinArc2+0xb2>
 800ec6c:	2c02      	cmp	r4, #2
 800ec6e:	d096      	beq.n	800eb9e <GUI__DrawTwinArc2+0x3a>
 800ec70:	9816      	ldr	r0, [sp, #88]	; 0x58
 800ec72:	f7fb ffcc 	bl	800ac0e <GUI_SetColor>
 800ec76:	f1c4 0303 	rsb	r3, r4, #3
 800ec7a:	f1a4 0803 	sub.w	r8, r4, #3
 800ec7e:	449b      	add	fp, r3
 800ec80:	f1b8 0f00 	cmp.w	r8, #0
 800ec84:	d08b      	beq.n	800eb9e <GUI__DrawTwinArc2+0x3a>
 800ec86:	ab07      	add	r3, sp, #28
 800ec88:	4641      	mov	r1, r8
 800ec8a:	9300      	str	r3, [sp, #0]
 800ec8c:	4620      	mov	r0, r4
 800ec8e:	ab06      	add	r3, sp, #24
 800ec90:	aa05      	add	r2, sp, #20
 800ec92:	f7ff ff3c 	bl	800eb0e <_GetTwinArcPara>
 800ec96:	9807      	ldr	r0, [sp, #28]
 800ec98:	1932      	adds	r2, r6, r4
 800ec9a:	ebc4 0907 	rsb	r9, r4, r7
 800ec9e:	4659      	mov	r1, fp
 800eca0:	eb09 0a00 	add.w	sl, r9, r0
 800eca4:	1a10      	subs	r0, r2, r0
 800eca6:	3a01      	subs	r2, #1
 800eca8:	f7f9 fd72 	bl	8008790 <LCD_DrawHLine>
 800ecac:	4659      	mov	r1, fp
 800ecae:	f109 0001 	add.w	r0, r9, #1
 800ecb2:	4652      	mov	r2, sl
 800ecb4:	f7f9 fd6c 	bl	8008790 <LCD_DrawHLine>
 800ecb8:	f108 38ff 	add.w	r8, r8, #4294967295
 800ecbc:	f10b 0b01 	add.w	fp, fp, #1
 800ecc0:	e7de      	b.n	800ec80 <GUI__DrawTwinArc2+0x11c>
 800ecc2:	b00b      	add	sp, #44	; 0x2c
 800ecc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ecc8:	200000b8 	.word	0x200000b8

0800eccc <GUI__CompactPixelIndices>:
 800eccc:	2a08      	cmp	r2, #8
 800ecce:	b510      	push	{r4, lr}
 800ecd0:	dd0e      	ble.n	800ecf0 <GUI__CompactPixelIndices+0x24>
 800ecd2:	2a10      	cmp	r2, #16
 800ecd4:	dc0a      	bgt.n	800ecec <GUI__CompactPixelIndices+0x20>
 800ecd6:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800ecda:	4603      	mov	r3, r0
 800ecdc:	f850 2b04 	ldr.w	r2, [r0], #4
 800ece0:	f823 2b02 	strh.w	r2, [r3], #2
 800ece4:	428b      	cmp	r3, r1
 800ece6:	d1f9      	bne.n	800ecdc <GUI__CompactPixelIndices+0x10>
 800ece8:	2001      	movs	r0, #1
 800ecea:	bd10      	pop	{r4, pc}
 800ecec:	2000      	movs	r0, #0
 800ecee:	bd10      	pop	{r4, pc}
 800ecf0:	2a02      	cmp	r2, #2
 800ecf2:	d06d      	beq.n	800edd0 <GUI__CompactPixelIndices+0x104>
 800ecf4:	2a04      	cmp	r2, #4
 800ecf6:	d054      	beq.n	800eda2 <GUI__CompactPixelIndices+0xd6>
 800ecf8:	2a01      	cmp	r2, #1
 800ecfa:	f040 8095 	bne.w	800ee28 <GUI__CompactPixelIndices+0x15c>
 800ecfe:	4604      	mov	r4, r0
 800ed00:	6803      	ldr	r3, [r0, #0]
 800ed02:	2901      	cmp	r1, #1
 800ed04:	ea4f 13c3 	mov.w	r3, r3, lsl #7
 800ed08:	b2db      	uxtb	r3, r3
 800ed0a:	d047      	beq.n	800ed9c <GUI__CompactPixelIndices+0xd0>
 800ed0c:	6842      	ldr	r2, [r0, #4]
 800ed0e:	2902      	cmp	r1, #2
 800ed10:	f002 0201 	and.w	r2, r2, #1
 800ed14:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800ed18:	d102      	bne.n	800ed20 <GUI__CompactPixelIndices+0x54>
 800ed1a:	f100 0208 	add.w	r2, r0, #8
 800ed1e:	e03e      	b.n	800ed9e <GUI__CompactPixelIndices+0xd2>
 800ed20:	6882      	ldr	r2, [r0, #8]
 800ed22:	2903      	cmp	r1, #3
 800ed24:	f002 0201 	and.w	r2, r2, #1
 800ed28:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800ed2c:	d102      	bne.n	800ed34 <GUI__CompactPixelIndices+0x68>
 800ed2e:	f100 020c 	add.w	r2, r0, #12
 800ed32:	e034      	b.n	800ed9e <GUI__CompactPixelIndices+0xd2>
 800ed34:	68c2      	ldr	r2, [r0, #12]
 800ed36:	2904      	cmp	r1, #4
 800ed38:	f002 0201 	and.w	r2, r2, #1
 800ed3c:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 800ed40:	d102      	bne.n	800ed48 <GUI__CompactPixelIndices+0x7c>
 800ed42:	f100 0210 	add.w	r2, r0, #16
 800ed46:	e02a      	b.n	800ed9e <GUI__CompactPixelIndices+0xd2>
 800ed48:	6902      	ldr	r2, [r0, #16]
 800ed4a:	2905      	cmp	r1, #5
 800ed4c:	f002 0201 	and.w	r2, r2, #1
 800ed50:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800ed54:	d102      	bne.n	800ed5c <GUI__CompactPixelIndices+0x90>
 800ed56:	f100 0214 	add.w	r2, r0, #20
 800ed5a:	e020      	b.n	800ed9e <GUI__CompactPixelIndices+0xd2>
 800ed5c:	6942      	ldr	r2, [r0, #20]
 800ed5e:	2906      	cmp	r1, #6
 800ed60:	f002 0201 	and.w	r2, r2, #1
 800ed64:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 800ed68:	d102      	bne.n	800ed70 <GUI__CompactPixelIndices+0xa4>
 800ed6a:	f100 0218 	add.w	r2, r0, #24
 800ed6e:	e016      	b.n	800ed9e <GUI__CompactPixelIndices+0xd2>
 800ed70:	6982      	ldr	r2, [r0, #24]
 800ed72:	3907      	subs	r1, #7
 800ed74:	f002 0201 	and.w	r2, r2, #1
 800ed78:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 800ed7c:	d102      	bne.n	800ed84 <GUI__CompactPixelIndices+0xb8>
 800ed7e:	f100 021c 	add.w	r2, r0, #28
 800ed82:	e005      	b.n	800ed90 <GUI__CompactPixelIndices+0xc4>
 800ed84:	f100 0220 	add.w	r2, r0, #32
 800ed88:	69c0      	ldr	r0, [r0, #28]
 800ed8a:	f000 0001 	and.w	r0, r0, #1
 800ed8e:	4303      	orrs	r3, r0
 800ed90:	f804 3b01 	strb.w	r3, [r4], #1
 800ed94:	2900      	cmp	r1, #0
 800ed96:	d0a7      	beq.n	800ece8 <GUI__CompactPixelIndices+0x1c>
 800ed98:	4610      	mov	r0, r2
 800ed9a:	e7b1      	b.n	800ed00 <GUI__CompactPixelIndices+0x34>
 800ed9c:	1d02      	adds	r2, r0, #4
 800ed9e:	2100      	movs	r1, #0
 800eda0:	e7f6      	b.n	800ed90 <GUI__CompactPixelIndices+0xc4>
 800eda2:	4602      	mov	r2, r0
 800eda4:	6803      	ldr	r3, [r0, #0]
 800eda6:	2901      	cmp	r1, #1
 800eda8:	ea4f 1303 	mov.w	r3, r3, lsl #4
 800edac:	b2db      	uxtb	r3, r3
 800edae:	d102      	bne.n	800edb6 <GUI__CompactPixelIndices+0xea>
 800edb0:	1d04      	adds	r4, r0, #4
 800edb2:	2100      	movs	r1, #0
 800edb4:	e006      	b.n	800edc4 <GUI__CompactPixelIndices+0xf8>
 800edb6:	f100 0408 	add.w	r4, r0, #8
 800edba:	6840      	ldr	r0, [r0, #4]
 800edbc:	f000 000f 	and.w	r0, r0, #15
 800edc0:	4303      	orrs	r3, r0
 800edc2:	3902      	subs	r1, #2
 800edc4:	f802 3b01 	strb.w	r3, [r2], #1
 800edc8:	2900      	cmp	r1, #0
 800edca:	d08d      	beq.n	800ece8 <GUI__CompactPixelIndices+0x1c>
 800edcc:	4620      	mov	r0, r4
 800edce:	e7e9      	b.n	800eda4 <GUI__CompactPixelIndices+0xd8>
 800edd0:	4604      	mov	r4, r0
 800edd2:	6803      	ldr	r3, [r0, #0]
 800edd4:	2901      	cmp	r1, #1
 800edd6:	ea4f 1383 	mov.w	r3, r3, lsl #6
 800edda:	b2db      	uxtb	r3, r3
 800eddc:	d021      	beq.n	800ee22 <GUI__CompactPixelIndices+0x156>
 800edde:	6842      	ldr	r2, [r0, #4]
 800ede0:	2902      	cmp	r1, #2
 800ede2:	f002 0203 	and.w	r2, r2, #3
 800ede6:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 800edea:	d102      	bne.n	800edf2 <GUI__CompactPixelIndices+0x126>
 800edec:	f100 0208 	add.w	r2, r0, #8
 800edf0:	e018      	b.n	800ee24 <GUI__CompactPixelIndices+0x158>
 800edf2:	6882      	ldr	r2, [r0, #8]
 800edf4:	2903      	cmp	r1, #3
 800edf6:	f002 0203 	and.w	r2, r2, #3
 800edfa:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 800edfe:	d102      	bne.n	800ee06 <GUI__CompactPixelIndices+0x13a>
 800ee00:	f100 020c 	add.w	r2, r0, #12
 800ee04:	e00e      	b.n	800ee24 <GUI__CompactPixelIndices+0x158>
 800ee06:	f100 0210 	add.w	r2, r0, #16
 800ee0a:	68c0      	ldr	r0, [r0, #12]
 800ee0c:	f000 0003 	and.w	r0, r0, #3
 800ee10:	4303      	orrs	r3, r0
 800ee12:	3904      	subs	r1, #4
 800ee14:	f804 3b01 	strb.w	r3, [r4], #1
 800ee18:	2900      	cmp	r1, #0
 800ee1a:	f43f af65 	beq.w	800ece8 <GUI__CompactPixelIndices+0x1c>
 800ee1e:	4610      	mov	r0, r2
 800ee20:	e7d7      	b.n	800edd2 <GUI__CompactPixelIndices+0x106>
 800ee22:	1d02      	adds	r2, r0, #4
 800ee24:	2100      	movs	r1, #0
 800ee26:	e7f5      	b.n	800ee14 <GUI__CompactPixelIndices+0x148>
 800ee28:	2300      	movs	r3, #0
 800ee2a:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 800ee2e:	54c2      	strb	r2, [r0, r3]
 800ee30:	3301      	adds	r3, #1
 800ee32:	428b      	cmp	r3, r1
 800ee34:	d1f9      	bne.n	800ee2a <GUI__CompactPixelIndices+0x15e>
 800ee36:	e757      	b.n	800ece8 <GUI__CompactPixelIndices+0x1c>

0800ee38 <GUI__ConvertColor2Index>:
 800ee38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ee3c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800ee40:	681e      	ldr	r6, [r3, #0]
 800ee42:	f1b8 0f00 	cmp.w	r8, #0
 800ee46:	bf08      	it	eq
 800ee48:	4680      	moveq	r8, r0
 800ee4a:	2a08      	cmp	r2, #8
 800ee4c:	4604      	mov	r4, r0
 800ee4e:	460d      	mov	r5, r1
 800ee50:	dd05      	ble.n	800ee5e <GUI__ConvertColor2Index+0x26>
 800ee52:	2a10      	cmp	r2, #16
 800ee54:	f340 80b6 	ble.w	800efc4 <GUI__ConvertColor2Index+0x18c>
 800ee58:	2000      	movs	r0, #0
 800ee5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ee5e:	3a01      	subs	r2, #1
 800ee60:	2a07      	cmp	r2, #7
 800ee62:	f200 80a4 	bhi.w	800efae <GUI__ConvertColor2Index+0x176>
 800ee66:	e8df f002 	tbb	[pc, r2]
 800ee6a:	6111      	.short	0x6111
 800ee6c:	a2a287a2 	.word	0xa2a287a2
 800ee70:	92a2      	.short	0x92a2
 800ee72:	69e0      	ldr	r0, [r4, #28]
 800ee74:	47b0      	blx	r6
 800ee76:	4338      	orrs	r0, r7
 800ee78:	f104 0920 	add.w	r9, r4, #32
 800ee7c:	b2c7      	uxtb	r7, r0
 800ee7e:	3d08      	subs	r5, #8
 800ee80:	f808 7b01 	strb.w	r7, [r8], #1
 800ee84:	2d00      	cmp	r5, #0
 800ee86:	f000 8092 	beq.w	800efae <GUI__ConvertColor2Index+0x176>
 800ee8a:	464c      	mov	r4, r9
 800ee8c:	6820      	ldr	r0, [r4, #0]
 800ee8e:	47b0      	blx	r6
 800ee90:	2d01      	cmp	r5, #1
 800ee92:	ea4f 10c0 	mov.w	r0, r0, lsl #7
 800ee96:	b2c7      	uxtb	r7, r0
 800ee98:	f000 808c 	beq.w	800efb4 <GUI__ConvertColor2Index+0x17c>
 800ee9c:	6860      	ldr	r0, [r4, #4]
 800ee9e:	47b0      	blx	r6
 800eea0:	2d02      	cmp	r5, #2
 800eea2:	ea47 1080 	orr.w	r0, r7, r0, lsl #6
 800eea6:	b2c7      	uxtb	r7, r0
 800eea8:	d102      	bne.n	800eeb0 <GUI__ConvertColor2Index+0x78>
 800eeaa:	f104 0908 	add.w	r9, r4, #8
 800eeae:	e083      	b.n	800efb8 <GUI__ConvertColor2Index+0x180>
 800eeb0:	68a0      	ldr	r0, [r4, #8]
 800eeb2:	47b0      	blx	r6
 800eeb4:	2d03      	cmp	r5, #3
 800eeb6:	ea47 1040 	orr.w	r0, r7, r0, lsl #5
 800eeba:	b2c7      	uxtb	r7, r0
 800eebc:	d102      	bne.n	800eec4 <GUI__ConvertColor2Index+0x8c>
 800eebe:	f104 090c 	add.w	r9, r4, #12
 800eec2:	e079      	b.n	800efb8 <GUI__ConvertColor2Index+0x180>
 800eec4:	68e0      	ldr	r0, [r4, #12]
 800eec6:	47b0      	blx	r6
 800eec8:	2d04      	cmp	r5, #4
 800eeca:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 800eece:	b2c7      	uxtb	r7, r0
 800eed0:	d102      	bne.n	800eed8 <GUI__ConvertColor2Index+0xa0>
 800eed2:	f104 0910 	add.w	r9, r4, #16
 800eed6:	e06f      	b.n	800efb8 <GUI__ConvertColor2Index+0x180>
 800eed8:	6920      	ldr	r0, [r4, #16]
 800eeda:	47b0      	blx	r6
 800eedc:	2d05      	cmp	r5, #5
 800eede:	ea47 00c0 	orr.w	r0, r7, r0, lsl #3
 800eee2:	b2c7      	uxtb	r7, r0
 800eee4:	d102      	bne.n	800eeec <GUI__ConvertColor2Index+0xb4>
 800eee6:	f104 0914 	add.w	r9, r4, #20
 800eeea:	e065      	b.n	800efb8 <GUI__ConvertColor2Index+0x180>
 800eeec:	6960      	ldr	r0, [r4, #20]
 800eeee:	47b0      	blx	r6
 800eef0:	2d06      	cmp	r5, #6
 800eef2:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 800eef6:	b2c7      	uxtb	r7, r0
 800eef8:	d102      	bne.n	800ef00 <GUI__ConvertColor2Index+0xc8>
 800eefa:	f104 0918 	add.w	r9, r4, #24
 800eefe:	e05b      	b.n	800efb8 <GUI__ConvertColor2Index+0x180>
 800ef00:	69a0      	ldr	r0, [r4, #24]
 800ef02:	47b0      	blx	r6
 800ef04:	2d07      	cmp	r5, #7
 800ef06:	ea47 0040 	orr.w	r0, r7, r0, lsl #1
 800ef0a:	b2c7      	uxtb	r7, r0
 800ef0c:	d1b1      	bne.n	800ee72 <GUI__ConvertColor2Index+0x3a>
 800ef0e:	f104 091c 	add.w	r9, r4, #28
 800ef12:	e051      	b.n	800efb8 <GUI__ConvertColor2Index+0x180>
 800ef14:	68e0      	ldr	r0, [r4, #12]
 800ef16:	47b0      	blx	r6
 800ef18:	4338      	orrs	r0, r7
 800ef1a:	f104 0910 	add.w	r9, r4, #16
 800ef1e:	b2c7      	uxtb	r7, r0
 800ef20:	3d04      	subs	r5, #4
 800ef22:	f808 7b01 	strb.w	r7, [r8], #1
 800ef26:	2d00      	cmp	r5, #0
 800ef28:	d041      	beq.n	800efae <GUI__ConvertColor2Index+0x176>
 800ef2a:	464c      	mov	r4, r9
 800ef2c:	6820      	ldr	r0, [r4, #0]
 800ef2e:	47b0      	blx	r6
 800ef30:	2d01      	cmp	r5, #1
 800ef32:	ea4f 1080 	mov.w	r0, r0, lsl #6
 800ef36:	b2c7      	uxtb	r7, r0
 800ef38:	d040      	beq.n	800efbc <GUI__ConvertColor2Index+0x184>
 800ef3a:	6860      	ldr	r0, [r4, #4]
 800ef3c:	47b0      	blx	r6
 800ef3e:	2d02      	cmp	r5, #2
 800ef40:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 800ef44:	b2c7      	uxtb	r7, r0
 800ef46:	d102      	bne.n	800ef4e <GUI__ConvertColor2Index+0x116>
 800ef48:	f104 0908 	add.w	r9, r4, #8
 800ef4c:	e038      	b.n	800efc0 <GUI__ConvertColor2Index+0x188>
 800ef4e:	68a0      	ldr	r0, [r4, #8]
 800ef50:	47b0      	blx	r6
 800ef52:	2d03      	cmp	r5, #3
 800ef54:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 800ef58:	b2c7      	uxtb	r7, r0
 800ef5a:	d1db      	bne.n	800ef14 <GUI__ConvertColor2Index+0xdc>
 800ef5c:	f104 090c 	add.w	r9, r4, #12
 800ef60:	e02e      	b.n	800efc0 <GUI__ConvertColor2Index+0x188>
 800ef62:	6860      	ldr	r0, [r4, #4]
 800ef64:	47b0      	blx	r6
 800ef66:	4338      	orrs	r0, r7
 800ef68:	f104 0908 	add.w	r9, r4, #8
 800ef6c:	b2c7      	uxtb	r7, r0
 800ef6e:	3d02      	subs	r5, #2
 800ef70:	f808 7b01 	strb.w	r7, [r8], #1
 800ef74:	b1dd      	cbz	r5, 800efae <GUI__ConvertColor2Index+0x176>
 800ef76:	464c      	mov	r4, r9
 800ef78:	6820      	ldr	r0, [r4, #0]
 800ef7a:	47b0      	blx	r6
 800ef7c:	2d01      	cmp	r5, #1
 800ef7e:	ea4f 1000 	mov.w	r0, r0, lsl #4
 800ef82:	b2c7      	uxtb	r7, r0
 800ef84:	d1ed      	bne.n	800ef62 <GUI__ConvertColor2Index+0x12a>
 800ef86:	f104 0904 	add.w	r9, r4, #4
 800ef8a:	2500      	movs	r5, #0
 800ef8c:	e7f0      	b.n	800ef70 <GUI__ConvertColor2Index+0x138>
 800ef8e:	691f      	ldr	r7, [r3, #16]
 800ef90:	b12f      	cbz	r7, 800ef9e <GUI__ConvertColor2Index+0x166>
 800ef92:	4620      	mov	r0, r4
 800ef94:	4641      	mov	r1, r8
 800ef96:	462a      	mov	r2, r5
 800ef98:	2301      	movs	r3, #1
 800ef9a:	47b8      	blx	r7
 800ef9c:	e007      	b.n	800efae <GUI__ConvertColor2Index+0x176>
 800ef9e:	f854 0027 	ldr.w	r0, [r4, r7, lsl #2]
 800efa2:	47b0      	blx	r6
 800efa4:	f808 0007 	strb.w	r0, [r8, r7]
 800efa8:	3701      	adds	r7, #1
 800efaa:	42bd      	cmp	r5, r7
 800efac:	d1f7      	bne.n	800ef9e <GUI__ConvertColor2Index+0x166>
 800efae:	2001      	movs	r0, #1
 800efb0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800efb4:	f104 0904 	add.w	r9, r4, #4
 800efb8:	2500      	movs	r5, #0
 800efba:	e761      	b.n	800ee80 <GUI__ConvertColor2Index+0x48>
 800efbc:	f104 0904 	add.w	r9, r4, #4
 800efc0:	2500      	movs	r5, #0
 800efc2:	e7ae      	b.n	800ef22 <GUI__ConvertColor2Index+0xea>
 800efc4:	691f      	ldr	r7, [r3, #16]
 800efc6:	b11f      	cbz	r7, 800efd0 <GUI__ConvertColor2Index+0x198>
 800efc8:	4641      	mov	r1, r8
 800efca:	462a      	mov	r2, r5
 800efcc:	2302      	movs	r3, #2
 800efce:	e7e4      	b.n	800ef9a <GUI__ConvertColor2Index+0x162>
 800efd0:	f854 0b04 	ldr.w	r0, [r4], #4
 800efd4:	47b0      	blx	r6
 800efd6:	3d01      	subs	r5, #1
 800efd8:	f828 0b02 	strh.w	r0, [r8], #2
 800efdc:	d1f8      	bne.n	800efd0 <GUI__ConvertColor2Index+0x198>
 800efde:	e7e6      	b.n	800efae <GUI__ConvertColor2Index+0x176>

0800efe0 <GUI__CompactPixelIndicesEx>:
 800efe0:	b513      	push	{r0, r1, r4, lr}
 800efe2:	2400      	movs	r4, #0
 800efe4:	9400      	str	r4, [sp, #0]
 800efe6:	f7ff ff27 	bl	800ee38 <GUI__ConvertColor2Index>
 800efea:	b002      	add	sp, #8
 800efec:	bd10      	pop	{r4, pc}

0800efee <_GetCharCode>:
 800efee:	7800      	ldrb	r0, [r0, #0]
 800eff0:	4770      	bx	lr

0800eff2 <_GetCharSize>:
 800eff2:	2001      	movs	r0, #1
 800eff4:	4770      	bx	lr

0800eff6 <_CalcSizeOfChar>:
 800eff6:	2001      	movs	r0, #1
 800eff8:	4770      	bx	lr

0800effa <_Encode>:
 800effa:	7001      	strb	r1, [r0, #0]
 800effc:	2001      	movs	r0, #1
 800effe:	4770      	bx	lr

0800f000 <_Add>:
 800f000:	4a0f      	ldr	r2, [pc, #60]	; (800f040 <_Add+0x40>)
 800f002:	6813      	ldr	r3, [r2, #0]
 800f004:	2b0b      	cmp	r3, #11
 800f006:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f008:	4617      	mov	r7, r2
 800f00a:	dc18      	bgt.n	800f03e <_Add+0x3e>
 800f00c:	2b00      	cmp	r3, #0
 800f00e:	4c0d      	ldr	r4, [pc, #52]	; (800f044 <_Add+0x44>)
 800f010:	dc01      	bgt.n	800f016 <_Add+0x16>
 800f012:	2200      	movs	r2, #0
 800f014:	e00f      	b.n	800f036 <_Add+0x36>
 800f016:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 800f01a:	461a      	mov	r2, r3
 800f01c:	f831 6d02 	ldrh.w	r6, [r1, #-2]!
 800f020:	fa0f fc86 	sxth.w	ip, r6
 800f024:	4584      	cmp	ip, r0
 800f026:	f102 35ff 	add.w	r5, r2, #4294967295
 800f02a:	db04      	blt.n	800f036 <_Add+0x36>
 800f02c:	804e      	strh	r6, [r1, #2]
 800f02e:	2d00      	cmp	r5, #0
 800f030:	d0ef      	beq.n	800f012 <_Add+0x12>
 800f032:	462a      	mov	r2, r5
 800f034:	e7f2      	b.n	800f01c <_Add+0x1c>
 800f036:	3301      	adds	r3, #1
 800f038:	f824 0012 	strh.w	r0, [r4, r2, lsl #1]
 800f03c:	603b      	str	r3, [r7, #0]
 800f03e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f040:	20002c58 	.word	0x20002c58
 800f044:	20002c5c 	.word	0x20002c5c

0800f048 <GL_FillPolygon>:
 800f048:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f04c:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 800f208 <GL_FillPolygon+0x1c0>
 800f050:	9101      	str	r1, [sp, #4]
 800f052:	4692      	mov	sl, r2
 800f054:	4606      	mov	r6, r0
 800f056:	f643 74ff 	movw	r4, #16383	; 0x3fff
 800f05a:	2200      	movs	r2, #0
 800f05c:	9901      	ldr	r1, [sp, #4]
 800f05e:	428a      	cmp	r2, r1
 800f060:	da0b      	bge.n	800f07a <GL_FillPolygon+0x32>
 800f062:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 800f066:	3201      	adds	r2, #1
 800f068:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800f06c:	428c      	cmp	r4, r1
 800f06e:	bfa8      	it	ge
 800f070:	460c      	movge	r4, r1
 800f072:	4589      	cmp	r9, r1
 800f074:	bfb8      	it	lt
 800f076:	4689      	movlt	r9, r1
 800f078:	e7f0      	b.n	800f05c <GL_FillPolygon+0x14>
 800f07a:	4960      	ldr	r1, [pc, #384]	; (800f1fc <GL_FillPolygon+0x1b4>)
 800f07c:	680a      	ldr	r2, [r1, #0]
 800f07e:	6952      	ldr	r2, [r2, #20]
 800f080:	468b      	mov	fp, r1
 800f082:	b15a      	cbz	r2, 800f09c <GL_FillPolygon+0x54>
 800f084:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 800f088:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800f08c:	1ac9      	subs	r1, r1, r3
 800f08e:	1ad2      	subs	r2, r2, r3
 800f090:	4589      	cmp	r9, r1
 800f092:	bfa8      	it	ge
 800f094:	4689      	movge	r9, r1
 800f096:	4294      	cmp	r4, r2
 800f098:	bfb8      	it	lt
 800f09a:	4614      	movlt	r4, r2
 800f09c:	eb04 0803 	add.w	r8, r4, r3
 800f0a0:	454c      	cmp	r4, r9
 800f0a2:	f300 80a7 	bgt.w	800f1f4 <GL_FillPolygon+0x1ac>
 800f0a6:	4b56      	ldr	r3, [pc, #344]	; (800f200 <GL_FillPolygon+0x1b8>)
 800f0a8:	2700      	movs	r7, #0
 800f0aa:	601f      	str	r7, [r3, #0]
 800f0ac:	4635      	mov	r5, r6
 800f0ae:	9901      	ldr	r1, [sp, #4]
 800f0b0:	428f      	cmp	r7, r1
 800f0b2:	da55      	bge.n	800f160 <GL_FillPolygon+0x118>
 800f0b4:	9b01      	ldr	r3, [sp, #4]
 800f0b6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f0ba:	1e59      	subs	r1, r3, #1
 800f0bc:	428f      	cmp	r7, r1
 800f0be:	bfb4      	ite	lt
 800f0c0:	f107 0c01 	addlt.w	ip, r7, #1
 800f0c4:	f04f 0c00 	movge.w	ip, #0
 800f0c8:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800f0cc:	eb06 030c 	add.w	r3, r6, ip
 800f0d0:	42a2      	cmp	r2, r4
 800f0d2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f0d6:	d136      	bne.n	800f146 <GL_FillPolygon+0xfe>
 800f0d8:	42a3      	cmp	r3, r4
 800f0da:	d002      	beq.n	800f0e2 <GL_FillPolygon+0x9a>
 800f0dc:	463a      	mov	r2, r7
 800f0de:	2000      	movs	r0, #0
 800f0e0:	e01b      	b.n	800f11a <GL_FillPolygon+0xd2>
 800f0e2:	f9b5 e000 	ldrsh.w	lr, [r5]
 800f0e6:	f936 200c 	ldrsh.w	r2, [r6, ip]
 800f0ea:	f8db 3000 	ldr.w	r3, [fp]
 800f0ee:	44d6      	add	lr, sl
 800f0f0:	4452      	add	r2, sl
 800f0f2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f0f4:	4596      	cmp	lr, r2
 800f0f6:	681b      	ldr	r3, [r3, #0]
 800f0f8:	da02      	bge.n	800f100 <GL_FillPolygon+0xb8>
 800f0fa:	4670      	mov	r0, lr
 800f0fc:	4641      	mov	r1, r8
 800f0fe:	e020      	b.n	800f142 <GL_FillPolygon+0xfa>
 800f100:	4610      	mov	r0, r2
 800f102:	4641      	mov	r1, r8
 800f104:	4672      	mov	r2, lr
 800f106:	e01c      	b.n	800f142 <GL_FillPolygon+0xfa>
 800f108:	b152      	cbz	r2, 800f120 <GL_FillPolygon+0xd8>
 800f10a:	3a01      	subs	r2, #1
 800f10c:	eb06 0c82 	add.w	ip, r6, r2, lsl #2
 800f110:	f9bc c002 	ldrsh.w	ip, [ip, #2]
 800f114:	45a4      	cmp	ip, r4
 800f116:	d105      	bne.n	800f124 <GL_FillPolygon+0xdc>
 800f118:	3001      	adds	r0, #1
 800f11a:	4288      	cmp	r0, r1
 800f11c:	dbf4      	blt.n	800f108 <GL_FillPolygon+0xc0>
 800f11e:	e01c      	b.n	800f15a <GL_FillPolygon+0x112>
 800f120:	460a      	mov	r2, r1
 800f122:	e7f3      	b.n	800f10c <GL_FillPolygon+0xc4>
 800f124:	ebc4 0c0c 	rsb	ip, r4, ip
 800f128:	1b1b      	subs	r3, r3, r4
 800f12a:	ea9c 0f03 	teq	ip, r3
 800f12e:	f9b5 0000 	ldrsh.w	r0, [r5]
 800f132:	d44d      	bmi.n	800f1d0 <GL_FillPolygon+0x188>
 800f134:	f8db 3000 	ldr.w	r3, [fp]
 800f138:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f13a:	4450      	add	r0, sl
 800f13c:	681b      	ldr	r3, [r3, #0]
 800f13e:	4641      	mov	r1, r8
 800f140:	4602      	mov	r2, r0
 800f142:	4798      	blx	r3
 800f144:	e009      	b.n	800f15a <GL_FillPolygon+0x112>
 800f146:	42a3      	cmp	r3, r4
 800f148:	d007      	beq.n	800f15a <GL_FillPolygon+0x112>
 800f14a:	db44      	blt.n	800f1d6 <GL_FillPolygon+0x18e>
 800f14c:	42a2      	cmp	r2, r4
 800f14e:	dd27      	ble.n	800f1a0 <GL_FillPolygon+0x158>
 800f150:	42a3      	cmp	r3, r4
 800f152:	dd42      	ble.n	800f1da <GL_FillPolygon+0x192>
 800f154:	e001      	b.n	800f15a <GL_FillPolygon+0x112>
 800f156:	42a3      	cmp	r3, r4
 800f158:	dd49      	ble.n	800f1ee <GL_FillPolygon+0x1a6>
 800f15a:	3701      	adds	r7, #1
 800f15c:	3504      	adds	r5, #4
 800f15e:	e7a6      	b.n	800f0ae <GL_FillPolygon+0x66>
 800f160:	2500      	movs	r5, #0
 800f162:	4628      	mov	r0, r5
 800f164:	462f      	mov	r7, r5
 800f166:	4b26      	ldr	r3, [pc, #152]	; (800f200 <GL_FillPolygon+0x1b8>)
 800f168:	681b      	ldr	r3, [r3, #0]
 800f16a:	429f      	cmp	r7, r3
 800f16c:	da14      	bge.n	800f198 <GL_FillPolygon+0x150>
 800f16e:	4b25      	ldr	r3, [pc, #148]	; (800f204 <GL_FillPolygon+0x1bc>)
 800f170:	f933 3017 	ldrsh.w	r3, [r3, r7, lsl #1]
 800f174:	b15d      	cbz	r5, 800f18e <GL_FillPolygon+0x146>
 800f176:	f8db 2000 	ldr.w	r2, [fp]
 800f17a:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800f17c:	4450      	add	r0, sl
 800f17e:	f8d2 c000 	ldr.w	ip, [r2]
 800f182:	9300      	str	r3, [sp, #0]
 800f184:	eb0a 0203 	add.w	r2, sl, r3
 800f188:	4641      	mov	r1, r8
 800f18a:	47e0      	blx	ip
 800f18c:	9b00      	ldr	r3, [sp, #0]
 800f18e:	f085 0501 	eor.w	r5, r5, #1
 800f192:	3701      	adds	r7, #1
 800f194:	4618      	mov	r0, r3
 800f196:	e7e6      	b.n	800f166 <GL_FillPolygon+0x11e>
 800f198:	3401      	adds	r4, #1
 800f19a:	f108 0801 	add.w	r8, r8, #1
 800f19e:	e77f      	b.n	800f0a0 <GL_FillPolygon+0x58>
 800f1a0:	429a      	cmp	r2, r3
 800f1a2:	dcd8      	bgt.n	800f156 <GL_FillPolygon+0x10e>
 800f1a4:	f9b5 1000 	ldrsh.w	r1, [r5]
 800f1a8:	f936 000c 	ldrsh.w	r0, [r6, ip]
 800f1ac:	ebc2 0e04 	rsb	lr, r2, r4
 800f1b0:	1a40      	subs	r0, r0, r1
 800f1b2:	fb0e f000 	mul.w	r0, lr, r0
 800f1b6:	2800      	cmp	r0, #0
 800f1b8:	ebc2 0303 	rsb	r3, r2, r3
 800f1bc:	bfdb      	ittet	le
 800f1be:	105a      	asrle	r2, r3, #1
 800f1c0:	f1c2 0201 	rsble	r2, r2, #1
 800f1c4:	eb00 0063 	addgt.w	r0, r0, r3, asr #1
 800f1c8:	1880      	addle	r0, r0, r2
 800f1ca:	fb90 f0f3 	sdiv	r0, r0, r3
 800f1ce:	4408      	add	r0, r1
 800f1d0:	f7ff ff16 	bl	800f000 <_Add>
 800f1d4:	e7c1      	b.n	800f15a <GL_FillPolygon+0x112>
 800f1d6:	42a2      	cmp	r2, r4
 800f1d8:	dbbf      	blt.n	800f15a <GL_FillPolygon+0x112>
 800f1da:	429a      	cmp	r2, r3
 800f1dc:	ddbd      	ble.n	800f15a <GL_FillPolygon+0x112>
 800f1de:	4696      	mov	lr, r2
 800f1e0:	f936 100c 	ldrsh.w	r1, [r6, ip]
 800f1e4:	f9b5 0000 	ldrsh.w	r0, [r5]
 800f1e8:	461a      	mov	r2, r3
 800f1ea:	4673      	mov	r3, lr
 800f1ec:	e7de      	b.n	800f1ac <GL_FillPolygon+0x164>
 800f1ee:	42a2      	cmp	r2, r4
 800f1f0:	daf5      	bge.n	800f1de <GL_FillPolygon+0x196>
 800f1f2:	e7b2      	b.n	800f15a <GL_FillPolygon+0x112>
 800f1f4:	b003      	add	sp, #12
 800f1f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f1fa:	bf00      	nop
 800f1fc:	200000b8 	.word	0x200000b8
 800f200:	20002c58 	.word	0x20002c58
 800f204:	20002c5c 	.word	0x20002c5c
 800f208:	ffffc001 	.word	0xffffc001

0800f20c <_DrawGradient>:
 800f20c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f210:	b08f      	sub	sp, #60	; 0x3c
 800f212:	4688      	mov	r8, r1
 800f214:	4614      	mov	r4, r2
 800f216:	991a      	ldr	r1, [sp, #104]	; 0x68
 800f218:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800f21a:	f8dd a060 	ldr.w	sl, [sp, #96]	; 0x60
 800f21e:	f8dd b064 	ldr.w	fp, [sp, #100]	; 0x64
 800f222:	9104      	str	r1, [sp, #16]
 800f224:	4605      	mov	r5, r0
 800f226:	461e      	mov	r6, r3
 800f228:	9203      	str	r2, [sp, #12]
 800f22a:	f7fb fc1c 	bl	800aa66 <GUI_GetColor>
 800f22e:	45da      	cmp	sl, fp
 800f230:	9009      	str	r0, [sp, #36]	; 0x24
 800f232:	d109      	bne.n	800f248 <_DrawGradient+0x3c>
 800f234:	4650      	mov	r0, sl
 800f236:	f7f9 fdcf 	bl	8008dd8 <LCD_SetColor>
 800f23a:	9b03      	ldr	r3, [sp, #12]
 800f23c:	b113      	cbz	r3, 800f244 <_DrawGradient+0x38>
 800f23e:	4628      	mov	r0, r5
 800f240:	4641      	mov	r1, r8
 800f242:	e09d      	b.n	800f380 <_DrawGradient+0x174>
 800f244:	4640      	mov	r0, r8
 800f246:	e0a1      	b.n	800f38c <_DrawGradient+0x180>
 800f248:	ebb6 0708 	subs.w	r7, r6, r8
 800f24c:	f000 80b2 	beq.w	800f3b4 <_DrawGradient+0x1a8>
 800f250:	fa5f f28a 	uxtb.w	r2, sl
 800f254:	fa5f f38b 	uxtb.w	r3, fp
 800f258:	1a9b      	subs	r3, r3, r2
 800f25a:	930a      	str	r3, [sp, #40]	; 0x28
 800f25c:	2302      	movs	r3, #2
 800f25e:	fb97 f3f3 	sdiv	r3, r7, r3
 800f262:	fb02 3207 	mla	r2, r2, r7, r3
 800f266:	f3cb 2107 	ubfx	r1, fp, #8, #8
 800f26a:	9205      	str	r2, [sp, #20]
 800f26c:	f3ca 2207 	ubfx	r2, sl, #8, #8
 800f270:	1a89      	subs	r1, r1, r2
 800f272:	fb02 3207 	mla	r2, r2, r7, r3
 800f276:	910b      	str	r1, [sp, #44]	; 0x2c
 800f278:	9206      	str	r2, [sp, #24]
 800f27a:	f3cb 4107 	ubfx	r1, fp, #16, #8
 800f27e:	f3ca 4207 	ubfx	r2, sl, #16, #8
 800f282:	ea4f 6a1a 	mov.w	sl, sl, lsr #24
 800f286:	1a89      	subs	r1, r1, r2
 800f288:	ebca 6b1b 	rsb	fp, sl, fp, lsr #24
 800f28c:	fb02 3207 	mla	r2, r2, r7, r3
 800f290:	fb0a 3a07 	mla	sl, sl, r7, r3
 800f294:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f296:	910c      	str	r1, [sp, #48]	; 0x30
 800f298:	9207      	str	r2, [sp, #28]
 800f29a:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
 800f29e:	f8cd a020 	str.w	sl, [sp, #32]
 800f2a2:	f108 33ff 	add.w	r3, r8, #4294967295
 800f2a6:	f04f 0901 	mov.w	r9, #1
 800f2aa:	f103 0a01 	add.w	sl, r3, #1
 800f2ae:	45b2      	cmp	sl, r6
 800f2b0:	dc5b      	bgt.n	800f36a <_DrawGradient+0x15e>
 800f2b2:	f8dd c014 	ldr.w	ip, [sp, #20]
 800f2b6:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
 800f2ba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f2bc:	fb9c fcf7 	sdiv	ip, ip, r7
 800f2c0:	f8cd c004 	str.w	ip, [sp, #4]
 800f2c4:	f8dd c014 	ldr.w	ip, [sp, #20]
 800f2c8:	44f4      	add	ip, lr
 800f2ca:	f8cd c014 	str.w	ip, [sp, #20]
 800f2ce:	f8dd e02c 	ldr.w	lr, [sp, #44]	; 0x2c
 800f2d2:	f8dd c018 	ldr.w	ip, [sp, #24]
 800f2d6:	fb9c f1f7 	sdiv	r1, ip, r7
 800f2da:	44f4      	add	ip, lr
 800f2dc:	f8cd c018 	str.w	ip, [sp, #24]
 800f2e0:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 800f2e4:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800f2e8:	fb9c fbf7 	sdiv	fp, ip, r7
 800f2ec:	44f4      	add	ip, lr
 800f2ee:	f8cd c01c 	str.w	ip, [sp, #28]
 800f2f2:	f8dd c020 	ldr.w	ip, [sp, #32]
 800f2f6:	fb9c fef7 	sdiv	lr, ip, r7
 800f2fa:	4494      	add	ip, r2
 800f2fc:	f8cd c020 	str.w	ip, [sp, #32]
 800f300:	f8dd c004 	ldr.w	ip, [sp, #4]
 800f304:	ea4f 4b0b 	mov.w	fp, fp, lsl #16
 800f308:	ea4b 6b0e 	orr.w	fp, fp, lr, lsl #24
 800f30c:	ea4c 2201 	orr.w	r2, ip, r1, lsl #8
 800f310:	45c2      	cmp	sl, r8
 800f312:	ea4b 0b02 	orr.w	fp, fp, r2
 800f316:	dd25      	ble.n	800f364 <_DrawGradient+0x158>
 800f318:	4583      	cmp	fp, r0
 800f31a:	d102      	bne.n	800f322 <_DrawGradient+0x116>
 800f31c:	f109 0901 	add.w	r9, r9, #1
 800f320:	e020      	b.n	800f364 <_DrawGradient+0x158>
 800f322:	9302      	str	r3, [sp, #8]
 800f324:	f7f9 fd58 	bl	8008dd8 <LCD_SetColor>
 800f328:	f1b9 0f01 	cmp.w	r9, #1
 800f32c:	9b02      	ldr	r3, [sp, #8]
 800f32e:	d00f      	beq.n	800f350 <_DrawGradient+0x144>
 800f330:	9a03      	ldr	r2, [sp, #12]
 800f332:	ebc9 010a 	rsb	r1, r9, sl
 800f336:	b112      	cbz	r2, 800f33e <_DrawGradient+0x132>
 800f338:	4628      	mov	r0, r5
 800f33a:	4622      	mov	r2, r4
 800f33c:	e003      	b.n	800f346 <_DrawGradient+0x13a>
 800f33e:	4608      	mov	r0, r1
 800f340:	461a      	mov	r2, r3
 800f342:	4629      	mov	r1, r5
 800f344:	4623      	mov	r3, r4
 800f346:	f7f9 fa6f 	bl	8008828 <LCD_FillRect>
 800f34a:	f04f 0901 	mov.w	r9, #1
 800f34e:	e009      	b.n	800f364 <_DrawGradient+0x158>
 800f350:	9903      	ldr	r1, [sp, #12]
 800f352:	b111      	cbz	r1, 800f35a <_DrawGradient+0x14e>
 800f354:	4628      	mov	r0, r5
 800f356:	4619      	mov	r1, r3
 800f358:	e001      	b.n	800f35e <_DrawGradient+0x152>
 800f35a:	4618      	mov	r0, r3
 800f35c:	4629      	mov	r1, r5
 800f35e:	4622      	mov	r2, r4
 800f360:	9b04      	ldr	r3, [sp, #16]
 800f362:	4798      	blx	r3
 800f364:	4653      	mov	r3, sl
 800f366:	4658      	mov	r0, fp
 800f368:	e79f      	b.n	800f2aa <_DrawGradient+0x9e>
 800f36a:	f7f9 fd35 	bl	8008dd8 <LCD_SetColor>
 800f36e:	f1b9 0f01 	cmp.w	r9, #1
 800f372:	d00f      	beq.n	800f394 <_DrawGradient+0x188>
 800f374:	9a03      	ldr	r2, [sp, #12]
 800f376:	ebc9 0106 	rsb	r1, r9, r6
 800f37a:	b132      	cbz	r2, 800f38a <_DrawGradient+0x17e>
 800f37c:	4628      	mov	r0, r5
 800f37e:	3101      	adds	r1, #1
 800f380:	4622      	mov	r2, r4
 800f382:	4633      	mov	r3, r6
 800f384:	f7f9 fa50 	bl	8008828 <LCD_FillRect>
 800f388:	e00e      	b.n	800f3a8 <_DrawGradient+0x19c>
 800f38a:	1c48      	adds	r0, r1, #1
 800f38c:	4629      	mov	r1, r5
 800f38e:	4632      	mov	r2, r6
 800f390:	4623      	mov	r3, r4
 800f392:	e7f7      	b.n	800f384 <_DrawGradient+0x178>
 800f394:	9b03      	ldr	r3, [sp, #12]
 800f396:	b113      	cbz	r3, 800f39e <_DrawGradient+0x192>
 800f398:	4628      	mov	r0, r5
 800f39a:	4631      	mov	r1, r6
 800f39c:	e001      	b.n	800f3a2 <_DrawGradient+0x196>
 800f39e:	4630      	mov	r0, r6
 800f3a0:	4629      	mov	r1, r5
 800f3a2:	4622      	mov	r2, r4
 800f3a4:	9b04      	ldr	r3, [sp, #16]
 800f3a6:	4798      	blx	r3
 800f3a8:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f3aa:	b00f      	add	sp, #60	; 0x3c
 800f3ac:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3b0:	f7f9 bd12 	b.w	8008dd8 <LCD_SetColor>
 800f3b4:	b00f      	add	sp, #60	; 0x3c
 800f3b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800f3bc <GUI_DrawGradientV>:
 800f3bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f3c0:	4c15      	ldr	r4, [pc, #84]	; (800f418 <GUI_DrawGradientV+0x5c>)
 800f3c2:	6824      	ldr	r4, [r4, #0]
 800f3c4:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800f3c6:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800f3c8:	b087      	sub	sp, #28
 800f3ca:	eb00 0905 	add.w	r9, r0, r5
 800f3ce:	eb01 0804 	add.w	r8, r1, r4
 800f3d2:	4415      	add	r5, r2
 800f3d4:	441c      	add	r4, r3
 800f3d6:	a804      	add	r0, sp, #16
 800f3d8:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800f3da:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800f3dc:	f8ad 9010 	strh.w	r9, [sp, #16]
 800f3e0:	f8ad 5014 	strh.w	r5, [sp, #20]
 800f3e4:	f8ad 8012 	strh.w	r8, [sp, #18]
 800f3e8:	f8ad 4016 	strh.w	r4, [sp, #22]
 800f3ec:	f7f6 fcf4 	bl	8005dd8 <WM__InitIVRSearch>
 800f3f0:	b170      	cbz	r0, 800f410 <GUI_DrawGradientV+0x54>
 800f3f2:	4b0a      	ldr	r3, [pc, #40]	; (800f41c <GUI_DrawGradientV+0x60>)
 800f3f4:	9302      	str	r3, [sp, #8]
 800f3f6:	2301      	movs	r3, #1
 800f3f8:	9303      	str	r3, [sp, #12]
 800f3fa:	4648      	mov	r0, r9
 800f3fc:	4641      	mov	r1, r8
 800f3fe:	462a      	mov	r2, r5
 800f400:	4623      	mov	r3, r4
 800f402:	9700      	str	r7, [sp, #0]
 800f404:	9601      	str	r6, [sp, #4]
 800f406:	f7ff ff01 	bl	800f20c <_DrawGradient>
 800f40a:	f7f6 fc23 	bl	8005c54 <WM__GetNextIVR>
 800f40e:	e7ef      	b.n	800f3f0 <GUI_DrawGradientV+0x34>
 800f410:	b007      	add	sp, #28
 800f412:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f416:	bf00      	nop
 800f418:	200000b8 	.word	0x200000b8
 800f41c:	08008791 	.word	0x08008791

0800f420 <GUI_DrawGradientH>:
 800f420:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f424:	4c15      	ldr	r4, [pc, #84]	; (800f47c <GUI_DrawGradientH+0x5c>)
 800f426:	6825      	ldr	r5, [r4, #0]
 800f428:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 800f42a:	6d2d      	ldr	r5, [r5, #80]	; 0x50
 800f42c:	b087      	sub	sp, #28
 800f42e:	eb00 0804 	add.w	r8, r0, r4
 800f432:	eb01 0905 	add.w	r9, r1, r5
 800f436:	4414      	add	r4, r2
 800f438:	441d      	add	r5, r3
 800f43a:	a804      	add	r0, sp, #16
 800f43c:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800f43e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800f440:	f8ad 8010 	strh.w	r8, [sp, #16]
 800f444:	f8ad 4014 	strh.w	r4, [sp, #20]
 800f448:	f8ad 9012 	strh.w	r9, [sp, #18]
 800f44c:	f8ad 5016 	strh.w	r5, [sp, #22]
 800f450:	f7f6 fcc2 	bl	8005dd8 <WM__InitIVRSearch>
 800f454:	b170      	cbz	r0, 800f474 <GUI_DrawGradientH+0x54>
 800f456:	4b0a      	ldr	r3, [pc, #40]	; (800f480 <GUI_DrawGradientH+0x60>)
 800f458:	9302      	str	r3, [sp, #8]
 800f45a:	2300      	movs	r3, #0
 800f45c:	9303      	str	r3, [sp, #12]
 800f45e:	4648      	mov	r0, r9
 800f460:	4641      	mov	r1, r8
 800f462:	462a      	mov	r2, r5
 800f464:	4623      	mov	r3, r4
 800f466:	9700      	str	r7, [sp, #0]
 800f468:	9601      	str	r6, [sp, #4]
 800f46a:	f7ff fecf 	bl	800f20c <_DrawGradient>
 800f46e:	f7f6 fbf1 	bl	8005c54 <WM__GetNextIVR>
 800f472:	e7ef      	b.n	800f454 <GUI_DrawGradientH+0x34>
 800f474:	b007      	add	sp, #28
 800f476:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f47a:	bf00      	nop
 800f47c:	200000b8 	.word	0x200000b8
 800f480:	080087dd 	.word	0x080087dd

0800f484 <_GetIndexMask_0>:
 800f484:	b508      	push	{r3, lr}
 800f486:	f7f9 f88d 	bl	80085a4 <LCD_GetNumColors>
 800f48a:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 800f48e:	d010      	beq.n	800f4b2 <_GetIndexMask_0+0x2e>
 800f490:	287f      	cmp	r0, #127	; 0x7f
 800f492:	d810      	bhi.n	800f4b6 <_GetIndexMask_0+0x32>
 800f494:	283f      	cmp	r0, #63	; 0x3f
 800f496:	d810      	bhi.n	800f4ba <_GetIndexMask_0+0x36>
 800f498:	281f      	cmp	r0, #31
 800f49a:	d810      	bhi.n	800f4be <_GetIndexMask_0+0x3a>
 800f49c:	280f      	cmp	r0, #15
 800f49e:	d810      	bhi.n	800f4c2 <_GetIndexMask_0+0x3e>
 800f4a0:	2807      	cmp	r0, #7
 800f4a2:	d810      	bhi.n	800f4c6 <_GetIndexMask_0+0x42>
 800f4a4:	2803      	cmp	r0, #3
 800f4a6:	d810      	bhi.n	800f4ca <_GetIndexMask_0+0x46>
 800f4a8:	2801      	cmp	r0, #1
 800f4aa:	bf94      	ite	ls
 800f4ac:	2000      	movls	r0, #0
 800f4ae:	2001      	movhi	r0, #1
 800f4b0:	e00c      	b.n	800f4cc <_GetIndexMask_0+0x48>
 800f4b2:	2008      	movs	r0, #8
 800f4b4:	e00a      	b.n	800f4cc <_GetIndexMask_0+0x48>
 800f4b6:	2007      	movs	r0, #7
 800f4b8:	e008      	b.n	800f4cc <_GetIndexMask_0+0x48>
 800f4ba:	2006      	movs	r0, #6
 800f4bc:	e006      	b.n	800f4cc <_GetIndexMask_0+0x48>
 800f4be:	2005      	movs	r0, #5
 800f4c0:	e004      	b.n	800f4cc <_GetIndexMask_0+0x48>
 800f4c2:	2004      	movs	r0, #4
 800f4c4:	e002      	b.n	800f4cc <_GetIndexMask_0+0x48>
 800f4c6:	2003      	movs	r0, #3
 800f4c8:	e000      	b.n	800f4cc <_GetIndexMask_0+0x48>
 800f4ca:	2002      	movs	r0, #2
 800f4cc:	2301      	movs	r3, #1
 800f4ce:	fa03 f000 	lsl.w	r0, r3, r0
 800f4d2:	3801      	subs	r0, #1
 800f4d4:	bd08      	pop	{r3, pc}

0800f4d6 <_Index2Color_0>:
 800f4d6:	b538      	push	{r3, r4, r5, lr}
 800f4d8:	4604      	mov	r4, r0
 800f4da:	f7f9 f863 	bl	80085a4 <LCD_GetNumColors>
 800f4de:	4605      	mov	r5, r0
 800f4e0:	f7f9 f87e 	bl	80085e0 <LCD_GetPalette>
 800f4e4:	42ac      	cmp	r4, r5
 800f4e6:	d203      	bcs.n	800f4f0 <_Index2Color_0+0x1a>
 800f4e8:	b118      	cbz	r0, 800f4f2 <_Index2Color_0+0x1c>
 800f4ea:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800f4ee:	bd38      	pop	{r3, r4, r5, pc}
 800f4f0:	2000      	movs	r0, #0
 800f4f2:	bd38      	pop	{r3, r4, r5, pc}

0800f4f4 <_Color2Index_0>:
 800f4f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f4f8:	4682      	mov	sl, r0
 800f4fa:	f7f9 f853 	bl	80085a4 <LCD_GetNumColors>
 800f4fe:	4681      	mov	r9, r0
 800f500:	f7f9 f86e 	bl	80085e0 <LCD_GetPalette>
 800f504:	4605      	mov	r5, r0
 800f506:	b1e0      	cbz	r0, 800f542 <_Color2Index_0+0x4e>
 800f508:	2300      	movs	r3, #0
 800f50a:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
 800f50e:	4592      	cmp	sl, r2
 800f510:	d019      	beq.n	800f546 <_Color2Index_0+0x52>
 800f512:	3301      	adds	r3, #1
 800f514:	454b      	cmp	r3, r9
 800f516:	dbf8      	blt.n	800f50a <_Color2Index_0+0x16>
 800f518:	2700      	movs	r7, #0
 800f51a:	f06f 487f 	mvn.w	r8, #4278190080	; 0xff000000
 800f51e:	463c      	mov	r4, r7
 800f520:	f855 1024 	ldr.w	r1, [r5, r4, lsl #2]
 800f524:	4650      	mov	r0, sl
 800f526:	f7fb fa6b 	bl	800aa00 <GUI_CalcColorDist>
 800f52a:	4626      	mov	r6, r4
 800f52c:	4540      	cmp	r0, r8
 800f52e:	f104 0401 	add.w	r4, r4, #1
 800f532:	bf24      	itt	cs
 800f534:	4640      	movcs	r0, r8
 800f536:	463e      	movcs	r6, r7
 800f538:	454c      	cmp	r4, r9
 800f53a:	da07      	bge.n	800f54c <_Color2Index_0+0x58>
 800f53c:	4680      	mov	r8, r0
 800f53e:	4637      	mov	r7, r6
 800f540:	e7ee      	b.n	800f520 <_Color2Index_0+0x2c>
 800f542:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f546:	4618      	mov	r0, r3
 800f548:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f54c:	4630      	mov	r0, r6
 800f54e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800f554 <_DrawDownRect>:
 800f554:	b510      	push	{r4, lr}
 800f556:	b09c      	sub	sp, #112	; 0x70
 800f558:	4604      	mov	r4, r0
 800f55a:	4668      	mov	r0, sp
 800f55c:	f7fb fb38 	bl	800abd0 <GUI_SaveContext_W>
 800f560:	4b09      	ldr	r3, [pc, #36]	; (800f588 <_DrawDownRect+0x34>)
 800f562:	6818      	ldr	r0, [r3, #0]
 800f564:	f7f9 fc38 	bl	8008dd8 <LCD_SetColor>
 800f568:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f56c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f570:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f574:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f578:	f7fc f9ea 	bl	800b950 <GUI_DrawRect>
 800f57c:	4668      	mov	r0, sp
 800f57e:	f7fb fb31 	bl	800abe4 <GUI_RestoreContext>
 800f582:	b01c      	add	sp, #112	; 0x70
 800f584:	bd10      	pop	{r4, pc}
 800f586:	bf00      	nop
 800f588:	20002c74 	.word	0x20002c74

0800f58c <_DrawUpRect>:
 800f58c:	b510      	push	{r4, lr}
 800f58e:	b09c      	sub	sp, #112	; 0x70
 800f590:	4604      	mov	r4, r0
 800f592:	4668      	mov	r0, sp
 800f594:	f7fb fb1c 	bl	800abd0 <GUI_SaveContext_W>
 800f598:	4b09      	ldr	r3, [pc, #36]	; (800f5c0 <_DrawUpRect+0x34>)
 800f59a:	6818      	ldr	r0, [r3, #0]
 800f59c:	f7f9 fc1c 	bl	8008dd8 <LCD_SetColor>
 800f5a0:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f5a4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f5a8:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f5ac:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f5b0:	f7fc f9ce 	bl	800b950 <GUI_DrawRect>
 800f5b4:	4668      	mov	r0, sp
 800f5b6:	f7fb fb15 	bl	800abe4 <GUI_RestoreContext>
 800f5ba:	b01c      	add	sp, #112	; 0x70
 800f5bc:	bd10      	pop	{r4, pc}
 800f5be:	bf00      	nop
 800f5c0:	20002c74 	.word	0x20002c74

0800f5c4 <_DrawDown>:
 800f5c4:	b507      	push	{r0, r1, r2, lr}
 800f5c6:	4668      	mov	r0, sp
 800f5c8:	f7f5 f8d4 	bl	8004774 <WM_GetClientRect>
 800f5cc:	4668      	mov	r0, sp
 800f5ce:	f7ff ffc1 	bl	800f554 <_DrawDownRect>
 800f5d2:	b003      	add	sp, #12
 800f5d4:	f85d fb04 	ldr.w	pc, [sp], #4

0800f5d8 <_DrawUp>:
 800f5d8:	b507      	push	{r0, r1, r2, lr}
 800f5da:	4668      	mov	r0, sp
 800f5dc:	f7f5 f8ca 	bl	8004774 <WM_GetClientRect>
 800f5e0:	4668      	mov	r0, sp
 800f5e2:	f7ff ffd3 	bl	800f58c <_DrawUpRect>
 800f5e6:	b003      	add	sp, #12
 800f5e8:	f85d fb04 	ldr.w	pc, [sp], #4

0800f5ec <_GetArrowPara>:
 800f5ec:	b510      	push	{r4, lr}
 800f5ee:	b121      	cbz	r1, 800f5fa <_GetArrowPara+0xe>
 800f5f0:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800f5f4:	f9b0 1000 	ldrsh.w	r1, [r0]
 800f5f8:	e003      	b.n	800f602 <_GetArrowPara+0x16>
 800f5fa:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800f5fe:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f602:	1a61      	subs	r1, r4, r1
 800f604:	3101      	adds	r1, #1
 800f606:	1f0c      	subs	r4, r1, #4
 800f608:	2003      	movs	r0, #3
 800f60a:	fb94 f0f0 	sdiv	r0, r4, r0
 800f60e:	6010      	str	r0, [r2, #0]
 800f610:	1a08      	subs	r0, r1, r0
 800f612:	eba1 0160 	sub.w	r1, r1, r0, asr #1
 800f616:	3901      	subs	r1, #1
 800f618:	6019      	str	r1, [r3, #0]
 800f61a:	bd10      	pop	{r4, pc}

0800f61c <_DrawGraspH>:
 800f61c:	b570      	push	{r4, r5, r6, lr}
 800f61e:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f622:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800f626:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 800f62a:	441e      	add	r6, r3
 800f62c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800f630:	6a88      	ldr	r0, [r1, #40]	; 0x28
 800f632:	1b5c      	subs	r4, r3, r5
 800f634:	3403      	adds	r4, #3
 800f636:	10a4      	asrs	r4, r4, #2
 800f638:	4425      	add	r5, r4
 800f63a:	1076      	asrs	r6, r6, #1
 800f63c:	1b1c      	subs	r4, r3, r4
 800f63e:	f7fb fae6 	bl	800ac0e <GUI_SetColor>
 800f642:	4630      	mov	r0, r6
 800f644:	4629      	mov	r1, r5
 800f646:	4622      	mov	r2, r4
 800f648:	f7fa fc1a 	bl	8009e80 <GUI_DrawVLine>
 800f64c:	1cb0      	adds	r0, r6, #2
 800f64e:	4629      	mov	r1, r5
 800f650:	4622      	mov	r2, r4
 800f652:	f7fa fc15 	bl	8009e80 <GUI_DrawVLine>
 800f656:	1d30      	adds	r0, r6, #4
 800f658:	4629      	mov	r1, r5
 800f65a:	4622      	mov	r2, r4
 800f65c:	f7fa fc10 	bl	8009e80 <GUI_DrawVLine>
 800f660:	1eb0      	subs	r0, r6, #2
 800f662:	4629      	mov	r1, r5
 800f664:	4622      	mov	r2, r4
 800f666:	f7fa fc0b 	bl	8009e80 <GUI_DrawVLine>
 800f66a:	1f30      	subs	r0, r6, #4
 800f66c:	4629      	mov	r1, r5
 800f66e:	4622      	mov	r2, r4
 800f670:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f674:	f7fa bc04 	b.w	8009e80 <GUI_DrawVLine>

0800f678 <_DrawGraspV>:
 800f678:	b570      	push	{r4, r5, r6, lr}
 800f67a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800f67e:	f9b0 6006 	ldrsh.w	r6, [r0, #6]
 800f682:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f686:	441e      	add	r6, r3
 800f688:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f68c:	6a88      	ldr	r0, [r1, #40]	; 0x28
 800f68e:	1b5c      	subs	r4, r3, r5
 800f690:	3403      	adds	r4, #3
 800f692:	10a4      	asrs	r4, r4, #2
 800f694:	4425      	add	r5, r4
 800f696:	1076      	asrs	r6, r6, #1
 800f698:	1b1c      	subs	r4, r3, r4
 800f69a:	f7fb fab8 	bl	800ac0e <GUI_SetColor>
 800f69e:	4630      	mov	r0, r6
 800f6a0:	4629      	mov	r1, r5
 800f6a2:	4622      	mov	r2, r4
 800f6a4:	f7fa fb92 	bl	8009dcc <GUI_DrawHLine>
 800f6a8:	1cb0      	adds	r0, r6, #2
 800f6aa:	4629      	mov	r1, r5
 800f6ac:	4622      	mov	r2, r4
 800f6ae:	f7fa fb8d 	bl	8009dcc <GUI_DrawHLine>
 800f6b2:	1d30      	adds	r0, r6, #4
 800f6b4:	4629      	mov	r1, r5
 800f6b6:	4622      	mov	r2, r4
 800f6b8:	f7fa fb88 	bl	8009dcc <GUI_DrawHLine>
 800f6bc:	1eb0      	subs	r0, r6, #2
 800f6be:	4629      	mov	r1, r5
 800f6c0:	4622      	mov	r2, r4
 800f6c2:	f7fa fb83 	bl	8009dcc <GUI_DrawHLine>
 800f6c6:	1f30      	subs	r0, r6, #4
 800f6c8:	4629      	mov	r1, r5
 800f6ca:	4622      	mov	r2, r4
 800f6cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f6d0:	f7fa bb7c 	b.w	8009dcc <GUI_DrawHLine>

0800f6d4 <_DrawFrame>:
 800f6d4:	b538      	push	{r3, r4, r5, lr}
 800f6d6:	4604      	mov	r4, r0
 800f6d8:	6808      	ldr	r0, [r1, #0]
 800f6da:	460d      	mov	r5, r1
 800f6dc:	f7fb fa97 	bl	800ac0e <GUI_SetColor>
 800f6e0:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f6e4:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f6e8:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 800f6ec:	3101      	adds	r1, #1
 800f6ee:	3a01      	subs	r2, #1
 800f6f0:	f7fa fb6c 	bl	8009dcc <GUI_DrawHLine>
 800f6f4:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f6f8:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f6fc:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 800f700:	3101      	adds	r1, #1
 800f702:	3a01      	subs	r2, #1
 800f704:	f7fa fb62 	bl	8009dcc <GUI_DrawHLine>
 800f708:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f70c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f710:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f714:	3101      	adds	r1, #1
 800f716:	3a01      	subs	r2, #1
 800f718:	f7fa fbb2 	bl	8009e80 <GUI_DrawVLine>
 800f71c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f720:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f724:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f728:	3101      	adds	r1, #1
 800f72a:	3a01      	subs	r2, #1
 800f72c:	f7fa fba8 	bl	8009e80 <GUI_DrawVLine>
 800f730:	6868      	ldr	r0, [r5, #4]
 800f732:	f7fb fa6c 	bl	800ac0e <GUI_SetColor>
 800f736:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 800f73a:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f73e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f742:	3001      	adds	r0, #1
 800f744:	3101      	adds	r1, #1
 800f746:	3a01      	subs	r2, #1
 800f748:	f7fa fb40 	bl	8009dcc <GUI_DrawHLine>
 800f74c:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 800f750:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f754:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f758:	3801      	subs	r0, #1
 800f75a:	3101      	adds	r1, #1
 800f75c:	3a01      	subs	r2, #1
 800f75e:	f7fa fb35 	bl	8009dcc <GUI_DrawHLine>
 800f762:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f766:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f76a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f76e:	3001      	adds	r0, #1
 800f770:	3102      	adds	r1, #2
 800f772:	3a02      	subs	r2, #2
 800f774:	f7fa fb84 	bl	8009e80 <GUI_DrawVLine>
 800f778:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f77c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f780:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f784:	3102      	adds	r1, #2
 800f786:	3a02      	subs	r2, #2
 800f788:	3801      	subs	r0, #1
 800f78a:	f7fa fb79 	bl	8009e80 <GUI_DrawVLine>
 800f78e:	68a8      	ldr	r0, [r5, #8]
 800f790:	f7fb fa3d 	bl	800ac0e <GUI_SetColor>
 800f794:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f798:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f79c:	f7fa fb3a 	bl	8009e14 <GUI_DrawPixel>
 800f7a0:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f7a4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800f7a8:	f7fa fb34 	bl	8009e14 <GUI_DrawPixel>
 800f7ac:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f7b0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f7b4:	f7fa fb2e 	bl	8009e14 <GUI_DrawPixel>
 800f7b8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f7bc:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800f7c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f7c4:	f7fa bb26 	b.w	8009e14 <GUI_DrawPixel>

0800f7c8 <_DrawBackgroundH>:
 800f7c8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f7ca:	4604      	mov	r4, r0
 800f7cc:	460d      	mov	r5, r1
 800f7ce:	f7ff ff81 	bl	800f6d4 <_DrawFrame>
 800f7d2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f7d6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f7da:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f7de:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f7e2:	68ee      	ldr	r6, [r5, #12]
 800f7e4:	9600      	str	r6, [sp, #0]
 800f7e6:	440b      	add	r3, r1
 800f7e8:	692e      	ldr	r6, [r5, #16]
 800f7ea:	9601      	str	r6, [sp, #4]
 800f7ec:	3002      	adds	r0, #2
 800f7ee:	3102      	adds	r1, #2
 800f7f0:	3a02      	subs	r2, #2
 800f7f2:	105b      	asrs	r3, r3, #1
 800f7f4:	f7ff fde2 	bl	800f3bc <GUI_DrawGradientV>
 800f7f8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f7fc:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f800:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f804:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f808:	696c      	ldr	r4, [r5, #20]
 800f80a:	9400      	str	r4, [sp, #0]
 800f80c:	4419      	add	r1, r3
 800f80e:	69ac      	ldr	r4, [r5, #24]
 800f810:	9401      	str	r4, [sp, #4]
 800f812:	1049      	asrs	r1, r1, #1
 800f814:	3002      	adds	r0, #2
 800f816:	3101      	adds	r1, #1
 800f818:	3a02      	subs	r2, #2
 800f81a:	3b02      	subs	r3, #2
 800f81c:	f7ff fdce 	bl	800f3bc <GUI_DrawGradientV>
 800f820:	b002      	add	sp, #8
 800f822:	bd70      	pop	{r4, r5, r6, pc}

0800f824 <_DrawBackgroundV>:
 800f824:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f826:	4604      	mov	r4, r0
 800f828:	460d      	mov	r5, r1
 800f82a:	f7ff ff53 	bl	800f6d4 <_DrawFrame>
 800f82e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f832:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f836:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f83a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f83e:	68ee      	ldr	r6, [r5, #12]
 800f840:	9600      	str	r6, [sp, #0]
 800f842:	4402      	add	r2, r0
 800f844:	692e      	ldr	r6, [r5, #16]
 800f846:	9601      	str	r6, [sp, #4]
 800f848:	3002      	adds	r0, #2
 800f84a:	3102      	adds	r1, #2
 800f84c:	1052      	asrs	r2, r2, #1
 800f84e:	3b02      	subs	r3, #2
 800f850:	f7ff fde6 	bl	800f420 <GUI_DrawGradientH>
 800f854:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f858:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f85c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f860:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f864:	696c      	ldr	r4, [r5, #20]
 800f866:	9400      	str	r4, [sp, #0]
 800f868:	4410      	add	r0, r2
 800f86a:	69ac      	ldr	r4, [r5, #24]
 800f86c:	9401      	str	r4, [sp, #4]
 800f86e:	1040      	asrs	r0, r0, #1
 800f870:	3001      	adds	r0, #1
 800f872:	3102      	adds	r1, #2
 800f874:	3a02      	subs	r2, #2
 800f876:	3b02      	subs	r3, #2
 800f878:	f7ff fdd2 	bl	800f420 <GUI_DrawGradientH>
 800f87c:	b002      	add	sp, #8
 800f87e:	bd70      	pop	{r4, r5, r6, pc}

0800f880 <SCROLLBAR_DrawSkinFlex>:
 800f880:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f884:	4604      	mov	r4, r0
 800f886:	b08b      	sub	sp, #44	; 0x2c
 800f888:	6800      	ldr	r0, [r0, #0]
 800f88a:	f7fb fe21 	bl	800b4d0 <GUI_ALLOC_LockH>
 800f88e:	4607      	mov	r7, r0
 800f890:	a80a      	add	r0, sp, #40	; 0x28
 800f892:	ae06      	add	r6, sp, #24
 800f894:	f840 7d1c 	str.w	r7, [r0, #-28]!
 800f898:	f7fb fe28 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800f89c:	6923      	ldr	r3, [r4, #16]
 800f89e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f8a2:	6963      	ldr	r3, [r4, #20]
 800f8a4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f8a8:	69a3      	ldr	r3, [r4, #24]
 800f8aa:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f8ae:	69e3      	ldr	r3, [r4, #28]
 800f8b0:	f8ad 301e 	strh.w	r3, [sp, #30]
 800f8b4:	6a25      	ldr	r5, [r4, #32]
 800f8b6:	e896 0003 	ldmia.w	r6, {r0, r1}
 800f8ba:	682b      	ldr	r3, [r5, #0]
 800f8bc:	f10d 0820 	add.w	r8, sp, #32
 800f8c0:	e888 0003 	stmia.w	r8, {r0, r1}
 800f8c4:	b153      	cbz	r3, 800f8dc <SCROLLBAR_DrawSkinFlex+0x5c>
 800f8c6:	4638      	mov	r0, r7
 800f8c8:	4631      	mov	r1, r6
 800f8ca:	4632      	mov	r2, r6
 800f8cc:	f7fc f94d 	bl	800bb6a <WIDGET__RotateRect90>
 800f8d0:	f8df 913c 	ldr.w	r9, [pc, #316]	; 800fa10 <SCROLLBAR_DrawSkinFlex+0x190>
 800f8d4:	f8df c13c 	ldr.w	ip, [pc, #316]	; 800fa14 <SCROLLBAR_DrawSkinFlex+0x194>
 800f8d8:	4b49      	ldr	r3, [pc, #292]	; (800fa00 <SCROLLBAR_DrawSkinFlex+0x180>)
 800f8da:	e004      	b.n	800f8e6 <SCROLLBAR_DrawSkinFlex+0x66>
 800f8dc:	f8df 9138 	ldr.w	r9, [pc, #312]	; 800fa18 <SCROLLBAR_DrawSkinFlex+0x198>
 800f8e0:	f8df c138 	ldr.w	ip, [pc, #312]	; 800fa1c <SCROLLBAR_DrawSkinFlex+0x19c>
 800f8e4:	4b47      	ldr	r3, [pc, #284]	; (800fa04 <SCROLLBAR_DrawSkinFlex+0x184>)
 800f8e6:	6862      	ldr	r2, [r4, #4]
 800f8e8:	3a08      	subs	r2, #8
 800f8ea:	2a11      	cmp	r2, #17
 800f8ec:	f200 8083 	bhi.w	800f9f6 <SCROLLBAR_DrawSkinFlex+0x176>
 800f8f0:	e8df f002 	tbb	[pc, r2]
 800f8f4:	81815f13 	.word	0x81815f13
 800f8f8:	81818134 	.word	0x81818134
 800f8fc:	43813434 	.word	0x43813434
 800f900:	81818181 	.word	0x81818181
 800f904:	0981      	.short	0x0981
 800f906:	682b      	ldr	r3, [r5, #0]
 800f908:	b113      	cbz	r3, 800f910 <SCROLLBAR_DrawSkinFlex+0x90>
 800f90a:	69a0      	ldr	r0, [r4, #24]
 800f90c:	6923      	ldr	r3, [r4, #16]
 800f90e:	e001      	b.n	800f914 <SCROLLBAR_DrawSkinFlex+0x94>
 800f910:	69e0      	ldr	r0, [r4, #28]
 800f912:	6963      	ldr	r3, [r4, #20]
 800f914:	1ac0      	subs	r0, r0, r3
 800f916:	3001      	adds	r0, #1
 800f918:	e06e      	b.n	800f9f8 <SCROLLBAR_DrawSkinFlex+0x178>
 800f91a:	686a      	ldr	r2, [r5, #4]
 800f91c:	493a      	ldr	r1, [pc, #232]	; (800fa08 <SCROLLBAR_DrawSkinFlex+0x188>)
 800f91e:	4c3b      	ldr	r4, [pc, #236]	; (800fa0c <SCROLLBAR_DrawSkinFlex+0x18c>)
 800f920:	2a02      	cmp	r2, #2
 800f922:	bf08      	it	eq
 800f924:	460c      	moveq	r4, r1
 800f926:	4630      	mov	r0, r6
 800f928:	4621      	mov	r1, r4
 800f92a:	4798      	blx	r3
 800f92c:	6829      	ldr	r1, [r5, #0]
 800f92e:	aa04      	add	r2, sp, #16
 800f930:	ab05      	add	r3, sp, #20
 800f932:	4640      	mov	r0, r8
 800f934:	f7ff fe5a 	bl	800f5ec <_GetArrowPara>
 800f938:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800f93a:	f7fb f968 	bl	800ac0e <GUI_SetColor>
 800f93e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800f942:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 800f946:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 800f94a:	1ad2      	subs	r2, r2, r3
 800f94c:	f04f 33ff 	mov.w	r3, #4294967295
 800f950:	9300      	str	r3, [sp, #0]
 800f952:	9b05      	ldr	r3, [sp, #20]
 800f954:	3201      	adds	r2, #1
 800f956:	4638      	mov	r0, r7
 800f958:	4419      	add	r1, r3
 800f95a:	e048      	b.n	800f9ee <SCROLLBAR_DrawSkinFlex+0x16e>
 800f95c:	4c2b      	ldr	r4, [pc, #172]	; (800fa0c <SCROLLBAR_DrawSkinFlex+0x18c>)
 800f95e:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800f962:	69e5      	ldr	r5, [r4, #28]
 800f964:	9500      	str	r5, [sp, #0]
 800f966:	6a24      	ldr	r4, [r4, #32]
 800f968:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800f96c:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 800f970:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800f974:	9401      	str	r4, [sp, #4]
 800f976:	47e0      	blx	ip
 800f978:	e03d      	b.n	800f9f6 <SCROLLBAR_DrawSkinFlex+0x176>
 800f97a:	686a      	ldr	r2, [r5, #4]
 800f97c:	4922      	ldr	r1, [pc, #136]	; (800fa08 <SCROLLBAR_DrawSkinFlex+0x188>)
 800f97e:	4c23      	ldr	r4, [pc, #140]	; (800fa0c <SCROLLBAR_DrawSkinFlex+0x18c>)
 800f980:	2a03      	cmp	r2, #3
 800f982:	bf08      	it	eq
 800f984:	460c      	moveq	r4, r1
 800f986:	4630      	mov	r0, r6
 800f988:	4621      	mov	r1, r4
 800f98a:	4798      	blx	r3
 800f98c:	682b      	ldr	r3, [r5, #0]
 800f98e:	b123      	cbz	r3, 800f99a <SCROLLBAR_DrawSkinFlex+0x11a>
 800f990:	f9bd 201e 	ldrsh.w	r2, [sp, #30]
 800f994:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800f998:	e003      	b.n	800f9a2 <SCROLLBAR_DrawSkinFlex+0x122>
 800f99a:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 800f99e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f9a2:	1ad3      	subs	r3, r2, r3
 800f9a4:	3301      	adds	r3, #1
 800f9a6:	2b0e      	cmp	r3, #14
 800f9a8:	dd25      	ble.n	800f9f6 <SCROLLBAR_DrawSkinFlex+0x176>
 800f9aa:	4630      	mov	r0, r6
 800f9ac:	4621      	mov	r1, r4
 800f9ae:	47c8      	blx	r9
 800f9b0:	e021      	b.n	800f9f6 <SCROLLBAR_DrawSkinFlex+0x176>
 800f9b2:	686a      	ldr	r2, [r5, #4]
 800f9b4:	4914      	ldr	r1, [pc, #80]	; (800fa08 <SCROLLBAR_DrawSkinFlex+0x188>)
 800f9b6:	4c15      	ldr	r4, [pc, #84]	; (800fa0c <SCROLLBAR_DrawSkinFlex+0x18c>)
 800f9b8:	2a01      	cmp	r2, #1
 800f9ba:	bf08      	it	eq
 800f9bc:	460c      	moveq	r4, r1
 800f9be:	4630      	mov	r0, r6
 800f9c0:	4621      	mov	r1, r4
 800f9c2:	4798      	blx	r3
 800f9c4:	6829      	ldr	r1, [r5, #0]
 800f9c6:	aa04      	add	r2, sp, #16
 800f9c8:	ab05      	add	r3, sp, #20
 800f9ca:	4640      	mov	r0, r8
 800f9cc:	f7ff fe0e 	bl	800f5ec <_GetArrowPara>
 800f9d0:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800f9d2:	f7fb f91c 	bl	800ac0e <GUI_SetColor>
 800f9d6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800f9da:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 800f9de:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	; 0x24
 800f9e2:	1ad2      	subs	r2, r2, r3
 800f9e4:	2301      	movs	r3, #1
 800f9e6:	9300      	str	r3, [sp, #0]
 800f9e8:	9b05      	ldr	r3, [sp, #20]
 800f9ea:	4638      	mov	r0, r7
 800f9ec:	1ac9      	subs	r1, r1, r3
 800f9ee:	1052      	asrs	r2, r2, #1
 800f9f0:	9b04      	ldr	r3, [sp, #16]
 800f9f2:	f7fc f9eb 	bl	800bdcc <WIDGET__DrawTriangle>
 800f9f6:	2000      	movs	r0, #0
 800f9f8:	b00b      	add	sp, #44	; 0x2c
 800f9fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f9fe:	bf00      	nop
 800fa00:	0800f825 	.word	0x0800f825
 800fa04:	0800f7c9 	.word	0x0800f7c9
 800fa08:	20000194 	.word	0x20000194
 800fa0c:	200001c0 	.word	0x200001c0
 800fa10:	0800f679 	.word	0x0800f679
 800fa14:	0800f421 	.word	0x0800f421
 800fa18:	0800f61d 	.word	0x0800f61d
 800fa1c:	0800f3bd 	.word	0x0800f3bd

0800fa20 <_Create>:
 800fa20:	b530      	push	{r4, r5, lr}
 800fa22:	b08d      	sub	sp, #52	; 0x34
 800fa24:	4605      	mov	r5, r0
 800fa26:	f7fb fd53 	bl	800b4d0 <GUI_ALLOC_LockH>
 800fa2a:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800fa2c:	6c04      	ldr	r4, [r0, #64]	; 0x40
 800fa2e:	9000      	str	r0, [sp, #0]
 800fa30:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800fa34:	9301      	str	r3, [sp, #4]
 800fa36:	4b07      	ldr	r3, [pc, #28]	; (800fa54 <_Create+0x34>)
 800fa38:	6483      	str	r3, [r0, #72]	; 0x48
 800fa3a:	4668      	mov	r0, sp
 800fa3c:	f7fb fd56 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800fa40:	2300      	movs	r3, #0
 800fa42:	9304      	str	r3, [sp, #16]
 800fa44:	ab01      	add	r3, sp, #4
 800fa46:	9503      	str	r5, [sp, #12]
 800fa48:	930b      	str	r3, [sp, #44]	; 0x2c
 800fa4a:	a803      	add	r0, sp, #12
 800fa4c:	47a0      	blx	r4
 800fa4e:	b00d      	add	sp, #52	; 0x34
 800fa50:	bd30      	pop	{r4, r5, pc}
 800fa52:	bf00      	nop
 800fa54:	0800fa59 	.word	0x0800fa59

0800fa58 <_CalcPositions>:
 800fa58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fa5c:	b090      	sub	sp, #64	; 0x40
 800fa5e:	4605      	mov	r5, r0
 800fa60:	460c      	mov	r4, r1
 800fa62:	f7fb fd35 	bl	800b4d0 <GUI_ALLOC_LockH>
 800fa66:	4603      	mov	r3, r0
 800fa68:	9000      	str	r0, [sp, #0]
 800fa6a:	c803      	ldmia	r0, {r0, r1}
 800fa6c:	ae03      	add	r6, sp, #12
 800fa6e:	e886 0003 	stmia.w	r6, {r0, r1}
 800fa72:	8e58      	ldrh	r0, [r3, #50]	; 0x32
 800fa74:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800fa78:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 800fa7c:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800fa80:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 800fa84:	920e      	str	r2, [sp, #56]	; 0x38
 800fa86:	f000 0008 	and.w	r0, r0, #8
 800fa8a:	2800      	cmp	r0, #0
 800fa8c:	bf0c      	ite	eq
 800fa8e:	4608      	moveq	r0, r1
 800fa90:	4610      	movne	r0, r2
 800fa92:	61a0      	str	r0, [r4, #24]
 800fa94:	bf0c      	ite	eq
 800fa96:	2000      	moveq	r0, #0
 800fa98:	2001      	movne	r0, #1
 800fa9a:	aa01      	add	r2, sp, #4
 800fa9c:	9001      	str	r0, [sp, #4]
 800fa9e:	2019      	movs	r0, #25
 800faa0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800faa2:	9008      	str	r0, [sp, #32]
 800faa4:	9507      	str	r5, [sp, #28]
 800faa6:	920f      	str	r2, [sp, #60]	; 0x3c
 800faa8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800faac:	970c      	str	r7, [sp, #48]	; 0x30
 800faae:	910d      	str	r1, [sp, #52]	; 0x34
 800fab0:	a807      	add	r0, sp, #28
 800fab2:	4798      	blx	r3
 800fab4:	9b00      	ldr	r3, [sp, #0]
 800fab6:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 800faba:	2aff      	cmp	r2, #255	; 0xff
 800fabc:	4605      	mov	r5, r0
 800fabe:	d111      	bne.n	800fae4 <_CalcPositions+0x8c>
 800fac0:	6998      	ldr	r0, [r3, #24]
 800fac2:	f7f4 ff7f 	bl	80049c4 <WM_GetScrollbarV>
 800fac6:	b168      	cbz	r0, 800fae4 <_CalcPositions+0x8c>
 800fac8:	a905      	add	r1, sp, #20
 800faca:	f7f4 ff94 	bl	80049f6 <WM_GetWindowRectEx>
 800face:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800fad2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800fad6:	429a      	cmp	r2, r3
 800fad8:	d104      	bne.n	800fae4 <_CalcPositions+0x8c>
 800fada:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800fade:	3b01      	subs	r3, #1
 800fae0:	f8ad 3010 	strh.w	r3, [sp, #16]
 800fae4:	9b00      	ldr	r3, [sp, #0]
 800fae6:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 800faea:	2afe      	cmp	r2, #254	; 0xfe
 800faec:	d111      	bne.n	800fb12 <_CalcPositions+0xba>
 800faee:	6998      	ldr	r0, [r3, #24]
 800faf0:	f7f4 ff63 	bl	80049ba <WM_GetScrollbarH>
 800faf4:	b168      	cbz	r0, 800fb12 <_CalcPositions+0xba>
 800faf6:	a905      	add	r1, sp, #20
 800faf8:	f7f4 ff7d 	bl	80049f6 <WM_GetWindowRectEx>
 800fafc:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800fb00:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800fb04:	429a      	cmp	r2, r3
 800fb06:	d104      	bne.n	800fb12 <_CalcPositions+0xba>
 800fb08:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800fb0c:	3b01      	subs	r3, #1
 800fb0e:	f8ad 3012 	strh.w	r3, [sp, #18]
 800fb12:	427a      	negs	r2, r7
 800fb14:	4630      	mov	r0, r6
 800fb16:	f1c8 0100 	rsb	r1, r8, #0
 800fb1a:	f7fa fff0 	bl	800aafe <GUI_MoveRect>
 800fb1e:	9800      	ldr	r0, [sp, #0]
 800fb20:	4631      	mov	r1, r6
 800fb22:	f7fc f9ac 	bl	800be7e <SCROLLBAR__Rect2VRect>
 800fb26:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800fb2a:	f9bd a010 	ldrsh.w	sl, [sp, #16]
 800fb2e:	9b00      	ldr	r3, [sp, #0]
 800fb30:	ebc2 0a0a 	rsb	sl, r2, sl
 800fb34:	f8d3 904c 	ldr.w	r9, [r3, #76]	; 0x4c
 800fb38:	6d58      	ldr	r0, [r3, #84]	; 0x54
 800fb3a:	f10a 0601 	add.w	r6, sl, #1
 800fb3e:	eba6 0645 	sub.w	r6, r6, r5, lsl #1
 800fb42:	4649      	mov	r1, r9
 800fb44:	4370      	muls	r0, r6
 800fb46:	f7f9 f94f 	bl	8008de8 <GUI__DivideRound32>
 800fb4a:	4b17      	ldr	r3, [pc, #92]	; (800fba8 <_CalcPositions+0x150>)
 800fb4c:	f8c4 a014 	str.w	sl, [r4, #20]
 800fb50:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fb54:	1c5a      	adds	r2, r3, #1
 800fb56:	4282      	cmp	r2, r0
 800fb58:	bfa8      	it	ge
 800fb5a:	1c98      	addge	r0, r3, #2
 800fb5c:	42b0      	cmp	r0, r6
 800fb5e:	bfb4      	ite	lt
 800fb60:	4607      	movlt	r7, r0
 800fb62:	4637      	movge	r7, r6
 800fb64:	ebc7 0806 	rsb	r8, r7, r6
 800fb68:	442e      	add	r6, r5
 800fb6a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800fb6e:	6126      	str	r6, [r4, #16]
 800fb70:	ae10      	add	r6, sp, #64	; 0x40
 800fb72:	6023      	str	r3, [r4, #0]
 800fb74:	1e6b      	subs	r3, r5, #1
 800fb76:	6063      	str	r3, [r4, #4]
 800fb78:	f856 3d40 	ldr.w	r3, [r6, #-64]!
 800fb7c:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800fb7e:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800fb80:	fb00 f008 	mul.w	r0, r0, r8
 800fb84:	ebc1 0109 	rsb	r1, r1, r9
 800fb88:	f7f9 f92e 	bl	8008de8 <GUI__DivideRound32>
 800fb8c:	4428      	add	r0, r5
 800fb8e:	19c5      	adds	r5, r0, r7
 800fb90:	3d01      	subs	r5, #1
 800fb92:	60a0      	str	r0, [r4, #8]
 800fb94:	60e5      	str	r5, [r4, #12]
 800fb96:	f8c4 801c 	str.w	r8, [r4, #28]
 800fb9a:	6227      	str	r7, [r4, #32]
 800fb9c:	4668      	mov	r0, sp
 800fb9e:	f7fb fca5 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800fba2:	b010      	add	sp, #64	; 0x40
 800fba4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fba8:	200000e2 	.word	0x200000e2

0800fbac <_Paint>:
 800fbac:	b570      	push	{r4, r5, r6, lr}
 800fbae:	b098      	sub	sp, #96	; 0x60
 800fbb0:	4606      	mov	r6, r0
 800fbb2:	f7fb fc8d 	bl	800b4d0 <GUI_ALLOC_LockH>
 800fbb6:	6d83      	ldr	r3, [r0, #88]	; 0x58
 800fbb8:	9305      	str	r3, [sp, #20]
 800fbba:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800fbbc:	6c04      	ldr	r4, [r0, #64]	; 0x40
 800fbbe:	9001      	str	r0, [sp, #4]
 800fbc0:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800fbc4:	a906      	add	r1, sp, #24
 800fbc6:	4605      	mov	r5, r0
 800fbc8:	4630      	mov	r0, r6
 800fbca:	9304      	str	r3, [sp, #16]
 800fbcc:	f7ff ff44 	bl	800fa58 <_CalcPositions>
 800fbd0:	a801      	add	r0, sp, #4
 800fbd2:	f7fb fc8b 	bl	800b4ec <GUI_ALLOC_UnlockH>
 800fbd6:	a902      	add	r1, sp, #8
 800fbd8:	4628      	mov	r0, r5
 800fbda:	f7fb ffd8 	bl	800bb8e <WIDGET__GetClientRect>
 800fbde:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800fbe2:	9314      	str	r3, [sp, #80]	; 0x50
 800fbe4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800fbe8:	9316      	str	r3, [sp, #88]	; 0x58
 800fbea:	ab04      	add	r3, sp, #16
 800fbec:	9317      	str	r3, [sp, #92]	; 0x5c
 800fbee:	2308      	movs	r3, #8
 800fbf0:	9310      	str	r3, [sp, #64]	; 0x40
 800fbf2:	9b06      	ldr	r3, [sp, #24]
 800fbf4:	9313      	str	r3, [sp, #76]	; 0x4c
 800fbf6:	9b07      	ldr	r3, [sp, #28]
 800fbf8:	9315      	str	r3, [sp, #84]	; 0x54
 800fbfa:	960f      	str	r6, [sp, #60]	; 0x3c
 800fbfc:	a80f      	add	r0, sp, #60	; 0x3c
 800fbfe:	47a0      	blx	r4
 800fc00:	2310      	movs	r3, #16
 800fc02:	9310      	str	r3, [sp, #64]	; 0x40
 800fc04:	9b07      	ldr	r3, [sp, #28]
 800fc06:	3301      	adds	r3, #1
 800fc08:	9313      	str	r3, [sp, #76]	; 0x4c
 800fc0a:	9b08      	ldr	r3, [sp, #32]
 800fc0c:	3b01      	subs	r3, #1
 800fc0e:	9315      	str	r3, [sp, #84]	; 0x54
 800fc10:	a80f      	add	r0, sp, #60	; 0x3c
 800fc12:	47a0      	blx	r4
 800fc14:	2311      	movs	r3, #17
 800fc16:	9310      	str	r3, [sp, #64]	; 0x40
 800fc18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fc1a:	3301      	adds	r3, #1
 800fc1c:	9313      	str	r3, [sp, #76]	; 0x4c
 800fc1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fc20:	3b01      	subs	r3, #1
 800fc22:	9315      	str	r3, [sp, #84]	; 0x54
 800fc24:	a80f      	add	r0, sp, #60	; 0x3c
 800fc26:	47a0      	blx	r4
 800fc28:	2313      	movs	r3, #19
 800fc2a:	9310      	str	r3, [sp, #64]	; 0x40
 800fc2c:	9b08      	ldr	r3, [sp, #32]
 800fc2e:	9313      	str	r3, [sp, #76]	; 0x4c
 800fc30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fc32:	9315      	str	r3, [sp, #84]	; 0x54
 800fc34:	a80f      	add	r0, sp, #60	; 0x3c
 800fc36:	47a0      	blx	r4
 800fc38:	2309      	movs	r3, #9
 800fc3a:	9310      	str	r3, [sp, #64]	; 0x40
 800fc3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fc3e:	9313      	str	r3, [sp, #76]	; 0x4c
 800fc40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fc42:	9315      	str	r3, [sp, #84]	; 0x54
 800fc44:	a80f      	add	r0, sp, #60	; 0x3c
 800fc46:	47a0      	blx	r4
 800fc48:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fc4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fc4c:	429a      	cmp	r2, r3
 800fc4e:	d006      	beq.n	800fc5e <_Paint+0xb2>
 800fc50:	210c      	movs	r1, #12
 800fc52:	3201      	adds	r2, #1
 800fc54:	9110      	str	r1, [sp, #64]	; 0x40
 800fc56:	9213      	str	r2, [sp, #76]	; 0x4c
 800fc58:	9315      	str	r3, [sp, #84]	; 0x54
 800fc5a:	a80f      	add	r0, sp, #60	; 0x3c
 800fc5c:	47a0      	blx	r4
 800fc5e:	b018      	add	sp, #96	; 0x60
 800fc60:	bd70      	pop	{r4, r5, r6, pc}

0800fc62 <LCD_GetNumLayers>:
 800fc62:	b510      	push	{r4, lr}
 800fc64:	2000      	movs	r0, #0
 800fc66:	f7fa fc75 	bl	800a554 <GUI_DEVICE__GetpDriver>
 800fc6a:	1c04      	adds	r4, r0, #0
 800fc6c:	f04f 0001 	mov.w	r0, #1
 800fc70:	bf18      	it	ne
 800fc72:	2401      	movne	r4, #1
 800fc74:	f7fa fc6e 	bl	800a554 <GUI_DEVICE__GetpDriver>
 800fc78:	b100      	cbz	r0, 800fc7c <LCD_GetNumLayers+0x1a>
 800fc7a:	3401      	adds	r4, #1
 800fc7c:	4620      	mov	r0, r4
 800fc7e:	bd10      	pop	{r4, pc}

0800fc80 <__libc_init_array>:
 800fc80:	b570      	push	{r4, r5, r6, lr}
 800fc82:	4d0d      	ldr	r5, [pc, #52]	; (800fcb8 <__libc_init_array+0x38>)
 800fc84:	4c0d      	ldr	r4, [pc, #52]	; (800fcbc <__libc_init_array+0x3c>)
 800fc86:	1b64      	subs	r4, r4, r5
 800fc88:	10a4      	asrs	r4, r4, #2
 800fc8a:	2600      	movs	r6, #0
 800fc8c:	42a6      	cmp	r6, r4
 800fc8e:	d109      	bne.n	800fca4 <__libc_init_array+0x24>
 800fc90:	4d0b      	ldr	r5, [pc, #44]	; (800fcc0 <__libc_init_array+0x40>)
 800fc92:	4c0c      	ldr	r4, [pc, #48]	; (800fcc4 <__libc_init_array+0x44>)
 800fc94:	f000 f8ac 	bl	800fdf0 <_init>
 800fc98:	1b64      	subs	r4, r4, r5
 800fc9a:	10a4      	asrs	r4, r4, #2
 800fc9c:	2600      	movs	r6, #0
 800fc9e:	42a6      	cmp	r6, r4
 800fca0:	d105      	bne.n	800fcae <__libc_init_array+0x2e>
 800fca2:	bd70      	pop	{r4, r5, r6, pc}
 800fca4:	f855 3b04 	ldr.w	r3, [r5], #4
 800fca8:	4798      	blx	r3
 800fcaa:	3601      	adds	r6, #1
 800fcac:	e7ee      	b.n	800fc8c <__libc_init_array+0xc>
 800fcae:	f855 3b04 	ldr.w	r3, [r5], #4
 800fcb2:	4798      	blx	r3
 800fcb4:	3601      	adds	r6, #1
 800fcb6:	e7f2      	b.n	800fc9e <__libc_init_array+0x1e>
 800fcb8:	08012c6c 	.word	0x08012c6c
 800fcbc:	08012c6c 	.word	0x08012c6c
 800fcc0:	08012c6c 	.word	0x08012c6c
 800fcc4:	08012c70 	.word	0x08012c70

0800fcc8 <__itoa>:
 800fcc8:	1e93      	subs	r3, r2, #2
 800fcca:	2b22      	cmp	r3, #34	; 0x22
 800fccc:	b510      	push	{r4, lr}
 800fcce:	460c      	mov	r4, r1
 800fcd0:	d904      	bls.n	800fcdc <__itoa+0x14>
 800fcd2:	2300      	movs	r3, #0
 800fcd4:	700b      	strb	r3, [r1, #0]
 800fcd6:	461c      	mov	r4, r3
 800fcd8:	4620      	mov	r0, r4
 800fcda:	bd10      	pop	{r4, pc}
 800fcdc:	2a0a      	cmp	r2, #10
 800fcde:	d109      	bne.n	800fcf4 <__itoa+0x2c>
 800fce0:	2800      	cmp	r0, #0
 800fce2:	da07      	bge.n	800fcf4 <__itoa+0x2c>
 800fce4:	232d      	movs	r3, #45	; 0x2d
 800fce6:	700b      	strb	r3, [r1, #0]
 800fce8:	4240      	negs	r0, r0
 800fcea:	2101      	movs	r1, #1
 800fcec:	4421      	add	r1, r4
 800fcee:	f000 f83d 	bl	800fd6c <__utoa>
 800fcf2:	e7f1      	b.n	800fcd8 <__itoa+0x10>
 800fcf4:	2100      	movs	r1, #0
 800fcf6:	e7f9      	b.n	800fcec <__itoa+0x24>

0800fcf8 <itoa>:
 800fcf8:	f7ff bfe6 	b.w	800fcc8 <__itoa>

0800fcfc <memcpy>:
 800fcfc:	440a      	add	r2, r1
 800fcfe:	4291      	cmp	r1, r2
 800fd00:	f100 33ff 	add.w	r3, r0, #4294967295
 800fd04:	d100      	bne.n	800fd08 <memcpy+0xc>
 800fd06:	4770      	bx	lr
 800fd08:	b510      	push	{r4, lr}
 800fd0a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800fd0e:	f803 4f01 	strb.w	r4, [r3, #1]!
 800fd12:	4291      	cmp	r1, r2
 800fd14:	d1f9      	bne.n	800fd0a <memcpy+0xe>
 800fd16:	bd10      	pop	{r4, pc}

0800fd18 <memmove>:
 800fd18:	4288      	cmp	r0, r1
 800fd1a:	b510      	push	{r4, lr}
 800fd1c:	eb01 0402 	add.w	r4, r1, r2
 800fd20:	d902      	bls.n	800fd28 <memmove+0x10>
 800fd22:	4284      	cmp	r4, r0
 800fd24:	4623      	mov	r3, r4
 800fd26:	d807      	bhi.n	800fd38 <memmove+0x20>
 800fd28:	1e43      	subs	r3, r0, #1
 800fd2a:	42a1      	cmp	r1, r4
 800fd2c:	d008      	beq.n	800fd40 <memmove+0x28>
 800fd2e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800fd32:	f803 2f01 	strb.w	r2, [r3, #1]!
 800fd36:	e7f8      	b.n	800fd2a <memmove+0x12>
 800fd38:	4402      	add	r2, r0
 800fd3a:	4601      	mov	r1, r0
 800fd3c:	428a      	cmp	r2, r1
 800fd3e:	d100      	bne.n	800fd42 <memmove+0x2a>
 800fd40:	bd10      	pop	{r4, pc}
 800fd42:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800fd46:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800fd4a:	e7f7      	b.n	800fd3c <memmove+0x24>

0800fd4c <memset>:
 800fd4c:	4402      	add	r2, r0
 800fd4e:	4603      	mov	r3, r0
 800fd50:	4293      	cmp	r3, r2
 800fd52:	d100      	bne.n	800fd56 <memset+0xa>
 800fd54:	4770      	bx	lr
 800fd56:	f803 1b01 	strb.w	r1, [r3], #1
 800fd5a:	e7f9      	b.n	800fd50 <memset+0x4>

0800fd5c <strcpy>:
 800fd5c:	4603      	mov	r3, r0
 800fd5e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800fd62:	f803 2b01 	strb.w	r2, [r3], #1
 800fd66:	2a00      	cmp	r2, #0
 800fd68:	d1f9      	bne.n	800fd5e <strcpy+0x2>
 800fd6a:	4770      	bx	lr

0800fd6c <__utoa>:
 800fd6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fd6e:	4c1f      	ldr	r4, [pc, #124]	; (800fdec <__utoa+0x80>)
 800fd70:	b08b      	sub	sp, #44	; 0x2c
 800fd72:	4605      	mov	r5, r0
 800fd74:	460b      	mov	r3, r1
 800fd76:	466e      	mov	r6, sp
 800fd78:	f104 0c20 	add.w	ip, r4, #32
 800fd7c:	6820      	ldr	r0, [r4, #0]
 800fd7e:	6861      	ldr	r1, [r4, #4]
 800fd80:	4637      	mov	r7, r6
 800fd82:	c703      	stmia	r7!, {r0, r1}
 800fd84:	3408      	adds	r4, #8
 800fd86:	4564      	cmp	r4, ip
 800fd88:	463e      	mov	r6, r7
 800fd8a:	d1f7      	bne.n	800fd7c <__utoa+0x10>
 800fd8c:	7921      	ldrb	r1, [r4, #4]
 800fd8e:	7139      	strb	r1, [r7, #4]
 800fd90:	1e91      	subs	r1, r2, #2
 800fd92:	6820      	ldr	r0, [r4, #0]
 800fd94:	6038      	str	r0, [r7, #0]
 800fd96:	2922      	cmp	r1, #34	; 0x22
 800fd98:	f04f 0100 	mov.w	r1, #0
 800fd9c:	d904      	bls.n	800fda8 <__utoa+0x3c>
 800fd9e:	7019      	strb	r1, [r3, #0]
 800fda0:	460b      	mov	r3, r1
 800fda2:	4618      	mov	r0, r3
 800fda4:	b00b      	add	sp, #44	; 0x2c
 800fda6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fda8:	1e58      	subs	r0, r3, #1
 800fdaa:	4684      	mov	ip, r0
 800fdac:	fbb5 f7f2 	udiv	r7, r5, r2
 800fdb0:	fb02 5617 	mls	r6, r2, r7, r5
 800fdb4:	3628      	adds	r6, #40	; 0x28
 800fdb6:	446e      	add	r6, sp
 800fdb8:	460c      	mov	r4, r1
 800fdba:	f816 6c28 	ldrb.w	r6, [r6, #-40]
 800fdbe:	f80c 6f01 	strb.w	r6, [ip, #1]!
 800fdc2:	462e      	mov	r6, r5
 800fdc4:	42b2      	cmp	r2, r6
 800fdc6:	f101 0101 	add.w	r1, r1, #1
 800fdca:	463d      	mov	r5, r7
 800fdcc:	d9ee      	bls.n	800fdac <__utoa+0x40>
 800fdce:	2200      	movs	r2, #0
 800fdd0:	545a      	strb	r2, [r3, r1]
 800fdd2:	1919      	adds	r1, r3, r4
 800fdd4:	1aa5      	subs	r5, r4, r2
 800fdd6:	42aa      	cmp	r2, r5
 800fdd8:	dae3      	bge.n	800fda2 <__utoa+0x36>
 800fdda:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 800fdde:	780e      	ldrb	r6, [r1, #0]
 800fde0:	7006      	strb	r6, [r0, #0]
 800fde2:	3201      	adds	r2, #1
 800fde4:	f801 5901 	strb.w	r5, [r1], #-1
 800fde8:	e7f4      	b.n	800fdd4 <__utoa+0x68>
 800fdea:	bf00      	nop
 800fdec:	08012c3c 	.word	0x08012c3c

0800fdf0 <_init>:
 800fdf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fdf2:	bf00      	nop
 800fdf4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fdf6:	bc08      	pop	{r3}
 800fdf8:	469e      	mov	lr, r3
 800fdfa:	4770      	bx	lr

0800fdfc <_fini>:
 800fdfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fdfe:	bf00      	nop
 800fe00:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fe02:	bc08      	pop	{r3}
 800fe04:	469e      	mov	lr, r3
 800fe06:	4770      	bx	lr
