
014_1_STM32_ILI9341_STEMWIN_PROJECT.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000d2fc  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002ac4  0800d484  0800d484  0001d484  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800ff48  0800ff48  000201ec  2**0
                  CONTENTS
  4 .ARM          00000008  0800ff48  0800ff48  0001ff48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800ff50  0800ff50  000201ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800ff50  0800ff50  0001ff50  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800ff54  0800ff54  0001ff54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001ec  20000000  0800ff58  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000201ec  2**0
                  CONTENTS
 10 .bss          000003bc  200001ec  200001ec  000201ec  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200005a8  200005a8  000201ec  2**0
                  ALLOC
 12 .ARM.attributes 0000002e  00000000  00000000  000201ec  2**0
                  CONTENTS, READONLY
 13 .debug_info   000082b9  00000000  00000000  0002021a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001761  00000000  00000000  000284d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000750  00000000  00000000  00029c38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000688  00000000  00000000  0002a388  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002c0e  00000000  00000000  0002aa10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00008781  00000000  00000000  0002d61e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000d66e4  00000000  00000000  00035d9f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      000000d2  00000000  00000000  0010c483  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001d5c  00000000  00000000  0010c558  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	200001ec 	.word	0x200001ec
 80001a4:	00000000 	.word	0x00000000
 80001a8:	0800d46c 	.word	0x0800d46c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	200001f0 	.word	0x200001f0
 80001c4:	0800d46c 	.word	0x0800d46c

080001c8 <strlen>:
 80001c8:	4603      	mov	r3, r0
 80001ca:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001ce:	2a00      	cmp	r2, #0
 80001d0:	d1fb      	bne.n	80001ca <strlen+0x2>
 80001d2:	1a18      	subs	r0, r3, r0
 80001d4:	3801      	subs	r0, #1
 80001d6:	4770      	bx	lr

080001d8 <__aeabi_uldivmod>:
 80001d8:	b953      	cbnz	r3, 80001f0 <__aeabi_uldivmod+0x18>
 80001da:	b94a      	cbnz	r2, 80001f0 <__aeabi_uldivmod+0x18>
 80001dc:	2900      	cmp	r1, #0
 80001de:	bf08      	it	eq
 80001e0:	2800      	cmpeq	r0, #0
 80001e2:	bf1c      	itt	ne
 80001e4:	f04f 31ff 	movne.w	r1, #4294967295
 80001e8:	f04f 30ff 	movne.w	r0, #4294967295
 80001ec:	f000 b974 	b.w	80004d8 <__aeabi_idiv0>
 80001f0:	f1ad 0c08 	sub.w	ip, sp, #8
 80001f4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001f8:	f000 f806 	bl	8000208 <__udivmoddi4>
 80001fc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000200:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000204:	b004      	add	sp, #16
 8000206:	4770      	bx	lr

08000208 <__udivmoddi4>:
 8000208:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800020c:	9d08      	ldr	r5, [sp, #32]
 800020e:	4604      	mov	r4, r0
 8000210:	468e      	mov	lr, r1
 8000212:	2b00      	cmp	r3, #0
 8000214:	d14d      	bne.n	80002b2 <__udivmoddi4+0xaa>
 8000216:	428a      	cmp	r2, r1
 8000218:	4694      	mov	ip, r2
 800021a:	d969      	bls.n	80002f0 <__udivmoddi4+0xe8>
 800021c:	fab2 f282 	clz	r2, r2
 8000220:	b152      	cbz	r2, 8000238 <__udivmoddi4+0x30>
 8000222:	fa01 f302 	lsl.w	r3, r1, r2
 8000226:	f1c2 0120 	rsb	r1, r2, #32
 800022a:	fa20 f101 	lsr.w	r1, r0, r1
 800022e:	fa0c fc02 	lsl.w	ip, ip, r2
 8000232:	ea41 0e03 	orr.w	lr, r1, r3
 8000236:	4094      	lsls	r4, r2
 8000238:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800023c:	0c21      	lsrs	r1, r4, #16
 800023e:	fbbe f6f8 	udiv	r6, lr, r8
 8000242:	fa1f f78c 	uxth.w	r7, ip
 8000246:	fb08 e316 	mls	r3, r8, r6, lr
 800024a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800024e:	fb06 f107 	mul.w	r1, r6, r7
 8000252:	4299      	cmp	r1, r3
 8000254:	d90a      	bls.n	800026c <__udivmoddi4+0x64>
 8000256:	eb1c 0303 	adds.w	r3, ip, r3
 800025a:	f106 30ff 	add.w	r0, r6, #4294967295
 800025e:	f080 811f 	bcs.w	80004a0 <__udivmoddi4+0x298>
 8000262:	4299      	cmp	r1, r3
 8000264:	f240 811c 	bls.w	80004a0 <__udivmoddi4+0x298>
 8000268:	3e02      	subs	r6, #2
 800026a:	4463      	add	r3, ip
 800026c:	1a5b      	subs	r3, r3, r1
 800026e:	b2a4      	uxth	r4, r4
 8000270:	fbb3 f0f8 	udiv	r0, r3, r8
 8000274:	fb08 3310 	mls	r3, r8, r0, r3
 8000278:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800027c:	fb00 f707 	mul.w	r7, r0, r7
 8000280:	42a7      	cmp	r7, r4
 8000282:	d90a      	bls.n	800029a <__udivmoddi4+0x92>
 8000284:	eb1c 0404 	adds.w	r4, ip, r4
 8000288:	f100 33ff 	add.w	r3, r0, #4294967295
 800028c:	f080 810a 	bcs.w	80004a4 <__udivmoddi4+0x29c>
 8000290:	42a7      	cmp	r7, r4
 8000292:	f240 8107 	bls.w	80004a4 <__udivmoddi4+0x29c>
 8000296:	4464      	add	r4, ip
 8000298:	3802      	subs	r0, #2
 800029a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800029e:	1be4      	subs	r4, r4, r7
 80002a0:	2600      	movs	r6, #0
 80002a2:	b11d      	cbz	r5, 80002ac <__udivmoddi4+0xa4>
 80002a4:	40d4      	lsrs	r4, r2
 80002a6:	2300      	movs	r3, #0
 80002a8:	e9c5 4300 	strd	r4, r3, [r5]
 80002ac:	4631      	mov	r1, r6
 80002ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002b2:	428b      	cmp	r3, r1
 80002b4:	d909      	bls.n	80002ca <__udivmoddi4+0xc2>
 80002b6:	2d00      	cmp	r5, #0
 80002b8:	f000 80ef 	beq.w	800049a <__udivmoddi4+0x292>
 80002bc:	2600      	movs	r6, #0
 80002be:	e9c5 0100 	strd	r0, r1, [r5]
 80002c2:	4630      	mov	r0, r6
 80002c4:	4631      	mov	r1, r6
 80002c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002ca:	fab3 f683 	clz	r6, r3
 80002ce:	2e00      	cmp	r6, #0
 80002d0:	d14a      	bne.n	8000368 <__udivmoddi4+0x160>
 80002d2:	428b      	cmp	r3, r1
 80002d4:	d302      	bcc.n	80002dc <__udivmoddi4+0xd4>
 80002d6:	4282      	cmp	r2, r0
 80002d8:	f200 80f9 	bhi.w	80004ce <__udivmoddi4+0x2c6>
 80002dc:	1a84      	subs	r4, r0, r2
 80002de:	eb61 0303 	sbc.w	r3, r1, r3
 80002e2:	2001      	movs	r0, #1
 80002e4:	469e      	mov	lr, r3
 80002e6:	2d00      	cmp	r5, #0
 80002e8:	d0e0      	beq.n	80002ac <__udivmoddi4+0xa4>
 80002ea:	e9c5 4e00 	strd	r4, lr, [r5]
 80002ee:	e7dd      	b.n	80002ac <__udivmoddi4+0xa4>
 80002f0:	b902      	cbnz	r2, 80002f4 <__udivmoddi4+0xec>
 80002f2:	deff      	udf	#255	; 0xff
 80002f4:	fab2 f282 	clz	r2, r2
 80002f8:	2a00      	cmp	r2, #0
 80002fa:	f040 8092 	bne.w	8000422 <__udivmoddi4+0x21a>
 80002fe:	eba1 010c 	sub.w	r1, r1, ip
 8000302:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000306:	fa1f fe8c 	uxth.w	lr, ip
 800030a:	2601      	movs	r6, #1
 800030c:	0c20      	lsrs	r0, r4, #16
 800030e:	fbb1 f3f7 	udiv	r3, r1, r7
 8000312:	fb07 1113 	mls	r1, r7, r3, r1
 8000316:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 800031a:	fb0e f003 	mul.w	r0, lr, r3
 800031e:	4288      	cmp	r0, r1
 8000320:	d908      	bls.n	8000334 <__udivmoddi4+0x12c>
 8000322:	eb1c 0101 	adds.w	r1, ip, r1
 8000326:	f103 38ff 	add.w	r8, r3, #4294967295
 800032a:	d202      	bcs.n	8000332 <__udivmoddi4+0x12a>
 800032c:	4288      	cmp	r0, r1
 800032e:	f200 80cb 	bhi.w	80004c8 <__udivmoddi4+0x2c0>
 8000332:	4643      	mov	r3, r8
 8000334:	1a09      	subs	r1, r1, r0
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb1 f0f7 	udiv	r0, r1, r7
 800033c:	fb07 1110 	mls	r1, r7, r0, r1
 8000340:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000344:	fb0e fe00 	mul.w	lr, lr, r0
 8000348:	45a6      	cmp	lr, r4
 800034a:	d908      	bls.n	800035e <__udivmoddi4+0x156>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 31ff 	add.w	r1, r0, #4294967295
 8000354:	d202      	bcs.n	800035c <__udivmoddi4+0x154>
 8000356:	45a6      	cmp	lr, r4
 8000358:	f200 80bb 	bhi.w	80004d2 <__udivmoddi4+0x2ca>
 800035c:	4608      	mov	r0, r1
 800035e:	eba4 040e 	sub.w	r4, r4, lr
 8000362:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000366:	e79c      	b.n	80002a2 <__udivmoddi4+0x9a>
 8000368:	f1c6 0720 	rsb	r7, r6, #32
 800036c:	40b3      	lsls	r3, r6
 800036e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000372:	ea4c 0c03 	orr.w	ip, ip, r3
 8000376:	fa20 f407 	lsr.w	r4, r0, r7
 800037a:	fa01 f306 	lsl.w	r3, r1, r6
 800037e:	431c      	orrs	r4, r3
 8000380:	40f9      	lsrs	r1, r7
 8000382:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000386:	fa00 f306 	lsl.w	r3, r0, r6
 800038a:	fbb1 f8f9 	udiv	r8, r1, r9
 800038e:	0c20      	lsrs	r0, r4, #16
 8000390:	fa1f fe8c 	uxth.w	lr, ip
 8000394:	fb09 1118 	mls	r1, r9, r8, r1
 8000398:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 800039c:	fb08 f00e 	mul.w	r0, r8, lr
 80003a0:	4288      	cmp	r0, r1
 80003a2:	fa02 f206 	lsl.w	r2, r2, r6
 80003a6:	d90b      	bls.n	80003c0 <__udivmoddi4+0x1b8>
 80003a8:	eb1c 0101 	adds.w	r1, ip, r1
 80003ac:	f108 3aff 	add.w	sl, r8, #4294967295
 80003b0:	f080 8088 	bcs.w	80004c4 <__udivmoddi4+0x2bc>
 80003b4:	4288      	cmp	r0, r1
 80003b6:	f240 8085 	bls.w	80004c4 <__udivmoddi4+0x2bc>
 80003ba:	f1a8 0802 	sub.w	r8, r8, #2
 80003be:	4461      	add	r1, ip
 80003c0:	1a09      	subs	r1, r1, r0
 80003c2:	b2a4      	uxth	r4, r4
 80003c4:	fbb1 f0f9 	udiv	r0, r1, r9
 80003c8:	fb09 1110 	mls	r1, r9, r0, r1
 80003cc:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80003d0:	fb00 fe0e 	mul.w	lr, r0, lr
 80003d4:	458e      	cmp	lr, r1
 80003d6:	d908      	bls.n	80003ea <__udivmoddi4+0x1e2>
 80003d8:	eb1c 0101 	adds.w	r1, ip, r1
 80003dc:	f100 34ff 	add.w	r4, r0, #4294967295
 80003e0:	d26c      	bcs.n	80004bc <__udivmoddi4+0x2b4>
 80003e2:	458e      	cmp	lr, r1
 80003e4:	d96a      	bls.n	80004bc <__udivmoddi4+0x2b4>
 80003e6:	3802      	subs	r0, #2
 80003e8:	4461      	add	r1, ip
 80003ea:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80003ee:	fba0 9402 	umull	r9, r4, r0, r2
 80003f2:	eba1 010e 	sub.w	r1, r1, lr
 80003f6:	42a1      	cmp	r1, r4
 80003f8:	46c8      	mov	r8, r9
 80003fa:	46a6      	mov	lr, r4
 80003fc:	d356      	bcc.n	80004ac <__udivmoddi4+0x2a4>
 80003fe:	d053      	beq.n	80004a8 <__udivmoddi4+0x2a0>
 8000400:	b15d      	cbz	r5, 800041a <__udivmoddi4+0x212>
 8000402:	ebb3 0208 	subs.w	r2, r3, r8
 8000406:	eb61 010e 	sbc.w	r1, r1, lr
 800040a:	fa01 f707 	lsl.w	r7, r1, r7
 800040e:	fa22 f306 	lsr.w	r3, r2, r6
 8000412:	40f1      	lsrs	r1, r6
 8000414:	431f      	orrs	r7, r3
 8000416:	e9c5 7100 	strd	r7, r1, [r5]
 800041a:	2600      	movs	r6, #0
 800041c:	4631      	mov	r1, r6
 800041e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000422:	f1c2 0320 	rsb	r3, r2, #32
 8000426:	40d8      	lsrs	r0, r3
 8000428:	fa0c fc02 	lsl.w	ip, ip, r2
 800042c:	fa21 f303 	lsr.w	r3, r1, r3
 8000430:	4091      	lsls	r1, r2
 8000432:	4301      	orrs	r1, r0
 8000434:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000438:	fa1f fe8c 	uxth.w	lr, ip
 800043c:	fbb3 f0f7 	udiv	r0, r3, r7
 8000440:	fb07 3610 	mls	r6, r7, r0, r3
 8000444:	0c0b      	lsrs	r3, r1, #16
 8000446:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 800044a:	fb00 f60e 	mul.w	r6, r0, lr
 800044e:	429e      	cmp	r6, r3
 8000450:	fa04 f402 	lsl.w	r4, r4, r2
 8000454:	d908      	bls.n	8000468 <__udivmoddi4+0x260>
 8000456:	eb1c 0303 	adds.w	r3, ip, r3
 800045a:	f100 38ff 	add.w	r8, r0, #4294967295
 800045e:	d22f      	bcs.n	80004c0 <__udivmoddi4+0x2b8>
 8000460:	429e      	cmp	r6, r3
 8000462:	d92d      	bls.n	80004c0 <__udivmoddi4+0x2b8>
 8000464:	3802      	subs	r0, #2
 8000466:	4463      	add	r3, ip
 8000468:	1b9b      	subs	r3, r3, r6
 800046a:	b289      	uxth	r1, r1
 800046c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000470:	fb07 3316 	mls	r3, r7, r6, r3
 8000474:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000478:	fb06 f30e 	mul.w	r3, r6, lr
 800047c:	428b      	cmp	r3, r1
 800047e:	d908      	bls.n	8000492 <__udivmoddi4+0x28a>
 8000480:	eb1c 0101 	adds.w	r1, ip, r1
 8000484:	f106 38ff 	add.w	r8, r6, #4294967295
 8000488:	d216      	bcs.n	80004b8 <__udivmoddi4+0x2b0>
 800048a:	428b      	cmp	r3, r1
 800048c:	d914      	bls.n	80004b8 <__udivmoddi4+0x2b0>
 800048e:	3e02      	subs	r6, #2
 8000490:	4461      	add	r1, ip
 8000492:	1ac9      	subs	r1, r1, r3
 8000494:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000498:	e738      	b.n	800030c <__udivmoddi4+0x104>
 800049a:	462e      	mov	r6, r5
 800049c:	4628      	mov	r0, r5
 800049e:	e705      	b.n	80002ac <__udivmoddi4+0xa4>
 80004a0:	4606      	mov	r6, r0
 80004a2:	e6e3      	b.n	800026c <__udivmoddi4+0x64>
 80004a4:	4618      	mov	r0, r3
 80004a6:	e6f8      	b.n	800029a <__udivmoddi4+0x92>
 80004a8:	454b      	cmp	r3, r9
 80004aa:	d2a9      	bcs.n	8000400 <__udivmoddi4+0x1f8>
 80004ac:	ebb9 0802 	subs.w	r8, r9, r2
 80004b0:	eb64 0e0c 	sbc.w	lr, r4, ip
 80004b4:	3801      	subs	r0, #1
 80004b6:	e7a3      	b.n	8000400 <__udivmoddi4+0x1f8>
 80004b8:	4646      	mov	r6, r8
 80004ba:	e7ea      	b.n	8000492 <__udivmoddi4+0x28a>
 80004bc:	4620      	mov	r0, r4
 80004be:	e794      	b.n	80003ea <__udivmoddi4+0x1e2>
 80004c0:	4640      	mov	r0, r8
 80004c2:	e7d1      	b.n	8000468 <__udivmoddi4+0x260>
 80004c4:	46d0      	mov	r8, sl
 80004c6:	e77b      	b.n	80003c0 <__udivmoddi4+0x1b8>
 80004c8:	3b02      	subs	r3, #2
 80004ca:	4461      	add	r1, ip
 80004cc:	e732      	b.n	8000334 <__udivmoddi4+0x12c>
 80004ce:	4630      	mov	r0, r6
 80004d0:	e709      	b.n	80002e6 <__udivmoddi4+0xde>
 80004d2:	4464      	add	r4, ip
 80004d4:	3802      	subs	r0, #2
 80004d6:	e742      	b.n	800035e <__udivmoddi4+0x156>

080004d8 <__aeabi_idiv0>:
 80004d8:	4770      	bx	lr
 80004da:	bf00      	nop

080004dc <GUI_X_GetTime>:
  Some timing dependent routines require a GetTime
  and delay function. Default time unit (tick), normally is
  1 ms.
*/

GUI_TIMER_TIME GUI_X_GetTime(void) { 
 80004dc:	b480      	push	{r7}
 80004de:	af00      	add	r7, sp, #0
  return OS_TimeMS; 
 80004e0:	4b03      	ldr	r3, [pc, #12]	; (80004f0 <GUI_X_GetTime+0x14>)
 80004e2:	681b      	ldr	r3, [r3, #0]
}
 80004e4:	4618      	mov	r0, r3
 80004e6:	46bd      	mov	sp, r7
 80004e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004ec:	4770      	bx	lr
 80004ee:	bf00      	nop
 80004f0:	20000208 	.word	0x20000208

080004f4 <_cbDialog>:

/*********************************************************************
*
*       _cbDialog
*/
static void _cbDialog(WM_MESSAGE * pMsg) {
 80004f4:	b580      	push	{r7, lr}
 80004f6:	b084      	sub	sp, #16
 80004f8:	af00      	add	r7, sp, #0
 80004fa:	6078      	str	r0, [r7, #4]
  WM_HWIN hItem;
  // USER START (Optionally insert additional variables)
  // USER END

  switch (pMsg->MsgId) {
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	2b1d      	cmp	r3, #29
 8000502:	d118      	bne.n	8000536 <_cbDialog+0x42>
  case WM_INIT_DIALOG:
    //
    // Initialization of 'ADC Value:'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_0);
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	685b      	ldr	r3, [r3, #4]
 8000508:	f640 0102 	movw	r1, #2050	; 0x802
 800050c:	4618      	mov	r0, r3
 800050e:	f003 fefd 	bl	800430c <WM_GetDialogItem>
 8000512:	60f8      	str	r0, [r7, #12]
    TEXT_SetFont(hItem, GUI_FONT_13_1);
 8000514:	490c      	ldr	r1, [pc, #48]	; (8000548 <_cbDialog+0x54>)
 8000516:	68f8      	ldr	r0, [r7, #12]
 8000518:	f002 f823 	bl	8002562 <TEXT_SetFont>
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	685b      	ldr	r3, [r3, #4]
 8000520:	f640 0103 	movw	r1, #2051	; 0x803
 8000524:	4618      	mov	r0, r3
 8000526:	f003 fef1 	bl	800430c <WM_GetDialogItem>
 800052a:	60f8      	str	r0, [r7, #12]
    TEXT_SetFont(hItem, GUI_FONT_20_ASCII);
 800052c:	4907      	ldr	r1, [pc, #28]	; (800054c <_cbDialog+0x58>)
 800052e:	68f8      	ldr	r0, [r7, #12]
 8000530:	f002 f817 	bl	8002562 <TEXT_SetFont>
    // USER START (Optionally insert additional code for further widget initialization)
    // USER END
    break;
 8000534:	e003      	b.n	800053e <_cbDialog+0x4a>
  // USER START (Optionally insert additional message handling)
  // USER END
  default:
    WM_DefaultProc(pMsg);
 8000536:	6878      	ldr	r0, [r7, #4]
 8000538:	f005 fb04 	bl	8005b44 <WM_DefaultProc>
    break;
 800053c:	bf00      	nop
  }
}
 800053e:	bf00      	nop
 8000540:	3710      	adds	r7, #16
 8000542:	46bd      	mov	sp, r7
 8000544:	bd80      	pop	{r7, pc}
 8000546:	bf00      	nop
 8000548:	0800ee20 	.word	0x0800ee20
 800054c:	0800e5dc 	.word	0x0800e5dc

08000550 <MainLCDTask>:
*/
/*********************************************************************
*
*       CreateSTemWin_Demo
*/
WM_HWIN MainLCDTask(void) {
 8000550:	b580      	push	{r7, lr}
 8000552:	b090      	sub	sp, #64	; 0x40
 8000554:	af02      	add	r7, sp, #8
  char i=0,x=0;
 8000556:	2300      	movs	r3, #0
 8000558:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 800055c:	2300      	movs	r3, #0
 800055e:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  WM_HWIN hGraph;
  PROGBAR_Handle   	hPbar;
  TEXT_Handle	   	hText1,hText2;
  GRAPH_DATA_Handle hData;

  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), _cbDialog, WM_HBKWIN, 0, 0);
 8000562:	f003 fe6d 	bl	8004240 <WM_GetDesktopWindow>
 8000566:	4603      	mov	r3, r0
 8000568:	2200      	movs	r2, #0
 800056a:	9201      	str	r2, [sp, #4]
 800056c:	2200      	movs	r2, #0
 800056e:	9200      	str	r2, [sp, #0]
 8000570:	4a4c      	ldr	r2, [pc, #304]	; (80006a4 <MainLCDTask+0x154>)
 8000572:	2106      	movs	r1, #6
 8000574:	484c      	ldr	r0, [pc, #304]	; (80006a8 <MainLCDTask+0x158>)
 8000576:	f003 facb 	bl	8003b10 <GUI_CreateDialogBox>
 800057a:	62f8      	str	r0, [r7, #44]	; 0x2c

  hPbar = WM_GetDialogItem(hWin, ID_PROGBAR_0);
 800057c:	f640 0104 	movw	r1, #2052	; 0x804
 8000580:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000582:	f003 fec3 	bl	800430c <WM_GetDialogItem>
 8000586:	62b8      	str	r0, [r7, #40]	; 0x28

  hText1 = WM_GetDialogItem(hWin, ID_TEXT_1);
 8000588:	f640 0103 	movw	r1, #2051	; 0x803
 800058c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800058e:	f003 febd 	bl	800430c <WM_GetDialogItem>
 8000592:	6278      	str	r0, [r7, #36]	; 0x24

  hText2 = WM_GetDialogItem(hWin, ID_TEXT_2);
 8000594:	f640 0105 	movw	r1, #2053	; 0x805
 8000598:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800059a:	f003 feb7 	bl	800430c <WM_GetDialogItem>
 800059e:	6238      	str	r0, [r7, #32]

  hGraph = WM_GetDialogItem(hWin, ID_GRAPH_0);
 80005a0:	f640 0101 	movw	r1, #2049	; 0x801
 80005a4:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80005a6:	f003 feb1 	bl	800430c <WM_GetDialogItem>
 80005aa:	61f8      	str	r0, [r7, #28]


  hData = GRAPH_DATA_YT_Create(GUI_RED, 200, NULL, 0);
 80005ac:	2300      	movs	r3, #0
 80005ae:	2200      	movs	r2, #0
 80005b0:	21c8      	movs	r1, #200	; 0xc8
 80005b2:	483e      	ldr	r0, [pc, #248]	; (80006ac <MainLCDTask+0x15c>)
 80005b4:	f002 faa4 	bl	8002b00 <GRAPH_DATA_YT_Create>
 80005b8:	61b8      	str	r0, [r7, #24]
  GRAPH_DATA_YT_SetAlign(hData, GRAPH_ALIGN_LEFT);
 80005ba:	2101      	movs	r1, #1
 80005bc:	69b8      	ldr	r0, [r7, #24]
 80005be:	f002 faf6 	bl	8002bae <GRAPH_DATA_YT_SetAlign>
  GRAPH_AttachData(hGraph, hData);
 80005c2:	69b9      	ldr	r1, [r7, #24]
 80005c4:	69f8      	ldr	r0, [r7, #28]
 80005c6:	f002 fec0 	bl	800334a <GRAPH_AttachData>

  GRAPH_SetGridVis(hGraph, 1);
 80005ca:	2101      	movs	r1, #1
 80005cc:	69f8      	ldr	r0, [r7, #28]
 80005ce:	f002 fede 	bl	800338e <GRAPH_SetGridVis>
  GRAPH_SetBorder(hGraph, 30, 0, 0, 0);
 80005d2:	2300      	movs	r3, #0
 80005d4:	9300      	str	r3, [sp, #0]
 80005d6:	2300      	movs	r3, #0
 80005d8:	2200      	movs	r2, #0
 80005da:	211e      	movs	r1, #30
 80005dc:	69f8      	ldr	r0, [r7, #28]
 80005de:	f002 feee 	bl	80033be <GRAPH_SetBorder>

  while(1)
  {
	 PROGBAR_SetValue(hPbar, i++);
 80005e2:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 80005e6:	1c5a      	adds	r2, r3, #1
 80005e8:	f887 2037 	strb.w	r2, [r7, #55]	; 0x37
 80005ec:	4619      	mov	r1, r3
 80005ee:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80005f0:	f002 f923 	bl	800283a <PROGBAR_SetValue>
     if(i>100) i = 0;
 80005f4:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 80005f8:	2b64      	cmp	r3, #100	; 0x64
 80005fa:	d902      	bls.n	8000602 <MainLCDTask+0xb2>
 80005fc:	2300      	movs	r3, #0
 80005fe:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

     HAL_ADC_Start(&hadc1);
 8000602:	482b      	ldr	r0, [pc, #172]	; (80006b0 <MainLCDTask+0x160>)
 8000604:	f000 fba4 	bl	8000d50 <HAL_ADC_Start>
     HAL_ADC_PollForConversion(&hadc1, 50);
 8000608:	2132      	movs	r1, #50	; 0x32
 800060a:	4829      	ldr	r0, [pc, #164]	; (80006b0 <MainLCDTask+0x160>)
 800060c:	f000 fca5 	bl	8000f5a <HAL_ADC_PollForConversion>
     ADC_Value = HAL_ADC_GetValue(&hadc1);
 8000610:	4827      	ldr	r0, [pc, #156]	; (80006b0 <MainLCDTask+0x160>)
 8000612:	f000 fd2d 	bl	8001070 <HAL_ADC_GetValue>
 8000616:	4603      	mov	r3, r0
 8000618:	617b      	str	r3, [r7, #20]
     HAL_ADC_Stop(&hadc1);
 800061a:	4825      	ldr	r0, [pc, #148]	; (80006b0 <MainLCDTask+0x160>)
 800061c:	f000 fc6a 	bl	8000ef4 <HAL_ADC_Stop>
     itoa(ADC_Value,str,10);
 8000620:	463b      	mov	r3, r7
 8000622:	220a      	movs	r2, #10
 8000624:	4619      	mov	r1, r3
 8000626:	6978      	ldr	r0, [r7, #20]
 8000628:	f00c fea4 	bl	800d374 <itoa>
     TEXT_SetText(hText1, str);
 800062c:	463b      	mov	r3, r7
 800062e:	4619      	mov	r1, r3
 8000630:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000632:	f001 ffa9 	bl	8002588 <TEXT_SetText>

     itoa(StopTime,str,10);
 8000636:	463b      	mov	r3, r7
 8000638:	220a      	movs	r2, #10
 800063a:	4619      	mov	r1, r3
 800063c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800063e:	f00c fe99 	bl	800d374 <itoa>
     TEXT_SetText(hText2, str);
 8000642:	463b      	mov	r3, r7
 8000644:	4619      	mov	r1, r3
 8000646:	6a38      	ldr	r0, [r7, #32]
 8000648:	f001 ff9e 	bl	8002588 <TEXT_SetText>

     x++;
 800064c:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8000650:	3301      	adds	r3, #1
 8000652:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
     if(x>200)
 8000656:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 800065a:	2bc8      	cmp	r3, #200	; 0xc8
 800065c:	d905      	bls.n	800066a <MainLCDTask+0x11a>
     {
    	 x=0;
 800065e:	2300      	movs	r3, #0
 8000660:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
    	 GRAPH_DATA_YT_Clear(hData);
 8000664:	69b8      	ldr	r0, [r7, #24]
 8000666:	f002 fab6 	bl	8002bd6 <GRAPH_DATA_YT_Clear>
     }

     GRAPH_DATA_YT_AddValue(hData, ADC_Value/20);
 800066a:	697b      	ldr	r3, [r7, #20]
 800066c:	4a11      	ldr	r2, [pc, #68]	; (80006b4 <MainLCDTask+0x164>)
 800066e:	fb82 1203 	smull	r1, r2, r2, r3
 8000672:	10d2      	asrs	r2, r2, #3
 8000674:	17db      	asrs	r3, r3, #31
 8000676:	1ad3      	subs	r3, r2, r3
 8000678:	b21b      	sxth	r3, r3
 800067a:	4619      	mov	r1, r3
 800067c:	69b8      	ldr	r0, [r7, #24]
 800067e:	f002 fa7b 	bl	8002b78 <GRAPH_DATA_YT_AddValue>


	 HAL_Delay(100);
 8000682:	2064      	movs	r0, #100	; 0x64
 8000684:	f000 fafc 	bl	8000c80 <HAL_Delay>

	 StartTime = HAL_GetTick();
 8000688:	f000 faee 	bl	8000c68 <HAL_GetTick>
 800068c:	4603      	mov	r3, r0
 800068e:	613b      	str	r3, [r7, #16]
	 GUI_Exec();
 8000690:	f008 fc3a 	bl	8008f08 <GUI_Exec>
	 StopTime = HAL_GetTick() - StartTime;
 8000694:	f000 fae8 	bl	8000c68 <HAL_GetTick>
 8000698:	4602      	mov	r2, r0
 800069a:	693b      	ldr	r3, [r7, #16]
 800069c:	1ad3      	subs	r3, r2, r3
 800069e:	633b      	str	r3, [r7, #48]	; 0x30
  {
 80006a0:	e79f      	b.n	80005e2 <MainLCDTask+0x92>
 80006a2:	bf00      	nop
 80006a4:	080004f5 	.word	0x080004f5
 80006a8:	0800d4b8 	.word	0x0800d4b8
 80006ac:	ffff0000 	.word	0xffff0000
 80006b0:	2000020c 	.word	0x2000020c
 80006b4:	66666667 	.word	0x66666667

080006b8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80006b8:	b580      	push	{r7, lr}
 80006ba:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80006bc:	f000 fa6e 	bl	8000b9c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80006c0:	f000 f80a 	bl	80006d8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80006c4:	f000 f8fa 	bl	80008bc <MX_GPIO_Init>
  MX_ADC1_Init();
 80006c8:	f000 f870 	bl	80007ac <MX_ADC1_Init>
  MX_SPI1_Init();
 80006cc:	f000 f8c0 	bl	8000850 <MX_SPI1_Init>
  /* USER CODE BEGIN 2 */

  MainLCDTask();
 80006d0:	f7ff ff3e 	bl	8000550 <MainLCDTask>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 80006d4:	e7fe      	b.n	80006d4 <main+0x1c>
	...

080006d8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80006d8:	b580      	push	{r7, lr}
 80006da:	b094      	sub	sp, #80	; 0x50
 80006dc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80006de:	f107 0320 	add.w	r3, r7, #32
 80006e2:	2230      	movs	r2, #48	; 0x30
 80006e4:	2100      	movs	r1, #0
 80006e6:	4618      	mov	r0, r3
 80006e8:	f00c fe6e 	bl	800d3c8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80006ec:	f107 030c 	add.w	r3, r7, #12
 80006f0:	2200      	movs	r2, #0
 80006f2:	601a      	str	r2, [r3, #0]
 80006f4:	605a      	str	r2, [r3, #4]
 80006f6:	609a      	str	r2, [r3, #8]
 80006f8:	60da      	str	r2, [r3, #12]
 80006fa:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80006fc:	2300      	movs	r3, #0
 80006fe:	60bb      	str	r3, [r7, #8]
 8000700:	4b28      	ldr	r3, [pc, #160]	; (80007a4 <SystemClock_Config+0xcc>)
 8000702:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000704:	4a27      	ldr	r2, [pc, #156]	; (80007a4 <SystemClock_Config+0xcc>)
 8000706:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800070a:	6413      	str	r3, [r2, #64]	; 0x40
 800070c:	4b25      	ldr	r3, [pc, #148]	; (80007a4 <SystemClock_Config+0xcc>)
 800070e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000710:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000714:	60bb      	str	r3, [r7, #8]
 8000716:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000718:	2300      	movs	r3, #0
 800071a:	607b      	str	r3, [r7, #4]
 800071c:	4b22      	ldr	r3, [pc, #136]	; (80007a8 <SystemClock_Config+0xd0>)
 800071e:	681b      	ldr	r3, [r3, #0]
 8000720:	4a21      	ldr	r2, [pc, #132]	; (80007a8 <SystemClock_Config+0xd0>)
 8000722:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000726:	6013      	str	r3, [r2, #0]
 8000728:	4b1f      	ldr	r3, [pc, #124]	; (80007a8 <SystemClock_Config+0xd0>)
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000730:	607b      	str	r3, [r7, #4]
 8000732:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000734:	2301      	movs	r3, #1
 8000736:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000738:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800073c:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800073e:	2302      	movs	r3, #2
 8000740:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000742:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000746:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000748:	2304      	movs	r3, #4
 800074a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 800074c:	23a8      	movs	r3, #168	; 0xa8
 800074e:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000750:	2302      	movs	r3, #2
 8000752:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8000754:	2304      	movs	r3, #4
 8000756:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000758:	f107 0320 	add.w	r3, r7, #32
 800075c:	4618      	mov	r0, r3
 800075e:	f001 f94f 	bl	8001a00 <HAL_RCC_OscConfig>
 8000762:	4603      	mov	r3, r0
 8000764:	2b00      	cmp	r3, #0
 8000766:	d001      	beq.n	800076c <SystemClock_Config+0x94>
  {
    Error_Handler();
 8000768:	f000 f8f8 	bl	800095c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800076c:	230f      	movs	r3, #15
 800076e:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000770:	2302      	movs	r3, #2
 8000772:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000774:	2300      	movs	r3, #0
 8000776:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000778:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800077c:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800077e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000782:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000784:	f107 030c 	add.w	r3, r7, #12
 8000788:	2105      	movs	r1, #5
 800078a:	4618      	mov	r0, r3
 800078c:	f001 fbb0 	bl	8001ef0 <HAL_RCC_ClockConfig>
 8000790:	4603      	mov	r3, r0
 8000792:	2b00      	cmp	r3, #0
 8000794:	d001      	beq.n	800079a <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8000796:	f000 f8e1 	bl	800095c <Error_Handler>
  }
}
 800079a:	bf00      	nop
 800079c:	3750      	adds	r7, #80	; 0x50
 800079e:	46bd      	mov	sp, r7
 80007a0:	bd80      	pop	{r7, pc}
 80007a2:	bf00      	nop
 80007a4:	40023800 	.word	0x40023800
 80007a8:	40007000 	.word	0x40007000

080007ac <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80007ac:	b580      	push	{r7, lr}
 80007ae:	b084      	sub	sp, #16
 80007b0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80007b2:	463b      	mov	r3, r7
 80007b4:	2200      	movs	r2, #0
 80007b6:	601a      	str	r2, [r3, #0]
 80007b8:	605a      	str	r2, [r3, #4]
 80007ba:	609a      	str	r2, [r3, #8]
 80007bc:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 80007be:	4b21      	ldr	r3, [pc, #132]	; (8000844 <MX_ADC1_Init+0x98>)
 80007c0:	4a21      	ldr	r2, [pc, #132]	; (8000848 <MX_ADC1_Init+0x9c>)
 80007c2:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80007c4:	4b1f      	ldr	r3, [pc, #124]	; (8000844 <MX_ADC1_Init+0x98>)
 80007c6:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80007ca:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80007cc:	4b1d      	ldr	r3, [pc, #116]	; (8000844 <MX_ADC1_Init+0x98>)
 80007ce:	2200      	movs	r2, #0
 80007d0:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80007d2:	4b1c      	ldr	r3, [pc, #112]	; (8000844 <MX_ADC1_Init+0x98>)
 80007d4:	2200      	movs	r2, #0
 80007d6:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80007d8:	4b1a      	ldr	r3, [pc, #104]	; (8000844 <MX_ADC1_Init+0x98>)
 80007da:	2200      	movs	r2, #0
 80007dc:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80007de:	4b19      	ldr	r3, [pc, #100]	; (8000844 <MX_ADC1_Init+0x98>)
 80007e0:	2200      	movs	r2, #0
 80007e2:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80007e6:	4b17      	ldr	r3, [pc, #92]	; (8000844 <MX_ADC1_Init+0x98>)
 80007e8:	2200      	movs	r2, #0
 80007ea:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80007ec:	4b15      	ldr	r3, [pc, #84]	; (8000844 <MX_ADC1_Init+0x98>)
 80007ee:	4a17      	ldr	r2, [pc, #92]	; (800084c <MX_ADC1_Init+0xa0>)
 80007f0:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80007f2:	4b14      	ldr	r3, [pc, #80]	; (8000844 <MX_ADC1_Init+0x98>)
 80007f4:	2200      	movs	r2, #0
 80007f6:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 80007f8:	4b12      	ldr	r3, [pc, #72]	; (8000844 <MX_ADC1_Init+0x98>)
 80007fa:	2201      	movs	r2, #1
 80007fc:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80007fe:	4b11      	ldr	r3, [pc, #68]	; (8000844 <MX_ADC1_Init+0x98>)
 8000800:	2200      	movs	r2, #0
 8000802:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000806:	4b0f      	ldr	r3, [pc, #60]	; (8000844 <MX_ADC1_Init+0x98>)
 8000808:	2201      	movs	r2, #1
 800080a:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800080c:	480d      	ldr	r0, [pc, #52]	; (8000844 <MX_ADC1_Init+0x98>)
 800080e:	f000 fa5b 	bl	8000cc8 <HAL_ADC_Init>
 8000812:	4603      	mov	r3, r0
 8000814:	2b00      	cmp	r3, #0
 8000816:	d001      	beq.n	800081c <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8000818:	f000 f8a0 	bl	800095c <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 800081c:	2300      	movs	r3, #0
 800081e:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8000820:	2301      	movs	r3, #1
 8000822:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000824:	2300      	movs	r3, #0
 8000826:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000828:	463b      	mov	r3, r7
 800082a:	4619      	mov	r1, r3
 800082c:	4805      	ldr	r0, [pc, #20]	; (8000844 <MX_ADC1_Init+0x98>)
 800082e:	f000 fc2d 	bl	800108c <HAL_ADC_ConfigChannel>
 8000832:	4603      	mov	r3, r0
 8000834:	2b00      	cmp	r3, #0
 8000836:	d001      	beq.n	800083c <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8000838:	f000 f890 	bl	800095c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 800083c:	bf00      	nop
 800083e:	3710      	adds	r7, #16
 8000840:	46bd      	mov	sp, r7
 8000842:	bd80      	pop	{r7, pc}
 8000844:	2000020c 	.word	0x2000020c
 8000848:	40012000 	.word	0x40012000
 800084c:	0f000001 	.word	0x0f000001

08000850 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000850:	b580      	push	{r7, lr}
 8000852:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000854:	4b17      	ldr	r3, [pc, #92]	; (80008b4 <MX_SPI1_Init+0x64>)
 8000856:	4a18      	ldr	r2, [pc, #96]	; (80008b8 <MX_SPI1_Init+0x68>)
 8000858:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800085a:	4b16      	ldr	r3, [pc, #88]	; (80008b4 <MX_SPI1_Init+0x64>)
 800085c:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000860:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000862:	4b14      	ldr	r3, [pc, #80]	; (80008b4 <MX_SPI1_Init+0x64>)
 8000864:	2200      	movs	r2, #0
 8000866:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8000868:	4b12      	ldr	r3, [pc, #72]	; (80008b4 <MX_SPI1_Init+0x64>)
 800086a:	2200      	movs	r2, #0
 800086c:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 800086e:	4b11      	ldr	r3, [pc, #68]	; (80008b4 <MX_SPI1_Init+0x64>)
 8000870:	2200      	movs	r2, #0
 8000872:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000874:	4b0f      	ldr	r3, [pc, #60]	; (80008b4 <MX_SPI1_Init+0x64>)
 8000876:	2200      	movs	r2, #0
 8000878:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 800087a:	4b0e      	ldr	r3, [pc, #56]	; (80008b4 <MX_SPI1_Init+0x64>)
 800087c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000880:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000882:	4b0c      	ldr	r3, [pc, #48]	; (80008b4 <MX_SPI1_Init+0x64>)
 8000884:	2200      	movs	r2, #0
 8000886:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000888:	4b0a      	ldr	r3, [pc, #40]	; (80008b4 <MX_SPI1_Init+0x64>)
 800088a:	2200      	movs	r2, #0
 800088c:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 800088e:	4b09      	ldr	r3, [pc, #36]	; (80008b4 <MX_SPI1_Init+0x64>)
 8000890:	2200      	movs	r2, #0
 8000892:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000894:	4b07      	ldr	r3, [pc, #28]	; (80008b4 <MX_SPI1_Init+0x64>)
 8000896:	2200      	movs	r2, #0
 8000898:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 800089a:	4b06      	ldr	r3, [pc, #24]	; (80008b4 <MX_SPI1_Init+0x64>)
 800089c:	220a      	movs	r2, #10
 800089e:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 80008a0:	4804      	ldr	r0, [pc, #16]	; (80008b4 <MX_SPI1_Init+0x64>)
 80008a2:	f001 fd11 	bl	80022c8 <HAL_SPI_Init>
 80008a6:	4603      	mov	r3, r0
 80008a8:	2b00      	cmp	r3, #0
 80008aa:	d001      	beq.n	80008b0 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 80008ac:	f000 f856 	bl	800095c <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80008b0:	bf00      	nop
 80008b2:	bd80      	pop	{r7, pc}
 80008b4:	20000254 	.word	0x20000254
 80008b8:	40013000 	.word	0x40013000

080008bc <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80008bc:	b580      	push	{r7, lr}
 80008be:	b088      	sub	sp, #32
 80008c0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80008c2:	f107 030c 	add.w	r3, r7, #12
 80008c6:	2200      	movs	r2, #0
 80008c8:	601a      	str	r2, [r3, #0]
 80008ca:	605a      	str	r2, [r3, #4]
 80008cc:	609a      	str	r2, [r3, #8]
 80008ce:	60da      	str	r2, [r3, #12]
 80008d0:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80008d2:	2300      	movs	r3, #0
 80008d4:	60bb      	str	r3, [r7, #8]
 80008d6:	4b1f      	ldr	r3, [pc, #124]	; (8000954 <MX_GPIO_Init+0x98>)
 80008d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80008da:	4a1e      	ldr	r2, [pc, #120]	; (8000954 <MX_GPIO_Init+0x98>)
 80008dc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80008e0:	6313      	str	r3, [r2, #48]	; 0x30
 80008e2:	4b1c      	ldr	r3, [pc, #112]	; (8000954 <MX_GPIO_Init+0x98>)
 80008e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80008e6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80008ea:	60bb      	str	r3, [r7, #8]
 80008ec:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80008ee:	2300      	movs	r3, #0
 80008f0:	607b      	str	r3, [r7, #4]
 80008f2:	4b18      	ldr	r3, [pc, #96]	; (8000954 <MX_GPIO_Init+0x98>)
 80008f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80008f6:	4a17      	ldr	r2, [pc, #92]	; (8000954 <MX_GPIO_Init+0x98>)
 80008f8:	f043 0304 	orr.w	r3, r3, #4
 80008fc:	6313      	str	r3, [r2, #48]	; 0x30
 80008fe:	4b15      	ldr	r3, [pc, #84]	; (8000954 <MX_GPIO_Init+0x98>)
 8000900:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000902:	f003 0304 	and.w	r3, r3, #4
 8000906:	607b      	str	r3, [r7, #4]
 8000908:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800090a:	2300      	movs	r3, #0
 800090c:	603b      	str	r3, [r7, #0]
 800090e:	4b11      	ldr	r3, [pc, #68]	; (8000954 <MX_GPIO_Init+0x98>)
 8000910:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000912:	4a10      	ldr	r2, [pc, #64]	; (8000954 <MX_GPIO_Init+0x98>)
 8000914:	f043 0301 	orr.w	r3, r3, #1
 8000918:	6313      	str	r3, [r2, #48]	; 0x30
 800091a:	4b0e      	ldr	r3, [pc, #56]	; (8000954 <MX_GPIO_Init+0x98>)
 800091c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800091e:	f003 0301 	and.w	r3, r3, #1
 8000922:	603b      	str	r3, [r7, #0]
 8000924:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin|LCD_DC_Pin|LCD_RST_Pin, GPIO_PIN_RESET);
 8000926:	2200      	movs	r2, #0
 8000928:	210e      	movs	r1, #14
 800092a:	480b      	ldr	r0, [pc, #44]	; (8000958 <MX_GPIO_Init+0x9c>)
 800092c:	f001 f84e 	bl	80019cc <HAL_GPIO_WritePin>

  /*Configure GPIO pins : LCD_CS_Pin LCD_DC_Pin LCD_RST_Pin */
  GPIO_InitStruct.Pin = LCD_CS_Pin|LCD_DC_Pin|LCD_RST_Pin;
 8000930:	230e      	movs	r3, #14
 8000932:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000934:	2301      	movs	r3, #1
 8000936:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000938:	2300      	movs	r3, #0
 800093a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800093c:	2300      	movs	r3, #0
 800093e:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000940:	f107 030c 	add.w	r3, r7, #12
 8000944:	4619      	mov	r1, r3
 8000946:	4804      	ldr	r0, [pc, #16]	; (8000958 <MX_GPIO_Init+0x9c>)
 8000948:	f000 fea4 	bl	8001694 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800094c:	bf00      	nop
 800094e:	3720      	adds	r7, #32
 8000950:	46bd      	mov	sp, r7
 8000952:	bd80      	pop	{r7, pc}
 8000954:	40023800 	.word	0x40023800
 8000958:	40020800 	.word	0x40020800

0800095c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800095c:	b480      	push	{r7}
 800095e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000960:	b672      	cpsid	i
}
 8000962:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000964:	e7fe      	b.n	8000964 <Error_Handler+0x8>
	...

08000968 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000968:	b480      	push	{r7}
 800096a:	b083      	sub	sp, #12
 800096c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800096e:	2300      	movs	r3, #0
 8000970:	607b      	str	r3, [r7, #4]
 8000972:	4b10      	ldr	r3, [pc, #64]	; (80009b4 <HAL_MspInit+0x4c>)
 8000974:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000976:	4a0f      	ldr	r2, [pc, #60]	; (80009b4 <HAL_MspInit+0x4c>)
 8000978:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800097c:	6453      	str	r3, [r2, #68]	; 0x44
 800097e:	4b0d      	ldr	r3, [pc, #52]	; (80009b4 <HAL_MspInit+0x4c>)
 8000980:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000982:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000986:	607b      	str	r3, [r7, #4]
 8000988:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800098a:	2300      	movs	r3, #0
 800098c:	603b      	str	r3, [r7, #0]
 800098e:	4b09      	ldr	r3, [pc, #36]	; (80009b4 <HAL_MspInit+0x4c>)
 8000990:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000992:	4a08      	ldr	r2, [pc, #32]	; (80009b4 <HAL_MspInit+0x4c>)
 8000994:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000998:	6413      	str	r3, [r2, #64]	; 0x40
 800099a:	4b06      	ldr	r3, [pc, #24]	; (80009b4 <HAL_MspInit+0x4c>)
 800099c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800099e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80009a2:	603b      	str	r3, [r7, #0]
 80009a4:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80009a6:	bf00      	nop
 80009a8:	370c      	adds	r7, #12
 80009aa:	46bd      	mov	sp, r7
 80009ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009b0:	4770      	bx	lr
 80009b2:	bf00      	nop
 80009b4:	40023800 	.word	0x40023800

080009b8 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80009b8:	b580      	push	{r7, lr}
 80009ba:	b08a      	sub	sp, #40	; 0x28
 80009bc:	af00      	add	r7, sp, #0
 80009be:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80009c0:	f107 0314 	add.w	r3, r7, #20
 80009c4:	2200      	movs	r2, #0
 80009c6:	601a      	str	r2, [r3, #0]
 80009c8:	605a      	str	r2, [r3, #4]
 80009ca:	609a      	str	r2, [r3, #8]
 80009cc:	60da      	str	r2, [r3, #12]
 80009ce:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 80009d0:	687b      	ldr	r3, [r7, #4]
 80009d2:	681b      	ldr	r3, [r3, #0]
 80009d4:	4a17      	ldr	r2, [pc, #92]	; (8000a34 <HAL_ADC_MspInit+0x7c>)
 80009d6:	4293      	cmp	r3, r2
 80009d8:	d127      	bne.n	8000a2a <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80009da:	2300      	movs	r3, #0
 80009dc:	613b      	str	r3, [r7, #16]
 80009de:	4b16      	ldr	r3, [pc, #88]	; (8000a38 <HAL_ADC_MspInit+0x80>)
 80009e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009e2:	4a15      	ldr	r2, [pc, #84]	; (8000a38 <HAL_ADC_MspInit+0x80>)
 80009e4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80009e8:	6453      	str	r3, [r2, #68]	; 0x44
 80009ea:	4b13      	ldr	r3, [pc, #76]	; (8000a38 <HAL_ADC_MspInit+0x80>)
 80009ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80009f2:	613b      	str	r3, [r7, #16]
 80009f4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80009f6:	2300      	movs	r3, #0
 80009f8:	60fb      	str	r3, [r7, #12]
 80009fa:	4b0f      	ldr	r3, [pc, #60]	; (8000a38 <HAL_ADC_MspInit+0x80>)
 80009fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80009fe:	4a0e      	ldr	r2, [pc, #56]	; (8000a38 <HAL_ADC_MspInit+0x80>)
 8000a00:	f043 0301 	orr.w	r3, r3, #1
 8000a04:	6313      	str	r3, [r2, #48]	; 0x30
 8000a06:	4b0c      	ldr	r3, [pc, #48]	; (8000a38 <HAL_ADC_MspInit+0x80>)
 8000a08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000a0a:	f003 0301 	and.w	r3, r3, #1
 8000a0e:	60fb      	str	r3, [r7, #12]
 8000a10:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA0-WKUP     ------> ADC1_IN0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000a12:	2301      	movs	r3, #1
 8000a14:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000a16:	2303      	movs	r3, #3
 8000a18:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a1a:	2300      	movs	r3, #0
 8000a1c:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000a1e:	f107 0314 	add.w	r3, r7, #20
 8000a22:	4619      	mov	r1, r3
 8000a24:	4805      	ldr	r0, [pc, #20]	; (8000a3c <HAL_ADC_MspInit+0x84>)
 8000a26:	f000 fe35 	bl	8001694 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8000a2a:	bf00      	nop
 8000a2c:	3728      	adds	r7, #40	; 0x28
 8000a2e:	46bd      	mov	sp, r7
 8000a30:	bd80      	pop	{r7, pc}
 8000a32:	bf00      	nop
 8000a34:	40012000 	.word	0x40012000
 8000a38:	40023800 	.word	0x40023800
 8000a3c:	40020000 	.word	0x40020000

08000a40 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8000a40:	b580      	push	{r7, lr}
 8000a42:	b08a      	sub	sp, #40	; 0x28
 8000a44:	af00      	add	r7, sp, #0
 8000a46:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a48:	f107 0314 	add.w	r3, r7, #20
 8000a4c:	2200      	movs	r2, #0
 8000a4e:	601a      	str	r2, [r3, #0]
 8000a50:	605a      	str	r2, [r3, #4]
 8000a52:	609a      	str	r2, [r3, #8]
 8000a54:	60da      	str	r2, [r3, #12]
 8000a56:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 8000a58:	687b      	ldr	r3, [r7, #4]
 8000a5a:	681b      	ldr	r3, [r3, #0]
 8000a5c:	4a19      	ldr	r2, [pc, #100]	; (8000ac4 <HAL_SPI_MspInit+0x84>)
 8000a5e:	4293      	cmp	r3, r2
 8000a60:	d12b      	bne.n	8000aba <HAL_SPI_MspInit+0x7a>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8000a62:	2300      	movs	r3, #0
 8000a64:	613b      	str	r3, [r7, #16]
 8000a66:	4b18      	ldr	r3, [pc, #96]	; (8000ac8 <HAL_SPI_MspInit+0x88>)
 8000a68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000a6a:	4a17      	ldr	r2, [pc, #92]	; (8000ac8 <HAL_SPI_MspInit+0x88>)
 8000a6c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000a70:	6453      	str	r3, [r2, #68]	; 0x44
 8000a72:	4b15      	ldr	r3, [pc, #84]	; (8000ac8 <HAL_SPI_MspInit+0x88>)
 8000a74:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000a76:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000a7a:	613b      	str	r3, [r7, #16]
 8000a7c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000a7e:	2300      	movs	r3, #0
 8000a80:	60fb      	str	r3, [r7, #12]
 8000a82:	4b11      	ldr	r3, [pc, #68]	; (8000ac8 <HAL_SPI_MspInit+0x88>)
 8000a84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000a86:	4a10      	ldr	r2, [pc, #64]	; (8000ac8 <HAL_SPI_MspInit+0x88>)
 8000a88:	f043 0301 	orr.w	r3, r3, #1
 8000a8c:	6313      	str	r3, [r2, #48]	; 0x30
 8000a8e:	4b0e      	ldr	r3, [pc, #56]	; (8000ac8 <HAL_SPI_MspInit+0x88>)
 8000a90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000a92:	f003 0301 	and.w	r3, r3, #1
 8000a96:	60fb      	str	r3, [r7, #12]
 8000a98:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8000a9a:	23e0      	movs	r3, #224	; 0xe0
 8000a9c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000a9e:	2302      	movs	r3, #2
 8000aa0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000aa2:	2300      	movs	r3, #0
 8000aa4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000aa6:	2303      	movs	r3, #3
 8000aa8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8000aaa:	2305      	movs	r3, #5
 8000aac:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000aae:	f107 0314 	add.w	r3, r7, #20
 8000ab2:	4619      	mov	r1, r3
 8000ab4:	4805      	ldr	r0, [pc, #20]	; (8000acc <HAL_SPI_MspInit+0x8c>)
 8000ab6:	f000 fded 	bl	8001694 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 8000aba:	bf00      	nop
 8000abc:	3728      	adds	r7, #40	; 0x28
 8000abe:	46bd      	mov	sp, r7
 8000ac0:	bd80      	pop	{r7, pc}
 8000ac2:	bf00      	nop
 8000ac4:	40013000 	.word	0x40013000
 8000ac8:	40023800 	.word	0x40023800
 8000acc:	40020000 	.word	0x40020000

08000ad0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000ad0:	b480      	push	{r7}
 8000ad2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000ad4:	e7fe      	b.n	8000ad4 <NMI_Handler+0x4>

08000ad6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000ad6:	b480      	push	{r7}
 8000ad8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000ada:	e7fe      	b.n	8000ada <HardFault_Handler+0x4>

08000adc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000adc:	b480      	push	{r7}
 8000ade:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000ae0:	e7fe      	b.n	8000ae0 <MemManage_Handler+0x4>

08000ae2 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000ae2:	b480      	push	{r7}
 8000ae4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000ae6:	e7fe      	b.n	8000ae6 <BusFault_Handler+0x4>

08000ae8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000ae8:	b480      	push	{r7}
 8000aea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000aec:	e7fe      	b.n	8000aec <UsageFault_Handler+0x4>

08000aee <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000aee:	b480      	push	{r7}
 8000af0:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000af2:	bf00      	nop
 8000af4:	46bd      	mov	sp, r7
 8000af6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000afa:	4770      	bx	lr

08000afc <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000afc:	b480      	push	{r7}
 8000afe:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000b00:	bf00      	nop
 8000b02:	46bd      	mov	sp, r7
 8000b04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b08:	4770      	bx	lr

08000b0a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000b0a:	b480      	push	{r7}
 8000b0c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000b0e:	bf00      	nop
 8000b10:	46bd      	mov	sp, r7
 8000b12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b16:	4770      	bx	lr

08000b18 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000b18:	b580      	push	{r7, lr}
 8000b1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000b1c:	f000 f890 	bl	8000c40 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000b20:	bf00      	nop
 8000b22:	bd80      	pop	{r7, pc}

08000b24 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000b24:	b480      	push	{r7}
 8000b26:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000b28:	4b06      	ldr	r3, [pc, #24]	; (8000b44 <SystemInit+0x20>)
 8000b2a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000b2e:	4a05      	ldr	r2, [pc, #20]	; (8000b44 <SystemInit+0x20>)
 8000b30:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000b34:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000b38:	bf00      	nop
 8000b3a:	46bd      	mov	sp, r7
 8000b3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b40:	4770      	bx	lr
 8000b42:	bf00      	nop
 8000b44:	e000ed00 	.word	0xe000ed00

08000b48 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000b48:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000b80 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000b4c:	480d      	ldr	r0, [pc, #52]	; (8000b84 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8000b4e:	490e      	ldr	r1, [pc, #56]	; (8000b88 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8000b50:	4a0e      	ldr	r2, [pc, #56]	; (8000b8c <LoopFillZerobss+0x1e>)
  movs r3, #0
 8000b52:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000b54:	e002      	b.n	8000b5c <LoopCopyDataInit>

08000b56 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000b56:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000b58:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000b5a:	3304      	adds	r3, #4

08000b5c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000b5c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000b5e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000b60:	d3f9      	bcc.n	8000b56 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000b62:	4a0b      	ldr	r2, [pc, #44]	; (8000b90 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8000b64:	4c0b      	ldr	r4, [pc, #44]	; (8000b94 <LoopFillZerobss+0x26>)
  movs r3, #0
 8000b66:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000b68:	e001      	b.n	8000b6e <LoopFillZerobss>

08000b6a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000b6a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000b6c:	3204      	adds	r2, #4

08000b6e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000b6e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000b70:	d3fb      	bcc.n	8000b6a <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8000b72:	f7ff ffd7 	bl	8000b24 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000b76:	f00c fbc1 	bl	800d2fc <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000b7a:	f7ff fd9d 	bl	80006b8 <main>
  bx  lr    
 8000b7e:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8000b80:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000b84:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000b88:	200001ec 	.word	0x200001ec
  ldr r2, =_sidata
 8000b8c:	0800ff58 	.word	0x0800ff58
  ldr r2, =_sbss
 8000b90:	200001ec 	.word	0x200001ec
  ldr r4, =_ebss
 8000b94:	200005a8 	.word	0x200005a8

08000b98 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000b98:	e7fe      	b.n	8000b98 <ADC_IRQHandler>
	...

08000b9c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8000b9c:	b580      	push	{r7, lr}
 8000b9e:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8000ba0:	4b0e      	ldr	r3, [pc, #56]	; (8000bdc <HAL_Init+0x40>)
 8000ba2:	681b      	ldr	r3, [r3, #0]
 8000ba4:	4a0d      	ldr	r2, [pc, #52]	; (8000bdc <HAL_Init+0x40>)
 8000ba6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000baa:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8000bac:	4b0b      	ldr	r3, [pc, #44]	; (8000bdc <HAL_Init+0x40>)
 8000bae:	681b      	ldr	r3, [r3, #0]
 8000bb0:	4a0a      	ldr	r2, [pc, #40]	; (8000bdc <HAL_Init+0x40>)
 8000bb2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000bb6:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8000bb8:	4b08      	ldr	r3, [pc, #32]	; (8000bdc <HAL_Init+0x40>)
 8000bba:	681b      	ldr	r3, [r3, #0]
 8000bbc:	4a07      	ldr	r2, [pc, #28]	; (8000bdc <HAL_Init+0x40>)
 8000bbe:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000bc2:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8000bc4:	2003      	movs	r0, #3
 8000bc6:	f000 fd31 	bl	800162c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8000bca:	200f      	movs	r0, #15
 8000bcc:	f000 f808 	bl	8000be0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8000bd0:	f7ff feca 	bl	8000968 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8000bd4:	2300      	movs	r3, #0
}
 8000bd6:	4618      	mov	r0, r3
 8000bd8:	bd80      	pop	{r7, pc}
 8000bda:	bf00      	nop
 8000bdc:	40023c00 	.word	0x40023c00

08000be0 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8000be0:	b580      	push	{r7, lr}
 8000be2:	b082      	sub	sp, #8
 8000be4:	af00      	add	r7, sp, #0
 8000be6:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8000be8:	4b12      	ldr	r3, [pc, #72]	; (8000c34 <HAL_InitTick+0x54>)
 8000bea:	681a      	ldr	r2, [r3, #0]
 8000bec:	4b12      	ldr	r3, [pc, #72]	; (8000c38 <HAL_InitTick+0x58>)
 8000bee:	781b      	ldrb	r3, [r3, #0]
 8000bf0:	4619      	mov	r1, r3
 8000bf2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000bf6:	fbb3 f3f1 	udiv	r3, r3, r1
 8000bfa:	fbb2 f3f3 	udiv	r3, r2, r3
 8000bfe:	4618      	mov	r0, r3
 8000c00:	f000 fd3b 	bl	800167a <HAL_SYSTICK_Config>
 8000c04:	4603      	mov	r3, r0
 8000c06:	2b00      	cmp	r3, #0
 8000c08:	d001      	beq.n	8000c0e <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8000c0a:	2301      	movs	r3, #1
 8000c0c:	e00e      	b.n	8000c2c <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000c0e:	687b      	ldr	r3, [r7, #4]
 8000c10:	2b0f      	cmp	r3, #15
 8000c12:	d80a      	bhi.n	8000c2a <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8000c14:	2200      	movs	r2, #0
 8000c16:	6879      	ldr	r1, [r7, #4]
 8000c18:	f04f 30ff 	mov.w	r0, #4294967295
 8000c1c:	f000 fd11 	bl	8001642 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8000c20:	4a06      	ldr	r2, [pc, #24]	; (8000c3c <HAL_InitTick+0x5c>)
 8000c22:	687b      	ldr	r3, [r7, #4]
 8000c24:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8000c26:	2300      	movs	r3, #0
 8000c28:	e000      	b.n	8000c2c <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8000c2a:	2301      	movs	r3, #1
}
 8000c2c:	4618      	mov	r0, r3
 8000c2e:	3708      	adds	r7, #8
 8000c30:	46bd      	mov	sp, r7
 8000c32:	bd80      	pop	{r7, pc}
 8000c34:	20000000 	.word	0x20000000
 8000c38:	20000008 	.word	0x20000008
 8000c3c:	20000004 	.word	0x20000004

08000c40 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8000c40:	b480      	push	{r7}
 8000c42:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8000c44:	4b06      	ldr	r3, [pc, #24]	; (8000c60 <HAL_IncTick+0x20>)
 8000c46:	781b      	ldrb	r3, [r3, #0]
 8000c48:	461a      	mov	r2, r3
 8000c4a:	4b06      	ldr	r3, [pc, #24]	; (8000c64 <HAL_IncTick+0x24>)
 8000c4c:	681b      	ldr	r3, [r3, #0]
 8000c4e:	4413      	add	r3, r2
 8000c50:	4a04      	ldr	r2, [pc, #16]	; (8000c64 <HAL_IncTick+0x24>)
 8000c52:	6013      	str	r3, [r2, #0]
}
 8000c54:	bf00      	nop
 8000c56:	46bd      	mov	sp, r7
 8000c58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c5c:	4770      	bx	lr
 8000c5e:	bf00      	nop
 8000c60:	20000008 	.word	0x20000008
 8000c64:	200002ac 	.word	0x200002ac

08000c68 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8000c68:	b480      	push	{r7}
 8000c6a:	af00      	add	r7, sp, #0
  return uwTick;
 8000c6c:	4b03      	ldr	r3, [pc, #12]	; (8000c7c <HAL_GetTick+0x14>)
 8000c6e:	681b      	ldr	r3, [r3, #0]
}
 8000c70:	4618      	mov	r0, r3
 8000c72:	46bd      	mov	sp, r7
 8000c74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c78:	4770      	bx	lr
 8000c7a:	bf00      	nop
 8000c7c:	200002ac 	.word	0x200002ac

08000c80 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8000c80:	b580      	push	{r7, lr}
 8000c82:	b084      	sub	sp, #16
 8000c84:	af00      	add	r7, sp, #0
 8000c86:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8000c88:	f7ff ffee 	bl	8000c68 <HAL_GetTick>
 8000c8c:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8000c8e:	687b      	ldr	r3, [r7, #4]
 8000c90:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8000c92:	68fb      	ldr	r3, [r7, #12]
 8000c94:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000c98:	d005      	beq.n	8000ca6 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8000c9a:	4b0a      	ldr	r3, [pc, #40]	; (8000cc4 <HAL_Delay+0x44>)
 8000c9c:	781b      	ldrb	r3, [r3, #0]
 8000c9e:	461a      	mov	r2, r3
 8000ca0:	68fb      	ldr	r3, [r7, #12]
 8000ca2:	4413      	add	r3, r2
 8000ca4:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8000ca6:	bf00      	nop
 8000ca8:	f7ff ffde 	bl	8000c68 <HAL_GetTick>
 8000cac:	4602      	mov	r2, r0
 8000cae:	68bb      	ldr	r3, [r7, #8]
 8000cb0:	1ad3      	subs	r3, r2, r3
 8000cb2:	68fa      	ldr	r2, [r7, #12]
 8000cb4:	429a      	cmp	r2, r3
 8000cb6:	d8f7      	bhi.n	8000ca8 <HAL_Delay+0x28>
  {
  }
}
 8000cb8:	bf00      	nop
 8000cba:	bf00      	nop
 8000cbc:	3710      	adds	r7, #16
 8000cbe:	46bd      	mov	sp, r7
 8000cc0:	bd80      	pop	{r7, pc}
 8000cc2:	bf00      	nop
 8000cc4:	20000008 	.word	0x20000008

08000cc8 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8000cc8:	b580      	push	{r7, lr}
 8000cca:	b084      	sub	sp, #16
 8000ccc:	af00      	add	r7, sp, #0
 8000cce:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8000cd0:	2300      	movs	r3, #0
 8000cd2:	73fb      	strb	r3, [r7, #15]
  
  /* Check ADC handle */
  if(hadc == NULL)
 8000cd4:	687b      	ldr	r3, [r7, #4]
 8000cd6:	2b00      	cmp	r3, #0
 8000cd8:	d101      	bne.n	8000cde <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 8000cda:	2301      	movs	r3, #1
 8000cdc:	e033      	b.n	8000d46 <HAL_ADC_Init+0x7e>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8000cde:	687b      	ldr	r3, [r7, #4]
 8000ce0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000ce2:	2b00      	cmp	r3, #0
 8000ce4:	d109      	bne.n	8000cfa <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8000ce6:	6878      	ldr	r0, [r7, #4]
 8000ce8:	f7ff fe66 	bl	80009b8 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8000cec:	687b      	ldr	r3, [r7, #4]
 8000cee:	2200      	movs	r2, #0
 8000cf0:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8000cf2:	687b      	ldr	r3, [r7, #4]
 8000cf4:	2200      	movs	r2, #0
 8000cf6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8000cfa:	687b      	ldr	r3, [r7, #4]
 8000cfc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000cfe:	f003 0310 	and.w	r3, r3, #16
 8000d02:	2b00      	cmp	r3, #0
 8000d04:	d118      	bne.n	8000d38 <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8000d06:	687b      	ldr	r3, [r7, #4]
 8000d08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000d0a:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8000d0e:	f023 0302 	bic.w	r3, r3, #2
 8000d12:	f043 0202 	orr.w	r2, r3, #2
 8000d16:	687b      	ldr	r3, [r7, #4]
 8000d18:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);
    
    /* Set ADC parameters */
    ADC_Init(hadc);
 8000d1a:	6878      	ldr	r0, [r7, #4]
 8000d1c:	f000 fad8 	bl	80012d0 <ADC_Init>
    
    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8000d20:	687b      	ldr	r3, [r7, #4]
 8000d22:	2200      	movs	r2, #0
 8000d24:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8000d26:	687b      	ldr	r3, [r7, #4]
 8000d28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000d2a:	f023 0303 	bic.w	r3, r3, #3
 8000d2e:	f043 0201 	orr.w	r2, r3, #1
 8000d32:	687b      	ldr	r3, [r7, #4]
 8000d34:	641a      	str	r2, [r3, #64]	; 0x40
 8000d36:	e001      	b.n	8000d3c <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 8000d38:	2301      	movs	r3, #1
 8000d3a:	73fb      	strb	r3, [r7, #15]
  }
  
  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8000d3c:	687b      	ldr	r3, [r7, #4]
 8000d3e:	2200      	movs	r2, #0
 8000d40:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Return function status */
  return tmp_hal_status;
 8000d44:	7bfb      	ldrb	r3, [r7, #15]
}
 8000d46:	4618      	mov	r0, r3
 8000d48:	3710      	adds	r7, #16
 8000d4a:	46bd      	mov	sp, r7
 8000d4c:	bd80      	pop	{r7, pc}
	...

08000d50 <HAL_ADC_Start>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
{
 8000d50:	b480      	push	{r7}
 8000d52:	b085      	sub	sp, #20
 8000d54:	af00      	add	r7, sp, #0
 8000d56:	6078      	str	r0, [r7, #4]
  __IO uint32_t counter = 0U;
 8000d58:	2300      	movs	r3, #0
 8000d5a:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8000d5c:	687b      	ldr	r3, [r7, #4]
 8000d5e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8000d62:	2b01      	cmp	r3, #1
 8000d64:	d101      	bne.n	8000d6a <HAL_ADC_Start+0x1a>
 8000d66:	2302      	movs	r3, #2
 8000d68:	e0b2      	b.n	8000ed0 <HAL_ADC_Start+0x180>
 8000d6a:	687b      	ldr	r3, [r7, #4]
 8000d6c:	2201      	movs	r2, #1
 8000d6e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during 
  Tstab time the ADC's stabilization */
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8000d72:	687b      	ldr	r3, [r7, #4]
 8000d74:	681b      	ldr	r3, [r3, #0]
 8000d76:	689b      	ldr	r3, [r3, #8]
 8000d78:	f003 0301 	and.w	r3, r3, #1
 8000d7c:	2b01      	cmp	r3, #1
 8000d7e:	d018      	beq.n	8000db2 <HAL_ADC_Start+0x62>
  {  
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8000d80:	687b      	ldr	r3, [r7, #4]
 8000d82:	681b      	ldr	r3, [r3, #0]
 8000d84:	689a      	ldr	r2, [r3, #8]
 8000d86:	687b      	ldr	r3, [r7, #4]
 8000d88:	681b      	ldr	r3, [r3, #0]
 8000d8a:	f042 0201 	orr.w	r2, r2, #1
 8000d8e:	609a      	str	r2, [r3, #8]
    
    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8000d90:	4b52      	ldr	r3, [pc, #328]	; (8000edc <HAL_ADC_Start+0x18c>)
 8000d92:	681b      	ldr	r3, [r3, #0]
 8000d94:	4a52      	ldr	r2, [pc, #328]	; (8000ee0 <HAL_ADC_Start+0x190>)
 8000d96:	fba2 2303 	umull	r2, r3, r2, r3
 8000d9a:	0c9a      	lsrs	r2, r3, #18
 8000d9c:	4613      	mov	r3, r2
 8000d9e:	005b      	lsls	r3, r3, #1
 8000da0:	4413      	add	r3, r2
 8000da2:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8000da4:	e002      	b.n	8000dac <HAL_ADC_Start+0x5c>
    {
      counter--;
 8000da6:	68bb      	ldr	r3, [r7, #8]
 8000da8:	3b01      	subs	r3, #1
 8000daa:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8000dac:	68bb      	ldr	r3, [r7, #8]
 8000dae:	2b00      	cmp	r3, #0
 8000db0:	d1f9      	bne.n	8000da6 <HAL_ADC_Start+0x56>
    }
  }
  
  /* Start conversion if ADC is effectively enabled */
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8000db2:	687b      	ldr	r3, [r7, #4]
 8000db4:	681b      	ldr	r3, [r3, #0]
 8000db6:	689b      	ldr	r3, [r3, #8]
 8000db8:	f003 0301 	and.w	r3, r3, #1
 8000dbc:	2b01      	cmp	r3, #1
 8000dbe:	d17a      	bne.n	8000eb6 <HAL_ADC_Start+0x166>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8000dc0:	687b      	ldr	r3, [r7, #4]
 8000dc2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000dc4:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8000dc8:	f023 0301 	bic.w	r3, r3, #1
 8000dcc:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8000dd0:	687b      	ldr	r3, [r7, #4]
 8000dd2:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);
    
    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8000dd4:	687b      	ldr	r3, [r7, #4]
 8000dd6:	681b      	ldr	r3, [r3, #0]
 8000dd8:	685b      	ldr	r3, [r3, #4]
 8000dda:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8000dde:	2b00      	cmp	r3, #0
 8000de0:	d007      	beq.n	8000df2 <HAL_ADC_Start+0xa2>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8000de2:	687b      	ldr	r3, [r7, #4]
 8000de4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000de6:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000dea:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8000dee:	687b      	ldr	r3, [r7, #4]
 8000df0:	641a      	str	r2, [r3, #64]	; 0x40
    }
    
    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8000df2:	687b      	ldr	r3, [r7, #4]
 8000df4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000df6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000dfa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000dfe:	d106      	bne.n	8000e0e <HAL_ADC_Start+0xbe>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8000e00:	687b      	ldr	r3, [r7, #4]
 8000e02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000e04:	f023 0206 	bic.w	r2, r3, #6
 8000e08:	687b      	ldr	r3, [r7, #4]
 8000e0a:	645a      	str	r2, [r3, #68]	; 0x44
 8000e0c:	e002      	b.n	8000e14 <HAL_ADC_Start+0xc4>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8000e0e:	687b      	ldr	r3, [r7, #4]
 8000e10:	2200      	movs	r2, #0
 8000e12:	645a      	str	r2, [r3, #68]	; 0x44
    } 

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8000e14:	687b      	ldr	r3, [r7, #4]
 8000e16:	2200      	movs	r2, #0
 8000e18:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8000e1c:	4b31      	ldr	r3, [pc, #196]	; (8000ee4 <HAL_ADC_Start+0x194>)
 8000e1e:	60fb      	str	r3, [r7, #12]

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8000e20:	687b      	ldr	r3, [r7, #4]
 8000e22:	681b      	ldr	r3, [r3, #0]
 8000e24:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8000e28:	601a      	str	r2, [r3, #0]
    
    /* Check if Multimode enabled */
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8000e2a:	68fb      	ldr	r3, [r7, #12]
 8000e2c:	685b      	ldr	r3, [r3, #4]
 8000e2e:	f003 031f 	and.w	r3, r3, #31
 8000e32:	2b00      	cmp	r3, #0
 8000e34:	d12a      	bne.n	8000e8c <HAL_ADC_Start+0x13c>
    {
#if defined(ADC2) && defined(ADC3)
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8000e36:	687b      	ldr	r3, [r7, #4]
 8000e38:	681b      	ldr	r3, [r3, #0]
 8000e3a:	4a2b      	ldr	r2, [pc, #172]	; (8000ee8 <HAL_ADC_Start+0x198>)
 8000e3c:	4293      	cmp	r3, r2
 8000e3e:	d015      	beq.n	8000e6c <HAL_ADC_Start+0x11c>
 8000e40:	687b      	ldr	r3, [r7, #4]
 8000e42:	681b      	ldr	r3, [r3, #0]
 8000e44:	4a29      	ldr	r2, [pc, #164]	; (8000eec <HAL_ADC_Start+0x19c>)
 8000e46:	4293      	cmp	r3, r2
 8000e48:	d105      	bne.n	8000e56 <HAL_ADC_Start+0x106>
 8000e4a:	4b26      	ldr	r3, [pc, #152]	; (8000ee4 <HAL_ADC_Start+0x194>)
 8000e4c:	685b      	ldr	r3, [r3, #4]
 8000e4e:	f003 031f 	and.w	r3, r3, #31
 8000e52:	2b00      	cmp	r3, #0
 8000e54:	d00a      	beq.n	8000e6c <HAL_ADC_Start+0x11c>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8000e56:	687b      	ldr	r3, [r7, #4]
 8000e58:	681b      	ldr	r3, [r3, #0]
 8000e5a:	4a25      	ldr	r2, [pc, #148]	; (8000ef0 <HAL_ADC_Start+0x1a0>)
 8000e5c:	4293      	cmp	r3, r2
 8000e5e:	d136      	bne.n	8000ece <HAL_ADC_Start+0x17e>
 8000e60:	4b20      	ldr	r3, [pc, #128]	; (8000ee4 <HAL_ADC_Start+0x194>)
 8000e62:	685b      	ldr	r3, [r3, #4]
 8000e64:	f003 0310 	and.w	r3, r3, #16
 8000e68:	2b00      	cmp	r3, #0
 8000e6a:	d130      	bne.n	8000ece <HAL_ADC_Start+0x17e>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 8000e6c:	687b      	ldr	r3, [r7, #4]
 8000e6e:	681b      	ldr	r3, [r3, #0]
 8000e70:	689b      	ldr	r3, [r3, #8]
 8000e72:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8000e76:	2b00      	cmp	r3, #0
 8000e78:	d129      	bne.n	8000ece <HAL_ADC_Start+0x17e>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8000e7a:	687b      	ldr	r3, [r7, #4]
 8000e7c:	681b      	ldr	r3, [r3, #0]
 8000e7e:	689a      	ldr	r2, [r3, #8]
 8000e80:	687b      	ldr	r3, [r7, #4]
 8000e82:	681b      	ldr	r3, [r3, #0]
 8000e84:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8000e88:	609a      	str	r2, [r3, #8]
 8000e8a:	e020      	b.n	8000ece <HAL_ADC_Start+0x17e>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8000e8c:	687b      	ldr	r3, [r7, #4]
 8000e8e:	681b      	ldr	r3, [r3, #0]
 8000e90:	4a15      	ldr	r2, [pc, #84]	; (8000ee8 <HAL_ADC_Start+0x198>)
 8000e92:	4293      	cmp	r3, r2
 8000e94:	d11b      	bne.n	8000ece <HAL_ADC_Start+0x17e>
 8000e96:	687b      	ldr	r3, [r7, #4]
 8000e98:	681b      	ldr	r3, [r3, #0]
 8000e9a:	689b      	ldr	r3, [r3, #8]
 8000e9c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8000ea0:	2b00      	cmp	r3, #0
 8000ea2:	d114      	bne.n	8000ece <HAL_ADC_Start+0x17e>
      {
        /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8000ea4:	687b      	ldr	r3, [r7, #4]
 8000ea6:	681b      	ldr	r3, [r3, #0]
 8000ea8:	689a      	ldr	r2, [r3, #8]
 8000eaa:	687b      	ldr	r3, [r7, #4]
 8000eac:	681b      	ldr	r3, [r3, #0]
 8000eae:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8000eb2:	609a      	str	r2, [r3, #8]
 8000eb4:	e00b      	b.n	8000ece <HAL_ADC_Start+0x17e>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8000eb6:	687b      	ldr	r3, [r7, #4]
 8000eb8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000eba:	f043 0210 	orr.w	r2, r3, #16
 8000ebe:	687b      	ldr	r3, [r7, #4]
 8000ec0:	641a      	str	r2, [r3, #64]	; 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8000ec2:	687b      	ldr	r3, [r7, #4]
 8000ec4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000ec6:	f043 0201 	orr.w	r2, r3, #1
 8000eca:	687b      	ldr	r3, [r7, #4]
 8000ecc:	645a      	str	r2, [r3, #68]	; 0x44
  }
  
  /* Return function status */
  return HAL_OK;
 8000ece:	2300      	movs	r3, #0
}
 8000ed0:	4618      	mov	r0, r3
 8000ed2:	3714      	adds	r7, #20
 8000ed4:	46bd      	mov	sp, r7
 8000ed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eda:	4770      	bx	lr
 8000edc:	20000000 	.word	0x20000000
 8000ee0:	431bde83 	.word	0x431bde83
 8000ee4:	40012300 	.word	0x40012300
 8000ee8:	40012000 	.word	0x40012000
 8000eec:	40012100 	.word	0x40012100
 8000ef0:	40012200 	.word	0x40012200

08000ef4 <HAL_ADC_Stop>:
  *         the configuration information for the specified ADC.
  *
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
{
 8000ef4:	b480      	push	{r7}
 8000ef6:	b083      	sub	sp, #12
 8000ef8:	af00      	add	r7, sp, #0
 8000efa:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8000efc:	687b      	ldr	r3, [r7, #4]
 8000efe:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8000f02:	2b01      	cmp	r3, #1
 8000f04:	d101      	bne.n	8000f0a <HAL_ADC_Stop+0x16>
 8000f06:	2302      	movs	r3, #2
 8000f08:	e021      	b.n	8000f4e <HAL_ADC_Stop+0x5a>
 8000f0a:	687b      	ldr	r3, [r7, #4]
 8000f0c:	2201      	movs	r2, #1
 8000f0e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Stop potential conversion on going, on regular and injected groups */
  /* Disable ADC peripheral */
  __HAL_ADC_DISABLE(hadc);
 8000f12:	687b      	ldr	r3, [r7, #4]
 8000f14:	681b      	ldr	r3, [r3, #0]
 8000f16:	689a      	ldr	r2, [r3, #8]
 8000f18:	687b      	ldr	r3, [r7, #4]
 8000f1a:	681b      	ldr	r3, [r3, #0]
 8000f1c:	f022 0201 	bic.w	r2, r2, #1
 8000f20:	609a      	str	r2, [r3, #8]
  
  /* Check if ADC is effectively disabled */
  if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 8000f22:	687b      	ldr	r3, [r7, #4]
 8000f24:	681b      	ldr	r3, [r3, #0]
 8000f26:	689b      	ldr	r3, [r3, #8]
 8000f28:	f003 0301 	and.w	r3, r3, #1
 8000f2c:	2b00      	cmp	r3, #0
 8000f2e:	d109      	bne.n	8000f44 <HAL_ADC_Stop+0x50>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8000f30:	687b      	ldr	r3, [r7, #4]
 8000f32:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f34:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8000f38:	f023 0301 	bic.w	r3, r3, #1
 8000f3c:	f043 0201 	orr.w	r2, r3, #1
 8000f40:	687b      	ldr	r3, [r7, #4]
 8000f42:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_READY);
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8000f44:	687b      	ldr	r3, [r7, #4]
 8000f46:	2200      	movs	r2, #0
 8000f48:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 8000f4c:	2300      	movs	r3, #0
}
 8000f4e:	4618      	mov	r0, r3
 8000f50:	370c      	adds	r7, #12
 8000f52:	46bd      	mov	sp, r7
 8000f54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f58:	4770      	bx	lr

08000f5a <HAL_ADC_PollForConversion>:
  *         the configuration information for the specified ADC.
  * @param  Timeout Timeout value in millisecond.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
{
 8000f5a:	b580      	push	{r7, lr}
 8000f5c:	b084      	sub	sp, #16
 8000f5e:	af00      	add	r7, sp, #0
 8000f60:	6078      	str	r0, [r7, #4]
 8000f62:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0U;
 8000f64:	2300      	movs	r3, #0
 8000f66:	60fb      	str	r3, [r7, #12]
  /* each conversion:                                                       */
  /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
  /* several ranks and polling for end of each conversion.                  */
  /* For code simplicity sake, this particular case is generalized to       */
  /* ADC configured in DMA mode and polling for end of each conversion.     */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8000f68:	687b      	ldr	r3, [r7, #4]
 8000f6a:	681b      	ldr	r3, [r3, #0]
 8000f6c:	689b      	ldr	r3, [r3, #8]
 8000f6e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8000f72:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000f76:	d113      	bne.n	8000fa0 <HAL_ADC_PollForConversion+0x46>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 8000f78:	687b      	ldr	r3, [r7, #4]
 8000f7a:	681b      	ldr	r3, [r3, #0]
 8000f7c:	689b      	ldr	r3, [r3, #8]
 8000f7e:	f403 7380 	and.w	r3, r3, #256	; 0x100
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8000f82:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000f86:	d10b      	bne.n	8000fa0 <HAL_ADC_PollForConversion+0x46>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8000f88:	687b      	ldr	r3, [r7, #4]
 8000f8a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f8c:	f043 0220 	orr.w	r2, r3, #32
 8000f90:	687b      	ldr	r3, [r7, #4]
 8000f92:	641a      	str	r2, [r3, #64]	; 0x40
    
    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8000f94:	687b      	ldr	r3, [r7, #4]
 8000f96:	2200      	movs	r2, #0
 8000f98:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
    return HAL_ERROR;
 8000f9c:	2301      	movs	r3, #1
 8000f9e:	e063      	b.n	8001068 <HAL_ADC_PollForConversion+0x10e>
  }

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8000fa0:	f7ff fe62 	bl	8000c68 <HAL_GetTick>
 8000fa4:	60f8      	str	r0, [r7, #12]

  /* Check End of conversion flag */
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8000fa6:	e021      	b.n	8000fec <HAL_ADC_PollForConversion+0x92>
  {
    /* Check if timeout is disabled (set to infinite wait) */
    if(Timeout != HAL_MAX_DELAY)
 8000fa8:	683b      	ldr	r3, [r7, #0]
 8000faa:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000fae:	d01d      	beq.n	8000fec <HAL_ADC_PollForConversion+0x92>
    {
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8000fb0:	683b      	ldr	r3, [r7, #0]
 8000fb2:	2b00      	cmp	r3, #0
 8000fb4:	d007      	beq.n	8000fc6 <HAL_ADC_PollForConversion+0x6c>
 8000fb6:	f7ff fe57 	bl	8000c68 <HAL_GetTick>
 8000fba:	4602      	mov	r2, r0
 8000fbc:	68fb      	ldr	r3, [r7, #12]
 8000fbe:	1ad3      	subs	r3, r2, r3
 8000fc0:	683a      	ldr	r2, [r7, #0]
 8000fc2:	429a      	cmp	r2, r3
 8000fc4:	d212      	bcs.n	8000fec <HAL_ADC_PollForConversion+0x92>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8000fc6:	687b      	ldr	r3, [r7, #4]
 8000fc8:	681b      	ldr	r3, [r3, #0]
 8000fca:	681b      	ldr	r3, [r3, #0]
 8000fcc:	f003 0302 	and.w	r3, r3, #2
 8000fd0:	2b02      	cmp	r3, #2
 8000fd2:	d00b      	beq.n	8000fec <HAL_ADC_PollForConversion+0x92>
        {
          /* Update ADC state machine to timeout */
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8000fd4:	687b      	ldr	r3, [r7, #4]
 8000fd6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000fd8:	f043 0204 	orr.w	r2, r3, #4
 8000fdc:	687b      	ldr	r3, [r7, #4]
 8000fde:	641a      	str	r2, [r3, #64]	; 0x40
          
          /* Process unlocked */
          __HAL_UNLOCK(hadc);
 8000fe0:	687b      	ldr	r3, [r7, #4]
 8000fe2:	2200      	movs	r2, #0
 8000fe4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
          
          return HAL_TIMEOUT;
 8000fe8:	2303      	movs	r3, #3
 8000fea:	e03d      	b.n	8001068 <HAL_ADC_PollForConversion+0x10e>
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8000fec:	687b      	ldr	r3, [r7, #4]
 8000fee:	681b      	ldr	r3, [r3, #0]
 8000ff0:	681b      	ldr	r3, [r3, #0]
 8000ff2:	f003 0302 	and.w	r3, r3, #2
 8000ff6:	2b02      	cmp	r3, #2
 8000ff8:	d1d6      	bne.n	8000fa8 <HAL_ADC_PollForConversion+0x4e>
      }
    }
  }
  
  /* Clear regular group conversion flag */
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8000ffa:	687b      	ldr	r3, [r7, #4]
 8000ffc:	681b      	ldr	r3, [r3, #0]
 8000ffe:	f06f 0212 	mvn.w	r2, #18
 8001002:	601a      	str	r2, [r3, #0]
  
  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8001004:	687b      	ldr	r3, [r7, #4]
 8001006:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001008:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 800100c:	687b      	ldr	r3, [r7, #4]
 800100e:	641a      	str	r2, [r3, #64]	; 0x40
  /* by external trigger, continuous mode or scan sequence on going.          */
  /* Note: On STM32F4, there is no independent flag of end of sequence.       */
  /*       The test of scan sequence on going is done either with scan        */
  /*       sequence disabled or with end of conversion flag set to            */
  /*       of end of sequence.                                                */
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8001010:	687b      	ldr	r3, [r7, #4]
 8001012:	681b      	ldr	r3, [r3, #0]
 8001014:	689b      	ldr	r3, [r3, #8]
 8001016:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800101a:	2b00      	cmp	r3, #0
 800101c:	d123      	bne.n	8001066 <HAL_ADC_PollForConversion+0x10c>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800101e:	687b      	ldr	r3, [r7, #4]
 8001020:	7e1b      	ldrb	r3, [r3, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8001022:	2b00      	cmp	r3, #0
 8001024:	d11f      	bne.n	8001066 <HAL_ADC_PollForConversion+0x10c>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8001026:	687b      	ldr	r3, [r7, #4]
 8001028:	681b      	ldr	r3, [r3, #0]
 800102a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800102c:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8001030:	2b00      	cmp	r3, #0
 8001032:	d006      	beq.n	8001042 <HAL_ADC_PollForConversion+0xe8>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	681b      	ldr	r3, [r3, #0]
 8001038:	689b      	ldr	r3, [r3, #8]
 800103a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800103e:	2b00      	cmp	r3, #0
 8001040:	d111      	bne.n	8001066 <HAL_ADC_PollForConversion+0x10c>
  {
    /* Set ADC state */
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 8001042:	687b      	ldr	r3, [r7, #4]
 8001044:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001046:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800104a:	687b      	ldr	r3, [r7, #4]
 800104c:	641a      	str	r2, [r3, #64]	; 0x40
    
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800104e:	687b      	ldr	r3, [r7, #4]
 8001050:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001052:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001056:	2b00      	cmp	r3, #0
 8001058:	d105      	bne.n	8001066 <HAL_ADC_PollForConversion+0x10c>
    { 
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800105a:	687b      	ldr	r3, [r7, #4]
 800105c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800105e:	f043 0201 	orr.w	r2, r3, #1
 8001062:	687b      	ldr	r3, [r7, #4]
 8001064:	641a      	str	r2, [r3, #64]	; 0x40
    }
  }
  
  /* Return ADC state */
  return HAL_OK;
 8001066:	2300      	movs	r3, #0
}
 8001068:	4618      	mov	r0, r3
 800106a:	3710      	adds	r7, #16
 800106c:	46bd      	mov	sp, r7
 800106e:	bd80      	pop	{r7, pc}

08001070 <HAL_ADC_GetValue>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval Converted value
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
{       
 8001070:	b480      	push	{r7}
 8001072:	b083      	sub	sp, #12
 8001074:	af00      	add	r7, sp, #0
 8001076:	6078      	str	r0, [r7, #4]
  /* Return the selected ADC converted value */ 
  return hadc->Instance->DR;
 8001078:	687b      	ldr	r3, [r7, #4]
 800107a:	681b      	ldr	r3, [r3, #0]
 800107c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 800107e:	4618      	mov	r0, r3
 8001080:	370c      	adds	r7, #12
 8001082:	46bd      	mov	sp, r7
 8001084:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001088:	4770      	bx	lr
	...

0800108c <HAL_ADC_ConfigChannel>:
  *         the configuration information for the specified ADC.
  * @param  sConfig ADC configuration structure. 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 800108c:	b480      	push	{r7}
 800108e:	b085      	sub	sp, #20
 8001090:	af00      	add	r7, sp, #0
 8001092:	6078      	str	r0, [r7, #4]
 8001094:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 8001096:	2300      	movs	r3, #0
 8001098:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 800109a:	687b      	ldr	r3, [r7, #4]
 800109c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80010a0:	2b01      	cmp	r3, #1
 80010a2:	d101      	bne.n	80010a8 <HAL_ADC_ConfigChannel+0x1c>
 80010a4:	2302      	movs	r3, #2
 80010a6:	e105      	b.n	80012b4 <HAL_ADC_ConfigChannel+0x228>
 80010a8:	687b      	ldr	r3, [r7, #4]
 80010aa:	2201      	movs	r2, #1
 80010ac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 80010b0:	683b      	ldr	r3, [r7, #0]
 80010b2:	681b      	ldr	r3, [r3, #0]
 80010b4:	2b09      	cmp	r3, #9
 80010b6:	d925      	bls.n	8001104 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 80010b8:	687b      	ldr	r3, [r7, #4]
 80010ba:	681b      	ldr	r3, [r3, #0]
 80010bc:	68d9      	ldr	r1, [r3, #12]
 80010be:	683b      	ldr	r3, [r7, #0]
 80010c0:	681b      	ldr	r3, [r3, #0]
 80010c2:	b29b      	uxth	r3, r3
 80010c4:	461a      	mov	r2, r3
 80010c6:	4613      	mov	r3, r2
 80010c8:	005b      	lsls	r3, r3, #1
 80010ca:	4413      	add	r3, r2
 80010cc:	3b1e      	subs	r3, #30
 80010ce:	2207      	movs	r2, #7
 80010d0:	fa02 f303 	lsl.w	r3, r2, r3
 80010d4:	43da      	mvns	r2, r3
 80010d6:	687b      	ldr	r3, [r7, #4]
 80010d8:	681b      	ldr	r3, [r3, #0]
 80010da:	400a      	ands	r2, r1
 80010dc:	60da      	str	r2, [r3, #12]
    
    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 80010de:	687b      	ldr	r3, [r7, #4]
 80010e0:	681b      	ldr	r3, [r3, #0]
 80010e2:	68d9      	ldr	r1, [r3, #12]
 80010e4:	683b      	ldr	r3, [r7, #0]
 80010e6:	689a      	ldr	r2, [r3, #8]
 80010e8:	683b      	ldr	r3, [r7, #0]
 80010ea:	681b      	ldr	r3, [r3, #0]
 80010ec:	b29b      	uxth	r3, r3
 80010ee:	4618      	mov	r0, r3
 80010f0:	4603      	mov	r3, r0
 80010f2:	005b      	lsls	r3, r3, #1
 80010f4:	4403      	add	r3, r0
 80010f6:	3b1e      	subs	r3, #30
 80010f8:	409a      	lsls	r2, r3
 80010fa:	687b      	ldr	r3, [r7, #4]
 80010fc:	681b      	ldr	r3, [r3, #0]
 80010fe:	430a      	orrs	r2, r1
 8001100:	60da      	str	r2, [r3, #12]
 8001102:	e022      	b.n	800114a <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8001104:	687b      	ldr	r3, [r7, #4]
 8001106:	681b      	ldr	r3, [r3, #0]
 8001108:	6919      	ldr	r1, [r3, #16]
 800110a:	683b      	ldr	r3, [r7, #0]
 800110c:	681b      	ldr	r3, [r3, #0]
 800110e:	b29b      	uxth	r3, r3
 8001110:	461a      	mov	r2, r3
 8001112:	4613      	mov	r3, r2
 8001114:	005b      	lsls	r3, r3, #1
 8001116:	4413      	add	r3, r2
 8001118:	2207      	movs	r2, #7
 800111a:	fa02 f303 	lsl.w	r3, r2, r3
 800111e:	43da      	mvns	r2, r3
 8001120:	687b      	ldr	r3, [r7, #4]
 8001122:	681b      	ldr	r3, [r3, #0]
 8001124:	400a      	ands	r2, r1
 8001126:	611a      	str	r2, [r3, #16]
    
    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8001128:	687b      	ldr	r3, [r7, #4]
 800112a:	681b      	ldr	r3, [r3, #0]
 800112c:	6919      	ldr	r1, [r3, #16]
 800112e:	683b      	ldr	r3, [r7, #0]
 8001130:	689a      	ldr	r2, [r3, #8]
 8001132:	683b      	ldr	r3, [r7, #0]
 8001134:	681b      	ldr	r3, [r3, #0]
 8001136:	b29b      	uxth	r3, r3
 8001138:	4618      	mov	r0, r3
 800113a:	4603      	mov	r3, r0
 800113c:	005b      	lsls	r3, r3, #1
 800113e:	4403      	add	r3, r0
 8001140:	409a      	lsls	r2, r3
 8001142:	687b      	ldr	r3, [r7, #4]
 8001144:	681b      	ldr	r3, [r3, #0]
 8001146:	430a      	orrs	r2, r1
 8001148:	611a      	str	r2, [r3, #16]
  }
  
  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 800114a:	683b      	ldr	r3, [r7, #0]
 800114c:	685b      	ldr	r3, [r3, #4]
 800114e:	2b06      	cmp	r3, #6
 8001150:	d824      	bhi.n	800119c <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8001152:	687b      	ldr	r3, [r7, #4]
 8001154:	681b      	ldr	r3, [r3, #0]
 8001156:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8001158:	683b      	ldr	r3, [r7, #0]
 800115a:	685a      	ldr	r2, [r3, #4]
 800115c:	4613      	mov	r3, r2
 800115e:	009b      	lsls	r3, r3, #2
 8001160:	4413      	add	r3, r2
 8001162:	3b05      	subs	r3, #5
 8001164:	221f      	movs	r2, #31
 8001166:	fa02 f303 	lsl.w	r3, r2, r3
 800116a:	43da      	mvns	r2, r3
 800116c:	687b      	ldr	r3, [r7, #4]
 800116e:	681b      	ldr	r3, [r3, #0]
 8001170:	400a      	ands	r2, r1
 8001172:	635a      	str	r2, [r3, #52]	; 0x34
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8001174:	687b      	ldr	r3, [r7, #4]
 8001176:	681b      	ldr	r3, [r3, #0]
 8001178:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800117a:	683b      	ldr	r3, [r7, #0]
 800117c:	681b      	ldr	r3, [r3, #0]
 800117e:	b29b      	uxth	r3, r3
 8001180:	4618      	mov	r0, r3
 8001182:	683b      	ldr	r3, [r7, #0]
 8001184:	685a      	ldr	r2, [r3, #4]
 8001186:	4613      	mov	r3, r2
 8001188:	009b      	lsls	r3, r3, #2
 800118a:	4413      	add	r3, r2
 800118c:	3b05      	subs	r3, #5
 800118e:	fa00 f203 	lsl.w	r2, r0, r3
 8001192:	687b      	ldr	r3, [r7, #4]
 8001194:	681b      	ldr	r3, [r3, #0]
 8001196:	430a      	orrs	r2, r1
 8001198:	635a      	str	r2, [r3, #52]	; 0x34
 800119a:	e04c      	b.n	8001236 <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 800119c:	683b      	ldr	r3, [r7, #0]
 800119e:	685b      	ldr	r3, [r3, #4]
 80011a0:	2b0c      	cmp	r3, #12
 80011a2:	d824      	bhi.n	80011ee <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 80011a4:	687b      	ldr	r3, [r7, #4]
 80011a6:	681b      	ldr	r3, [r3, #0]
 80011a8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80011aa:	683b      	ldr	r3, [r7, #0]
 80011ac:	685a      	ldr	r2, [r3, #4]
 80011ae:	4613      	mov	r3, r2
 80011b0:	009b      	lsls	r3, r3, #2
 80011b2:	4413      	add	r3, r2
 80011b4:	3b23      	subs	r3, #35	; 0x23
 80011b6:	221f      	movs	r2, #31
 80011b8:	fa02 f303 	lsl.w	r3, r2, r3
 80011bc:	43da      	mvns	r2, r3
 80011be:	687b      	ldr	r3, [r7, #4]
 80011c0:	681b      	ldr	r3, [r3, #0]
 80011c2:	400a      	ands	r2, r1
 80011c4:	631a      	str	r2, [r3, #48]	; 0x30
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 80011c6:	687b      	ldr	r3, [r7, #4]
 80011c8:	681b      	ldr	r3, [r3, #0]
 80011ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80011cc:	683b      	ldr	r3, [r7, #0]
 80011ce:	681b      	ldr	r3, [r3, #0]
 80011d0:	b29b      	uxth	r3, r3
 80011d2:	4618      	mov	r0, r3
 80011d4:	683b      	ldr	r3, [r7, #0]
 80011d6:	685a      	ldr	r2, [r3, #4]
 80011d8:	4613      	mov	r3, r2
 80011da:	009b      	lsls	r3, r3, #2
 80011dc:	4413      	add	r3, r2
 80011de:	3b23      	subs	r3, #35	; 0x23
 80011e0:	fa00 f203 	lsl.w	r2, r0, r3
 80011e4:	687b      	ldr	r3, [r7, #4]
 80011e6:	681b      	ldr	r3, [r3, #0]
 80011e8:	430a      	orrs	r2, r1
 80011ea:	631a      	str	r2, [r3, #48]	; 0x30
 80011ec:	e023      	b.n	8001236 <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 80011ee:	687b      	ldr	r3, [r7, #4]
 80011f0:	681b      	ldr	r3, [r3, #0]
 80011f2:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80011f4:	683b      	ldr	r3, [r7, #0]
 80011f6:	685a      	ldr	r2, [r3, #4]
 80011f8:	4613      	mov	r3, r2
 80011fa:	009b      	lsls	r3, r3, #2
 80011fc:	4413      	add	r3, r2
 80011fe:	3b41      	subs	r3, #65	; 0x41
 8001200:	221f      	movs	r2, #31
 8001202:	fa02 f303 	lsl.w	r3, r2, r3
 8001206:	43da      	mvns	r2, r3
 8001208:	687b      	ldr	r3, [r7, #4]
 800120a:	681b      	ldr	r3, [r3, #0]
 800120c:	400a      	ands	r2, r1
 800120e:	62da      	str	r2, [r3, #44]	; 0x2c
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8001210:	687b      	ldr	r3, [r7, #4]
 8001212:	681b      	ldr	r3, [r3, #0]
 8001214:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8001216:	683b      	ldr	r3, [r7, #0]
 8001218:	681b      	ldr	r3, [r3, #0]
 800121a:	b29b      	uxth	r3, r3
 800121c:	4618      	mov	r0, r3
 800121e:	683b      	ldr	r3, [r7, #0]
 8001220:	685a      	ldr	r2, [r3, #4]
 8001222:	4613      	mov	r3, r2
 8001224:	009b      	lsls	r3, r3, #2
 8001226:	4413      	add	r3, r2
 8001228:	3b41      	subs	r3, #65	; 0x41
 800122a:	fa00 f203 	lsl.w	r2, r0, r3
 800122e:	687b      	ldr	r3, [r7, #4]
 8001230:	681b      	ldr	r3, [r3, #0]
 8001232:	430a      	orrs	r2, r1
 8001234:	62da      	str	r2, [r3, #44]	; 0x2c
  }

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8001236:	4b22      	ldr	r3, [pc, #136]	; (80012c0 <HAL_ADC_ConfigChannel+0x234>)
 8001238:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800123a:	687b      	ldr	r3, [r7, #4]
 800123c:	681b      	ldr	r3, [r3, #0]
 800123e:	4a21      	ldr	r2, [pc, #132]	; (80012c4 <HAL_ADC_ConfigChannel+0x238>)
 8001240:	4293      	cmp	r3, r2
 8001242:	d109      	bne.n	8001258 <HAL_ADC_ConfigChannel+0x1cc>
 8001244:	683b      	ldr	r3, [r7, #0]
 8001246:	681b      	ldr	r3, [r3, #0]
 8001248:	2b12      	cmp	r3, #18
 800124a:	d105      	bne.n	8001258 <HAL_ADC_ConfigChannel+0x1cc>
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 800124c:	68fb      	ldr	r3, [r7, #12]
 800124e:	685b      	ldr	r3, [r3, #4]
 8001250:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8001254:	68fb      	ldr	r3, [r7, #12]
 8001256:	605a      	str	r2, [r3, #4]
  }
  
  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or 
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8001258:	687b      	ldr	r3, [r7, #4]
 800125a:	681b      	ldr	r3, [r3, #0]
 800125c:	4a19      	ldr	r2, [pc, #100]	; (80012c4 <HAL_ADC_ConfigChannel+0x238>)
 800125e:	4293      	cmp	r3, r2
 8001260:	d123      	bne.n	80012aa <HAL_ADC_ConfigChannel+0x21e>
 8001262:	683b      	ldr	r3, [r7, #0]
 8001264:	681b      	ldr	r3, [r3, #0]
 8001266:	2b10      	cmp	r3, #16
 8001268:	d003      	beq.n	8001272 <HAL_ADC_ConfigChannel+0x1e6>
 800126a:	683b      	ldr	r3, [r7, #0]
 800126c:	681b      	ldr	r3, [r3, #0]
 800126e:	2b11      	cmp	r3, #17
 8001270:	d11b      	bne.n	80012aa <HAL_ADC_ConfigChannel+0x21e>
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8001272:	68fb      	ldr	r3, [r7, #12]
 8001274:	685b      	ldr	r3, [r3, #4]
 8001276:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 800127a:	68fb      	ldr	r3, [r7, #12]
 800127c:	605a      	str	r2, [r3, #4]
    
    if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 800127e:	683b      	ldr	r3, [r7, #0]
 8001280:	681b      	ldr	r3, [r3, #0]
 8001282:	2b10      	cmp	r3, #16
 8001284:	d111      	bne.n	80012aa <HAL_ADC_ConfigChannel+0x21e>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8001286:	4b10      	ldr	r3, [pc, #64]	; (80012c8 <HAL_ADC_ConfigChannel+0x23c>)
 8001288:	681b      	ldr	r3, [r3, #0]
 800128a:	4a10      	ldr	r2, [pc, #64]	; (80012cc <HAL_ADC_ConfigChannel+0x240>)
 800128c:	fba2 2303 	umull	r2, r3, r2, r3
 8001290:	0c9a      	lsrs	r2, r3, #18
 8001292:	4613      	mov	r3, r2
 8001294:	009b      	lsls	r3, r3, #2
 8001296:	4413      	add	r3, r2
 8001298:	005b      	lsls	r3, r3, #1
 800129a:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 800129c:	e002      	b.n	80012a4 <HAL_ADC_ConfigChannel+0x218>
      {
        counter--;
 800129e:	68bb      	ldr	r3, [r7, #8]
 80012a0:	3b01      	subs	r3, #1
 80012a2:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 80012a4:	68bb      	ldr	r3, [r7, #8]
 80012a6:	2b00      	cmp	r3, #0
 80012a8:	d1f9      	bne.n	800129e <HAL_ADC_ConfigChannel+0x212>
      }
    }
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80012aa:	687b      	ldr	r3, [r7, #4]
 80012ac:	2200      	movs	r2, #0
 80012ae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 80012b2:	2300      	movs	r3, #0
}
 80012b4:	4618      	mov	r0, r3
 80012b6:	3714      	adds	r7, #20
 80012b8:	46bd      	mov	sp, r7
 80012ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012be:	4770      	bx	lr
 80012c0:	40012300 	.word	0x40012300
 80012c4:	40012000 	.word	0x40012000
 80012c8:	20000000 	.word	0x20000000
 80012cc:	431bde83 	.word	0x431bde83

080012d0 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef* hadc)
{
 80012d0:	b480      	push	{r7}
 80012d2:	b085      	sub	sp, #20
 80012d4:	af00      	add	r7, sp, #0
 80012d6:	6078      	str	r0, [r7, #4]
  
  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 80012d8:	4b79      	ldr	r3, [pc, #484]	; (80014c0 <ADC_Init+0x1f0>)
 80012da:	60fb      	str	r3, [r7, #12]
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 80012dc:	68fb      	ldr	r3, [r7, #12]
 80012de:	685b      	ldr	r3, [r3, #4]
 80012e0:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80012e4:	68fb      	ldr	r3, [r7, #12]
 80012e6:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 80012e8:	68fb      	ldr	r3, [r7, #12]
 80012ea:	685a      	ldr	r2, [r3, #4]
 80012ec:	687b      	ldr	r3, [r7, #4]
 80012ee:	685b      	ldr	r3, [r3, #4]
 80012f0:	431a      	orrs	r2, r3
 80012f2:	68fb      	ldr	r3, [r7, #12]
 80012f4:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 80012f6:	687b      	ldr	r3, [r7, #4]
 80012f8:	681b      	ldr	r3, [r3, #0]
 80012fa:	685a      	ldr	r2, [r3, #4]
 80012fc:	687b      	ldr	r3, [r7, #4]
 80012fe:	681b      	ldr	r3, [r3, #0]
 8001300:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8001304:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8001306:	687b      	ldr	r3, [r7, #4]
 8001308:	681b      	ldr	r3, [r3, #0]
 800130a:	6859      	ldr	r1, [r3, #4]
 800130c:	687b      	ldr	r3, [r7, #4]
 800130e:	691b      	ldr	r3, [r3, #16]
 8001310:	021a      	lsls	r2, r3, #8
 8001312:	687b      	ldr	r3, [r7, #4]
 8001314:	681b      	ldr	r3, [r3, #0]
 8001316:	430a      	orrs	r2, r1
 8001318:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800131a:	687b      	ldr	r3, [r7, #4]
 800131c:	681b      	ldr	r3, [r3, #0]
 800131e:	685a      	ldr	r2, [r3, #4]
 8001320:	687b      	ldr	r3, [r7, #4]
 8001322:	681b      	ldr	r3, [r3, #0]
 8001324:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8001328:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800132a:	687b      	ldr	r3, [r7, #4]
 800132c:	681b      	ldr	r3, [r3, #0]
 800132e:	6859      	ldr	r1, [r3, #4]
 8001330:	687b      	ldr	r3, [r7, #4]
 8001332:	689a      	ldr	r2, [r3, #8]
 8001334:	687b      	ldr	r3, [r7, #4]
 8001336:	681b      	ldr	r3, [r3, #0]
 8001338:	430a      	orrs	r2, r1
 800133a:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800133c:	687b      	ldr	r3, [r7, #4]
 800133e:	681b      	ldr	r3, [r3, #0]
 8001340:	689a      	ldr	r2, [r3, #8]
 8001342:	687b      	ldr	r3, [r7, #4]
 8001344:	681b      	ldr	r3, [r3, #0]
 8001346:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800134a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800134c:	687b      	ldr	r3, [r7, #4]
 800134e:	681b      	ldr	r3, [r3, #0]
 8001350:	6899      	ldr	r1, [r3, #8]
 8001352:	687b      	ldr	r3, [r7, #4]
 8001354:	68da      	ldr	r2, [r3, #12]
 8001356:	687b      	ldr	r3, [r7, #4]
 8001358:	681b      	ldr	r3, [r3, #0]
 800135a:	430a      	orrs	r2, r1
 800135c:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800135e:	687b      	ldr	r3, [r7, #4]
 8001360:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001362:	4a58      	ldr	r2, [pc, #352]	; (80014c4 <ADC_Init+0x1f4>)
 8001364:	4293      	cmp	r3, r2
 8001366:	d022      	beq.n	80013ae <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8001368:	687b      	ldr	r3, [r7, #4]
 800136a:	681b      	ldr	r3, [r3, #0]
 800136c:	689a      	ldr	r2, [r3, #8]
 800136e:	687b      	ldr	r3, [r7, #4]
 8001370:	681b      	ldr	r3, [r3, #0]
 8001372:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8001376:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8001378:	687b      	ldr	r3, [r7, #4]
 800137a:	681b      	ldr	r3, [r3, #0]
 800137c:	6899      	ldr	r1, [r3, #8]
 800137e:	687b      	ldr	r3, [r7, #4]
 8001380:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001382:	687b      	ldr	r3, [r7, #4]
 8001384:	681b      	ldr	r3, [r3, #0]
 8001386:	430a      	orrs	r2, r1
 8001388:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800138a:	687b      	ldr	r3, [r7, #4]
 800138c:	681b      	ldr	r3, [r3, #0]
 800138e:	689a      	ldr	r2, [r3, #8]
 8001390:	687b      	ldr	r3, [r7, #4]
 8001392:	681b      	ldr	r3, [r3, #0]
 8001394:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8001398:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800139a:	687b      	ldr	r3, [r7, #4]
 800139c:	681b      	ldr	r3, [r3, #0]
 800139e:	6899      	ldr	r1, [r3, #8]
 80013a0:	687b      	ldr	r3, [r7, #4]
 80013a2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80013a4:	687b      	ldr	r3, [r7, #4]
 80013a6:	681b      	ldr	r3, [r3, #0]
 80013a8:	430a      	orrs	r2, r1
 80013aa:	609a      	str	r2, [r3, #8]
 80013ac:	e00f      	b.n	80013ce <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	681b      	ldr	r3, [r3, #0]
 80013b2:	689a      	ldr	r2, [r3, #8]
 80013b4:	687b      	ldr	r3, [r7, #4]
 80013b6:	681b      	ldr	r3, [r3, #0]
 80013b8:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80013bc:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80013be:	687b      	ldr	r3, [r7, #4]
 80013c0:	681b      	ldr	r3, [r3, #0]
 80013c2:	689a      	ldr	r2, [r3, #8]
 80013c4:	687b      	ldr	r3, [r7, #4]
 80013c6:	681b      	ldr	r3, [r3, #0]
 80013c8:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80013cc:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 80013ce:	687b      	ldr	r3, [r7, #4]
 80013d0:	681b      	ldr	r3, [r3, #0]
 80013d2:	689a      	ldr	r2, [r3, #8]
 80013d4:	687b      	ldr	r3, [r7, #4]
 80013d6:	681b      	ldr	r3, [r3, #0]
 80013d8:	f022 0202 	bic.w	r2, r2, #2
 80013dc:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 80013de:	687b      	ldr	r3, [r7, #4]
 80013e0:	681b      	ldr	r3, [r3, #0]
 80013e2:	6899      	ldr	r1, [r3, #8]
 80013e4:	687b      	ldr	r3, [r7, #4]
 80013e6:	7e1b      	ldrb	r3, [r3, #24]
 80013e8:	005a      	lsls	r2, r3, #1
 80013ea:	687b      	ldr	r3, [r7, #4]
 80013ec:	681b      	ldr	r3, [r3, #0]
 80013ee:	430a      	orrs	r2, r1
 80013f0:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 80013f2:	687b      	ldr	r3, [r7, #4]
 80013f4:	f893 3020 	ldrb.w	r3, [r3, #32]
 80013f8:	2b00      	cmp	r3, #0
 80013fa:	d01b      	beq.n	8001434 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80013fc:	687b      	ldr	r3, [r7, #4]
 80013fe:	681b      	ldr	r3, [r3, #0]
 8001400:	685a      	ldr	r2, [r3, #4]
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	681b      	ldr	r3, [r3, #0]
 8001406:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800140a:	605a      	str	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 800140c:	687b      	ldr	r3, [r7, #4]
 800140e:	681b      	ldr	r3, [r3, #0]
 8001410:	685a      	ldr	r2, [r3, #4]
 8001412:	687b      	ldr	r3, [r7, #4]
 8001414:	681b      	ldr	r3, [r3, #0]
 8001416:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800141a:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800141c:	687b      	ldr	r3, [r7, #4]
 800141e:	681b      	ldr	r3, [r3, #0]
 8001420:	6859      	ldr	r1, [r3, #4]
 8001422:	687b      	ldr	r3, [r7, #4]
 8001424:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001426:	3b01      	subs	r3, #1
 8001428:	035a      	lsls	r2, r3, #13
 800142a:	687b      	ldr	r3, [r7, #4]
 800142c:	681b      	ldr	r3, [r3, #0]
 800142e:	430a      	orrs	r2, r1
 8001430:	605a      	str	r2, [r3, #4]
 8001432:	e007      	b.n	8001444 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8001434:	687b      	ldr	r3, [r7, #4]
 8001436:	681b      	ldr	r3, [r3, #0]
 8001438:	685a      	ldr	r2, [r3, #4]
 800143a:	687b      	ldr	r3, [r7, #4]
 800143c:	681b      	ldr	r3, [r3, #0]
 800143e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001442:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8001444:	687b      	ldr	r3, [r7, #4]
 8001446:	681b      	ldr	r3, [r3, #0]
 8001448:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800144a:	687b      	ldr	r3, [r7, #4]
 800144c:	681b      	ldr	r3, [r3, #0]
 800144e:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8001452:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8001454:	687b      	ldr	r3, [r7, #4]
 8001456:	681b      	ldr	r3, [r3, #0]
 8001458:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800145a:	687b      	ldr	r3, [r7, #4]
 800145c:	69db      	ldr	r3, [r3, #28]
 800145e:	3b01      	subs	r3, #1
 8001460:	051a      	lsls	r2, r3, #20
 8001462:	687b      	ldr	r3, [r7, #4]
 8001464:	681b      	ldr	r3, [r3, #0]
 8001466:	430a      	orrs	r2, r1
 8001468:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800146a:	687b      	ldr	r3, [r7, #4]
 800146c:	681b      	ldr	r3, [r3, #0]
 800146e:	689a      	ldr	r2, [r3, #8]
 8001470:	687b      	ldr	r3, [r7, #4]
 8001472:	681b      	ldr	r3, [r3, #0]
 8001474:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8001478:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800147a:	687b      	ldr	r3, [r7, #4]
 800147c:	681b      	ldr	r3, [r3, #0]
 800147e:	6899      	ldr	r1, [r3, #8]
 8001480:	687b      	ldr	r3, [r7, #4]
 8001482:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8001486:	025a      	lsls	r2, r3, #9
 8001488:	687b      	ldr	r3, [r7, #4]
 800148a:	681b      	ldr	r3, [r3, #0]
 800148c:	430a      	orrs	r2, r1
 800148e:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8001490:	687b      	ldr	r3, [r7, #4]
 8001492:	681b      	ldr	r3, [r3, #0]
 8001494:	689a      	ldr	r2, [r3, #8]
 8001496:	687b      	ldr	r3, [r7, #4]
 8001498:	681b      	ldr	r3, [r3, #0]
 800149a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800149e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80014a0:	687b      	ldr	r3, [r7, #4]
 80014a2:	681b      	ldr	r3, [r3, #0]
 80014a4:	6899      	ldr	r1, [r3, #8]
 80014a6:	687b      	ldr	r3, [r7, #4]
 80014a8:	695b      	ldr	r3, [r3, #20]
 80014aa:	029a      	lsls	r2, r3, #10
 80014ac:	687b      	ldr	r3, [r7, #4]
 80014ae:	681b      	ldr	r3, [r3, #0]
 80014b0:	430a      	orrs	r2, r1
 80014b2:	609a      	str	r2, [r3, #8]
}
 80014b4:	bf00      	nop
 80014b6:	3714      	adds	r7, #20
 80014b8:	46bd      	mov	sp, r7
 80014ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014be:	4770      	bx	lr
 80014c0:	40012300 	.word	0x40012300
 80014c4:	0f000001 	.word	0x0f000001

080014c8 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80014c8:	b480      	push	{r7}
 80014ca:	b085      	sub	sp, #20
 80014cc:	af00      	add	r7, sp, #0
 80014ce:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80014d0:	687b      	ldr	r3, [r7, #4]
 80014d2:	f003 0307 	and.w	r3, r3, #7
 80014d6:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80014d8:	4b0c      	ldr	r3, [pc, #48]	; (800150c <__NVIC_SetPriorityGrouping+0x44>)
 80014da:	68db      	ldr	r3, [r3, #12]
 80014dc:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80014de:	68ba      	ldr	r2, [r7, #8]
 80014e0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80014e4:	4013      	ands	r3, r2
 80014e6:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80014e8:	68fb      	ldr	r3, [r7, #12]
 80014ea:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80014ec:	68bb      	ldr	r3, [r7, #8]
 80014ee:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80014f0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80014f4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80014f8:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80014fa:	4a04      	ldr	r2, [pc, #16]	; (800150c <__NVIC_SetPriorityGrouping+0x44>)
 80014fc:	68bb      	ldr	r3, [r7, #8]
 80014fe:	60d3      	str	r3, [r2, #12]
}
 8001500:	bf00      	nop
 8001502:	3714      	adds	r7, #20
 8001504:	46bd      	mov	sp, r7
 8001506:	f85d 7b04 	ldr.w	r7, [sp], #4
 800150a:	4770      	bx	lr
 800150c:	e000ed00 	.word	0xe000ed00

08001510 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001510:	b480      	push	{r7}
 8001512:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001514:	4b04      	ldr	r3, [pc, #16]	; (8001528 <__NVIC_GetPriorityGrouping+0x18>)
 8001516:	68db      	ldr	r3, [r3, #12]
 8001518:	0a1b      	lsrs	r3, r3, #8
 800151a:	f003 0307 	and.w	r3, r3, #7
}
 800151e:	4618      	mov	r0, r3
 8001520:	46bd      	mov	sp, r7
 8001522:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001526:	4770      	bx	lr
 8001528:	e000ed00 	.word	0xe000ed00

0800152c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 800152c:	b480      	push	{r7}
 800152e:	b083      	sub	sp, #12
 8001530:	af00      	add	r7, sp, #0
 8001532:	4603      	mov	r3, r0
 8001534:	6039      	str	r1, [r7, #0]
 8001536:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001538:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800153c:	2b00      	cmp	r3, #0
 800153e:	db0a      	blt.n	8001556 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001540:	683b      	ldr	r3, [r7, #0]
 8001542:	b2da      	uxtb	r2, r3
 8001544:	490c      	ldr	r1, [pc, #48]	; (8001578 <__NVIC_SetPriority+0x4c>)
 8001546:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800154a:	0112      	lsls	r2, r2, #4
 800154c:	b2d2      	uxtb	r2, r2
 800154e:	440b      	add	r3, r1
 8001550:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001554:	e00a      	b.n	800156c <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001556:	683b      	ldr	r3, [r7, #0]
 8001558:	b2da      	uxtb	r2, r3
 800155a:	4908      	ldr	r1, [pc, #32]	; (800157c <__NVIC_SetPriority+0x50>)
 800155c:	79fb      	ldrb	r3, [r7, #7]
 800155e:	f003 030f 	and.w	r3, r3, #15
 8001562:	3b04      	subs	r3, #4
 8001564:	0112      	lsls	r2, r2, #4
 8001566:	b2d2      	uxtb	r2, r2
 8001568:	440b      	add	r3, r1
 800156a:	761a      	strb	r2, [r3, #24]
}
 800156c:	bf00      	nop
 800156e:	370c      	adds	r7, #12
 8001570:	46bd      	mov	sp, r7
 8001572:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001576:	4770      	bx	lr
 8001578:	e000e100 	.word	0xe000e100
 800157c:	e000ed00 	.word	0xe000ed00

08001580 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001580:	b480      	push	{r7}
 8001582:	b089      	sub	sp, #36	; 0x24
 8001584:	af00      	add	r7, sp, #0
 8001586:	60f8      	str	r0, [r7, #12]
 8001588:	60b9      	str	r1, [r7, #8]
 800158a:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 800158c:	68fb      	ldr	r3, [r7, #12]
 800158e:	f003 0307 	and.w	r3, r3, #7
 8001592:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001594:	69fb      	ldr	r3, [r7, #28]
 8001596:	f1c3 0307 	rsb	r3, r3, #7
 800159a:	2b04      	cmp	r3, #4
 800159c:	bf28      	it	cs
 800159e:	2304      	movcs	r3, #4
 80015a0:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80015a2:	69fb      	ldr	r3, [r7, #28]
 80015a4:	3304      	adds	r3, #4
 80015a6:	2b06      	cmp	r3, #6
 80015a8:	d902      	bls.n	80015b0 <NVIC_EncodePriority+0x30>
 80015aa:	69fb      	ldr	r3, [r7, #28]
 80015ac:	3b03      	subs	r3, #3
 80015ae:	e000      	b.n	80015b2 <NVIC_EncodePriority+0x32>
 80015b0:	2300      	movs	r3, #0
 80015b2:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80015b4:	f04f 32ff 	mov.w	r2, #4294967295
 80015b8:	69bb      	ldr	r3, [r7, #24]
 80015ba:	fa02 f303 	lsl.w	r3, r2, r3
 80015be:	43da      	mvns	r2, r3
 80015c0:	68bb      	ldr	r3, [r7, #8]
 80015c2:	401a      	ands	r2, r3
 80015c4:	697b      	ldr	r3, [r7, #20]
 80015c6:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80015c8:	f04f 31ff 	mov.w	r1, #4294967295
 80015cc:	697b      	ldr	r3, [r7, #20]
 80015ce:	fa01 f303 	lsl.w	r3, r1, r3
 80015d2:	43d9      	mvns	r1, r3
 80015d4:	687b      	ldr	r3, [r7, #4]
 80015d6:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80015d8:	4313      	orrs	r3, r2
         );
}
 80015da:	4618      	mov	r0, r3
 80015dc:	3724      	adds	r7, #36	; 0x24
 80015de:	46bd      	mov	sp, r7
 80015e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015e4:	4770      	bx	lr
	...

080015e8 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80015e8:	b580      	push	{r7, lr}
 80015ea:	b082      	sub	sp, #8
 80015ec:	af00      	add	r7, sp, #0
 80015ee:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	3b01      	subs	r3, #1
 80015f4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80015f8:	d301      	bcc.n	80015fe <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 80015fa:	2301      	movs	r3, #1
 80015fc:	e00f      	b.n	800161e <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80015fe:	4a0a      	ldr	r2, [pc, #40]	; (8001628 <SysTick_Config+0x40>)
 8001600:	687b      	ldr	r3, [r7, #4]
 8001602:	3b01      	subs	r3, #1
 8001604:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8001606:	210f      	movs	r1, #15
 8001608:	f04f 30ff 	mov.w	r0, #4294967295
 800160c:	f7ff ff8e 	bl	800152c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001610:	4b05      	ldr	r3, [pc, #20]	; (8001628 <SysTick_Config+0x40>)
 8001612:	2200      	movs	r2, #0
 8001614:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001616:	4b04      	ldr	r3, [pc, #16]	; (8001628 <SysTick_Config+0x40>)
 8001618:	2207      	movs	r2, #7
 800161a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 800161c:	2300      	movs	r3, #0
}
 800161e:	4618      	mov	r0, r3
 8001620:	3708      	adds	r7, #8
 8001622:	46bd      	mov	sp, r7
 8001624:	bd80      	pop	{r7, pc}
 8001626:	bf00      	nop
 8001628:	e000e010 	.word	0xe000e010

0800162c <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800162c:	b580      	push	{r7, lr}
 800162e:	b082      	sub	sp, #8
 8001630:	af00      	add	r7, sp, #0
 8001632:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8001634:	6878      	ldr	r0, [r7, #4]
 8001636:	f7ff ff47 	bl	80014c8 <__NVIC_SetPriorityGrouping>
}
 800163a:	bf00      	nop
 800163c:	3708      	adds	r7, #8
 800163e:	46bd      	mov	sp, r7
 8001640:	bd80      	pop	{r7, pc}

08001642 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001642:	b580      	push	{r7, lr}
 8001644:	b086      	sub	sp, #24
 8001646:	af00      	add	r7, sp, #0
 8001648:	4603      	mov	r3, r0
 800164a:	60b9      	str	r1, [r7, #8]
 800164c:	607a      	str	r2, [r7, #4]
 800164e:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8001650:	2300      	movs	r3, #0
 8001652:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8001654:	f7ff ff5c 	bl	8001510 <__NVIC_GetPriorityGrouping>
 8001658:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 800165a:	687a      	ldr	r2, [r7, #4]
 800165c:	68b9      	ldr	r1, [r7, #8]
 800165e:	6978      	ldr	r0, [r7, #20]
 8001660:	f7ff ff8e 	bl	8001580 <NVIC_EncodePriority>
 8001664:	4602      	mov	r2, r0
 8001666:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800166a:	4611      	mov	r1, r2
 800166c:	4618      	mov	r0, r3
 800166e:	f7ff ff5d 	bl	800152c <__NVIC_SetPriority>
}
 8001672:	bf00      	nop
 8001674:	3718      	adds	r7, #24
 8001676:	46bd      	mov	sp, r7
 8001678:	bd80      	pop	{r7, pc}

0800167a <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800167a:	b580      	push	{r7, lr}
 800167c:	b082      	sub	sp, #8
 800167e:	af00      	add	r7, sp, #0
 8001680:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8001682:	6878      	ldr	r0, [r7, #4]
 8001684:	f7ff ffb0 	bl	80015e8 <SysTick_Config>
 8001688:	4603      	mov	r3, r0
}
 800168a:	4618      	mov	r0, r3
 800168c:	3708      	adds	r7, #8
 800168e:	46bd      	mov	sp, r7
 8001690:	bd80      	pop	{r7, pc}
	...

08001694 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001694:	b480      	push	{r7}
 8001696:	b089      	sub	sp, #36	; 0x24
 8001698:	af00      	add	r7, sp, #0
 800169a:	6078      	str	r0, [r7, #4]
 800169c:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 800169e:	2300      	movs	r3, #0
 80016a0:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 80016a2:	2300      	movs	r3, #0
 80016a4:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 80016a6:	2300      	movs	r3, #0
 80016a8:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 80016aa:	2300      	movs	r3, #0
 80016ac:	61fb      	str	r3, [r7, #28]
 80016ae:	e16b      	b.n	8001988 <HAL_GPIO_Init+0x2f4>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 80016b0:	2201      	movs	r2, #1
 80016b2:	69fb      	ldr	r3, [r7, #28]
 80016b4:	fa02 f303 	lsl.w	r3, r2, r3
 80016b8:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80016ba:	683b      	ldr	r3, [r7, #0]
 80016bc:	681b      	ldr	r3, [r3, #0]
 80016be:	697a      	ldr	r2, [r7, #20]
 80016c0:	4013      	ands	r3, r2
 80016c2:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 80016c4:	693a      	ldr	r2, [r7, #16]
 80016c6:	697b      	ldr	r3, [r7, #20]
 80016c8:	429a      	cmp	r2, r3
 80016ca:	f040 815a 	bne.w	8001982 <HAL_GPIO_Init+0x2ee>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80016ce:	683b      	ldr	r3, [r7, #0]
 80016d0:	685b      	ldr	r3, [r3, #4]
 80016d2:	f003 0303 	and.w	r3, r3, #3
 80016d6:	2b01      	cmp	r3, #1
 80016d8:	d005      	beq.n	80016e6 <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80016da:	683b      	ldr	r3, [r7, #0]
 80016dc:	685b      	ldr	r3, [r3, #4]
 80016de:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80016e2:	2b02      	cmp	r3, #2
 80016e4:	d130      	bne.n	8001748 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 80016e6:	687b      	ldr	r3, [r7, #4]
 80016e8:	689b      	ldr	r3, [r3, #8]
 80016ea:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80016ec:	69fb      	ldr	r3, [r7, #28]
 80016ee:	005b      	lsls	r3, r3, #1
 80016f0:	2203      	movs	r2, #3
 80016f2:	fa02 f303 	lsl.w	r3, r2, r3
 80016f6:	43db      	mvns	r3, r3
 80016f8:	69ba      	ldr	r2, [r7, #24]
 80016fa:	4013      	ands	r3, r2
 80016fc:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80016fe:	683b      	ldr	r3, [r7, #0]
 8001700:	68da      	ldr	r2, [r3, #12]
 8001702:	69fb      	ldr	r3, [r7, #28]
 8001704:	005b      	lsls	r3, r3, #1
 8001706:	fa02 f303 	lsl.w	r3, r2, r3
 800170a:	69ba      	ldr	r2, [r7, #24]
 800170c:	4313      	orrs	r3, r2
 800170e:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8001710:	687b      	ldr	r3, [r7, #4]
 8001712:	69ba      	ldr	r2, [r7, #24]
 8001714:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8001716:	687b      	ldr	r3, [r7, #4]
 8001718:	685b      	ldr	r3, [r3, #4]
 800171a:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800171c:	2201      	movs	r2, #1
 800171e:	69fb      	ldr	r3, [r7, #28]
 8001720:	fa02 f303 	lsl.w	r3, r2, r3
 8001724:	43db      	mvns	r3, r3
 8001726:	69ba      	ldr	r2, [r7, #24]
 8001728:	4013      	ands	r3, r2
 800172a:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800172c:	683b      	ldr	r3, [r7, #0]
 800172e:	685b      	ldr	r3, [r3, #4]
 8001730:	091b      	lsrs	r3, r3, #4
 8001732:	f003 0201 	and.w	r2, r3, #1
 8001736:	69fb      	ldr	r3, [r7, #28]
 8001738:	fa02 f303 	lsl.w	r3, r2, r3
 800173c:	69ba      	ldr	r2, [r7, #24]
 800173e:	4313      	orrs	r3, r2
 8001740:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	69ba      	ldr	r2, [r7, #24]
 8001746:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8001748:	683b      	ldr	r3, [r7, #0]
 800174a:	685b      	ldr	r3, [r3, #4]
 800174c:	f003 0303 	and.w	r3, r3, #3
 8001750:	2b03      	cmp	r3, #3
 8001752:	d017      	beq.n	8001784 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8001754:	687b      	ldr	r3, [r7, #4]
 8001756:	68db      	ldr	r3, [r3, #12]
 8001758:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800175a:	69fb      	ldr	r3, [r7, #28]
 800175c:	005b      	lsls	r3, r3, #1
 800175e:	2203      	movs	r2, #3
 8001760:	fa02 f303 	lsl.w	r3, r2, r3
 8001764:	43db      	mvns	r3, r3
 8001766:	69ba      	ldr	r2, [r7, #24]
 8001768:	4013      	ands	r3, r2
 800176a:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800176c:	683b      	ldr	r3, [r7, #0]
 800176e:	689a      	ldr	r2, [r3, #8]
 8001770:	69fb      	ldr	r3, [r7, #28]
 8001772:	005b      	lsls	r3, r3, #1
 8001774:	fa02 f303 	lsl.w	r3, r2, r3
 8001778:	69ba      	ldr	r2, [r7, #24]
 800177a:	4313      	orrs	r3, r2
 800177c:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 800177e:	687b      	ldr	r3, [r7, #4]
 8001780:	69ba      	ldr	r2, [r7, #24]
 8001782:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001784:	683b      	ldr	r3, [r7, #0]
 8001786:	685b      	ldr	r3, [r3, #4]
 8001788:	f003 0303 	and.w	r3, r3, #3
 800178c:	2b02      	cmp	r3, #2
 800178e:	d123      	bne.n	80017d8 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8001790:	69fb      	ldr	r3, [r7, #28]
 8001792:	08da      	lsrs	r2, r3, #3
 8001794:	687b      	ldr	r3, [r7, #4]
 8001796:	3208      	adds	r2, #8
 8001798:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800179c:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800179e:	69fb      	ldr	r3, [r7, #28]
 80017a0:	f003 0307 	and.w	r3, r3, #7
 80017a4:	009b      	lsls	r3, r3, #2
 80017a6:	220f      	movs	r2, #15
 80017a8:	fa02 f303 	lsl.w	r3, r2, r3
 80017ac:	43db      	mvns	r3, r3
 80017ae:	69ba      	ldr	r2, [r7, #24]
 80017b0:	4013      	ands	r3, r2
 80017b2:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80017b4:	683b      	ldr	r3, [r7, #0]
 80017b6:	691a      	ldr	r2, [r3, #16]
 80017b8:	69fb      	ldr	r3, [r7, #28]
 80017ba:	f003 0307 	and.w	r3, r3, #7
 80017be:	009b      	lsls	r3, r3, #2
 80017c0:	fa02 f303 	lsl.w	r3, r2, r3
 80017c4:	69ba      	ldr	r2, [r7, #24]
 80017c6:	4313      	orrs	r3, r2
 80017c8:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 80017ca:	69fb      	ldr	r3, [r7, #28]
 80017cc:	08da      	lsrs	r2, r3, #3
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	3208      	adds	r2, #8
 80017d2:	69b9      	ldr	r1, [r7, #24]
 80017d4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80017d8:	687b      	ldr	r3, [r7, #4]
 80017da:	681b      	ldr	r3, [r3, #0]
 80017dc:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80017de:	69fb      	ldr	r3, [r7, #28]
 80017e0:	005b      	lsls	r3, r3, #1
 80017e2:	2203      	movs	r2, #3
 80017e4:	fa02 f303 	lsl.w	r3, r2, r3
 80017e8:	43db      	mvns	r3, r3
 80017ea:	69ba      	ldr	r2, [r7, #24]
 80017ec:	4013      	ands	r3, r2
 80017ee:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80017f0:	683b      	ldr	r3, [r7, #0]
 80017f2:	685b      	ldr	r3, [r3, #4]
 80017f4:	f003 0203 	and.w	r2, r3, #3
 80017f8:	69fb      	ldr	r3, [r7, #28]
 80017fa:	005b      	lsls	r3, r3, #1
 80017fc:	fa02 f303 	lsl.w	r3, r2, r3
 8001800:	69ba      	ldr	r2, [r7, #24]
 8001802:	4313      	orrs	r3, r2
 8001804:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8001806:	687b      	ldr	r3, [r7, #4]
 8001808:	69ba      	ldr	r2, [r7, #24]
 800180a:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800180c:	683b      	ldr	r3, [r7, #0]
 800180e:	685b      	ldr	r3, [r3, #4]
 8001810:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8001814:	2b00      	cmp	r3, #0
 8001816:	f000 80b4 	beq.w	8001982 <HAL_GPIO_Init+0x2ee>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800181a:	2300      	movs	r3, #0
 800181c:	60fb      	str	r3, [r7, #12]
 800181e:	4b60      	ldr	r3, [pc, #384]	; (80019a0 <HAL_GPIO_Init+0x30c>)
 8001820:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001822:	4a5f      	ldr	r2, [pc, #380]	; (80019a0 <HAL_GPIO_Init+0x30c>)
 8001824:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001828:	6453      	str	r3, [r2, #68]	; 0x44
 800182a:	4b5d      	ldr	r3, [pc, #372]	; (80019a0 <HAL_GPIO_Init+0x30c>)
 800182c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800182e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001832:	60fb      	str	r3, [r7, #12]
 8001834:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8001836:	4a5b      	ldr	r2, [pc, #364]	; (80019a4 <HAL_GPIO_Init+0x310>)
 8001838:	69fb      	ldr	r3, [r7, #28]
 800183a:	089b      	lsrs	r3, r3, #2
 800183c:	3302      	adds	r3, #2
 800183e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001842:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8001844:	69fb      	ldr	r3, [r7, #28]
 8001846:	f003 0303 	and.w	r3, r3, #3
 800184a:	009b      	lsls	r3, r3, #2
 800184c:	220f      	movs	r2, #15
 800184e:	fa02 f303 	lsl.w	r3, r2, r3
 8001852:	43db      	mvns	r3, r3
 8001854:	69ba      	ldr	r2, [r7, #24]
 8001856:	4013      	ands	r3, r2
 8001858:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800185a:	687b      	ldr	r3, [r7, #4]
 800185c:	4a52      	ldr	r2, [pc, #328]	; (80019a8 <HAL_GPIO_Init+0x314>)
 800185e:	4293      	cmp	r3, r2
 8001860:	d02b      	beq.n	80018ba <HAL_GPIO_Init+0x226>
 8001862:	687b      	ldr	r3, [r7, #4]
 8001864:	4a51      	ldr	r2, [pc, #324]	; (80019ac <HAL_GPIO_Init+0x318>)
 8001866:	4293      	cmp	r3, r2
 8001868:	d025      	beq.n	80018b6 <HAL_GPIO_Init+0x222>
 800186a:	687b      	ldr	r3, [r7, #4]
 800186c:	4a50      	ldr	r2, [pc, #320]	; (80019b0 <HAL_GPIO_Init+0x31c>)
 800186e:	4293      	cmp	r3, r2
 8001870:	d01f      	beq.n	80018b2 <HAL_GPIO_Init+0x21e>
 8001872:	687b      	ldr	r3, [r7, #4]
 8001874:	4a4f      	ldr	r2, [pc, #316]	; (80019b4 <HAL_GPIO_Init+0x320>)
 8001876:	4293      	cmp	r3, r2
 8001878:	d019      	beq.n	80018ae <HAL_GPIO_Init+0x21a>
 800187a:	687b      	ldr	r3, [r7, #4]
 800187c:	4a4e      	ldr	r2, [pc, #312]	; (80019b8 <HAL_GPIO_Init+0x324>)
 800187e:	4293      	cmp	r3, r2
 8001880:	d013      	beq.n	80018aa <HAL_GPIO_Init+0x216>
 8001882:	687b      	ldr	r3, [r7, #4]
 8001884:	4a4d      	ldr	r2, [pc, #308]	; (80019bc <HAL_GPIO_Init+0x328>)
 8001886:	4293      	cmp	r3, r2
 8001888:	d00d      	beq.n	80018a6 <HAL_GPIO_Init+0x212>
 800188a:	687b      	ldr	r3, [r7, #4]
 800188c:	4a4c      	ldr	r2, [pc, #304]	; (80019c0 <HAL_GPIO_Init+0x32c>)
 800188e:	4293      	cmp	r3, r2
 8001890:	d007      	beq.n	80018a2 <HAL_GPIO_Init+0x20e>
 8001892:	687b      	ldr	r3, [r7, #4]
 8001894:	4a4b      	ldr	r2, [pc, #300]	; (80019c4 <HAL_GPIO_Init+0x330>)
 8001896:	4293      	cmp	r3, r2
 8001898:	d101      	bne.n	800189e <HAL_GPIO_Init+0x20a>
 800189a:	2307      	movs	r3, #7
 800189c:	e00e      	b.n	80018bc <HAL_GPIO_Init+0x228>
 800189e:	2308      	movs	r3, #8
 80018a0:	e00c      	b.n	80018bc <HAL_GPIO_Init+0x228>
 80018a2:	2306      	movs	r3, #6
 80018a4:	e00a      	b.n	80018bc <HAL_GPIO_Init+0x228>
 80018a6:	2305      	movs	r3, #5
 80018a8:	e008      	b.n	80018bc <HAL_GPIO_Init+0x228>
 80018aa:	2304      	movs	r3, #4
 80018ac:	e006      	b.n	80018bc <HAL_GPIO_Init+0x228>
 80018ae:	2303      	movs	r3, #3
 80018b0:	e004      	b.n	80018bc <HAL_GPIO_Init+0x228>
 80018b2:	2302      	movs	r3, #2
 80018b4:	e002      	b.n	80018bc <HAL_GPIO_Init+0x228>
 80018b6:	2301      	movs	r3, #1
 80018b8:	e000      	b.n	80018bc <HAL_GPIO_Init+0x228>
 80018ba:	2300      	movs	r3, #0
 80018bc:	69fa      	ldr	r2, [r7, #28]
 80018be:	f002 0203 	and.w	r2, r2, #3
 80018c2:	0092      	lsls	r2, r2, #2
 80018c4:	4093      	lsls	r3, r2
 80018c6:	69ba      	ldr	r2, [r7, #24]
 80018c8:	4313      	orrs	r3, r2
 80018ca:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 80018cc:	4935      	ldr	r1, [pc, #212]	; (80019a4 <HAL_GPIO_Init+0x310>)
 80018ce:	69fb      	ldr	r3, [r7, #28]
 80018d0:	089b      	lsrs	r3, r3, #2
 80018d2:	3302      	adds	r3, #2
 80018d4:	69ba      	ldr	r2, [r7, #24]
 80018d6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80018da:	4b3b      	ldr	r3, [pc, #236]	; (80019c8 <HAL_GPIO_Init+0x334>)
 80018dc:	689b      	ldr	r3, [r3, #8]
 80018de:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80018e0:	693b      	ldr	r3, [r7, #16]
 80018e2:	43db      	mvns	r3, r3
 80018e4:	69ba      	ldr	r2, [r7, #24]
 80018e6:	4013      	ands	r3, r2
 80018e8:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80018ea:	683b      	ldr	r3, [r7, #0]
 80018ec:	685b      	ldr	r3, [r3, #4]
 80018ee:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80018f2:	2b00      	cmp	r3, #0
 80018f4:	d003      	beq.n	80018fe <HAL_GPIO_Init+0x26a>
        {
          temp |= iocurrent;
 80018f6:	69ba      	ldr	r2, [r7, #24]
 80018f8:	693b      	ldr	r3, [r7, #16]
 80018fa:	4313      	orrs	r3, r2
 80018fc:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 80018fe:	4a32      	ldr	r2, [pc, #200]	; (80019c8 <HAL_GPIO_Init+0x334>)
 8001900:	69bb      	ldr	r3, [r7, #24]
 8001902:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8001904:	4b30      	ldr	r3, [pc, #192]	; (80019c8 <HAL_GPIO_Init+0x334>)
 8001906:	68db      	ldr	r3, [r3, #12]
 8001908:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800190a:	693b      	ldr	r3, [r7, #16]
 800190c:	43db      	mvns	r3, r3
 800190e:	69ba      	ldr	r2, [r7, #24]
 8001910:	4013      	ands	r3, r2
 8001912:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8001914:	683b      	ldr	r3, [r7, #0]
 8001916:	685b      	ldr	r3, [r3, #4]
 8001918:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800191c:	2b00      	cmp	r3, #0
 800191e:	d003      	beq.n	8001928 <HAL_GPIO_Init+0x294>
        {
          temp |= iocurrent;
 8001920:	69ba      	ldr	r2, [r7, #24]
 8001922:	693b      	ldr	r3, [r7, #16]
 8001924:	4313      	orrs	r3, r2
 8001926:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8001928:	4a27      	ldr	r2, [pc, #156]	; (80019c8 <HAL_GPIO_Init+0x334>)
 800192a:	69bb      	ldr	r3, [r7, #24]
 800192c:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 800192e:	4b26      	ldr	r3, [pc, #152]	; (80019c8 <HAL_GPIO_Init+0x334>)
 8001930:	685b      	ldr	r3, [r3, #4]
 8001932:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001934:	693b      	ldr	r3, [r7, #16]
 8001936:	43db      	mvns	r3, r3
 8001938:	69ba      	ldr	r2, [r7, #24]
 800193a:	4013      	ands	r3, r2
 800193c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800193e:	683b      	ldr	r3, [r7, #0]
 8001940:	685b      	ldr	r3, [r3, #4]
 8001942:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001946:	2b00      	cmp	r3, #0
 8001948:	d003      	beq.n	8001952 <HAL_GPIO_Init+0x2be>
        {
          temp |= iocurrent;
 800194a:	69ba      	ldr	r2, [r7, #24]
 800194c:	693b      	ldr	r3, [r7, #16]
 800194e:	4313      	orrs	r3, r2
 8001950:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8001952:	4a1d      	ldr	r2, [pc, #116]	; (80019c8 <HAL_GPIO_Init+0x334>)
 8001954:	69bb      	ldr	r3, [r7, #24]
 8001956:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8001958:	4b1b      	ldr	r3, [pc, #108]	; (80019c8 <HAL_GPIO_Init+0x334>)
 800195a:	681b      	ldr	r3, [r3, #0]
 800195c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800195e:	693b      	ldr	r3, [r7, #16]
 8001960:	43db      	mvns	r3, r3
 8001962:	69ba      	ldr	r2, [r7, #24]
 8001964:	4013      	ands	r3, r2
 8001966:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8001968:	683b      	ldr	r3, [r7, #0]
 800196a:	685b      	ldr	r3, [r3, #4]
 800196c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001970:	2b00      	cmp	r3, #0
 8001972:	d003      	beq.n	800197c <HAL_GPIO_Init+0x2e8>
        {
          temp |= iocurrent;
 8001974:	69ba      	ldr	r2, [r7, #24]
 8001976:	693b      	ldr	r3, [r7, #16]
 8001978:	4313      	orrs	r3, r2
 800197a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 800197c:	4a12      	ldr	r2, [pc, #72]	; (80019c8 <HAL_GPIO_Init+0x334>)
 800197e:	69bb      	ldr	r3, [r7, #24]
 8001980:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8001982:	69fb      	ldr	r3, [r7, #28]
 8001984:	3301      	adds	r3, #1
 8001986:	61fb      	str	r3, [r7, #28]
 8001988:	69fb      	ldr	r3, [r7, #28]
 800198a:	2b0f      	cmp	r3, #15
 800198c:	f67f ae90 	bls.w	80016b0 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8001990:	bf00      	nop
 8001992:	bf00      	nop
 8001994:	3724      	adds	r7, #36	; 0x24
 8001996:	46bd      	mov	sp, r7
 8001998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800199c:	4770      	bx	lr
 800199e:	bf00      	nop
 80019a0:	40023800 	.word	0x40023800
 80019a4:	40013800 	.word	0x40013800
 80019a8:	40020000 	.word	0x40020000
 80019ac:	40020400 	.word	0x40020400
 80019b0:	40020800 	.word	0x40020800
 80019b4:	40020c00 	.word	0x40020c00
 80019b8:	40021000 	.word	0x40021000
 80019bc:	40021400 	.word	0x40021400
 80019c0:	40021800 	.word	0x40021800
 80019c4:	40021c00 	.word	0x40021c00
 80019c8:	40013c00 	.word	0x40013c00

080019cc <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80019cc:	b480      	push	{r7}
 80019ce:	b083      	sub	sp, #12
 80019d0:	af00      	add	r7, sp, #0
 80019d2:	6078      	str	r0, [r7, #4]
 80019d4:	460b      	mov	r3, r1
 80019d6:	807b      	strh	r3, [r7, #2]
 80019d8:	4613      	mov	r3, r2
 80019da:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80019dc:	787b      	ldrb	r3, [r7, #1]
 80019de:	2b00      	cmp	r3, #0
 80019e0:	d003      	beq.n	80019ea <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80019e2:	887a      	ldrh	r2, [r7, #2]
 80019e4:	687b      	ldr	r3, [r7, #4]
 80019e6:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 80019e8:	e003      	b.n	80019f2 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80019ea:	887b      	ldrh	r3, [r7, #2]
 80019ec:	041a      	lsls	r2, r3, #16
 80019ee:	687b      	ldr	r3, [r7, #4]
 80019f0:	619a      	str	r2, [r3, #24]
}
 80019f2:	bf00      	nop
 80019f4:	370c      	adds	r7, #12
 80019f6:	46bd      	mov	sp, r7
 80019f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019fc:	4770      	bx	lr
	...

08001a00 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8001a00:	b580      	push	{r7, lr}
 8001a02:	b086      	sub	sp, #24
 8001a04:	af00      	add	r7, sp, #0
 8001a06:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8001a08:	687b      	ldr	r3, [r7, #4]
 8001a0a:	2b00      	cmp	r3, #0
 8001a0c:	d101      	bne.n	8001a12 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8001a0e:	2301      	movs	r3, #1
 8001a10:	e267      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001a12:	687b      	ldr	r3, [r7, #4]
 8001a14:	681b      	ldr	r3, [r3, #0]
 8001a16:	f003 0301 	and.w	r3, r3, #1
 8001a1a:	2b00      	cmp	r3, #0
 8001a1c:	d075      	beq.n	8001b0a <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8001a1e:	4b88      	ldr	r3, [pc, #544]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001a20:	689b      	ldr	r3, [r3, #8]
 8001a22:	f003 030c 	and.w	r3, r3, #12
 8001a26:	2b04      	cmp	r3, #4
 8001a28:	d00c      	beq.n	8001a44 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001a2a:	4b85      	ldr	r3, [pc, #532]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001a2c:	689b      	ldr	r3, [r3, #8]
 8001a2e:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8001a32:	2b08      	cmp	r3, #8
 8001a34:	d112      	bne.n	8001a5c <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001a36:	4b82      	ldr	r3, [pc, #520]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001a38:	685b      	ldr	r3, [r3, #4]
 8001a3a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001a3e:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8001a42:	d10b      	bne.n	8001a5c <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001a44:	4b7e      	ldr	r3, [pc, #504]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001a46:	681b      	ldr	r3, [r3, #0]
 8001a48:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001a4c:	2b00      	cmp	r3, #0
 8001a4e:	d05b      	beq.n	8001b08 <HAL_RCC_OscConfig+0x108>
 8001a50:	687b      	ldr	r3, [r7, #4]
 8001a52:	685b      	ldr	r3, [r3, #4]
 8001a54:	2b00      	cmp	r3, #0
 8001a56:	d157      	bne.n	8001b08 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8001a58:	2301      	movs	r3, #1
 8001a5a:	e242      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001a5c:	687b      	ldr	r3, [r7, #4]
 8001a5e:	685b      	ldr	r3, [r3, #4]
 8001a60:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001a64:	d106      	bne.n	8001a74 <HAL_RCC_OscConfig+0x74>
 8001a66:	4b76      	ldr	r3, [pc, #472]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001a68:	681b      	ldr	r3, [r3, #0]
 8001a6a:	4a75      	ldr	r2, [pc, #468]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001a6c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001a70:	6013      	str	r3, [r2, #0]
 8001a72:	e01d      	b.n	8001ab0 <HAL_RCC_OscConfig+0xb0>
 8001a74:	687b      	ldr	r3, [r7, #4]
 8001a76:	685b      	ldr	r3, [r3, #4]
 8001a78:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001a7c:	d10c      	bne.n	8001a98 <HAL_RCC_OscConfig+0x98>
 8001a7e:	4b70      	ldr	r3, [pc, #448]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001a80:	681b      	ldr	r3, [r3, #0]
 8001a82:	4a6f      	ldr	r2, [pc, #444]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001a84:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001a88:	6013      	str	r3, [r2, #0]
 8001a8a:	4b6d      	ldr	r3, [pc, #436]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001a8c:	681b      	ldr	r3, [r3, #0]
 8001a8e:	4a6c      	ldr	r2, [pc, #432]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001a90:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001a94:	6013      	str	r3, [r2, #0]
 8001a96:	e00b      	b.n	8001ab0 <HAL_RCC_OscConfig+0xb0>
 8001a98:	4b69      	ldr	r3, [pc, #420]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001a9a:	681b      	ldr	r3, [r3, #0]
 8001a9c:	4a68      	ldr	r2, [pc, #416]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001a9e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001aa2:	6013      	str	r3, [r2, #0]
 8001aa4:	4b66      	ldr	r3, [pc, #408]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001aa6:	681b      	ldr	r3, [r3, #0]
 8001aa8:	4a65      	ldr	r2, [pc, #404]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001aaa:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001aae:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8001ab0:	687b      	ldr	r3, [r7, #4]
 8001ab2:	685b      	ldr	r3, [r3, #4]
 8001ab4:	2b00      	cmp	r3, #0
 8001ab6:	d013      	beq.n	8001ae0 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001ab8:	f7ff f8d6 	bl	8000c68 <HAL_GetTick>
 8001abc:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001abe:	e008      	b.n	8001ad2 <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001ac0:	f7ff f8d2 	bl	8000c68 <HAL_GetTick>
 8001ac4:	4602      	mov	r2, r0
 8001ac6:	693b      	ldr	r3, [r7, #16]
 8001ac8:	1ad3      	subs	r3, r2, r3
 8001aca:	2b64      	cmp	r3, #100	; 0x64
 8001acc:	d901      	bls.n	8001ad2 <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8001ace:	2303      	movs	r3, #3
 8001ad0:	e207      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001ad2:	4b5b      	ldr	r3, [pc, #364]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001ad4:	681b      	ldr	r3, [r3, #0]
 8001ad6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001ada:	2b00      	cmp	r3, #0
 8001adc:	d0f0      	beq.n	8001ac0 <HAL_RCC_OscConfig+0xc0>
 8001ade:	e014      	b.n	8001b0a <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001ae0:	f7ff f8c2 	bl	8000c68 <HAL_GetTick>
 8001ae4:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001ae6:	e008      	b.n	8001afa <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001ae8:	f7ff f8be 	bl	8000c68 <HAL_GetTick>
 8001aec:	4602      	mov	r2, r0
 8001aee:	693b      	ldr	r3, [r7, #16]
 8001af0:	1ad3      	subs	r3, r2, r3
 8001af2:	2b64      	cmp	r3, #100	; 0x64
 8001af4:	d901      	bls.n	8001afa <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8001af6:	2303      	movs	r3, #3
 8001af8:	e1f3      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001afa:	4b51      	ldr	r3, [pc, #324]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001afc:	681b      	ldr	r3, [r3, #0]
 8001afe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001b02:	2b00      	cmp	r3, #0
 8001b04:	d1f0      	bne.n	8001ae8 <HAL_RCC_OscConfig+0xe8>
 8001b06:	e000      	b.n	8001b0a <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001b08:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8001b0a:	687b      	ldr	r3, [r7, #4]
 8001b0c:	681b      	ldr	r3, [r3, #0]
 8001b0e:	f003 0302 	and.w	r3, r3, #2
 8001b12:	2b00      	cmp	r3, #0
 8001b14:	d063      	beq.n	8001bde <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8001b16:	4b4a      	ldr	r3, [pc, #296]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001b18:	689b      	ldr	r3, [r3, #8]
 8001b1a:	f003 030c 	and.w	r3, r3, #12
 8001b1e:	2b00      	cmp	r3, #0
 8001b20:	d00b      	beq.n	8001b3a <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8001b22:	4b47      	ldr	r3, [pc, #284]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001b24:	689b      	ldr	r3, [r3, #8]
 8001b26:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8001b2a:	2b08      	cmp	r3, #8
 8001b2c:	d11c      	bne.n	8001b68 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8001b2e:	4b44      	ldr	r3, [pc, #272]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001b30:	685b      	ldr	r3, [r3, #4]
 8001b32:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001b36:	2b00      	cmp	r3, #0
 8001b38:	d116      	bne.n	8001b68 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001b3a:	4b41      	ldr	r3, [pc, #260]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001b3c:	681b      	ldr	r3, [r3, #0]
 8001b3e:	f003 0302 	and.w	r3, r3, #2
 8001b42:	2b00      	cmp	r3, #0
 8001b44:	d005      	beq.n	8001b52 <HAL_RCC_OscConfig+0x152>
 8001b46:	687b      	ldr	r3, [r7, #4]
 8001b48:	68db      	ldr	r3, [r3, #12]
 8001b4a:	2b01      	cmp	r3, #1
 8001b4c:	d001      	beq.n	8001b52 <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8001b4e:	2301      	movs	r3, #1
 8001b50:	e1c7      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001b52:	4b3b      	ldr	r3, [pc, #236]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001b54:	681b      	ldr	r3, [r3, #0]
 8001b56:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001b5a:	687b      	ldr	r3, [r7, #4]
 8001b5c:	691b      	ldr	r3, [r3, #16]
 8001b5e:	00db      	lsls	r3, r3, #3
 8001b60:	4937      	ldr	r1, [pc, #220]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001b62:	4313      	orrs	r3, r2
 8001b64:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001b66:	e03a      	b.n	8001bde <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8001b68:	687b      	ldr	r3, [r7, #4]
 8001b6a:	68db      	ldr	r3, [r3, #12]
 8001b6c:	2b00      	cmp	r3, #0
 8001b6e:	d020      	beq.n	8001bb2 <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8001b70:	4b34      	ldr	r3, [pc, #208]	; (8001c44 <HAL_RCC_OscConfig+0x244>)
 8001b72:	2201      	movs	r2, #1
 8001b74:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8001b76:	f7ff f877 	bl	8000c68 <HAL_GetTick>
 8001b7a:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001b7c:	e008      	b.n	8001b90 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8001b7e:	f7ff f873 	bl	8000c68 <HAL_GetTick>
 8001b82:	4602      	mov	r2, r0
 8001b84:	693b      	ldr	r3, [r7, #16]
 8001b86:	1ad3      	subs	r3, r2, r3
 8001b88:	2b02      	cmp	r3, #2
 8001b8a:	d901      	bls.n	8001b90 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8001b8c:	2303      	movs	r3, #3
 8001b8e:	e1a8      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001b90:	4b2b      	ldr	r3, [pc, #172]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001b92:	681b      	ldr	r3, [r3, #0]
 8001b94:	f003 0302 	and.w	r3, r3, #2
 8001b98:	2b00      	cmp	r3, #0
 8001b9a:	d0f0      	beq.n	8001b7e <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001b9c:	4b28      	ldr	r3, [pc, #160]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001b9e:	681b      	ldr	r3, [r3, #0]
 8001ba0:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001ba4:	687b      	ldr	r3, [r7, #4]
 8001ba6:	691b      	ldr	r3, [r3, #16]
 8001ba8:	00db      	lsls	r3, r3, #3
 8001baa:	4925      	ldr	r1, [pc, #148]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001bac:	4313      	orrs	r3, r2
 8001bae:	600b      	str	r3, [r1, #0]
 8001bb0:	e015      	b.n	8001bde <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8001bb2:	4b24      	ldr	r3, [pc, #144]	; (8001c44 <HAL_RCC_OscConfig+0x244>)
 8001bb4:	2200      	movs	r2, #0
 8001bb6:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8001bb8:	f7ff f856 	bl	8000c68 <HAL_GetTick>
 8001bbc:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001bbe:	e008      	b.n	8001bd2 <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8001bc0:	f7ff f852 	bl	8000c68 <HAL_GetTick>
 8001bc4:	4602      	mov	r2, r0
 8001bc6:	693b      	ldr	r3, [r7, #16]
 8001bc8:	1ad3      	subs	r3, r2, r3
 8001bca:	2b02      	cmp	r3, #2
 8001bcc:	d901      	bls.n	8001bd2 <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8001bce:	2303      	movs	r3, #3
 8001bd0:	e187      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001bd2:	4b1b      	ldr	r3, [pc, #108]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001bd4:	681b      	ldr	r3, [r3, #0]
 8001bd6:	f003 0302 	and.w	r3, r3, #2
 8001bda:	2b00      	cmp	r3, #0
 8001bdc:	d1f0      	bne.n	8001bc0 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8001bde:	687b      	ldr	r3, [r7, #4]
 8001be0:	681b      	ldr	r3, [r3, #0]
 8001be2:	f003 0308 	and.w	r3, r3, #8
 8001be6:	2b00      	cmp	r3, #0
 8001be8:	d036      	beq.n	8001c58 <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8001bea:	687b      	ldr	r3, [r7, #4]
 8001bec:	695b      	ldr	r3, [r3, #20]
 8001bee:	2b00      	cmp	r3, #0
 8001bf0:	d016      	beq.n	8001c20 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8001bf2:	4b15      	ldr	r3, [pc, #84]	; (8001c48 <HAL_RCC_OscConfig+0x248>)
 8001bf4:	2201      	movs	r2, #1
 8001bf6:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8001bf8:	f7ff f836 	bl	8000c68 <HAL_GetTick>
 8001bfc:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8001bfe:	e008      	b.n	8001c12 <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8001c00:	f7ff f832 	bl	8000c68 <HAL_GetTick>
 8001c04:	4602      	mov	r2, r0
 8001c06:	693b      	ldr	r3, [r7, #16]
 8001c08:	1ad3      	subs	r3, r2, r3
 8001c0a:	2b02      	cmp	r3, #2
 8001c0c:	d901      	bls.n	8001c12 <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8001c0e:	2303      	movs	r3, #3
 8001c10:	e167      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8001c12:	4b0b      	ldr	r3, [pc, #44]	; (8001c40 <HAL_RCC_OscConfig+0x240>)
 8001c14:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8001c16:	f003 0302 	and.w	r3, r3, #2
 8001c1a:	2b00      	cmp	r3, #0
 8001c1c:	d0f0      	beq.n	8001c00 <HAL_RCC_OscConfig+0x200>
 8001c1e:	e01b      	b.n	8001c58 <HAL_RCC_OscConfig+0x258>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8001c20:	4b09      	ldr	r3, [pc, #36]	; (8001c48 <HAL_RCC_OscConfig+0x248>)
 8001c22:	2200      	movs	r2, #0
 8001c24:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001c26:	f7ff f81f 	bl	8000c68 <HAL_GetTick>
 8001c2a:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001c2c:	e00e      	b.n	8001c4c <HAL_RCC_OscConfig+0x24c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8001c2e:	f7ff f81b 	bl	8000c68 <HAL_GetTick>
 8001c32:	4602      	mov	r2, r0
 8001c34:	693b      	ldr	r3, [r7, #16]
 8001c36:	1ad3      	subs	r3, r2, r3
 8001c38:	2b02      	cmp	r3, #2
 8001c3a:	d907      	bls.n	8001c4c <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 8001c3c:	2303      	movs	r3, #3
 8001c3e:	e150      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
 8001c40:	40023800 	.word	0x40023800
 8001c44:	42470000 	.word	0x42470000
 8001c48:	42470e80 	.word	0x42470e80
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001c4c:	4b88      	ldr	r3, [pc, #544]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001c4e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8001c50:	f003 0302 	and.w	r3, r3, #2
 8001c54:	2b00      	cmp	r3, #0
 8001c56:	d1ea      	bne.n	8001c2e <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8001c58:	687b      	ldr	r3, [r7, #4]
 8001c5a:	681b      	ldr	r3, [r3, #0]
 8001c5c:	f003 0304 	and.w	r3, r3, #4
 8001c60:	2b00      	cmp	r3, #0
 8001c62:	f000 8097 	beq.w	8001d94 <HAL_RCC_OscConfig+0x394>
  {
    FlagStatus       pwrclkchanged = RESET;
 8001c66:	2300      	movs	r3, #0
 8001c68:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8001c6a:	4b81      	ldr	r3, [pc, #516]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001c6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c6e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c72:	2b00      	cmp	r3, #0
 8001c74:	d10f      	bne.n	8001c96 <HAL_RCC_OscConfig+0x296>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8001c76:	2300      	movs	r3, #0
 8001c78:	60bb      	str	r3, [r7, #8]
 8001c7a:	4b7d      	ldr	r3, [pc, #500]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001c7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c7e:	4a7c      	ldr	r2, [pc, #496]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001c80:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001c84:	6413      	str	r3, [r2, #64]	; 0x40
 8001c86:	4b7a      	ldr	r3, [pc, #488]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001c88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c8a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c8e:	60bb      	str	r3, [r7, #8]
 8001c90:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8001c92:	2301      	movs	r3, #1
 8001c94:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001c96:	4b77      	ldr	r3, [pc, #476]	; (8001e74 <HAL_RCC_OscConfig+0x474>)
 8001c98:	681b      	ldr	r3, [r3, #0]
 8001c9a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001c9e:	2b00      	cmp	r3, #0
 8001ca0:	d118      	bne.n	8001cd4 <HAL_RCC_OscConfig+0x2d4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8001ca2:	4b74      	ldr	r3, [pc, #464]	; (8001e74 <HAL_RCC_OscConfig+0x474>)
 8001ca4:	681b      	ldr	r3, [r3, #0]
 8001ca6:	4a73      	ldr	r2, [pc, #460]	; (8001e74 <HAL_RCC_OscConfig+0x474>)
 8001ca8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001cac:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8001cae:	f7fe ffdb 	bl	8000c68 <HAL_GetTick>
 8001cb2:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001cb4:	e008      	b.n	8001cc8 <HAL_RCC_OscConfig+0x2c8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8001cb6:	f7fe ffd7 	bl	8000c68 <HAL_GetTick>
 8001cba:	4602      	mov	r2, r0
 8001cbc:	693b      	ldr	r3, [r7, #16]
 8001cbe:	1ad3      	subs	r3, r2, r3
 8001cc0:	2b02      	cmp	r3, #2
 8001cc2:	d901      	bls.n	8001cc8 <HAL_RCC_OscConfig+0x2c8>
        {
          return HAL_TIMEOUT;
 8001cc4:	2303      	movs	r3, #3
 8001cc6:	e10c      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001cc8:	4b6a      	ldr	r3, [pc, #424]	; (8001e74 <HAL_RCC_OscConfig+0x474>)
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001cd0:	2b00      	cmp	r3, #0
 8001cd2:	d0f0      	beq.n	8001cb6 <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	689b      	ldr	r3, [r3, #8]
 8001cd8:	2b01      	cmp	r3, #1
 8001cda:	d106      	bne.n	8001cea <HAL_RCC_OscConfig+0x2ea>
 8001cdc:	4b64      	ldr	r3, [pc, #400]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001cde:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001ce0:	4a63      	ldr	r2, [pc, #396]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001ce2:	f043 0301 	orr.w	r3, r3, #1
 8001ce6:	6713      	str	r3, [r2, #112]	; 0x70
 8001ce8:	e01c      	b.n	8001d24 <HAL_RCC_OscConfig+0x324>
 8001cea:	687b      	ldr	r3, [r7, #4]
 8001cec:	689b      	ldr	r3, [r3, #8]
 8001cee:	2b05      	cmp	r3, #5
 8001cf0:	d10c      	bne.n	8001d0c <HAL_RCC_OscConfig+0x30c>
 8001cf2:	4b5f      	ldr	r3, [pc, #380]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001cf4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001cf6:	4a5e      	ldr	r2, [pc, #376]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001cf8:	f043 0304 	orr.w	r3, r3, #4
 8001cfc:	6713      	str	r3, [r2, #112]	; 0x70
 8001cfe:	4b5c      	ldr	r3, [pc, #368]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001d00:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001d02:	4a5b      	ldr	r2, [pc, #364]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001d04:	f043 0301 	orr.w	r3, r3, #1
 8001d08:	6713      	str	r3, [r2, #112]	; 0x70
 8001d0a:	e00b      	b.n	8001d24 <HAL_RCC_OscConfig+0x324>
 8001d0c:	4b58      	ldr	r3, [pc, #352]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001d0e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001d10:	4a57      	ldr	r2, [pc, #348]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001d12:	f023 0301 	bic.w	r3, r3, #1
 8001d16:	6713      	str	r3, [r2, #112]	; 0x70
 8001d18:	4b55      	ldr	r3, [pc, #340]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001d1a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001d1c:	4a54      	ldr	r2, [pc, #336]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001d1e:	f023 0304 	bic.w	r3, r3, #4
 8001d22:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8001d24:	687b      	ldr	r3, [r7, #4]
 8001d26:	689b      	ldr	r3, [r3, #8]
 8001d28:	2b00      	cmp	r3, #0
 8001d2a:	d015      	beq.n	8001d58 <HAL_RCC_OscConfig+0x358>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8001d2c:	f7fe ff9c 	bl	8000c68 <HAL_GetTick>
 8001d30:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001d32:	e00a      	b.n	8001d4a <HAL_RCC_OscConfig+0x34a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8001d34:	f7fe ff98 	bl	8000c68 <HAL_GetTick>
 8001d38:	4602      	mov	r2, r0
 8001d3a:	693b      	ldr	r3, [r7, #16]
 8001d3c:	1ad3      	subs	r3, r2, r3
 8001d3e:	f241 3288 	movw	r2, #5000	; 0x1388
 8001d42:	4293      	cmp	r3, r2
 8001d44:	d901      	bls.n	8001d4a <HAL_RCC_OscConfig+0x34a>
        {
          return HAL_TIMEOUT;
 8001d46:	2303      	movs	r3, #3
 8001d48:	e0cb      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001d4a:	4b49      	ldr	r3, [pc, #292]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001d4c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001d4e:	f003 0302 	and.w	r3, r3, #2
 8001d52:	2b00      	cmp	r3, #0
 8001d54:	d0ee      	beq.n	8001d34 <HAL_RCC_OscConfig+0x334>
 8001d56:	e014      	b.n	8001d82 <HAL_RCC_OscConfig+0x382>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001d58:	f7fe ff86 	bl	8000c68 <HAL_GetTick>
 8001d5c:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001d5e:	e00a      	b.n	8001d76 <HAL_RCC_OscConfig+0x376>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8001d60:	f7fe ff82 	bl	8000c68 <HAL_GetTick>
 8001d64:	4602      	mov	r2, r0
 8001d66:	693b      	ldr	r3, [r7, #16]
 8001d68:	1ad3      	subs	r3, r2, r3
 8001d6a:	f241 3288 	movw	r2, #5000	; 0x1388
 8001d6e:	4293      	cmp	r3, r2
 8001d70:	d901      	bls.n	8001d76 <HAL_RCC_OscConfig+0x376>
        {
          return HAL_TIMEOUT;
 8001d72:	2303      	movs	r3, #3
 8001d74:	e0b5      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001d76:	4b3e      	ldr	r3, [pc, #248]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001d78:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001d7a:	f003 0302 	and.w	r3, r3, #2
 8001d7e:	2b00      	cmp	r3, #0
 8001d80:	d1ee      	bne.n	8001d60 <HAL_RCC_OscConfig+0x360>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8001d82:	7dfb      	ldrb	r3, [r7, #23]
 8001d84:	2b01      	cmp	r3, #1
 8001d86:	d105      	bne.n	8001d94 <HAL_RCC_OscConfig+0x394>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8001d88:	4b39      	ldr	r3, [pc, #228]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001d8a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d8c:	4a38      	ldr	r2, [pc, #224]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001d8e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001d92:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8001d94:	687b      	ldr	r3, [r7, #4]
 8001d96:	699b      	ldr	r3, [r3, #24]
 8001d98:	2b00      	cmp	r3, #0
 8001d9a:	f000 80a1 	beq.w	8001ee0 <HAL_RCC_OscConfig+0x4e0>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8001d9e:	4b34      	ldr	r3, [pc, #208]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001da0:	689b      	ldr	r3, [r3, #8]
 8001da2:	f003 030c 	and.w	r3, r3, #12
 8001da6:	2b08      	cmp	r3, #8
 8001da8:	d05c      	beq.n	8001e64 <HAL_RCC_OscConfig+0x464>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001daa:	687b      	ldr	r3, [r7, #4]
 8001dac:	699b      	ldr	r3, [r3, #24]
 8001dae:	2b02      	cmp	r3, #2
 8001db0:	d141      	bne.n	8001e36 <HAL_RCC_OscConfig+0x436>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001db2:	4b31      	ldr	r3, [pc, #196]	; (8001e78 <HAL_RCC_OscConfig+0x478>)
 8001db4:	2200      	movs	r2, #0
 8001db6:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001db8:	f7fe ff56 	bl	8000c68 <HAL_GetTick>
 8001dbc:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001dbe:	e008      	b.n	8001dd2 <HAL_RCC_OscConfig+0x3d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8001dc0:	f7fe ff52 	bl	8000c68 <HAL_GetTick>
 8001dc4:	4602      	mov	r2, r0
 8001dc6:	693b      	ldr	r3, [r7, #16]
 8001dc8:	1ad3      	subs	r3, r2, r3
 8001dca:	2b02      	cmp	r3, #2
 8001dcc:	d901      	bls.n	8001dd2 <HAL_RCC_OscConfig+0x3d2>
          {
            return HAL_TIMEOUT;
 8001dce:	2303      	movs	r3, #3
 8001dd0:	e087      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001dd2:	4b27      	ldr	r3, [pc, #156]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001dd4:	681b      	ldr	r3, [r3, #0]
 8001dd6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001dda:	2b00      	cmp	r3, #0
 8001ddc:	d1f0      	bne.n	8001dc0 <HAL_RCC_OscConfig+0x3c0>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	69da      	ldr	r2, [r3, #28]
 8001de2:	687b      	ldr	r3, [r7, #4]
 8001de4:	6a1b      	ldr	r3, [r3, #32]
 8001de6:	431a      	orrs	r2, r3
 8001de8:	687b      	ldr	r3, [r7, #4]
 8001dea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001dec:	019b      	lsls	r3, r3, #6
 8001dee:	431a      	orrs	r2, r3
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001df4:	085b      	lsrs	r3, r3, #1
 8001df6:	3b01      	subs	r3, #1
 8001df8:	041b      	lsls	r3, r3, #16
 8001dfa:	431a      	orrs	r2, r3
 8001dfc:	687b      	ldr	r3, [r7, #4]
 8001dfe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001e00:	061b      	lsls	r3, r3, #24
 8001e02:	491b      	ldr	r1, [pc, #108]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001e04:	4313      	orrs	r3, r2
 8001e06:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8001e08:	4b1b      	ldr	r3, [pc, #108]	; (8001e78 <HAL_RCC_OscConfig+0x478>)
 8001e0a:	2201      	movs	r2, #1
 8001e0c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001e0e:	f7fe ff2b 	bl	8000c68 <HAL_GetTick>
 8001e12:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001e14:	e008      	b.n	8001e28 <HAL_RCC_OscConfig+0x428>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8001e16:	f7fe ff27 	bl	8000c68 <HAL_GetTick>
 8001e1a:	4602      	mov	r2, r0
 8001e1c:	693b      	ldr	r3, [r7, #16]
 8001e1e:	1ad3      	subs	r3, r2, r3
 8001e20:	2b02      	cmp	r3, #2
 8001e22:	d901      	bls.n	8001e28 <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 8001e24:	2303      	movs	r3, #3
 8001e26:	e05c      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001e28:	4b11      	ldr	r3, [pc, #68]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001e2a:	681b      	ldr	r3, [r3, #0]
 8001e2c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001e30:	2b00      	cmp	r3, #0
 8001e32:	d0f0      	beq.n	8001e16 <HAL_RCC_OscConfig+0x416>
 8001e34:	e054      	b.n	8001ee0 <HAL_RCC_OscConfig+0x4e0>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001e36:	4b10      	ldr	r3, [pc, #64]	; (8001e78 <HAL_RCC_OscConfig+0x478>)
 8001e38:	2200      	movs	r2, #0
 8001e3a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001e3c:	f7fe ff14 	bl	8000c68 <HAL_GetTick>
 8001e40:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001e42:	e008      	b.n	8001e56 <HAL_RCC_OscConfig+0x456>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8001e44:	f7fe ff10 	bl	8000c68 <HAL_GetTick>
 8001e48:	4602      	mov	r2, r0
 8001e4a:	693b      	ldr	r3, [r7, #16]
 8001e4c:	1ad3      	subs	r3, r2, r3
 8001e4e:	2b02      	cmp	r3, #2
 8001e50:	d901      	bls.n	8001e56 <HAL_RCC_OscConfig+0x456>
          {
            return HAL_TIMEOUT;
 8001e52:	2303      	movs	r3, #3
 8001e54:	e045      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001e56:	4b06      	ldr	r3, [pc, #24]	; (8001e70 <HAL_RCC_OscConfig+0x470>)
 8001e58:	681b      	ldr	r3, [r3, #0]
 8001e5a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001e5e:	2b00      	cmp	r3, #0
 8001e60:	d1f0      	bne.n	8001e44 <HAL_RCC_OscConfig+0x444>
 8001e62:	e03d      	b.n	8001ee0 <HAL_RCC_OscConfig+0x4e0>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8001e64:	687b      	ldr	r3, [r7, #4]
 8001e66:	699b      	ldr	r3, [r3, #24]
 8001e68:	2b01      	cmp	r3, #1
 8001e6a:	d107      	bne.n	8001e7c <HAL_RCC_OscConfig+0x47c>
      {
        return HAL_ERROR;
 8001e6c:	2301      	movs	r3, #1
 8001e6e:	e038      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
 8001e70:	40023800 	.word	0x40023800
 8001e74:	40007000 	.word	0x40007000
 8001e78:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8001e7c:	4b1b      	ldr	r3, [pc, #108]	; (8001eec <HAL_RCC_OscConfig+0x4ec>)
 8001e7e:	685b      	ldr	r3, [r3, #4]
 8001e80:	60fb      	str	r3, [r7, #12]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8001e82:	687b      	ldr	r3, [r7, #4]
 8001e84:	699b      	ldr	r3, [r3, #24]
 8001e86:	2b01      	cmp	r3, #1
 8001e88:	d028      	beq.n	8001edc <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001e8a:	68fb      	ldr	r3, [r7, #12]
 8001e8c:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8001e90:	687b      	ldr	r3, [r7, #4]
 8001e92:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8001e94:	429a      	cmp	r2, r3
 8001e96:	d121      	bne.n	8001edc <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8001e98:	68fb      	ldr	r3, [r7, #12]
 8001e9a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001ea2:	429a      	cmp	r2, r3
 8001ea4:	d11a      	bne.n	8001edc <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8001ea6:	68fa      	ldr	r2, [r7, #12]
 8001ea8:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8001eac:	4013      	ands	r3, r2
 8001eae:	687a      	ldr	r2, [r7, #4]
 8001eb0:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8001eb2:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8001eb4:	4293      	cmp	r3, r2
 8001eb6:	d111      	bne.n	8001edc <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8001eb8:	68fb      	ldr	r3, [r7, #12]
 8001eba:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8001ebe:	687b      	ldr	r3, [r7, #4]
 8001ec0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001ec2:	085b      	lsrs	r3, r3, #1
 8001ec4:	3b01      	subs	r3, #1
 8001ec6:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8001ec8:	429a      	cmp	r2, r3
 8001eca:	d107      	bne.n	8001edc <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8001ecc:	68fb      	ldr	r3, [r7, #12]
 8001ece:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8001ed2:	687b      	ldr	r3, [r7, #4]
 8001ed4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001ed6:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8001ed8:	429a      	cmp	r2, r3
 8001eda:	d001      	beq.n	8001ee0 <HAL_RCC_OscConfig+0x4e0>
#endif
        {
          return HAL_ERROR;
 8001edc:	2301      	movs	r3, #1
 8001ede:	e000      	b.n	8001ee2 <HAL_RCC_OscConfig+0x4e2>
        }
      }
    }
  }
  return HAL_OK;
 8001ee0:	2300      	movs	r3, #0
}
 8001ee2:	4618      	mov	r0, r3
 8001ee4:	3718      	adds	r7, #24
 8001ee6:	46bd      	mov	sp, r7
 8001ee8:	bd80      	pop	{r7, pc}
 8001eea:	bf00      	nop
 8001eec:	40023800 	.word	0x40023800

08001ef0 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8001ef0:	b580      	push	{r7, lr}
 8001ef2:	b084      	sub	sp, #16
 8001ef4:	af00      	add	r7, sp, #0
 8001ef6:	6078      	str	r0, [r7, #4]
 8001ef8:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8001efa:	687b      	ldr	r3, [r7, #4]
 8001efc:	2b00      	cmp	r3, #0
 8001efe:	d101      	bne.n	8001f04 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8001f00:	2301      	movs	r3, #1
 8001f02:	e0cc      	b.n	800209e <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8001f04:	4b68      	ldr	r3, [pc, #416]	; (80020a8 <HAL_RCC_ClockConfig+0x1b8>)
 8001f06:	681b      	ldr	r3, [r3, #0]
 8001f08:	f003 0307 	and.w	r3, r3, #7
 8001f0c:	683a      	ldr	r2, [r7, #0]
 8001f0e:	429a      	cmp	r2, r3
 8001f10:	d90c      	bls.n	8001f2c <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001f12:	4b65      	ldr	r3, [pc, #404]	; (80020a8 <HAL_RCC_ClockConfig+0x1b8>)
 8001f14:	683a      	ldr	r2, [r7, #0]
 8001f16:	b2d2      	uxtb	r2, r2
 8001f18:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8001f1a:	4b63      	ldr	r3, [pc, #396]	; (80020a8 <HAL_RCC_ClockConfig+0x1b8>)
 8001f1c:	681b      	ldr	r3, [r3, #0]
 8001f1e:	f003 0307 	and.w	r3, r3, #7
 8001f22:	683a      	ldr	r2, [r7, #0]
 8001f24:	429a      	cmp	r2, r3
 8001f26:	d001      	beq.n	8001f2c <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8001f28:	2301      	movs	r3, #1
 8001f2a:	e0b8      	b.n	800209e <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8001f2c:	687b      	ldr	r3, [r7, #4]
 8001f2e:	681b      	ldr	r3, [r3, #0]
 8001f30:	f003 0302 	and.w	r3, r3, #2
 8001f34:	2b00      	cmp	r3, #0
 8001f36:	d020      	beq.n	8001f7a <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	681b      	ldr	r3, [r3, #0]
 8001f3c:	f003 0304 	and.w	r3, r3, #4
 8001f40:	2b00      	cmp	r3, #0
 8001f42:	d005      	beq.n	8001f50 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8001f44:	4b59      	ldr	r3, [pc, #356]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8001f46:	689b      	ldr	r3, [r3, #8]
 8001f48:	4a58      	ldr	r2, [pc, #352]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8001f4a:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8001f4e:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001f50:	687b      	ldr	r3, [r7, #4]
 8001f52:	681b      	ldr	r3, [r3, #0]
 8001f54:	f003 0308 	and.w	r3, r3, #8
 8001f58:	2b00      	cmp	r3, #0
 8001f5a:	d005      	beq.n	8001f68 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8001f5c:	4b53      	ldr	r3, [pc, #332]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8001f5e:	689b      	ldr	r3, [r3, #8]
 8001f60:	4a52      	ldr	r2, [pc, #328]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8001f62:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8001f66:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001f68:	4b50      	ldr	r3, [pc, #320]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8001f6a:	689b      	ldr	r3, [r3, #8]
 8001f6c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001f70:	687b      	ldr	r3, [r7, #4]
 8001f72:	689b      	ldr	r3, [r3, #8]
 8001f74:	494d      	ldr	r1, [pc, #308]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8001f76:	4313      	orrs	r3, r2
 8001f78:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	681b      	ldr	r3, [r3, #0]
 8001f7e:	f003 0301 	and.w	r3, r3, #1
 8001f82:	2b00      	cmp	r3, #0
 8001f84:	d044      	beq.n	8002010 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001f86:	687b      	ldr	r3, [r7, #4]
 8001f88:	685b      	ldr	r3, [r3, #4]
 8001f8a:	2b01      	cmp	r3, #1
 8001f8c:	d107      	bne.n	8001f9e <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001f8e:	4b47      	ldr	r3, [pc, #284]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8001f90:	681b      	ldr	r3, [r3, #0]
 8001f92:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f96:	2b00      	cmp	r3, #0
 8001f98:	d119      	bne.n	8001fce <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001f9a:	2301      	movs	r3, #1
 8001f9c:	e07f      	b.n	800209e <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8001f9e:	687b      	ldr	r3, [r7, #4]
 8001fa0:	685b      	ldr	r3, [r3, #4]
 8001fa2:	2b02      	cmp	r3, #2
 8001fa4:	d003      	beq.n	8001fae <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8001faa:	2b03      	cmp	r3, #3
 8001fac:	d107      	bne.n	8001fbe <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001fae:	4b3f      	ldr	r3, [pc, #252]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8001fb0:	681b      	ldr	r3, [r3, #0]
 8001fb2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001fb6:	2b00      	cmp	r3, #0
 8001fb8:	d109      	bne.n	8001fce <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001fba:	2301      	movs	r3, #1
 8001fbc:	e06f      	b.n	800209e <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001fbe:	4b3b      	ldr	r3, [pc, #236]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8001fc0:	681b      	ldr	r3, [r3, #0]
 8001fc2:	f003 0302 	and.w	r3, r3, #2
 8001fc6:	2b00      	cmp	r3, #0
 8001fc8:	d101      	bne.n	8001fce <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001fca:	2301      	movs	r3, #1
 8001fcc:	e067      	b.n	800209e <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001fce:	4b37      	ldr	r3, [pc, #220]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8001fd0:	689b      	ldr	r3, [r3, #8]
 8001fd2:	f023 0203 	bic.w	r2, r3, #3
 8001fd6:	687b      	ldr	r3, [r7, #4]
 8001fd8:	685b      	ldr	r3, [r3, #4]
 8001fda:	4934      	ldr	r1, [pc, #208]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8001fdc:	4313      	orrs	r3, r2
 8001fde:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8001fe0:	f7fe fe42 	bl	8000c68 <HAL_GetTick>
 8001fe4:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001fe6:	e00a      	b.n	8001ffe <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001fe8:	f7fe fe3e 	bl	8000c68 <HAL_GetTick>
 8001fec:	4602      	mov	r2, r0
 8001fee:	68fb      	ldr	r3, [r7, #12]
 8001ff0:	1ad3      	subs	r3, r2, r3
 8001ff2:	f241 3288 	movw	r2, #5000	; 0x1388
 8001ff6:	4293      	cmp	r3, r2
 8001ff8:	d901      	bls.n	8001ffe <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8001ffa:	2303      	movs	r3, #3
 8001ffc:	e04f      	b.n	800209e <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001ffe:	4b2b      	ldr	r3, [pc, #172]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8002000:	689b      	ldr	r3, [r3, #8]
 8002002:	f003 020c 	and.w	r2, r3, #12
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	685b      	ldr	r3, [r3, #4]
 800200a:	009b      	lsls	r3, r3, #2
 800200c:	429a      	cmp	r2, r3
 800200e:	d1eb      	bne.n	8001fe8 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8002010:	4b25      	ldr	r3, [pc, #148]	; (80020a8 <HAL_RCC_ClockConfig+0x1b8>)
 8002012:	681b      	ldr	r3, [r3, #0]
 8002014:	f003 0307 	and.w	r3, r3, #7
 8002018:	683a      	ldr	r2, [r7, #0]
 800201a:	429a      	cmp	r2, r3
 800201c:	d20c      	bcs.n	8002038 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800201e:	4b22      	ldr	r3, [pc, #136]	; (80020a8 <HAL_RCC_ClockConfig+0x1b8>)
 8002020:	683a      	ldr	r2, [r7, #0]
 8002022:	b2d2      	uxtb	r2, r2
 8002024:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8002026:	4b20      	ldr	r3, [pc, #128]	; (80020a8 <HAL_RCC_ClockConfig+0x1b8>)
 8002028:	681b      	ldr	r3, [r3, #0]
 800202a:	f003 0307 	and.w	r3, r3, #7
 800202e:	683a      	ldr	r2, [r7, #0]
 8002030:	429a      	cmp	r2, r3
 8002032:	d001      	beq.n	8002038 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8002034:	2301      	movs	r3, #1
 8002036:	e032      	b.n	800209e <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	f003 0304 	and.w	r3, r3, #4
 8002040:	2b00      	cmp	r3, #0
 8002042:	d008      	beq.n	8002056 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8002044:	4b19      	ldr	r3, [pc, #100]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8002046:	689b      	ldr	r3, [r3, #8]
 8002048:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	68db      	ldr	r3, [r3, #12]
 8002050:	4916      	ldr	r1, [pc, #88]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8002052:	4313      	orrs	r3, r2
 8002054:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	681b      	ldr	r3, [r3, #0]
 800205a:	f003 0308 	and.w	r3, r3, #8
 800205e:	2b00      	cmp	r3, #0
 8002060:	d009      	beq.n	8002076 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8002062:	4b12      	ldr	r3, [pc, #72]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8002064:	689b      	ldr	r3, [r3, #8]
 8002066:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800206a:	687b      	ldr	r3, [r7, #4]
 800206c:	691b      	ldr	r3, [r3, #16]
 800206e:	00db      	lsls	r3, r3, #3
 8002070:	490e      	ldr	r1, [pc, #56]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 8002072:	4313      	orrs	r3, r2
 8002074:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8002076:	f000 f821 	bl	80020bc <HAL_RCC_GetSysClockFreq>
 800207a:	4602      	mov	r2, r0
 800207c:	4b0b      	ldr	r3, [pc, #44]	; (80020ac <HAL_RCC_ClockConfig+0x1bc>)
 800207e:	689b      	ldr	r3, [r3, #8]
 8002080:	091b      	lsrs	r3, r3, #4
 8002082:	f003 030f 	and.w	r3, r3, #15
 8002086:	490a      	ldr	r1, [pc, #40]	; (80020b0 <HAL_RCC_ClockConfig+0x1c0>)
 8002088:	5ccb      	ldrb	r3, [r1, r3]
 800208a:	fa22 f303 	lsr.w	r3, r2, r3
 800208e:	4a09      	ldr	r2, [pc, #36]	; (80020b4 <HAL_RCC_ClockConfig+0x1c4>)
 8002090:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 8002092:	4b09      	ldr	r3, [pc, #36]	; (80020b8 <HAL_RCC_ClockConfig+0x1c8>)
 8002094:	681b      	ldr	r3, [r3, #0]
 8002096:	4618      	mov	r0, r3
 8002098:	f7fe fda2 	bl	8000be0 <HAL_InitTick>

  return HAL_OK;
 800209c:	2300      	movs	r3, #0
}
 800209e:	4618      	mov	r0, r3
 80020a0:	3710      	adds	r7, #16
 80020a2:	46bd      	mov	sp, r7
 80020a4:	bd80      	pop	{r7, pc}
 80020a6:	bf00      	nop
 80020a8:	40023c00 	.word	0x40023c00
 80020ac:	40023800 	.word	0x40023800
 80020b0:	0800d560 	.word	0x0800d560
 80020b4:	20000000 	.word	0x20000000
 80020b8:	20000004 	.word	0x20000004

080020bc <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80020bc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80020c0:	b094      	sub	sp, #80	; 0x50
 80020c2:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 80020c4:	2300      	movs	r3, #0
 80020c6:	647b      	str	r3, [r7, #68]	; 0x44
 80020c8:	2300      	movs	r3, #0
 80020ca:	64fb      	str	r3, [r7, #76]	; 0x4c
 80020cc:	2300      	movs	r3, #0
 80020ce:	643b      	str	r3, [r7, #64]	; 0x40
  uint32_t sysclockfreq = 0U;
 80020d0:	2300      	movs	r3, #0
 80020d2:	64bb      	str	r3, [r7, #72]	; 0x48

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80020d4:	4b79      	ldr	r3, [pc, #484]	; (80022bc <HAL_RCC_GetSysClockFreq+0x200>)
 80020d6:	689b      	ldr	r3, [r3, #8]
 80020d8:	f003 030c 	and.w	r3, r3, #12
 80020dc:	2b08      	cmp	r3, #8
 80020de:	d00d      	beq.n	80020fc <HAL_RCC_GetSysClockFreq+0x40>
 80020e0:	2b08      	cmp	r3, #8
 80020e2:	f200 80e1 	bhi.w	80022a8 <HAL_RCC_GetSysClockFreq+0x1ec>
 80020e6:	2b00      	cmp	r3, #0
 80020e8:	d002      	beq.n	80020f0 <HAL_RCC_GetSysClockFreq+0x34>
 80020ea:	2b04      	cmp	r3, #4
 80020ec:	d003      	beq.n	80020f6 <HAL_RCC_GetSysClockFreq+0x3a>
 80020ee:	e0db      	b.n	80022a8 <HAL_RCC_GetSysClockFreq+0x1ec>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 80020f0:	4b73      	ldr	r3, [pc, #460]	; (80022c0 <HAL_RCC_GetSysClockFreq+0x204>)
 80020f2:	64bb      	str	r3, [r7, #72]	; 0x48
       break;
 80020f4:	e0db      	b.n	80022ae <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 80020f6:	4b73      	ldr	r3, [pc, #460]	; (80022c4 <HAL_RCC_GetSysClockFreq+0x208>)
 80020f8:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 80020fa:	e0d8      	b.n	80022ae <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80020fc:	4b6f      	ldr	r3, [pc, #444]	; (80022bc <HAL_RCC_GetSysClockFreq+0x200>)
 80020fe:	685b      	ldr	r3, [r3, #4]
 8002100:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002104:	647b      	str	r3, [r7, #68]	; 0x44
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8002106:	4b6d      	ldr	r3, [pc, #436]	; (80022bc <HAL_RCC_GetSysClockFreq+0x200>)
 8002108:	685b      	ldr	r3, [r3, #4]
 800210a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800210e:	2b00      	cmp	r3, #0
 8002110:	d063      	beq.n	80021da <HAL_RCC_GetSysClockFreq+0x11e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8002112:	4b6a      	ldr	r3, [pc, #424]	; (80022bc <HAL_RCC_GetSysClockFreq+0x200>)
 8002114:	685b      	ldr	r3, [r3, #4]
 8002116:	099b      	lsrs	r3, r3, #6
 8002118:	2200      	movs	r2, #0
 800211a:	63bb      	str	r3, [r7, #56]	; 0x38
 800211c:	63fa      	str	r2, [r7, #60]	; 0x3c
 800211e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002120:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002124:	633b      	str	r3, [r7, #48]	; 0x30
 8002126:	2300      	movs	r3, #0
 8002128:	637b      	str	r3, [r7, #52]	; 0x34
 800212a:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 800212e:	4622      	mov	r2, r4
 8002130:	462b      	mov	r3, r5
 8002132:	f04f 0000 	mov.w	r0, #0
 8002136:	f04f 0100 	mov.w	r1, #0
 800213a:	0159      	lsls	r1, r3, #5
 800213c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002140:	0150      	lsls	r0, r2, #5
 8002142:	4602      	mov	r2, r0
 8002144:	460b      	mov	r3, r1
 8002146:	4621      	mov	r1, r4
 8002148:	1a51      	subs	r1, r2, r1
 800214a:	6139      	str	r1, [r7, #16]
 800214c:	4629      	mov	r1, r5
 800214e:	eb63 0301 	sbc.w	r3, r3, r1
 8002152:	617b      	str	r3, [r7, #20]
 8002154:	f04f 0200 	mov.w	r2, #0
 8002158:	f04f 0300 	mov.w	r3, #0
 800215c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8002160:	4659      	mov	r1, fp
 8002162:	018b      	lsls	r3, r1, #6
 8002164:	4651      	mov	r1, sl
 8002166:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800216a:	4651      	mov	r1, sl
 800216c:	018a      	lsls	r2, r1, #6
 800216e:	4651      	mov	r1, sl
 8002170:	ebb2 0801 	subs.w	r8, r2, r1
 8002174:	4659      	mov	r1, fp
 8002176:	eb63 0901 	sbc.w	r9, r3, r1
 800217a:	f04f 0200 	mov.w	r2, #0
 800217e:	f04f 0300 	mov.w	r3, #0
 8002182:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002186:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800218a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800218e:	4690      	mov	r8, r2
 8002190:	4699      	mov	r9, r3
 8002192:	4623      	mov	r3, r4
 8002194:	eb18 0303 	adds.w	r3, r8, r3
 8002198:	60bb      	str	r3, [r7, #8]
 800219a:	462b      	mov	r3, r5
 800219c:	eb49 0303 	adc.w	r3, r9, r3
 80021a0:	60fb      	str	r3, [r7, #12]
 80021a2:	f04f 0200 	mov.w	r2, #0
 80021a6:	f04f 0300 	mov.w	r3, #0
 80021aa:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80021ae:	4629      	mov	r1, r5
 80021b0:	024b      	lsls	r3, r1, #9
 80021b2:	4621      	mov	r1, r4
 80021b4:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80021b8:	4621      	mov	r1, r4
 80021ba:	024a      	lsls	r2, r1, #9
 80021bc:	4610      	mov	r0, r2
 80021be:	4619      	mov	r1, r3
 80021c0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80021c2:	2200      	movs	r2, #0
 80021c4:	62bb      	str	r3, [r7, #40]	; 0x28
 80021c6:	62fa      	str	r2, [r7, #44]	; 0x2c
 80021c8:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 80021cc:	f7fe f804 	bl	80001d8 <__aeabi_uldivmod>
 80021d0:	4602      	mov	r2, r0
 80021d2:	460b      	mov	r3, r1
 80021d4:	4613      	mov	r3, r2
 80021d6:	64fb      	str	r3, [r7, #76]	; 0x4c
 80021d8:	e058      	b.n	800228c <HAL_RCC_GetSysClockFreq+0x1d0>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80021da:	4b38      	ldr	r3, [pc, #224]	; (80022bc <HAL_RCC_GetSysClockFreq+0x200>)
 80021dc:	685b      	ldr	r3, [r3, #4]
 80021de:	099b      	lsrs	r3, r3, #6
 80021e0:	2200      	movs	r2, #0
 80021e2:	4618      	mov	r0, r3
 80021e4:	4611      	mov	r1, r2
 80021e6:	f3c0 0308 	ubfx	r3, r0, #0, #9
 80021ea:	623b      	str	r3, [r7, #32]
 80021ec:	2300      	movs	r3, #0
 80021ee:	627b      	str	r3, [r7, #36]	; 0x24
 80021f0:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 80021f4:	4642      	mov	r2, r8
 80021f6:	464b      	mov	r3, r9
 80021f8:	f04f 0000 	mov.w	r0, #0
 80021fc:	f04f 0100 	mov.w	r1, #0
 8002200:	0159      	lsls	r1, r3, #5
 8002202:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002206:	0150      	lsls	r0, r2, #5
 8002208:	4602      	mov	r2, r0
 800220a:	460b      	mov	r3, r1
 800220c:	4641      	mov	r1, r8
 800220e:	ebb2 0a01 	subs.w	sl, r2, r1
 8002212:	4649      	mov	r1, r9
 8002214:	eb63 0b01 	sbc.w	fp, r3, r1
 8002218:	f04f 0200 	mov.w	r2, #0
 800221c:	f04f 0300 	mov.w	r3, #0
 8002220:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8002224:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8002228:	ea4f 128a 	mov.w	r2, sl, lsl #6
 800222c:	ebb2 040a 	subs.w	r4, r2, sl
 8002230:	eb63 050b 	sbc.w	r5, r3, fp
 8002234:	f04f 0200 	mov.w	r2, #0
 8002238:	f04f 0300 	mov.w	r3, #0
 800223c:	00eb      	lsls	r3, r5, #3
 800223e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002242:	00e2      	lsls	r2, r4, #3
 8002244:	4614      	mov	r4, r2
 8002246:	461d      	mov	r5, r3
 8002248:	4643      	mov	r3, r8
 800224a:	18e3      	adds	r3, r4, r3
 800224c:	603b      	str	r3, [r7, #0]
 800224e:	464b      	mov	r3, r9
 8002250:	eb45 0303 	adc.w	r3, r5, r3
 8002254:	607b      	str	r3, [r7, #4]
 8002256:	f04f 0200 	mov.w	r2, #0
 800225a:	f04f 0300 	mov.w	r3, #0
 800225e:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002262:	4629      	mov	r1, r5
 8002264:	028b      	lsls	r3, r1, #10
 8002266:	4621      	mov	r1, r4
 8002268:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800226c:	4621      	mov	r1, r4
 800226e:	028a      	lsls	r2, r1, #10
 8002270:	4610      	mov	r0, r2
 8002272:	4619      	mov	r1, r3
 8002274:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002276:	2200      	movs	r2, #0
 8002278:	61bb      	str	r3, [r7, #24]
 800227a:	61fa      	str	r2, [r7, #28]
 800227c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8002280:	f7fd ffaa 	bl	80001d8 <__aeabi_uldivmod>
 8002284:	4602      	mov	r2, r0
 8002286:	460b      	mov	r3, r1
 8002288:	4613      	mov	r3, r2
 800228a:	64fb      	str	r3, [r7, #76]	; 0x4c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800228c:	4b0b      	ldr	r3, [pc, #44]	; (80022bc <HAL_RCC_GetSysClockFreq+0x200>)
 800228e:	685b      	ldr	r3, [r3, #4]
 8002290:	0c1b      	lsrs	r3, r3, #16
 8002292:	f003 0303 	and.w	r3, r3, #3
 8002296:	3301      	adds	r3, #1
 8002298:	005b      	lsls	r3, r3, #1
 800229a:	643b      	str	r3, [r7, #64]	; 0x40

      sysclockfreq = pllvco/pllp;
 800229c:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800229e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80022a0:	fbb2 f3f3 	udiv	r3, r2, r3
 80022a4:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 80022a6:	e002      	b.n	80022ae <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 80022a8:	4b05      	ldr	r3, [pc, #20]	; (80022c0 <HAL_RCC_GetSysClockFreq+0x204>)
 80022aa:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 80022ac:	bf00      	nop
    }
  }
  return sysclockfreq;
 80022ae:	6cbb      	ldr	r3, [r7, #72]	; 0x48
}
 80022b0:	4618      	mov	r0, r3
 80022b2:	3750      	adds	r7, #80	; 0x50
 80022b4:	46bd      	mov	sp, r7
 80022b6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80022ba:	bf00      	nop
 80022bc:	40023800 	.word	0x40023800
 80022c0:	00f42400 	.word	0x00f42400
 80022c4:	007a1200 	.word	0x007a1200

080022c8 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 80022c8:	b580      	push	{r7, lr}
 80022ca:	b082      	sub	sp, #8
 80022cc:	af00      	add	r7, sp, #0
 80022ce:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 80022d0:	687b      	ldr	r3, [r7, #4]
 80022d2:	2b00      	cmp	r3, #0
 80022d4:	d101      	bne.n	80022da <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 80022d6:	2301      	movs	r3, #1
 80022d8:	e07b      	b.n	80023d2 <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80022da:	687b      	ldr	r3, [r7, #4]
 80022dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022de:	2b00      	cmp	r3, #0
 80022e0:	d108      	bne.n	80022f4 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80022e2:	687b      	ldr	r3, [r7, #4]
 80022e4:	685b      	ldr	r3, [r3, #4]
 80022e6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80022ea:	d009      	beq.n	8002300 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80022ec:	687b      	ldr	r3, [r7, #4]
 80022ee:	2200      	movs	r2, #0
 80022f0:	61da      	str	r2, [r3, #28]
 80022f2:	e005      	b.n	8002300 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 80022f4:	687b      	ldr	r3, [r7, #4]
 80022f6:	2200      	movs	r2, #0
 80022f8:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 80022fa:	687b      	ldr	r3, [r7, #4]
 80022fc:	2200      	movs	r2, #0
 80022fe:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002300:	687b      	ldr	r3, [r7, #4]
 8002302:	2200      	movs	r2, #0
 8002304:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8002306:	687b      	ldr	r3, [r7, #4]
 8002308:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800230c:	b2db      	uxtb	r3, r3
 800230e:	2b00      	cmp	r3, #0
 8002310:	d106      	bne.n	8002320 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8002312:	687b      	ldr	r3, [r7, #4]
 8002314:	2200      	movs	r2, #0
 8002316:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 800231a:	6878      	ldr	r0, [r7, #4]
 800231c:	f7fe fb90 	bl	8000a40 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8002320:	687b      	ldr	r3, [r7, #4]
 8002322:	2202      	movs	r2, #2
 8002324:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8002328:	687b      	ldr	r3, [r7, #4]
 800232a:	681b      	ldr	r3, [r3, #0]
 800232c:	681a      	ldr	r2, [r3, #0]
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	681b      	ldr	r3, [r3, #0]
 8002332:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002336:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8002338:	687b      	ldr	r3, [r7, #4]
 800233a:	685b      	ldr	r3, [r3, #4]
 800233c:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8002340:	687b      	ldr	r3, [r7, #4]
 8002342:	689b      	ldr	r3, [r3, #8]
 8002344:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8002348:	431a      	orrs	r2, r3
 800234a:	687b      	ldr	r3, [r7, #4]
 800234c:	68db      	ldr	r3, [r3, #12]
 800234e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002352:	431a      	orrs	r2, r3
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	691b      	ldr	r3, [r3, #16]
 8002358:	f003 0302 	and.w	r3, r3, #2
 800235c:	431a      	orrs	r2, r3
 800235e:	687b      	ldr	r3, [r7, #4]
 8002360:	695b      	ldr	r3, [r3, #20]
 8002362:	f003 0301 	and.w	r3, r3, #1
 8002366:	431a      	orrs	r2, r3
 8002368:	687b      	ldr	r3, [r7, #4]
 800236a:	699b      	ldr	r3, [r3, #24]
 800236c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002370:	431a      	orrs	r2, r3
 8002372:	687b      	ldr	r3, [r7, #4]
 8002374:	69db      	ldr	r3, [r3, #28]
 8002376:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800237a:	431a      	orrs	r2, r3
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	6a1b      	ldr	r3, [r3, #32]
 8002380:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002384:	ea42 0103 	orr.w	r1, r2, r3
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800238c:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	681b      	ldr	r3, [r3, #0]
 8002394:	430a      	orrs	r2, r1
 8002396:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8002398:	687b      	ldr	r3, [r7, #4]
 800239a:	699b      	ldr	r3, [r3, #24]
 800239c:	0c1b      	lsrs	r3, r3, #16
 800239e:	f003 0104 	and.w	r1, r3, #4
 80023a2:	687b      	ldr	r3, [r7, #4]
 80023a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023a6:	f003 0210 	and.w	r2, r3, #16
 80023aa:	687b      	ldr	r3, [r7, #4]
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	430a      	orrs	r2, r1
 80023b0:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80023b2:	687b      	ldr	r3, [r7, #4]
 80023b4:	681b      	ldr	r3, [r3, #0]
 80023b6:	69da      	ldr	r2, [r3, #28]
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	681b      	ldr	r3, [r3, #0]
 80023bc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80023c0:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80023c2:	687b      	ldr	r3, [r7, #4]
 80023c4:	2200      	movs	r2, #0
 80023c6:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	2201      	movs	r2, #1
 80023cc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 80023d0:	2300      	movs	r3, #0
}
 80023d2:	4618      	mov	r0, r3
 80023d4:	3708      	adds	r7, #8
 80023d6:	46bd      	mov	sp, r7
 80023d8:	bd80      	pop	{r7, pc}

080023da <TEXT_Callback>:
 80023da:	b530      	push	{r4, r5, lr}
 80023dc:	6845      	ldr	r5, [r0, #4]
 80023de:	4604      	mov	r4, r0
 80023e0:	b085      	sub	sp, #20
 80023e2:	4628      	mov	r0, r5
 80023e4:	4621      	mov	r1, r4
 80023e6:	f007 fd70 	bl	8009eca <WIDGET_HandleActive>
 80023ea:	2800      	cmp	r0, #0
 80023ec:	d056      	beq.n	800249c <TEXT_Callback+0xc2>
 80023ee:	6823      	ldr	r3, [r4, #0]
 80023f0:	2b0f      	cmp	r3, #15
 80023f2:	d01e      	beq.n	8002432 <TEXT_Callback+0x58>
 80023f4:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 80023f8:	d00e      	beq.n	8002418 <TEXT_Callback+0x3e>
 80023fa:	2b0b      	cmp	r3, #11
 80023fc:	d14b      	bne.n	8002496 <TEXT_Callback+0xbc>
 80023fe:	4628      	mov	r0, r5
 8002400:	f007 fa20 	bl	8009844 <GUI_ALLOC_LockH>
 8002404:	ad04      	add	r5, sp, #16
 8002406:	f845 0d08 	str.w	r0, [r5, #-8]!
 800240a:	3044      	adds	r0, #68	; 0x44
 800240c:	f007 fbe2 	bl	8009bd4 <GUI_ALLOC_FreePtr>
 8002410:	4628      	mov	r0, r5
 8002412:	f007 fa25 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002416:	e03e      	b.n	8002496 <TEXT_Callback+0xbc>
 8002418:	68e3      	ldr	r3, [r4, #12]
 800241a:	b12b      	cbz	r3, 8002428 <TEXT_Callback+0x4e>
 800241c:	7a1b      	ldrb	r3, [r3, #8]
 800241e:	2b00      	cmp	r3, #0
 8002420:	bf0c      	ite	eq
 8002422:	2102      	moveq	r1, #2
 8002424:	2101      	movne	r1, #1
 8002426:	e000      	b.n	800242a <TEXT_Callback+0x50>
 8002428:	2103      	movs	r1, #3
 800242a:	4628      	mov	r0, r5
 800242c:	f002 f969 	bl	8004702 <WM_NotifyParent>
 8002430:	e031      	b.n	8002496 <TEXT_Callback+0xbc>
 8002432:	4628      	mov	r0, r5
 8002434:	f007 fa06 	bl	8009844 <GUI_ALLOC_LockH>
 8002438:	9000      	str	r0, [sp, #0]
 800243a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800243c:	f004 fffc 	bl	8007438 <LCD_SetColor>
 8002440:	9b00      	ldr	r3, [sp, #0]
 8002442:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002444:	f006 fdbc 	bl	8008fc0 <GUI_SetFont>
 8002448:	4628      	mov	r0, r5
 800244a:	f001 fd15 	bl	8003e78 <WM_GetHasTrans>
 800244e:	b928      	cbnz	r0, 800245c <TEXT_Callback+0x82>
 8002450:	9b00      	ldr	r3, [sp, #0]
 8002452:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8002454:	f004 ffe8 	bl	8007428 <LCD_SetBkColor>
 8002458:	f006 fc3c 	bl	8008cd4 <GUI_Clear>
 800245c:	9b00      	ldr	r3, [sp, #0]
 800245e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002460:	b1ab      	cbz	r3, 800248e <TEXT_Callback+0xb4>
 8002462:	2002      	movs	r0, #2
 8002464:	f006 fdc8 	bl	8008ff8 <GUI_SetTextMode>
 8002468:	a802      	add	r0, sp, #8
 800246a:	f001 fecd 	bl	8004208 <WM_GetClientRect>
 800246e:	9b00      	ldr	r3, [sp, #0]
 8002470:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8002472:	f007 f9e7 	bl	8009844 <GUI_ALLOC_LockH>
 8002476:	9b00      	ldr	r3, [sp, #0]
 8002478:	9001      	str	r0, [sp, #4]
 800247a:	f9b3 2048 	ldrsh.w	r2, [r3, #72]	; 0x48
 800247e:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8002482:	a902      	add	r1, sp, #8
 8002484:	f006 fab7 	bl	80089f6 <GUI_DispStringInRectWrap>
 8002488:	a801      	add	r0, sp, #4
 800248a:	f007 f9e9 	bl	8009860 <GUI_ALLOC_UnlockH>
 800248e:	4668      	mov	r0, sp
 8002490:	f007 f9e6 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002494:	e002      	b.n	800249c <TEXT_Callback+0xc2>
 8002496:	4620      	mov	r0, r4
 8002498:	f003 fb54 	bl	8005b44 <WM_DefaultProc>
 800249c:	b005      	add	sp, #20
 800249e:	bd30      	pop	{r4, r5, pc}

080024a0 <TEXT_CreateUser>:
 80024a0:	b570      	push	{r4, r5, r6, lr}
 80024a2:	b086      	sub	sp, #24
 80024a4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80024a6:	9500      	str	r5, [sp, #0]
 80024a8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80024aa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80024ac:	f045 0501 	orr.w	r5, r5, #1
 80024b0:	9501      	str	r5, [sp, #4]
 80024b2:	4d1a      	ldr	r5, [pc, #104]	; (800251c <TEXT_CreateUser+0x7c>)
 80024b4:	9502      	str	r5, [sp, #8]
 80024b6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80024b8:	3520      	adds	r5, #32
 80024ba:	9503      	str	r5, [sp, #12]
 80024bc:	f002 ff42 	bl	8005344 <WM_CreateWindowAsChild>
 80024c0:	4605      	mov	r5, r0
 80024c2:	b340      	cbz	r0, 8002516 <TEXT_CreateUser+0x76>
 80024c4:	b18c      	cbz	r4, 80024ea <TEXT_CreateUser+0x4a>
 80024c6:	4620      	mov	r0, r4
 80024c8:	f7fd fe7e 	bl	80001c8 <strlen>
 80024cc:	3001      	adds	r0, #1
 80024ce:	f007 fbab 	bl	8009c28 <GUI_ALLOC_AllocZero>
 80024d2:	4606      	mov	r6, r0
 80024d4:	b150      	cbz	r0, 80024ec <TEXT_CreateUser+0x4c>
 80024d6:	f007 f9b5 	bl	8009844 <GUI_ALLOC_LockH>
 80024da:	4621      	mov	r1, r4
 80024dc:	9005      	str	r0, [sp, #20]
 80024de:	f00a ff7b 	bl	800d3d8 <strcpy>
 80024e2:	a805      	add	r0, sp, #20
 80024e4:	f007 f9bc 	bl	8009860 <GUI_ALLOC_UnlockH>
 80024e8:	e000      	b.n	80024ec <TEXT_CreateUser+0x4c>
 80024ea:	4626      	mov	r6, r4
 80024ec:	4628      	mov	r0, r5
 80024ee:	f007 f9a9 	bl	8009844 <GUI_ALLOC_LockH>
 80024f2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80024f4:	9005      	str	r0, [sp, #20]
 80024f6:	2200      	movs	r2, #0
 80024f8:	f007 fca2 	bl	8009e40 <WIDGET__Init>
 80024fc:	9c05      	ldr	r4, [sp, #20]
 80024fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002500:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 8002504:	4b06      	ldr	r3, [pc, #24]	; (8002520 <TEXT_CreateUser+0x80>)
 8002506:	6466      	str	r6, [r4, #68]	; 0x44
 8002508:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800250a:	3434      	adds	r4, #52	; 0x34
 800250c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8002510:	a805      	add	r0, sp, #20
 8002512:	f007 f9a5 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002516:	4628      	mov	r0, r5
 8002518:	b006      	add	sp, #24
 800251a:	bd70      	pop	{r4, r5, r6, pc}
 800251c:	080023db 	.word	0x080023db
 8002520:	2000000c 	.word	0x2000000c

08002524 <TEXT_CreateIndirect>:
 8002524:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002526:	b087      	sub	sp, #28
 8002528:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 800252c:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8002530:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8002534:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8002538:	9100      	str	r1, [sp, #0]
 800253a:	2102      	movs	r1, #2
 800253c:	9101      	str	r1, [sp, #4]
 800253e:	8a41      	ldrh	r1, [r0, #18]
 8002540:	9102      	str	r1, [sp, #8]
 8002542:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8002546:	9103      	str	r1, [sp, #12]
 8002548:	6844      	ldr	r4, [r0, #4]
 800254a:	9404      	str	r4, [sp, #16]
 800254c:	6984      	ldr	r4, [r0, #24]
 800254e:	9405      	str	r4, [sp, #20]
 8002550:	eb0e 0002 	add.w	r0, lr, r2
 8002554:	18f9      	adds	r1, r7, r3
 8002556:	4632      	mov	r2, r6
 8002558:	462b      	mov	r3, r5
 800255a:	f7ff ffa1 	bl	80024a0 <TEXT_CreateUser>
 800255e:	b007      	add	sp, #28
 8002560:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002562 <TEXT_SetFont>:
 8002562:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002564:	460c      	mov	r4, r1
 8002566:	4605      	mov	r5, r0
 8002568:	b160      	cbz	r0, 8002584 <TEXT_SetFont+0x22>
 800256a:	f007 f96b 	bl	8009844 <GUI_ALLOC_LockH>
 800256e:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8002570:	9001      	str	r0, [sp, #4]
 8002572:	42a2      	cmp	r2, r4
 8002574:	d003      	beq.n	800257e <TEXT_SetFont+0x1c>
 8002576:	6344      	str	r4, [r0, #52]	; 0x34
 8002578:	4628      	mov	r0, r5
 800257a:	f002 feb5 	bl	80052e8 <WM_InvalidateWindow>
 800257e:	a801      	add	r0, sp, #4
 8002580:	f007 f96e 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002584:	b003      	add	sp, #12
 8002586:	bd30      	pop	{r4, r5, pc}

08002588 <TEXT_SetText>:
 8002588:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800258a:	460c      	mov	r4, r1
 800258c:	4605      	mov	r5, r0
 800258e:	b300      	cbz	r0, 80025d2 <TEXT_SetText+0x4a>
 8002590:	f007 f958 	bl	8009844 <GUI_ALLOC_LockH>
 8002594:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8002596:	9000      	str	r0, [sp, #0]
 8002598:	4668      	mov	r0, sp
 800259a:	9301      	str	r3, [sp, #4]
 800259c:	f007 f960 	bl	8009860 <GUI_ALLOC_UnlockH>
 80025a0:	4621      	mov	r1, r4
 80025a2:	a801      	add	r0, sp, #4
 80025a4:	f005 f816 	bl	80075d4 <GUI__SetText>
 80025a8:	f1d0 0401 	rsbs	r4, r0, #1
 80025ac:	bf38      	it	cc
 80025ae:	2400      	movcc	r4, #0
 80025b0:	b984      	cbnz	r4, 80025d4 <TEXT_SetText+0x4c>
 80025b2:	4628      	mov	r0, r5
 80025b4:	f007 f946 	bl	8009844 <GUI_ALLOC_LockH>
 80025b8:	9a01      	ldr	r2, [sp, #4]
 80025ba:	6c41      	ldr	r1, [r0, #68]	; 0x44
 80025bc:	9000      	str	r0, [sp, #0]
 80025be:	4291      	cmp	r1, r2
 80025c0:	bf18      	it	ne
 80025c2:	6442      	strne	r2, [r0, #68]	; 0x44
 80025c4:	4668      	mov	r0, sp
 80025c6:	f007 f94b 	bl	8009860 <GUI_ALLOC_UnlockH>
 80025ca:	4628      	mov	r0, r5
 80025cc:	f002 fe8c 	bl	80052e8 <WM_InvalidateWindow>
 80025d0:	e000      	b.n	80025d4 <TEXT_SetText+0x4c>
 80025d2:	2401      	movs	r4, #1
 80025d4:	4620      	mov	r0, r4
 80025d6:	b003      	add	sp, #12
 80025d8:	bd30      	pop	{r4, r5, pc}

080025da <PROGBAR_Callback>:
 80025da:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80025dc:	6845      	ldr	r5, [r0, #4]
 80025de:	4604      	mov	r4, r0
 80025e0:	4621      	mov	r1, r4
 80025e2:	4628      	mov	r0, r5
 80025e4:	f007 fc71 	bl	8009eca <WIDGET_HandleActive>
 80025e8:	b310      	cbz	r0, 8002630 <PROGBAR_Callback+0x56>
 80025ea:	6823      	ldr	r3, [r4, #0]
 80025ec:	2b0b      	cmp	r3, #11
 80025ee:	d010      	beq.n	8002612 <PROGBAR_Callback+0x38>
 80025f0:	2b0f      	cmp	r3, #15
 80025f2:	d11a      	bne.n	800262a <PROGBAR_Callback+0x50>
 80025f4:	4628      	mov	r0, r5
 80025f6:	f007 f925 	bl	8009844 <GUI_ALLOC_LockH>
 80025fa:	ab02      	add	r3, sp, #8
 80025fc:	f843 0d04 	str.w	r0, [r3, #-4]!
 8002600:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8002602:	6814      	ldr	r4, [r2, #0]
 8002604:	4618      	mov	r0, r3
 8002606:	f007 f92b 	bl	8009860 <GUI_ALLOC_UnlockH>
 800260a:	b18c      	cbz	r4, 8002630 <PROGBAR_Callback+0x56>
 800260c:	4628      	mov	r0, r5
 800260e:	47a0      	blx	r4
 8002610:	e00e      	b.n	8002630 <PROGBAR_Callback+0x56>
 8002612:	4628      	mov	r0, r5
 8002614:	f007 f916 	bl	8009844 <GUI_ALLOC_LockH>
 8002618:	ad02      	add	r5, sp, #8
 800261a:	f845 0d04 	str.w	r0, [r5, #-4]!
 800261e:	3038      	adds	r0, #56	; 0x38
 8002620:	f007 fad8 	bl	8009bd4 <GUI_ALLOC_FreePtr>
 8002624:	4628      	mov	r0, r5
 8002626:	f007 f91b 	bl	8009860 <GUI_ALLOC_UnlockH>
 800262a:	4620      	mov	r0, r4
 800262c:	f003 fa8a 	bl	8005b44 <WM_DefaultProc>
 8002630:	b003      	add	sp, #12
 8002632:	bd30      	pop	{r4, r5, pc}

08002634 <_SetValue>:
 8002634:	b513      	push	{r0, r1, r4, lr}
 8002636:	ab02      	add	r3, sp, #8
 8002638:	6342      	str	r2, [r0, #52]	; 0x34
 800263a:	f843 1d04 	str.w	r1, [r3, #-4]!
 800263e:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8002640:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002642:	1a52      	subs	r2, r2, r1
 8002644:	2464      	movs	r4, #100	; 0x64
 8002646:	4362      	muls	r2, r4
 8002648:	1a40      	subs	r0, r0, r1
 800264a:	fb92 f0f0 	sdiv	r0, r2, r0
 800264e:	4619      	mov	r1, r3
 8002650:	f005 fa2c 	bl	8007aac <GUI_AddDecMin>
 8002654:	9b01      	ldr	r3, [sp, #4]
 8002656:	1c5a      	adds	r2, r3, #1
 8002658:	9201      	str	r2, [sp, #4]
 800265a:	2225      	movs	r2, #37	; 0x25
 800265c:	701a      	strb	r2, [r3, #0]
 800265e:	9b01      	ldr	r3, [sp, #4]
 8002660:	2200      	movs	r2, #0
 8002662:	701a      	strb	r2, [r3, #0]
 8002664:	b002      	add	sp, #8
 8002666:	bd10      	pop	{r4, pc}

08002668 <PROGBAR__GetTextLocked>:
 8002668:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800266a:	f007 b8eb 	b.w	8009844 <GUI_ALLOC_LockH>

0800266e <PROGBAR__GetTextRect>:
 800266e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002672:	f9b0 3000 	ldrsh.w	r3, [r0]
 8002676:	f9b0 7004 	ldrsh.w	r7, [r0, #4]
 800267a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800267e:	1aff      	subs	r7, r7, r3
 8002680:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8002684:	4604      	mov	r4, r0
 8002686:	4610      	mov	r0, r2
 8002688:	ebc3 0808 	rsb	r8, r3, r8
 800268c:	460d      	mov	r5, r1
 800268e:	f006 fa51 	bl	8008b34 <GUI_GetStringDistX>
 8002692:	4606      	mov	r6, r0
 8002694:	f006 fbc2 	bl	8008e1c <GUI_GetFontSizeY>
 8002698:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 800269c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800269e:	f003 0303 	and.w	r3, r3, #3
 80026a2:	2b01      	cmp	r3, #1
 80026a4:	f107 0701 	add.w	r7, r7, #1
 80026a8:	f108 0801 	add.w	r8, r8, #1
 80026ac:	6812      	ldr	r2, [r2, #0]
 80026ae:	d006      	beq.n	80026be <PROGBAR__GetTextRect+0x50>
 80026b0:	2b02      	cmp	r3, #2
 80026b2:	d109      	bne.n	80026c8 <PROGBAR__GetTextRect+0x5a>
 80026b4:	1bbf      	subs	r7, r7, r6
 80026b6:	fb97 f3f3 	sdiv	r3, r7, r3
 80026ba:	802b      	strh	r3, [r5, #0]
 80026bc:	e005      	b.n	80026ca <PROGBAR__GetTextRect+0x5c>
 80026be:	43d2      	mvns	r2, r2
 80026c0:	4417      	add	r7, r2
 80026c2:	1bbf      	subs	r7, r7, r6
 80026c4:	802f      	strh	r7, [r5, #0]
 80026c6:	e000      	b.n	80026ca <PROGBAR__GetTextRect+0x5c>
 80026c8:	802a      	strh	r2, [r5, #0]
 80026ca:	8fa2      	ldrh	r2, [r4, #60]	; 0x3c
 80026cc:	882b      	ldrh	r3, [r5, #0]
 80026ce:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 80026d0:	441a      	add	r2, r3
 80026d2:	ebc0 0808 	rsb	r8, r0, r8
 80026d6:	2302      	movs	r3, #2
 80026d8:	fb98 f3f3 	sdiv	r3, r8, r3
 80026dc:	b292      	uxth	r2, r2
 80026de:	440b      	add	r3, r1
 80026e0:	b29b      	uxth	r3, r3
 80026e2:	802a      	strh	r2, [r5, #0]
 80026e4:	3801      	subs	r0, #1
 80026e6:	3a01      	subs	r2, #1
 80026e8:	806b      	strh	r3, [r5, #2]
 80026ea:	4416      	add	r6, r2
 80026ec:	4403      	add	r3, r0
 80026ee:	80ae      	strh	r6, [r5, #4]
 80026f0:	80eb      	strh	r3, [r5, #6]
 80026f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080026f6 <PROGBAR__Value2Pos>:
 80026f6:	b570      	push	{r4, r5, r6, lr}
 80026f8:	f890 3068 	ldrb.w	r3, [r0, #104]	; 0x68
 80026fc:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80026fe:	f013 0601 	ands.w	r6, r3, #1
 8002702:	bf15      	itete	ne
 8002704:	f9b0 3002 	ldrshne.w	r3, [r0, #2]
 8002708:	f9b0 3000 	ldrsheq.w	r3, [r0]
 800270c:	f9b0 5006 	ldrshne.w	r5, [r0, #6]
 8002710:	f9b0 5004 	ldrsheq.w	r5, [r0, #4]
 8002714:	6814      	ldr	r4, [r2, #0]
 8002716:	6c82      	ldr	r2, [r0, #72]	; 0x48
 8002718:	1aed      	subs	r5, r5, r3
 800271a:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800271c:	3501      	adds	r5, #1
 800271e:	4299      	cmp	r1, r3
 8002720:	bfb8      	it	lt
 8002722:	4619      	movlt	r1, r3
 8002724:	4291      	cmp	r1, r2
 8002726:	bfa8      	it	ge
 8002728:	4611      	movge	r1, r2
 800272a:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800272e:	b10e      	cbz	r6, 8002734 <PROGBAR__Value2Pos+0x3e>
 8002730:	1a51      	subs	r1, r2, r1
 8002732:	e000      	b.n	8002736 <PROGBAR__Value2Pos+0x40>
 8002734:	1ac9      	subs	r1, r1, r3
 8002736:	4369      	muls	r1, r5
 8002738:	1ad3      	subs	r3, r2, r3
 800273a:	fb91 f0f3 	sdiv	r0, r1, r3
 800273e:	4420      	add	r0, r4
 8002740:	bd70      	pop	{r4, r5, r6, pc}
	...

08002744 <PROGBAR_CreateUser>:
 8002744:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002748:	b087      	sub	sp, #28
 800274a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800274c:	9400      	str	r4, [sp, #0]
 800274e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8002750:	9401      	str	r4, [sp, #4]
 8002752:	4c27      	ldr	r4, [pc, #156]	; (80027f0 <PROGBAR_CreateUser+0xac>)
 8002754:	9402      	str	r4, [sp, #8]
 8002756:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8002758:	3440      	adds	r4, #64	; 0x40
 800275a:	9403      	str	r4, [sp, #12]
 800275c:	f002 fdf2 	bl	8005344 <WM_CreateWindowAsChild>
 8002760:	4607      	mov	r7, r0
 8002762:	2800      	cmp	r0, #0
 8002764:	d040      	beq.n	80027e8 <PROGBAR_CreateUser+0xa4>
 8002766:	2005      	movs	r0, #5
 8002768:	f007 fa5e 	bl	8009c28 <GUI_ALLOC_AllocZero>
 800276c:	4680      	mov	r8, r0
 800276e:	2800      	cmp	r0, #0
 8002770:	d03a      	beq.n	80027e8 <PROGBAR_CreateUser+0xa4>
 8002772:	4638      	mov	r0, r7
 8002774:	f007 f866 	bl	8009844 <GUI_ALLOC_LockH>
 8002778:	2200      	movs	r2, #0
 800277a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800277c:	9004      	str	r0, [sp, #16]
 800277e:	f8df 907c 	ldr.w	r9, [pc, #124]	; 80027fc <PROGBAR_CreateUser+0xb8>
 8002782:	4d1c      	ldr	r5, [pc, #112]	; (80027f4 <PROGBAR_CreateUser+0xb0>)
 8002784:	f007 fb5c 	bl	8009e40 <WIDGET__Init>
 8002788:	4638      	mov	r0, r7
 800278a:	491b      	ldr	r1, [pc, #108]	; (80027f8 <PROGBAR_CreateUser+0xb4>)
 800278c:	f007 fc8a 	bl	800a0a4 <WIDGET_SetEffect>
 8002790:	9e04      	ldr	r6, [sp, #16]
 8002792:	f8d9 3000 	ldr.w	r3, [r9]
 8002796:	6673      	str	r3, [r6, #100]	; 0x64
 8002798:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800279a:	f106 044c 	add.w	r4, r6, #76	; 0x4c
 800279e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80027a0:	e895 0003 	ldmia.w	r5, {r0, r1}
 80027a4:	2302      	movs	r3, #2
 80027a6:	e884 0003 	stmia.w	r4, {r0, r1}
 80027aa:	f8a6 3040 	strh.w	r3, [r6, #64]	; 0x40
 80027ae:	2364      	movs	r3, #100	; 0x64
 80027b0:	64b3      	str	r3, [r6, #72]	; 0x48
 80027b2:	2400      	movs	r4, #0
 80027b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80027b6:	f886 3068 	strb.w	r3, [r6, #104]	; 0x68
 80027ba:	6474      	str	r4, [r6, #68]	; 0x44
 80027bc:	f8c6 8038 	str.w	r8, [r6, #56]	; 0x38
 80027c0:	4640      	mov	r0, r8
 80027c2:	f007 f83f 	bl	8009844 <GUI_ALLOC_LockH>
 80027c6:	4622      	mov	r2, r4
 80027c8:	4601      	mov	r1, r0
 80027ca:	9005      	str	r0, [sp, #20]
 80027cc:	9804      	ldr	r0, [sp, #16]
 80027ce:	f7ff ff31 	bl	8002634 <_SetValue>
 80027d2:	a805      	add	r0, sp, #20
 80027d4:	f007 f844 	bl	8009860 <GUI_ALLOC_UnlockH>
 80027d8:	a804      	add	r0, sp, #16
 80027da:	f007 f841 	bl	8009860 <GUI_ALLOC_UnlockH>
 80027de:	f8d9 3000 	ldr.w	r3, [r9]
 80027e2:	4638      	mov	r0, r7
 80027e4:	685b      	ldr	r3, [r3, #4]
 80027e6:	4798      	blx	r3
 80027e8:	4638      	mov	r0, r7
 80027ea:	b007      	add	sp, #28
 80027ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80027f0:	080025db 	.word	0x080025db
 80027f4:	20000020 	.word	0x20000020
 80027f8:	0800f6cc 	.word	0x0800f6cc
 80027fc:	2000001c 	.word	0x2000001c

08002800 <PROGBAR_CreateIndirect>:
 8002800:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002802:	b087      	sub	sp, #28
 8002804:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8002808:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 800280c:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8002810:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8002814:	9100      	str	r1, [sp, #0]
 8002816:	2100      	movs	r1, #0
 8002818:	9101      	str	r1, [sp, #4]
 800281a:	8a41      	ldrh	r1, [r0, #18]
 800281c:	9102      	str	r1, [sp, #8]
 800281e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8002822:	9103      	str	r1, [sp, #12]
 8002824:	6984      	ldr	r4, [r0, #24]
 8002826:	9404      	str	r4, [sp, #16]
 8002828:	eb0e 0002 	add.w	r0, lr, r2
 800282c:	18f9      	adds	r1, r7, r3
 800282e:	4632      	mov	r2, r6
 8002830:	462b      	mov	r3, r5
 8002832:	f7ff ff87 	bl	8002744 <PROGBAR_CreateUser>
 8002836:	b007      	add	sp, #28
 8002838:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800283a <PROGBAR_SetValue>:
 800283a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800283e:	460d      	mov	r5, r1
 8002840:	b087      	sub	sp, #28
 8002842:	4680      	mov	r8, r0
 8002844:	2800      	cmp	r0, #0
 8002846:	f000 80a0 	beq.w	800298a <PROGBAR_SetValue+0x150>
 800284a:	f006 fffb 	bl	8009844 <GUI_ALLOC_LockH>
 800284e:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8002850:	6b46      	ldr	r6, [r0, #52]	; 0x34
 8002852:	429d      	cmp	r5, r3
 8002854:	bfb8      	it	lt
 8002856:	461d      	movlt	r5, r3
 8002858:	6c83      	ldr	r3, [r0, #72]	; 0x48
 800285a:	af06      	add	r7, sp, #24
 800285c:	429d      	cmp	r5, r3
 800285e:	bfa8      	it	ge
 8002860:	461d      	movge	r5, r3
 8002862:	42ae      	cmp	r6, r5
 8002864:	4604      	mov	r4, r0
 8002866:	f847 0d18 	str.w	r0, [r7, #-24]!
 800286a:	f000 808b 	beq.w	8002984 <PROGBAR_SetValue+0x14a>
 800286e:	f890 9068 	ldrb.w	r9, [r0, #104]	; 0x68
 8002872:	f019 0f01 	tst.w	r9, #1
 8002876:	d01c      	beq.n	80028b2 <PROGBAR_SetValue+0x78>
 8002878:	42b5      	cmp	r5, r6
 800287a:	da07      	bge.n	800288c <PROGBAR_SetValue+0x52>
 800287c:	4629      	mov	r1, r5
 800287e:	f7ff ff3a 	bl	80026f6 <PROGBAR__Value2Pos>
 8002882:	4631      	mov	r1, r6
 8002884:	f8ad 000e 	strh.w	r0, [sp, #14]
 8002888:	4620      	mov	r0, r4
 800288a:	e006      	b.n	800289a <PROGBAR_SetValue+0x60>
 800288c:	4631      	mov	r1, r6
 800288e:	f7ff ff32 	bl	80026f6 <PROGBAR__Value2Pos>
 8002892:	4629      	mov	r1, r5
 8002894:	f8ad 000e 	strh.w	r0, [sp, #14]
 8002898:	4620      	mov	r0, r4
 800289a:	f7ff ff2c 	bl	80026f6 <PROGBAR__Value2Pos>
 800289e:	2300      	movs	r3, #0
 80028a0:	f8ad 3008 	strh.w	r3, [sp, #8]
 80028a4:	f640 73ff 	movw	r3, #4095	; 0xfff
 80028a8:	f8ad 000a 	strh.w	r0, [sp, #10]
 80028ac:	f8ad 300c 	strh.w	r3, [sp, #12]
 80028b0:	e063      	b.n	800297a <PROGBAR_SetValue+0x140>
 80028b2:	42b5      	cmp	r5, r6
 80028b4:	da07      	bge.n	80028c6 <PROGBAR_SetValue+0x8c>
 80028b6:	4629      	mov	r1, r5
 80028b8:	f7ff ff1d 	bl	80026f6 <PROGBAR__Value2Pos>
 80028bc:	4631      	mov	r1, r6
 80028be:	f8ad 0008 	strh.w	r0, [sp, #8]
 80028c2:	4620      	mov	r0, r4
 80028c4:	e006      	b.n	80028d4 <PROGBAR_SetValue+0x9a>
 80028c6:	4631      	mov	r1, r6
 80028c8:	f7ff ff15 	bl	80026f6 <PROGBAR__Value2Pos>
 80028cc:	4629      	mov	r1, r5
 80028ce:	f8ad 0008 	strh.w	r0, [sp, #8]
 80028d2:	4620      	mov	r0, r4
 80028d4:	f7ff ff0f 	bl	80026f6 <PROGBAR__Value2Pos>
 80028d8:	2300      	movs	r3, #0
 80028da:	f8ad 300a 	strh.w	r3, [sp, #10]
 80028de:	f009 0202 	and.w	r2, r9, #2
 80028e2:	f640 73ff 	movw	r3, #4095	; 0xfff
 80028e6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80028ea:	f8ad 000c 	strh.w	r0, [sp, #12]
 80028ee:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 80028f2:	2a00      	cmp	r2, #0
 80028f4:	d141      	bne.n	800297a <PROGBAR_SetValue+0x140>
 80028f6:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80028f8:	9304      	str	r3, [sp, #16]
 80028fa:	9305      	str	r3, [sp, #20]
 80028fc:	f006 ffc8 	bl	8009890 <GUI_ALLOC_GetSize>
 8002900:	2804      	cmp	r0, #4
 8002902:	dc0e      	bgt.n	8002922 <PROGBAR_SetValue+0xe8>
 8002904:	9b00      	ldr	r3, [sp, #0]
 8002906:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8002908:	4668      	mov	r0, sp
 800290a:	f006 ffa9 	bl	8009860 <GUI_ALLOC_UnlockH>
 800290e:	4620      	mov	r0, r4
 8002910:	2105      	movs	r1, #5
 8002912:	f007 f9a1 	bl	8009c58 <GUI_ALLOC_Realloc>
 8002916:	4604      	mov	r4, r0
 8002918:	4640      	mov	r0, r8
 800291a:	f006 ff93 	bl	8009844 <GUI_ALLOC_LockH>
 800291e:	9000      	str	r0, [sp, #0]
 8002920:	6384      	str	r4, [r0, #56]	; 0x38
 8002922:	9800      	ldr	r0, [sp, #0]
 8002924:	f7ff fea0 	bl	8002668 <PROGBAR__GetTextLocked>
 8002928:	9001      	str	r0, [sp, #4]
 800292a:	b338      	cbz	r0, 800297c <PROGBAR_SetValue+0x142>
 800292c:	9b00      	ldr	r3, [sp, #0]
 800292e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002930:	f006 fb46 	bl	8008fc0 <GUI_SetFont>
 8002934:	a904      	add	r1, sp, #16
 8002936:	4606      	mov	r6, r0
 8002938:	9a01      	ldr	r2, [sp, #4]
 800293a:	9800      	ldr	r0, [sp, #0]
 800293c:	f7ff fe97 	bl	800266e <PROGBAR__GetTextRect>
 8002940:	a802      	add	r0, sp, #8
 8002942:	aa04      	add	r2, sp, #16
 8002944:	ac06      	add	r4, sp, #24
 8002946:	4601      	mov	r1, r0
 8002948:	f006 fa82 	bl	8008e50 <GUI_MergeRect>
 800294c:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8002950:	462a      	mov	r2, r5
 8002952:	f7ff fe6f 	bl	8002634 <_SetValue>
 8002956:	f854 2d14 	ldr.w	r2, [r4, #-20]!
 800295a:	9800      	ldr	r0, [sp, #0]
 800295c:	a904      	add	r1, sp, #16
 800295e:	f7ff fe86 	bl	800266e <PROGBAR__GetTextRect>
 8002962:	a802      	add	r0, sp, #8
 8002964:	4601      	mov	r1, r0
 8002966:	aa04      	add	r2, sp, #16
 8002968:	f006 fa72 	bl	8008e50 <GUI_MergeRect>
 800296c:	4630      	mov	r0, r6
 800296e:	f006 fb27 	bl	8008fc0 <GUI_SetFont>
 8002972:	4620      	mov	r0, r4
 8002974:	f006 ff74 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002978:	e000      	b.n	800297c <PROGBAR_SetValue+0x142>
 800297a:	6365      	str	r5, [r4, #52]	; 0x34
 800297c:	4640      	mov	r0, r8
 800297e:	a902      	add	r1, sp, #8
 8002980:	f002 fc76 	bl	8005270 <WM_InvalidateRect>
 8002984:	4668      	mov	r0, sp
 8002986:	f006 ff6b 	bl	8009860 <GUI_ALLOC_UnlockH>
 800298a:	b007      	add	sp, #28
 800298c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08002990 <_OnDelete>:
 8002990:	b513      	push	{r0, r1, r4, lr}
 8002992:	4604      	mov	r4, r0
 8002994:	f006 ff56 	bl	8009844 <GUI_ALLOC_LockH>
 8002998:	9001      	str	r0, [sp, #4]
 800299a:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800299c:	b120      	cbz	r0, 80029a8 <_OnDelete+0x18>
 800299e:	f006 ff83 	bl	80098a8 <GUI_ALLOC_Free>
 80029a2:	9b01      	ldr	r3, [sp, #4]
 80029a4:	2200      	movs	r2, #0
 80029a6:	625a      	str	r2, [r3, #36]	; 0x24
 80029a8:	a801      	add	r0, sp, #4
 80029aa:	f006 ff59 	bl	8009860 <GUI_ALLOC_UnlockH>
 80029ae:	4620      	mov	r0, r4
 80029b0:	f006 ff7a 	bl	80098a8 <GUI_ALLOC_Free>
 80029b4:	b002      	add	sp, #8
 80029b6:	bd10      	pop	{r4, pc}

080029b8 <_OnPaint>:
 80029b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80029bc:	b08b      	sub	sp, #44	; 0x2c
 80029be:	f006 ff41 	bl	8009844 <GUI_ALLOC_LockH>
 80029c2:	9007      	str	r0, [sp, #28]
 80029c4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80029c6:	2800      	cmp	r0, #0
 80029c8:	d060      	beq.n	8002a8c <_OnPaint+0xd4>
 80029ca:	f006 ff3b 	bl	8009844 <GUI_ALLOC_LockH>
 80029ce:	9b07      	ldr	r3, [sp, #28]
 80029d0:	9005      	str	r0, [sp, #20]
 80029d2:	4606      	mov	r6, r0
 80029d4:	6898      	ldr	r0, [r3, #8]
 80029d6:	f006 ff35 	bl	8009844 <GUI_ALLOC_LockH>
 80029da:	9b07      	ldr	r3, [sp, #28]
 80029dc:	f8d0 8054 	ldr.w	r8, [r0, #84]	; 0x54
 80029e0:	6e05      	ldr	r5, [r0, #96]	; 0x60
 80029e2:	6d87      	ldr	r7, [r0, #88]	; 0x58
 80029e4:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 80029e6:	9006      	str	r0, [sp, #24]
 80029e8:	a908      	add	r1, sp, #32
 80029ea:	6898      	ldr	r0, [r3, #8]
 80029ec:	f001 fd58 	bl	80044a0 <WM_GetInsideRectExScrollbar>
 80029f0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80029f4:	9a07      	ldr	r2, [sp, #28]
 80029f6:	9806      	ldr	r0, [sp, #24]
 80029f8:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80029fc:	f8d2 9020 	ldr.w	r9, [r2, #32]
 8002a00:	441f      	add	r7, r3
 8002a02:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8002a06:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8002a0a:	f8bd 7026 	ldrh.w	r7, [sp, #38]	; 0x26
 8002a0e:	1b1c      	subs	r4, r3, r4
 8002a10:	1b7f      	subs	r7, r7, r5
 8002a12:	6913      	ldr	r3, [r2, #16]
 8002a14:	f8d0 508c 	ldr.w	r5, [r0, #140]	; 0x8c
 8002a18:	1b5d      	subs	r5, r3, r5
 8002a1a:	f892 3028 	ldrb.w	r3, [r2, #40]	; 0x28
 8002a1e:	4441      	add	r1, r8
 8002a20:	b289      	uxth	r1, r1
 8002a22:	b2a4      	uxth	r4, r4
 8002a24:	b2bf      	uxth	r7, r7
 8002a26:	2b01      	cmp	r3, #1
 8002a28:	f8ad 1020 	strh.w	r1, [sp, #32]
 8002a2c:	f8ad 4024 	strh.w	r4, [sp, #36]	; 0x24
 8002a30:	f8ad 7026 	strh.w	r7, [sp, #38]	; 0x26
 8002a34:	f8d0 8080 	ldr.w	r8, [r0, #128]	; 0x80
 8002a38:	b209      	sxth	r1, r1
 8002a3a:	d008      	beq.n	8002a4e <_OnPaint+0x96>
 8002a3c:	b224      	sxth	r4, r4
 8002a3e:	1b64      	subs	r4, r4, r5
 8002a40:	3401      	adds	r4, #1
 8002a42:	42a1      	cmp	r1, r4
 8002a44:	dd04      	ble.n	8002a50 <_OnPaint+0x98>
 8002a46:	1b0c      	subs	r4, r1, r4
 8002a48:	eb06 0644 	add.w	r6, r6, r4, lsl #1
 8002a4c:	1b2d      	subs	r5, r5, r4
 8002a4e:	460c      	mov	r4, r1
 8002a50:	2d00      	cmp	r5, #0
 8002a52:	dd15      	ble.n	8002a80 <_OnPaint+0xc8>
 8002a54:	6990      	ldr	r0, [r2, #24]
 8002a56:	f006 faae 	bl	8008fb6 <GUI_SetColor>
 8002a5a:	f04f 32ff 	mov.w	r2, #4294967295
 8002a5e:	2301      	movs	r3, #1
 8002a60:	e88d 000c 	stmia.w	sp, {r2, r3}
 8002a64:	9a07      	ldr	r2, [sp, #28]
 8002a66:	b23f      	sxth	r7, r7
 8002a68:	f892 3029 	ldrb.w	r3, [r2, #41]	; 0x29
 8002a6c:	9302      	str	r3, [sp, #8]
 8002a6e:	ebc9 0907 	rsb	r9, r9, r7
 8002a72:	4630      	mov	r0, r6
 8002a74:	4629      	mov	r1, r5
 8002a76:	4622      	mov	r2, r4
 8002a78:	eb09 0308 	add.w	r3, r9, r8
 8002a7c:	f005 fd4a 	bl	8008514 <GUI_DrawGraphEx>
 8002a80:	a806      	add	r0, sp, #24
 8002a82:	f006 feed 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002a86:	a805      	add	r0, sp, #20
 8002a88:	f006 feea 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002a8c:	a807      	add	r0, sp, #28
 8002a8e:	f006 fee7 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002a92:	b00b      	add	sp, #44	; 0x2c
 8002a94:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08002a98 <_InvalidateNewItem>:
 8002a98:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002a9a:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8002a9e:	2b01      	cmp	r3, #1
 8002aa0:	4604      	mov	r4, r0
 8002aa2:	6880      	ldr	r0, [r0, #8]
 8002aa4:	d127      	bne.n	8002af6 <_InvalidateNewItem+0x5e>
 8002aa6:	a902      	add	r1, sp, #8
 8002aa8:	f001 fcfa 	bl	80044a0 <WM_GetInsideRectExScrollbar>
 8002aac:	68a0      	ldr	r0, [r4, #8]
 8002aae:	f006 fec9 	bl	8009844 <GUI_ALLOC_LockH>
 8002ab2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8002ab6:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8002ab8:	9001      	str	r0, [sp, #4]
 8002aba:	4413      	add	r3, r2
 8002abc:	f8ad 300a 	strh.w	r3, [sp, #10]
 8002ac0:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8002ac4:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8002ac6:	1ad3      	subs	r3, r2, r3
 8002ac8:	f8ad 300e 	strh.w	r3, [sp, #14]
 8002acc:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8002ace:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8002ad2:	4413      	add	r3, r2
 8002ad4:	6922      	ldr	r2, [r4, #16]
 8002ad6:	4413      	add	r3, r2
 8002ad8:	b29b      	uxth	r3, r3
 8002ada:	1e9a      	subs	r2, r3, #2
 8002adc:	a801      	add	r0, sp, #4
 8002ade:	3b01      	subs	r3, #1
 8002ae0:	f8ad 2008 	strh.w	r2, [sp, #8]
 8002ae4:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002ae8:	f006 feba 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002aec:	68a0      	ldr	r0, [r4, #8]
 8002aee:	a902      	add	r1, sp, #8
 8002af0:	f002 fbbe 	bl	8005270 <WM_InvalidateRect>
 8002af4:	e001      	b.n	8002afa <_InvalidateNewItem+0x62>
 8002af6:	f000 fb74 	bl	80031e2 <GRAPH__InvalidateGraph>
 8002afa:	b004      	add	sp, #16
 8002afc:	bd10      	pop	{r4, pc}
	...

08002b00 <GRAPH_DATA_YT_Create>:
 8002b00:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8002b04:	4680      	mov	r8, r0
 8002b06:	202c      	movs	r0, #44	; 0x2c
 8002b08:	460e      	mov	r6, r1
 8002b0a:	4617      	mov	r7, r2
 8002b0c:	461d      	mov	r5, r3
 8002b0e:	f007 f88b 	bl	8009c28 <GUI_ALLOC_AllocZero>
 8002b12:	4604      	mov	r4, r0
 8002b14:	b320      	cbz	r0, 8002b60 <GRAPH_DATA_YT_Create+0x60>
 8002b16:	0070      	lsls	r0, r6, #1
 8002b18:	f007 f886 	bl	8009c28 <GUI_ALLOC_AllocZero>
 8002b1c:	4681      	mov	r9, r0
 8002b1e:	b160      	cbz	r0, 8002b3a <GRAPH_DATA_YT_Create+0x3a>
 8002b20:	b15f      	cbz	r7, 8002b3a <GRAPH_DATA_YT_Create+0x3a>
 8002b22:	b155      	cbz	r5, 8002b3a <GRAPH_DATA_YT_Create+0x3a>
 8002b24:	f006 fe8e 	bl	8009844 <GUI_ALLOC_LockH>
 8002b28:	4b0f      	ldr	r3, [pc, #60]	; (8002b68 <GRAPH_DATA_YT_Create+0x68>)
 8002b2a:	9001      	str	r0, [sp, #4]
 8002b2c:	681b      	ldr	r3, [r3, #0]
 8002b2e:	4639      	mov	r1, r7
 8002b30:	006a      	lsls	r2, r5, #1
 8002b32:	4798      	blx	r3
 8002b34:	a801      	add	r0, sp, #4
 8002b36:	f006 fe93 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002b3a:	4620      	mov	r0, r4
 8002b3c:	f006 fe82 	bl	8009844 <GUI_ALLOC_LockH>
 8002b40:	4b0a      	ldr	r3, [pc, #40]	; (8002b6c <GRAPH_DATA_YT_Create+0x6c>)
 8002b42:	9001      	str	r0, [sp, #4]
 8002b44:	60c3      	str	r3, [r0, #12]
 8002b46:	4b0a      	ldr	r3, [pc, #40]	; (8002b70 <GRAPH_DATA_YT_Create+0x70>)
 8002b48:	6003      	str	r3, [r0, #0]
 8002b4a:	4b0a      	ldr	r3, [pc, #40]	; (8002b74 <GRAPH_DATA_YT_Create+0x74>)
 8002b4c:	f8c0 9024 	str.w	r9, [r0, #36]	; 0x24
 8002b50:	f8c0 8018 	str.w	r8, [r0, #24]
 8002b54:	6146      	str	r6, [r0, #20]
 8002b56:	6105      	str	r5, [r0, #16]
 8002b58:	6043      	str	r3, [r0, #4]
 8002b5a:	a801      	add	r0, sp, #4
 8002b5c:	f006 fe80 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002b60:	4620      	mov	r0, r4
 8002b62:	b003      	add	sp, #12
 8002b64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002b68:	200000a0 	.word	0x200000a0
 8002b6c:	08002a99 	.word	0x08002a99
 8002b70:	080029b9 	.word	0x080029b9
 8002b74:	08002991 	.word	0x08002991

08002b78 <GRAPH_DATA_YT_AddValue>:
 8002b78:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002b7a:	f8ad 1006 	strh.w	r1, [sp, #6]
 8002b7e:	f006 fe61 	bl	8009844 <GUI_ALLOC_LockH>
 8002b82:	9002      	str	r0, [sp, #8]
 8002b84:	b168      	cbz	r0, 8002ba2 <GRAPH_DATA_YT_AddValue+0x2a>
 8002b86:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002b88:	f006 fe5c 	bl	8009844 <GUI_ALLOC_LockH>
 8002b8c:	f10d 0206 	add.w	r2, sp, #6
 8002b90:	4601      	mov	r1, r0
 8002b92:	9003      	str	r0, [sp, #12]
 8002b94:	2302      	movs	r3, #2
 8002b96:	9802      	ldr	r0, [sp, #8]
 8002b98:	f000 fb52 	bl	8003240 <GRAPH__AddValue>
 8002b9c:	a803      	add	r0, sp, #12
 8002b9e:	f006 fe5f 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002ba2:	a802      	add	r0, sp, #8
 8002ba4:	f006 fe5c 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002ba8:	b005      	add	sp, #20
 8002baa:	f85d fb04 	ldr.w	pc, [sp], #4

08002bae <GRAPH_DATA_YT_SetAlign>:
 8002bae:	b513      	push	{r0, r1, r4, lr}
 8002bb0:	460c      	mov	r4, r1
 8002bb2:	f006 fe47 	bl	8009844 <GUI_ALLOC_LockH>
 8002bb6:	9001      	str	r0, [sp, #4]
 8002bb8:	b140      	cbz	r0, 8002bcc <GRAPH_DATA_YT_SetAlign+0x1e>
 8002bba:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8002bbe:	42a3      	cmp	r3, r4
 8002bc0:	d004      	beq.n	8002bcc <GRAPH_DATA_YT_SetAlign+0x1e>
 8002bc2:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 8002bc6:	6880      	ldr	r0, [r0, #8]
 8002bc8:	f002 fb8e 	bl	80052e8 <WM_InvalidateWindow>
 8002bcc:	a801      	add	r0, sp, #4
 8002bce:	f006 fe47 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002bd2:	b002      	add	sp, #8
 8002bd4:	bd10      	pop	{r4, pc}

08002bd6 <GRAPH_DATA_YT_Clear>:
 8002bd6:	b513      	push	{r0, r1, r4, lr}
 8002bd8:	b160      	cbz	r0, 8002bf4 <GRAPH_DATA_YT_Clear+0x1e>
 8002bda:	f006 fe33 	bl	8009844 <GUI_ALLOC_LockH>
 8002bde:	ac02      	add	r4, sp, #8
 8002be0:	2300      	movs	r3, #0
 8002be2:	f844 0d04 	str.w	r0, [r4, #-4]!
 8002be6:	6103      	str	r3, [r0, #16]
 8002be8:	6880      	ldr	r0, [r0, #8]
 8002bea:	f002 fb7d 	bl	80052e8 <WM_InvalidateWindow>
 8002bee:	4620      	mov	r0, r4
 8002bf0:	f006 fe36 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002bf4:	b002      	add	sp, #8
 8002bf6:	bd10      	pop	{r4, pc}

08002bf8 <_ManageScrollbars>:
 8002bf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002bfa:	b08b      	sub	sp, #44	; 0x2c
 8002bfc:	a902      	add	r1, sp, #8
 8002bfe:	4604      	mov	r4, r0
 8002c00:	f001 fc4e 	bl	80044a0 <WM_GetInsideRectExScrollbar>
 8002c04:	4620      	mov	r0, r4
 8002c06:	f006 fe1d 	bl	8009844 <GUI_ALLOC_LockH>
 8002c0a:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8002c0e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8002c12:	9001      	str	r0, [sp, #4]
 8002c14:	1ab6      	subs	r6, r6, r2
 8002c16:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8002c18:	6d45      	ldr	r5, [r0, #84]	; 0x54
 8002c1a:	6dc7      	ldr	r7, [r0, #92]	; 0x5c
 8002c1c:	1ab6      	subs	r6, r6, r2
 8002c1e:	6e02      	ldr	r2, [r0, #96]	; 0x60
 8002c20:	1ab6      	subs	r6, r6, r2
 8002c22:	f8b0 2078 	ldrh.w	r2, [r0, #120]	; 0x78
 8002c26:	0751      	lsls	r1, r2, #29
 8002c28:	d407      	bmi.n	8002c3a <_ManageScrollbars+0x42>
 8002c2a:	6f41      	ldr	r1, [r0, #116]	; 0x74
 8002c2c:	42b1      	cmp	r1, r6
 8002c2e:	4620      	mov	r0, r4
 8002c30:	bfd4      	ite	le
 8002c32:	2100      	movle	r1, #0
 8002c34:	2101      	movgt	r1, #1
 8002c36:	f001 f95b 	bl	8003ef0 <WM_SetScrollbarV>
 8002c3a:	9b01      	ldr	r3, [sp, #4]
 8002c3c:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 8002c40:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8002c42:	67da      	str	r2, [r3, #124]	; 0x7c
 8002c44:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8002c48:	f8c3 6084 	str.w	r6, [r3, #132]	; 0x84
 8002c4c:	1a8a      	subs	r2, r1, r2
 8002c4e:	1b55      	subs	r5, r2, r5
 8002c50:	f8b3 2078 	ldrh.w	r2, [r3, #120]	; 0x78
 8002c54:	0792      	lsls	r2, r2, #30
 8002c56:	ebc7 0505 	rsb	r5, r7, r5
 8002c5a:	d407      	bmi.n	8002c6c <_ManageScrollbars+0x74>
 8002c5c:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8002c5e:	42a9      	cmp	r1, r5
 8002c60:	4620      	mov	r0, r4
 8002c62:	bfd4      	ite	le
 8002c64:	2100      	movle	r1, #0
 8002c66:	2101      	movgt	r1, #1
 8002c68:	f001 f940 	bl	8003eec <WM_SetScrollbarH>
 8002c6c:	9801      	ldr	r0, [sp, #4]
 8002c6e:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8002c70:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 8002c74:	f8c0 5090 	str.w	r5, [r0, #144]	; 0x90
 8002c78:	307c      	adds	r0, #124	; 0x7c
 8002c7a:	f001 faed 	bl	8004258 <WM_CheckScrollBounds>
 8002c7e:	9801      	ldr	r0, [sp, #4]
 8002c80:	3088      	adds	r0, #136	; 0x88
 8002c82:	f001 fae9 	bl	8004258 <WM_CheckScrollBounds>
 8002c86:	9b01      	ldr	r3, [sp, #4]
 8002c88:	f103 027c 	add.w	r2, r3, #124	; 0x7c
 8002c8c:	ca07      	ldmia	r2, {r0, r1, r2}
 8002c8e:	3388      	adds	r3, #136	; 0x88
 8002c90:	ae07      	add	r6, sp, #28
 8002c92:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8002c96:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002c9a:	ad04      	add	r5, sp, #16
 8002c9c:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8002ca0:	a801      	add	r0, sp, #4
 8002ca2:	f006 fddd 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002ca6:	4620      	mov	r0, r4
 8002ca8:	4631      	mov	r1, r6
 8002caa:	462a      	mov	r2, r5
 8002cac:	f007 f9ad 	bl	800a00a <WIDGET__SetScrollState>
 8002cb0:	b00b      	add	sp, #44	; 0x2c
 8002cb2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002cb4 <_OnScrollValueChanged>:
 8002cb4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8002cb6:	460c      	mov	r4, r1
 8002cb8:	4606      	mov	r6, r0
 8002cba:	f006 fdc3 	bl	8009844 <GUI_ALLOC_LockH>
 8002cbe:	9001      	str	r0, [sp, #4]
 8002cc0:	4620      	mov	r0, r4
 8002cc2:	f007 fce1 	bl	800a688 <SCROLLBAR_GetValue>
 8002cc6:	4605      	mov	r5, r0
 8002cc8:	4620      	mov	r0, r4
 8002cca:	f001 faed 	bl	80042a8 <WM_GetId>
 8002cce:	9b01      	ldr	r3, [sp, #4]
 8002cd0:	28fe      	cmp	r0, #254	; 0xfe
 8002cd2:	bf0c      	ite	eq
 8002cd4:	f8c3 5080 	streq.w	r5, [r3, #128]	; 0x80
 8002cd8:	f8c3 508c 	strne.w	r5, [r3, #140]	; 0x8c
 8002cdc:	4630      	mov	r0, r6
 8002cde:	f002 fb03 	bl	80052e8 <WM_InvalidateWindow>
 8002ce2:	a801      	add	r0, sp, #4
 8002ce4:	f006 fdbc 	bl	8009860 <GUI_ALLOC_UnlockH>
 8002ce8:	b002      	add	sp, #8
 8002cea:	bd70      	pop	{r4, r5, r6, pc}

08002cec <GRAPH_Callback>:
 8002cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002cf0:	6844      	ldr	r4, [r0, #4]
 8002cf2:	6806      	ldr	r6, [r0, #0]
 8002cf4:	4605      	mov	r5, r0
 8002cf6:	b097      	sub	sp, #92	; 0x5c
 8002cf8:	4620      	mov	r0, r4
 8002cfa:	4629      	mov	r1, r5
 8002cfc:	f007 f8e5 	bl	8009eca <WIDGET_HandleActive>
 8002d00:	f5b6 7f40 	cmp.w	r6, #768	; 0x300
 8002d04:	4607      	mov	r7, r0
 8002d06:	d102      	bne.n	8002d0e <GRAPH_Callback+0x22>
 8002d08:	4620      	mov	r0, r4
 8002d0a:	f7ff ff75 	bl	8002bf8 <_ManageScrollbars>
 8002d0e:	2f00      	cmp	r7, #0
 8002d10:	f000 8264 	beq.w	80031dc <GRAPH_Callback+0x4f0>
 8002d14:	682b      	ldr	r3, [r5, #0]
 8002d16:	2b0b      	cmp	r3, #11
 8002d18:	f000 8200 	beq.w	800311c <GRAPH_Callback+0x430>
 8002d1c:	dc06      	bgt.n	8002d2c <GRAPH_Callback+0x40>
 8002d1e:	2b05      	cmp	r3, #5
 8002d20:	f040 8259 	bne.w	80031d6 <GRAPH_Callback+0x4ea>
 8002d24:	4620      	mov	r0, r4
 8002d26:	f7ff ff67 	bl	8002bf8 <_ManageScrollbars>
 8002d2a:	e254      	b.n	80031d6 <GRAPH_Callback+0x4ea>
 8002d2c:	2b0f      	cmp	r3, #15
 8002d2e:	d003      	beq.n	8002d38 <GRAPH_Callback+0x4c>
 8002d30:	2b26      	cmp	r3, #38	; 0x26
 8002d32:	f000 823d 	beq.w	80031b0 <GRAPH_Callback+0x4c4>
 8002d36:	e24e      	b.n	80031d6 <GRAPH_Callback+0x4ea>
 8002d38:	68ed      	ldr	r5, [r5, #12]
 8002d3a:	9502      	str	r5, [sp, #8]
 8002d3c:	4620      	mov	r0, r4
 8002d3e:	f006 fd81 	bl	8009844 <GUI_ALLOC_LockH>
 8002d42:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8002d44:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8002d46:	681b      	ldr	r3, [r3, #0]
 8002d48:	f8d0 9054 	ldr.w	r9, [r0, #84]	; 0x54
 8002d4c:	f8d0 b058 	ldr.w	fp, [r0, #88]	; 0x58
 8002d50:	f8d0 a060 	ldr.w	sl, [r0, #96]	; 0x60
 8002d54:	900d      	str	r0, [sp, #52]	; 0x34
 8002d56:	ad0e      	add	r5, sp, #56	; 0x38
 8002d58:	4628      	mov	r0, r5
 8002d5a:	9303      	str	r3, [sp, #12]
 8002d5c:	9101      	str	r1, [sp, #4]
 8002d5e:	f001 fa53 	bl	8004208 <WM_GetClientRect>
 8002d62:	980d      	ldr	r0, [sp, #52]	; 0x34
 8002d64:	4629      	mov	r1, r5
 8002d66:	f007 f981 	bl	800a06c <WIDGET__EFFECT_DrawDownRect>
 8002d6a:	e895 0003 	ldmia.w	r5, {r0, r1}
 8002d6e:	ab12      	add	r3, sp, #72	; 0x48
 8002d70:	e883 0003 	stmia.w	r3, {r0, r1}
 8002d74:	9803      	ldr	r0, [sp, #12]
 8002d76:	f8bd 104a 	ldrh.w	r1, [sp, #74]	; 0x4a
 8002d7a:	b282      	uxth	r2, r0
 8002d7c:	4459      	add	r1, fp
 8002d7e:	f8bd 004e 	ldrh.w	r0, [sp, #78]	; 0x4e
 8002d82:	4411      	add	r1, r2
 8002d84:	f8ad 104a 	strh.w	r1, [sp, #74]	; 0x4a
 8002d88:	eb02 010a 	add.w	r1, r2, sl
 8002d8c:	1a41      	subs	r1, r0, r1
 8002d8e:	f8ad 104e 	strh.w	r1, [sp, #78]	; 0x4e
 8002d92:	f8bd 1048 	ldrh.w	r1, [sp, #72]	; 0x48
 8002d96:	4411      	add	r1, r2
 8002d98:	4449      	add	r1, r9
 8002d9a:	f8ad 1048 	strh.w	r1, [sp, #72]	; 0x48
 8002d9e:	9901      	ldr	r1, [sp, #4]
 8002da0:	440a      	add	r2, r1
 8002da2:	f8bd 104c 	ldrh.w	r1, [sp, #76]	; 0x4c
 8002da6:	1a8a      	subs	r2, r1, r2
 8002da8:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
 8002dac:	e893 0003 	ldmia.w	r3, {r0, r1}
 8002db0:	aa10      	add	r2, sp, #64	; 0x40
 8002db2:	e882 0003 	stmia.w	r2, {r0, r1}
 8002db6:	4610      	mov	r0, r2
 8002db8:	f001 fd2c 	bl	8004814 <WM_SetUserClipRect>
 8002dbc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002dbe:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002dc0:	f006 f8f7 	bl	8008fb2 <GUI_SetBkColor>
 8002dc4:	f005 ff86 	bl	8008cd4 <GUI_Clear>
 8002dc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002dca:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8002dce:	b113      	cbz	r3, 8002dd6 <GRAPH_Callback+0xea>
 8002dd0:	4620      	mov	r0, r4
 8002dd2:	2100      	movs	r1, #0
 8002dd4:	4798      	blx	r3
 8002dd6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8002dd8:	f895 306c 	ldrb.w	r3, [r5, #108]	; 0x6c
 8002ddc:	2b00      	cmp	r3, #0
 8002dde:	f000 808d 	beq.w	8002efc <GRAPH_Callback+0x210>
 8002de2:	4620      	mov	r0, r4
 8002de4:	a914      	add	r1, sp, #80	; 0x50
 8002de6:	f001 fb5b 	bl	80044a0 <WM_GetInsideRectExScrollbar>
 8002dea:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8002dec:	f8bd 0056 	ldrh.w	r0, [sp, #86]	; 0x56
 8002df0:	681b      	ldr	r3, [r3, #0]
 8002df2:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8002df6:	f8bd 1052 	ldrh.w	r1, [sp, #82]	; 0x52
 8002dfa:	9304      	str	r3, [sp, #16]
 8002dfc:	9007      	str	r0, [sp, #28]
 8002dfe:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8002e02:	6c28      	ldr	r0, [r5, #64]	; 0x40
 8002e04:	9205      	str	r2, [sp, #20]
 8002e06:	9306      	str	r3, [sp, #24]
 8002e08:	9108      	str	r1, [sp, #32]
 8002e0a:	6c6e      	ldr	r6, [r5, #68]	; 0x44
 8002e0c:	6caf      	ldr	r7, [r5, #72]	; 0x48
 8002e0e:	f006 f8d2 	bl	8008fb6 <GUI_SetColor>
 8002e12:	f006 f805 	bl	8008e20 <GUI_GetLineStyle>
 8002e16:	9009      	str	r0, [sp, #36]	; 0x24
 8002e18:	b916      	cbnz	r6, 8002e20 <GRAPH_Callback+0x134>
 8002e1a:	2f00      	cmp	r7, #0
 8002e1c:	d14b      	bne.n	8002eb6 <GRAPH_Callback+0x1ca>
 8002e1e:	e046      	b.n	8002eae <GRAPH_Callback+0x1c2>
 8002e20:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8002e22:	eb06 0c03 	add.w	ip, r6, r3
 8002e26:	f8b5 3078 	ldrh.w	r3, [r5, #120]	; 0x78
 8002e2a:	07db      	lsls	r3, r3, #31
 8002e2c:	bf54      	ite	pl
 8002e2e:	f8d5 308c 	ldrpl.w	r3, [r5, #140]	; 0x8c
 8002e32:	2300      	movmi	r3, #0
 8002e34:	eb0c 0803 	add.w	r8, ip, r3
 8002e38:	45b0      	cmp	r8, r6
 8002e3a:	db02      	blt.n	8002e42 <GRAPH_Callback+0x156>
 8002e3c:	ebc6 0808 	rsb	r8, r6, r8
 8002e40:	e7fa      	b.n	8002e38 <GRAPH_Callback+0x14c>
 8002e42:	f895 007a 	ldrb.w	r0, [r5, #122]	; 0x7a
 8002e46:	f006 f8c5 	bl	8008fd4 <GUI_SetLineStyle>
 8002e4a:	9805      	ldr	r0, [sp, #20]
 8002e4c:	9a01      	ldr	r2, [sp, #4]
 8002e4e:	b203      	sxth	r3, r0
 8002e50:	9806      	ldr	r0, [sp, #24]
 8002e52:	444a      	add	r2, r9
 8002e54:	b201      	sxth	r1, r0
 8002e56:	f1c2 0201 	rsb	r2, r2, #1
 8002e5a:	1a5b      	subs	r3, r3, r1
 8002e5c:	4413      	add	r3, r2
 8002e5e:	4598      	cmp	r8, r3
 8002e60:	dadb      	bge.n	8002e1a <GRAPH_Callback+0x12e>
 8002e62:	9804      	ldr	r0, [sp, #16]
 8002e64:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 8002e68:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8002e6c:	f895 207a 	ldrb.w	r2, [r5, #122]	; 0x7a
 8002e70:	4448      	add	r0, r9
 8002e72:	4440      	add	r0, r8
 8002e74:	4459      	add	r1, fp
 8002e76:	ebca 0303 	rsb	r3, sl, r3
 8002e7a:	b11a      	cbz	r2, 8002e84 <GRAPH_Callback+0x198>
 8002e7c:	4602      	mov	r2, r0
 8002e7e:	f005 fa81 	bl	8008384 <GUI_DrawLine>
 8002e82:	e002      	b.n	8002e8a <GRAPH_Callback+0x19e>
 8002e84:	461a      	mov	r2, r3
 8002e86:	f005 faf5 	bl	8008474 <GUI_DrawVLine>
 8002e8a:	44b0      	add	r8, r6
 8002e8c:	e7dd      	b.n	8002e4a <GRAPH_Callback+0x15e>
 8002e8e:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 8002e92:	f006 f89f 	bl	8008fd4 <GUI_SetLineStyle>
 8002e96:	9907      	ldr	r1, [sp, #28]
 8002e98:	9808      	ldr	r0, [sp, #32]
 8002e9a:	b20b      	sxth	r3, r1
 8002e9c:	eb0b 020a 	add.w	r2, fp, sl
 8002ea0:	b201      	sxth	r1, r0
 8002ea2:	f1c2 0201 	rsb	r2, r2, #1
 8002ea6:	1a5b      	subs	r3, r3, r1
 8002ea8:	4413      	add	r3, r2
 8002eaa:	429e      	cmp	r6, r3
 8002eac:	db0c      	blt.n	8002ec8 <GRAPH_Callback+0x1dc>
 8002eae:	9809      	ldr	r0, [sp, #36]	; 0x24
 8002eb0:	f006 f890 	bl	8008fd4 <GUI_SetLineStyle>
 8002eb4:	e022      	b.n	8002efc <GRAPH_Callback+0x210>
 8002eb6:	6d2e      	ldr	r6, [r5, #80]	; 0x50
 8002eb8:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
 8002ebc:	443e      	add	r6, r7
 8002ebe:	1af6      	subs	r6, r6, r3
 8002ec0:	42be      	cmp	r6, r7
 8002ec2:	dbe4      	blt.n	8002e8e <GRAPH_Callback+0x1a2>
 8002ec4:	1bf6      	subs	r6, r6, r7
 8002ec6:	e7fb      	b.n	8002ec0 <GRAPH_Callback+0x1d4>
 8002ec8:	9801      	ldr	r0, [sp, #4]
 8002eca:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8002ece:	f9bd 1056 	ldrsh.w	r1, [sp, #86]	; 0x56
 8002ed2:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 8002ed6:	1a12      	subs	r2, r2, r0
 8002ed8:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 8002edc:	ebca 0101 	rsb	r1, sl, r1
 8002ee0:	1b89      	subs	r1, r1, r6
 8002ee2:	444b      	add	r3, r9
 8002ee4:	b120      	cbz	r0, 8002ef0 <GRAPH_Callback+0x204>
 8002ee6:	4618      	mov	r0, r3
 8002ee8:	460b      	mov	r3, r1
 8002eea:	f005 fa4b 	bl	8008384 <GUI_DrawLine>
 8002eee:	e003      	b.n	8002ef8 <GRAPH_Callback+0x20c>
 8002ef0:	4608      	mov	r0, r1
 8002ef2:	4619      	mov	r1, r3
 8002ef4:	f005 fa64 	bl	80083c0 <GUI_DrawHLine>
 8002ef8:	443e      	add	r6, r7
 8002efa:	e7cc      	b.n	8002e96 <GRAPH_Callback+0x1aa>
 8002efc:	9a03      	ldr	r2, [sp, #12]
 8002efe:	a812      	add	r0, sp, #72	; 0x48
 8002f00:	a90e      	add	r1, sp, #56	; 0x38
 8002f02:	f004 fb12 	bl	800752a <GUI__ReduceRect>
 8002f06:	a812      	add	r0, sp, #72	; 0x48
 8002f08:	f001 fc84 	bl	8004814 <WM_SetUserClipRect>
 8002f0c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002f0e:	f893 203b 	ldrb.w	r2, [r3, #59]	; 0x3b
 8002f12:	2aff      	cmp	r2, #255	; 0xff
 8002f14:	f000 80a3 	beq.w	800305e <GRAPH_Callback+0x372>
 8002f18:	f1b9 0f00 	cmp.w	r9, #0
 8002f1c:	d108      	bne.n	8002f30 <GRAPH_Callback+0x244>
 8002f1e:	f1bb 0f00 	cmp.w	fp, #0
 8002f22:	d105      	bne.n	8002f30 <GRAPH_Callback+0x244>
 8002f24:	9901      	ldr	r1, [sp, #4]
 8002f26:	b919      	cbnz	r1, 8002f30 <GRAPH_Callback+0x244>
 8002f28:	f1ba 0f00 	cmp.w	sl, #0
 8002f2c:	f000 8097 	beq.w	800305e <GRAPH_Callback+0x372>
 8002f30:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002f32:	a914      	add	r1, sp, #80	; 0x50
 8002f34:	4620      	mov	r0, r4
 8002f36:	6815      	ldr	r5, [r2, #0]
 8002f38:	9300      	str	r3, [sp, #0]
 8002f3a:	f001 fab1 	bl	80044a0 <WM_GetInsideRectExScrollbar>
 8002f3e:	f001 fa2b 	bl	8004398 <WM_GetOrgX>
 8002f42:	9004      	str	r0, [sp, #16]
 8002f44:	f001 fa30 	bl	80043a8 <WM_GetOrgY>
 8002f48:	f9bd 2052 	ldrsh.w	r2, [sp, #82]	; 0x52
 8002f4c:	9b00      	ldr	r3, [sp, #0]
 8002f4e:	f9bd 6054 	ldrsh.w	r6, [sp, #84]	; 0x54
 8002f52:	9005      	str	r0, [sp, #20]
 8002f54:	445a      	add	r2, fp
 8002f56:	9203      	str	r2, [sp, #12]
 8002f58:	9a01      	ldr	r2, [sp, #4]
 8002f5a:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8002f5c:	f9bd 7050 	ldrsh.w	r7, [sp, #80]	; 0x50
 8002f60:	f9bd 8056 	ldrsh.w	r8, [sp, #86]	; 0x56
 8002f64:	1ab6      	subs	r6, r6, r2
 8002f66:	f006 f824 	bl	8008fb2 <GUI_SetBkColor>
 8002f6a:	9b00      	ldr	r3, [sp, #0]
 8002f6c:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8002f6e:	444f      	add	r7, r9
 8002f70:	ebca 0808 	rsb	r8, sl, r8
 8002f74:	f006 f81f 	bl	8008fb6 <GUI_SetColor>
 8002f78:	f1b9 0f00 	cmp.w	r9, #0
 8002f7c:	d01b      	beq.n	8002fb6 <GRAPH_Callback+0x2ca>
 8002f7e:	9802      	ldr	r0, [sp, #8]
 8002f80:	9904      	ldr	r1, [sp, #16]
 8002f82:	f9b0 3000 	ldrsh.w	r3, [r0]
 8002f86:	f109 32ff 	add.w	r2, r9, #4294967295
 8002f8a:	442a      	add	r2, r5
 8002f8c:	1a5b      	subs	r3, r3, r1
 8002f8e:	4293      	cmp	r3, r2
 8002f90:	dc11      	bgt.n	8002fb6 <GRAPH_Callback+0x2ca>
 8002f92:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8002f96:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 8002f9a:	ebca 0303 	rsb	r3, sl, r3
 8002f9e:	eb05 010b 	add.w	r1, r5, fp
 8002fa2:	3301      	adds	r3, #1
 8002fa4:	f005 fe64 	bl	8008c70 <GUI_ClearRect>
 8002fa8:	9a03      	ldr	r2, [sp, #12]
 8002faa:	1e78      	subs	r0, r7, #1
 8002fac:	1e51      	subs	r1, r2, #1
 8002fae:	f108 0201 	add.w	r2, r8, #1
 8002fb2:	f005 fa5f 	bl	8008474 <GUI_DrawVLine>
 8002fb6:	f1bb 0f00 	cmp.w	fp, #0
 8002fba:	d017      	beq.n	8002fec <GRAPH_Callback+0x300>
 8002fbc:	9802      	ldr	r0, [sp, #8]
 8002fbe:	9905      	ldr	r1, [sp, #20]
 8002fc0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8002fc4:	f10b 33ff 	add.w	r3, fp, #4294967295
 8002fc8:	442b      	add	r3, r5
 8002fca:	1a52      	subs	r2, r2, r1
 8002fcc:	429a      	cmp	r2, r3
 8002fce:	dc0d      	bgt.n	8002fec <GRAPH_Callback+0x300>
 8002fd0:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 8002fd4:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 8002fd8:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8002fdc:	f005 fe48 	bl	8008c70 <GUI_ClearRect>
 8002fe0:	9a03      	ldr	r2, [sp, #12]
 8002fe2:	1e79      	subs	r1, r7, #1
 8002fe4:	1e50      	subs	r0, r2, #1
 8002fe6:	1c72      	adds	r2, r6, #1
 8002fe8:	f005 f9ea 	bl	80083c0 <GUI_DrawHLine>
 8002fec:	9b01      	ldr	r3, [sp, #4]
 8002fee:	b1d3      	cbz	r3, 8003026 <GRAPH_Callback+0x33a>
 8002ff0:	9902      	ldr	r1, [sp, #8]
 8002ff2:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8002ff6:	1ad0      	subs	r0, r2, r3
 8002ff8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8002ffc:	9904      	ldr	r1, [sp, #16]
 8002ffe:	3001      	adds	r0, #1
 8003000:	1a5b      	subs	r3, r3, r1
 8003002:	4283      	cmp	r3, r0
 8003004:	db0f      	blt.n	8003026 <GRAPH_Callback+0x33a>
 8003006:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 800300a:	ebca 0303 	rsb	r3, sl, r3
 800300e:	eb05 010b 	add.w	r1, r5, fp
 8003012:	3301      	adds	r3, #1
 8003014:	f005 fe2c 	bl	8008c70 <GUI_ClearRect>
 8003018:	9a03      	ldr	r2, [sp, #12]
 800301a:	1c70      	adds	r0, r6, #1
 800301c:	1e51      	subs	r1, r2, #1
 800301e:	f108 0201 	add.w	r2, r8, #1
 8003022:	f005 fa27 	bl	8008474 <GUI_DrawVLine>
 8003026:	f1ba 0f00 	cmp.w	sl, #0
 800302a:	d018      	beq.n	800305e <GRAPH_Callback+0x372>
 800302c:	9802      	ldr	r0, [sp, #8]
 800302e:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8003032:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8003036:	9805      	ldr	r0, [sp, #20]
 8003038:	ebca 0103 	rsb	r1, sl, r3
 800303c:	3101      	adds	r1, #1
 800303e:	ebc0 0a02 	rsb	sl, r0, r2
 8003042:	458a      	cmp	sl, r1
 8003044:	db0b      	blt.n	800305e <GRAPH_Callback+0x372>
 8003046:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 800304a:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 800304e:	f005 fe0f 	bl	8008c70 <GUI_ClearRect>
 8003052:	f108 0001 	add.w	r0, r8, #1
 8003056:	1e79      	subs	r1, r7, #1
 8003058:	1c72      	adds	r2, r6, #1
 800305a:	f005 f9b1 	bl	80083c0 <GUI_DrawHLine>
 800305e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003060:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003064:	b113      	cbz	r3, 800306c <GRAPH_Callback+0x380>
 8003066:	4620      	mov	r0, r4
 8003068:	2101      	movs	r1, #1
 800306a:	4798      	blx	r3
 800306c:	a810      	add	r0, sp, #64	; 0x40
 800306e:	f001 fbd1 	bl	8004814 <WM_SetUserClipRect>
 8003072:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003074:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8003076:	f007 fc97 	bl	800a9a8 <GUI_ARRAY_GetNumItems>
 800307a:	2500      	movs	r5, #0
 800307c:	4607      	mov	r7, r0
 800307e:	42bd      	cmp	r5, r7
 8003080:	d01a      	beq.n	80030b8 <GRAPH_Callback+0x3cc>
 8003082:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003084:	4629      	mov	r1, r5
 8003086:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8003088:	f007 fd10 	bl	800aaac <GUI_ARRAY_GethItem>
 800308c:	f006 fbda 	bl	8009844 <GUI_ALLOC_LockH>
 8003090:	9014      	str	r0, [sp, #80]	; 0x50
 8003092:	b178      	cbz	r0, 80030b4 <GRAPH_Callback+0x3c8>
 8003094:	6806      	ldr	r6, [r0, #0]
 8003096:	4630      	mov	r0, r6
 8003098:	f006 fbd4 	bl	8009844 <GUI_ALLOC_LockH>
 800309c:	900c      	str	r0, [sp, #48]	; 0x30
 800309e:	b130      	cbz	r0, 80030ae <GRAPH_Callback+0x3c2>
 80030a0:	6803      	ldr	r3, [r0, #0]
 80030a2:	9902      	ldr	r1, [sp, #8]
 80030a4:	4630      	mov	r0, r6
 80030a6:	4798      	blx	r3
 80030a8:	a80c      	add	r0, sp, #48	; 0x30
 80030aa:	f006 fbd9 	bl	8009860 <GUI_ALLOC_UnlockH>
 80030ae:	a814      	add	r0, sp, #80	; 0x50
 80030b0:	f006 fbd6 	bl	8009860 <GUI_ALLOC_UnlockH>
 80030b4:	3501      	adds	r5, #1
 80030b6:	e7e2      	b.n	800307e <GRAPH_Callback+0x392>
 80030b8:	a812      	add	r0, sp, #72	; 0x48
 80030ba:	f001 fbab 	bl	8004814 <WM_SetUserClipRect>
 80030be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80030c0:	6e98      	ldr	r0, [r3, #104]	; 0x68
 80030c2:	f007 fc71 	bl	800a9a8 <GUI_ARRAY_GetNumItems>
 80030c6:	2500      	movs	r5, #0
 80030c8:	4607      	mov	r7, r0
 80030ca:	42bd      	cmp	r5, r7
 80030cc:	d01a      	beq.n	8003104 <GRAPH_Callback+0x418>
 80030ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80030d0:	4629      	mov	r1, r5
 80030d2:	6e98      	ldr	r0, [r3, #104]	; 0x68
 80030d4:	f007 fcea 	bl	800aaac <GUI_ARRAY_GethItem>
 80030d8:	f006 fbb4 	bl	8009844 <GUI_ALLOC_LockH>
 80030dc:	9014      	str	r0, [sp, #80]	; 0x50
 80030de:	b178      	cbz	r0, 8003100 <GRAPH_Callback+0x414>
 80030e0:	6806      	ldr	r6, [r0, #0]
 80030e2:	4630      	mov	r0, r6
 80030e4:	f006 fbae 	bl	8009844 <GUI_ALLOC_LockH>
 80030e8:	900b      	str	r0, [sp, #44]	; 0x2c
 80030ea:	b130      	cbz	r0, 80030fa <GRAPH_Callback+0x40e>
 80030ec:	6803      	ldr	r3, [r0, #0]
 80030ee:	9902      	ldr	r1, [sp, #8]
 80030f0:	4630      	mov	r0, r6
 80030f2:	4798      	blx	r3
 80030f4:	a80b      	add	r0, sp, #44	; 0x2c
 80030f6:	f006 fbb3 	bl	8009860 <GUI_ALLOC_UnlockH>
 80030fa:	a814      	add	r0, sp, #80	; 0x50
 80030fc:	f006 fbb0 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003100:	3501      	adds	r5, #1
 8003102:	e7e2      	b.n	80030ca <GRAPH_Callback+0x3de>
 8003104:	2000      	movs	r0, #0
 8003106:	f001 fb85 	bl	8004814 <WM_SetUserClipRect>
 800310a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800310c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003110:	b113      	cbz	r3, 8003118 <GRAPH_Callback+0x42c>
 8003112:	4620      	mov	r0, r4
 8003114:	2102      	movs	r1, #2
 8003116:	4798      	blx	r3
 8003118:	a80d      	add	r0, sp, #52	; 0x34
 800311a:	e046      	b.n	80031aa <GRAPH_Callback+0x4be>
 800311c:	4620      	mov	r0, r4
 800311e:	f006 fb91 	bl	8009844 <GUI_ALLOC_LockH>
 8003122:	9012      	str	r0, [sp, #72]	; 0x48
 8003124:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8003126:	f007 fc3f 	bl	800a9a8 <GUI_ARRAY_GetNumItems>
 800312a:	2400      	movs	r4, #0
 800312c:	4606      	mov	r6, r0
 800312e:	42b4      	cmp	r4, r6
 8003130:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003132:	da18      	bge.n	8003166 <GRAPH_Callback+0x47a>
 8003134:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8003136:	4621      	mov	r1, r4
 8003138:	f007 fcb8 	bl	800aaac <GUI_ARRAY_GethItem>
 800313c:	f006 fb82 	bl	8009844 <GUI_ALLOC_LockH>
 8003140:	9014      	str	r0, [sp, #80]	; 0x50
 8003142:	b170      	cbz	r0, 8003162 <GRAPH_Callback+0x476>
 8003144:	6805      	ldr	r5, [r0, #0]
 8003146:	4628      	mov	r0, r5
 8003148:	f006 fb7c 	bl	8009844 <GUI_ALLOC_LockH>
 800314c:	9010      	str	r0, [sp, #64]	; 0x40
 800314e:	b128      	cbz	r0, 800315c <GRAPH_Callback+0x470>
 8003150:	6847      	ldr	r7, [r0, #4]
 8003152:	a810      	add	r0, sp, #64	; 0x40
 8003154:	f006 fb84 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003158:	4628      	mov	r0, r5
 800315a:	47b8      	blx	r7
 800315c:	a814      	add	r0, sp, #80	; 0x50
 800315e:	f006 fb7f 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003162:	3401      	adds	r4, #1
 8003164:	e7e3      	b.n	800312e <GRAPH_Callback+0x442>
 8003166:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8003168:	f007 fc1e 	bl	800a9a8 <GUI_ARRAY_GetNumItems>
 800316c:	2400      	movs	r4, #0
 800316e:	4605      	mov	r5, r0
 8003170:	42ac      	cmp	r4, r5
 8003172:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003174:	da0f      	bge.n	8003196 <GRAPH_Callback+0x4aa>
 8003176:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8003178:	4621      	mov	r1, r4
 800317a:	f007 fc97 	bl	800aaac <GUI_ARRAY_GethItem>
 800317e:	f006 fb61 	bl	8009844 <GUI_ALLOC_LockH>
 8003182:	9014      	str	r0, [sp, #80]	; 0x50
 8003184:	b128      	cbz	r0, 8003192 <GRAPH_Callback+0x4a6>
 8003186:	6800      	ldr	r0, [r0, #0]
 8003188:	f006 fb8e 	bl	80098a8 <GUI_ALLOC_Free>
 800318c:	a814      	add	r0, sp, #80	; 0x50
 800318e:	f006 fb67 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003192:	3401      	adds	r4, #1
 8003194:	e7ec      	b.n	8003170 <GRAPH_Callback+0x484>
 8003196:	ac16      	add	r4, sp, #88	; 0x58
 8003198:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800319a:	f007 fc5e 	bl	800aa5a <GUI_ARRAY_Delete>
 800319e:	f854 3d10 	ldr.w	r3, [r4, #-16]!
 80031a2:	6e98      	ldr	r0, [r3, #104]	; 0x68
 80031a4:	f007 fc59 	bl	800aa5a <GUI_ARRAY_Delete>
 80031a8:	4620      	mov	r0, r4
 80031aa:	f006 fb59 	bl	8009860 <GUI_ALLOC_UnlockH>
 80031ae:	e015      	b.n	80031dc <GRAPH_Callback+0x4f0>
 80031b0:	68eb      	ldr	r3, [r5, #12]
 80031b2:	2b05      	cmp	r3, #5
 80031b4:	d10f      	bne.n	80031d6 <GRAPH_Callback+0x4ea>
 80031b6:	4620      	mov	r0, r4
 80031b8:	68ae      	ldr	r6, [r5, #8]
 80031ba:	f001 f94d 	bl	8004458 <WM_GetScrollbarV>
 80031be:	4286      	cmp	r6, r0
 80031c0:	d005      	beq.n	80031ce <GRAPH_Callback+0x4e2>
 80031c2:	4620      	mov	r0, r4
 80031c4:	68ae      	ldr	r6, [r5, #8]
 80031c6:	f001 f942 	bl	800444e <WM_GetScrollbarH>
 80031ca:	4286      	cmp	r6, r0
 80031cc:	d103      	bne.n	80031d6 <GRAPH_Callback+0x4ea>
 80031ce:	6868      	ldr	r0, [r5, #4]
 80031d0:	68a9      	ldr	r1, [r5, #8]
 80031d2:	f7ff fd6f 	bl	8002cb4 <_OnScrollValueChanged>
 80031d6:	4628      	mov	r0, r5
 80031d8:	f002 fcb4 	bl	8005b44 <WM_DefaultProc>
 80031dc:	b017      	add	sp, #92	; 0x5c
 80031de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080031e2 <GRAPH__InvalidateGraph>:
 80031e2:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80031e6:	4604      	mov	r4, r0
 80031e8:	f006 fb2c 	bl	8009844 <GUI_ALLOC_LockH>
 80031ec:	4603      	mov	r3, r0
 80031ee:	a804      	add	r0, sp, #16
 80031f0:	f8d3 8054 	ldr.w	r8, [r3, #84]	; 0x54
 80031f4:	f840 3d0c 	str.w	r3, [r0, #-12]!
 80031f8:	6d9f      	ldr	r7, [r3, #88]	; 0x58
 80031fa:	6dde      	ldr	r6, [r3, #92]	; 0x5c
 80031fc:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 80031fe:	f006 fb2f 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003202:	4620      	mov	r0, r4
 8003204:	a902      	add	r1, sp, #8
 8003206:	f001 f94b 	bl	80044a0 <WM_GetInsideRectExScrollbar>
 800320a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800320e:	4498      	add	r8, r3
 8003210:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8003214:	f8ad 8008 	strh.w	r8, [sp, #8]
 8003218:	441f      	add	r7, r3
 800321a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800321e:	f8ad 700a 	strh.w	r7, [sp, #10]
 8003222:	1b9e      	subs	r6, r3, r6
 8003224:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8003228:	f8ad 600c 	strh.w	r6, [sp, #12]
 800322c:	1b5d      	subs	r5, r3, r5
 800322e:	4620      	mov	r0, r4
 8003230:	a902      	add	r1, sp, #8
 8003232:	f8ad 500e 	strh.w	r5, [sp, #14]
 8003236:	f002 f81b 	bl	8005270 <WM_InvalidateRect>
 800323a:	b004      	add	sp, #16
 800323c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003240 <GRAPH__AddValue>:
 8003240:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003242:	461d      	mov	r5, r3
 8003244:	6883      	ldr	r3, [r0, #8]
 8003246:	4604      	mov	r4, r0
 8003248:	460e      	mov	r6, r1
 800324a:	4617      	mov	r7, r2
 800324c:	b323      	cbz	r3, 8003298 <GRAPH__AddValue+0x58>
 800324e:	6900      	ldr	r0, [r0, #16]
 8003250:	6963      	ldr	r3, [r4, #20]
 8003252:	4298      	cmp	r0, r3
 8003254:	d10e      	bne.n	8003274 <GRAPH__AddValue+0x34>
 8003256:	1e42      	subs	r2, r0, #1
 8003258:	436a      	muls	r2, r5
 800325a:	4608      	mov	r0, r1
 800325c:	4429      	add	r1, r5
 800325e:	f00a f899 	bl	800d394 <memmove>
 8003262:	6920      	ldr	r0, [r4, #16]
 8003264:	3801      	subs	r0, #1
 8003266:	fb00 6005 	mla	r0, r0, r5, r6
 800326a:	4639      	mov	r1, r7
 800326c:	462a      	mov	r2, r5
 800326e:	f00a f891 	bl	800d394 <memmove>
 8003272:	e00c      	b.n	800328e <GRAPH__AddValue+0x4e>
 8003274:	1c43      	adds	r3, r0, #1
 8003276:	6123      	str	r3, [r4, #16]
 8003278:	fb00 1005 	mla	r0, r0, r5, r1
 800327c:	4611      	mov	r1, r2
 800327e:	462a      	mov	r2, r5
 8003280:	f00a f888 	bl	800d394 <memmove>
 8003284:	68e3      	ldr	r3, [r4, #12]
 8003286:	b113      	cbz	r3, 800328e <GRAPH__AddValue+0x4e>
 8003288:	4620      	mov	r0, r4
 800328a:	4798      	blx	r3
 800328c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800328e:	68a0      	ldr	r0, [r4, #8]
 8003290:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003294:	f7ff bfa5 	b.w	80031e2 <GRAPH__InvalidateGraph>
 8003298:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800329c <GRAPH_CreateUser>:
 800329c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800329e:	b087      	sub	sp, #28
 80032a0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80032a2:	9400      	str	r4, [sp, #0]
 80032a4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80032a6:	9401      	str	r4, [sp, #4]
 80032a8:	4c17      	ldr	r4, [pc, #92]	; (8003308 <GRAPH_CreateUser+0x6c>)
 80032aa:	9402      	str	r4, [sp, #8]
 80032ac:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80032ae:	346c      	adds	r4, #108	; 0x6c
 80032b0:	9403      	str	r4, [sp, #12]
 80032b2:	f002 f847 	bl	8005344 <WM_CreateWindowAsChild>
 80032b6:	4606      	mov	r6, r0
 80032b8:	b318      	cbz	r0, 8003302 <GRAPH_CreateUser+0x66>
 80032ba:	f007 fc0a 	bl	800aad2 <GUI_ARRAY_Create>
 80032be:	4605      	mov	r5, r0
 80032c0:	f007 fc07 	bl	800aad2 <GUI_ARRAY_Create>
 80032c4:	4604      	mov	r4, r0
 80032c6:	4630      	mov	r0, r6
 80032c8:	f006 fabc 	bl	8009844 <GUI_ALLOC_LockH>
 80032cc:	6645      	str	r5, [r0, #100]	; 0x64
 80032ce:	4d0f      	ldr	r5, [pc, #60]	; (800330c <GRAPH_CreateUser+0x70>)
 80032d0:	6684      	str	r4, [r0, #104]	; 0x68
 80032d2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80032d4:	9005      	str	r0, [sp, #20]
 80032d6:	2200      	movs	r2, #0
 80032d8:	f006 fdb2 	bl	8009e40 <WIDGET__Init>
 80032dc:	af06      	add	r7, sp, #24
 80032de:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80032e0:	f857 ed04 	ldr.w	lr, [r7, #-4]!
 80032e4:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 80032e8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80032ea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80032ec:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80032ee:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80032f2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80032f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80032f8:	f8ae 3078 	strh.w	r3, [lr, #120]	; 0x78
 80032fc:	4638      	mov	r0, r7
 80032fe:	f006 faaf 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003302:	4630      	mov	r0, r6
 8003304:	b007      	add	sp, #28
 8003306:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003308:	08002ced 	.word	0x08002ced
 800330c:	20000038 	.word	0x20000038

08003310 <GRAPH_CreateIndirect>:
 8003310:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003312:	b087      	sub	sp, #28
 8003314:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8003318:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 800331c:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8003320:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8003324:	9100      	str	r1, [sp, #0]
 8003326:	2100      	movs	r1, #0
 8003328:	9101      	str	r1, [sp, #4]
 800332a:	8a41      	ldrh	r1, [r0, #18]
 800332c:	9102      	str	r1, [sp, #8]
 800332e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8003332:	9103      	str	r1, [sp, #12]
 8003334:	6984      	ldr	r4, [r0, #24]
 8003336:	9404      	str	r4, [sp, #16]
 8003338:	eb0e 0002 	add.w	r0, lr, r2
 800333c:	18f9      	adds	r1, r7, r3
 800333e:	4632      	mov	r2, r6
 8003340:	462b      	mov	r3, r5
 8003342:	f7ff ffab 	bl	800329c <GRAPH_CreateUser>
 8003346:	b007      	add	sp, #28
 8003348:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800334a <GRAPH_AttachData>:
 800334a:	b530      	push	{r4, r5, lr}
 800334c:	b085      	sub	sp, #20
 800334e:	4604      	mov	r4, r0
 8003350:	9101      	str	r1, [sp, #4]
 8003352:	b1d0      	cbz	r0, 800338a <GRAPH_AttachData+0x40>
 8003354:	f006 fa76 	bl	8009844 <GUI_ALLOC_LockH>
 8003358:	ab04      	add	r3, sp, #16
 800335a:	6e45      	ldr	r5, [r0, #100]	; 0x64
 800335c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8003360:	4618      	mov	r0, r3
 8003362:	f006 fa7d 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003366:	9801      	ldr	r0, [sp, #4]
 8003368:	f006 fa6c 	bl	8009844 <GUI_ALLOC_LockH>
 800336c:	4602      	mov	r2, r0
 800336e:	a804      	add	r0, sp, #16
 8003370:	6094      	str	r4, [r2, #8]
 8003372:	f840 2d08 	str.w	r2, [r0, #-8]!
 8003376:	f006 fa73 	bl	8009860 <GUI_ALLOC_UnlockH>
 800337a:	4628      	mov	r0, r5
 800337c:	a901      	add	r1, sp, #4
 800337e:	2204      	movs	r2, #4
 8003380:	f007 fb21 	bl	800a9c6 <GUI_ARRAY_AddItem>
 8003384:	4620      	mov	r0, r4
 8003386:	f001 ffaf 	bl	80052e8 <WM_InvalidateWindow>
 800338a:	b005      	add	sp, #20
 800338c:	bd30      	pop	{r4, r5, pc}

0800338e <GRAPH_SetGridVis>:
 800338e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003390:	460e      	mov	r6, r1
 8003392:	4605      	mov	r5, r0
 8003394:	b178      	cbz	r0, 80033b6 <GRAPH_SetGridVis+0x28>
 8003396:	f006 fa55 	bl	8009844 <GUI_ALLOC_LockH>
 800339a:	f890 406c 	ldrb.w	r4, [r0, #108]	; 0x6c
 800339e:	9001      	str	r0, [sp, #4]
 80033a0:	42b4      	cmp	r4, r6
 80033a2:	d004      	beq.n	80033ae <GRAPH_SetGridVis+0x20>
 80033a4:	f880 606c 	strb.w	r6, [r0, #108]	; 0x6c
 80033a8:	4628      	mov	r0, r5
 80033aa:	f001 ff9d 	bl	80052e8 <WM_InvalidateWindow>
 80033ae:	a801      	add	r0, sp, #4
 80033b0:	f006 fa56 	bl	8009860 <GUI_ALLOC_UnlockH>
 80033b4:	e000      	b.n	80033b8 <GRAPH_SetGridVis+0x2a>
 80033b6:	4604      	mov	r4, r0
 80033b8:	4620      	mov	r0, r4
 80033ba:	b002      	add	sp, #8
 80033bc:	bd70      	pop	{r4, r5, r6, pc}

080033be <GRAPH_SetBorder>:
 80033be:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80033c2:	460f      	mov	r7, r1
 80033c4:	4690      	mov	r8, r2
 80033c6:	461d      	mov	r5, r3
 80033c8:	4606      	mov	r6, r0
 80033ca:	b198      	cbz	r0, 80033f4 <GRAPH_SetBorder+0x36>
 80033cc:	f006 fa3a 	bl	8009844 <GUI_ALLOC_LockH>
 80033d0:	4604      	mov	r4, r0
 80033d2:	a802      	add	r0, sp, #8
 80033d4:	9b08      	ldr	r3, [sp, #32]
 80033d6:	6623      	str	r3, [r4, #96]	; 0x60
 80033d8:	f840 4d04 	str.w	r4, [r0, #-4]!
 80033dc:	6567      	str	r7, [r4, #84]	; 0x54
 80033de:	f8c4 8058 	str.w	r8, [r4, #88]	; 0x58
 80033e2:	65e5      	str	r5, [r4, #92]	; 0x5c
 80033e4:	f006 fa3c 	bl	8009860 <GUI_ALLOC_UnlockH>
 80033e8:	4630      	mov	r0, r6
 80033ea:	f7ff fc05 	bl	8002bf8 <_ManageScrollbars>
 80033ee:	4630      	mov	r0, r6
 80033f0:	f001 ff7a 	bl	80052e8 <WM_InvalidateWindow>
 80033f4:	b002      	add	sp, #8
 80033f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080033fa <FRAMEWIN__GetBorderSize>:
 80033fa:	b570      	push	{r4, r5, r6, lr}
 80033fc:	b08a      	sub	sp, #40	; 0x28
 80033fe:	4605      	mov	r5, r0
 8003400:	460c      	mov	r4, r1
 8003402:	f006 fa1f 	bl	8009844 <GUI_ALLOC_LockH>
 8003406:	ab0a      	add	r3, sp, #40	; 0x28
 8003408:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 800340a:	f843 0d28 	str.w	r0, [r3, #-40]!
 800340e:	4668      	mov	r0, sp
 8003410:	6896      	ldr	r6, [r2, #8]
 8003412:	f006 fa25 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003416:	9501      	str	r5, [sp, #4]
 8003418:	2c03      	cmp	r4, #3
 800341a:	d80b      	bhi.n	8003434 <FRAMEWIN__GetBorderSize+0x3a>
 800341c:	e8df f004 	tbb	[pc, r4]
 8003420:	08060402 	.word	0x08060402
 8003424:	2318      	movs	r3, #24
 8003426:	e004      	b.n	8003432 <FRAMEWIN__GetBorderSize+0x38>
 8003428:	2316      	movs	r3, #22
 800342a:	e002      	b.n	8003432 <FRAMEWIN__GetBorderSize+0x38>
 800342c:	2315      	movs	r3, #21
 800342e:	e000      	b.n	8003432 <FRAMEWIN__GetBorderSize+0x38>
 8003430:	2317      	movs	r3, #23
 8003432:	9302      	str	r3, [sp, #8]
 8003434:	6873      	ldr	r3, [r6, #4]
 8003436:	a801      	add	r0, sp, #4
 8003438:	4798      	blx	r3
 800343a:	b00a      	add	sp, #40	; 0x28
 800343c:	bd70      	pop	{r4, r5, r6, pc}

0800343e <_SetActive>:
 800343e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003440:	4604      	mov	r4, r0
 8003442:	460d      	mov	r5, r1
 8003444:	f006 f9fe 	bl	8009844 <GUI_ALLOC_LockH>
 8003448:	9001      	str	r0, [sp, #4]
 800344a:	f8b0 207c 	ldrh.w	r2, [r0, #124]	; 0x7c
 800344e:	b125      	cbz	r5, 800345a <_SetActive+0x1c>
 8003450:	0711      	lsls	r1, r2, #28
 8003452:	d40b      	bmi.n	800346c <_SetActive+0x2e>
 8003454:	f042 0208 	orr.w	r2, r2, #8
 8003458:	e003      	b.n	8003462 <_SetActive+0x24>
 800345a:	0713      	lsls	r3, r2, #28
 800345c:	d506      	bpl.n	800346c <_SetActive+0x2e>
 800345e:	f022 0208 	bic.w	r2, r2, #8
 8003462:	f8a0 207c 	strh.w	r2, [r0, #124]	; 0x7c
 8003466:	4620      	mov	r0, r4
 8003468:	f001 ff3e 	bl	80052e8 <WM_InvalidateWindow>
 800346c:	a801      	add	r0, sp, #4
 800346e:	f006 f9f7 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003472:	b003      	add	sp, #12
 8003474:	bd30      	pop	{r4, r5, pc}

08003476 <FRAMEWIN__cbClient>:
 8003476:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800347a:	6845      	ldr	r5, [r0, #4]
 800347c:	b087      	sub	sp, #28
 800347e:	4604      	mov	r4, r0
 8003480:	4628      	mov	r0, r5
 8003482:	f000 ff99 	bl	80043b8 <WM_GetParent>
 8003486:	4681      	mov	r9, r0
 8003488:	f006 f9dc 	bl	8009844 <GUI_ALLOC_LockH>
 800348c:	4603      	mov	r3, r0
 800348e:	a806      	add	r0, sp, #24
 8003490:	6e5f      	ldr	r7, [r3, #100]	; 0x64
 8003492:	f840 3d14 	str.w	r3, [r0, #-20]!
 8003496:	6c9e      	ldr	r6, [r3, #72]	; 0x48
 8003498:	f8d3 8080 	ldr.w	r8, [r3, #128]	; 0x80
 800349c:	f006 f9e0 	bl	8009860 <GUI_ALLOC_UnlockH>
 80034a0:	6823      	ldr	r3, [r4, #0]
 80034a2:	2b17      	cmp	r3, #23
 80034a4:	d053      	beq.n	800354e <FRAMEWIN__cbClient+0xd8>
 80034a6:	dc09      	bgt.n	80034bc <FRAMEWIN__cbClient+0x46>
 80034a8:	2b0f      	cmp	r3, #15
 80034aa:	d014      	beq.n	80034d6 <FRAMEWIN__cbClient+0x60>
 80034ac:	dc02      	bgt.n	80034b4 <FRAMEWIN__cbClient+0x3e>
 80034ae:	2b0e      	cmp	r3, #14
 80034b0:	d034      	beq.n	800351c <FRAMEWIN__cbClient+0xa6>
 80034b2:	e046      	b.n	8003542 <FRAMEWIN__cbClient+0xcc>
 80034b4:	3b14      	subs	r3, #20
 80034b6:	2b01      	cmp	r3, #1
 80034b8:	d949      	bls.n	800354e <FRAMEWIN__cbClient+0xd8>
 80034ba:	e042      	b.n	8003542 <FRAMEWIN__cbClient+0xcc>
 80034bc:	2b1f      	cmp	r3, #31
 80034be:	d028      	beq.n	8003512 <FRAMEWIN__cbClient+0x9c>
 80034c0:	dc02      	bgt.n	80034c8 <FRAMEWIN__cbClient+0x52>
 80034c2:	2b1e      	cmp	r3, #30
 80034c4:	d01a      	beq.n	80034fc <FRAMEWIN__cbClient+0x86>
 80034c6:	e03c      	b.n	8003542 <FRAMEWIN__cbClient+0xcc>
 80034c8:	2b22      	cmp	r3, #34	; 0x22
 80034ca:	d038      	beq.n	800353e <FRAMEWIN__cbClient+0xc8>
 80034cc:	2b31      	cmp	r3, #49	; 0x31
 80034ce:	d138      	bne.n	8003542 <FRAMEWIN__cbClient+0xcc>
 80034d0:	2300      	movs	r3, #0
 80034d2:	60e3      	str	r3, [r4, #12]
 80034d4:	e03e      	b.n	8003554 <FRAMEWIN__cbClient+0xde>
 80034d6:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 80034da:	429e      	cmp	r6, r3
 80034dc:	d004      	beq.n	80034e8 <FRAMEWIN__cbClient+0x72>
 80034de:	4630      	mov	r0, r6
 80034e0:	f003 ffa2 	bl	8007428 <LCD_SetBkColor>
 80034e4:	f005 fbf6 	bl	8008cd4 <GUI_Clear>
 80034e8:	2f00      	cmp	r7, #0
 80034ea:	d033      	beq.n	8003554 <FRAMEWIN__cbClient+0xde>
 80034ec:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80034f0:	ae02      	add	r6, sp, #8
 80034f2:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 80034f6:	9503      	str	r5, [sp, #12]
 80034f8:	4630      	mov	r0, r6
 80034fa:	e026      	b.n	800354a <FRAMEWIN__cbClient+0xd4>
 80034fc:	68e3      	ldr	r3, [r4, #12]
 80034fe:	b34b      	cbz	r3, 8003554 <FRAMEWIN__cbClient+0xde>
 8003500:	f1b8 0f00 	cmp.w	r8, #0
 8003504:	d017      	beq.n	8003536 <FRAMEWIN__cbClient+0xc0>
 8003506:	45a8      	cmp	r8, r5
 8003508:	d015      	beq.n	8003536 <FRAMEWIN__cbClient+0xc0>
 800350a:	4640      	mov	r0, r8
 800350c:	f001 f904 	bl	8004718 <WM_SetFocus>
 8003510:	e020      	b.n	8003554 <FRAMEWIN__cbClient+0xde>
 8003512:	4648      	mov	r0, r9
 8003514:	4621      	mov	r1, r4
 8003516:	f006 fcd8 	bl	8009eca <WIDGET_HandleActive>
 800351a:	e01b      	b.n	8003554 <FRAMEWIN__cbClient+0xde>
 800351c:	68e3      	ldr	r3, [r4, #12]
 800351e:	685a      	ldr	r2, [r3, #4]
 8003520:	2a00      	cmp	r2, #0
 8003522:	dd0e      	ble.n	8003542 <FRAMEWIN__cbClient+0xcc>
 8003524:	681b      	ldr	r3, [r3, #0]
 8003526:	2b09      	cmp	r3, #9
 8003528:	d005      	beq.n	8003536 <FRAMEWIN__cbClient+0xc0>
 800352a:	2b0a      	cmp	r3, #10
 800352c:	d109      	bne.n	8003542 <FRAMEWIN__cbClient+0xcc>
 800352e:	4628      	mov	r0, r5
 8003530:	f000 fcef 	bl	8003f12 <WM_SetFocusOnPrevChild>
 8003534:	e00e      	b.n	8003554 <FRAMEWIN__cbClient+0xde>
 8003536:	4628      	mov	r0, r5
 8003538:	f000 fd1a 	bl	8003f70 <WM_SetFocusOnNextChild>
 800353c:	e00a      	b.n	8003554 <FRAMEWIN__cbClient+0xde>
 800353e:	60e6      	str	r6, [r4, #12]
 8003540:	e008      	b.n	8003554 <FRAMEWIN__cbClient+0xde>
 8003542:	b127      	cbz	r7, 800354e <FRAMEWIN__cbClient+0xd8>
 8003544:	f8c4 9004 	str.w	r9, [r4, #4]
 8003548:	4620      	mov	r0, r4
 800354a:	47b8      	blx	r7
 800354c:	e002      	b.n	8003554 <FRAMEWIN__cbClient+0xde>
 800354e:	4620      	mov	r0, r4
 8003550:	f002 faf8 	bl	8005b44 <WM_DefaultProc>
 8003554:	b007      	add	sp, #28
 8003556:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800355a <FRAMEWIN__CalcTitleHeight>:
 800355a:	b508      	push	{r3, lr}
 800355c:	4603      	mov	r3, r0
 800355e:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 8003560:	f000 0020 	and.w	r0, r0, #32
 8003564:	b280      	uxth	r0, r0
 8003566:	b130      	cbz	r0, 8003576 <FRAMEWIN__CalcTitleHeight+0x1c>
 8003568:	f9b3 0054 	ldrsh.w	r0, [r3, #84]	; 0x54
 800356c:	b918      	cbnz	r0, 8003576 <FRAMEWIN__CalcTitleHeight+0x1c>
 800356e:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8003570:	f005 fc6a 	bl	8008e48 <GUI_GetYSizeOfFont>
 8003574:	3002      	adds	r0, #2
 8003576:	bd08      	pop	{r3, pc}

08003578 <FRAMEWIN__GetTitleLimits>:
 8003578:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800357c:	4607      	mov	r7, r0
 800357e:	460d      	mov	r5, r1
 8003580:	4616      	mov	r6, r2
 8003582:	f006 f95f 	bl	8009844 <GUI_ALLOC_LockH>
 8003586:	4603      	mov	r3, r0
 8003588:	a802      	add	r0, sp, #8
 800358a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800358c:	f840 3d08 	str.w	r3, [r0, #-8]!
 8003590:	f8d2 a008 	ldr.w	sl, [r2, #8]
 8003594:	f8b3 8000 	ldrh.w	r8, [r3]
 8003598:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800359c:	4668      	mov	r0, sp
 800359e:	f006 f95f 	bl	8009860 <GUI_ALLOC_UnlockH>
 80035a2:	f8da 3000 	ldr.w	r3, [sl]
 80035a6:	4638      	mov	r0, r7
 80035a8:	2100      	movs	r1, #0
 80035aa:	4798      	blx	r3
 80035ac:	4682      	mov	sl, r0
 80035ae:	4638      	mov	r0, r7
 80035b0:	f000 fe61 	bl	8004276 <WM_GetFirstChild>
 80035b4:	4604      	mov	r4, r0
 80035b6:	b340      	cbz	r0, 800360a <FRAMEWIN__GetTitleLimits+0x92>
 80035b8:	4620      	mov	r0, r4
 80035ba:	f006 f943 	bl	8009844 <GUI_ALLOC_LockH>
 80035be:	4603      	mov	r3, r0
 80035c0:	fa0f f289 	sxth.w	r2, r9
 80035c4:	f9b3 7002 	ldrsh.w	r7, [r3, #2]
 80035c8:	9001      	str	r0, [sp, #4]
 80035ca:	1aba      	subs	r2, r7, r2
 80035cc:	4552      	cmp	r2, sl
 80035ce:	8800      	ldrh	r0, [r0, #0]
 80035d0:	8899      	ldrh	r1, [r3, #4]
 80035d2:	d113      	bne.n	80035fc <FRAMEWIN__GetTitleLimits+0x84>
 80035d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80035d6:	061b      	lsls	r3, r3, #24
 80035d8:	fa0f f288 	sxth.w	r2, r8
 80035dc:	d507      	bpl.n	80035ee <FRAMEWIN__GetTitleLimits+0x76>
 80035de:	b203      	sxth	r3, r0
 80035e0:	1a9a      	subs	r2, r3, r2
 80035e2:	6833      	ldr	r3, [r6, #0]
 80035e4:	429a      	cmp	r2, r3
 80035e6:	dc09      	bgt.n	80035fc <FRAMEWIN__GetTitleLimits+0x84>
 80035e8:	3a01      	subs	r2, #1
 80035ea:	6032      	str	r2, [r6, #0]
 80035ec:	e006      	b.n	80035fc <FRAMEWIN__GetTitleLimits+0x84>
 80035ee:	b20b      	sxth	r3, r1
 80035f0:	1a9b      	subs	r3, r3, r2
 80035f2:	682a      	ldr	r2, [r5, #0]
 80035f4:	4293      	cmp	r3, r2
 80035f6:	bfa4      	itt	ge
 80035f8:	3301      	addge	r3, #1
 80035fa:	602b      	strge	r3, [r5, #0]
 80035fc:	a801      	add	r0, sp, #4
 80035fe:	f006 f92f 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003602:	4620      	mov	r0, r4
 8003604:	f000 feaf 	bl	8004366 <WM_GetNextSibling>
 8003608:	e7d4      	b.n	80035b4 <FRAMEWIN__GetTitleLimits+0x3c>
 800360a:	b002      	add	sp, #8
 800360c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08003610 <FRAMEWIN__CalcPositions>:
 8003610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003614:	b087      	sub	sp, #28
 8003616:	4604      	mov	r4, r0
 8003618:	460f      	mov	r7, r1
 800361a:	f006 f913 	bl	8009844 <GUI_ALLOC_LockH>
 800361e:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8003620:	9003      	str	r0, [sp, #12]
 8003622:	6895      	ldr	r5, [r2, #8]
 8003624:	2101      	movs	r1, #1
 8003626:	682a      	ldr	r2, [r5, #0]
 8003628:	4620      	mov	r0, r4
 800362a:	4790      	blx	r2
 800362c:	682a      	ldr	r2, [r5, #0]
 800362e:	2103      	movs	r1, #3
 8003630:	4683      	mov	fp, r0
 8003632:	4620      	mov	r0, r4
 8003634:	4790      	blx	r2
 8003636:	682a      	ldr	r2, [r5, #0]
 8003638:	2102      	movs	r1, #2
 800363a:	4681      	mov	r9, r0
 800363c:	4620      	mov	r0, r4
 800363e:	4790      	blx	r2
 8003640:	682a      	ldr	r2, [r5, #0]
 8003642:	9001      	str	r0, [sp, #4]
 8003644:	2100      	movs	r1, #0
 8003646:	4620      	mov	r0, r4
 8003648:	4790      	blx	r2
 800364a:	4605      	mov	r5, r0
 800364c:	9803      	ldr	r0, [sp, #12]
 800364e:	f001 f943 	bl	80048d8 <WM__GetWindowSizeX>
 8003652:	4682      	mov	sl, r0
 8003654:	9803      	ldr	r0, [sp, #12]
 8003656:	f001 f946 	bl	80048e6 <WM__GetWindowSizeY>
 800365a:	4680      	mov	r8, r0
 800365c:	9803      	ldr	r0, [sp, #12]
 800365e:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 8003660:	f006 0620 	and.w	r6, r6, #32
 8003664:	b2b6      	uxth	r6, r6
 8003666:	b10e      	cbz	r6, 800366c <FRAMEWIN__CalcPositions+0x5c>
 8003668:	f9b0 6058 	ldrsh.w	r6, [r0, #88]	; 0x58
 800366c:	f7ff ff75 	bl	800355a <FRAMEWIN__CalcTitleHeight>
 8003670:	9903      	ldr	r1, [sp, #12]
 8003672:	4602      	mov	r2, r0
 8003674:	6ec8      	ldr	r0, [r1, #108]	; 0x6c
 8003676:	b118      	cbz	r0, 8003680 <FRAMEWIN__CalcPositions+0x70>
 8003678:	9200      	str	r2, [sp, #0]
 800367a:	f001 f950 	bl	800491e <WM_GetWindowSizeY>
 800367e:	9a00      	ldr	r2, [sp, #0]
 8003680:	803a      	strh	r2, [r7, #0]
 8003682:	b292      	uxth	r2, r2
 8003684:	b2a9      	uxth	r1, r5
 8003686:	4416      	add	r6, r2
 8003688:	440e      	add	r6, r1
 800368a:	8078      	strh	r0, [r7, #2]
 800368c:	4430      	add	r0, r6
 800368e:	80f8      	strh	r0, [r7, #6]
 8003690:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003694:	9801      	ldr	r0, [sp, #4]
 8003696:	81fd      	strh	r5, [r7, #14]
 8003698:	3901      	subs	r1, #1
 800369a:	ebc9 090a 	rsb	r9, r9, sl
 800369e:	f108 38ff 	add.w	r8, r8, #4294967295
 80036a2:	ebc0 0308 	rsb	r3, r0, r8
 80036a6:	440a      	add	r2, r1
 80036a8:	fa1f fb8b 	uxth.w	fp, fp
 80036ac:	fa1f f989 	uxth.w	r9, r9
 80036b0:	817b      	strh	r3, [r7, #10]
 80036b2:	827a      	strh	r2, [r7, #18]
 80036b4:	f8a7 b004 	strh.w	fp, [r7, #4]
 80036b8:	f8a7 9008 	strh.w	r9, [r7, #8]
 80036bc:	f8a7 b00c 	strh.w	fp, [r7, #12]
 80036c0:	f8a7 9010 	strh.w	r9, [r7, #16]
 80036c4:	a803      	add	r0, sp, #12
 80036c6:	f006 f8cb 	bl	8009860 <GUI_ALLOC_UnlockH>
 80036ca:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 80036ce:	9204      	str	r2, [sp, #16]
 80036d0:	f9b7 2010 	ldrsh.w	r2, [r7, #16]
 80036d4:	9205      	str	r2, [sp, #20]
 80036d6:	4620      	mov	r0, r4
 80036d8:	aa05      	add	r2, sp, #20
 80036da:	a904      	add	r1, sp, #16
 80036dc:	f7ff ff4c 	bl	8003578 <FRAMEWIN__GetTitleLimits>
 80036e0:	9a04      	ldr	r2, [sp, #16]
 80036e2:	81ba      	strh	r2, [r7, #12]
 80036e4:	9a05      	ldr	r2, [sp, #20]
 80036e6:	823a      	strh	r2, [r7, #16]
 80036e8:	b007      	add	sp, #28
 80036ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080036ee <FRAMEWIN_SetText>:
 80036ee:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80036f0:	460d      	mov	r5, r1
 80036f2:	4604      	mov	r4, r0
 80036f4:	b1c0      	cbz	r0, 8003728 <FRAMEWIN_SetText+0x3a>
 80036f6:	f006 f8a5 	bl	8009844 <GUI_ALLOC_LockH>
 80036fa:	6f03      	ldr	r3, [r0, #112]	; 0x70
 80036fc:	9000      	str	r0, [sp, #0]
 80036fe:	4668      	mov	r0, sp
 8003700:	9301      	str	r3, [sp, #4]
 8003702:	f006 f8ad 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003706:	a801      	add	r0, sp, #4
 8003708:	4629      	mov	r1, r5
 800370a:	f003 ff63 	bl	80075d4 <GUI__SetText>
 800370e:	b158      	cbz	r0, 8003728 <FRAMEWIN_SetText+0x3a>
 8003710:	4620      	mov	r0, r4
 8003712:	f006 f897 	bl	8009844 <GUI_ALLOC_LockH>
 8003716:	9b01      	ldr	r3, [sp, #4]
 8003718:	9000      	str	r0, [sp, #0]
 800371a:	6703      	str	r3, [r0, #112]	; 0x70
 800371c:	4668      	mov	r0, sp
 800371e:	f006 f89f 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003722:	4620      	mov	r0, r4
 8003724:	f001 fde0 	bl	80052e8 <WM_InvalidateWindow>
 8003728:	b003      	add	sp, #12
 800372a:	bd30      	pop	{r4, r5, pc}

0800372c <FRAMEWIN_CreateUser>:
 800372c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003730:	b08b      	sub	sp, #44	; 0x2c
 8003732:	f8dd 904c 	ldr.w	r9, [sp, #76]	; 0x4c
 8003736:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8003738:	9400      	str	r4, [sp, #0]
 800373a:	f449 5480 	orr.w	r4, r9, #4096	; 0x1000
 800373e:	9401      	str	r4, [sp, #4]
 8003740:	4c33      	ldr	r4, [pc, #204]	; (8003810 <FRAMEWIN_CreateUser+0xe4>)
 8003742:	9402      	str	r4, [sp, #8]
 8003744:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8003746:	3460      	adds	r4, #96	; 0x60
 8003748:	9403      	str	r4, [sp, #12]
 800374a:	f001 fdfb 	bl	8005344 <WM_CreateWindowAsChild>
 800374e:	4606      	mov	r6, r0
 8003750:	2800      	cmp	r0, #0
 8003752:	d058      	beq.n	8003806 <FRAMEWIN_CreateUser+0xda>
 8003754:	f006 f876 	bl	8009844 <GUI_ALLOC_LockH>
 8003758:	4d2e      	ldr	r5, [pc, #184]	; (8003814 <FRAMEWIN_CreateUser+0xe8>)
 800375a:	9915      	ldr	r1, [sp, #84]	; 0x54
 800375c:	9004      	str	r0, [sp, #16]
 800375e:	2230      	movs	r2, #48	; 0x30
 8003760:	f006 fb6e 	bl	8009e40 <WIDGET__Init>
 8003764:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8003768:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800376a:	f858 7d18 	ldr.w	r7, [r8, #-24]!
 800376e:	f107 0434 	add.w	r4, r7, #52	; 0x34
 8003772:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003774:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003776:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003778:	e895 0003 	ldmia.w	r5, {r0, r1}
 800377c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800377e:	4d26      	ldr	r5, [pc, #152]	; (8003818 <FRAMEWIN_CreateUser+0xec>)
 8003780:	e884 0003 	stmia.w	r4, {r0, r1}
 8003784:	667b      	str	r3, [r7, #100]	; 0x64
 8003786:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8003788:	f8a7 307c 	strh.w	r3, [r7, #124]	; 0x7c
 800378c:	2400      	movs	r4, #0
 800378e:	682b      	ldr	r3, [r5, #0]
 8003790:	65fb      	str	r3, [r7, #92]	; 0x5c
 8003792:	f8c7 4080 	str.w	r4, [r7, #128]	; 0x80
 8003796:	66fc      	str	r4, [r7, #108]	; 0x6c
 8003798:	f8c7 4088 	str.w	r4, [r7, #136]	; 0x88
 800379c:	4640      	mov	r0, r8
 800379e:	f006 f85f 	bl	8009860 <GUI_ALLOC_UnlockH>
 80037a2:	4630      	mov	r0, r6
 80037a4:	a905      	add	r1, sp, #20
 80037a6:	f7ff ff33 	bl	8003610 <FRAMEWIN__CalcPositions>
 80037aa:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 80037ae:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 80037b2:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 80037b6:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80037ba:	9403      	str	r4, [sp, #12]
 80037bc:	f241 7782 	movw	r7, #6018	; 0x1782
 80037c0:	1a5b      	subs	r3, r3, r1
 80037c2:	1a12      	subs	r2, r2, r0
 80037c4:	9701      	str	r7, [sp, #4]
 80037c6:	4f15      	ldr	r7, [pc, #84]	; (800381c <FRAMEWIN_CreateUser+0xf0>)
 80037c8:	9600      	str	r6, [sp, #0]
 80037ca:	3201      	adds	r2, #1
 80037cc:	3301      	adds	r3, #1
 80037ce:	9702      	str	r7, [sp, #8]
 80037d0:	f001 fdb8 	bl	8005344 <WM_CreateWindowAsChild>
 80037d4:	682b      	ldr	r3, [r5, #0]
 80037d6:	4604      	mov	r4, r0
 80037d8:	685b      	ldr	r3, [r3, #4]
 80037da:	4630      	mov	r0, r6
 80037dc:	4798      	blx	r3
 80037de:	4630      	mov	r0, r6
 80037e0:	f006 f830 	bl	8009844 <GUI_ALLOC_LockH>
 80037e4:	9004      	str	r0, [sp, #16]
 80037e6:	6684      	str	r4, [r0, #104]	; 0x68
 80037e8:	4640      	mov	r0, r8
 80037ea:	f006 f839 	bl	8009860 <GUI_ALLOC_UnlockH>
 80037ee:	f242 0304 	movw	r3, #8196	; 0x2004
 80037f2:	ea09 0303 	and.w	r3, r9, r3
 80037f6:	b913      	cbnz	r3, 80037fe <FRAMEWIN_CreateUser+0xd2>
 80037f8:	4630      	mov	r0, r6
 80037fa:	f000 fcf5 	bl	80041e8 <WM_DisableMemdev>
 80037fe:	4630      	mov	r0, r6
 8003800:	9916      	ldr	r1, [sp, #88]	; 0x58
 8003802:	f7ff ff74 	bl	80036ee <FRAMEWIN_SetText>
 8003806:	4630      	mov	r0, r6
 8003808:	b00b      	add	sp, #44	; 0x2c
 800380a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800380e:	bf00      	nop
 8003810:	0800386b 	.word	0x0800386b
 8003814:	20000068 	.word	0x20000068
 8003818:	20000090 	.word	0x20000090
 800381c:	08003477 	.word	0x08003477

08003820 <FRAMEWIN_CreateIndirect>:
 8003820:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003822:	b089      	sub	sp, #36	; 0x24
 8003824:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8003828:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 800382c:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8003830:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8003834:	9100      	str	r1, [sp, #0]
 8003836:	2100      	movs	r1, #0
 8003838:	9101      	str	r1, [sp, #4]
 800383a:	8a41      	ldrh	r1, [r0, #18]
 800383c:	9102      	str	r1, [sp, #8]
 800383e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8003842:	9103      	str	r1, [sp, #12]
 8003844:	6844      	ldr	r4, [r0, #4]
 8003846:	9404      	str	r4, [sp, #16]
 8003848:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800384a:	9405      	str	r4, [sp, #20]
 800384c:	6984      	ldr	r4, [r0, #24]
 800384e:	9406      	str	r4, [sp, #24]
 8003850:	eb0e 0002 	add.w	r0, lr, r2
 8003854:	18f9      	adds	r1, r7, r3
 8003856:	4632      	mov	r2, r6
 8003858:	462b      	mov	r3, r5
 800385a:	f7ff ff67 	bl	800372c <FRAMEWIN_CreateUser>
 800385e:	b009      	add	sp, #36	; 0x24
 8003860:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003862 <FRAMEWIN_SetActive>:
 8003862:	b108      	cbz	r0, 8003868 <FRAMEWIN_SetActive+0x6>
 8003864:	f7ff bdeb 	b.w	800343e <_SetActive>
 8003868:	4770      	bx	lr

0800386a <FRAMEWIN_Callback>:
 800386a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800386e:	6844      	ldr	r4, [r0, #4]
 8003870:	b086      	sub	sp, #24
 8003872:	4605      	mov	r5, r0
 8003874:	4620      	mov	r0, r4
 8003876:	f005 ffe5 	bl	8009844 <GUI_ALLOC_LockH>
 800387a:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 800387c:	9000      	str	r0, [sp, #0]
 800387e:	f8d0 7088 	ldr.w	r7, [r0, #136]	; 0x88
 8003882:	f8d0 6080 	ldr.w	r6, [r0, #128]	; 0x80
 8003886:	f8d0 8068 	ldr.w	r8, [r0, #104]	; 0x68
 800388a:	f8b0 907c 	ldrh.w	r9, [r0, #124]	; 0x7c
 800388e:	b113      	cbz	r3, 8003896 <FRAMEWIN_Callback+0x2c>
 8003890:	f8d3 a000 	ldr.w	sl, [r3]
 8003894:	e000      	b.n	8003898 <FRAMEWIN_Callback+0x2e>
 8003896:	469a      	mov	sl, r3
 8003898:	4668      	mov	r0, sp
 800389a:	f005 ffe1 	bl	8009860 <GUI_ALLOC_UnlockH>
 800389e:	b13f      	cbz	r7, 80038b0 <FRAMEWIN_Callback+0x46>
 80038a0:	687b      	ldr	r3, [r7, #4]
 80038a2:	4628      	mov	r0, r5
 80038a4:	4798      	blx	r3
 80038a6:	2800      	cmp	r0, #0
 80038a8:	f040 811d 	bne.w	8003ae6 <FRAMEWIN_Callback+0x27c>
 80038ac:	683f      	ldr	r7, [r7, #0]
 80038ae:	e7f6      	b.n	800389e <FRAMEWIN_Callback+0x34>
 80038b0:	682b      	ldr	r3, [r5, #0]
 80038b2:	2b17      	cmp	r3, #23
 80038b4:	f000 808a 	beq.w	80039cc <FRAMEWIN_Callback+0x162>
 80038b8:	dc18      	bgt.n	80038ec <FRAMEWIN_Callback+0x82>
 80038ba:	2b0f      	cmp	r3, #15
 80038bc:	d043      	beq.n	8003946 <FRAMEWIN_Callback+0xdc>
 80038be:	dc06      	bgt.n	80038ce <FRAMEWIN_Callback+0x64>
 80038c0:	2b0b      	cmp	r3, #11
 80038c2:	f000 80fe 	beq.w	8003ac2 <FRAMEWIN_Callback+0x258>
 80038c6:	2b0d      	cmp	r3, #13
 80038c8:	f000 80c0 	beq.w	8003a4c <FRAMEWIN_Callback+0x1e2>
 80038cc:	e103      	b.n	8003ad6 <FRAMEWIN_Callback+0x26c>
 80038ce:	2b11      	cmp	r3, #17
 80038d0:	d01b      	beq.n	800390a <FRAMEWIN_Callback+0xa0>
 80038d2:	2b14      	cmp	r3, #20
 80038d4:	f040 80ff 	bne.w	8003ad6 <FRAMEWIN_Callback+0x26c>
 80038d8:	4620      	mov	r0, r4
 80038da:	a901      	add	r1, sp, #4
 80038dc:	f7ff fe98 	bl	8003610 <FRAMEWIN__CalcPositions>
 80038e0:	ab02      	add	r3, sp, #8
 80038e2:	cb03      	ldmia	r3!, {r0, r1}
 80038e4:	68ea      	ldr	r2, [r5, #12]
 80038e6:	6010      	str	r0, [r2, #0]
 80038e8:	6051      	str	r1, [r2, #4]
 80038ea:	e0fc      	b.n	8003ae6 <FRAMEWIN_Callback+0x27c>
 80038ec:	2b26      	cmp	r3, #38	; 0x26
 80038ee:	d070      	beq.n	80039d2 <FRAMEWIN_Callback+0x168>
 80038f0:	dc05      	bgt.n	80038fe <FRAMEWIN_Callback+0x94>
 80038f2:	2b1e      	cmp	r3, #30
 80038f4:	d07b      	beq.n	80039ee <FRAMEWIN_Callback+0x184>
 80038f6:	2b20      	cmp	r3, #32
 80038f8:	f000 80b6 	beq.w	8003a68 <FRAMEWIN_Callback+0x1fe>
 80038fc:	e0eb      	b.n	8003ad6 <FRAMEWIN_Callback+0x26c>
 80038fe:	2b2a      	cmp	r3, #42	; 0x2a
 8003900:	d013      	beq.n	800392a <FRAMEWIN_Callback+0xc0>
 8003902:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8003906:	d025      	beq.n	8003954 <FRAMEWIN_Callback+0xea>
 8003908:	e0e5      	b.n	8003ad6 <FRAMEWIN_Callback+0x26c>
 800390a:	4620      	mov	r0, r4
 800390c:	68ee      	ldr	r6, [r5, #12]
 800390e:	f005 ff99 	bl	8009844 <GUI_ALLOC_LockH>
 8003912:	9001      	str	r0, [sp, #4]
 8003914:	8933      	ldrh	r3, [r6, #8]
 8003916:	2b01      	cmp	r3, #1
 8003918:	d105      	bne.n	8003926 <FRAMEWIN_Callback+0xbc>
 800391a:	f8b0 307c 	ldrh.w	r3, [r0, #124]	; 0x7c
 800391e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003922:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 8003926:	a801      	add	r0, sp, #4
 8003928:	e0d3      	b.n	8003ad2 <FRAMEWIN_Callback+0x268>
 800392a:	4620      	mov	r0, r4
 800392c:	f005 ff8a 	bl	8009844 <GUI_ALLOC_LockH>
 8003930:	68eb      	ldr	r3, [r5, #12]
 8003932:	9000      	str	r0, [sp, #0]
 8003934:	b113      	cbz	r3, 800393c <FRAMEWIN_Callback+0xd2>
 8003936:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
 800393a:	e002      	b.n	8003942 <FRAMEWIN_Callback+0xd8>
 800393c:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8003940:	60eb      	str	r3, [r5, #12]
 8003942:	4668      	mov	r0, sp
 8003944:	e03f      	b.n	80039c6 <FRAMEWIN_Callback+0x15c>
 8003946:	f1ba 0f00 	cmp.w	sl, #0
 800394a:	f000 80c4 	beq.w	8003ad6 <FRAMEWIN_Callback+0x26c>
 800394e:	4620      	mov	r0, r4
 8003950:	47d0      	blx	sl
 8003952:	e0c0      	b.n	8003ad6 <FRAMEWIN_Callback+0x26c>
 8003954:	4620      	mov	r0, r4
 8003956:	f8d5 800c 	ldr.w	r8, [r5, #12]
 800395a:	f005 ff73 	bl	8009844 <GUI_ALLOC_LockH>
 800395e:	ae06      	add	r6, sp, #24
 8003960:	f8b0 707c 	ldrh.w	r7, [r0, #124]	; 0x7c
 8003964:	f846 0d14 	str.w	r0, [r6, #-20]!
 8003968:	4630      	mov	r0, r6
 800396a:	f005 ff79 	bl	8009860 <GUI_ALLOC_UnlockH>
 800396e:	68eb      	ldr	r3, [r5, #12]
 8003970:	2b00      	cmp	r3, #0
 8003972:	f000 80b8 	beq.w	8003ae6 <FRAMEWIN_Callback+0x27c>
 8003976:	f898 3008 	ldrb.w	r3, [r8, #8]
 800397a:	b1cb      	cbz	r3, 80039b0 <FRAMEWIN_Callback+0x146>
 800397c:	073b      	lsls	r3, r7, #28
 800397e:	d402      	bmi.n	8003986 <FRAMEWIN_Callback+0x11c>
 8003980:	4620      	mov	r0, r4
 8003982:	f000 fec9 	bl	8004718 <WM_SetFocus>
 8003986:	4620      	mov	r0, r4
 8003988:	f000 ffe0 	bl	800494c <WM_BringToTop>
 800398c:	f407 7388 	and.w	r3, r7, #272	; 0x110
 8003990:	f5b3 7f88 	cmp.w	r3, #272	; 0x110
 8003994:	f040 80a7 	bne.w	8003ae6 <FRAMEWIN_Callback+0x27c>
 8003998:	f007 0780 	and.w	r7, r7, #128	; 0x80
 800399c:	b2bb      	uxth	r3, r7
 800399e:	2b00      	cmp	r3, #0
 80039a0:	f040 80a1 	bne.w	8003ae6 <FRAMEWIN_Callback+0x27c>
 80039a4:	4620      	mov	r0, r4
 80039a6:	4641      	mov	r1, r8
 80039a8:	2205      	movs	r2, #5
 80039aa:	f000 fb0f 	bl	8003fcc <WM_SetCaptureMove>
 80039ae:	e09a      	b.n	8003ae6 <FRAMEWIN_Callback+0x27c>
 80039b0:	4620      	mov	r0, r4
 80039b2:	f005 ff47 	bl	8009844 <GUI_ALLOC_LockH>
 80039b6:	f8b0 307c 	ldrh.w	r3, [r0, #124]	; 0x7c
 80039ba:	9001      	str	r0, [sp, #4]
 80039bc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80039c0:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 80039c4:	4630      	mov	r0, r6
 80039c6:	f005 ff4b 	bl	8009860 <GUI_ALLOC_UnlockH>
 80039ca:	e08c      	b.n	8003ae6 <FRAMEWIN_Callback+0x27c>
 80039cc:	f8c5 800c 	str.w	r8, [r5, #12]
 80039d0:	e089      	b.n	8003ae6 <FRAMEWIN_Callback+0x27c>
 80039d2:	68eb      	ldr	r3, [r5, #12]
 80039d4:	2b02      	cmp	r3, #2
 80039d6:	f040 8086 	bne.w	8003ae6 <FRAMEWIN_Callback+0x27c>
 80039da:	a906      	add	r1, sp, #24
 80039dc:	9304      	str	r3, [sp, #16]
 80039de:	2327      	movs	r3, #39	; 0x27
 80039e0:	f841 3d14 	str.w	r3, [r1, #-20]!
 80039e4:	68a8      	ldr	r0, [r5, #8]
 80039e6:	9403      	str	r4, [sp, #12]
 80039e8:	f000 f968 	bl	8003cbc <WM__SendMessage>
 80039ec:	e07b      	b.n	8003ae6 <FRAMEWIN_Callback+0x27c>
 80039ee:	f8d5 900c 	ldr.w	r9, [r5, #12]
 80039f2:	f1b9 0f01 	cmp.w	r9, #1
 80039f6:	d124      	bne.n	8003a42 <FRAMEWIN_Callback+0x1d8>
 80039f8:	4630      	mov	r0, r6
 80039fa:	f000 fdda 	bl	80045b2 <WM_IsWindow>
 80039fe:	b158      	cbz	r0, 8003a18 <FRAMEWIN_Callback+0x1ae>
 8003a00:	4630      	mov	r0, r6
 8003a02:	f000 fe89 	bl	8004718 <WM_SetFocus>
 8003a06:	4630      	mov	r0, r6
 8003a08:	f000 fdac 	bl	8004564 <WM_HasFocus>
 8003a0c:	b188      	cbz	r0, 8003a32 <FRAMEWIN_Callback+0x1c8>
 8003a0e:	4630      	mov	r0, r6
 8003a10:	4649      	mov	r1, r9
 8003a12:	f006 fa2f 	bl	8009e74 <WIDGET_OrState>
 8003a16:	e00c      	b.n	8003a32 <FRAMEWIN_Callback+0x1c8>
 8003a18:	4640      	mov	r0, r8
 8003a1a:	f000 faa9 	bl	8003f70 <WM_SetFocusOnNextChild>
 8003a1e:	4606      	mov	r6, r0
 8003a20:	4620      	mov	r0, r4
 8003a22:	f005 ff0f 	bl	8009844 <GUI_ALLOC_LockH>
 8003a26:	9000      	str	r0, [sp, #0]
 8003a28:	f8c0 6080 	str.w	r6, [r0, #128]	; 0x80
 8003a2c:	4668      	mov	r0, sp
 8003a2e:	f005 ff17 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003a32:	4620      	mov	r0, r4
 8003a34:	2101      	movs	r1, #1
 8003a36:	f7ff ff14 	bl	8003862 <FRAMEWIN_SetActive>
 8003a3a:	2e00      	cmp	r6, #0
 8003a3c:	d153      	bne.n	8003ae6 <FRAMEWIN_Callback+0x27c>
 8003a3e:	60ee      	str	r6, [r5, #12]
 8003a40:	e051      	b.n	8003ae6 <FRAMEWIN_Callback+0x27c>
 8003a42:	4620      	mov	r0, r4
 8003a44:	4639      	mov	r1, r7
 8003a46:	f7ff ff0c 	bl	8003862 <FRAMEWIN_SetActive>
 8003a4a:	e04c      	b.n	8003ae6 <FRAMEWIN_Callback+0x27c>
 8003a4c:	f019 0f08 	tst.w	r9, #8
 8003a50:	d141      	bne.n	8003ad6 <FRAMEWIN_Callback+0x26c>
 8003a52:	68eb      	ldr	r3, [r5, #12]
 8003a54:	68db      	ldr	r3, [r3, #12]
 8003a56:	2b00      	cmp	r3, #0
 8003a58:	d03d      	beq.n	8003ad6 <FRAMEWIN_Callback+0x26c>
 8003a5a:	7a1b      	ldrb	r3, [r3, #8]
 8003a5c:	2b00      	cmp	r3, #0
 8003a5e:	d03a      	beq.n	8003ad6 <FRAMEWIN_Callback+0x26c>
 8003a60:	4620      	mov	r0, r4
 8003a62:	f000 fe59 	bl	8004718 <WM_SetFocus>
 8003a66:	e036      	b.n	8003ad6 <FRAMEWIN_Callback+0x26c>
 8003a68:	68ee      	ldr	r6, [r5, #12]
 8003a6a:	2e00      	cmp	r6, #0
 8003a6c:	d033      	beq.n	8003ad6 <FRAMEWIN_Callback+0x26c>
 8003a6e:	6870      	ldr	r0, [r6, #4]
 8003a70:	4621      	mov	r1, r4
 8003a72:	f000 f8ed 	bl	8003c50 <WM__IsAncestorOrSelf>
 8003a76:	b180      	cbz	r0, 8003a9a <FRAMEWIN_Callback+0x230>
 8003a78:	4620      	mov	r0, r4
 8003a7a:	2101      	movs	r1, #1
 8003a7c:	f7ff fcdf 	bl	800343e <_SetActive>
 8003a80:	6870      	ldr	r0, [r6, #4]
 8003a82:	4621      	mov	r1, r4
 8003a84:	f000 f8d3 	bl	8003c2e <WM__IsAncestor>
 8003a88:	b328      	cbz	r0, 8003ad6 <FRAMEWIN_Callback+0x26c>
 8003a8a:	4620      	mov	r0, r4
 8003a8c:	f005 feda 	bl	8009844 <GUI_ALLOC_LockH>
 8003a90:	ab06      	add	r3, sp, #24
 8003a92:	6872      	ldr	r2, [r6, #4]
 8003a94:	f843 0d14 	str.w	r0, [r3, #-20]!
 8003a98:	e00f      	b.n	8003aba <FRAMEWIN_Callback+0x250>
 8003a9a:	4620      	mov	r0, r4
 8003a9c:	4639      	mov	r1, r7
 8003a9e:	f7ff fcce 	bl	800343e <_SetActive>
 8003aa2:	6830      	ldr	r0, [r6, #0]
 8003aa4:	4621      	mov	r1, r4
 8003aa6:	f000 f8c2 	bl	8003c2e <WM__IsAncestor>
 8003aaa:	b1a0      	cbz	r0, 8003ad6 <FRAMEWIN_Callback+0x26c>
 8003aac:	4620      	mov	r0, r4
 8003aae:	f005 fec9 	bl	8009844 <GUI_ALLOC_LockH>
 8003ab2:	ab06      	add	r3, sp, #24
 8003ab4:	6832      	ldr	r2, [r6, #0]
 8003ab6:	f843 0d14 	str.w	r0, [r3, #-20]!
 8003aba:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8003abe:	4618      	mov	r0, r3
 8003ac0:	e007      	b.n	8003ad2 <FRAMEWIN_Callback+0x268>
 8003ac2:	4620      	mov	r0, r4
 8003ac4:	f005 febe 	bl	8009844 <GUI_ALLOC_LockH>
 8003ac8:	9000      	str	r0, [sp, #0]
 8003aca:	3070      	adds	r0, #112	; 0x70
 8003acc:	f006 f882 	bl	8009bd4 <GUI_ALLOC_FreePtr>
 8003ad0:	4668      	mov	r0, sp
 8003ad2:	f005 fec5 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003ad6:	4620      	mov	r0, r4
 8003ad8:	4629      	mov	r1, r5
 8003ada:	f006 f9f6 	bl	8009eca <WIDGET_HandleActive>
 8003ade:	b110      	cbz	r0, 8003ae6 <FRAMEWIN_Callback+0x27c>
 8003ae0:	4628      	mov	r0, r5
 8003ae2:	f002 f82f 	bl	8005b44 <WM_DefaultProc>
 8003ae6:	b006      	add	sp, #24
 8003ae8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08003aec <FRAMEWIN_GetActive>:
 8003aec:	b513      	push	{r0, r1, r4, lr}
 8003aee:	4604      	mov	r4, r0
 8003af0:	b158      	cbz	r0, 8003b0a <FRAMEWIN_GetActive+0x1e>
 8003af2:	f005 fea7 	bl	8009844 <GUI_ALLOC_LockH>
 8003af6:	ab02      	add	r3, sp, #8
 8003af8:	f8b0 407c 	ldrh.w	r4, [r0, #124]	; 0x7c
 8003afc:	f843 0d04 	str.w	r0, [r3, #-4]!
 8003b00:	4618      	mov	r0, r3
 8003b02:	f3c4 04c0 	ubfx	r4, r4, #3, #1
 8003b06:	f005 feab 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003b0a:	4620      	mov	r0, r4
 8003b0c:	b002      	add	sp, #8
 8003b0e:	bd10      	pop	{r4, pc}

08003b10 <GUI_CreateDialogBox>:
 8003b10:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003b14:	4606      	mov	r6, r0
 8003b16:	4688      	mov	r8, r1
 8003b18:	4614      	mov	r4, r2
 8003b1a:	461d      	mov	r5, r3
 8003b1c:	b913      	cbnz	r3, 8003b24 <GUI_CreateDialogBox+0x14>
 8003b1e:	f000 fb8f 	bl	8004240 <WM_GetDesktopWindow>
 8003b22:	4605      	mov	r5, r0
 8003b24:	9400      	str	r4, [sp, #0]
 8003b26:	4630      	mov	r0, r6
 8003b28:	6834      	ldr	r4, [r6, #0]
 8003b2a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003b2c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003b2e:	4629      	mov	r1, r5
 8003b30:	47a0      	blx	r4
 8003b32:	4604      	mov	r4, r0
 8003b34:	2800      	cmp	r0, #0
 8003b36:	d039      	beq.n	8003bac <GUI_CreateDialogBox+0x9c>
 8003b38:	f000 fb74 	bl	8004224 <WM_GetClientWindow>
 8003b3c:	8a71      	ldrh	r1, [r6, #18]
 8003b3e:	4607      	mov	r7, r0
 8003b40:	4620      	mov	r0, r4
 8003b42:	f006 f997 	bl	8009e74 <WIDGET_OrState>
 8003b46:	4620      	mov	r0, r4
 8003b48:	f000 fe83 	bl	8004852 <WM_ShowWindow>
 8003b4c:	4638      	mov	r0, r7
 8003b4e:	f108 38ff 	add.w	r8, r8, #4294967295
 8003b52:	f000 fe7e 	bl	8004852 <WM_ShowWindow>
 8003b56:	f1b8 0f00 	cmp.w	r8, #0
 8003b5a:	dd0f      	ble.n	8003b7c <GUI_CreateDialogBox+0x6c>
 8003b5c:	f856 cf1c 	ldr.w	ip, [r6, #28]!
 8003b60:	2200      	movs	r2, #0
 8003b62:	9200      	str	r2, [sp, #0]
 8003b64:	4630      	mov	r0, r6
 8003b66:	4639      	mov	r1, r7
 8003b68:	4613      	mov	r3, r2
 8003b6a:	47e0      	blx	ip
 8003b6c:	4681      	mov	r9, r0
 8003b6e:	2800      	cmp	r0, #0
 8003b70:	d1ed      	bne.n	8003b4e <GUI_CreateDialogBox+0x3e>
 8003b72:	4620      	mov	r0, r4
 8003b74:	f001 fc90 	bl	8005498 <WM_DeleteWindow>
 8003b78:	4648      	mov	r0, r9
 8003b7a:	e018      	b.n	8003bae <GUI_CreateDialogBox+0x9e>
 8003b7c:	4638      	mov	r0, r7
 8003b7e:	211d      	movs	r1, #29
 8003b80:	f000 fdaf 	bl	80046e2 <WM_SendMessageNoPara>
 8003b84:	1c6b      	adds	r3, r5, #1
 8003b86:	d011      	beq.n	8003bac <GUI_CreateDialogBox+0x9c>
 8003b88:	f000 fb84 	bl	8004294 <WM_GetFocusedWindow>
 8003b8c:	b150      	cbz	r0, 8003ba4 <GUI_CreateDialogBox+0x94>
 8003b8e:	f005 fe4f 	bl	8009830 <GUI_ALLOC_h2p>
 8003b92:	6980      	ldr	r0, [r0, #24]
 8003b94:	42a0      	cmp	r0, r4
 8003b96:	d00a      	beq.n	8003bae <GUI_CreateDialogBox+0x9e>
 8003b98:	2800      	cmp	r0, #0
 8003b9a:	d1f8      	bne.n	8003b8e <GUI_CreateDialogBox+0x7e>
 8003b9c:	4620      	mov	r0, r4
 8003b9e:	f000 f9e7 	bl	8003f70 <WM_SetFocusOnNextChild>
 8003ba2:	e003      	b.n	8003bac <GUI_CreateDialogBox+0x9c>
 8003ba4:	42a5      	cmp	r5, r4
 8003ba6:	d1f9      	bne.n	8003b9c <GUI_CreateDialogBox+0x8c>
 8003ba8:	4628      	mov	r0, r5
 8003baa:	e000      	b.n	8003bae <GUI_CreateDialogBox+0x9e>
 8003bac:	4620      	mov	r0, r4
 8003bae:	b003      	add	sp, #12
 8003bb0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08003bb4 <WM__ForEachDesc>:
 8003bb4:	b570      	push	{r4, r5, r6, lr}
 8003bb6:	460d      	mov	r5, r1
 8003bb8:	4616      	mov	r6, r2
 8003bba:	f005 fe39 	bl	8009830 <GUI_ALLOC_h2p>
 8003bbe:	69c4      	ldr	r4, [r0, #28]
 8003bc0:	b164      	cbz	r4, 8003bdc <WM__ForEachDesc+0x28>
 8003bc2:	4620      	mov	r0, r4
 8003bc4:	4631      	mov	r1, r6
 8003bc6:	47a8      	blx	r5
 8003bc8:	4620      	mov	r0, r4
 8003bca:	4629      	mov	r1, r5
 8003bcc:	4632      	mov	r2, r6
 8003bce:	f7ff fff1 	bl	8003bb4 <WM__ForEachDesc>
 8003bd2:	4620      	mov	r0, r4
 8003bd4:	f005 fe2c 	bl	8009830 <GUI_ALLOC_h2p>
 8003bd8:	6a04      	ldr	r4, [r0, #32]
 8003bda:	e7f1      	b.n	8003bc0 <WM__ForEachDesc+0xc>
 8003bdc:	bd70      	pop	{r4, r5, r6, pc}

08003bde <WM__GetFirstSibling>:
 8003bde:	b508      	push	{r3, lr}
 8003be0:	f000 fbea 	bl	80043b8 <WM_GetParent>
 8003be4:	b118      	cbz	r0, 8003bee <WM__GetFirstSibling+0x10>
 8003be6:	f005 fe23 	bl	8009830 <GUI_ALLOC_h2p>
 8003bea:	69c0      	ldr	r0, [r0, #28]
 8003bec:	bd08      	pop	{r3, pc}
 8003bee:	bd08      	pop	{r3, pc}

08003bf0 <WM__GetLastSibling>:
 8003bf0:	b510      	push	{r4, lr}
 8003bf2:	4604      	mov	r4, r0
 8003bf4:	b130      	cbz	r0, 8003c04 <WM__GetLastSibling+0x14>
 8003bf6:	4620      	mov	r0, r4
 8003bf8:	f005 fe1a 	bl	8009830 <GUI_ALLOC_h2p>
 8003bfc:	6a03      	ldr	r3, [r0, #32]
 8003bfe:	b10b      	cbz	r3, 8003c04 <WM__GetLastSibling+0x14>
 8003c00:	461c      	mov	r4, r3
 8003c02:	e7f8      	b.n	8003bf6 <WM__GetLastSibling+0x6>
 8003c04:	4620      	mov	r0, r4
 8003c06:	bd10      	pop	{r4, pc}

08003c08 <WM__GetPrevSibling>:
 8003c08:	b538      	push	{r3, r4, r5, lr}
 8003c0a:	4605      	mov	r5, r0
 8003c0c:	f7ff ffe7 	bl	8003bde <WM__GetFirstSibling>
 8003c10:	4604      	mov	r4, r0
 8003c12:	b154      	cbz	r4, 8003c2a <WM__GetPrevSibling+0x22>
 8003c14:	42ac      	cmp	r4, r5
 8003c16:	d007      	beq.n	8003c28 <WM__GetPrevSibling+0x20>
 8003c18:	4620      	mov	r0, r4
 8003c1a:	f005 fe09 	bl	8009830 <GUI_ALLOC_h2p>
 8003c1e:	6a03      	ldr	r3, [r0, #32]
 8003c20:	42ab      	cmp	r3, r5
 8003c22:	d002      	beq.n	8003c2a <WM__GetPrevSibling+0x22>
 8003c24:	461c      	mov	r4, r3
 8003c26:	e7f4      	b.n	8003c12 <WM__GetPrevSibling+0xa>
 8003c28:	2400      	movs	r4, #0
 8003c2a:	4620      	mov	r0, r4
 8003c2c:	bd38      	pop	{r3, r4, r5, pc}

08003c2e <WM__IsAncestor>:
 8003c2e:	b510      	push	{r4, lr}
 8003c30:	460c      	mov	r4, r1
 8003c32:	b908      	cbnz	r0, 8003c38 <WM__IsAncestor+0xa>
 8003c34:	2000      	movs	r0, #0
 8003c36:	bd10      	pop	{r4, pc}
 8003c38:	2900      	cmp	r1, #0
 8003c3a:	d0fb      	beq.n	8003c34 <WM__IsAncestor+0x6>
 8003c3c:	f005 fdf8 	bl	8009830 <GUI_ALLOC_h2p>
 8003c40:	6980      	ldr	r0, [r0, #24]
 8003c42:	42a0      	cmp	r0, r4
 8003c44:	d002      	beq.n	8003c4c <WM__IsAncestor+0x1e>
 8003c46:	2800      	cmp	r0, #0
 8003c48:	d1f8      	bne.n	8003c3c <WM__IsAncestor+0xe>
 8003c4a:	e7f3      	b.n	8003c34 <WM__IsAncestor+0x6>
 8003c4c:	2001      	movs	r0, #1
 8003c4e:	bd10      	pop	{r4, pc}

08003c50 <WM__IsAncestorOrSelf>:
 8003c50:	4288      	cmp	r0, r1
 8003c52:	d001      	beq.n	8003c58 <WM__IsAncestorOrSelf+0x8>
 8003c54:	f7ff bfeb 	b.w	8003c2e <WM__IsAncestor>
 8003c58:	2001      	movs	r0, #1
 8003c5a:	4770      	bx	lr

08003c5c <WM__IsChild>:
 8003c5c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003c5e:	460d      	mov	r5, r1
 8003c60:	4604      	mov	r4, r0
 8003c62:	b160      	cbz	r0, 8003c7e <WM__IsChild+0x22>
 8003c64:	f005 fdee 	bl	8009844 <GUI_ALLOC_LockH>
 8003c68:	9001      	str	r0, [sp, #4]
 8003c6a:	b120      	cbz	r0, 8003c76 <WM__IsChild+0x1a>
 8003c6c:	6984      	ldr	r4, [r0, #24]
 8003c6e:	1b63      	subs	r3, r4, r5
 8003c70:	425c      	negs	r4, r3
 8003c72:	415c      	adcs	r4, r3
 8003c74:	e000      	b.n	8003c78 <WM__IsChild+0x1c>
 8003c76:	4604      	mov	r4, r0
 8003c78:	a801      	add	r0, sp, #4
 8003c7a:	f005 fdf1 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003c7e:	4620      	mov	r0, r4
 8003c80:	b003      	add	sp, #12
 8003c82:	bd30      	pop	{r4, r5, pc}

08003c84 <WM__GetFocusedChild>:
 8003c84:	b538      	push	{r3, r4, r5, lr}
 8003c86:	4d06      	ldr	r5, [pc, #24]	; (8003ca0 <WM__GetFocusedChild+0x1c>)
 8003c88:	4c06      	ldr	r4, [pc, #24]	; (8003ca4 <WM__GetFocusedChild+0x20>)
 8003c8a:	682b      	ldr	r3, [r5, #0]
 8003c8c:	4601      	mov	r1, r0
 8003c8e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8003c92:	f7ff ffe3 	bl	8003c5c <WM__IsChild>
 8003c96:	b110      	cbz	r0, 8003c9e <WM__GetFocusedChild+0x1a>
 8003c98:	682b      	ldr	r3, [r5, #0]
 8003c9a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8003c9e:	bd38      	pop	{r3, r4, r5, pc}
 8003ca0:	20000450 	.word	0x20000450
 8003ca4:	20000440 	.word	0x20000440

08003ca8 <WM__Screen2Client>:
 8003ca8:	f9b0 3000 	ldrsh.w	r3, [r0]
 8003cac:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8003cb0:	4608      	mov	r0, r1
 8003cb2:	4252      	negs	r2, r2
 8003cb4:	4259      	negs	r1, r3
 8003cb6:	f005 b8f6 	b.w	8008ea6 <GUI_MoveRect>
	...

08003cbc <WM__SendMessage>:
 8003cbc:	b570      	push	{r4, r5, r6, lr}
 8003cbe:	4c0d      	ldr	r4, [pc, #52]	; (8003cf4 <WM__SendMessage+0x38>)
 8003cc0:	6823      	ldr	r3, [r4, #0]
 8003cc2:	2b13      	cmp	r3, #19
 8003cc4:	4606      	mov	r6, r0
 8003cc6:	460d      	mov	r5, r1
 8003cc8:	dc12      	bgt.n	8003cf0 <WM__SendMessage+0x34>
 8003cca:	f005 fdb1 	bl	8009830 <GUI_ALLOC_h2p>
 8003cce:	6903      	ldr	r3, [r0, #16]
 8003cd0:	606e      	str	r6, [r5, #4]
 8003cd2:	b143      	cbz	r3, 8003ce6 <WM__SendMessage+0x2a>
 8003cd4:	6822      	ldr	r2, [r4, #0]
 8003cd6:	4628      	mov	r0, r5
 8003cd8:	3201      	adds	r2, #1
 8003cda:	6022      	str	r2, [r4, #0]
 8003cdc:	4798      	blx	r3
 8003cde:	6823      	ldr	r3, [r4, #0]
 8003ce0:	3b01      	subs	r3, #1
 8003ce2:	6023      	str	r3, [r4, #0]
 8003ce4:	bd70      	pop	{r4, r5, r6, pc}
 8003ce6:	4628      	mov	r0, r5
 8003ce8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003cec:	f001 bf2a 	b.w	8005b44 <WM_DefaultProc>
 8003cf0:	bd70      	pop	{r4, r5, r6, pc}
 8003cf2:	bf00      	nop
 8003cf4:	200002b0 	.word	0x200002b0

08003cf8 <WM__SendMessageNoPara>:
 8003cf8:	b530      	push	{r4, r5, lr}
 8003cfa:	b085      	sub	sp, #20
 8003cfc:	4604      	mov	r4, r0
 8003cfe:	2210      	movs	r2, #16
 8003d00:	460d      	mov	r5, r1
 8003d02:	4668      	mov	r0, sp
 8003d04:	2100      	movs	r1, #0
 8003d06:	f009 fb5f 	bl	800d3c8 <memset>
 8003d0a:	4620      	mov	r0, r4
 8003d0c:	f005 fd90 	bl	8009830 <GUI_ALLOC_h2p>
 8003d10:	6903      	ldr	r3, [r0, #16]
 8003d12:	b11b      	cbz	r3, 8003d1c <WM__SendMessageNoPara+0x24>
 8003d14:	9401      	str	r4, [sp, #4]
 8003d16:	9500      	str	r5, [sp, #0]
 8003d18:	4668      	mov	r0, sp
 8003d1a:	4798      	blx	r3
 8003d1c:	b005      	add	sp, #20
 8003d1e:	bd30      	pop	{r4, r5, pc}

08003d20 <WM__UpdateChildPositions>:
 8003d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d24:	b087      	sub	sp, #28
 8003d26:	69c4      	ldr	r4, [r0, #28]
 8003d28:	9303      	str	r3, [sp, #12]
 8003d2a:	468a      	mov	sl, r1
 8003d2c:	4693      	mov	fp, r2
 8003d2e:	2c00      	cmp	r4, #0
 8003d30:	d06d      	beq.n	8003e0e <WM__UpdateChildPositions+0xee>
 8003d32:	4620      	mov	r0, r4
 8003d34:	f005 fd86 	bl	8009844 <GUI_ALLOC_LockH>
 8003d38:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8003d3a:	9005      	str	r0, [sp, #20]
 8003d3c:	f401 7320 	and.w	r3, r1, #640	; 0x280
 8003d40:	2b80      	cmp	r3, #128	; 0x80
 8003d42:	f8b0 8000 	ldrh.w	r8, [r0]
 8003d46:	8842      	ldrh	r2, [r0, #2]
 8003d48:	8886      	ldrh	r6, [r0, #4]
 8003d4a:	88c5      	ldrh	r5, [r0, #6]
 8003d4c:	d008      	beq.n	8003d60 <WM__UpdateChildPositions+0x40>
 8003d4e:	f5b3 7f20 	cmp.w	r3, #640	; 0x280
 8003d52:	d108      	bne.n	8003d66 <WM__UpdateChildPositions+0x46>
 8003d54:	eb08 090a 	add.w	r9, r8, sl
 8003d58:	fa1f f989 	uxth.w	r9, r9
 8003d5c:	9b03      	ldr	r3, [sp, #12]
 8003d5e:	e008      	b.n	8003d72 <WM__UpdateChildPositions+0x52>
 8003d60:	9803      	ldr	r0, [sp, #12]
 8003d62:	b283      	uxth	r3, r0
 8003d64:	e001      	b.n	8003d6a <WM__UpdateChildPositions+0x4a>
 8003d66:	fa1f f38a 	uxth.w	r3, sl
 8003d6a:	eb03 0908 	add.w	r9, r3, r8
 8003d6e:	fa1f f989 	uxth.w	r9, r9
 8003d72:	f401 61a0 	and.w	r1, r1, #1280	; 0x500
 8003d76:	4433      	add	r3, r6
 8003d78:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8003d7c:	b29b      	uxth	r3, r3
 8003d7e:	d008      	beq.n	8003d92 <WM__UpdateChildPositions+0x72>
 8003d80:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 8003d84:	d108      	bne.n	8003d98 <WM__UpdateChildPositions+0x78>
 8003d86:	eb02 0c0b 	add.w	ip, r2, fp
 8003d8a:	fa1f fc8c 	uxth.w	ip, ip
 8003d8e:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8003d90:	e008      	b.n	8003da4 <WM__UpdateChildPositions+0x84>
 8003d92:	9910      	ldr	r1, [sp, #64]	; 0x40
 8003d94:	b28f      	uxth	r7, r1
 8003d96:	e001      	b.n	8003d9c <WM__UpdateChildPositions+0x7c>
 8003d98:	fa1f f78b 	uxth.w	r7, fp
 8003d9c:	eb07 0c02 	add.w	ip, r7, r2
 8003da0:	fa1f fc8c 	uxth.w	ip, ip
 8003da4:	fa0f f989 	sxth.w	r9, r9
 8003da8:	fa0f f888 	sxth.w	r8, r8
 8003dac:	b212      	sxth	r2, r2
 8003dae:	442f      	add	r7, r5
 8003db0:	fa0f fc8c 	sxth.w	ip, ip
 8003db4:	ebb9 0108 	subs.w	r1, r9, r8
 8003db8:	9202      	str	r2, [sp, #8]
 8003dba:	b2bf      	uxth	r7, r7
 8003dbc:	ebc2 020c 	rsb	r2, r2, ip
 8003dc0:	d100      	bne.n	8003dc4 <WM__UpdateChildPositions+0xa4>
 8003dc2:	b142      	cbz	r2, 8003dd6 <WM__UpdateChildPositions+0xb6>
 8003dc4:	4620      	mov	r0, r4
 8003dc6:	9301      	str	r3, [sp, #4]
 8003dc8:	f8cd c000 	str.w	ip, [sp]
 8003dcc:	f000 fa0a 	bl	80041e4 <WM_MoveWindow>
 8003dd0:	f8dd c000 	ldr.w	ip, [sp]
 8003dd4:	9b01      	ldr	r3, [sp, #4]
 8003dd6:	b21b      	sxth	r3, r3
 8003dd8:	ebc9 0903 	rsb	r9, r9, r3
 8003ddc:	b236      	sxth	r6, r6
 8003dde:	9b02      	ldr	r3, [sp, #8]
 8003de0:	ebc6 0808 	rsb	r8, r6, r8
 8003de4:	b23f      	sxth	r7, r7
 8003de6:	b22d      	sxth	r5, r5
 8003de8:	ebcc 0c07 	rsb	ip, ip, r7
 8003dec:	1b5d      	subs	r5, r3, r5
 8003dee:	eb19 0108 	adds.w	r1, r9, r8
 8003df2:	eb0c 0205 	add.w	r2, ip, r5
 8003df6:	d100      	bne.n	8003dfa <WM__UpdateChildPositions+0xda>
 8003df8:	b112      	cbz	r2, 8003e00 <WM__UpdateChildPositions+0xe0>
 8003dfa:	4620      	mov	r0, r4
 8003dfc:	f000 fbf6 	bl	80045ec <WM_ResizeWindow>
 8003e00:	a806      	add	r0, sp, #24
 8003e02:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8003e06:	6a1c      	ldr	r4, [r3, #32]
 8003e08:	f005 fd2a 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003e0c:	e78f      	b.n	8003d2e <WM__UpdateChildPositions+0xe>
 8003e0e:	b007      	add	sp, #28
 8003e10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003e14 <WM__GetClientRectEx>:
 8003e14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003e16:	460d      	mov	r5, r1
 8003e18:	b158      	cbz	r0, 8003e32 <WM__GetClientRectEx+0x1e>
 8003e1a:	b151      	cbz	r1, 8003e32 <WM__GetClientRectEx+0x1e>
 8003e1c:	f005 fd12 	bl	8009844 <GUI_ALLOC_LockH>
 8003e20:	ac02      	add	r4, sp, #8
 8003e22:	4629      	mov	r1, r5
 8003e24:	f844 0d04 	str.w	r0, [r4, #-4]!
 8003e28:	f001 f914 	bl	8005054 <WM__GetClientRectWin>
 8003e2c:	4620      	mov	r0, r4
 8003e2e:	f005 fd17 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003e32:	b003      	add	sp, #12
 8003e34:	bd30      	pop	{r4, r5, pc}
	...

08003e38 <WM_SetHasTrans>:
 8003e38:	b513      	push	{r0, r1, r4, lr}
 8003e3a:	4604      	mov	r4, r0
 8003e3c:	b1b8      	cbz	r0, 8003e6e <WM_SetHasTrans+0x36>
 8003e3e:	f005 fd01 	bl	8009844 <GUI_ALLOC_LockH>
 8003e42:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8003e44:	9001      	str	r0, [sp, #4]
 8003e46:	07db      	lsls	r3, r3, #31
 8003e48:	d40e      	bmi.n	8003e68 <WM_SetHasTrans+0x30>
 8003e4a:	4620      	mov	r0, r4
 8003e4c:	f000 fd16 	bl	800487c <WM_ValidateWindow>
 8003e50:	9b01      	ldr	r3, [sp, #4]
 8003e52:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003e54:	f042 0201 	orr.w	r2, r2, #1
 8003e58:	629a      	str	r2, [r3, #40]	; 0x28
 8003e5a:	4b06      	ldr	r3, [pc, #24]	; (8003e74 <WM_SetHasTrans+0x3c>)
 8003e5c:	681a      	ldr	r2, [r3, #0]
 8003e5e:	4620      	mov	r0, r4
 8003e60:	3201      	adds	r2, #1
 8003e62:	601a      	str	r2, [r3, #0]
 8003e64:	f001 fa40 	bl	80052e8 <WM_InvalidateWindow>
 8003e68:	a801      	add	r0, sp, #4
 8003e6a:	f005 fcf9 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003e6e:	b002      	add	sp, #8
 8003e70:	bd10      	pop	{r4, pc}
 8003e72:	bf00      	nop
 8003e74:	20000480 	.word	0x20000480

08003e78 <WM_GetHasTrans>:
 8003e78:	b508      	push	{r3, lr}
 8003e7a:	b128      	cbz	r0, 8003e88 <WM_GetHasTrans+0x10>
 8003e7c:	f005 fcd8 	bl	8009830 <GUI_ALLOC_h2p>
 8003e80:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8003e82:	f000 0001 	and.w	r0, r0, #1
 8003e86:	bd08      	pop	{r3, pc}
 8003e88:	bd08      	pop	{r3, pc}

08003e8a <_SetScrollbar>:
 8003e8a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003e8c:	460d      	mov	r5, r1
 8003e8e:	4611      	mov	r1, r2
 8003e90:	4606      	mov	r6, r0
 8003e92:	461f      	mov	r7, r3
 8003e94:	f000 fa3a 	bl	800430c <WM_GetDialogItem>
 8003e98:	4604      	mov	r4, r0
 8003e9a:	b1a5      	cbz	r5, 8003ec6 <_SetScrollbar+0x3c>
 8003e9c:	b920      	cbnz	r0, 8003ea8 <_SetScrollbar+0x1e>
 8003e9e:	4630      	mov	r0, r6
 8003ea0:	4639      	mov	r1, r7
 8003ea2:	f006 f9c3 	bl	800a22c <SCROLLBAR_CreateAttached>
 8003ea6:	e014      	b.n	8003ed2 <_SetScrollbar+0x48>
 8003ea8:	f005 fccc 	bl	8009844 <GUI_ALLOC_LockH>
 8003eac:	ab02      	add	r3, sp, #8
 8003eae:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8003eb0:	f843 0d04 	str.w	r0, [r3, #-4]!
 8003eb4:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003eb8:	f042 0202 	orr.w	r2, r2, #2
 8003ebc:	6282      	str	r2, [r0, #40]	; 0x28
 8003ebe:	4618      	mov	r0, r3
 8003ec0:	f005 fcce 	bl	8009860 <GUI_ALLOC_UnlockH>
 8003ec4:	e005      	b.n	8003ed2 <_SetScrollbar+0x48>
 8003ec6:	b120      	cbz	r0, 8003ed2 <_SetScrollbar+0x48>
 8003ec8:	f000 fcf0 	bl	80048ac <WM_HideWindow>
 8003ecc:	4620      	mov	r0, r4
 8003ece:	f001 fddd 	bl	8005a8c <WM__DeleteSecure>
 8003ed2:	1c20      	adds	r0, r4, #0
 8003ed4:	bf18      	it	ne
 8003ed6:	2001      	movne	r0, #1
 8003ed8:	b003      	add	sp, #12
 8003eda:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003edc <WM__SetScrollbarV>:
 8003edc:	22fe      	movs	r2, #254	; 0xfe
 8003ede:	2308      	movs	r3, #8
 8003ee0:	f7ff bfd3 	b.w	8003e8a <_SetScrollbar>

08003ee4 <WM__SetScrollbarH>:
 8003ee4:	22ff      	movs	r2, #255	; 0xff
 8003ee6:	2300      	movs	r3, #0
 8003ee8:	f7ff bfcf 	b.w	8003e8a <_SetScrollbar>

08003eec <WM_SetScrollbarH>:
 8003eec:	f7ff bffa 	b.w	8003ee4 <WM__SetScrollbarH>

08003ef0 <WM_SetScrollbarV>:
 8003ef0:	f7ff bff4 	b.w	8003edc <WM__SetScrollbarV>

08003ef4 <_GetPrevChild>:
 8003ef4:	b510      	push	{r4, lr}
 8003ef6:	4604      	mov	r4, r0
 8003ef8:	b918      	cbnz	r0, 8003f02 <_GetPrevChild+0xe>
 8003efa:	4620      	mov	r0, r4
 8003efc:	f7ff fe78 	bl	8003bf0 <WM__GetLastSibling>
 8003f00:	e003      	b.n	8003f0a <_GetPrevChild+0x16>
 8003f02:	f7ff fe81 	bl	8003c08 <WM__GetPrevSibling>
 8003f06:	2800      	cmp	r0, #0
 8003f08:	d0f7      	beq.n	8003efa <_GetPrevChild+0x6>
 8003f0a:	42a0      	cmp	r0, r4
 8003f0c:	bf08      	it	eq
 8003f0e:	2000      	moveq	r0, #0
 8003f10:	bd10      	pop	{r4, pc}

08003f12 <WM_SetFocusOnPrevChild>:
 8003f12:	b538      	push	{r3, r4, r5, lr}
 8003f14:	4604      	mov	r4, r0
 8003f16:	b1b0      	cbz	r0, 8003f46 <WM_SetFocusOnPrevChild+0x34>
 8003f18:	f7ff feb4 	bl	8003c84 <WM__GetFocusedChild>
 8003f1c:	f7ff ffea 	bl	8003ef4 <_GetPrevChild>
 8003f20:	4605      	mov	r5, r0
 8003f22:	4604      	mov	r4, r0
 8003f24:	4620      	mov	r0, r4
 8003f26:	f000 fb2b 	bl	8004580 <WM_IsFocusable>
 8003f2a:	b930      	cbnz	r0, 8003f3a <WM_SetFocusOnPrevChild+0x28>
 8003f2c:	b12c      	cbz	r4, 8003f3a <WM_SetFocusOnPrevChild+0x28>
 8003f2e:	4620      	mov	r0, r4
 8003f30:	f7ff ffe0 	bl	8003ef4 <_GetPrevChild>
 8003f34:	42a8      	cmp	r0, r5
 8003f36:	4604      	mov	r4, r0
 8003f38:	d1f4      	bne.n	8003f24 <WM_SetFocusOnPrevChild+0x12>
 8003f3a:	4620      	mov	r0, r4
 8003f3c:	f000 fbec 	bl	8004718 <WM_SetFocus>
 8003f40:	2800      	cmp	r0, #0
 8003f42:	bf18      	it	ne
 8003f44:	2400      	movne	r4, #0
 8003f46:	4620      	mov	r0, r4
 8003f48:	bd38      	pop	{r3, r4, r5, pc}

08003f4a <_GetNextChild>:
 8003f4a:	b538      	push	{r3, r4, r5, lr}
 8003f4c:	4605      	mov	r5, r0
 8003f4e:	460c      	mov	r4, r1
 8003f50:	b921      	cbnz	r1, 8003f5c <_GetNextChild+0x12>
 8003f52:	4628      	mov	r0, r5
 8003f54:	f005 fc6c 	bl	8009830 <GUI_ALLOC_h2p>
 8003f58:	69c0      	ldr	r0, [r0, #28]
 8003f5a:	e005      	b.n	8003f68 <_GetNextChild+0x1e>
 8003f5c:	4608      	mov	r0, r1
 8003f5e:	f005 fc67 	bl	8009830 <GUI_ALLOC_h2p>
 8003f62:	6a00      	ldr	r0, [r0, #32]
 8003f64:	2800      	cmp	r0, #0
 8003f66:	d0f4      	beq.n	8003f52 <_GetNextChild+0x8>
 8003f68:	42a0      	cmp	r0, r4
 8003f6a:	bf08      	it	eq
 8003f6c:	2000      	moveq	r0, #0
 8003f6e:	bd38      	pop	{r3, r4, r5, pc}

08003f70 <WM_SetFocusOnNextChild>:
 8003f70:	b570      	push	{r4, r5, r6, lr}
 8003f72:	4605      	mov	r5, r0
 8003f74:	b328      	cbz	r0, 8003fc2 <WM_SetFocusOnNextChild+0x52>
 8003f76:	f7ff fe85 	bl	8003c84 <WM__GetFocusedChild>
 8003f7a:	4601      	mov	r1, r0
 8003f7c:	4628      	mov	r0, r5
 8003f7e:	f7ff ffe4 	bl	8003f4a <_GetNextChild>
 8003f82:	4606      	mov	r6, r0
 8003f84:	4604      	mov	r4, r0
 8003f86:	4620      	mov	r0, r4
 8003f88:	f000 fafa 	bl	8004580 <WM_IsFocusable>
 8003f8c:	b938      	cbnz	r0, 8003f9e <WM_SetFocusOnNextChild+0x2e>
 8003f8e:	b13c      	cbz	r4, 8003fa0 <WM_SetFocusOnNextChild+0x30>
 8003f90:	4621      	mov	r1, r4
 8003f92:	4628      	mov	r0, r5
 8003f94:	f7ff ffd9 	bl	8003f4a <_GetNextChild>
 8003f98:	42b0      	cmp	r0, r6
 8003f9a:	4604      	mov	r4, r0
 8003f9c:	d1f3      	bne.n	8003f86 <WM_SetFocusOnNextChild+0x16>
 8003f9e:	b90c      	cbnz	r4, 8003fa4 <WM_SetFocusOnNextChild+0x34>
 8003fa0:	2400      	movs	r4, #0
 8003fa2:	e00f      	b.n	8003fc4 <WM_SetFocusOnNextChild+0x54>
 8003fa4:	4d08      	ldr	r5, [pc, #32]	; (8003fc8 <WM_SetFocusOnNextChild+0x58>)
 8003fa6:	4620      	mov	r0, r4
 8003fa8:	682e      	ldr	r6, [r5, #0]
 8003faa:	f001 f85f 	bl	800506c <WM__GetTopLevelLayer>
 8003fae:	1c43      	adds	r3, r0, #1
 8003fb0:	d008      	beq.n	8003fc4 <WM_SetFocusOnNextChild+0x54>
 8003fb2:	6028      	str	r0, [r5, #0]
 8003fb4:	4620      	mov	r0, r4
 8003fb6:	f000 fbaf 	bl	8004718 <WM_SetFocus>
 8003fba:	602e      	str	r6, [r5, #0]
 8003fbc:	2800      	cmp	r0, #0
 8003fbe:	d1ef      	bne.n	8003fa0 <WM_SetFocusOnNextChild+0x30>
 8003fc0:	e000      	b.n	8003fc4 <WM_SetFocusOnNextChild+0x54>
 8003fc2:	4604      	mov	r4, r0
 8003fc4:	4620      	mov	r0, r4
 8003fc6:	bd70      	pop	{r4, r5, r6, pc}
 8003fc8:	20000450 	.word	0x20000450

08003fcc <WM_SetCaptureMove>:
 8003fcc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003fd0:	b085      	sub	sp, #20
 8003fd2:	4604      	mov	r4, r0
 8003fd4:	460d      	mov	r5, r1
 8003fd6:	4691      	mov	r9, r2
 8003fd8:	4698      	mov	r8, r3
 8003fda:	f000 fab5 	bl	8004548 <WM_HasCaptured>
 8003fde:	4e21      	ldr	r6, [pc, #132]	; (8004064 <WM_SetCaptureMove+0x98>)
 8003fe0:	b940      	cbnz	r0, 8003ff4 <WM_SetCaptureMove+0x28>
 8003fe2:	4620      	mov	r0, r4
 8003fe4:	2101      	movs	r1, #1
 8003fe6:	f000 f859 	bl	800409c <WM_SetCapture>
 8003fea:	682b      	ldr	r3, [r5, #0]
 8003fec:	8033      	strh	r3, [r6, #0]
 8003fee:	686b      	ldr	r3, [r5, #4]
 8003ff0:	8073      	strh	r3, [r6, #2]
 8003ff2:	e034      	b.n	800405e <WM_SetCaptureMove+0x92>
 8003ff4:	682b      	ldr	r3, [r5, #0]
 8003ff6:	f9b6 7000 	ldrsh.w	r7, [r6]
 8003ffa:	686d      	ldr	r5, [r5, #4]
 8003ffc:	1bdf      	subs	r7, r3, r7
 8003ffe:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8004002:	4620      	mov	r0, r4
 8004004:	1aed      	subs	r5, r5, r3
 8004006:	f1b9 0f00 	cmp.w	r9, #0
 800400a:	d102      	bne.n	8004012 <WM_SetCaptureMove+0x46>
 800400c:	f1b8 0f00 	cmp.w	r8, #0
 8004010:	d021      	beq.n	8004056 <WM_SetCaptureMove+0x8a>
 8004012:	4669      	mov	r1, sp
 8004014:	f000 fa39 	bl	800448a <WM_GetWindowRectEx>
 8004018:	f1b8 0f00 	cmp.w	r8, #0
 800401c:	d005      	beq.n	800402a <WM_SetCaptureMove+0x5e>
 800401e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8004022:	3b01      	subs	r3, #1
 8004024:	4498      	add	r8, r3
 8004026:	f8ad 8006 	strh.w	r8, [sp, #6]
 800402a:	4620      	mov	r0, r4
 800402c:	f000 f9c4 	bl	80043b8 <WM_GetParent>
 8004030:	a902      	add	r1, sp, #8
 8004032:	f000 fa2a 	bl	800448a <WM_GetWindowRectEx>
 8004036:	4668      	mov	r0, sp
 8004038:	4639      	mov	r1, r7
 800403a:	462a      	mov	r2, r5
 800403c:	f004 ff33 	bl	8008ea6 <GUI_MoveRect>
 8004040:	a802      	add	r0, sp, #8
 8004042:	4601      	mov	r1, r0
 8004044:	464a      	mov	r2, r9
 8004046:	f003 fa70 	bl	800752a <GUI__ReduceRect>
 800404a:	4668      	mov	r0, sp
 800404c:	a902      	add	r1, sp, #8
 800404e:	f004 ff75 	bl	8008f3c <GUI_RectsIntersect>
 8004052:	b120      	cbz	r0, 800405e <WM_SetCaptureMove+0x92>
 8004054:	4620      	mov	r0, r4
 8004056:	4639      	mov	r1, r7
 8004058:	462a      	mov	r2, r5
 800405a:	f000 f8c3 	bl	80041e4 <WM_MoveWindow>
 800405e:	b005      	add	sp, #20
 8004060:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004064:	200002b4 	.word	0x200002b4

08004068 <WM__ReleaseCapture>:
 8004068:	b530      	push	{r4, r5, lr}
 800406a:	4d0a      	ldr	r5, [pc, #40]	; (8004094 <WM__ReleaseCapture+0x2c>)
 800406c:	4c0a      	ldr	r4, [pc, #40]	; (8004098 <WM__ReleaseCapture+0x30>)
 800406e:	682b      	ldr	r3, [r5, #0]
 8004070:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8004074:	b085      	sub	sp, #20
 8004076:	b150      	cbz	r0, 800408e <WM__ReleaseCapture+0x26>
 8004078:	a904      	add	r1, sp, #16
 800407a:	2318      	movs	r3, #24
 800407c:	f841 3d10 	str.w	r3, [r1, #-16]!
 8004080:	4669      	mov	r1, sp
 8004082:	f7ff fe1b 	bl	8003cbc <WM__SendMessage>
 8004086:	682b      	ldr	r3, [r5, #0]
 8004088:	2200      	movs	r2, #0
 800408a:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 800408e:	b005      	add	sp, #20
 8004090:	bd30      	pop	{r4, r5, pc}
 8004092:	bf00      	nop
 8004094:	20000450 	.word	0x20000450
 8004098:	20000474 	.word	0x20000474

0800409c <WM_SetCapture>:
 800409c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800409e:	4b09      	ldr	r3, [pc, #36]	; (80040c4 <WM_SetCapture+0x28>)
 80040a0:	4a09      	ldr	r2, [pc, #36]	; (80040c8 <WM_SetCapture+0x2c>)
 80040a2:	4604      	mov	r4, r0
 80040a4:	6818      	ldr	r0, [r3, #0]
 80040a6:	460f      	mov	r7, r1
 80040a8:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
 80040ac:	42a1      	cmp	r1, r4
 80040ae:	4615      	mov	r5, r2
 80040b0:	461e      	mov	r6, r3
 80040b2:	d001      	beq.n	80040b8 <WM_SetCapture+0x1c>
 80040b4:	f7ff ffd8 	bl	8004068 <WM__ReleaseCapture>
 80040b8:	6833      	ldr	r3, [r6, #0]
 80040ba:	f845 4023 	str.w	r4, [r5, r3, lsl #2]
 80040be:	4b03      	ldr	r3, [pc, #12]	; (80040cc <WM_SetCapture+0x30>)
 80040c0:	701f      	strb	r7, [r3, #0]
 80040c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80040c4:	20000450 	.word	0x20000450
 80040c8:	20000474 	.word	0x20000474
 80040cc:	20000454 	.word	0x20000454

080040d0 <_MoveDescendents>:
 80040d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80040d4:	b088      	sub	sp, #32
 80040d6:	4606      	mov	r6, r0
 80040d8:	460c      	mov	r4, r1
 80040da:	4615      	mov	r5, r2
 80040dc:	a804      	add	r0, sp, #16
 80040de:	2100      	movs	r1, #0
 80040e0:	2210      	movs	r2, #16
 80040e2:	f009 f971 	bl	800d3c8 <memset>
 80040e6:	b336      	cbz	r6, 8004136 <_MoveDescendents+0x66>
 80040e8:	4630      	mov	r0, r6
 80040ea:	f005 fbab 	bl	8009844 <GUI_ALLOC_LockH>
 80040ee:	4621      	mov	r1, r4
 80040f0:	462a      	mov	r2, r5
 80040f2:	9001      	str	r0, [sp, #4]
 80040f4:	f004 fed7 	bl	8008ea6 <GUI_MoveRect>
 80040f8:	9801      	ldr	r0, [sp, #4]
 80040fa:	4621      	mov	r1, r4
 80040fc:	3008      	adds	r0, #8
 80040fe:	462a      	mov	r2, r5
 8004100:	f004 fed1 	bl	8008ea6 <GUI_MoveRect>
 8004104:	a808      	add	r0, sp, #32
 8004106:	f850 2d1c 	ldr.w	r2, [r0, #-28]!
 800410a:	f8d2 801c 	ldr.w	r8, [r2, #28]
 800410e:	6a17      	ldr	r7, [r2, #32]
 8004110:	f005 fba6 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004114:	4640      	mov	r0, r8
 8004116:	4621      	mov	r1, r4
 8004118:	462a      	mov	r2, r5
 800411a:	f7ff ffd9 	bl	80040d0 <_MoveDescendents>
 800411e:	2303      	movs	r3, #3
 8004120:	9304      	str	r3, [sp, #16]
 8004122:	4630      	mov	r0, r6
 8004124:	ab02      	add	r3, sp, #8
 8004126:	a904      	add	r1, sp, #16
 8004128:	9307      	str	r3, [sp, #28]
 800412a:	9402      	str	r4, [sp, #8]
 800412c:	9503      	str	r5, [sp, #12]
 800412e:	463e      	mov	r6, r7
 8004130:	f7ff fdc4 	bl	8003cbc <WM__SendMessage>
 8004134:	e7d7      	b.n	80040e6 <_MoveDescendents+0x16>
 8004136:	b008      	add	sp, #32
 8004138:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800413c <WM__MoveWindow>:
 800413c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004140:	b08b      	sub	sp, #44	; 0x2c
 8004142:	4606      	mov	r6, r0
 8004144:	460d      	mov	r5, r1
 8004146:	4614      	mov	r4, r2
 8004148:	a806      	add	r0, sp, #24
 800414a:	2100      	movs	r1, #0
 800414c:	2210      	movs	r2, #16
 800414e:	f009 f93b 	bl	800d3c8 <memset>
 8004152:	2e00      	cmp	r6, #0
 8004154:	d043      	beq.n	80041de <WM__MoveWindow+0xa2>
 8004156:	b90d      	cbnz	r5, 800415c <WM__MoveWindow+0x20>
 8004158:	2c00      	cmp	r4, #0
 800415a:	d040      	beq.n	80041de <WM__MoveWindow+0xa2>
 800415c:	4630      	mov	r0, r6
 800415e:	f005 fb71 	bl	8009844 <GUI_ALLOC_LockH>
 8004162:	4603      	mov	r3, r0
 8004164:	9001      	str	r0, [sp, #4]
 8004166:	c803      	ldmia	r0, {r0, r1}
 8004168:	f10d 0808 	add.w	r8, sp, #8
 800416c:	e888 0003 	stmia.w	r8, {r0, r1}
 8004170:	4622      	mov	r2, r4
 8004172:	4618      	mov	r0, r3
 8004174:	4629      	mov	r1, r5
 8004176:	f004 fe96 	bl	8008ea6 <GUI_MoveRect>
 800417a:	9801      	ldr	r0, [sp, #4]
 800417c:	af0a      	add	r7, sp, #40	; 0x28
 800417e:	4629      	mov	r1, r5
 8004180:	4622      	mov	r2, r4
 8004182:	3008      	adds	r0, #8
 8004184:	f004 fe8f 	bl	8008ea6 <GUI_MoveRect>
 8004188:	f857 3d24 	ldr.w	r3, [r7, #-36]!
 800418c:	f8d3 901c 	ldr.w	r9, [r3, #28]
 8004190:	4638      	mov	r0, r7
 8004192:	f005 fb65 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004196:	4622      	mov	r2, r4
 8004198:	4648      	mov	r0, r9
 800419a:	4629      	mov	r1, r5
 800419c:	f7ff ff98 	bl	80040d0 <_MoveDescendents>
 80041a0:	4630      	mov	r0, r6
 80041a2:	f005 fb4f 	bl	8009844 <GUI_ALLOC_LockH>
 80041a6:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80041a8:	9001      	str	r0, [sp, #4]
 80041aa:	0792      	lsls	r2, r2, #30
 80041ac:	d50a      	bpl.n	80041c4 <WM__MoveWindow+0x88>
 80041ae:	6981      	ldr	r1, [r0, #24]
 80041b0:	b141      	cbz	r1, 80041c4 <WM__MoveWindow+0x88>
 80041b2:	6a02      	ldr	r2, [r0, #32]
 80041b4:	f001 f82f 	bl	8005216 <WM__InvalidateParent>
 80041b8:	9b01      	ldr	r3, [sp, #4]
 80041ba:	4640      	mov	r0, r8
 80041bc:	6999      	ldr	r1, [r3, #24]
 80041be:	6a1a      	ldr	r2, [r3, #32]
 80041c0:	f001 f829 	bl	8005216 <WM__InvalidateParent>
 80041c4:	4638      	mov	r0, r7
 80041c6:	f005 fb4b 	bl	8009860 <GUI_ALLOC_UnlockH>
 80041ca:	2303      	movs	r3, #3
 80041cc:	9306      	str	r3, [sp, #24]
 80041ce:	4630      	mov	r0, r6
 80041d0:	ab04      	add	r3, sp, #16
 80041d2:	a906      	add	r1, sp, #24
 80041d4:	9309      	str	r3, [sp, #36]	; 0x24
 80041d6:	9504      	str	r5, [sp, #16]
 80041d8:	9405      	str	r4, [sp, #20]
 80041da:	f7ff fd6f 	bl	8003cbc <WM__SendMessage>
 80041de:	b00b      	add	sp, #44	; 0x2c
 80041e0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080041e4 <WM_MoveWindow>:
 80041e4:	f7ff bfaa 	b.w	800413c <WM__MoveWindow>

080041e8 <WM_DisableMemdev>:
 80041e8:	b508      	push	{r3, lr}
 80041ea:	b138      	cbz	r0, 80041fc <WM_DisableMemdev+0x14>
 80041ec:	f005 fb20 	bl	8009830 <GUI_ALLOC_h2p>
 80041f0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80041f2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80041f6:	f023 0304 	bic.w	r3, r3, #4
 80041fa:	6283      	str	r3, [r0, #40]	; 0x28
 80041fc:	bd08      	pop	{r3, pc}

080041fe <WM_ForEachDesc>:
 80041fe:	f7ff bcd9 	b.w	8003bb4 <WM__ForEachDesc>

08004202 <WM_GetClientRectEx>:
 8004202:	f7ff be07 	b.w	8003e14 <WM__GetClientRectEx>
	...

08004208 <WM_GetClientRect>:
 8004208:	4b04      	ldr	r3, [pc, #16]	; (800421c <WM_GetClientRect+0x14>)
 800420a:	4601      	mov	r1, r0
 800420c:	6818      	ldr	r0, [r3, #0]
 800420e:	b910      	cbnz	r0, 8004216 <WM_GetClientRect+0xe>
 8004210:	4b03      	ldr	r3, [pc, #12]	; (8004220 <WM_GetClientRect+0x18>)
 8004212:	681b      	ldr	r3, [r3, #0]
 8004214:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8004216:	f7ff bdfd 	b.w	8003e14 <WM__GetClientRectEx>
 800421a:	bf00      	nop
 800421c:	2000042c 	.word	0x2000042c
 8004220:	200000b0 	.word	0x200000b0

08004224 <WM_GetClientWindow>:
 8004224:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004226:	2300      	movs	r3, #0
 8004228:	a904      	add	r1, sp, #16
 800422a:	9303      	str	r3, [sp, #12]
 800422c:	2317      	movs	r3, #23
 800422e:	f841 3d10 	str.w	r3, [r1, #-16]!
 8004232:	4669      	mov	r1, sp
 8004234:	f000 feff 	bl	8005036 <WM_SendMessage>
 8004238:	9803      	ldr	r0, [sp, #12]
 800423a:	b005      	add	sp, #20
 800423c:	f85d fb04 	ldr.w	pc, [sp], #4

08004240 <WM_GetDesktopWindow>:
 8004240:	4b03      	ldr	r3, [pc, #12]	; (8004250 <WM_GetDesktopWindow+0x10>)
 8004242:	681b      	ldr	r3, [r3, #0]
 8004244:	7c5a      	ldrb	r2, [r3, #17]
 8004246:	4b03      	ldr	r3, [pc, #12]	; (8004254 <WM_GetDesktopWindow+0x14>)
 8004248:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800424c:	4770      	bx	lr
 800424e:	bf00      	nop
 8004250:	200000b0 	.word	0x200000b0
 8004254:	20000430 	.word	0x20000430

08004258 <WM_CheckScrollBounds>:
 8004258:	6802      	ldr	r2, [r0, #0]
 800425a:	6883      	ldr	r3, [r0, #8]
 800425c:	1ad3      	subs	r3, r2, r3
 800425e:	6842      	ldr	r2, [r0, #4]
 8004260:	2a00      	cmp	r2, #0
 8004262:	bfbc      	itt	lt
 8004264:	2200      	movlt	r2, #0
 8004266:	6042      	strlt	r2, [r0, #4]
 8004268:	6842      	ldr	r2, [r0, #4]
 800426a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800426e:	429a      	cmp	r2, r3
 8004270:	bfc8      	it	gt
 8004272:	6043      	strgt	r3, [r0, #4]
 8004274:	4770      	bx	lr

08004276 <WM_GetFirstChild>:
 8004276:	b508      	push	{r3, lr}
 8004278:	4603      	mov	r3, r0
 800427a:	b110      	cbz	r0, 8004282 <WM_GetFirstChild+0xc>
 800427c:	f005 fad8 	bl	8009830 <GUI_ALLOC_h2p>
 8004280:	69c3      	ldr	r3, [r0, #28]
 8004282:	4618      	mov	r0, r3
 8004284:	bd08      	pop	{r3, pc}

08004286 <WM_GetFlags>:
 8004286:	b508      	push	{r3, lr}
 8004288:	b118      	cbz	r0, 8004292 <WM_GetFlags+0xc>
 800428a:	f005 fad1 	bl	8009830 <GUI_ALLOC_h2p>
 800428e:	8d00      	ldrh	r0, [r0, #40]	; 0x28
 8004290:	bd08      	pop	{r3, pc}
 8004292:	bd08      	pop	{r3, pc}

08004294 <WM_GetFocusedWindow>:
 8004294:	4b02      	ldr	r3, [pc, #8]	; (80042a0 <WM_GetFocusedWindow+0xc>)
 8004296:	681a      	ldr	r2, [r3, #0]
 8004298:	4b02      	ldr	r3, [pc, #8]	; (80042a4 <WM_GetFocusedWindow+0x10>)
 800429a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800429e:	4770      	bx	lr
 80042a0:	20000450 	.word	0x20000450
 80042a4:	20000440 	.word	0x20000440

080042a8 <WM_GetId>:
 80042a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80042aa:	4604      	mov	r4, r0
 80042ac:	2210      	movs	r2, #16
 80042ae:	4668      	mov	r0, sp
 80042b0:	2100      	movs	r1, #0
 80042b2:	f009 f889 	bl	800d3c8 <memset>
 80042b6:	2315      	movs	r3, #21
 80042b8:	4620      	mov	r0, r4
 80042ba:	4669      	mov	r1, sp
 80042bc:	9300      	str	r3, [sp, #0]
 80042be:	f000 feba 	bl	8005036 <WM_SendMessage>
 80042c2:	9803      	ldr	r0, [sp, #12]
 80042c4:	b004      	add	sp, #16
 80042c6:	bd10      	pop	{r4, pc}

080042c8 <_GetDialogItem>:
 80042c8:	b570      	push	{r4, r5, r6, lr}
 80042ca:	4606      	mov	r6, r0
 80042cc:	460d      	mov	r5, r1
 80042ce:	f005 faaf 	bl	8009830 <GUI_ALLOC_h2p>
 80042d2:	69c4      	ldr	r4, [r0, #28]
 80042d4:	b14c      	cbz	r4, 80042ea <_GetDialogItem+0x22>
 80042d6:	4620      	mov	r0, r4
 80042d8:	f7ff ffe6 	bl	80042a8 <WM_GetId>
 80042dc:	42a8      	cmp	r0, r5
 80042de:	4620      	mov	r0, r4
 80042e0:	d013      	beq.n	800430a <_GetDialogItem+0x42>
 80042e2:	f005 faa5 	bl	8009830 <GUI_ALLOC_h2p>
 80042e6:	6a04      	ldr	r4, [r0, #32]
 80042e8:	e7f4      	b.n	80042d4 <_GetDialogItem+0xc>
 80042ea:	4630      	mov	r0, r6
 80042ec:	f005 faa0 	bl	8009830 <GUI_ALLOC_h2p>
 80042f0:	69c4      	ldr	r4, [r0, #28]
 80042f2:	4620      	mov	r0, r4
 80042f4:	b144      	cbz	r4, 8004308 <_GetDialogItem+0x40>
 80042f6:	4629      	mov	r1, r5
 80042f8:	f7ff ffe6 	bl	80042c8 <_GetDialogItem>
 80042fc:	b928      	cbnz	r0, 800430a <_GetDialogItem+0x42>
 80042fe:	4620      	mov	r0, r4
 8004300:	f005 fa96 	bl	8009830 <GUI_ALLOC_h2p>
 8004304:	6a04      	ldr	r4, [r0, #32]
 8004306:	e7f4      	b.n	80042f2 <_GetDialogItem+0x2a>
 8004308:	bd70      	pop	{r4, r5, r6, pc}
 800430a:	bd70      	pop	{r4, r5, r6, pc}

0800430c <WM_GetDialogItem>:
 800430c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800430e:	460d      	mov	r5, r1
 8004310:	4604      	mov	r4, r0
 8004312:	b1c8      	cbz	r0, 8004348 <WM_GetDialogItem+0x3c>
 8004314:	f005 fa96 	bl	8009844 <GUI_ALLOC_LockH>
 8004318:	ab02      	add	r3, sp, #8
 800431a:	69c4      	ldr	r4, [r0, #28]
 800431c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004320:	4618      	mov	r0, r3
 8004322:	f005 fa9d 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004326:	b17c      	cbz	r4, 8004348 <WM_GetDialogItem+0x3c>
 8004328:	4620      	mov	r0, r4
 800432a:	f7ff ffbd 	bl	80042a8 <WM_GetId>
 800432e:	42a8      	cmp	r0, r5
 8004330:	d00a      	beq.n	8004348 <WM_GetDialogItem+0x3c>
 8004332:	4620      	mov	r0, r4
 8004334:	4629      	mov	r1, r5
 8004336:	f7ff ffc7 	bl	80042c8 <_GetDialogItem>
 800433a:	b920      	cbnz	r0, 8004346 <WM_GetDialogItem+0x3a>
 800433c:	4620      	mov	r0, r4
 800433e:	f005 fa77 	bl	8009830 <GUI_ALLOC_h2p>
 8004342:	6a04      	ldr	r4, [r0, #32]
 8004344:	e7ef      	b.n	8004326 <WM_GetDialogItem+0x1a>
 8004346:	4604      	mov	r4, r0
 8004348:	4620      	mov	r0, r4
 800434a:	b003      	add	sp, #12
 800434c:	bd30      	pop	{r4, r5, pc}

0800434e <WM_GetInsideRectEx>:
 800434e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004350:	9103      	str	r1, [sp, #12]
 8004352:	a904      	add	r1, sp, #16
 8004354:	2314      	movs	r3, #20
 8004356:	f841 3d10 	str.w	r3, [r1, #-16]!
 800435a:	4669      	mov	r1, sp
 800435c:	f000 fe6b 	bl	8005036 <WM_SendMessage>
 8004360:	b005      	add	sp, #20
 8004362:	f85d fb04 	ldr.w	pc, [sp], #4

08004366 <WM_GetNextSibling>:
 8004366:	b508      	push	{r3, lr}
 8004368:	4603      	mov	r3, r0
 800436a:	b110      	cbz	r0, 8004372 <WM_GetNextSibling+0xc>
 800436c:	f005 fa60 	bl	8009830 <GUI_ALLOC_h2p>
 8004370:	6a03      	ldr	r3, [r0, #32]
 8004372:	4618      	mov	r0, r3
 8004374:	bd08      	pop	{r3, pc}

08004376 <WM_GetWindowOrgX>:
 8004376:	b508      	push	{r3, lr}
 8004378:	b120      	cbz	r0, 8004384 <WM_GetWindowOrgX+0xe>
 800437a:	f005 fa59 	bl	8009830 <GUI_ALLOC_h2p>
 800437e:	f9b0 0000 	ldrsh.w	r0, [r0]
 8004382:	bd08      	pop	{r3, pc}
 8004384:	bd08      	pop	{r3, pc}

08004386 <WM_GetWindowOrgY>:
 8004386:	b508      	push	{r3, lr}
 8004388:	b120      	cbz	r0, 8004394 <WM_GetWindowOrgY+0xe>
 800438a:	f005 fa51 	bl	8009830 <GUI_ALLOC_h2p>
 800438e:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 8004392:	bd08      	pop	{r3, pc}
 8004394:	bd08      	pop	{r3, pc}
	...

08004398 <WM_GetOrgX>:
 8004398:	4b02      	ldr	r3, [pc, #8]	; (80043a4 <WM_GetOrgX+0xc>)
 800439a:	681b      	ldr	r3, [r3, #0]
 800439c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800439e:	f7ff bfea 	b.w	8004376 <WM_GetWindowOrgX>
 80043a2:	bf00      	nop
 80043a4:	200000b0 	.word	0x200000b0

080043a8 <WM_GetOrgY>:
 80043a8:	4b02      	ldr	r3, [pc, #8]	; (80043b4 <WM_GetOrgY+0xc>)
 80043aa:	681b      	ldr	r3, [r3, #0]
 80043ac:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80043ae:	f7ff bfea 	b.w	8004386 <WM_GetWindowOrgY>
 80043b2:	bf00      	nop
 80043b4:	200000b0 	.word	0x200000b0

080043b8 <WM_GetParent>:
 80043b8:	b508      	push	{r3, lr}
 80043ba:	4603      	mov	r3, r0
 80043bc:	b110      	cbz	r0, 80043c4 <WM_GetParent+0xc>
 80043be:	f005 fa37 	bl	8009830 <GUI_ALLOC_h2p>
 80043c2:	6983      	ldr	r3, [r0, #24]
 80043c4:	4618      	mov	r0, r3
 80043c6:	bd08      	pop	{r3, pc}

080043c8 <WM_BringToBottom>:
 80043c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80043cc:	4604      	mov	r4, r0
 80043ce:	b087      	sub	sp, #28
 80043d0:	2800      	cmp	r0, #0
 80043d2:	d039      	beq.n	8004448 <WM_BringToBottom+0x80>
 80043d4:	f005 fa36 	bl	8009844 <GUI_ALLOC_LockH>
 80043d8:	4603      	mov	r3, r0
 80043da:	9001      	str	r0, [sp, #4]
 80043dc:	c803      	ldmia	r0, {r0, r1}
 80043de:	ad04      	add	r5, sp, #16
 80043e0:	e885 0003 	stmia.w	r5, {r0, r1}
 80043e4:	a801      	add	r0, sp, #4
 80043e6:	6a1e      	ldr	r6, [r3, #32]
 80043e8:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
 80043ec:	f005 fa38 	bl	8009860 <GUI_ALLOC_UnlockH>
 80043f0:	4620      	mov	r0, r4
 80043f2:	f7ff fc09 	bl	8003c08 <WM__GetPrevSibling>
 80043f6:	4607      	mov	r7, r0
 80043f8:	b330      	cbz	r0, 8004448 <WM_BringToBottom+0x80>
 80043fa:	4620      	mov	r0, r4
 80043fc:	f7ff ffdc 	bl	80043b8 <WM_GetParent>
 8004400:	f019 0f02 	tst.w	r9, #2
 8004404:	4680      	mov	r8, r0
 8004406:	d004      	beq.n	8004412 <WM_BringToBottom+0x4a>
 8004408:	4628      	mov	r0, r5
 800440a:	4641      	mov	r1, r8
 800440c:	4632      	mov	r2, r6
 800440e:	f000 ff17 	bl	8005240 <WM__InvalidateRectEx>
 8004412:	4620      	mov	r0, r4
 8004414:	f005 fa16 	bl	8009844 <GUI_ALLOC_LockH>
 8004418:	9001      	str	r0, [sp, #4]
 800441a:	4640      	mov	r0, r8
 800441c:	f005 fa12 	bl	8009844 <GUI_ALLOC_LockH>
 8004420:	9003      	str	r0, [sp, #12]
 8004422:	4638      	mov	r0, r7
 8004424:	f005 fa0e 	bl	8009844 <GUI_ALLOC_LockH>
 8004428:	9b03      	ldr	r3, [sp, #12]
 800442a:	9a01      	ldr	r2, [sp, #4]
 800442c:	69d9      	ldr	r1, [r3, #28]
 800442e:	6206      	str	r6, [r0, #32]
 8004430:	9002      	str	r0, [sp, #8]
 8004432:	6211      	str	r1, [r2, #32]
 8004434:	a801      	add	r0, sp, #4
 8004436:	61dc      	str	r4, [r3, #28]
 8004438:	f005 fa12 	bl	8009860 <GUI_ALLOC_UnlockH>
 800443c:	a803      	add	r0, sp, #12
 800443e:	f005 fa0f 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004442:	a802      	add	r0, sp, #8
 8004444:	f005 fa0c 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004448:	b007      	add	sp, #28
 800444a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800444e <WM_GetScrollbarH>:
 800444e:	b110      	cbz	r0, 8004456 <WM_GetScrollbarH+0x8>
 8004450:	21ff      	movs	r1, #255	; 0xff
 8004452:	f7ff bf39 	b.w	80042c8 <_GetDialogItem>
 8004456:	4770      	bx	lr

08004458 <WM_GetScrollbarV>:
 8004458:	b110      	cbz	r0, 8004460 <WM_GetScrollbarV+0x8>
 800445a:	21fe      	movs	r1, #254	; 0xfe
 800445c:	f7ff bf34 	b.w	80042c8 <_GetDialogItem>
 8004460:	4770      	bx	lr

08004462 <WM_GetScrollPartner>:
 8004462:	b538      	push	{r3, r4, r5, lr}
 8004464:	4605      	mov	r5, r0
 8004466:	f7ff ff1f 	bl	80042a8 <WM_GetId>
 800446a:	28ff      	cmp	r0, #255	; 0xff
 800446c:	4604      	mov	r4, r0
 800446e:	d003      	beq.n	8004478 <WM_GetScrollPartner+0x16>
 8004470:	28fe      	cmp	r0, #254	; 0xfe
 8004472:	bf08      	it	eq
 8004474:	24ff      	moveq	r4, #255	; 0xff
 8004476:	e000      	b.n	800447a <WM_GetScrollPartner+0x18>
 8004478:	24fe      	movs	r4, #254	; 0xfe
 800447a:	4628      	mov	r0, r5
 800447c:	f7ff ff9c 	bl	80043b8 <WM_GetParent>
 8004480:	4621      	mov	r1, r4
 8004482:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004486:	f7ff bf41 	b.w	800430c <WM_GetDialogItem>

0800448a <WM_GetWindowRectEx>:
 800448a:	b510      	push	{r4, lr}
 800448c:	460c      	mov	r4, r1
 800448e:	b130      	cbz	r0, 800449e <WM_GetWindowRectEx+0x14>
 8004490:	b129      	cbz	r1, 800449e <WM_GetWindowRectEx+0x14>
 8004492:	f005 f9cd 	bl	8009830 <GUI_ALLOC_h2p>
 8004496:	4603      	mov	r3, r0
 8004498:	cb03      	ldmia	r3!, {r0, r1}
 800449a:	6020      	str	r0, [r4, #0]
 800449c:	6061      	str	r1, [r4, #4]
 800449e:	bd10      	pop	{r4, pc}

080044a0 <WM_GetInsideRectExScrollbar>:
 80044a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80044a2:	460c      	mov	r4, r1
 80044a4:	b087      	sub	sp, #28
 80044a6:	4606      	mov	r6, r0
 80044a8:	2800      	cmp	r0, #0
 80044aa:	d04b      	beq.n	8004544 <WM_GetInsideRectExScrollbar+0xa4>
 80044ac:	2900      	cmp	r1, #0
 80044ae:	d049      	beq.n	8004544 <WM_GetInsideRectExScrollbar+0xa4>
 80044b0:	21ff      	movs	r1, #255	; 0xff
 80044b2:	f7ff ff2b 	bl	800430c <WM_GetDialogItem>
 80044b6:	21fe      	movs	r1, #254	; 0xfe
 80044b8:	4605      	mov	r5, r0
 80044ba:	4630      	mov	r0, r6
 80044bc:	f7ff ff26 	bl	800430c <WM_GetDialogItem>
 80044c0:	4669      	mov	r1, sp
 80044c2:	4607      	mov	r7, r0
 80044c4:	4630      	mov	r0, r6
 80044c6:	f7ff ffe0 	bl	800448a <WM_GetWindowRectEx>
 80044ca:	4630      	mov	r0, r6
 80044cc:	a902      	add	r1, sp, #8
 80044ce:	f7ff ff3e 	bl	800434e <WM_GetInsideRectEx>
 80044d2:	b1c7      	cbz	r7, 8004506 <WM_GetInsideRectExScrollbar+0x66>
 80044d4:	4638      	mov	r0, r7
 80044d6:	a904      	add	r1, sp, #16
 80044d8:	f7ff ffd7 	bl	800448a <WM_GetWindowRectEx>
 80044dc:	f9bd 1000 	ldrsh.w	r1, [sp]
 80044e0:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 80044e4:	a804      	add	r0, sp, #16
 80044e6:	4249      	negs	r1, r1
 80044e8:	4252      	negs	r2, r2
 80044ea:	f004 fcdc 	bl	8008ea6 <GUI_MoveRect>
 80044ee:	4638      	mov	r0, r7
 80044f0:	f7ff fec9 	bl	8004286 <WM_GetFlags>
 80044f4:	f000 0082 	and.w	r0, r0, #130	; 0x82
 80044f8:	2882      	cmp	r0, #130	; 0x82
 80044fa:	d104      	bne.n	8004506 <WM_GetInsideRectExScrollbar+0x66>
 80044fc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8004500:	3b01      	subs	r3, #1
 8004502:	f8ad 300c 	strh.w	r3, [sp, #12]
 8004506:	b1cd      	cbz	r5, 800453c <WM_GetInsideRectExScrollbar+0x9c>
 8004508:	4628      	mov	r0, r5
 800450a:	a904      	add	r1, sp, #16
 800450c:	f7ff ffbd 	bl	800448a <WM_GetWindowRectEx>
 8004510:	f9bd 1000 	ldrsh.w	r1, [sp]
 8004514:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 8004518:	a804      	add	r0, sp, #16
 800451a:	4249      	negs	r1, r1
 800451c:	4252      	negs	r2, r2
 800451e:	f004 fcc2 	bl	8008ea6 <GUI_MoveRect>
 8004522:	4628      	mov	r0, r5
 8004524:	f7ff feaf 	bl	8004286 <WM_GetFlags>
 8004528:	f400 7081 	and.w	r0, r0, #258	; 0x102
 800452c:	f5b0 7f81 	cmp.w	r0, #258	; 0x102
 8004530:	d104      	bne.n	800453c <WM_GetInsideRectExScrollbar+0x9c>
 8004532:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8004536:	3b01      	subs	r3, #1
 8004538:	f8ad 300e 	strh.w	r3, [sp, #14]
 800453c:	ab02      	add	r3, sp, #8
 800453e:	cb03      	ldmia	r3!, {r0, r1}
 8004540:	6020      	str	r0, [r4, #0]
 8004542:	6061      	str	r1, [r4, #4]
 8004544:	b007      	add	sp, #28
 8004546:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004548 <WM_HasCaptured>:
 8004548:	4b04      	ldr	r3, [pc, #16]	; (800455c <WM_HasCaptured+0x14>)
 800454a:	681a      	ldr	r2, [r3, #0]
 800454c:	4b04      	ldr	r3, [pc, #16]	; (8004560 <WM_HasCaptured+0x18>)
 800454e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004552:	1ac3      	subs	r3, r0, r3
 8004554:	4258      	negs	r0, r3
 8004556:	4158      	adcs	r0, r3
 8004558:	4770      	bx	lr
 800455a:	bf00      	nop
 800455c:	20000450 	.word	0x20000450
 8004560:	20000474 	.word	0x20000474

08004564 <WM_HasFocus>:
 8004564:	4b04      	ldr	r3, [pc, #16]	; (8004578 <WM_HasFocus+0x14>)
 8004566:	681a      	ldr	r2, [r3, #0]
 8004568:	4b04      	ldr	r3, [pc, #16]	; (800457c <WM_HasFocus+0x18>)
 800456a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800456e:	1ac3      	subs	r3, r0, r3
 8004570:	4258      	negs	r0, r3
 8004572:	4158      	adcs	r0, r3
 8004574:	4770      	bx	lr
 8004576:	bf00      	nop
 8004578:	20000450 	.word	0x20000450
 800457c:	20000440 	.word	0x20000440

08004580 <WM_IsFocusable>:
 8004580:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004582:	4604      	mov	r4, r0
 8004584:	b908      	cbnz	r0, 800458a <WM_IsFocusable+0xa>
 8004586:	2000      	movs	r0, #0
 8004588:	e011      	b.n	80045ae <WM_IsFocusable+0x2e>
 800458a:	f005 f951 	bl	8009830 <GUI_ALLOC_h2p>
 800458e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004590:	079a      	lsls	r2, r3, #30
 8004592:	d5f8      	bpl.n	8004586 <WM_IsFocusable+0x6>
 8004594:	f013 0310 	ands.w	r3, r3, #16
 8004598:	d1f5      	bne.n	8004586 <WM_IsFocusable+0x6>
 800459a:	a904      	add	r1, sp, #16
 800459c:	9303      	str	r3, [sp, #12]
 800459e:	231f      	movs	r3, #31
 80045a0:	f841 3d10 	str.w	r3, [r1, #-16]!
 80045a4:	4620      	mov	r0, r4
 80045a6:	4669      	mov	r1, sp
 80045a8:	f000 fd45 	bl	8005036 <WM_SendMessage>
 80045ac:	9803      	ldr	r0, [sp, #12]
 80045ae:	b004      	add	sp, #16
 80045b0:	bd10      	pop	{r4, pc}

080045b2 <WM_IsWindow>:
 80045b2:	f000 bcf7 	b.w	8004fa4 <WM__IsWindow>
	...

080045b8 <WM_OnKey>:
 80045b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80045ba:	4a0a      	ldr	r2, [pc, #40]	; (80045e4 <WM_OnKey+0x2c>)
 80045bc:	4603      	mov	r3, r0
 80045be:	6810      	ldr	r0, [r2, #0]
 80045c0:	4a09      	ldr	r2, [pc, #36]	; (80045e8 <WM_OnKey+0x30>)
 80045c2:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 80045c6:	b148      	cbz	r0, 80045dc <WM_OnKey+0x24>
 80045c8:	9300      	str	r3, [sp, #0]
 80045ca:	230e      	movs	r3, #14
 80045cc:	9101      	str	r1, [sp, #4]
 80045ce:	9302      	str	r3, [sp, #8]
 80045d0:	a902      	add	r1, sp, #8
 80045d2:	ab00      	add	r3, sp, #0
 80045d4:	9305      	str	r3, [sp, #20]
 80045d6:	f7ff fb71 	bl	8003cbc <WM__SendMessage>
 80045da:	2001      	movs	r0, #1
 80045dc:	b007      	add	sp, #28
 80045de:	f85d fb04 	ldr.w	pc, [sp], #4
 80045e2:	bf00      	nop
 80045e4:	20000450 	.word	0x20000450
 80045e8:	20000440 	.word	0x20000440

080045ec <WM_ResizeWindow>:
 80045ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80045f0:	ea51 0302 	orrs.w	r3, r1, r2
 80045f4:	b08a      	sub	sp, #40	; 0x28
 80045f6:	4680      	mov	r8, r0
 80045f8:	460e      	mov	r6, r1
 80045fa:	4617      	mov	r7, r2
 80045fc:	d06e      	beq.n	80046dc <WM_ResizeWindow+0xf0>
 80045fe:	2800      	cmp	r0, #0
 8004600:	d06c      	beq.n	80046dc <WM_ResizeWindow+0xf0>
 8004602:	f005 f91f 	bl	8009844 <GUI_ALLOC_LockH>
 8004606:	4603      	mov	r3, r0
 8004608:	9003      	str	r0, [sp, #12]
 800460a:	c803      	ldmia	r0, {r0, r1}
 800460c:	ad04      	add	r5, sp, #16
 800460e:	ac06      	add	r4, sp, #24
 8004610:	e885 0003 	stmia.w	r5, {r0, r1}
 8004614:	e884 0003 	stmia.w	r4, {r0, r1}
 8004618:	b17e      	cbz	r6, 800463a <WM_ResizeWindow+0x4e>
 800461a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800461c:	f402 7220 	and.w	r2, r2, #640	; 0x280
 8004620:	2a80      	cmp	r2, #128	; 0x80
 8004622:	d105      	bne.n	8004630 <WM_ResizeWindow+0x44>
 8004624:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 8004628:	1b96      	subs	r6, r2, r6
 800462a:	f8ad 6018 	strh.w	r6, [sp, #24]
 800462e:	e004      	b.n	800463a <WM_ResizeWindow+0x4e>
 8004630:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 8004634:	4416      	add	r6, r2
 8004636:	f8ad 601c 	strh.w	r6, [sp, #28]
 800463a:	b187      	cbz	r7, 800465e <WM_ResizeWindow+0x72>
 800463c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800463e:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 8004642:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8004646:	d105      	bne.n	8004654 <WM_ResizeWindow+0x68>
 8004648:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800464c:	1bd7      	subs	r7, r2, r7
 800464e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8004652:	e004      	b.n	800465e <WM_ResizeWindow+0x72>
 8004654:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8004658:	4417      	add	r7, r2
 800465a:	f8ad 701e 	strh.w	r7, [sp, #30]
 800465e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004660:	03da      	lsls	r2, r3, #15
 8004662:	d502      	bpl.n	800466a <WM_ResizeWindow+0x7e>
 8004664:	4640      	mov	r0, r8
 8004666:	f000 fcad 	bl	8004fc4 <WM__InvalidateDrawAndDescs>
 800466a:	e894 0003 	ldmia.w	r4, {r0, r1}
 800466e:	9b03      	ldr	r3, [sp, #12]
 8004670:	e883 0003 	stmia.w	r3, {r0, r1}
 8004674:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004676:	079b      	lsls	r3, r3, #30
 8004678:	d50a      	bpl.n	8004690 <WM_ResizeWindow+0xa4>
 800467a:	a808      	add	r0, sp, #32
 800467c:	4629      	mov	r1, r5
 800467e:	4622      	mov	r2, r4
 8004680:	f004 fbe6 	bl	8008e50 <GUI_MergeRect>
 8004684:	9b03      	ldr	r3, [sp, #12]
 8004686:	a808      	add	r0, sp, #32
 8004688:	6999      	ldr	r1, [r3, #24]
 800468a:	6a1a      	ldr	r2, [r3, #32]
 800468c:	f000 fdd8 	bl	8005240 <WM__InvalidateRectEx>
 8004690:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8004694:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8004698:	f9bd 701e 	ldrsh.w	r7, [sp, #30]
 800469c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80046a0:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 80046a4:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 80046a8:	f9bd 501a 	ldrsh.w	r5, [sp, #26]
 80046ac:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 80046b0:	1ae3      	subs	r3, r4, r3
 80046b2:	1a38      	subs	r0, r7, r0
 80046b4:	ac0a      	add	r4, sp, #40	; 0x28
 80046b6:	1aaa      	subs	r2, r5, r2
 80046b8:	9000      	str	r0, [sp, #0]
 80046ba:	1a71      	subs	r1, r6, r1
 80046bc:	9803      	ldr	r0, [sp, #12]
 80046be:	f7ff fb2f 	bl	8003d20 <WM__UpdateChildPositions>
 80046c2:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 80046c6:	f101 0008 	add.w	r0, r1, #8
 80046ca:	f002 fede 	bl	800748a <GUI__IntersectRect>
 80046ce:	4640      	mov	r0, r8
 80046d0:	2105      	movs	r1, #5
 80046d2:	f000 fcb4 	bl	800503e <WM__SendMsgNoData>
 80046d6:	4620      	mov	r0, r4
 80046d8:	f005 f8c2 	bl	8009860 <GUI_ALLOC_UnlockH>
 80046dc:	b00a      	add	sp, #40	; 0x28
 80046de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080046e2 <WM_SendMessageNoPara>:
 80046e2:	f7ff bb09 	b.w	8003cf8 <WM__SendMessageNoPara>

080046e6 <WM_SendToParent>:
 80046e6:	b538      	push	{r3, r4, r5, lr}
 80046e8:	4605      	mov	r5, r0
 80046ea:	460c      	mov	r4, r1
 80046ec:	b141      	cbz	r1, 8004700 <WM_SendToParent+0x1a>
 80046ee:	f7ff fe63 	bl	80043b8 <WM_GetParent>
 80046f2:	b128      	cbz	r0, 8004700 <WM_SendToParent+0x1a>
 80046f4:	60a5      	str	r5, [r4, #8]
 80046f6:	4621      	mov	r1, r4
 80046f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80046fc:	f7ff bade 	b.w	8003cbc <WM__SendMessage>
 8004700:	bd38      	pop	{r3, r4, r5, pc}

08004702 <WM_NotifyParent>:
 8004702:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004704:	2326      	movs	r3, #38	; 0x26
 8004706:	9103      	str	r1, [sp, #12]
 8004708:	4669      	mov	r1, sp
 800470a:	9300      	str	r3, [sp, #0]
 800470c:	f7ff ffeb 	bl	80046e6 <WM_SendToParent>
 8004710:	b005      	add	sp, #20
 8004712:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08004718 <WM_SetFocus>:
 8004718:	b5f0      	push	{r4, r5, r6, r7, lr}
 800471a:	b087      	sub	sp, #28
 800471c:	4604      	mov	r4, r0
 800471e:	2100      	movs	r1, #0
 8004720:	a802      	add	r0, sp, #8
 8004722:	2210      	movs	r2, #16
 8004724:	f008 fe50 	bl	800d3c8 <memset>
 8004728:	2c00      	cmp	r4, #0
 800472a:	d03a      	beq.n	80047a2 <WM_SetFocus+0x8a>
 800472c:	4b1f      	ldr	r3, [pc, #124]	; (80047ac <WM_SetFocus+0x94>)
 800472e:	4a20      	ldr	r2, [pc, #128]	; (80047b0 <WM_SetFocus+0x98>)
 8004730:	6819      	ldr	r1, [r3, #0]
 8004732:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 8004736:	4284      	cmp	r4, r0
 8004738:	4616      	mov	r6, r2
 800473a:	461f      	mov	r7, r3
 800473c:	d031      	beq.n	80047a2 <WM_SetFocus+0x8a>
 800473e:	231e      	movs	r3, #30
 8004740:	e88d 0011 	stmia.w	sp, {r0, r4}
 8004744:	9302      	str	r3, [sp, #8]
 8004746:	b110      	cbz	r0, 800474e <WM_SetFocus+0x36>
 8004748:	a902      	add	r1, sp, #8
 800474a:	f7ff fab7 	bl	8003cbc <WM__SendMessage>
 800474e:	2301      	movs	r3, #1
 8004750:	4620      	mov	r0, r4
 8004752:	a902      	add	r1, sp, #8
 8004754:	9305      	str	r3, [sp, #20]
 8004756:	f7ff fab1 	bl	8003cbc <WM__SendMessage>
 800475a:	9d05      	ldr	r5, [sp, #20]
 800475c:	bb15      	cbnz	r5, 80047a4 <WM_SetFocus+0x8c>
 800475e:	683b      	ldr	r3, [r7, #0]
 8004760:	f846 4023 	str.w	r4, [r6, r3, lsl #2]
 8004764:	4620      	mov	r0, r4
 8004766:	f7ff fe27 	bl	80043b8 <WM_GetParent>
 800476a:	4604      	mov	r4, r0
 800476c:	b138      	cbz	r0, 800477e <WM_SetFocus+0x66>
 800476e:	2320      	movs	r3, #32
 8004770:	9302      	str	r3, [sp, #8]
 8004772:	a902      	add	r1, sp, #8
 8004774:	ab00      	add	r3, sp, #0
 8004776:	9305      	str	r3, [sp, #20]
 8004778:	f7ff faa0 	bl	8003cbc <WM__SendMessage>
 800477c:	e7f2      	b.n	8004764 <WM_SetFocus+0x4c>
 800477e:	9c00      	ldr	r4, [sp, #0]
 8004780:	4620      	mov	r0, r4
 8004782:	f000 fc0f 	bl	8004fa4 <WM__IsWindow>
 8004786:	b168      	cbz	r0, 80047a4 <WM_SetFocus+0x8c>
 8004788:	4620      	mov	r0, r4
 800478a:	f7ff fe15 	bl	80043b8 <WM_GetParent>
 800478e:	4604      	mov	r4, r0
 8004790:	b140      	cbz	r0, 80047a4 <WM_SetFocus+0x8c>
 8004792:	2320      	movs	r3, #32
 8004794:	9302      	str	r3, [sp, #8]
 8004796:	a902      	add	r1, sp, #8
 8004798:	ab00      	add	r3, sp, #0
 800479a:	9305      	str	r3, [sp, #20]
 800479c:	f7ff fa8e 	bl	8003cbc <WM__SendMessage>
 80047a0:	e7f2      	b.n	8004788 <WM_SetFocus+0x70>
 80047a2:	2501      	movs	r5, #1
 80047a4:	4628      	mov	r0, r5
 80047a6:	b007      	add	sp, #28
 80047a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80047aa:	bf00      	nop
 80047ac:	20000450 	.word	0x20000450
 80047b0:	20000440 	.word	0x20000440

080047b4 <WM_SetScrollState>:
 80047b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80047b6:	b130      	cbz	r0, 80047c6 <WM_SetScrollState+0x12>
 80047b8:	b129      	cbz	r1, 80047c6 <WM_SetScrollState+0x12>
 80047ba:	2324      	movs	r3, #36	; 0x24
 80047bc:	9103      	str	r1, [sp, #12]
 80047be:	4669      	mov	r1, sp
 80047c0:	9300      	str	r3, [sp, #0]
 80047c2:	f000 fc38 	bl	8005036 <WM_SendMessage>
 80047c6:	b005      	add	sp, #20
 80047c8:	f85d fb04 	ldr.w	pc, [sp], #4

080047cc <WM_SetSize>:
 80047cc:	e92d 41e7 	stmdb	sp!, {r0, r1, r2, r5, r6, r7, r8, lr}
 80047d0:	460e      	mov	r6, r1
 80047d2:	4690      	mov	r8, r2
 80047d4:	4607      	mov	r7, r0
 80047d6:	b1d0      	cbz	r0, 800480e <WM_SetSize+0x42>
 80047d8:	f005 f834 	bl	8009844 <GUI_ALLOC_LockH>
 80047dc:	4603      	mov	r3, r0
 80047de:	a802      	add	r0, sp, #8
 80047e0:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80047e4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80047e8:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 80047ec:	f840 3d04 	str.w	r3, [r0, #-4]!
 80047f0:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80047f4:	1a8a      	subs	r2, r1, r2
 80047f6:	1aed      	subs	r5, r5, r3
 80047f8:	43d2      	mvns	r2, r2
 80047fa:	43ed      	mvns	r5, r5
 80047fc:	4416      	add	r6, r2
 80047fe:	4445      	add	r5, r8
 8004800:	f005 f82e 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004804:	4638      	mov	r0, r7
 8004806:	4631      	mov	r1, r6
 8004808:	462a      	mov	r2, r5
 800480a:	f7ff feef 	bl	80045ec <WM_ResizeWindow>
 800480e:	b003      	add	sp, #12
 8004810:	e8bd 81e0 	ldmia.w	sp!, {r5, r6, r7, r8, pc}

08004814 <WM_SetUserClipRect>:
 8004814:	4b04      	ldr	r3, [pc, #16]	; (8004828 <WM_SetUserClipRect+0x14>)
 8004816:	b510      	push	{r4, lr}
 8004818:	681b      	ldr	r3, [r3, #0]
 800481a:	6c5c      	ldr	r4, [r3, #68]	; 0x44
 800481c:	6458      	str	r0, [r3, #68]	; 0x44
 800481e:	f000 fb9d 	bl	8004f5c <WM__ActivateClipRect>
 8004822:	4620      	mov	r0, r4
 8004824:	bd10      	pop	{r4, pc}
 8004826:	bf00      	nop
 8004828:	200000b0 	.word	0x200000b0

0800482c <WM_InvalidateWindowAndDescs>:
 800482c:	b510      	push	{r4, lr}
 800482e:	4604      	mov	r4, r0
 8004830:	b170      	cbz	r0, 8004850 <WM_InvalidateWindowAndDescs+0x24>
 8004832:	f000 fd59 	bl	80052e8 <WM_InvalidateWindow>
 8004836:	4620      	mov	r0, r4
 8004838:	f7ff fd1d 	bl	8004276 <WM_GetFirstChild>
 800483c:	4604      	mov	r4, r0
 800483e:	b13c      	cbz	r4, 8004850 <WM_InvalidateWindowAndDescs+0x24>
 8004840:	4620      	mov	r0, r4
 8004842:	f7ff fff3 	bl	800482c <WM_InvalidateWindowAndDescs>
 8004846:	4620      	mov	r0, r4
 8004848:	f004 fff2 	bl	8009830 <GUI_ALLOC_h2p>
 800484c:	6a04      	ldr	r4, [r0, #32]
 800484e:	e7f6      	b.n	800483e <WM_InvalidateWindowAndDescs+0x12>
 8004850:	bd10      	pop	{r4, pc}

08004852 <WM_ShowWindow>:
 8004852:	b513      	push	{r0, r1, r4, lr}
 8004854:	4604      	mov	r4, r0
 8004856:	b170      	cbz	r0, 8004876 <WM_ShowWindow+0x24>
 8004858:	f004 fff4 	bl	8009844 <GUI_ALLOC_LockH>
 800485c:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800485e:	9001      	str	r0, [sp, #4]
 8004860:	0793      	lsls	r3, r2, #30
 8004862:	d405      	bmi.n	8004870 <WM_ShowWindow+0x1e>
 8004864:	f042 0202 	orr.w	r2, r2, #2
 8004868:	6282      	str	r2, [r0, #40]	; 0x28
 800486a:	4620      	mov	r0, r4
 800486c:	f7ff ffde 	bl	800482c <WM_InvalidateWindowAndDescs>
 8004870:	a801      	add	r0, sp, #4
 8004872:	f004 fff5 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004876:	b002      	add	sp, #8
 8004878:	bd10      	pop	{r4, pc}
	...

0800487c <WM_ValidateWindow>:
 800487c:	b507      	push	{r0, r1, r2, lr}
 800487e:	b178      	cbz	r0, 80048a0 <WM_ValidateWindow+0x24>
 8004880:	f004 ffe0 	bl	8009844 <GUI_ALLOC_LockH>
 8004884:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004886:	9001      	str	r0, [sp, #4]
 8004888:	069a      	lsls	r2, r3, #26
 800488a:	d506      	bpl.n	800489a <WM_ValidateWindow+0x1e>
 800488c:	f023 0320 	bic.w	r3, r3, #32
 8004890:	6283      	str	r3, [r0, #40]	; 0x28
 8004892:	4b05      	ldr	r3, [pc, #20]	; (80048a8 <WM_ValidateWindow+0x2c>)
 8004894:	881a      	ldrh	r2, [r3, #0]
 8004896:	3a01      	subs	r2, #1
 8004898:	801a      	strh	r2, [r3, #0]
 800489a:	a801      	add	r0, sp, #4
 800489c:	f004 ffe0 	bl	8009860 <GUI_ALLOC_UnlockH>
 80048a0:	b003      	add	sp, #12
 80048a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80048a6:	bf00      	nop
 80048a8:	20000448 	.word	0x20000448

080048ac <WM_HideWindow>:
 80048ac:	b513      	push	{r0, r1, r4, lr}
 80048ae:	b188      	cbz	r0, 80048d4 <WM_HideWindow+0x28>
 80048b0:	f004 ffc8 	bl	8009844 <GUI_ALLOC_LockH>
 80048b4:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80048b6:	ac02      	add	r4, sp, #8
 80048b8:	0791      	lsls	r1, r2, #30
 80048ba:	f844 0d04 	str.w	r0, [r4, #-4]!
 80048be:	d506      	bpl.n	80048ce <WM_HideWindow+0x22>
 80048c0:	f022 0202 	bic.w	r2, r2, #2
 80048c4:	6282      	str	r2, [r0, #40]	; 0x28
 80048c6:	6981      	ldr	r1, [r0, #24]
 80048c8:	6a02      	ldr	r2, [r0, #32]
 80048ca:	f000 fcb9 	bl	8005240 <WM__InvalidateRectEx>
 80048ce:	4620      	mov	r0, r4
 80048d0:	f004 ffc6 	bl	8009860 <GUI_ALLOC_UnlockH>
 80048d4:	b002      	add	sp, #8
 80048d6:	bd10      	pop	{r4, pc}

080048d8 <WM__GetWindowSizeX>:
 80048d8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80048dc:	f9b0 3000 	ldrsh.w	r3, [r0]
 80048e0:	1ad0      	subs	r0, r2, r3
 80048e2:	3001      	adds	r0, #1
 80048e4:	4770      	bx	lr

080048e6 <WM__GetWindowSizeY>:
 80048e6:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80048ea:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80048ee:	1ad0      	subs	r0, r2, r3
 80048f0:	3001      	adds	r0, #1
 80048f2:	4770      	bx	lr

080048f4 <WM_GetWindowSizeX>:
 80048f4:	b513      	push	{r0, r1, r4, lr}
 80048f6:	b908      	cbnz	r0, 80048fc <WM_GetWindowSizeX+0x8>
 80048f8:	f000 fe9a 	bl	8005630 <WM_GetActiveWindow>
 80048fc:	f004 ffa2 	bl	8009844 <GUI_ALLOC_LockH>
 8004900:	ab02      	add	r3, sp, #8
 8004902:	f9b0 2000 	ldrsh.w	r2, [r0]
 8004906:	f843 0d04 	str.w	r0, [r3, #-4]!
 800490a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800490e:	4618      	mov	r0, r3
 8004910:	1aa4      	subs	r4, r4, r2
 8004912:	f004 ffa5 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004916:	3401      	adds	r4, #1
 8004918:	4620      	mov	r0, r4
 800491a:	b002      	add	sp, #8
 800491c:	bd10      	pop	{r4, pc}

0800491e <WM_GetWindowSizeY>:
 800491e:	b513      	push	{r0, r1, r4, lr}
 8004920:	b908      	cbnz	r0, 8004926 <WM_GetWindowSizeY+0x8>
 8004922:	f000 fe85 	bl	8005630 <WM_GetActiveWindow>
 8004926:	f004 ff8d 	bl	8009844 <GUI_ALLOC_LockH>
 800492a:	ab02      	add	r3, sp, #8
 800492c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8004930:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004934:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8004938:	4618      	mov	r0, r3
 800493a:	1aa4      	subs	r4, r4, r2
 800493c:	f004 ff90 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004940:	3401      	adds	r4, #1
 8004942:	4620      	mov	r0, r4
 8004944:	b002      	add	sp, #8
 8004946:	bd10      	pop	{r4, pc}

08004948 <_cbInvalidateOne>:
 8004948:	f000 bcce 	b.w	80052e8 <WM_InvalidateWindow>

0800494c <WM_BringToTop>:
 800494c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800494e:	4605      	mov	r5, r0
 8004950:	2800      	cmp	r0, #0
 8004952:	d032      	beq.n	80049ba <WM_BringToTop+0x6e>
 8004954:	f004 ff76 	bl	8009844 <GUI_ALLOC_LockH>
 8004958:	ac02      	add	r4, sp, #8
 800495a:	4603      	mov	r3, r0
 800495c:	f844 0d08 	str.w	r0, [r4, #-8]!
 8004960:	6a00      	ldr	r0, [r0, #32]
 8004962:	b908      	cbnz	r0, 8004968 <WM_BringToTop+0x1c>
 8004964:	4668      	mov	r0, sp
 8004966:	e00e      	b.n	8004986 <WM_BringToTop+0x3a>
 8004968:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800496a:	071a      	lsls	r2, r3, #28
 800496c:	d411      	bmi.n	8004992 <WM_BringToTop+0x46>
 800496e:	f004 ff69 	bl	8009844 <GUI_ALLOC_LockH>
 8004972:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004974:	ae02      	add	r6, sp, #8
 8004976:	071b      	lsls	r3, r3, #28
 8004978:	f846 0d04 	str.w	r0, [r6, #-4]!
 800497c:	d506      	bpl.n	800498c <WM_BringToTop+0x40>
 800497e:	4668      	mov	r0, sp
 8004980:	f004 ff6e 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004984:	4630      	mov	r0, r6
 8004986:	f004 ff6b 	bl	8009860 <GUI_ALLOC_UnlockH>
 800498a:	e016      	b.n	80049ba <WM_BringToTop+0x6e>
 800498c:	4630      	mov	r0, r6
 800498e:	f004 ff67 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004992:	9b00      	ldr	r3, [sp, #0]
 8004994:	4668      	mov	r0, sp
 8004996:	699e      	ldr	r6, [r3, #24]
 8004998:	f004 ff62 	bl	8009860 <GUI_ALLOC_UnlockH>
 800499c:	4628      	mov	r0, r5
 800499e:	f000 fa8f 	bl	8004ec0 <WM__RemoveWindowFromList>
 80049a2:	4631      	mov	r1, r6
 80049a4:	4628      	mov	r0, r5
 80049a6:	f000 fa39 	bl	8004e1c <WM__InsertWindowIntoList>
 80049aa:	4628      	mov	r0, r5
 80049ac:	f000 fc9c 	bl	80052e8 <WM_InvalidateWindow>
 80049b0:	4628      	mov	r0, r5
 80049b2:	4903      	ldr	r1, [pc, #12]	; (80049c0 <WM_BringToTop+0x74>)
 80049b4:	2200      	movs	r2, #0
 80049b6:	f7ff fc22 	bl	80041fe <WM_ForEachDesc>
 80049ba:	b002      	add	sp, #8
 80049bc:	bd70      	pop	{r4, r5, r6, pc}
 80049be:	bf00      	nop
 80049c0:	08004949 	.word	0x08004949

080049c4 <_Paint1>:
 80049c4:	b510      	push	{r4, lr}
 80049c6:	4604      	mov	r4, r0
 80049c8:	f004 ff32 	bl	8009830 <GUI_ALLOC_h2p>
 80049cc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80049ce:	4a04      	ldr	r2, [pc, #16]	; (80049e0 <_Paint1+0x1c>)
 80049d0:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80049d4:	4b03      	ldr	r3, [pc, #12]	; (80049e4 <_Paint1+0x20>)
 80049d6:	4620      	mov	r0, r4
 80049d8:	bf08      	it	eq
 80049da:	4613      	moveq	r3, r2
 80049dc:	4798      	blx	r3
 80049de:	bd10      	pop	{r4, pc}
 80049e0:	080058d1 	.word	0x080058d1
 80049e4:	08005d01 	.word	0x08005d01

080049e8 <_Findy1>:
 80049e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80049ea:	4605      	mov	r5, r0
 80049ec:	b085      	sub	sp, #20
 80049ee:	460c      	mov	r4, r1
 80049f0:	4616      	mov	r6, r2
 80049f2:	2d00      	cmp	r5, #0
 80049f4:	d04c      	beq.n	8004a90 <_Findy1+0xa8>
 80049f6:	4628      	mov	r0, r5
 80049f8:	f004 ff24 	bl	8009844 <GUI_ALLOC_LockH>
 80049fc:	6a87      	ldr	r7, [r0, #40]	; 0x28
 80049fe:	9001      	str	r0, [sp, #4]
 8004a00:	07bb      	lsls	r3, r7, #30
 8004a02:	4601      	mov	r1, r0
 8004a04:	d53d      	bpl.n	8004a82 <_Findy1+0x9a>
 8004a06:	ad02      	add	r5, sp, #8
 8004a08:	b126      	cbz	r6, 8004a14 <_Findy1+0x2c>
 8004a0a:	4628      	mov	r0, r5
 8004a0c:	4632      	mov	r2, r6
 8004a0e:	f002 fd5a 	bl	80074c6 <GUI__IntersectRects>
 8004a12:	e002      	b.n	8004a1a <_Findy1+0x32>
 8004a14:	c803      	ldmia	r0, {r0, r1}
 8004a16:	e885 0003 	stmia.w	r5, {r0, r1}
 8004a1a:	4620      	mov	r0, r4
 8004a1c:	4629      	mov	r1, r5
 8004a1e:	f004 fa8d 	bl	8008f3c <GUI_RectsIntersect>
 8004a22:	b370      	cbz	r0, 8004a82 <_Findy1+0x9a>
 8004a24:	f017 0f01 	tst.w	r7, #1
 8004a28:	9b01      	ldr	r3, [sp, #4]
 8004a2a:	d11e      	bne.n	8004a6a <_Findy1+0x82>
 8004a2c:	b13e      	cbz	r6, 8004a3e <_Findy1+0x56>
 8004a2e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8004a32:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8004a36:	429a      	cmp	r2, r3
 8004a38:	bfa8      	it	ge
 8004a3a:	4613      	movge	r3, r2
 8004a3c:	e001      	b.n	8004a42 <_Findy1+0x5a>
 8004a3e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004a42:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8004a46:	4293      	cmp	r3, r2
 8004a48:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8004a4c:	dd06      	ble.n	8004a5c <_Findy1+0x74>
 8004a4e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8004a52:	b219      	sxth	r1, r3
 8004a54:	428a      	cmp	r2, r1
 8004a56:	db14      	blt.n	8004a82 <_Findy1+0x9a>
 8004a58:	3b01      	subs	r3, #1
 8004a5a:	e004      	b.n	8004a66 <_Findy1+0x7e>
 8004a5c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8004a60:	b219      	sxth	r1, r3
 8004a62:	428a      	cmp	r2, r1
 8004a64:	dd0d      	ble.n	8004a82 <_Findy1+0x9a>
 8004a66:	80e3      	strh	r3, [r4, #6]
 8004a68:	e00b      	b.n	8004a82 <_Findy1+0x9a>
 8004a6a:	69df      	ldr	r7, [r3, #28]
 8004a6c:	b14f      	cbz	r7, 8004a82 <_Findy1+0x9a>
 8004a6e:	4638      	mov	r0, r7
 8004a70:	4621      	mov	r1, r4
 8004a72:	462a      	mov	r2, r5
 8004a74:	f7ff ffb8 	bl	80049e8 <_Findy1>
 8004a78:	4638      	mov	r0, r7
 8004a7a:	f004 fed9 	bl	8009830 <GUI_ALLOC_h2p>
 8004a7e:	6a07      	ldr	r7, [r0, #32]
 8004a80:	e7f4      	b.n	8004a6c <_Findy1+0x84>
 8004a82:	a804      	add	r0, sp, #16
 8004a84:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 8004a88:	6a1d      	ldr	r5, [r3, #32]
 8004a8a:	f004 fee9 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004a8e:	e7b0      	b.n	80049f2 <_Findy1+0xa>
 8004a90:	b005      	add	sp, #20
 8004a92:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004a94 <_Findx0>:
 8004a94:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004a98:	4604      	mov	r4, r0
 8004a9a:	460f      	mov	r7, r1
 8004a9c:	4690      	mov	r8, r2
 8004a9e:	2500      	movs	r5, #0
 8004aa0:	2c00      	cmp	r4, #0
 8004aa2:	d037      	beq.n	8004b14 <_Findx0+0x80>
 8004aa4:	4620      	mov	r0, r4
 8004aa6:	f004 fecd 	bl	8009844 <GUI_ALLOC_LockH>
 8004aaa:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8004aac:	9001      	str	r0, [sp, #4]
 8004aae:	07b2      	lsls	r2, r6, #30
 8004ab0:	4601      	mov	r1, r0
 8004ab2:	d528      	bpl.n	8004b06 <_Findx0+0x72>
 8004ab4:	ac02      	add	r4, sp, #8
 8004ab6:	f1b8 0f00 	cmp.w	r8, #0
 8004aba:	d004      	beq.n	8004ac6 <_Findx0+0x32>
 8004abc:	4620      	mov	r0, r4
 8004abe:	4642      	mov	r2, r8
 8004ac0:	f002 fd01 	bl	80074c6 <GUI__IntersectRects>
 8004ac4:	e002      	b.n	8004acc <_Findx0+0x38>
 8004ac6:	c803      	ldmia	r0, {r0, r1}
 8004ac8:	e884 0003 	stmia.w	r4, {r0, r1}
 8004acc:	4638      	mov	r0, r7
 8004ace:	4621      	mov	r1, r4
 8004ad0:	f004 fa34 	bl	8008f3c <GUI_RectsIntersect>
 8004ad4:	b1b8      	cbz	r0, 8004b06 <_Findx0+0x72>
 8004ad6:	07f3      	lsls	r3, r6, #31
 8004ad8:	d405      	bmi.n	8004ae6 <_Findx0+0x52>
 8004ada:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8004ade:	3301      	adds	r3, #1
 8004ae0:	803b      	strh	r3, [r7, #0]
 8004ae2:	2501      	movs	r5, #1
 8004ae4:	e00f      	b.n	8004b06 <_Findx0+0x72>
 8004ae6:	9b01      	ldr	r3, [sp, #4]
 8004ae8:	69de      	ldr	r6, [r3, #28]
 8004aea:	b166      	cbz	r6, 8004b06 <_Findx0+0x72>
 8004aec:	4630      	mov	r0, r6
 8004aee:	4639      	mov	r1, r7
 8004af0:	4622      	mov	r2, r4
 8004af2:	f7ff ffcf 	bl	8004a94 <_Findx0>
 8004af6:	2800      	cmp	r0, #0
 8004af8:	4630      	mov	r0, r6
 8004afa:	bf18      	it	ne
 8004afc:	2501      	movne	r5, #1
 8004afe:	f004 fe97 	bl	8009830 <GUI_ALLOC_h2p>
 8004b02:	6a06      	ldr	r6, [r0, #32]
 8004b04:	e7f1      	b.n	8004aea <_Findx0+0x56>
 8004b06:	a804      	add	r0, sp, #16
 8004b08:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 8004b0c:	6a1c      	ldr	r4, [r3, #32]
 8004b0e:	f004 fea7 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004b12:	e7c5      	b.n	8004aa0 <_Findx0+0xc>
 8004b14:	4628      	mov	r0, r5
 8004b16:	b004      	add	sp, #16
 8004b18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004b1c <_Findx1>:
 8004b1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004b1e:	4604      	mov	r4, r0
 8004b20:	b085      	sub	sp, #20
 8004b22:	460e      	mov	r6, r1
 8004b24:	4617      	mov	r7, r2
 8004b26:	2c00      	cmp	r4, #0
 8004b28:	d031      	beq.n	8004b8e <_Findx1+0x72>
 8004b2a:	4620      	mov	r0, r4
 8004b2c:	f004 fe8a 	bl	8009844 <GUI_ALLOC_LockH>
 8004b30:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8004b32:	9001      	str	r0, [sp, #4]
 8004b34:	07aa      	lsls	r2, r5, #30
 8004b36:	4601      	mov	r1, r0
 8004b38:	d522      	bpl.n	8004b80 <_Findx1+0x64>
 8004b3a:	ac02      	add	r4, sp, #8
 8004b3c:	b127      	cbz	r7, 8004b48 <_Findx1+0x2c>
 8004b3e:	4620      	mov	r0, r4
 8004b40:	463a      	mov	r2, r7
 8004b42:	f002 fcc0 	bl	80074c6 <GUI__IntersectRects>
 8004b46:	e002      	b.n	8004b4e <_Findx1+0x32>
 8004b48:	c803      	ldmia	r0, {r0, r1}
 8004b4a:	e884 0003 	stmia.w	r4, {r0, r1}
 8004b4e:	4630      	mov	r0, r6
 8004b50:	4621      	mov	r1, r4
 8004b52:	f004 f9f3 	bl	8008f3c <GUI_RectsIntersect>
 8004b56:	b198      	cbz	r0, 8004b80 <_Findx1+0x64>
 8004b58:	07eb      	lsls	r3, r5, #31
 8004b5a:	d404      	bmi.n	8004b66 <_Findx1+0x4a>
 8004b5c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8004b60:	3b01      	subs	r3, #1
 8004b62:	80b3      	strh	r3, [r6, #4]
 8004b64:	e00c      	b.n	8004b80 <_Findx1+0x64>
 8004b66:	9b01      	ldr	r3, [sp, #4]
 8004b68:	69dd      	ldr	r5, [r3, #28]
 8004b6a:	b14d      	cbz	r5, 8004b80 <_Findx1+0x64>
 8004b6c:	4628      	mov	r0, r5
 8004b6e:	4631      	mov	r1, r6
 8004b70:	4622      	mov	r2, r4
 8004b72:	f7ff ffd3 	bl	8004b1c <_Findx1>
 8004b76:	4628      	mov	r0, r5
 8004b78:	f004 fe5a 	bl	8009830 <GUI_ALLOC_h2p>
 8004b7c:	6a05      	ldr	r5, [r0, #32]
 8004b7e:	e7f4      	b.n	8004b6a <_Findx1+0x4e>
 8004b80:	a804      	add	r0, sp, #16
 8004b82:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 8004b86:	6a1c      	ldr	r4, [r3, #32]
 8004b88:	f004 fe6a 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004b8c:	e7cb      	b.n	8004b26 <_Findx1+0xa>
 8004b8e:	b005      	add	sp, #20
 8004b90:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08004b94 <_Paint1Trans>:
 8004b94:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8004b98:	4d21      	ldr	r5, [pc, #132]	; (8004c20 <_Paint1Trans+0x8c>)
 8004b9a:	682b      	ldr	r3, [r5, #0]
 8004b9c:	4606      	mov	r6, r0
 8004b9e:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8004ba0:	f004 fe50 	bl	8009844 <GUI_ALLOC_LockH>
 8004ba4:	9000      	str	r0, [sp, #0]
 8004ba6:	4630      	mov	r0, r6
 8004ba8:	f004 fe4c 	bl	8009844 <GUI_ALLOC_LockH>
 8004bac:	ac02      	add	r4, sp, #8
 8004bae:	4601      	mov	r1, r0
 8004bb0:	9001      	str	r0, [sp, #4]
 8004bb2:	f854 0d08 	ldr.w	r0, [r4, #-8]!
 8004bb6:	3008      	adds	r0, #8
 8004bb8:	f004 f9c0 	bl	8008f3c <GUI_RectsIntersect>
 8004bbc:	4607      	mov	r7, r0
 8004bbe:	b328      	cbz	r0, 8004c0c <_Paint1Trans+0x78>
 8004bc0:	9901      	ldr	r1, [sp, #4]
 8004bc2:	9a00      	ldr	r2, [sp, #0]
 8004bc4:	682b      	ldr	r3, [r5, #0]
 8004bc6:	4c17      	ldr	r4, [pc, #92]	; (8004c24 <_Paint1Trans+0x90>)
 8004bc8:	6d1f      	ldr	r7, [r3, #80]	; 0x50
 8004bca:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 8004bce:	f101 0008 	add.w	r0, r1, #8
 8004bd2:	3208      	adds	r2, #8
 8004bd4:	f002 fc77 	bl	80074c6 <GUI__IntersectRects>
 8004bd8:	4668      	mov	r0, sp
 8004bda:	f004 fe41 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004bde:	9a01      	ldr	r2, [sp, #4]
 8004be0:	682b      	ldr	r3, [r5, #0]
 8004be2:	f9b2 1000 	ldrsh.w	r1, [r2]
 8004be6:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 8004bea:	64d9      	str	r1, [r3, #76]	; 0x4c
 8004bec:	651a      	str	r2, [r3, #80]	; 0x50
 8004bee:	a801      	add	r0, sp, #4
 8004bf0:	6026      	str	r6, [r4, #0]
 8004bf2:	f004 fe35 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004bf6:	4630      	mov	r0, r6
 8004bf8:	f7ff fee4 	bl	80049c4 <_Paint1>
 8004bfc:	2300      	movs	r3, #0
 8004bfe:	6023      	str	r3, [r4, #0]
 8004c00:	682b      	ldr	r3, [r5, #0]
 8004c02:	651f      	str	r7, [r3, #80]	; 0x50
 8004c04:	f8c3 804c 	str.w	r8, [r3, #76]	; 0x4c
 8004c08:	2701      	movs	r7, #1
 8004c0a:	e005      	b.n	8004c18 <_Paint1Trans+0x84>
 8004c0c:	4668      	mov	r0, sp
 8004c0e:	f004 fe27 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004c12:	a801      	add	r0, sp, #4
 8004c14:	f004 fe24 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004c18:	4638      	mov	r0, r7
 8004c1a:	b002      	add	sp, #8
 8004c1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004c20:	200000b0 	.word	0x200000b0
 8004c24:	2000042c 	.word	0x2000042c

08004c28 <_PaintTransChildren>:
 8004c28:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8004c2c:	4606      	mov	r6, r0
 8004c2e:	f004 fe09 	bl	8009844 <GUI_ALLOC_LockH>
 8004c32:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004c34:	9001      	str	r0, [sp, #4]
 8004c36:	079b      	lsls	r3, r3, #30
 8004c38:	d405      	bmi.n	8004c46 <_PaintTransChildren+0x1e>
 8004c3a:	a801      	add	r0, sp, #4
 8004c3c:	f004 fe10 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004c40:	b002      	add	sp, #8
 8004c42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004c46:	69c4      	ldr	r4, [r0, #28]
 8004c48:	2c00      	cmp	r4, #0
 8004c4a:	d0f6      	beq.n	8004c3a <_PaintTransChildren+0x12>
 8004c4c:	4620      	mov	r0, r4
 8004c4e:	f004 fdf9 	bl	8009844 <GUI_ALLOC_LockH>
 8004c52:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004c54:	ad02      	add	r5, sp, #8
 8004c56:	f003 0303 	and.w	r3, r3, #3
 8004c5a:	2b03      	cmp	r3, #3
 8004c5c:	f845 0d08 	str.w	r0, [r5, #-8]!
 8004c60:	d137      	bne.n	8004cd2 <_PaintTransChildren+0xaa>
 8004c62:	9901      	ldr	r1, [sp, #4]
 8004c64:	3108      	adds	r1, #8
 8004c66:	f004 f969 	bl	8008f3c <GUI_RectsIntersect>
 8004c6a:	2800      	cmp	r0, #0
 8004c6c:	d031      	beq.n	8004cd2 <_PaintTransChildren+0xaa>
 8004c6e:	a802      	add	r0, sp, #8
 8004c70:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8004c74:	f8b3 9008 	ldrh.w	r9, [r3, #8]
 8004c78:	f8b3 800a 	ldrh.w	r8, [r3, #10]
 8004c7c:	899f      	ldrh	r7, [r3, #12]
 8004c7e:	f8b3 a00e 	ldrh.w	sl, [r3, #14]
 8004c82:	f004 fded 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004c86:	4668      	mov	r0, sp
 8004c88:	f004 fdea 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004c8c:	4620      	mov	r0, r4
 8004c8e:	f7ff ff81 	bl	8004b94 <_Paint1Trans>
 8004c92:	b170      	cbz	r0, 8004cb2 <_PaintTransChildren+0x8a>
 8004c94:	4620      	mov	r0, r4
 8004c96:	f004 fdcb 	bl	8009830 <GUI_ALLOC_h2p>
 8004c9a:	9000      	str	r0, [sp, #0]
 8004c9c:	4620      	mov	r0, r4
 8004c9e:	f7ff ffc3 	bl	8004c28 <_PaintTransChildren>
 8004ca2:	4620      	mov	r0, r4
 8004ca4:	f004 fdc4 	bl	8009830 <GUI_ALLOC_h2p>
 8004ca8:	9000      	str	r0, [sp, #0]
 8004caa:	4630      	mov	r0, r6
 8004cac:	f004 fdc0 	bl	8009830 <GUI_ALLOC_h2p>
 8004cb0:	9001      	str	r0, [sp, #4]
 8004cb2:	4630      	mov	r0, r6
 8004cb4:	f004 fdc6 	bl	8009844 <GUI_ALLOC_LockH>
 8004cb8:	9001      	str	r0, [sp, #4]
 8004cba:	4620      	mov	r0, r4
 8004cbc:	f004 fdc2 	bl	8009844 <GUI_ALLOC_LockH>
 8004cc0:	9b01      	ldr	r3, [sp, #4]
 8004cc2:	9000      	str	r0, [sp, #0]
 8004cc4:	f8a3 9008 	strh.w	r9, [r3, #8]
 8004cc8:	f8a3 800a 	strh.w	r8, [r3, #10]
 8004ccc:	819f      	strh	r7, [r3, #12]
 8004cce:	f8a3 a00e 	strh.w	sl, [r3, #14]
 8004cd2:	9b00      	ldr	r3, [sp, #0]
 8004cd4:	4668      	mov	r0, sp
 8004cd6:	6a1c      	ldr	r4, [r3, #32]
 8004cd8:	f004 fdc2 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004cdc:	e7b4      	b.n	8004c48 <_PaintTransChildren+0x20>
	...

08004ce0 <WM__PaintWinAndOverlays>:
 8004ce0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004ce2:	4604      	mov	r4, r0
 8004ce4:	f004 fdae 	bl	8009844 <GUI_ALLOC_LockH>
 8004ce8:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8004cea:	9001      	str	r0, [sp, #4]
 8004cec:	f640 0301 	movw	r3, #2049	; 0x801
 8004cf0:	4013      	ands	r3, r2
 8004cf2:	2b01      	cmp	r3, #1
 8004cf4:	d005      	beq.n	8004d02 <WM__PaintWinAndOverlays+0x22>
 8004cf6:	a801      	add	r0, sp, #4
 8004cf8:	f004 fdb2 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004cfc:	4620      	mov	r0, r4
 8004cfe:	f7ff fe61 	bl	80049c4 <_Paint1>
 8004d02:	4b14      	ldr	r3, [pc, #80]	; (8004d54 <WM__PaintWinAndOverlays+0x74>)
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	b313      	cbz	r3, 8004d4e <WM__PaintWinAndOverlays+0x6e>
 8004d08:	4620      	mov	r0, r4
 8004d0a:	f7ff ff8d 	bl	8004c28 <_PaintTransChildren>
 8004d0e:	4620      	mov	r0, r4
 8004d10:	f004 fd8e 	bl	8009830 <GUI_ALLOC_h2p>
 8004d14:	6985      	ldr	r5, [r0, #24]
 8004d16:	6a04      	ldr	r4, [r0, #32]
 8004d18:	b1cd      	cbz	r5, 8004d4e <WM__PaintWinAndOverlays+0x6e>
 8004d1a:	b194      	cbz	r4, 8004d42 <WM__PaintWinAndOverlays+0x62>
 8004d1c:	4620      	mov	r0, r4
 8004d1e:	f004 fd87 	bl	8009830 <GUI_ALLOC_h2p>
 8004d22:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004d24:	f003 0303 	and.w	r3, r3, #3
 8004d28:	2b03      	cmp	r3, #3
 8004d2a:	d102      	bne.n	8004d32 <WM__PaintWinAndOverlays+0x52>
 8004d2c:	4620      	mov	r0, r4
 8004d2e:	f7ff ff31 	bl	8004b94 <_Paint1Trans>
 8004d32:	4620      	mov	r0, r4
 8004d34:	f7ff ff78 	bl	8004c28 <_PaintTransChildren>
 8004d38:	4620      	mov	r0, r4
 8004d3a:	f004 fd79 	bl	8009830 <GUI_ALLOC_h2p>
 8004d3e:	6a04      	ldr	r4, [r0, #32]
 8004d40:	e7eb      	b.n	8004d1a <WM__PaintWinAndOverlays+0x3a>
 8004d42:	4628      	mov	r0, r5
 8004d44:	f004 fd74 	bl	8009830 <GUI_ALLOC_h2p>
 8004d48:	6a04      	ldr	r4, [r0, #32]
 8004d4a:	6985      	ldr	r5, [r0, #24]
 8004d4c:	e7e4      	b.n	8004d18 <WM__PaintWinAndOverlays+0x38>
 8004d4e:	b003      	add	sp, #12
 8004d50:	bd30      	pop	{r4, r5, pc}
 8004d52:	bf00      	nop
 8004d54:	20000480 	.word	0x20000480

08004d58 <_cbPaintMemDev>:
 8004d58:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8004d5c:	4d17      	ldr	r5, [pc, #92]	; (8004dbc <_cbPaintMemDev+0x64>)
 8004d5e:	682b      	ldr	r3, [r5, #0]
 8004d60:	4606      	mov	r6, r0
 8004d62:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8004d64:	f004 fd6e 	bl	8009844 <GUI_ALLOC_LockH>
 8004d68:	682a      	ldr	r2, [r5, #0]
 8004d6a:	f8b0 a008 	ldrh.w	sl, [r0, #8]
 8004d6e:	f8b0 900a 	ldrh.w	r9, [r0, #10]
 8004d72:	f8b0 800c 	ldrh.w	r8, [r0, #12]
 8004d76:	89c7      	ldrh	r7, [r0, #14]
 8004d78:	ac02      	add	r4, sp, #8
 8004d7a:	3208      	adds	r2, #8
 8004d7c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8004d80:	f100 0308 	add.w	r3, r0, #8
 8004d84:	e892 0003 	ldmia.w	r2, {r0, r1}
 8004d88:	e883 0003 	stmia.w	r3, {r0, r1}
 8004d8c:	4620      	mov	r0, r4
 8004d8e:	f004 fd67 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004d92:	6830      	ldr	r0, [r6, #0]
 8004d94:	f7ff ffa4 	bl	8004ce0 <WM__PaintWinAndOverlays>
 8004d98:	682b      	ldr	r3, [r5, #0]
 8004d9a:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8004d9c:	f004 fd52 	bl	8009844 <GUI_ALLOC_LockH>
 8004da0:	9001      	str	r0, [sp, #4]
 8004da2:	f8a0 a008 	strh.w	sl, [r0, #8]
 8004da6:	f8a0 900a 	strh.w	r9, [r0, #10]
 8004daa:	f8a0 800c 	strh.w	r8, [r0, #12]
 8004dae:	81c7      	strh	r7, [r0, #14]
 8004db0:	4620      	mov	r0, r4
 8004db2:	f004 fd55 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004db6:	b002      	add	sp, #8
 8004db8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004dbc:	200000b0 	.word	0x200000b0

08004dc0 <WM__ClipAtParentBorders>:
 8004dc0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004dc2:	4607      	mov	r7, r0
 8004dc4:	460d      	mov	r5, r1
 8004dc6:	4628      	mov	r0, r5
 8004dc8:	f004 fd3c 	bl	8009844 <GUI_ALLOC_LockH>
 8004dcc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004dce:	ac02      	add	r4, sp, #8
 8004dd0:	f013 0602 	ands.w	r6, r3, #2
 8004dd4:	4601      	mov	r1, r0
 8004dd6:	f844 0d04 	str.w	r0, [r4, #-4]!
 8004dda:	d104      	bne.n	8004de6 <WM__ClipAtParentBorders+0x26>
 8004ddc:	4620      	mov	r0, r4
 8004dde:	f004 fd3f 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004de2:	4630      	mov	r0, r6
 8004de4:	e016      	b.n	8004e14 <WM__ClipAtParentBorders+0x54>
 8004de6:	4638      	mov	r0, r7
 8004de8:	f002 fb4f 	bl	800748a <GUI__IntersectRect>
 8004dec:	9b01      	ldr	r3, [sp, #4]
 8004dee:	699e      	ldr	r6, [r3, #24]
 8004df0:	4620      	mov	r0, r4
 8004df2:	b956      	cbnz	r6, 8004e0a <WM__ClipAtParentBorders+0x4a>
 8004df4:	f004 fd34 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004df8:	4b07      	ldr	r3, [pc, #28]	; (8004e18 <WM__ClipAtParentBorders+0x58>)
 8004dfa:	681a      	ldr	r2, [r3, #0]
 8004dfc:	4295      	cmp	r5, r2
 8004dfe:	d008      	beq.n	8004e12 <WM__ClipAtParentBorders+0x52>
 8004e00:	6858      	ldr	r0, [r3, #4]
 8004e02:	1a2b      	subs	r3, r5, r0
 8004e04:	4258      	negs	r0, r3
 8004e06:	4158      	adcs	r0, r3
 8004e08:	e004      	b.n	8004e14 <WM__ClipAtParentBorders+0x54>
 8004e0a:	f004 fd29 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004e0e:	4635      	mov	r5, r6
 8004e10:	e7d9      	b.n	8004dc6 <WM__ClipAtParentBorders+0x6>
 8004e12:	2001      	movs	r0, #1
 8004e14:	b003      	add	sp, #12
 8004e16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004e18:	20000430 	.word	0x20000430

08004e1c <WM__InsertWindowIntoList>:
 8004e1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004e1e:	4604      	mov	r4, r0
 8004e20:	b085      	sub	sp, #20
 8004e22:	460d      	mov	r5, r1
 8004e24:	2900      	cmp	r1, #0
 8004e26:	d049      	beq.n	8004ebc <WM__InsertWindowIntoList+0xa0>
 8004e28:	f004 fd0c 	bl	8009844 <GUI_ALLOC_LockH>
 8004e2c:	2300      	movs	r3, #0
 8004e2e:	6203      	str	r3, [r0, #32]
 8004e30:	6185      	str	r5, [r0, #24]
 8004e32:	9001      	str	r0, [sp, #4]
 8004e34:	4628      	mov	r0, r5
 8004e36:	f004 fd05 	bl	8009844 <GUI_ALLOC_LockH>
 8004e3a:	9b01      	ldr	r3, [sp, #4]
 8004e3c:	69c5      	ldr	r5, [r0, #28]
 8004e3e:	9002      	str	r0, [sp, #8]
 8004e40:	6a9f      	ldr	r7, [r3, #40]	; 0x28
 8004e42:	b92d      	cbnz	r5, 8004e50 <WM__InsertWindowIntoList+0x34>
 8004e44:	61c4      	str	r4, [r0, #28]
 8004e46:	a801      	add	r0, sp, #4
 8004e48:	f004 fd0a 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004e4c:	a802      	add	r0, sp, #8
 8004e4e:	e033      	b.n	8004eb8 <WM__InsertWindowIntoList+0x9c>
 8004e50:	4628      	mov	r0, r5
 8004e52:	f004 fcf7 	bl	8009844 <GUI_ALLOC_LockH>
 8004e56:	ae04      	add	r6, sp, #16
 8004e58:	f007 0708 	and.w	r7, r7, #8
 8004e5c:	f846 0d04 	str.w	r0, [r6, #-4]!
 8004e60:	b977      	cbnz	r7, 8004e80 <WM__InsertWindowIntoList+0x64>
 8004e62:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004e64:	071a      	lsls	r2, r3, #28
 8004e66:	d50b      	bpl.n	8004e80 <WM__InsertWindowIntoList+0x64>
 8004e68:	9b01      	ldr	r3, [sp, #4]
 8004e6a:	621d      	str	r5, [r3, #32]
 8004e6c:	9b02      	ldr	r3, [sp, #8]
 8004e6e:	a801      	add	r0, sp, #4
 8004e70:	61dc      	str	r4, [r3, #28]
 8004e72:	f004 fcf5 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004e76:	a802      	add	r0, sp, #8
 8004e78:	f004 fcf2 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004e7c:	4630      	mov	r0, r6
 8004e7e:	e01b      	b.n	8004eb8 <WM__InsertWindowIntoList+0x9c>
 8004e80:	a802      	add	r0, sp, #8
 8004e82:	f004 fced 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004e86:	4630      	mov	r0, r6
 8004e88:	f004 fcea 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004e8c:	4628      	mov	r0, r5
 8004e8e:	f004 fccf 	bl	8009830 <GUI_ALLOC_h2p>
 8004e92:	9003      	str	r0, [sp, #12]
 8004e94:	9b03      	ldr	r3, [sp, #12]
 8004e96:	6a1d      	ldr	r5, [r3, #32]
 8004e98:	b90d      	cbnz	r5, 8004e9e <WM__InsertWindowIntoList+0x82>
 8004e9a:	621c      	str	r4, [r3, #32]
 8004e9c:	e00b      	b.n	8004eb6 <WM__InsertWindowIntoList+0x9a>
 8004e9e:	4628      	mov	r0, r5
 8004ea0:	f004 fcc6 	bl	8009830 <GUI_ALLOC_h2p>
 8004ea4:	2f00      	cmp	r7, #0
 8004ea6:	d1f4      	bne.n	8004e92 <WM__InsertWindowIntoList+0x76>
 8004ea8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004eaa:	071b      	lsls	r3, r3, #28
 8004eac:	d5f1      	bpl.n	8004e92 <WM__InsertWindowIntoList+0x76>
 8004eae:	9b03      	ldr	r3, [sp, #12]
 8004eb0:	621c      	str	r4, [r3, #32]
 8004eb2:	9b01      	ldr	r3, [sp, #4]
 8004eb4:	621d      	str	r5, [r3, #32]
 8004eb6:	a801      	add	r0, sp, #4
 8004eb8:	f004 fcd2 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004ebc:	b005      	add	sp, #20
 8004ebe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004ec0 <WM__RemoveWindowFromList>:
 8004ec0:	b570      	push	{r4, r5, r6, lr}
 8004ec2:	4604      	mov	r4, r0
 8004ec4:	f004 fcb4 	bl	8009830 <GUI_ALLOC_h2p>
 8004ec8:	4605      	mov	r5, r0
 8004eca:	6980      	ldr	r0, [r0, #24]
 8004ecc:	b1a8      	cbz	r0, 8004efa <WM__RemoveWindowFromList+0x3a>
 8004ece:	f004 fcaf 	bl	8009830 <GUI_ALLOC_h2p>
 8004ed2:	69c3      	ldr	r3, [r0, #28]
 8004ed4:	42a3      	cmp	r3, r4
 8004ed6:	4606      	mov	r6, r0
 8004ed8:	d105      	bne.n	8004ee6 <WM__RemoveWindowFromList+0x26>
 8004eda:	4618      	mov	r0, r3
 8004edc:	f004 fca8 	bl	8009830 <GUI_ALLOC_h2p>
 8004ee0:	6a03      	ldr	r3, [r0, #32]
 8004ee2:	61f3      	str	r3, [r6, #28]
 8004ee4:	bd70      	pop	{r4, r5, r6, pc}
 8004ee6:	b143      	cbz	r3, 8004efa <WM__RemoveWindowFromList+0x3a>
 8004ee8:	4618      	mov	r0, r3
 8004eea:	f004 fca1 	bl	8009830 <GUI_ALLOC_h2p>
 8004eee:	6a03      	ldr	r3, [r0, #32]
 8004ef0:	42a3      	cmp	r3, r4
 8004ef2:	d1f8      	bne.n	8004ee6 <WM__RemoveWindowFromList+0x26>
 8004ef4:	6a2b      	ldr	r3, [r5, #32]
 8004ef6:	6203      	str	r3, [r0, #32]
 8004ef8:	bd70      	pop	{r4, r5, r6, pc}
 8004efa:	bd70      	pop	{r4, r5, r6, pc}

08004efc <WM__Client2Screen>:
 8004efc:	4603      	mov	r3, r0
 8004efe:	4608      	mov	r0, r1
 8004f00:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8004f04:	f9b3 1000 	ldrsh.w	r1, [r3]
 8004f08:	f003 bfcd 	b.w	8008ea6 <GUI_MoveRect>

08004f0c <_SetClipRectUserIntersect>:
 8004f0c:	4b11      	ldr	r3, [pc, #68]	; (8004f54 <_SetClipRectUserIntersect+0x48>)
 8004f0e:	b530      	push	{r4, r5, lr}
 8004f10:	681c      	ldr	r4, [r3, #0]
 8004f12:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8004f14:	b085      	sub	sp, #20
 8004f16:	4605      	mov	r5, r0
 8004f18:	b1ba      	cbz	r2, 8004f4a <_SetClipRectUserIntersect+0x3e>
 8004f1a:	6810      	ldr	r0, [r2, #0]
 8004f1c:	6851      	ldr	r1, [r2, #4]
 8004f1e:	ab02      	add	r3, sp, #8
 8004f20:	c303      	stmia	r3!, {r0, r1}
 8004f22:	4b0d      	ldr	r3, [pc, #52]	; (8004f58 <_SetClipRectUserIntersect+0x4c>)
 8004f24:	6818      	ldr	r0, [r3, #0]
 8004f26:	b900      	cbnz	r0, 8004f2a <_SetClipRectUserIntersect+0x1e>
 8004f28:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8004f2a:	f004 fc8b 	bl	8009844 <GUI_ALLOC_LockH>
 8004f2e:	ac04      	add	r4, sp, #16
 8004f30:	a902      	add	r1, sp, #8
 8004f32:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8004f36:	f7ff ffe1 	bl	8004efc <WM__Client2Screen>
 8004f3a:	4620      	mov	r0, r4
 8004f3c:	f004 fc90 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004f40:	a802      	add	r0, sp, #8
 8004f42:	4629      	mov	r1, r5
 8004f44:	f002 faa1 	bl	800748a <GUI__IntersectRect>
 8004f48:	a802      	add	r0, sp, #8
 8004f4a:	f001 fe93 	bl	8006c74 <LCD_SetClipRectEx>
 8004f4e:	b005      	add	sp, #20
 8004f50:	bd30      	pop	{r4, r5, pc}
 8004f52:	bf00      	nop
 8004f54:	200000b0 	.word	0x200000b0
 8004f58:	2000042c 	.word	0x2000042c

08004f5c <WM__ActivateClipRect>:
 8004f5c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004f5e:	4b0e      	ldr	r3, [pc, #56]	; (8004f98 <WM__ActivateClipRect+0x3c>)
 8004f60:	681b      	ldr	r3, [r3, #0]
 8004f62:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 8004f66:	b10a      	cbz	r2, 8004f6c <WM__ActivateClipRect+0x10>
 8004f68:	480c      	ldr	r0, [pc, #48]	; (8004f9c <WM__ActivateClipRect+0x40>)
 8004f6a:	e011      	b.n	8004f90 <WM__ActivateClipRect+0x34>
 8004f6c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8004f6e:	f004 fc69 	bl	8009844 <GUI_ALLOC_LockH>
 8004f72:	9001      	str	r0, [sp, #4]
 8004f74:	c803      	ldmia	r0, {r0, r1}
 8004f76:	ac02      	add	r4, sp, #8
 8004f78:	e884 0003 	stmia.w	r4, {r0, r1}
 8004f7c:	a801      	add	r0, sp, #4
 8004f7e:	f004 fc6f 	bl	8009860 <GUI_ALLOC_UnlockH>
 8004f82:	4b07      	ldr	r3, [pc, #28]	; (8004fa0 <WM__ActivateClipRect+0x44>)
 8004f84:	6819      	ldr	r1, [r3, #0]
 8004f86:	b111      	cbz	r1, 8004f8e <WM__ActivateClipRect+0x32>
 8004f88:	4620      	mov	r0, r4
 8004f8a:	f7ff ff19 	bl	8004dc0 <WM__ClipAtParentBorders>
 8004f8e:	4620      	mov	r0, r4
 8004f90:	f7ff ffbc 	bl	8004f0c <_SetClipRectUserIntersect>
 8004f94:	b004      	add	sp, #16
 8004f96:	bd10      	pop	{r4, pc}
 8004f98:	200000b0 	.word	0x200000b0
 8004f9c:	200002c4 	.word	0x200002c4
 8004fa0:	2000042c 	.word	0x2000042c

08004fa4 <WM__IsWindow>:
 8004fa4:	4b06      	ldr	r3, [pc, #24]	; (8004fc0 <WM__IsWindow+0x1c>)
 8004fa6:	b510      	push	{r4, lr}
 8004fa8:	4604      	mov	r4, r0
 8004faa:	6818      	ldr	r0, [r3, #0]
 8004fac:	b128      	cbz	r0, 8004fba <WM__IsWindow+0x16>
 8004fae:	42a0      	cmp	r0, r4
 8004fb0:	d004      	beq.n	8004fbc <WM__IsWindow+0x18>
 8004fb2:	f004 fc3d 	bl	8009830 <GUI_ALLOC_h2p>
 8004fb6:	6940      	ldr	r0, [r0, #20]
 8004fb8:	e7f8      	b.n	8004fac <WM__IsWindow+0x8>
 8004fba:	bd10      	pop	{r4, pc}
 8004fbc:	2001      	movs	r0, #1
 8004fbe:	bd10      	pop	{r4, pc}
 8004fc0:	2000044c 	.word	0x2000044c

08004fc4 <WM__InvalidateDrawAndDescs>:
 8004fc4:	b513      	push	{r0, r1, r4, lr}
 8004fc6:	4604      	mov	r4, r0
 8004fc8:	b300      	cbz	r0, 800500c <WM__InvalidateDrawAndDescs+0x48>
 8004fca:	f004 fc3b 	bl	8009844 <GUI_ALLOC_LockH>
 8004fce:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8004fd0:	9001      	str	r0, [sp, #4]
 8004fd2:	0793      	lsls	r3, r2, #30
 8004fd4:	d517      	bpl.n	8005006 <WM__InvalidateDrawAndDescs+0x42>
 8004fd6:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8004fd8:	b140      	cbz	r0, 8004fec <WM__InvalidateDrawAndDescs+0x28>
 8004fda:	4b0d      	ldr	r3, [pc, #52]	; (8005010 <WM__InvalidateDrawAndDescs+0x4c>)
 8004fdc:	681b      	ldr	r3, [r3, #0]
 8004fde:	42a3      	cmp	r3, r4
 8004fe0:	d004      	beq.n	8004fec <WM__InvalidateDrawAndDescs+0x28>
 8004fe2:	f001 fd59 	bl	8006a98 <GUI_MEMDEV_Delete>
 8004fe6:	9b01      	ldr	r3, [sp, #4]
 8004fe8:	2200      	movs	r2, #0
 8004fea:	625a      	str	r2, [r3, #36]	; 0x24
 8004fec:	4620      	mov	r0, r4
 8004fee:	f7ff f942 	bl	8004276 <WM_GetFirstChild>
 8004ff2:	4604      	mov	r4, r0
 8004ff4:	b13c      	cbz	r4, 8005006 <WM__InvalidateDrawAndDescs+0x42>
 8004ff6:	4620      	mov	r0, r4
 8004ff8:	f7ff ffe4 	bl	8004fc4 <WM__InvalidateDrawAndDescs>
 8004ffc:	4620      	mov	r0, r4
 8004ffe:	f004 fc17 	bl	8009830 <GUI_ALLOC_h2p>
 8005002:	6a04      	ldr	r4, [r0, #32]
 8005004:	e7f6      	b.n	8004ff4 <WM__InvalidateDrawAndDescs+0x30>
 8005006:	a801      	add	r0, sp, #4
 8005008:	f004 fc2a 	bl	8009860 <GUI_ALLOC_UnlockH>
 800500c:	b002      	add	sp, #8
 800500e:	bd10      	pop	{r4, pc}
 8005010:	2000047c 	.word	0x2000047c

08005014 <WM__RectIsNZ>:
 8005014:	f9b0 2000 	ldrsh.w	r2, [r0]
 8005018:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800501c:	429a      	cmp	r2, r3
 800501e:	dc08      	bgt.n	8005032 <WM__RectIsNZ+0x1e>
 8005020:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8005024:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8005028:	429a      	cmp	r2, r3
 800502a:	bfcc      	ite	gt
 800502c:	2000      	movgt	r0, #0
 800502e:	2001      	movle	r0, #1
 8005030:	4770      	bx	lr
 8005032:	2000      	movs	r0, #0
 8005034:	4770      	bx	lr

08005036 <WM_SendMessage>:
 8005036:	b108      	cbz	r0, 800503c <WM_SendMessage+0x6>
 8005038:	f7fe be40 	b.w	8003cbc <WM__SendMessage>
 800503c:	4770      	bx	lr

0800503e <WM__SendMsgNoData>:
 800503e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005040:	ab04      	add	r3, sp, #16
 8005042:	9001      	str	r0, [sp, #4]
 8005044:	f843 1d10 	str.w	r1, [r3, #-16]!
 8005048:	4669      	mov	r1, sp
 800504a:	f7fe fe37 	bl	8003cbc <WM__SendMessage>
 800504e:	b005      	add	sp, #20
 8005050:	f85d fb04 	ldr.w	pc, [sp], #4

08005054 <WM__GetClientRectWin>:
 8005054:	2300      	movs	r3, #0
 8005056:	800b      	strh	r3, [r1, #0]
 8005058:	8882      	ldrh	r2, [r0, #4]
 800505a:	804b      	strh	r3, [r1, #2]
 800505c:	8803      	ldrh	r3, [r0, #0]
 800505e:	1ad3      	subs	r3, r2, r3
 8005060:	808b      	strh	r3, [r1, #4]
 8005062:	88c2      	ldrh	r2, [r0, #6]
 8005064:	8843      	ldrh	r3, [r0, #2]
 8005066:	1ad3      	subs	r3, r2, r3
 8005068:	80cb      	strh	r3, [r1, #6]
 800506a:	4770      	bx	lr

0800506c <WM__GetTopLevelLayer>:
 800506c:	b510      	push	{r4, lr}
 800506e:	4604      	mov	r4, r0
 8005070:	f004 fbde 	bl	8009830 <GUI_ALLOC_h2p>
 8005074:	6980      	ldr	r0, [r0, #24]
 8005076:	2800      	cmp	r0, #0
 8005078:	d1f9      	bne.n	800506e <WM__GetTopLevelLayer+0x2>
 800507a:	4b05      	ldr	r3, [pc, #20]	; (8005090 <WM__GetTopLevelLayer+0x24>)
 800507c:	681a      	ldr	r2, [r3, #0]
 800507e:	4294      	cmp	r4, r2
 8005080:	d005      	beq.n	800508e <WM__GetTopLevelLayer+0x22>
 8005082:	6858      	ldr	r0, [r3, #4]
 8005084:	4284      	cmp	r4, r0
 8005086:	bf14      	ite	ne
 8005088:	f04f 30ff 	movne.w	r0, #4294967295
 800508c:	2001      	moveq	r0, #1
 800508e:	bd10      	pop	{r4, pc}
 8005090:	20000430 	.word	0x20000430

08005094 <_Invalidate1Abs>:
 8005094:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005096:	b085      	sub	sp, #20
 8005098:	4606      	mov	r6, r0
 800509a:	460d      	mov	r5, r1
 800509c:	4617      	mov	r7, r2
 800509e:	f004 fbc7 	bl	8009830 <GUI_ALLOC_h2p>
 80050a2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80050a4:	9001      	str	r0, [sp, #4]
 80050a6:	07a3      	lsls	r3, r4, #30
 80050a8:	d53e      	bpl.n	8005128 <_Invalidate1Abs+0x94>
 80050aa:	4628      	mov	r0, r5
 80050ac:	f7ff ffb2 	bl	8005014 <WM__RectIsNZ>
 80050b0:	2800      	cmp	r0, #0
 80050b2:	d039      	beq.n	8005128 <_Invalidate1Abs+0x94>
 80050b4:	f640 0301 	movw	r3, #2049	; 0x801
 80050b8:	4023      	ands	r3, r4
 80050ba:	2b01      	cmp	r3, #1
 80050bc:	d034      	beq.n	8005128 <_Invalidate1Abs+0x94>
 80050be:	4630      	mov	r0, r6
 80050c0:	f004 fbc0 	bl	8009844 <GUI_ALLOC_LockH>
 80050c4:	ac02      	add	r4, sp, #8
 80050c6:	4602      	mov	r2, r0
 80050c8:	9001      	str	r0, [sp, #4]
 80050ca:	4629      	mov	r1, r5
 80050cc:	4620      	mov	r0, r4
 80050ce:	f002 f9fa 	bl	80074c6 <GUI__IntersectRects>
 80050d2:	4620      	mov	r0, r4
 80050d4:	f7ff ff9e 	bl	8005014 <WM__RectIsNZ>
 80050d8:	b318      	cbz	r0, 8005122 <_Invalidate1Abs+0x8e>
 80050da:	9b01      	ldr	r3, [sp, #4]
 80050dc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80050de:	f244 0120 	movw	r1, #16416	; 0x4020
 80050e2:	4011      	ands	r1, r2
 80050e4:	f103 0508 	add.w	r5, r3, #8
 80050e8:	b129      	cbz	r1, 80050f6 <_Invalidate1Abs+0x62>
 80050ea:	4628      	mov	r0, r5
 80050ec:	4629      	mov	r1, r5
 80050ee:	4622      	mov	r2, r4
 80050f0:	f003 feae 	bl	8008e50 <GUI_MergeRect>
 80050f4:	e015      	b.n	8005122 <_Invalidate1Abs+0x8e>
 80050f6:	e894 0003 	ldmia.w	r4, {r0, r1}
 80050fa:	4317      	orrs	r7, r2
 80050fc:	e885 0003 	stmia.w	r5, {r0, r1}
 8005100:	629f      	str	r7, [r3, #40]	; 0x28
 8005102:	4b0a      	ldr	r3, [pc, #40]	; (800512c <_Invalidate1Abs+0x98>)
 8005104:	881a      	ldrh	r2, [r3, #0]
 8005106:	4630      	mov	r0, r6
 8005108:	3201      	adds	r2, #1
 800510a:	801a      	strh	r2, [r3, #0]
 800510c:	f7ff ffae 	bl	800506c <WM__GetTopLevelLayer>
 8005110:	4b07      	ldr	r3, [pc, #28]	; (8005130 <_Invalidate1Abs+0x9c>)
 8005112:	2201      	movs	r2, #1
 8005114:	fa02 f000 	lsl.w	r0, r2, r0
 8005118:	681a      	ldr	r2, [r3, #0]
 800511a:	4302      	orrs	r2, r0
 800511c:	601a      	str	r2, [r3, #0]
 800511e:	f002 fcbd 	bl	8007a9c <GUI_SignalEvent>
 8005122:	a801      	add	r0, sp, #4
 8005124:	f004 fb9c 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005128:	b005      	add	sp, #20
 800512a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800512c:	20000448 	.word	0x20000448
 8005130:	20000458 	.word	0x20000458

08005134 <WM__Invalidate1Abs>:
 8005134:	2220      	movs	r2, #32
 8005136:	f7ff bfad 	b.w	8005094 <_Invalidate1Abs>

0800513a <WM_InvalidateWindowAndDescsEx>:
 800513a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800513c:	460f      	mov	r7, r1
 800513e:	b085      	sub	sp, #20
 8005140:	4615      	mov	r5, r2
 8005142:	4606      	mov	r6, r0
 8005144:	b348      	cbz	r0, 800519a <WM_InvalidateWindowAndDescsEx+0x60>
 8005146:	f004 fb7d 	bl	8009844 <GUI_ALLOC_LockH>
 800514a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800514c:	ac04      	add	r4, sp, #16
 800514e:	079b      	lsls	r3, r3, #30
 8005150:	4602      	mov	r2, r0
 8005152:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8005156:	d403      	bmi.n	8005160 <WM_InvalidateWindowAndDescsEx+0x26>
 8005158:	4620      	mov	r0, r4
 800515a:	f004 fb81 	bl	8009860 <GUI_ALLOC_UnlockH>
 800515e:	e01c      	b.n	800519a <WM_InvalidateWindowAndDescsEx+0x60>
 8005160:	a802      	add	r0, sp, #8
 8005162:	4639      	mov	r1, r7
 8005164:	f002 f9af 	bl	80074c6 <GUI__IntersectRects>
 8005168:	2800      	cmp	r0, #0
 800516a:	d0f5      	beq.n	8005158 <WM_InvalidateWindowAndDescsEx+0x1e>
 800516c:	4620      	mov	r0, r4
 800516e:	f004 fb77 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005172:	4630      	mov	r0, r6
 8005174:	a902      	add	r1, sp, #8
 8005176:	462a      	mov	r2, r5
 8005178:	f7ff ff8c 	bl	8005094 <_Invalidate1Abs>
 800517c:	4630      	mov	r0, r6
 800517e:	f7ff f87a 	bl	8004276 <WM_GetFirstChild>
 8005182:	4604      	mov	r4, r0
 8005184:	b14c      	cbz	r4, 800519a <WM_InvalidateWindowAndDescsEx+0x60>
 8005186:	4620      	mov	r0, r4
 8005188:	a902      	add	r1, sp, #8
 800518a:	462a      	mov	r2, r5
 800518c:	f7ff ffd5 	bl	800513a <WM_InvalidateWindowAndDescsEx>
 8005190:	4620      	mov	r0, r4
 8005192:	f004 fb4d 	bl	8009830 <GUI_ALLOC_h2p>
 8005196:	6a04      	ldr	r4, [r0, #32]
 8005198:	e7f4      	b.n	8005184 <WM_InvalidateWindowAndDescsEx+0x4a>
 800519a:	b005      	add	sp, #20
 800519c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800519e <WM__InvalidateRect>:
 800519e:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80051a2:	4680      	mov	r8, r0
 80051a4:	4617      	mov	r7, r2
 80051a6:	461d      	mov	r5, r3
 80051a8:	460c      	mov	r4, r1
 80051aa:	2900      	cmp	r1, #0
 80051ac:	d030      	beq.n	8005210 <WM__InvalidateRect+0x72>
 80051ae:	4608      	mov	r0, r1
 80051b0:	f004 fb48 	bl	8009844 <GUI_ALLOC_LockH>
 80051b4:	6a86      	ldr	r6, [r0, #40]	; 0x28
 80051b6:	9001      	str	r0, [sp, #4]
 80051b8:	07b3      	lsls	r3, r6, #30
 80051ba:	4602      	mov	r2, r0
 80051bc:	d525      	bpl.n	800520a <WM__InvalidateRect+0x6c>
 80051be:	a802      	add	r0, sp, #8
 80051c0:	4641      	mov	r1, r8
 80051c2:	f002 f980 	bl	80074c6 <GUI__IntersectRects>
 80051c6:	b300      	cbz	r0, 800520a <WM__InvalidateRect+0x6c>
 80051c8:	f640 0301 	movw	r3, #2049	; 0x801
 80051cc:	4033      	ands	r3, r6
 80051ce:	2b01      	cmp	r3, #1
 80051d0:	d107      	bne.n	80051e2 <WM__InvalidateRect+0x44>
 80051d2:	9b01      	ldr	r3, [sp, #4]
 80051d4:	a802      	add	r0, sp, #8
 80051d6:	6999      	ldr	r1, [r3, #24]
 80051d8:	6a1a      	ldr	r2, [r3, #32]
 80051da:	462b      	mov	r3, r5
 80051dc:	f7ff ffdf 	bl	800519e <WM__InvalidateRect>
 80051e0:	e004      	b.n	80051ec <WM__InvalidateRect+0x4e>
 80051e2:	4620      	mov	r0, r4
 80051e4:	a902      	add	r1, sp, #8
 80051e6:	462a      	mov	r2, r5
 80051e8:	f7ff ff54 	bl	8005094 <_Invalidate1Abs>
 80051ec:	9b01      	ldr	r3, [sp, #4]
 80051ee:	69dc      	ldr	r4, [r3, #28]
 80051f0:	b15c      	cbz	r4, 800520a <WM__InvalidateRect+0x6c>
 80051f2:	42bc      	cmp	r4, r7
 80051f4:	d009      	beq.n	800520a <WM__InvalidateRect+0x6c>
 80051f6:	4620      	mov	r0, r4
 80051f8:	a902      	add	r1, sp, #8
 80051fa:	462a      	mov	r2, r5
 80051fc:	f7ff ff9d 	bl	800513a <WM_InvalidateWindowAndDescsEx>
 8005200:	4620      	mov	r0, r4
 8005202:	f004 fb15 	bl	8009830 <GUI_ALLOC_h2p>
 8005206:	6a04      	ldr	r4, [r0, #32]
 8005208:	e7f2      	b.n	80051f0 <WM__InvalidateRect+0x52>
 800520a:	a801      	add	r0, sp, #4
 800520c:	f004 fb28 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005210:	b004      	add	sp, #16
 8005212:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005216 <WM__InvalidateParent>:
 8005216:	b570      	push	{r4, r5, r6, lr}
 8005218:	4605      	mov	r5, r0
 800521a:	4608      	mov	r0, r1
 800521c:	460c      	mov	r4, r1
 800521e:	4616      	mov	r6, r2
 8005220:	f004 fb06 	bl	8009830 <GUI_ALLOC_h2p>
 8005224:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005226:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 800522a:	4628      	mov	r0, r5
 800522c:	4621      	mov	r1, r4
 800522e:	4632      	mov	r2, r6
 8005230:	bf0c      	ite	eq
 8005232:	2320      	moveq	r3, #32
 8005234:	f44f 4380 	movne.w	r3, #16384	; 0x4000
 8005238:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800523c:	f7ff bfaf 	b.w	800519e <WM__InvalidateRect>

08005240 <WM__InvalidateRectEx>:
 8005240:	2320      	movs	r3, #32
 8005242:	f7ff bfac 	b.w	800519e <WM__InvalidateRect>

08005246 <WM__DetachWindow>:
 8005246:	b513      	push	{r0, r1, r4, lr}
 8005248:	4604      	mov	r4, r0
 800524a:	f004 fafb 	bl	8009844 <GUI_ALLOC_LockH>
 800524e:	6981      	ldr	r1, [r0, #24]
 8005250:	9001      	str	r0, [sp, #4]
 8005252:	b141      	cbz	r1, 8005266 <WM__DetachWindow+0x20>
 8005254:	6a02      	ldr	r2, [r0, #32]
 8005256:	f7ff fff3 	bl	8005240 <WM__InvalidateRectEx>
 800525a:	4620      	mov	r0, r4
 800525c:	f7ff fe30 	bl	8004ec0 <WM__RemoveWindowFromList>
 8005260:	9b01      	ldr	r3, [sp, #4]
 8005262:	2200      	movs	r2, #0
 8005264:	619a      	str	r2, [r3, #24]
 8005266:	a801      	add	r0, sp, #4
 8005268:	f004 fafa 	bl	8009860 <GUI_ALLOC_UnlockH>
 800526c:	b002      	add	sp, #8
 800526e:	bd10      	pop	{r4, pc}

08005270 <WM_InvalidateRect>:
 8005270:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005272:	460f      	mov	r7, r1
 8005274:	b087      	sub	sp, #28
 8005276:	4605      	mov	r5, r0
 8005278:	2800      	cmp	r0, #0
 800527a:	d033      	beq.n	80052e4 <WM_InvalidateRect+0x74>
 800527c:	f004 fae2 	bl	8009844 <GUI_ALLOC_LockH>
 8005280:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8005282:	9001      	str	r0, [sp, #4]
 8005284:	07b2      	lsls	r2, r6, #30
 8005286:	d52a      	bpl.n	80052de <WM_InvalidateRect+0x6e>
 8005288:	c803      	ldmia	r0, {r0, r1}
 800528a:	ac04      	add	r4, sp, #16
 800528c:	03f3      	lsls	r3, r6, #15
 800528e:	e884 0003 	stmia.w	r4, {r0, r1}
 8005292:	d502      	bpl.n	800529a <WM_InvalidateRect+0x2a>
 8005294:	4628      	mov	r0, r5
 8005296:	f7ff fe95 	bl	8004fc4 <WM__InvalidateDrawAndDescs>
 800529a:	b15f      	cbz	r7, 80052b4 <WM_InvalidateRect+0x44>
 800529c:	6838      	ldr	r0, [r7, #0]
 800529e:	6879      	ldr	r1, [r7, #4]
 80052a0:	ab02      	add	r3, sp, #8
 80052a2:	c303      	stmia	r3!, {r0, r1}
 80052a4:	9801      	ldr	r0, [sp, #4]
 80052a6:	a902      	add	r1, sp, #8
 80052a8:	f7ff fe28 	bl	8004efc <WM__Client2Screen>
 80052ac:	4620      	mov	r0, r4
 80052ae:	a902      	add	r1, sp, #8
 80052b0:	f002 f8eb 	bl	800748a <GUI__IntersectRect>
 80052b4:	4620      	mov	r0, r4
 80052b6:	4629      	mov	r1, r5
 80052b8:	f7ff fd82 	bl	8004dc0 <WM__ClipAtParentBorders>
 80052bc:	b178      	cbz	r0, 80052de <WM_InvalidateRect+0x6e>
 80052be:	f640 0301 	movw	r3, #2049	; 0x801
 80052c2:	4033      	ands	r3, r6
 80052c4:	2b01      	cmp	r3, #1
 80052c6:	d106      	bne.n	80052d6 <WM_InvalidateRect+0x66>
 80052c8:	9b01      	ldr	r3, [sp, #4]
 80052ca:	4620      	mov	r0, r4
 80052cc:	6999      	ldr	r1, [r3, #24]
 80052ce:	6a1a      	ldr	r2, [r3, #32]
 80052d0:	f7ff ffb6 	bl	8005240 <WM__InvalidateRectEx>
 80052d4:	e003      	b.n	80052de <WM_InvalidateRect+0x6e>
 80052d6:	4628      	mov	r0, r5
 80052d8:	4621      	mov	r1, r4
 80052da:	f7ff ff2b 	bl	8005134 <WM__Invalidate1Abs>
 80052de:	a801      	add	r0, sp, #4
 80052e0:	f004 fabe 	bl	8009860 <GUI_ALLOC_UnlockH>
 80052e4:	b007      	add	sp, #28
 80052e6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080052e8 <WM_InvalidateWindow>:
 80052e8:	2100      	movs	r1, #0
 80052ea:	f7ff bfc1 	b.w	8005270 <WM_InvalidateRect>

080052ee <WM__SelectTopLevelLayer>:
 80052ee:	b508      	push	{r3, lr}
 80052f0:	f7ff febc 	bl	800506c <WM__GetTopLevelLayer>
 80052f4:	2800      	cmp	r0, #0
 80052f6:	db03      	blt.n	8005300 <WM__SelectTopLevelLayer+0x12>
 80052f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80052fc:	f002 bdd8 	b.w	8007eb0 <GUI_SelectLayer>
 8005300:	bd08      	pop	{r3, pc}
	...

08005304 <WM_SelectWindow>:
 8005304:	4a0d      	ldr	r2, [pc, #52]	; (800533c <WM_SelectWindow+0x38>)
 8005306:	6813      	ldr	r3, [r2, #0]
 8005308:	b570      	push	{r4, r5, r6, lr}
 800530a:	6c9d      	ldr	r5, [r3, #72]	; 0x48
 800530c:	4604      	mov	r4, r0
 800530e:	4616      	mov	r6, r2
 8005310:	b908      	cbnz	r0, 8005316 <WM_SelectWindow+0x12>
 8005312:	4a0b      	ldr	r2, [pc, #44]	; (8005340 <WM_SelectWindow+0x3c>)
 8005314:	6814      	ldr	r4, [r2, #0]
 8005316:	649c      	str	r4, [r3, #72]	; 0x48
 8005318:	4620      	mov	r0, r4
 800531a:	f7ff ffe8 	bl	80052ee <WM__SelectTopLevelLayer>
 800531e:	f002 f81b 	bl	8007358 <LCD_SetClipRectMax>
 8005322:	4620      	mov	r0, r4
 8005324:	f004 fa84 	bl	8009830 <GUI_ALLOC_h2p>
 8005328:	6833      	ldr	r3, [r6, #0]
 800532a:	f9b0 1000 	ldrsh.w	r1, [r0]
 800532e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8005332:	64d9      	str	r1, [r3, #76]	; 0x4c
 8005334:	651a      	str	r2, [r3, #80]	; 0x50
 8005336:	4628      	mov	r0, r5
 8005338:	bd70      	pop	{r4, r5, r6, pc}
 800533a:	bf00      	nop
 800533c:	200000b0 	.word	0x200000b0
 8005340:	2000044c 	.word	0x2000044c

08005344 <WM_CreateWindowAsChild>:
 8005344:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005348:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800534a:	469b      	mov	fp, r3
 800534c:	4b4b      	ldr	r3, [pc, #300]	; (800547c <WM_CreateWindowAsChild+0x138>)
 800534e:	4607      	mov	r7, r0
 8005350:	4688      	mov	r8, r1
 8005352:	4692      	mov	sl, r2
 8005354:	681e      	ldr	r6, [r3, #0]
 8005356:	bb65      	cbnz	r5, 80053b2 <WM_CreateWindowAsChild+0x6e>
 8005358:	4b49      	ldr	r3, [pc, #292]	; (8005480 <WM_CreateWindowAsChild+0x13c>)
 800535a:	881b      	ldrh	r3, [r3, #0]
 800535c:	b363      	cbz	r3, 80053b8 <WM_CreateWindowAsChild+0x74>
 800535e:	4b49      	ldr	r3, [pc, #292]	; (8005484 <WM_CreateWindowAsChild+0x140>)
 8005360:	681b      	ldr	r3, [r3, #0]
 8005362:	7c5a      	ldrb	r2, [r3, #17]
 8005364:	4b48      	ldr	r3, [pc, #288]	; (8005488 <WM_CreateWindowAsChild+0x144>)
 8005366:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800536a:	1c5a      	adds	r2, r3, #1
 800536c:	d024      	beq.n	80053b8 <WM_CreateWindowAsChild+0x74>
 800536e:	b31b      	cbz	r3, 80053b8 <WM_CreateWindowAsChild+0x74>
 8005370:	461d      	mov	r5, r3
 8005372:	4628      	mov	r0, r5
 8005374:	f004 fa66 	bl	8009844 <GUI_ALLOC_LockH>
 8005378:	f9b0 2000 	ldrsh.w	r2, [r0]
 800537c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8005380:	9001      	str	r0, [sp, #4]
 8005382:	4417      	add	r7, r2
 8005384:	4498      	add	r8, r3
 8005386:	f1ba 0f00 	cmp.w	sl, #0
 800538a:	d105      	bne.n	8005398 <WM_CreateWindowAsChild+0x54>
 800538c:	f9b0 a004 	ldrsh.w	sl, [r0, #4]
 8005390:	ebc2 0a0a 	rsb	sl, r2, sl
 8005394:	f10a 0a01 	add.w	sl, sl, #1
 8005398:	f1bb 0f00 	cmp.w	fp, #0
 800539c:	d105      	bne.n	80053aa <WM_CreateWindowAsChild+0x66>
 800539e:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 80053a2:	ebc3 0b0b 	rsb	fp, r3, fp
 80053a6:	f10b 0b01 	add.w	fp, fp, #1
 80053aa:	a801      	add	r0, sp, #4
 80053ac:	f004 fa58 	bl	8009860 <GUI_ALLOC_UnlockH>
 80053b0:	e002      	b.n	80053b8 <WM_CreateWindowAsChild+0x74>
 80053b2:	1c6b      	adds	r3, r5, #1
 80053b4:	d1dd      	bne.n	8005372 <WM_CreateWindowAsChild+0x2e>
 80053b6:	2500      	movs	r5, #0
 80053b8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80053ba:	302c      	adds	r0, #44	; 0x2c
 80053bc:	f004 fc34 	bl	8009c28 <GUI_ALLOC_AllocZero>
 80053c0:	4604      	mov	r4, r0
 80053c2:	2800      	cmp	r0, #0
 80053c4:	d056      	beq.n	8005474 <WM_CreateWindowAsChild+0x130>
 80053c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80053c8:	431e      	orrs	r6, r3
 80053ca:	4b2d      	ldr	r3, [pc, #180]	; (8005480 <WM_CreateWindowAsChild+0x13c>)
 80053cc:	881a      	ldrh	r2, [r3, #0]
 80053ce:	3201      	adds	r2, #1
 80053d0:	801a      	strh	r2, [r3, #0]
 80053d2:	f004 fa37 	bl	8009844 <GUI_ALLOC_LockH>
 80053d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80053d8:	6103      	str	r3, [r0, #16]
 80053da:	f10d 0908 	add.w	r9, sp, #8
 80053de:	4b2b      	ldr	r3, [pc, #172]	; (800548c <WM_CreateWindowAsChild+0x148>)
 80053e0:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80053e2:	f849 0d08 	str.w	r0, [r9, #-8]!
 80053e6:	4033      	ands	r3, r6
 80053e8:	8007      	strh	r7, [r0, #0]
 80053ea:	f8a0 8002 	strh.w	r8, [r0, #2]
 80053ee:	4457      	add	r7, sl
 80053f0:	44d8      	add	r8, fp
 80053f2:	4313      	orrs	r3, r2
 80053f4:	3f01      	subs	r7, #1
 80053f6:	f108 38ff 	add.w	r8, r8, #4294967295
 80053fa:	6283      	str	r3, [r0, #40]	; 0x28
 80053fc:	8087      	strh	r7, [r0, #4]
 80053fe:	f8a0 8006 	strh.w	r8, [r0, #6]
 8005402:	4668      	mov	r0, sp
 8005404:	f004 fa2c 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005408:	4b21      	ldr	r3, [pc, #132]	; (8005490 <WM_CreateWindowAsChild+0x14c>)
 800540a:	6818      	ldr	r0, [r3, #0]
 800540c:	b148      	cbz	r0, 8005422 <WM_CreateWindowAsChild+0xde>
 800540e:	f004 fa0f 	bl	8009830 <GUI_ALLOC_h2p>
 8005412:	4607      	mov	r7, r0
 8005414:	4620      	mov	r0, r4
 8005416:	f004 fa0b 	bl	8009830 <GUI_ALLOC_h2p>
 800541a:	697b      	ldr	r3, [r7, #20]
 800541c:	6143      	str	r3, [r0, #20]
 800541e:	617c      	str	r4, [r7, #20]
 8005420:	e000      	b.n	8005424 <WM_CreateWindowAsChild+0xe0>
 8005422:	601c      	str	r4, [r3, #0]
 8005424:	4629      	mov	r1, r5
 8005426:	4620      	mov	r0, r4
 8005428:	f7ff fcf8 	bl	8004e1c <WM__InsertWindowIntoList>
 800542c:	06b5      	lsls	r5, r6, #26
 800542e:	d502      	bpl.n	8005436 <WM_CreateWindowAsChild+0xf2>
 8005430:	4620      	mov	r0, r4
 8005432:	f7ff ff67 	bl	8005304 <WM_SelectWindow>
 8005436:	07f0      	lsls	r0, r6, #31
 8005438:	d503      	bpl.n	8005442 <WM_CreateWindowAsChild+0xfe>
 800543a:	4b16      	ldr	r3, [pc, #88]	; (8005494 <WM_CreateWindowAsChild+0x150>)
 800543c:	681a      	ldr	r2, [r3, #0]
 800543e:	3201      	adds	r2, #1
 8005440:	601a      	str	r2, [r3, #0]
 8005442:	0671      	lsls	r1, r6, #25
 8005444:	d502      	bpl.n	800544c <WM_CreateWindowAsChild+0x108>
 8005446:	4620      	mov	r0, r4
 8005448:	f7fe ffbe 	bl	80043c8 <WM_BringToBottom>
 800544c:	07b2      	lsls	r2, r6, #30
 800544e:	d50d      	bpl.n	800546c <WM_CreateWindowAsChild+0x128>
 8005450:	4620      	mov	r0, r4
 8005452:	f004 f9f7 	bl	8009844 <GUI_ALLOC_LockH>
 8005456:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005458:	9000      	str	r0, [sp, #0]
 800545a:	f043 0302 	orr.w	r3, r3, #2
 800545e:	6283      	str	r3, [r0, #40]	; 0x28
 8005460:	4668      	mov	r0, sp
 8005462:	f004 f9fd 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005466:	4620      	mov	r0, r4
 8005468:	f7ff ff3e 	bl	80052e8 <WM_InvalidateWindow>
 800546c:	4620      	mov	r0, r4
 800546e:	2101      	movs	r1, #1
 8005470:	f7ff fde5 	bl	800503e <WM__SendMsgNoData>
 8005474:	4620      	mov	r0, r4
 8005476:	b003      	add	sp, #12
 8005478:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800547c:	20000460 	.word	0x20000460
 8005480:	20000428 	.word	0x20000428
 8005484:	200000b0 	.word	0x200000b0
 8005488:	20000430 	.word	0x20000430
 800548c:	003f3f9f 	.word	0x003f3f9f
 8005490:	2000044c 	.word	0x2000044c
 8005494:	20000480 	.word	0x20000480

08005498 <WM_DeleteWindow>:
 8005498:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800549a:	4604      	mov	r4, r0
 800549c:	2800      	cmp	r0, #0
 800549e:	d06e      	beq.n	800557e <WM_DeleteWindow+0xe6>
 80054a0:	f7ff fd80 	bl	8004fa4 <WM__IsWindow>
 80054a4:	2800      	cmp	r0, #0
 80054a6:	d06a      	beq.n	800557e <WM_DeleteWindow+0xe6>
 80054a8:	4620      	mov	r0, r4
 80054aa:	f7ff fddf 	bl	800506c <WM__GetTopLevelLayer>
 80054ae:	210b      	movs	r1, #11
 80054b0:	4605      	mov	r5, r0
 80054b2:	4620      	mov	r0, r4
 80054b4:	f7ff fdc3 	bl	800503e <WM__SendMsgNoData>
 80054b8:	4620      	mov	r0, r4
 80054ba:	f005 fdad 	bl	800b018 <WM__DeleteAssocTimer>
 80054be:	4620      	mov	r0, r4
 80054c0:	f004 f9c0 	bl	8009844 <GUI_ALLOC_LockH>
 80054c4:	9001      	str	r0, [sp, #4]
 80054c6:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80054c8:	b108      	cbz	r0, 80054ce <WM_DeleteWindow+0x36>
 80054ca:	f001 fae5 	bl	8006a98 <GUI_MEMDEV_Delete>
 80054ce:	4b2d      	ldr	r3, [pc, #180]	; (8005584 <WM_DeleteWindow+0xec>)
 80054d0:	4a2d      	ldr	r2, [pc, #180]	; (8005588 <WM_DeleteWindow+0xf0>)
 80054d2:	2100      	movs	r1, #0
 80054d4:	6019      	str	r1, [r3, #0]
 80054d6:	4b2d      	ldr	r3, [pc, #180]	; (800558c <WM_DeleteWindow+0xf4>)
 80054d8:	681b      	ldr	r3, [r3, #0]
 80054da:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80054de:	42a0      	cmp	r0, r4
 80054e0:	bf08      	it	eq
 80054e2:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 80054e6:	4a2a      	ldr	r2, [pc, #168]	; (8005590 <WM_DeleteWindow+0xf8>)
 80054e8:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 80054ec:	42a1      	cmp	r1, r4
 80054ee:	bf04      	itt	eq
 80054f0:	2100      	moveq	r1, #0
 80054f2:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 80054f6:	4b27      	ldr	r3, [pc, #156]	; (8005594 <WM_DeleteWindow+0xfc>)
 80054f8:	681b      	ldr	r3, [r3, #0]
 80054fa:	b12b      	cbz	r3, 8005508 <WM_DeleteWindow+0x70>
 80054fc:	685a      	ldr	r2, [r3, #4]
 80054fe:	42a2      	cmp	r2, r4
 8005500:	bf04      	itt	eq
 8005502:	2200      	moveq	r2, #0
 8005504:	605a      	streq	r2, [r3, #4]
 8005506:	e7f7      	b.n	80054f8 <WM_DeleteWindow+0x60>
 8005508:	4620      	mov	r0, r4
 800550a:	2107      	movs	r1, #7
 800550c:	f7ff f8f9 	bl	8004702 <WM_NotifyParent>
 8005510:	9e01      	ldr	r6, [sp, #4]
 8005512:	69f0      	ldr	r0, [r6, #28]
 8005514:	f7ff ffc0 	bl	8005498 <WM_DeleteWindow>
 8005518:	69f3      	ldr	r3, [r6, #28]
 800551a:	2b00      	cmp	r3, #0
 800551c:	d1f9      	bne.n	8005512 <WM_DeleteWindow+0x7a>
 800551e:	4620      	mov	r0, r4
 8005520:	f7ff fe91 	bl	8005246 <WM__DetachWindow>
 8005524:	4b1c      	ldr	r3, [pc, #112]	; (8005598 <WM_DeleteWindow+0x100>)
 8005526:	6818      	ldr	r0, [r3, #0]
 8005528:	b150      	cbz	r0, 8005540 <WM_DeleteWindow+0xa8>
 800552a:	f004 f981 	bl	8009830 <GUI_ALLOC_h2p>
 800552e:	4606      	mov	r6, r0
 8005530:	6940      	ldr	r0, [r0, #20]
 8005532:	42a0      	cmp	r0, r4
 8005534:	d1f8      	bne.n	8005528 <WM_DeleteWindow+0x90>
 8005536:	4620      	mov	r0, r4
 8005538:	f004 f97a 	bl	8009830 <GUI_ALLOC_h2p>
 800553c:	6943      	ldr	r3, [r0, #20]
 800553e:	6173      	str	r3, [r6, #20]
 8005540:	9b01      	ldr	r3, [sp, #4]
 8005542:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005544:	07da      	lsls	r2, r3, #31
 8005546:	d503      	bpl.n	8005550 <WM_DeleteWindow+0xb8>
 8005548:	4a14      	ldr	r2, [pc, #80]	; (800559c <WM_DeleteWindow+0x104>)
 800554a:	6811      	ldr	r1, [r2, #0]
 800554c:	3901      	subs	r1, #1
 800554e:	6011      	str	r1, [r2, #0]
 8005550:	069b      	lsls	r3, r3, #26
 8005552:	d503      	bpl.n	800555c <WM_DeleteWindow+0xc4>
 8005554:	4b12      	ldr	r3, [pc, #72]	; (80055a0 <WM_DeleteWindow+0x108>)
 8005556:	881a      	ldrh	r2, [r3, #0]
 8005558:	3a01      	subs	r2, #1
 800555a:	801a      	strh	r2, [r3, #0]
 800555c:	a801      	add	r0, sp, #4
 800555e:	f004 f97f 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005562:	4b10      	ldr	r3, [pc, #64]	; (80055a4 <WM_DeleteWindow+0x10c>)
 8005564:	881a      	ldrh	r2, [r3, #0]
 8005566:	4620      	mov	r0, r4
 8005568:	3a01      	subs	r2, #1
 800556a:	801a      	strh	r2, [r3, #0]
 800556c:	f004 f99c 	bl	80098a8 <GUI_ALLOC_Free>
 8005570:	2d00      	cmp	r5, #0
 8005572:	db04      	blt.n	800557e <WM_DeleteWindow+0xe6>
 8005574:	4b0c      	ldr	r3, [pc, #48]	; (80055a8 <WM_DeleteWindow+0x110>)
 8005576:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800557a:	f7ff fec3 	bl	8005304 <WM_SelectWindow>
 800557e:	b002      	add	sp, #8
 8005580:	bd70      	pop	{r4, r5, r6, pc}
 8005582:	bf00      	nop
 8005584:	200002d4 	.word	0x200002d4
 8005588:	20000440 	.word	0x20000440
 800558c:	20000450 	.word	0x20000450
 8005590:	20000474 	.word	0x20000474
 8005594:	2000046c 	.word	0x2000046c
 8005598:	2000044c 	.word	0x2000044c
 800559c:	20000480 	.word	0x20000480
 80055a0:	20000448 	.word	0x20000448
 80055a4:	20000428 	.word	0x20000428
 80055a8:	20000430 	.word	0x20000430

080055ac <_Exec1Input>:
 80055ac:	4b1b      	ldr	r3, [pc, #108]	; (800561c <_Exec1Input+0x70>)
 80055ae:	681a      	ldr	r2, [r3, #0]
 80055b0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80055b2:	461e      	mov	r6, r3
 80055b4:	b1d2      	cbz	r2, 80055ec <_Exec1Input+0x40>
 80055b6:	4b1a      	ldr	r3, [pc, #104]	; (8005620 <_Exec1Input+0x74>)
 80055b8:	681c      	ldr	r4, [r3, #0]
 80055ba:	b1b4      	cbz	r4, 80055ea <_Exec1Input+0x3e>
 80055bc:	4620      	mov	r0, r4
 80055be:	f004 f941 	bl	8009844 <GUI_ALLOC_LockH>
 80055c2:	4603      	mov	r3, r0
 80055c4:	a802      	add	r0, sp, #8
 80055c6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80055c8:	f840 3d04 	str.w	r3, [r0, #-4]!
 80055cc:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 80055d0:	695d      	ldr	r5, [r3, #20]
 80055d2:	d006      	beq.n	80055e2 <_Exec1Input+0x36>
 80055d4:	f004 f944 	bl	8009860 <GUI_ALLOC_UnlockH>
 80055d8:	4620      	mov	r0, r4
 80055da:	f7ff ff5d 	bl	8005498 <WM_DeleteWindow>
 80055de:	462c      	mov	r4, r5
 80055e0:	e7eb      	b.n	80055ba <_Exec1Input+0xe>
 80055e2:	462c      	mov	r4, r5
 80055e4:	f004 f93c 	bl	8009860 <GUI_ALLOC_UnlockH>
 80055e8:	e7e7      	b.n	80055ba <_Exec1Input+0xe>
 80055ea:	6034      	str	r4, [r6, #0]
 80055ec:	4b0d      	ldr	r3, [pc, #52]	; (8005624 <_Exec1Input+0x78>)
 80055ee:	681b      	ldr	r3, [r3, #0]
 80055f0:	b103      	cbz	r3, 80055f4 <_Exec1Input+0x48>
 80055f2:	4798      	blx	r3
 80055f4:	4b0c      	ldr	r3, [pc, #48]	; (8005628 <_Exec1Input+0x7c>)
 80055f6:	681b      	ldr	r3, [r3, #0]
 80055f8:	b953      	cbnz	r3, 8005610 <_Exec1Input+0x64>
 80055fa:	4b0c      	ldr	r3, [pc, #48]	; (800562c <_Exec1Input+0x80>)
 80055fc:	681b      	ldr	r3, [r3, #0]
 80055fe:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8005602:	b148      	cbz	r0, 8005618 <_Exec1Input+0x6c>
 8005604:	f002 fc6a 	bl	8007edc <GUI_PollKeyMsg>
 8005608:	3000      	adds	r0, #0
 800560a:	bf18      	it	ne
 800560c:	2001      	movne	r0, #1
 800560e:	e003      	b.n	8005618 <_Exec1Input+0x6c>
 8005610:	4798      	blx	r3
 8005612:	2800      	cmp	r0, #0
 8005614:	d0f1      	beq.n	80055fa <_Exec1Input+0x4e>
 8005616:	2001      	movs	r0, #1
 8005618:	b002      	add	sp, #8
 800561a:	bd70      	pop	{r4, r5, r6, pc}
 800561c:	200002b8 	.word	0x200002b8
 8005620:	2000044c 	.word	0x2000044c
 8005624:	20000438 	.word	0x20000438
 8005628:	200004e4 	.word	0x200004e4
 800562c:	200000b0 	.word	0x200000b0

08005630 <WM_GetActiveWindow>:
 8005630:	4b01      	ldr	r3, [pc, #4]	; (8005638 <WM_GetActiveWindow+0x8>)
 8005632:	681b      	ldr	r3, [r3, #0]
 8005634:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005636:	4770      	bx	lr
 8005638:	200000b0 	.word	0x200000b0

0800563c <WM__GetNextIVR>:
 800563c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005640:	4f5d      	ldr	r7, [pc, #372]	; (80057b8 <WM__GetNextIVR+0x17c>)
 8005642:	683b      	ldr	r3, [r7, #0]
 8005644:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8005648:	2800      	cmp	r0, #0
 800564a:	f000 80b2 	beq.w	80057b2 <WM__GetNextIVR+0x176>
 800564e:	4b5b      	ldr	r3, [pc, #364]	; (80057bc <WM__GetNextIVR+0x180>)
 8005650:	695a      	ldr	r2, [r3, #20]
 8005652:	2a01      	cmp	r2, #1
 8005654:	461c      	mov	r4, r3
 8005656:	dd03      	ble.n	8005660 <WM__GetNextIVR+0x24>
 8005658:	3a01      	subs	r2, #1
 800565a:	615a      	str	r2, [r3, #20]
 800565c:	2000      	movs	r0, #0
 800565e:	e0a8      	b.n	80057b2 <WM__GetNextIVR+0x176>
 8005660:	f104 0608 	add.w	r6, r4, #8
 8005664:	691b      	ldr	r3, [r3, #16]
 8005666:	e896 0003 	ldmia.w	r6, {r0, r1}
 800566a:	3301      	adds	r3, #1
 800566c:	ad02      	add	r5, sp, #8
 800566e:	6123      	str	r3, [r4, #16]
 8005670:	e885 0003 	stmia.w	r5, {r0, r1}
 8005674:	b923      	cbnz	r3, 8005680 <WM__GetNextIVR+0x44>
 8005676:	8823      	ldrh	r3, [r4, #0]
 8005678:	f8ad 3008 	strh.w	r3, [sp, #8]
 800567c:	8863      	ldrh	r3, [r4, #2]
 800567e:	e011      	b.n	80056a4 <WM__GetNextIVR+0x68>
 8005680:	89a3      	ldrh	r3, [r4, #12]
 8005682:	8962      	ldrh	r2, [r4, #10]
 8005684:	f8ad 200a 	strh.w	r2, [sp, #10]
 8005688:	3301      	adds	r3, #1
 800568a:	b29b      	uxth	r3, r3
 800568c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8005690:	f8ad 3008 	strh.w	r3, [sp, #8]
 8005694:	b21b      	sxth	r3, r3
 8005696:	429a      	cmp	r2, r3
 8005698:	da06      	bge.n	80056a8 <WM__GetNextIVR+0x6c>
 800569a:	8823      	ldrh	r3, [r4, #0]
 800569c:	f8ad 3008 	strh.w	r3, [sp, #8]
 80056a0:	89e3      	ldrh	r3, [r4, #14]
 80056a2:	3301      	adds	r3, #1
 80056a4:	f8ad 300a 	strh.w	r3, [sp, #10]
 80056a8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80056ac:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80056b0:	f8df 8108 	ldr.w	r8, [pc, #264]	; 80057bc <WM__GetNextIVR+0x180>
 80056b4:	429a      	cmp	r2, r3
 80056b6:	dd04      	ble.n	80056c2 <WM__GetNextIVR+0x86>
 80056b8:	6963      	ldr	r3, [r4, #20]
 80056ba:	3b01      	subs	r3, #1
 80056bc:	2000      	movs	r0, #0
 80056be:	6163      	str	r3, [r4, #20]
 80056c0:	e077      	b.n	80057b2 <WM__GetNextIVR+0x176>
 80056c2:	683b      	ldr	r3, [r7, #0]
 80056c4:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80056c6:	f004 f8bd 	bl	8009844 <GUI_ALLOC_LockH>
 80056ca:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80056ce:	f9b8 3000 	ldrsh.w	r3, [r8]
 80056d2:	9001      	str	r0, [sp, #4]
 80056d4:	429a      	cmp	r2, r3
 80056d6:	d11c      	bne.n	8005712 <WM__GetNextIVR+0xd6>
 80056d8:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80056dc:	f8ad 300e 	strh.w	r3, [sp, #14]
 80056e0:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 80056e4:	f8ad 300c 	strh.w	r3, [sp, #12]
 80056e8:	4b33      	ldr	r3, [pc, #204]	; (80057b8 <WM__GetNextIVR+0x17c>)
 80056ea:	681b      	ldr	r3, [r3, #0]
 80056ec:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80056ee:	b15a      	cbz	r2, 8005708 <WM__GetNextIVR+0xcc>
 80056f0:	4610      	mov	r0, r2
 80056f2:	f004 f89d 	bl	8009830 <GUI_ALLOC_h2p>
 80056f6:	4680      	mov	r8, r0
 80056f8:	2200      	movs	r2, #0
 80056fa:	6a00      	ldr	r0, [r0, #32]
 80056fc:	4629      	mov	r1, r5
 80056fe:	f7ff f973 	bl	80049e8 <_Findy1>
 8005702:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8005706:	e7f2      	b.n	80056ee <WM__GetNextIVR+0xb2>
 8005708:	9b01      	ldr	r3, [sp, #4]
 800570a:	4629      	mov	r1, r5
 800570c:	69d8      	ldr	r0, [r3, #28]
 800570e:	f7ff f96b 	bl	80049e8 <_Findy1>
 8005712:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8005716:	f8ad 300c 	strh.w	r3, [sp, #12]
 800571a:	683b      	ldr	r3, [r7, #0]
 800571c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800571e:	b16a      	cbz	r2, 800573c <WM__GetNextIVR+0x100>
 8005720:	4610      	mov	r0, r2
 8005722:	f004 f885 	bl	8009830 <GUI_ALLOC_h2p>
 8005726:	4629      	mov	r1, r5
 8005728:	4680      	mov	r8, r0
 800572a:	2200      	movs	r2, #0
 800572c:	6a00      	ldr	r0, [r0, #32]
 800572e:	f7ff f9b1 	bl	8004a94 <_Findx0>
 8005732:	2800      	cmp	r0, #0
 8005734:	d1ed      	bne.n	8005712 <WM__GetNextIVR+0xd6>
 8005736:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800573a:	e7f0      	b.n	800571e <WM__GetNextIVR+0xe2>
 800573c:	9b01      	ldr	r3, [sp, #4]
 800573e:	4629      	mov	r1, r5
 8005740:	69d8      	ldr	r0, [r3, #28]
 8005742:	f7ff f9a7 	bl	8004a94 <_Findx0>
 8005746:	2800      	cmp	r0, #0
 8005748:	d1e3      	bne.n	8005712 <WM__GetNextIVR+0xd6>
 800574a:	88a3      	ldrh	r3, [r4, #4]
 800574c:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8005750:	f8ad 300c 	strh.w	r3, [sp, #12]
 8005754:	b21b      	sxth	r3, r3
 8005756:	429a      	cmp	r2, r3
 8005758:	dd07      	ble.n	800576a <WM__GetNextIVR+0x12e>
 800575a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800575e:	e886 0003 	stmia.w	r6, {r0, r1}
 8005762:	a801      	add	r0, sp, #4
 8005764:	f004 f87c 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005768:	e797      	b.n	800569a <WM__GetNextIVR+0x5e>
 800576a:	683b      	ldr	r3, [r7, #0]
 800576c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800576e:	b152      	cbz	r2, 8005786 <WM__GetNextIVR+0x14a>
 8005770:	4610      	mov	r0, r2
 8005772:	f004 f85d 	bl	8009830 <GUI_ALLOC_h2p>
 8005776:	4607      	mov	r7, r0
 8005778:	2200      	movs	r2, #0
 800577a:	6a00      	ldr	r0, [r0, #32]
 800577c:	4629      	mov	r1, r5
 800577e:	f7ff f9cd 	bl	8004b1c <_Findx1>
 8005782:	69ba      	ldr	r2, [r7, #24]
 8005784:	e7f3      	b.n	800576e <WM__GetNextIVR+0x132>
 8005786:	af04      	add	r7, sp, #16
 8005788:	4629      	mov	r1, r5
 800578a:	f857 3d0c 	ldr.w	r3, [r7, #-12]!
 800578e:	69d8      	ldr	r0, [r3, #28]
 8005790:	f7ff f9c4 	bl	8004b1c <_Findx1>
 8005794:	4638      	mov	r0, r7
 8005796:	f004 f863 	bl	8009860 <GUI_ALLOC_UnlockH>
 800579a:	6923      	ldr	r3, [r4, #16]
 800579c:	f644 6220 	movw	r2, #20000	; 0x4e20
 80057a0:	4293      	cmp	r3, r2
 80057a2:	dc89      	bgt.n	80056b8 <WM__GetNextIVR+0x7c>
 80057a4:	e895 0003 	ldmia.w	r5, {r0, r1}
 80057a8:	e886 0003 	stmia.w	r6, {r0, r1}
 80057ac:	f7ff fbd6 	bl	8004f5c <WM__ActivateClipRect>
 80057b0:	2001      	movs	r0, #1
 80057b2:	b004      	add	sp, #16
 80057b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80057b8:	200000b0 	.word	0x200000b0
 80057bc:	200002bc 	.word	0x200002bc

080057c0 <WM__InitIVRSearch>:
 80057c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80057c4:	4f39      	ldr	r7, [pc, #228]	; (80058ac <WM__InitIVRSearch+0xec>)
 80057c6:	683b      	ldr	r3, [r7, #0]
 80057c8:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 80057cc:	b086      	sub	sp, #24
 80057ce:	4606      	mov	r6, r0
 80057d0:	b912      	cbnz	r2, 80057d8 <WM__InitIVRSearch+0x18>
 80057d2:	f7ff fbc3 	bl	8004f5c <WM__ActivateClipRect>
 80057d6:	e064      	b.n	80058a2 <WM__InitIVRSearch+0xe2>
 80057d8:	4d35      	ldr	r5, [pc, #212]	; (80058b0 <WM__InitIVRSearch+0xf0>)
 80057da:	696a      	ldr	r2, [r5, #20]
 80057dc:	3201      	adds	r2, #1
 80057de:	2a01      	cmp	r2, #1
 80057e0:	616a      	str	r2, [r5, #20]
 80057e2:	462c      	mov	r4, r5
 80057e4:	dc5d      	bgt.n	80058a2 <WM__InitIVRSearch+0xe2>
 80057e6:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80057e8:	f004 f82c 	bl	8009844 <GUI_ALLOC_LockH>
 80057ec:	f04f 32ff 	mov.w	r2, #4294967295
 80057f0:	612a      	str	r2, [r5, #16]
 80057f2:	4a30      	ldr	r2, [pc, #192]	; (80058b4 <WM__InitIVRSearch+0xf4>)
 80057f4:	9000      	str	r0, [sp, #0]
 80057f6:	7812      	ldrb	r2, [r2, #0]
 80057f8:	b12a      	cbz	r2, 8005806 <WM__InitIVRSearch+0x46>
 80057fa:	f100 0308 	add.w	r3, r0, #8
 80057fe:	aa02      	add	r2, sp, #8
 8005800:	e893 0003 	ldmia.w	r3, {r0, r1}
 8005804:	e005      	b.n	8005812 <WM__InitIVRSearch+0x52>
 8005806:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005808:	f012 0802 	ands.w	r8, r2, #2
 800580c:	d00a      	beq.n	8005824 <WM__InitIVRSearch+0x64>
 800580e:	c803      	ldmia	r0, {r0, r1}
 8005810:	aa02      	add	r2, sp, #8
 8005812:	e882 0003 	stmia.w	r2, {r0, r1}
 8005816:	ad02      	add	r5, sp, #8
 8005818:	b166      	cbz	r6, 8005834 <WM__InitIVRSearch+0x74>
 800581a:	4628      	mov	r0, r5
 800581c:	4631      	mov	r1, r6
 800581e:	f001 fe34 	bl	800748a <GUI__IntersectRect>
 8005822:	e007      	b.n	8005834 <WM__InitIVRSearch+0x74>
 8005824:	696b      	ldr	r3, [r5, #20]
 8005826:	4668      	mov	r0, sp
 8005828:	3b01      	subs	r3, #1
 800582a:	616b      	str	r3, [r5, #20]
 800582c:	f004 f818 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005830:	4640      	mov	r0, r8
 8005832:	e037      	b.n	80058a4 <WM__InitIVRSearch+0xe4>
 8005834:	683b      	ldr	r3, [r7, #0]
 8005836:	4e20      	ldr	r6, [pc, #128]	; (80058b8 <WM__InitIVRSearch+0xf8>)
 8005838:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800583a:	b1c2      	cbz	r2, 800586e <WM__InitIVRSearch+0xae>
 800583c:	9b00      	ldr	r3, [sp, #0]
 800583e:	6810      	ldr	r0, [r2, #0]
 8005840:	6851      	ldr	r1, [r2, #4]
 8005842:	9301      	str	r3, [sp, #4]
 8005844:	ab04      	add	r3, sp, #16
 8005846:	c303      	stmia	r3!, {r0, r1}
 8005848:	6833      	ldr	r3, [r6, #0]
 800584a:	b133      	cbz	r3, 800585a <WM__InitIVRSearch+0x9a>
 800584c:	a801      	add	r0, sp, #4
 800584e:	f004 f807 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005852:	6830      	ldr	r0, [r6, #0]
 8005854:	f003 fff6 	bl	8009844 <GUI_ALLOC_LockH>
 8005858:	9001      	str	r0, [sp, #4]
 800585a:	9801      	ldr	r0, [sp, #4]
 800585c:	a904      	add	r1, sp, #16
 800585e:	f7ff fb4d 	bl	8004efc <WM__Client2Screen>
 8005862:	4628      	mov	r0, r5
 8005864:	a904      	add	r1, sp, #16
 8005866:	f001 fe10 	bl	800748a <GUI__IntersectRect>
 800586a:	a801      	add	r0, sp, #4
 800586c:	e000      	b.n	8005870 <WM__InitIVRSearch+0xb0>
 800586e:	4668      	mov	r0, sp
 8005870:	f003 fff6 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005874:	6831      	ldr	r1, [r6, #0]
 8005876:	b119      	cbz	r1, 8005880 <WM__InitIVRSearch+0xc0>
 8005878:	4628      	mov	r0, r5
 800587a:	f7ff faa1 	bl	8004dc0 <WM__ClipAtParentBorders>
 800587e:	b128      	cbz	r0, 800588c <WM__InitIVRSearch+0xcc>
 8005880:	683b      	ldr	r3, [r7, #0]
 8005882:	4628      	mov	r0, r5
 8005884:	6c99      	ldr	r1, [r3, #72]	; 0x48
 8005886:	f7ff fa9b 	bl	8004dc0 <WM__ClipAtParentBorders>
 800588a:	b918      	cbnz	r0, 8005894 <WM__InitIVRSearch+0xd4>
 800588c:	6963      	ldr	r3, [r4, #20]
 800588e:	3b01      	subs	r3, #1
 8005890:	6163      	str	r3, [r4, #20]
 8005892:	e007      	b.n	80058a4 <WM__InitIVRSearch+0xe4>
 8005894:	e895 0003 	ldmia.w	r5, {r0, r1}
 8005898:	e884 0003 	stmia.w	r4, {r0, r1}
 800589c:	f7ff fece 	bl	800563c <WM__GetNextIVR>
 80058a0:	e000      	b.n	80058a4 <WM__InitIVRSearch+0xe4>
 80058a2:	2001      	movs	r0, #1
 80058a4:	b006      	add	sp, #24
 80058a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80058aa:	bf00      	nop
 80058ac:	200000b0 	.word	0x200000b0
 80058b0:	200002bc 	.word	0x200002bc
 80058b4:	2000045c 	.word	0x2000045c
 80058b8:	2000042c 	.word	0x2000042c

080058bc <WM_SetDefault>:
 80058bc:	b508      	push	{r3, lr}
 80058be:	f003 fba5 	bl	800900c <GL_SetDefault>
 80058c2:	4b02      	ldr	r3, [pc, #8]	; (80058cc <WM_SetDefault+0x10>)
 80058c4:	681b      	ldr	r3, [r3, #0]
 80058c6:	2200      	movs	r2, #0
 80058c8:	645a      	str	r2, [r3, #68]	; 0x44
 80058ca:	bd08      	pop	{r3, pc}
 80058cc:	200000b0 	.word	0x200000b0

080058d0 <WM__Paint1>:
 80058d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80058d2:	b089      	sub	sp, #36	; 0x24
 80058d4:	4604      	mov	r4, r0
 80058d6:	f003 ffb5 	bl	8009844 <GUI_ALLOC_LockH>
 80058da:	6907      	ldr	r7, [r0, #16]
 80058dc:	6a86      	ldr	r6, [r0, #40]	; 0x28
 80058de:	9001      	str	r0, [sp, #4]
 80058e0:	3008      	adds	r0, #8
 80058e2:	c803      	ldmia	r0, {r0, r1}
 80058e4:	ad02      	add	r5, sp, #8
 80058e6:	e885 0003 	stmia.w	r5, {r0, r1}
 80058ea:	a801      	add	r0, sp, #4
 80058ec:	f003 ffb8 	bl	8009860 <GUI_ALLOC_UnlockH>
 80058f0:	2f00      	cmp	r7, #0
 80058f2:	d031      	beq.n	8005958 <WM__Paint1+0x88>
 80058f4:	07b3      	lsls	r3, r6, #30
 80058f6:	d52f      	bpl.n	8005958 <WM__Paint1+0x88>
 80058f8:	4620      	mov	r0, r4
 80058fa:	212e      	movs	r1, #46	; 0x2e
 80058fc:	f7fe fef1 	bl	80046e2 <WM_SendMessageNoPara>
 8005900:	4b16      	ldr	r3, [pc, #88]	; (800595c <WM__Paint1+0x8c>)
 8005902:	781a      	ldrb	r2, [r3, #0]
 8005904:	f416 5f80 	tst.w	r6, #4096	; 0x1000
 8005908:	f102 0201 	add.w	r2, r2, #1
 800590c:	701a      	strb	r2, [r3, #0]
 800590e:	461e      	mov	r6, r3
 8005910:	d00a      	beq.n	8005928 <WM__Paint1+0x58>
 8005912:	230f      	movs	r3, #15
 8005914:	9405      	str	r4, [sp, #20]
 8005916:	9304      	str	r3, [sp, #16]
 8005918:	9507      	str	r5, [sp, #28]
 800591a:	f7ff ffcf 	bl	80058bc <WM_SetDefault>
 800591e:	4620      	mov	r0, r4
 8005920:	a904      	add	r1, sp, #16
 8005922:	f7fe f9cb 	bl	8003cbc <WM__SendMessage>
 8005926:	e010      	b.n	800594a <WM__Paint1+0x7a>
 8005928:	4628      	mov	r0, r5
 800592a:	f7ff ff49 	bl	80057c0 <WM__InitIVRSearch>
 800592e:	b160      	cbz	r0, 800594a <WM__Paint1+0x7a>
 8005930:	230f      	movs	r3, #15
 8005932:	9304      	str	r3, [sp, #16]
 8005934:	9405      	str	r4, [sp, #20]
 8005936:	9507      	str	r5, [sp, #28]
 8005938:	f7ff ffc0 	bl	80058bc <WM_SetDefault>
 800593c:	4620      	mov	r0, r4
 800593e:	a904      	add	r1, sp, #16
 8005940:	f7fe f9bc 	bl	8003cbc <WM__SendMessage>
 8005944:	f7ff fe7a 	bl	800563c <WM__GetNextIVR>
 8005948:	e7f1      	b.n	800592e <WM__Paint1+0x5e>
 800594a:	7833      	ldrb	r3, [r6, #0]
 800594c:	4620      	mov	r0, r4
 800594e:	3b01      	subs	r3, #1
 8005950:	212f      	movs	r1, #47	; 0x2f
 8005952:	7033      	strb	r3, [r6, #0]
 8005954:	f7fe fec5 	bl	80046e2 <WM_SendMessageNoPara>
 8005958:	b009      	add	sp, #36	; 0x24
 800595a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800595c:	2000045c 	.word	0x2000045c

08005960 <WM__Paint>:
 8005960:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005962:	b089      	sub	sp, #36	; 0x24
 8005964:	ac06      	add	r4, sp, #24
 8005966:	9003      	str	r0, [sp, #12]
 8005968:	f003 ff6c 	bl	8009844 <GUI_ALLOC_LockH>
 800596c:	f100 0208 	add.w	r2, r0, #8
 8005970:	4603      	mov	r3, r0
 8005972:	9005      	str	r0, [sp, #20]
 8005974:	e892 0003 	ldmia.w	r2, {r0, r1}
 8005978:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800597a:	699e      	ldr	r6, [r3, #24]
 800597c:	691f      	ldr	r7, [r3, #16]
 800597e:	e884 0003 	stmia.w	r4, {r0, r1}
 8005982:	a805      	add	r0, sp, #20
 8005984:	f003 ff6c 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005988:	f244 0320 	movw	r3, #16416	; 0x4020
 800598c:	402b      	ands	r3, r5
 800598e:	2b00      	cmp	r3, #0
 8005990:	d034      	beq.n	80059fc <WM__Paint+0x9c>
 8005992:	b1bf      	cbz	r7, 80059c4 <WM__Paint+0x64>
 8005994:	4620      	mov	r0, r4
 8005996:	9903      	ldr	r1, [sp, #12]
 8005998:	f7ff fa12 	bl	8004dc0 <WM__ClipAtParentBorders>
 800599c:	b190      	cbz	r0, 80059c4 <WM__Paint+0x64>
 800599e:	9803      	ldr	r0, [sp, #12]
 80059a0:	f7ff fcb0 	bl	8005304 <WM_SelectWindow>
 80059a4:	0769      	lsls	r1, r5, #29
 80059a6:	d50f      	bpl.n	80059c8 <WM__Paint+0x68>
 80059a8:	b126      	cbz	r6, 80059b4 <WM__Paint+0x54>
 80059aa:	f005 0501 	and.w	r5, r5, #1
 80059ae:	f085 0501 	eor.w	r5, r5, #1
 80059b2:	e000      	b.n	80059b6 <WM__Paint+0x56>
 80059b4:	2501      	movs	r5, #1
 80059b6:	9500      	str	r5, [sp, #0]
 80059b8:	4620      	mov	r0, r4
 80059ba:	4912      	ldr	r1, [pc, #72]	; (8005a04 <WM__Paint+0xa4>)
 80059bc:	aa03      	add	r2, sp, #12
 80059be:	2300      	movs	r3, #0
 80059c0:	f000 f9fc 	bl	8005dbc <GUI_MEMDEV_Draw>
 80059c4:	2400      	movs	r4, #0
 80059c6:	e003      	b.n	80059d0 <WM__Paint+0x70>
 80059c8:	9803      	ldr	r0, [sp, #12]
 80059ca:	f7ff f989 	bl	8004ce0 <WM__PaintWinAndOverlays>
 80059ce:	2401      	movs	r4, #1
 80059d0:	9803      	ldr	r0, [sp, #12]
 80059d2:	f003 ff37 	bl	8009844 <GUI_ALLOC_LockH>
 80059d6:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80059d8:	9005      	str	r0, [sp, #20]
 80059da:	f422 4380 	bic.w	r3, r2, #16384	; 0x4000
 80059de:	f023 0320 	bic.w	r3, r3, #32
 80059e2:	0492      	lsls	r2, r2, #18
 80059e4:	bf48      	it	mi
 80059e6:	f043 0304 	orrmi.w	r3, r3, #4
 80059ea:	6283      	str	r3, [r0, #40]	; 0x28
 80059ec:	a805      	add	r0, sp, #20
 80059ee:	f003 ff37 	bl	8009860 <GUI_ALLOC_UnlockH>
 80059f2:	4b05      	ldr	r3, [pc, #20]	; (8005a08 <WM__Paint+0xa8>)
 80059f4:	881a      	ldrh	r2, [r3, #0]
 80059f6:	3a01      	subs	r2, #1
 80059f8:	801a      	strh	r2, [r3, #0]
 80059fa:	e000      	b.n	80059fe <WM__Paint+0x9e>
 80059fc:	461c      	mov	r4, r3
 80059fe:	4620      	mov	r0, r4
 8005a00:	b009      	add	sp, #36	; 0x24
 8005a02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a04:	08004d59 	.word	0x08004d59
 8005a08:	20000448 	.word	0x20000448

08005a0c <_Exec1Draw>:
 8005a0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005a10:	4b1a      	ldr	r3, [pc, #104]	; (8005a7c <_Exec1Draw+0x70>)
 8005a12:	681a      	ldr	r2, [r3, #0]
 8005a14:	f892 0054 	ldrb.w	r0, [r2, #84]	; 0x54
 8005a18:	b09c      	sub	sp, #112	; 0x70
 8005a1a:	461d      	mov	r5, r3
 8005a1c:	2800      	cmp	r0, #0
 8005a1e:	d02a      	beq.n	8005a76 <_Exec1Draw+0x6a>
 8005a20:	4b17      	ldr	r3, [pc, #92]	; (8005a80 <_Exec1Draw+0x74>)
 8005a22:	8818      	ldrh	r0, [r3, #0]
 8005a24:	b338      	cbz	r0, 8005a76 <_Exec1Draw+0x6a>
 8005a26:	4a17      	ldr	r2, [pc, #92]	; (8005a84 <_Exec1Draw+0x78>)
 8005a28:	6814      	ldr	r4, [r2, #0]
 8005a2a:	4616      	mov	r6, r2
 8005a2c:	b90c      	cbnz	r4, 8005a32 <_Exec1Draw+0x26>
 8005a2e:	4b16      	ldr	r3, [pc, #88]	; (8005a88 <_Exec1Draw+0x7c>)
 8005a30:	681c      	ldr	r4, [r3, #0]
 8005a32:	4668      	mov	r0, sp
 8005a34:	f003 faa0 	bl	8008f78 <GUI_SaveContext_W>
 8005a38:	682b      	ldr	r3, [r5, #0]
 8005a3a:	6b1f      	ldr	r7, [r3, #48]	; 0x30
 8005a3c:	6b5d      	ldr	r5, [r3, #52]	; 0x34
 8005a3e:	b924      	cbnz	r4, 8005a4a <_Exec1Draw+0x3e>
 8005a40:	2400      	movs	r4, #0
 8005a42:	e00d      	b.n	8005a60 <_Exec1Draw+0x54>
 8005a44:	f1b8 0f00 	cmp.w	r8, #0
 8005a48:	d10a      	bne.n	8005a60 <_Exec1Draw+0x54>
 8005a4a:	4620      	mov	r0, r4
 8005a4c:	f7ff ff88 	bl	8005960 <WM__Paint>
 8005a50:	4680      	mov	r8, r0
 8005a52:	4620      	mov	r0, r4
 8005a54:	f003 feec 	bl	8009830 <GUI_ALLOC_h2p>
 8005a58:	6944      	ldr	r4, [r0, #20]
 8005a5a:	2c00      	cmp	r4, #0
 8005a5c:	d1f2      	bne.n	8005a44 <_Exec1Draw+0x38>
 8005a5e:	e7ef      	b.n	8005a40 <_Exec1Draw+0x34>
 8005a60:	4638      	mov	r0, r7
 8005a62:	6034      	str	r4, [r6, #0]
 8005a64:	f003 faa7 	bl	8008fb6 <GUI_SetColor>
 8005a68:	4628      	mov	r0, r5
 8005a6a:	f003 faa2 	bl	8008fb2 <GUI_SetBkColor>
 8005a6e:	4668      	mov	r0, sp
 8005a70:	f003 fa8c 	bl	8008f8c <GUI_RestoreContext>
 8005a74:	2001      	movs	r0, #1
 8005a76:	b01c      	add	sp, #112	; 0x70
 8005a78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005a7c:	200000b0 	.word	0x200000b0
 8005a80:	20000448 	.word	0x20000448
 8005a84:	200002d4 	.word	0x200002d4
 8005a88:	2000044c 	.word	0x2000044c

08005a8c <WM__DeleteSecure>:
 8005a8c:	b508      	push	{r3, lr}
 8005a8e:	f003 fecf 	bl	8009830 <GUI_ALLOC_h2p>
 8005a92:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005a94:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005a98:	6283      	str	r3, [r0, #40]	; 0x28
 8005a9a:	4b02      	ldr	r3, [pc, #8]	; (8005aa4 <WM__DeleteSecure+0x18>)
 8005a9c:	2201      	movs	r2, #1
 8005a9e:	601a      	str	r2, [r3, #0]
 8005aa0:	bd08      	pop	{r3, pc}
 8005aa2:	bf00      	nop
 8005aa4:	200002b8 	.word	0x200002b8

08005aa8 <WM_Exec>:
 8005aa8:	4b18      	ldr	r3, [pc, #96]	; (8005b0c <WM_Exec+0x64>)
 8005aaa:	681b      	ldr	r3, [r3, #0]
 8005aac:	b570      	push	{r4, r5, r6, lr}
 8005aae:	b103      	cbz	r3, 8005ab2 <WM_Exec+0xa>
 8005ab0:	4798      	blx	r3
 8005ab2:	2500      	movs	r5, #0
 8005ab4:	f7ff fd7a 	bl	80055ac <_Exec1Input>
 8005ab8:	b108      	cbz	r0, 8005abe <WM_Exec+0x16>
 8005aba:	2501      	movs	r5, #1
 8005abc:	e7fa      	b.n	8005ab4 <WM_Exec+0xc>
 8005abe:	4b14      	ldr	r3, [pc, #80]	; (8005b10 <WM_Exec+0x68>)
 8005ac0:	681b      	ldr	r3, [r3, #0]
 8005ac2:	f893 4054 	ldrb.w	r4, [r3, #84]	; 0x54
 8005ac6:	b144      	cbz	r4, 8005ada <WM_Exec+0x32>
 8005ac8:	4b12      	ldr	r3, [pc, #72]	; (8005b14 <WM_Exec+0x6c>)
 8005aca:	881c      	ldrh	r4, [r3, #0]
 8005acc:	b12c      	cbz	r4, 8005ada <WM_Exec+0x32>
 8005ace:	4b12      	ldr	r3, [pc, #72]	; (8005b18 <WM_Exec+0x70>)
 8005ad0:	681b      	ldr	r3, [r3, #0]
 8005ad2:	b1a3      	cbz	r3, 8005afe <WM_Exec+0x56>
 8005ad4:	681b      	ldr	r3, [r3, #0]
 8005ad6:	4798      	blx	r3
 8005ad8:	2401      	movs	r4, #1
 8005ada:	f7ff ff97 	bl	8005a0c <_Exec1Draw>
 8005ade:	4606      	mov	r6, r0
 8005ae0:	b108      	cbz	r0, 8005ae6 <WM_Exec+0x3e>
 8005ae2:	2501      	movs	r5, #1
 8005ae4:	e7f9      	b.n	8005ada <WM_Exec+0x32>
 8005ae6:	b174      	cbz	r4, 8005b06 <WM_Exec+0x5e>
 8005ae8:	4b0b      	ldr	r3, [pc, #44]	; (8005b18 <WM_Exec+0x70>)
 8005aea:	681b      	ldr	r3, [r3, #0]
 8005aec:	b123      	cbz	r3, 8005af8 <WM_Exec+0x50>
 8005aee:	685b      	ldr	r3, [r3, #4]
 8005af0:	4798      	blx	r3
 8005af2:	4b0a      	ldr	r3, [pc, #40]	; (8005b1c <WM_Exec+0x74>)
 8005af4:	601e      	str	r6, [r3, #0]
 8005af6:	e006      	b.n	8005b06 <WM_Exec+0x5e>
 8005af8:	f001 fe1e 	bl	8007738 <GUI__ManageCache>
 8005afc:	e003      	b.n	8005b06 <WM_Exec+0x5e>
 8005afe:	2001      	movs	r0, #1
 8005b00:	f001 fe1a 	bl	8007738 <GUI__ManageCache>
 8005b04:	e7e8      	b.n	8005ad8 <WM_Exec+0x30>
 8005b06:	4628      	mov	r0, r5
 8005b08:	bd70      	pop	{r4, r5, r6, pc}
 8005b0a:	bf00      	nop
 8005b0c:	2000043c 	.word	0x2000043c
 8005b10:	200000b0 	.word	0x200000b0
 8005b14:	20000448 	.word	0x20000448
 8005b18:	20000470 	.word	0x20000470
 8005b1c:	20000458 	.word	0x20000458

08005b20 <WM_Activate>:
 8005b20:	4b02      	ldr	r3, [pc, #8]	; (8005b2c <WM_Activate+0xc>)
 8005b22:	681b      	ldr	r3, [r3, #0]
 8005b24:	2201      	movs	r2, #1
 8005b26:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8005b2a:	4770      	bx	lr
 8005b2c:	200000b0 	.word	0x200000b0

08005b30 <WM_Deactivate>:
 8005b30:	4b03      	ldr	r3, [pc, #12]	; (8005b40 <WM_Deactivate+0x10>)
 8005b32:	681b      	ldr	r3, [r3, #0]
 8005b34:	2200      	movs	r2, #0
 8005b36:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8005b3a:	f001 bc0d 	b.w	8007358 <LCD_SetClipRectMax>
 8005b3e:	bf00      	nop
 8005b40:	200000b0 	.word	0x200000b0

08005b44 <WM_DefaultProc>:
 8005b44:	b510      	push	{r4, lr}
 8005b46:	4604      	mov	r4, r0
 8005b48:	6840      	ldr	r0, [r0, #4]
 8005b4a:	6823      	ldr	r3, [r4, #0]
 8005b4c:	68e1      	ldr	r1, [r4, #12]
 8005b4e:	2b17      	cmp	r3, #23
 8005b50:	d00f      	beq.n	8005b72 <WM_DefaultProc+0x2e>
 8005b52:	dc06      	bgt.n	8005b62 <WM_DefaultProc+0x1e>
 8005b54:	2b0e      	cmp	r3, #14
 8005b56:	d00e      	beq.n	8005b76 <WM_DefaultProc+0x32>
 8005b58:	2b14      	cmp	r3, #20
 8005b5a:	d114      	bne.n	8005b86 <WM_DefaultProc+0x42>
 8005b5c:	f7fe f95a 	bl	8003e14 <WM__GetClientRectEx>
 8005b60:	e011      	b.n	8005b86 <WM_DefaultProc+0x42>
 8005b62:	2b22      	cmp	r3, #34	; 0x22
 8005b64:	d00c      	beq.n	8005b80 <WM_DefaultProc+0x3c>
 8005b66:	2b28      	cmp	r3, #40	; 0x28
 8005b68:	d10d      	bne.n	8005b86 <WM_DefaultProc+0x42>
 8005b6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005b6e:	f7ff bbbb 	b.w	80052e8 <WM_InvalidateWindow>
 8005b72:	60e0      	str	r0, [r4, #12]
 8005b74:	bd10      	pop	{r4, pc}
 8005b76:	4621      	mov	r1, r4
 8005b78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005b7c:	f7fe bdb3 	b.w	80046e6 <WM_SendToParent>
 8005b80:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8005b84:	e000      	b.n	8005b88 <WM_DefaultProc+0x44>
 8005b86:	2300      	movs	r3, #0
 8005b88:	60e3      	str	r3, [r4, #12]
 8005b8a:	bd10      	pop	{r4, pc}

08005b8c <_CreateStaticDevice>:
 8005b8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b90:	b087      	sub	sp, #28
 8005b92:	4604      	mov	r4, r0
 8005b94:	f003 fe56 	bl	8009844 <GUI_ALLOC_LockH>
 8005b98:	af06      	add	r7, sp, #24
 8005b9a:	f8b0 8000 	ldrh.w	r8, [r0]
 8005b9e:	8886      	ldrh	r6, [r0, #4]
 8005ba0:	f8b0 9002 	ldrh.w	r9, [r0, #2]
 8005ba4:	f8b0 b006 	ldrh.w	fp, [r0, #6]
 8005ba8:	f847 0d04 	str.w	r0, [r7, #-4]!
 8005bac:	fa0f f888 	sxth.w	r8, r8
 8005bb0:	b236      	sxth	r6, r6
 8005bb2:	ebc8 0606 	rsb	r6, r8, r6
 8005bb6:	f8d0 a024 	ldr.w	sl, [r0, #36]	; 0x24
 8005bba:	3601      	adds	r6, #1
 8005bbc:	4638      	mov	r0, r7
 8005bbe:	fa0f f989 	sxth.w	r9, r9
 8005bc2:	fa0f f58b 	sxth.w	r5, fp
 8005bc6:	f003 fe4b 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005bca:	ebc9 0505 	rsb	r5, r9, r5
 8005bce:	2e00      	cmp	r6, #0
 8005bd0:	f105 0501 	add.w	r5, r5, #1
 8005bd4:	dd4d      	ble.n	8005c72 <_CreateStaticDevice+0xe6>
 8005bd6:	2d00      	cmp	r5, #0
 8005bd8:	dd4b      	ble.n	8005c72 <_CreateStaticDevice+0xe6>
 8005bda:	f1ba 0f00 	cmp.w	sl, #0
 8005bde:	d04a      	beq.n	8005c76 <_CreateStaticDevice+0xea>
 8005be0:	4650      	mov	r0, sl
 8005be2:	f003 fe2f 	bl	8009844 <GUI_ALLOC_LockH>
 8005be6:	ab06      	add	r3, sp, #24
 8005be8:	8886      	ldrh	r6, [r0, #4]
 8005bea:	f843 0d08 	str.w	r0, [r3, #-8]!
 8005bee:	88c5      	ldrh	r5, [r0, #6]
 8005bf0:	b236      	sxth	r6, r6
 8005bf2:	4618      	mov	r0, r3
 8005bf4:	f003 fe34 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005bf8:	4546      	cmp	r6, r8
 8005bfa:	d102      	bne.n	8005c02 <_CreateStaticDevice+0x76>
 8005bfc:	b22d      	sxth	r5, r5
 8005bfe:	454d      	cmp	r5, r9
 8005c00:	d032      	beq.n	8005c68 <_CreateStaticDevice+0xdc>
 8005c02:	4650      	mov	r0, sl
 8005c04:	4641      	mov	r1, r8
 8005c06:	464a      	mov	r2, r9
 8005c08:	f000 f888 	bl	8005d1c <GUI_MEMDEV_SetOrg>
 8005c0c:	e02c      	b.n	8005c68 <_CreateStaticDevice+0xdc>
 8005c0e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005c10:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005c14:	6283      	str	r3, [r0, #40]	; 0x28
 8005c16:	4638      	mov	r0, r7
 8005c18:	f003 fe22 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005c1c:	4640      	mov	r0, r8
 8005c1e:	f000 ff99 	bl	8006b54 <GUI_MEMDEV_Select>
 8005c22:	4607      	mov	r7, r0
 8005c24:	4650      	mov	r0, sl
 8005c26:	f002 f931 	bl	8007e8c <GUI__AlphaPreserveTrans>
 8005c2a:	4640      	mov	r0, r8
 8005c2c:	f000 f8b6 	bl	8005d9c <GUI_MEMDEV_GetDataPtr>
 8005c30:	4a2d      	ldr	r2, [pc, #180]	; (8005ce8 <_CreateStaticDevice+0x15c>)
 8005c32:	4b2e      	ldr	r3, [pc, #184]	; (8005cec <_CreateStaticDevice+0x160>)
 8005c34:	7811      	ldrb	r1, [r2, #0]
 8005c36:	681b      	ldr	r3, [r3, #0]
 8005c38:	4375      	muls	r5, r6
 8005c3a:	00aa      	lsls	r2, r5, #2
 8005c3c:	4e2c      	ldr	r6, [pc, #176]	; (8005cf0 <_CreateStaticDevice+0x164>)
 8005c3e:	4d2d      	ldr	r5, [pc, #180]	; (8005cf4 <_CreateStaticDevice+0x168>)
 8005c40:	4798      	blx	r3
 8005c42:	4620      	mov	r0, r4
 8005c44:	f8d5 8000 	ldr.w	r8, [r5]
 8005c48:	6034      	str	r4, [r6, #0]
 8005c4a:	f7fe fb94 	bl	8004376 <WM_GetWindowOrgX>
 8005c4e:	6028      	str	r0, [r5, #0]
 8005c50:	4620      	mov	r0, r4
 8005c52:	f7ff fe3d 	bl	80058d0 <WM__Paint1>
 8005c56:	2000      	movs	r0, #0
 8005c58:	f8c5 8000 	str.w	r8, [r5]
 8005c5c:	6030      	str	r0, [r6, #0]
 8005c5e:	f002 f915 	bl	8007e8c <GUI__AlphaPreserveTrans>
 8005c62:	4638      	mov	r0, r7
 8005c64:	f000 ff76 	bl	8006b54 <GUI_MEMDEV_Select>
 8005c68:	4620      	mov	r0, r4
 8005c6a:	f003 fde1 	bl	8009830 <GUI_ALLOC_h2p>
 8005c6e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005c70:	e037      	b.n	8005ce2 <_CreateStaticDevice+0x156>
 8005c72:	2000      	movs	r0, #0
 8005c74:	e035      	b.n	8005ce2 <_CreateStaticDevice+0x156>
 8005c76:	f7fe fae3 	bl	8004240 <WM_GetDesktopWindow>
 8005c7a:	4284      	cmp	r4, r0
 8005c7c:	d112      	bne.n	8005ca4 <_CreateStaticDevice+0x118>
 8005c7e:	f001 f83d 	bl	8006cfc <LCD_GetXSize>
 8005c82:	4682      	mov	sl, r0
 8005c84:	f001 f842 	bl	8006d0c <LCD_GetYSize>
 8005c88:	4556      	cmp	r6, sl
 8005c8a:	dc02      	bgt.n	8005c92 <_CreateStaticDevice+0x106>
 8005c8c:	4285      	cmp	r5, r0
 8005c8e:	dd09      	ble.n	8005ca4 <_CreateStaticDevice+0x118>
 8005c90:	e000      	b.n	8005c94 <_CreateStaticDevice+0x108>
 8005c92:	4656      	mov	r6, sl
 8005c94:	4285      	cmp	r5, r0
 8005c96:	bfa8      	it	ge
 8005c98:	4605      	movge	r5, r0
 8005c9a:	4631      	mov	r1, r6
 8005c9c:	4620      	mov	r0, r4
 8005c9e:	462a      	mov	r2, r5
 8005ca0:	f7fe fd94 	bl	80047cc <WM_SetSize>
 8005ca4:	4b14      	ldr	r3, [pc, #80]	; (8005cf8 <_CreateStaticDevice+0x16c>)
 8005ca6:	9301      	str	r3, [sp, #4]
 8005ca8:	f04f 0a01 	mov.w	sl, #1
 8005cac:	4b13      	ldr	r3, [pc, #76]	; (8005cfc <_CreateStaticDevice+0x170>)
 8005cae:	9302      	str	r3, [sp, #8]
 8005cb0:	4640      	mov	r0, r8
 8005cb2:	4649      	mov	r1, r9
 8005cb4:	4632      	mov	r2, r6
 8005cb6:	462b      	mov	r3, r5
 8005cb8:	f8cd a000 	str.w	sl, [sp]
 8005cbc:	f000 fe54 	bl	8006968 <GUI_MEMDEV__CreateFixed>
 8005cc0:	4680      	mov	r8, r0
 8005cc2:	4620      	mov	r0, r4
 8005cc4:	f003 fdbe 	bl	8009844 <GUI_ALLOC_LockH>
 8005cc8:	9005      	str	r0, [sp, #20]
 8005cca:	f8c0 8024 	str.w	r8, [r0, #36]	; 0x24
 8005cce:	f1b8 0f00 	cmp.w	r8, #0
 8005cd2:	d19c      	bne.n	8005c0e <_CreateStaticDevice+0x82>
 8005cd4:	4638      	mov	r0, r7
 8005cd6:	f003 fdc3 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005cda:	4620      	mov	r0, r4
 8005cdc:	f7ff fdf8 	bl	80058d0 <WM__Paint1>
 8005ce0:	4640      	mov	r0, r8
 8005ce2:	b007      	add	sp, #28
 8005ce4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005ce8:	20000094 	.word	0x20000094
 8005cec:	2000009c 	.word	0x2000009c
 8005cf0:	2000047c 	.word	0x2000047c
 8005cf4:	20000494 	.word	0x20000494
 8005cf8:	0800d5b0 	.word	0x0800d5b0
 8005cfc:	0800f6b4 	.word	0x0800f6b4

08005d00 <GUI_MEMDEV_Paint1Static>:
 8005d00:	b538      	push	{r3, r4, r5, lr}
 8005d02:	4605      	mov	r5, r0
 8005d04:	2405      	movs	r4, #5
 8005d06:	4628      	mov	r0, r5
 8005d08:	f7ff ff40 	bl	8005b8c <_CreateStaticDevice>
 8005d0c:	b910      	cbnz	r0, 8005d14 <GUI_MEMDEV_Paint1Static+0x14>
 8005d0e:	3c01      	subs	r4, #1
 8005d10:	d1f9      	bne.n	8005d06 <GUI_MEMDEV_Paint1Static+0x6>
 8005d12:	bd38      	pop	{r3, r4, r5, pc}
 8005d14:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005d18:	f005 beb4 	b.w	800ba84 <GUI_MEMDEV_Write>

08005d1c <GUI_MEMDEV_SetOrg>:
 8005d1c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005d1e:	460d      	mov	r5, r1
 8005d20:	4614      	mov	r4, r2
 8005d22:	b918      	cbnz	r0, 8005d2c <GUI_MEMDEV_SetOrg+0x10>
 8005d24:	4b11      	ldr	r3, [pc, #68]	; (8005d6c <GUI_MEMDEV_SetOrg+0x50>)
 8005d26:	681b      	ldr	r3, [r3, #0]
 8005d28:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8005d2a:	b1e8      	cbz	r0, 8005d68 <GUI_MEMDEV_SetOrg+0x4c>
 8005d2c:	f003 fd8a 	bl	8009844 <GUI_ALLOC_LockH>
 8005d30:	b2a4      	uxth	r4, r4
 8005d32:	b2ad      	uxth	r5, r5
 8005d34:	80c4      	strh	r4, [r0, #6]
 8005d36:	8085      	strh	r5, [r0, #4]
 8005d38:	9000      	str	r0, [sp, #0]
 8005d3a:	f001 fb0d 	bl	8007358 <LCD_SetClipRectMax>
 8005d3e:	9b00      	ldr	r3, [sp, #0]
 8005d40:	6958      	ldr	r0, [r3, #20]
 8005d42:	b170      	cbz	r0, 8005d62 <GUI_MEMDEV_SetOrg+0x46>
 8005d44:	f003 fd7e 	bl	8009844 <GUI_ALLOC_LockH>
 8005d48:	9b00      	ldr	r3, [sp, #0]
 8005d4a:	9001      	str	r0, [sp, #4]
 8005d4c:	891a      	ldrh	r2, [r3, #8]
 8005d4e:	895b      	ldrh	r3, [r3, #10]
 8005d50:	8082      	strh	r2, [r0, #4]
 8005d52:	80c3      	strh	r3, [r0, #6]
 8005d54:	b112      	cbz	r2, 8005d5c <GUI_MEMDEV_SetOrg+0x40>
 8005d56:	b10b      	cbz	r3, 8005d5c <GUI_MEMDEV_SetOrg+0x40>
 8005d58:	8005      	strh	r5, [r0, #0]
 8005d5a:	8044      	strh	r4, [r0, #2]
 8005d5c:	a801      	add	r0, sp, #4
 8005d5e:	f003 fd7f 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005d62:	4668      	mov	r0, sp
 8005d64:	f003 fd7c 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005d68:	b003      	add	sp, #12
 8005d6a:	bd30      	pop	{r4, r5, pc}
 8005d6c:	200000b0 	.word	0x200000b0

08005d70 <GUI_MEMDEV_GetYSize>:
 8005d70:	b513      	push	{r0, r1, r4, lr}
 8005d72:	b920      	cbnz	r0, 8005d7e <GUI_MEMDEV_GetYSize+0xe>
 8005d74:	4b08      	ldr	r3, [pc, #32]	; (8005d98 <GUI_MEMDEV_GetYSize+0x28>)
 8005d76:	681b      	ldr	r3, [r3, #0]
 8005d78:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8005d7a:	4604      	mov	r4, r0
 8005d7c:	b148      	cbz	r0, 8005d92 <GUI_MEMDEV_GetYSize+0x22>
 8005d7e:	f003 fd61 	bl	8009844 <GUI_ALLOC_LockH>
 8005d82:	ab02      	add	r3, sp, #8
 8005d84:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 8005d88:	f843 0d04 	str.w	r0, [r3, #-4]!
 8005d8c:	4618      	mov	r0, r3
 8005d8e:	f003 fd67 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005d92:	4620      	mov	r0, r4
 8005d94:	b002      	add	sp, #8
 8005d96:	bd10      	pop	{r4, pc}
 8005d98:	200000b0 	.word	0x200000b0

08005d9c <GUI_MEMDEV_GetDataPtr>:
 8005d9c:	b513      	push	{r0, r1, r4, lr}
 8005d9e:	b150      	cbz	r0, 8005db6 <GUI_MEMDEV_GetDataPtr+0x1a>
 8005da0:	f003 fd50 	bl	8009844 <GUI_ALLOC_LockH>
 8005da4:	4604      	mov	r4, r0
 8005da6:	a802      	add	r0, sp, #8
 8005da8:	f840 4d04 	str.w	r4, [r0, #-4]!
 8005dac:	f003 fd58 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005db0:	f104 0018 	add.w	r0, r4, #24
 8005db4:	e7ff      	b.n	8005db6 <GUI_MEMDEV_GetDataPtr+0x1a>
 8005db6:	b002      	add	sp, #8
 8005db8:	bd10      	pop	{r4, pc}
	...

08005dbc <GUI_MEMDEV_Draw>:
 8005dbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005dc0:	461e      	mov	r6, r3
 8005dc2:	b089      	sub	sp, #36	; 0x24
 8005dc4:	4b4e      	ldr	r3, [pc, #312]	; (8005f00 <GUI_MEMDEV_Draw+0x144>)
 8005dc6:	9204      	str	r2, [sp, #16]
 8005dc8:	681a      	ldr	r2, [r3, #0]
 8005dca:	9103      	str	r1, [sp, #12]
 8005dcc:	7c54      	ldrb	r4, [r2, #17]
 8005dce:	4a4d      	ldr	r2, [pc, #308]	; (8005f04 <GUI_MEMDEV_Draw+0x148>)
 8005dd0:	5712      	ldrsb	r2, [r2, r4]
 8005dd2:	2a01      	cmp	r2, #1
 8005dd4:	4605      	mov	r5, r0
 8005dd6:	469b      	mov	fp, r3
 8005dd8:	4620      	mov	r0, r4
 8005dda:	dd06      	ble.n	8005dea <GUI_MEMDEV_Draw+0x2e>
 8005ddc:	f000 ff82 	bl	8006ce4 <LCD_GetXSizeEx>
 8005de0:	4607      	mov	r7, r0
 8005de2:	4620      	mov	r0, r4
 8005de4:	f000 ff81 	bl	8006cea <LCD_GetYSizeEx>
 8005de8:	e005      	b.n	8005df6 <GUI_MEMDEV_Draw+0x3a>
 8005dea:	f000 ff81 	bl	8006cf0 <LCD_GetVXSizeEx>
 8005dee:	4607      	mov	r7, r0
 8005df0:	4620      	mov	r0, r4
 8005df2:	f000 ff80 	bl	8006cf6 <LCD_GetVYSizeEx>
 8005df6:	4604      	mov	r4, r0
 8005df8:	b325      	cbz	r5, 8005e44 <GUI_MEMDEV_Draw+0x88>
 8005dfa:	a806      	add	r0, sp, #24
 8005dfc:	a907      	add	r1, sp, #28
 8005dfe:	f003 f815 	bl	8008e2c <GUI_GetOrg>
 8005e02:	9b06      	ldr	r3, [sp, #24]
 8005e04:	f9b5 a000 	ldrsh.w	sl, [r5]
 8005e08:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8005e0c:	f9b5 8002 	ldrsh.w	r8, [r5, #2]
 8005e10:	441f      	add	r7, r3
 8005e12:	9b07      	ldr	r3, [sp, #28]
 8005e14:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8005e18:	3f01      	subs	r7, #1
 8005e1a:	4297      	cmp	r7, r2
 8005e1c:	bfd4      	ite	le
 8005e1e:	ebca 0707 	rsble	r7, sl, r7
 8005e22:	ebca 0702 	rsbgt	r7, sl, r2
 8005e26:	441c      	add	r4, r3
 8005e28:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8005e2c:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 8005e30:	3c01      	subs	r4, #1
 8005e32:	4294      	cmp	r4, r2
 8005e34:	bfd4      	ite	le
 8005e36:	ebc8 0404 	rsble	r4, r8, r4
 8005e3a:	ebc8 0402 	rsbgt	r4, r8, r2
 8005e3e:	3701      	adds	r7, #1
 8005e40:	3401      	adds	r4, #1
 8005e42:	e001      	b.n	8005e48 <GUI_MEMDEV_Draw+0x8c>
 8005e44:	46a8      	mov	r8, r5
 8005e46:	46aa      	mov	sl, r5
 8005e48:	b906      	cbnz	r6, 8005e4c <GUI_MEMDEV_Draw+0x90>
 8005e4a:	4266      	negs	r6, r4
 8005e4c:	2f00      	cmp	r7, #0
 8005e4e:	dd52      	ble.n	8005ef6 <GUI_MEMDEV_Draw+0x13a>
 8005e50:	2c00      	cmp	r4, #0
 8005e52:	dd50      	ble.n	8005ef6 <GUI_MEMDEV_Draw+0x13a>
 8005e54:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005e56:	9300      	str	r3, [sp, #0]
 8005e58:	4650      	mov	r0, sl
 8005e5a:	4641      	mov	r1, r8
 8005e5c:	463a      	mov	r2, r7
 8005e5e:	4633      	mov	r3, r6
 8005e60:	f000 fe3c 	bl	8006adc <GUI_MEMDEV_CreateEx>
 8005e64:	4605      	mov	r5, r0
 8005e66:	b920      	cbnz	r0, 8005e72 <GUI_MEMDEV_Draw+0xb6>
 8005e68:	9804      	ldr	r0, [sp, #16]
 8005e6a:	9b03      	ldr	r3, [sp, #12]
 8005e6c:	4798      	blx	r3
 8005e6e:	2001      	movs	r0, #1
 8005e70:	e042      	b.n	8005ef8 <GUI_MEMDEV_Draw+0x13c>
 8005e72:	f7ff ff7d 	bl	8005d70 <GUI_MEMDEV_GetYSize>
 8005e76:	42a0      	cmp	r0, r4
 8005e78:	4606      	mov	r6, r0
 8005e7a:	d006      	beq.n	8005e8a <GUI_MEMDEV_Draw+0xce>
 8005e7c:	f8db 3000 	ldr.w	r3, [fp]
 8005e80:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005e82:	b110      	cbz	r0, 8005e8a <GUI_MEMDEV_Draw+0xce>
 8005e84:	2132      	movs	r1, #50	; 0x32
 8005e86:	f7fd ff37 	bl	8003cf8 <WM__SendMessageNoPara>
 8005e8a:	4628      	mov	r0, r5
 8005e8c:	f000 fe62 	bl	8006b54 <GUI_MEMDEV_Select>
 8005e90:	4273      	negs	r3, r6
 8005e92:	9305      	str	r3, [sp, #20]
 8005e94:	46a1      	mov	r9, r4
 8005e96:	2700      	movs	r7, #0
 8005e98:	45b1      	cmp	r9, r6
 8005e9a:	da03      	bge.n	8005ea4 <GUI_MEMDEV_Draw+0xe8>
 8005e9c:	4628      	mov	r0, r5
 8005e9e:	4649      	mov	r1, r9
 8005ea0:	f005 fef0 	bl	800bc84 <GUI_MEMDEV_ReduceYSize>
 8005ea4:	b147      	cbz	r7, 8005eb8 <GUI_MEMDEV_Draw+0xfc>
 8005ea6:	4628      	mov	r0, r5
 8005ea8:	4651      	mov	r1, sl
 8005eaa:	eb07 0208 	add.w	r2, r7, r8
 8005eae:	f7ff ff35 	bl	8005d1c <GUI_MEMDEV_SetOrg>
 8005eb2:	4628      	mov	r0, r5
 8005eb4:	f005 fefc 	bl	800bcb0 <GUI_MEMDEV_Clear>
 8005eb8:	9b03      	ldr	r3, [sp, #12]
 8005eba:	9804      	ldr	r0, [sp, #16]
 8005ebc:	4798      	blx	r3
 8005ebe:	4b12      	ldr	r3, [pc, #72]	; (8005f08 <GUI_MEMDEV_Draw+0x14c>)
 8005ec0:	681b      	ldr	r3, [r3, #0]
 8005ec2:	b10b      	cbz	r3, 8005ec8 <GUI_MEMDEV_Draw+0x10c>
 8005ec4:	2000      	movs	r0, #0
 8005ec6:	4798      	blx	r3
 8005ec8:	4628      	mov	r0, r5
 8005eca:	f000 febb 	bl	8006c44 <GUI_MEMDEV_CopyToLCD>
 8005ece:	4437      	add	r7, r6
 8005ed0:	9b05      	ldr	r3, [sp, #20]
 8005ed2:	42a7      	cmp	r7, r4
 8005ed4:	4499      	add	r9, r3
 8005ed6:	dbdf      	blt.n	8005e98 <GUI_MEMDEV_Draw+0xdc>
 8005ed8:	4628      	mov	r0, r5
 8005eda:	f000 fddd 	bl	8006a98 <GUI_MEMDEV_Delete>
 8005ede:	2000      	movs	r0, #0
 8005ee0:	f000 fe38 	bl	8006b54 <GUI_MEMDEV_Select>
 8005ee4:	42a6      	cmp	r6, r4
 8005ee6:	d006      	beq.n	8005ef6 <GUI_MEMDEV_Draw+0x13a>
 8005ee8:	f8db 3000 	ldr.w	r3, [fp]
 8005eec:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005eee:	b110      	cbz	r0, 8005ef6 <GUI_MEMDEV_Draw+0x13a>
 8005ef0:	2133      	movs	r1, #51	; 0x33
 8005ef2:	f7fd ff01 	bl	8003cf8 <WM__SendMessageNoPara>
 8005ef6:	2000      	movs	r0, #0
 8005ef8:	b009      	add	sp, #36	; 0x24
 8005efa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005efe:	bf00      	nop
 8005f00:	200000b0 	.word	0x200000b0
 8005f04:	20000484 	.word	0x20000484
 8005f08:	200002d8 	.word	0x200002d8

08005f0c <_GetDevData>:
 8005f0c:	4802      	ldr	r0, [pc, #8]	; (8005f18 <_GetDevData+0xc>)
 8005f0e:	2901      	cmp	r1, #1
 8005f10:	bf18      	it	ne
 8005f12:	2000      	movne	r0, #0
 8005f14:	4770      	bx	lr
 8005f16:	bf00      	nop
 8005f18:	0800d5b0 	.word	0x0800d5b0

08005f1c <_GetDevFunc>:
 8005f1c:	4802      	ldr	r0, [pc, #8]	; (8005f28 <_GetDevFunc+0xc>)
 8005f1e:	2916      	cmp	r1, #22
 8005f20:	bf18      	it	ne
 8005f22:	2000      	movne	r0, #0
 8005f24:	4770      	bx	lr
 8005f26:	bf00      	nop
 8005f28:	0800b895 	.word	0x0800b895

08005f2c <_GetDevProp>:
 8005f2c:	2908      	cmp	r1, #8
 8005f2e:	bf0c      	ite	eq
 8005f30:	2020      	moveq	r0, #32
 8005f32:	2000      	movne	r0, #0
 8005f34:	4770      	bx	lr

08005f36 <_SetOrg>:
 8005f36:	b508      	push	{r3, lr}
 8005f38:	6800      	ldr	r0, [r0, #0]
 8005f3a:	68c3      	ldr	r3, [r0, #12]
 8005f3c:	6a1b      	ldr	r3, [r3, #32]
 8005f3e:	4798      	blx	r3
 8005f40:	bd08      	pop	{r3, pc}

08005f42 <_GetRect>:
 8005f42:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005f44:	6880      	ldr	r0, [r0, #8]
 8005f46:	460c      	mov	r4, r1
 8005f48:	f003 fc7c 	bl	8009844 <GUI_ALLOC_LockH>
 8005f4c:	4603      	mov	r3, r0
 8005f4e:	a802      	add	r0, sp, #8
 8005f50:	8899      	ldrh	r1, [r3, #4]
 8005f52:	88da      	ldrh	r2, [r3, #6]
 8005f54:	891d      	ldrh	r5, [r3, #8]
 8005f56:	f840 3d04 	str.w	r3, [r0, #-4]!
 8005f5a:	895b      	ldrh	r3, [r3, #10]
 8005f5c:	8021      	strh	r1, [r4, #0]
 8005f5e:	8062      	strh	r2, [r4, #2]
 8005f60:	4429      	add	r1, r5
 8005f62:	441a      	add	r2, r3
 8005f64:	3901      	subs	r1, #1
 8005f66:	3a01      	subs	r2, #1
 8005f68:	80a1      	strh	r1, [r4, #4]
 8005f6a:	80e2      	strh	r2, [r4, #6]
 8005f6c:	f003 fc78 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005f70:	b003      	add	sp, #12
 8005f72:	bd30      	pop	{r4, r5, pc}

08005f74 <_XY2PTR>:
 8005f74:	4b0e      	ldr	r3, [pc, #56]	; (8005fb0 <_XY2PTR+0x3c>)
 8005f76:	681b      	ldr	r3, [r3, #0]
 8005f78:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005f7a:	4605      	mov	r5, r0
 8005f7c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8005f7e:	460e      	mov	r6, r1
 8005f80:	f003 fc60 	bl	8009844 <GUI_ALLOC_LockH>
 8005f84:	4603      	mov	r3, r0
 8005f86:	a802      	add	r0, sp, #8
 8005f88:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 8005f8c:	f840 3d04 	str.w	r3, [r0, #-4]!
 8005f90:	f103 0118 	add.w	r1, r3, #24
 8005f94:	1b36      	subs	r6, r6, r4
 8005f96:	68dc      	ldr	r4, [r3, #12]
 8005f98:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8005f9c:	fb04 1406 	mla	r4, r4, r6, r1
 8005fa0:	1aed      	subs	r5, r5, r3
 8005fa2:	f003 fc5d 	bl	8009860 <GUI_ALLOC_UnlockH>
 8005fa6:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 8005faa:	4620      	mov	r0, r4
 8005fac:	b002      	add	sp, #8
 8005fae:	bd70      	pop	{r4, r5, r6, pc}
 8005fb0:	200000b0 	.word	0x200000b0

08005fb4 <_GetPixelIndex>:
 8005fb4:	b508      	push	{r3, lr}
 8005fb6:	4608      	mov	r0, r1
 8005fb8:	4611      	mov	r1, r2
 8005fba:	f7ff ffdb 	bl	8005f74 <_XY2PTR>
 8005fbe:	6800      	ldr	r0, [r0, #0]
 8005fc0:	bd08      	pop	{r3, pc}
	...

08005fc4 <_XorPixel>:
 8005fc4:	4b15      	ldr	r3, [pc, #84]	; (800601c <_XorPixel+0x58>)
 8005fc6:	681b      	ldr	r3, [r3, #0]
 8005fc8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005fca:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8005fcc:	4615      	mov	r5, r2
 8005fce:	460e      	mov	r6, r1
 8005fd0:	f003 fc38 	bl	8009844 <GUI_ALLOC_LockH>
 8005fd4:	4629      	mov	r1, r5
 8005fd6:	9000      	str	r0, [sp, #0]
 8005fd8:	4630      	mov	r0, r6
 8005fda:	f7ff ffcb 	bl	8005f74 <_XY2PTR>
 8005fde:	9b00      	ldr	r3, [sp, #0]
 8005fe0:	681b      	ldr	r3, [r3, #0]
 8005fe2:	691b      	ldr	r3, [r3, #16]
 8005fe4:	4604      	mov	r4, r0
 8005fe6:	689b      	ldr	r3, [r3, #8]
 8005fe8:	4798      	blx	r3
 8005fea:	6823      	ldr	r3, [r4, #0]
 8005fec:	4058      	eors	r0, r3
 8005fee:	9b00      	ldr	r3, [sp, #0]
 8005ff0:	6020      	str	r0, [r4, #0]
 8005ff2:	6958      	ldr	r0, [r3, #20]
 8005ff4:	b160      	cbz	r0, 8006010 <_XorPixel+0x4c>
 8005ff6:	f003 fc25 	bl	8009844 <GUI_ALLOC_LockH>
 8005ffa:	ac02      	add	r4, sp, #8
 8005ffc:	6883      	ldr	r3, [r0, #8]
 8005ffe:	f844 0d04 	str.w	r0, [r4, #-4]!
 8006002:	681b      	ldr	r3, [r3, #0]
 8006004:	4631      	mov	r1, r6
 8006006:	462a      	mov	r2, r5
 8006008:	4798      	blx	r3
 800600a:	4620      	mov	r0, r4
 800600c:	f003 fc28 	bl	8009860 <GUI_ALLOC_UnlockH>
 8006010:	4668      	mov	r0, sp
 8006012:	f003 fc25 	bl	8009860 <GUI_ALLOC_UnlockH>
 8006016:	b002      	add	sp, #8
 8006018:	bd70      	pop	{r4, r5, r6, pc}
 800601a:	bf00      	nop
 800601c:	200000b0 	.word	0x200000b0

08006020 <_SetPixelIndex>:
 8006020:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006022:	461c      	mov	r4, r3
 8006024:	4b10      	ldr	r3, [pc, #64]	; (8006068 <_SetPixelIndex+0x48>)
 8006026:	681b      	ldr	r3, [r3, #0]
 8006028:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800602a:	460e      	mov	r6, r1
 800602c:	4615      	mov	r5, r2
 800602e:	f003 fc09 	bl	8009844 <GUI_ALLOC_LockH>
 8006032:	4629      	mov	r1, r5
 8006034:	9000      	str	r0, [sp, #0]
 8006036:	4630      	mov	r0, r6
 8006038:	f7ff ff9c 	bl	8005f74 <_XY2PTR>
 800603c:	9b00      	ldr	r3, [sp, #0]
 800603e:	6004      	str	r4, [r0, #0]
 8006040:	6958      	ldr	r0, [r3, #20]
 8006042:	b160      	cbz	r0, 800605e <_SetPixelIndex+0x3e>
 8006044:	f003 fbfe 	bl	8009844 <GUI_ALLOC_LockH>
 8006048:	ac02      	add	r4, sp, #8
 800604a:	6883      	ldr	r3, [r0, #8]
 800604c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8006050:	681b      	ldr	r3, [r3, #0]
 8006052:	4631      	mov	r1, r6
 8006054:	462a      	mov	r2, r5
 8006056:	4798      	blx	r3
 8006058:	4620      	mov	r0, r4
 800605a:	f003 fc01 	bl	8009860 <GUI_ALLOC_UnlockH>
 800605e:	4668      	mov	r0, sp
 8006060:	f003 fbfe 	bl	8009860 <GUI_ALLOC_UnlockH>
 8006064:	b002      	add	sp, #8
 8006066:	bd70      	pop	{r4, r5, r6, pc}
 8006068:	200000b0 	.word	0x200000b0

0800606c <_DrawVLine>:
 800606c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006070:	4d2c      	ldr	r5, [pc, #176]	; (8006124 <_DrawVLine+0xb8>)
 8006072:	461e      	mov	r6, r3
 8006074:	682b      	ldr	r3, [r5, #0]
 8006076:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006078:	460f      	mov	r7, r1
 800607a:	4614      	mov	r4, r2
 800607c:	f003 fbe2 	bl	8009844 <GUI_ALLOC_LockH>
 8006080:	9000      	str	r0, [sp, #0]
 8006082:	6940      	ldr	r0, [r0, #20]
 8006084:	46a9      	mov	r9, r5
 8006086:	b108      	cbz	r0, 800608c <_DrawVLine+0x20>
 8006088:	f003 fbdc 	bl	8009844 <GUI_ALLOC_LockH>
 800608c:	9001      	str	r0, [sp, #4]
 800608e:	4621      	mov	r1, r4
 8006090:	4638      	mov	r0, r7
 8006092:	f7ff ff6f 	bl	8005f74 <_XY2PTR>
 8006096:	f8d9 2000 	ldr.w	r2, [r9]
 800609a:	9b00      	ldr	r3, [sp, #0]
 800609c:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 800609e:	7c12      	ldrb	r2, [r2, #16]
 80060a0:	f8d3 800c 	ldr.w	r8, [r3, #12]
 80060a4:	f8d1 9000 	ldr.w	r9, [r1]
 80060a8:	07d2      	lsls	r2, r2, #31
 80060aa:	4605      	mov	r5, r0
 80060ac:	d51f      	bpl.n	80060ee <_DrawVLine+0x82>
 80060ae:	681b      	ldr	r3, [r3, #0]
 80060b0:	691b      	ldr	r3, [r3, #16]
 80060b2:	689b      	ldr	r3, [r3, #8]
 80060b4:	4798      	blx	r3
 80060b6:	4680      	mov	r8, r0
 80060b8:	9801      	ldr	r0, [sp, #4]
 80060ba:	b128      	cbz	r0, 80060c8 <_DrawVLine+0x5c>
 80060bc:	6882      	ldr	r2, [r0, #8]
 80060be:	4639      	mov	r1, r7
 80060c0:	f8d2 c000 	ldr.w	ip, [r2]
 80060c4:	4622      	mov	r2, r4
 80060c6:	47e0      	blx	ip
 80060c8:	682b      	ldr	r3, [r5, #0]
 80060ca:	ea83 0308 	eor.w	r3, r3, r8
 80060ce:	602b      	str	r3, [r5, #0]
 80060d0:	9b00      	ldr	r3, [sp, #0]
 80060d2:	3401      	adds	r4, #1
 80060d4:	68db      	ldr	r3, [r3, #12]
 80060d6:	42b4      	cmp	r4, r6
 80060d8:	441d      	add	r5, r3
 80060da:	dded      	ble.n	80060b8 <_DrawVLine+0x4c>
 80060dc:	4668      	mov	r0, sp
 80060de:	f003 fbbf 	bl	8009860 <GUI_ALLOC_UnlockH>
 80060e2:	9b01      	ldr	r3, [sp, #4]
 80060e4:	b1d3      	cbz	r3, 800611c <_DrawVLine+0xb0>
 80060e6:	a801      	add	r0, sp, #4
 80060e8:	f003 fbba 	bl	8009860 <GUI_ALLOC_UnlockH>
 80060ec:	e016      	b.n	800611c <_DrawVLine+0xb0>
 80060ee:	9b01      	ldr	r3, [sp, #4]
 80060f0:	b163      	cbz	r3, 800610c <_DrawVLine+0xa0>
 80060f2:	9801      	ldr	r0, [sp, #4]
 80060f4:	6883      	ldr	r3, [r0, #8]
 80060f6:	4622      	mov	r2, r4
 80060f8:	681b      	ldr	r3, [r3, #0]
 80060fa:	4639      	mov	r1, r7
 80060fc:	3401      	adds	r4, #1
 80060fe:	4798      	blx	r3
 8006100:	42b4      	cmp	r4, r6
 8006102:	f8c5 9000 	str.w	r9, [r5]
 8006106:	4445      	add	r5, r8
 8006108:	ddf3      	ble.n	80060f2 <_DrawVLine+0x86>
 800610a:	e7e7      	b.n	80060dc <_DrawVLine+0x70>
 800610c:	1b34      	subs	r4, r6, r4
 800610e:	3401      	adds	r4, #1
 8006110:	3c01      	subs	r4, #1
 8006112:	f8c5 9000 	str.w	r9, [r5]
 8006116:	4445      	add	r5, r8
 8006118:	d1fa      	bne.n	8006110 <_DrawVLine+0xa4>
 800611a:	e7df      	b.n	80060dc <_DrawVLine+0x70>
 800611c:	b003      	add	sp, #12
 800611e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006122:	bf00      	nop
 8006124:	200000b0 	.word	0x200000b0

08006128 <_FillRect>:
 8006128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800612c:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 80061dc <_FillRect+0xb4>
 8006130:	4614      	mov	r4, r2
 8006132:	f8db 2000 	ldr.w	r2, [fp]
 8006136:	b085      	sub	sp, #20
 8006138:	6e10      	ldr	r0, [r2, #96]	; 0x60
 800613a:	460f      	mov	r7, r1
 800613c:	461d      	mov	r5, r3
 800613e:	f003 fb81 	bl	8009844 <GUI_ALLOC_LockH>
 8006142:	4621      	mov	r1, r4
 8006144:	9002      	str	r0, [sp, #8]
 8006146:	4638      	mov	r0, r7
 8006148:	f7ff ff14 	bl	8005f74 <_XY2PTR>
 800614c:	9a02      	ldr	r2, [sp, #8]
 800614e:	f8db 3000 	ldr.w	r3, [fp]
 8006152:	f8d2 900c 	ldr.w	r9, [r2, #12]
 8006156:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006158:	4606      	mov	r6, r0
 800615a:	6950      	ldr	r0, [r2, #20]
 800615c:	f8d3 a000 	ldr.w	sl, [r3]
 8006160:	1bed      	subs	r5, r5, r7
 8006162:	3501      	adds	r5, #1
 8006164:	b338      	cbz	r0, 80061b6 <_FillRect+0x8e>
 8006166:	f003 fb6d 	bl	8009844 <GUI_ALLOC_LockH>
 800616a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800616c:	f10d 0810 	add.w	r8, sp, #16
 8006170:	1b13      	subs	r3, r2, r4
 8006172:	f848 0d04 	str.w	r0, [r8, #-4]!
 8006176:	3301      	adds	r3, #1
 8006178:	9300      	str	r3, [sp, #0]
 800617a:	4639      	mov	r1, r7
 800617c:	4622      	mov	r2, r4
 800617e:	462b      	mov	r3, r5
 8006180:	f005 fd6a 	bl	800bc58 <GUI_USAGE_AddRect>
 8006184:	4640      	mov	r0, r8
 8006186:	f003 fb6b 	bl	8009860 <GUI_ALLOC_UnlockH>
 800618a:	e014      	b.n	80061b6 <_FillRect+0x8e>
 800618c:	f8db 3000 	ldr.w	r3, [fp]
 8006190:	7c1b      	ldrb	r3, [r3, #16]
 8006192:	07db      	lsls	r3, r3, #31
 8006194:	d513      	bpl.n	80061be <_FillRect+0x96>
 8006196:	9b02      	ldr	r3, [sp, #8]
 8006198:	681b      	ldr	r3, [r3, #0]
 800619a:	691b      	ldr	r3, [r3, #16]
 800619c:	689b      	ldr	r3, [r3, #8]
 800619e:	4798      	blx	r3
 80061a0:	4632      	mov	r2, r6
 80061a2:	462b      	mov	r3, r5
 80061a4:	6811      	ldr	r1, [r2, #0]
 80061a6:	3b01      	subs	r3, #1
 80061a8:	ea81 0100 	eor.w	r1, r1, r0
 80061ac:	f842 1b04 	str.w	r1, [r2], #4
 80061b0:	d1f8      	bne.n	80061a4 <_FillRect+0x7c>
 80061b2:	444e      	add	r6, r9
 80061b4:	3401      	adds	r4, #1
 80061b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80061b8:	429c      	cmp	r4, r3
 80061ba:	dde7      	ble.n	800618c <_FillRect+0x64>
 80061bc:	e008      	b.n	80061d0 <_FillRect+0xa8>
 80061be:	2d00      	cmp	r5, #0
 80061c0:	ddf7      	ble.n	80061b2 <_FillRect+0x8a>
 80061c2:	462b      	mov	r3, r5
 80061c4:	4632      	mov	r2, r6
 80061c6:	3b01      	subs	r3, #1
 80061c8:	f842 ab04 	str.w	sl, [r2], #4
 80061cc:	d1fb      	bne.n	80061c6 <_FillRect+0x9e>
 80061ce:	e7f0      	b.n	80061b2 <_FillRect+0x8a>
 80061d0:	a802      	add	r0, sp, #8
 80061d2:	f003 fb45 	bl	8009860 <GUI_ALLOC_UnlockH>
 80061d6:	b005      	add	sp, #20
 80061d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80061dc:	200000b0 	.word	0x200000b0

080061e0 <_DrawHLine>:
 80061e0:	b507      	push	{r0, r1, r2, lr}
 80061e2:	9200      	str	r2, [sp, #0]
 80061e4:	f7ff ffa0 	bl	8006128 <_FillRect>
 80061e8:	b003      	add	sp, #12
 80061ea:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080061f0 <_DrawBitmap>:
 80061f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80061f4:	4c90      	ldr	r4, [pc, #576]	; (8006438 <_DrawBitmap+0x248>)
 80061f6:	b091      	sub	sp, #68	; 0x44
 80061f8:	469b      	mov	fp, r3
 80061fa:	6823      	ldr	r3, [r4, #0]
 80061fc:	9008      	str	r0, [sp, #32]
 80061fe:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006200:	9207      	str	r2, [sp, #28]
 8006202:	460e      	mov	r6, r1
 8006204:	f8dd a074 	ldr.w	sl, [sp, #116]	; 0x74
 8006208:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 800620a:	2800      	cmp	r0, #0
 800620c:	f000 838b 	beq.w	8006926 <_DrawBitmap+0x736>
 8006210:	f003 fb18 	bl	8009844 <GUI_ALLOC_LockH>
 8006214:	900e      	str	r0, [sp, #56]	; 0x38
 8006216:	6940      	ldr	r0, [r0, #20]
 8006218:	b108      	cbz	r0, 800621e <_DrawBitmap+0x2e>
 800621a:	f003 fb13 	bl	8009844 <GUI_ALLOC_LockH>
 800621e:	900f      	str	r0, [sp, #60]	; 0x3c
 8006220:	a810      	add	r0, sp, #64	; 0x40
 8006222:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 8006226:	68db      	ldr	r3, [r3, #12]
 8006228:	930a      	str	r3, [sp, #40]	; 0x28
 800622a:	f003 fb19 	bl	8009860 <GUI_ALLOC_UnlockH>
 800622e:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006230:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8006232:	4437      	add	r7, r6
 8006234:	9704      	str	r7, [sp, #16]
 8006236:	b150      	cbz	r0, 800624e <_DrawBitmap+0x5e>
 8006238:	6823      	ldr	r3, [r4, #0]
 800623a:	7c1b      	ldrb	r3, [r3, #16]
 800623c:	079c      	lsls	r4, r3, #30
 800623e:	d406      	bmi.n	800624e <_DrawBitmap+0x5e>
 8006240:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006242:	9700      	str	r7, [sp, #0]
 8006244:	9904      	ldr	r1, [sp, #16]
 8006246:	9a07      	ldr	r2, [sp, #28]
 8006248:	465b      	mov	r3, fp
 800624a:	f005 fd05 	bl	800bc58 <GUI_USAGE_AddRect>
 800624e:	9804      	ldr	r0, [sp, #16]
 8006250:	9907      	ldr	r1, [sp, #28]
 8006252:	f7ff fe8f 	bl	8005f74 <_XY2PTR>
 8006256:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006258:	2f17      	cmp	r7, #23
 800625a:	4606      	mov	r6, r0
 800625c:	dd64      	ble.n	8006328 <_DrawBitmap+0x138>
 800625e:	ea4f 078b 	mov.w	r7, fp, lsl #2
 8006262:	9706      	str	r7, [sp, #24]
 8006264:	f04f 0900 	mov.w	r9, #0
 8006268:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800626a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800626c:	45b9      	cmp	r9, r7
 800626e:	da57      	bge.n	8006320 <_DrawBitmap+0x130>
 8006270:	b130      	cbz	r0, 8006280 <_DrawBitmap+0x90>
 8006272:	6883      	ldr	r3, [r0, #8]
 8006274:	9a07      	ldr	r2, [sp, #28]
 8006276:	685c      	ldr	r4, [r3, #4]
 8006278:	9904      	ldr	r1, [sp, #16]
 800627a:	444a      	add	r2, r9
 800627c:	465b      	mov	r3, fp
 800627e:	47a0      	blx	r4
 8006280:	9f08      	ldr	r7, [sp, #32]
 8006282:	693b      	ldr	r3, [r7, #16]
 8006284:	68d8      	ldr	r0, [r3, #12]
 8006286:	b130      	cbz	r0, 8006296 <_DrawBitmap+0xa6>
 8006288:	4b6c      	ldr	r3, [pc, #432]	; (800643c <_DrawBitmap+0x24c>)
 800628a:	9a06      	ldr	r2, [sp, #24]
 800628c:	681b      	ldr	r3, [r3, #0]
 800628e:	4630      	mov	r0, r6
 8006290:	4651      	mov	r1, sl
 8006292:	4798      	blx	r3
 8006294:	e03d      	b.n	8006312 <_DrawBitmap+0x122>
 8006296:	685b      	ldr	r3, [r3, #4]
 8006298:	4798      	blx	r3
 800629a:	0e00      	lsrs	r0, r0, #24
 800629c:	9005      	str	r0, [sp, #20]
 800629e:	4635      	mov	r5, r6
 80062a0:	465f      	mov	r7, fp
 80062a2:	4654      	mov	r4, sl
 80062a4:	463b      	mov	r3, r7
 80062a6:	4622      	mov	r2, r4
 80062a8:	f04f 0800 	mov.w	r8, #0
 80062ac:	f852 1b04 	ldr.w	r1, [r2], #4
 80062b0:	9805      	ldr	r0, [sp, #20]
 80062b2:	0e09      	lsrs	r1, r1, #24
 80062b4:	4281      	cmp	r1, r0
 80062b6:	9805      	ldr	r0, [sp, #20]
 80062b8:	bf08      	it	eq
 80062ba:	f108 0801 	addeq.w	r8, r8, #1
 80062be:	4281      	cmp	r1, r0
 80062c0:	f103 33ff 	add.w	r3, r3, #4294967295
 80062c4:	d012      	beq.n	80062ec <_DrawBitmap+0xfc>
 80062c6:	f1b8 0f00 	cmp.w	r8, #0
 80062ca:	d012      	beq.n	80062f2 <_DrawBitmap+0x102>
 80062cc:	4a5b      	ldr	r2, [pc, #364]	; (800643c <_DrawBitmap+0x24c>)
 80062ce:	ea4f 0388 	mov.w	r3, r8, lsl #2
 80062d2:	f8d2 c000 	ldr.w	ip, [r2]
 80062d6:	9303      	str	r3, [sp, #12]
 80062d8:	4628      	mov	r0, r5
 80062da:	4621      	mov	r1, r4
 80062dc:	461a      	mov	r2, r3
 80062de:	47e0      	blx	ip
 80062e0:	9b03      	ldr	r3, [sp, #12]
 80062e2:	ebc8 0707 	rsb	r7, r8, r7
 80062e6:	441d      	add	r5, r3
 80062e8:	441c      	add	r4, r3
 80062ea:	e010      	b.n	800630e <_DrawBitmap+0x11e>
 80062ec:	2b00      	cmp	r3, #0
 80062ee:	d1dd      	bne.n	80062ac <_DrawBitmap+0xbc>
 80062f0:	e7e9      	b.n	80062c6 <_DrawBitmap+0xd6>
 80062f2:	6820      	ldr	r0, [r4, #0]
 80062f4:	0e02      	lsrs	r2, r0, #24
 80062f6:	2aff      	cmp	r2, #255	; 0xff
 80062f8:	d006      	beq.n	8006308 <_DrawBitmap+0x118>
 80062fa:	4b51      	ldr	r3, [pc, #324]	; (8006440 <_DrawBitmap+0x250>)
 80062fc:	6829      	ldr	r1, [r5, #0]
 80062fe:	681b      	ldr	r3, [r3, #0]
 8006300:	43d2      	mvns	r2, r2
 8006302:	b2d2      	uxtb	r2, r2
 8006304:	4798      	blx	r3
 8006306:	6028      	str	r0, [r5, #0]
 8006308:	3504      	adds	r5, #4
 800630a:	3404      	adds	r4, #4
 800630c:	3f01      	subs	r7, #1
 800630e:	2f00      	cmp	r7, #0
 8006310:	d1c8      	bne.n	80062a4 <_DrawBitmap+0xb4>
 8006312:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8006314:	44ba      	add	sl, r7
 8006316:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8006318:	f109 0901 	add.w	r9, r9, #1
 800631c:	443e      	add	r6, r7
 800631e:	e7a3      	b.n	8006268 <_DrawBitmap+0x78>
 8006320:	2800      	cmp	r0, #0
 8006322:	f040 82fd 	bne.w	8006920 <_DrawBitmap+0x730>
 8006326:	e2fe      	b.n	8006926 <_DrawBitmap+0x736>
 8006328:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800632a:	2f10      	cmp	r7, #16
 800632c:	d134      	bne.n	8006398 <_DrawBitmap+0x1a8>
 800632e:	1f06      	subs	r6, r0, #4
 8006330:	2500      	movs	r5, #0
 8006332:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006334:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8006336:	42bd      	cmp	r5, r7
 8006338:	f280 80a3 	bge.w	8006482 <_DrawBitmap+0x292>
 800633c:	9f07      	ldr	r7, [sp, #28]
 800633e:	442f      	add	r7, r5
 8006340:	b13c      	cbz	r4, 8006352 <_DrawBitmap+0x162>
 8006342:	68a3      	ldr	r3, [r4, #8]
 8006344:	9904      	ldr	r1, [sp, #16]
 8006346:	f8d3 c004 	ldr.w	ip, [r3, #4]
 800634a:	4620      	mov	r0, r4
 800634c:	463a      	mov	r2, r7
 800634e:	465b      	mov	r3, fp
 8006350:	47e0      	blx	ip
 8006352:	f1aa 0902 	sub.w	r9, sl, #2
 8006356:	9605      	str	r6, [sp, #20]
 8006358:	46d8      	mov	r8, fp
 800635a:	9808      	ldr	r0, [sp, #32]
 800635c:	9904      	ldr	r1, [sp, #16]
 800635e:	6903      	ldr	r3, [r0, #16]
 8006360:	f839 0f02 	ldrh.w	r0, [r9, #2]!
 8006364:	685b      	ldr	r3, [r3, #4]
 8006366:	4459      	add	r1, fp
 8006368:	ebc8 0101 	rsb	r1, r8, r1
 800636c:	9103      	str	r1, [sp, #12]
 800636e:	4798      	blx	r3
 8006370:	9b05      	ldr	r3, [sp, #20]
 8006372:	9903      	ldr	r1, [sp, #12]
 8006374:	f843 0f04 	str.w	r0, [r3, #4]!
 8006378:	9305      	str	r3, [sp, #20]
 800637a:	b124      	cbz	r4, 8006386 <_DrawBitmap+0x196>
 800637c:	68a3      	ldr	r3, [r4, #8]
 800637e:	4620      	mov	r0, r4
 8006380:	681b      	ldr	r3, [r3, #0]
 8006382:	463a      	mov	r2, r7
 8006384:	4798      	blx	r3
 8006386:	f1b8 0801 	subs.w	r8, r8, #1
 800638a:	d1e6      	bne.n	800635a <_DrawBitmap+0x16a>
 800638c:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800638e:	44ba      	add	sl, r7
 8006390:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8006392:	3501      	adds	r5, #1
 8006394:	443e      	add	r6, r7
 8006396:	e7cc      	b.n	8006332 <_DrawBitmap+0x142>
 8006398:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800639a:	2f08      	cmp	r7, #8
 800639c:	f100 0604 	add.w	r6, r0, #4
 80063a0:	d173      	bne.n	800648a <_DrawBitmap+0x29a>
 80063a2:	9f07      	ldr	r7, [sp, #28]
 80063a4:	9907      	ldr	r1, [sp, #28]
 80063a6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80063a8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80063aa:	1a7b      	subs	r3, r7, r1
 80063ac:	4293      	cmp	r3, r2
 80063ae:	f1a6 0004 	sub.w	r0, r6, #4
 80063b2:	da66      	bge.n	8006482 <_DrawBitmap+0x292>
 80063b4:	4b20      	ldr	r3, [pc, #128]	; (8006438 <_DrawBitmap+0x248>)
 80063b6:	681b      	ldr	r3, [r3, #0]
 80063b8:	7c1b      	ldrb	r3, [r3, #16]
 80063ba:	b36d      	cbz	r5, 8006418 <_DrawBitmap+0x228>
 80063bc:	f013 0303 	ands.w	r3, r3, #3
 80063c0:	d005      	beq.n	80063ce <_DrawBitmap+0x1de>
 80063c2:	2b02      	cmp	r3, #2
 80063c4:	d157      	bne.n	8006476 <_DrawBitmap+0x286>
 80063c6:	46b1      	mov	r9, r6
 80063c8:	f8dd 8010 	ldr.w	r8, [sp, #16]
 80063cc:	e01c      	b.n	8006408 <_DrawBitmap+0x218>
 80063ce:	f81a 2003 	ldrb.w	r2, [sl, r3]
 80063d2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80063d6:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 80063da:	3301      	adds	r3, #1
 80063dc:	455b      	cmp	r3, fp
 80063de:	d1f6      	bne.n	80063ce <_DrawBitmap+0x1de>
 80063e0:	e049      	b.n	8006476 <_DrawBitmap+0x286>
 80063e2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80063e6:	f849 3c04 	str.w	r3, [r9, #-4]
 80063ea:	b12c      	cbz	r4, 80063f8 <_DrawBitmap+0x208>
 80063ec:	68a3      	ldr	r3, [r4, #8]
 80063ee:	4620      	mov	r0, r4
 80063f0:	681b      	ldr	r3, [r3, #0]
 80063f2:	4641      	mov	r1, r8
 80063f4:	463a      	mov	r2, r7
 80063f6:	4798      	blx	r3
 80063f8:	9b04      	ldr	r3, [sp, #16]
 80063fa:	f108 0801 	add.w	r8, r8, #1
 80063fe:	445b      	add	r3, fp
 8006400:	4543      	cmp	r3, r8
 8006402:	f109 0904 	add.w	r9, r9, #4
 8006406:	d036      	beq.n	8006476 <_DrawBitmap+0x286>
 8006408:	9804      	ldr	r0, [sp, #16]
 800640a:	ebc0 030a 	rsb	r3, r0, sl
 800640e:	f813 3008 	ldrb.w	r3, [r3, r8]
 8006412:	2b00      	cmp	r3, #0
 8006414:	d0f0      	beq.n	80063f8 <_DrawBitmap+0x208>
 8006416:	e7e4      	b.n	80063e2 <_DrawBitmap+0x1f2>
 8006418:	f013 0303 	ands.w	r3, r3, #3
 800641c:	d005      	beq.n	800642a <_DrawBitmap+0x23a>
 800641e:	2b02      	cmp	r3, #2
 8006420:	d129      	bne.n	8006476 <_DrawBitmap+0x286>
 8006422:	46b1      	mov	r9, r6
 8006424:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8006428:	e01d      	b.n	8006466 <_DrawBitmap+0x276>
 800642a:	4b04      	ldr	r3, [pc, #16]	; (800643c <_DrawBitmap+0x24c>)
 800642c:	4651      	mov	r1, sl
 800642e:	681b      	ldr	r3, [r3, #0]
 8006430:	465a      	mov	r2, fp
 8006432:	4798      	blx	r3
 8006434:	e01f      	b.n	8006476 <_DrawBitmap+0x286>
 8006436:	bf00      	nop
 8006438:	200000b0 	.word	0x200000b0
 800643c:	200000a0 	.word	0x200000a0
 8006440:	200000a4 	.word	0x200000a4
 8006444:	f849 3c04 	str.w	r3, [r9, #-4]
 8006448:	b12c      	cbz	r4, 8006456 <_DrawBitmap+0x266>
 800644a:	68a3      	ldr	r3, [r4, #8]
 800644c:	4620      	mov	r0, r4
 800644e:	681b      	ldr	r3, [r3, #0]
 8006450:	4641      	mov	r1, r8
 8006452:	463a      	mov	r2, r7
 8006454:	4798      	blx	r3
 8006456:	9b04      	ldr	r3, [sp, #16]
 8006458:	f108 0801 	add.w	r8, r8, #1
 800645c:	445b      	add	r3, fp
 800645e:	4543      	cmp	r3, r8
 8006460:	f109 0904 	add.w	r9, r9, #4
 8006464:	d007      	beq.n	8006476 <_DrawBitmap+0x286>
 8006466:	9904      	ldr	r1, [sp, #16]
 8006468:	ebc1 030a 	rsb	r3, r1, sl
 800646c:	f813 3008 	ldrb.w	r3, [r3, r8]
 8006470:	2b00      	cmp	r3, #0
 8006472:	d0f0      	beq.n	8006456 <_DrawBitmap+0x266>
 8006474:	e7e6      	b.n	8006444 <_DrawBitmap+0x254>
 8006476:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8006478:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800647a:	4492      	add	sl, r2
 800647c:	3701      	adds	r7, #1
 800647e:	441e      	add	r6, r3
 8006480:	e790      	b.n	80063a4 <_DrawBitmap+0x1b4>
 8006482:	2c00      	cmp	r4, #0
 8006484:	f040 824c 	bne.w	8006920 <_DrawBitmap+0x730>
 8006488:	e24d      	b.n	8006926 <_DrawBitmap+0x736>
 800648a:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800648c:	4bb2      	ldr	r3, [pc, #712]	; (8006758 <_DrawBitmap+0x568>)
 800648e:	9608      	str	r6, [sp, #32]
 8006490:	007f      	lsls	r7, r7, #1
 8006492:	970c      	str	r7, [sp, #48]	; 0x30
 8006494:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006496:	00bf      	lsls	r7, r7, #2
 8006498:	970d      	str	r7, [sp, #52]	; 0x34
 800649a:	9f07      	ldr	r7, [sp, #28]
 800649c:	9705      	str	r7, [sp, #20]
 800649e:	2d00      	cmp	r5, #0
 80064a0:	bf08      	it	eq
 80064a2:	461d      	moveq	r5, r3
 80064a4:	9f08      	ldr	r7, [sp, #32]
 80064a6:	9807      	ldr	r0, [sp, #28]
 80064a8:	1f3c      	subs	r4, r7, #4
 80064aa:	9f05      	ldr	r7, [sp, #20]
 80064ac:	1a3b      	subs	r3, r7, r0
 80064ae:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80064b0:	42bb      	cmp	r3, r7
 80064b2:	f280 8233 	bge.w	800691c <_DrawBitmap+0x72c>
 80064b6:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80064b8:	2f02      	cmp	r7, #2
 80064ba:	f000 80ad 	beq.w	8006618 <_DrawBitmap+0x428>
 80064be:	2f04      	cmp	r7, #4
 80064c0:	f000 8150 	beq.w	8006764 <_DrawBitmap+0x574>
 80064c4:	2f01      	cmp	r7, #1
 80064c6:	f040 821f 	bne.w	8006908 <_DrawBitmap+0x718>
 80064ca:	f8df 9294 	ldr.w	r9, [pc, #660]	; 8006760 <_DrawBitmap+0x570>
 80064ce:	f8d9 3000 	ldr.w	r3, [r9]
 80064d2:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80064d4:	f003 f9b6 	bl	8009844 <GUI_ALLOC_LockH>
 80064d8:	f89a 3000 	ldrb.w	r3, [sl]
 80064dc:	4a9f      	ldr	r2, [pc, #636]	; (800675c <_DrawBitmap+0x56c>)
 80064de:	991e      	ldr	r1, [sp, #120]	; 0x78
 80064e0:	5cd6      	ldrb	r6, [r2, r3]
 80064e2:	f8d9 3000 	ldr.w	r3, [r9]
 80064e6:	900e      	str	r0, [sp, #56]	; 0x38
 80064e8:	7c1b      	ldrb	r3, [r3, #16]
 80064ea:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 80064ee:	f003 0303 	and.w	r3, r3, #3
 80064f2:	2b02      	cmp	r3, #2
 80064f4:	465f      	mov	r7, fp
 80064f6:	f1c1 0808 	rsb	r8, r1, #8
 80064fa:	fa46 f601 	asr.w	r6, r6, r1
 80064fe:	d020      	beq.n	8006542 <_DrawBitmap+0x352>
 8006500:	2b03      	cmp	r3, #3
 8006502:	d061      	beq.n	80065c8 <_DrawBitmap+0x3d8>
 8006504:	2b01      	cmp	r3, #1
 8006506:	d05f      	beq.n	80065c8 <_DrawBitmap+0x3d8>
 8006508:	4652      	mov	r2, sl
 800650a:	4547      	cmp	r7, r8
 800650c:	bf38      	it	cc
 800650e:	46b8      	movcc	r8, r7
 8006510:	ebc8 0707 	rsb	r7, r8, r7
 8006514:	4643      	mov	r3, r8
 8006516:	4621      	mov	r1, r4
 8006518:	f006 0001 	and.w	r0, r6, #1
 800651c:	3b01      	subs	r3, #1
 800651e:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8006522:	f841 0b04 	str.w	r0, [r1], #4
 8006526:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800652a:	d1f5      	bne.n	8006518 <_DrawBitmap+0x328>
 800652c:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8006530:	2f00      	cmp	r7, #0
 8006532:	d06d      	beq.n	8006610 <_DrawBitmap+0x420>
 8006534:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8006538:	4988      	ldr	r1, [pc, #544]	; (800675c <_DrawBitmap+0x56c>)
 800653a:	f04f 0808 	mov.w	r8, #8
 800653e:	5cce      	ldrb	r6, [r1, r3]
 8006540:	e7e3      	b.n	800650a <_DrawBitmap+0x31a>
 8006542:	686b      	ldr	r3, [r5, #4]
 8006544:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8006548:	930b      	str	r3, [sp, #44]	; 0x2c
 800654a:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800654e:	4547      	cmp	r7, r8
 8006550:	bf38      	it	cc
 8006552:	46b8      	movcc	r8, r7
 8006554:	ebc8 0707 	rsb	r7, r8, r7
 8006558:	f1bc 0f00 	cmp.w	ip, #0
 800655c:	d026      	beq.n	80065ac <_DrawBitmap+0x3bc>
 800655e:	b91e      	cbnz	r6, 8006568 <_DrawBitmap+0x378>
 8006560:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8006564:	44c1      	add	r9, r8
 8006566:	e025      	b.n	80065b4 <_DrawBitmap+0x3c4>
 8006568:	07f0      	lsls	r0, r6, #31
 800656a:	d50c      	bpl.n	8006586 <_DrawBitmap+0x396>
 800656c:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8006570:	9a05      	ldr	r2, [sp, #20]
 8006572:	681b      	ldr	r3, [r3, #0]
 8006574:	f8cd c00c 	str.w	ip, [sp, #12]
 8006578:	4660      	mov	r0, ip
 800657a:	4649      	mov	r1, r9
 800657c:	4798      	blx	r3
 800657e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006580:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8006584:	6023      	str	r3, [r4, #0]
 8006586:	f1b8 0801 	subs.w	r8, r8, #1
 800658a:	f109 0901 	add.w	r9, r9, #1
 800658e:	f104 0404 	add.w	r4, r4, #4
 8006592:	d00f      	beq.n	80065b4 <_DrawBitmap+0x3c4>
 8006594:	0876      	lsrs	r6, r6, #1
 8006596:	e7e2      	b.n	800655e <_DrawBitmap+0x36e>
 8006598:	07f1      	lsls	r1, r6, #31
 800659a:	bf44      	itt	mi
 800659c:	9b0b      	ldrmi	r3, [sp, #44]	; 0x2c
 800659e:	6023      	strmi	r3, [r4, #0]
 80065a0:	f1b8 0801 	subs.w	r8, r8, #1
 80065a4:	f104 0404 	add.w	r4, r4, #4
 80065a8:	d004      	beq.n	80065b4 <_DrawBitmap+0x3c4>
 80065aa:	0876      	lsrs	r6, r6, #1
 80065ac:	2e00      	cmp	r6, #0
 80065ae:	d1f3      	bne.n	8006598 <_DrawBitmap+0x3a8>
 80065b0:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 80065b4:	b367      	cbz	r7, 8006610 <_DrawBitmap+0x420>
 80065b6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80065b8:	4a68      	ldr	r2, [pc, #416]	; (800675c <_DrawBitmap+0x56c>)
 80065ba:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 80065be:	9009      	str	r0, [sp, #36]	; 0x24
 80065c0:	5cd6      	ldrb	r6, [r2, r3]
 80065c2:	f04f 0808 	mov.w	r8, #8
 80065c6:	e7c2      	b.n	800654e <_DrawBitmap+0x35e>
 80065c8:	6803      	ldr	r3, [r0, #0]
 80065ca:	691b      	ldr	r3, [r3, #16]
 80065cc:	689b      	ldr	r3, [r3, #8]
 80065ce:	4798      	blx	r3
 80065d0:	4651      	mov	r1, sl
 80065d2:	4547      	cmp	r7, r8
 80065d4:	bf38      	it	cc
 80065d6:	46b8      	movcc	r8, r7
 80065d8:	ebc8 0707 	rsb	r7, r8, r7
 80065dc:	1d23      	adds	r3, r4, #4
 80065de:	46c6      	mov	lr, r8
 80065e0:	07f2      	lsls	r2, r6, #31
 80065e2:	d504      	bpl.n	80065ee <_DrawBitmap+0x3fe>
 80065e4:	f853 2c04 	ldr.w	r2, [r3, #-4]
 80065e8:	4042      	eors	r2, r0
 80065ea:	f843 2c04 	str.w	r2, [r3, #-4]
 80065ee:	f1be 0e01 	subs.w	lr, lr, #1
 80065f2:	ea4f 0656 	mov.w	r6, r6, lsr #1
 80065f6:	f103 0304 	add.w	r3, r3, #4
 80065fa:	d1f1      	bne.n	80065e0 <_DrawBitmap+0x3f0>
 80065fc:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8006600:	b137      	cbz	r7, 8006610 <_DrawBitmap+0x420>
 8006602:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8006606:	4a55      	ldr	r2, [pc, #340]	; (800675c <_DrawBitmap+0x56c>)
 8006608:	f04f 0808 	mov.w	r8, #8
 800660c:	5cd6      	ldrb	r6, [r2, r3]
 800660e:	e7e0      	b.n	80065d2 <_DrawBitmap+0x3e2>
 8006610:	a80e      	add	r0, sp, #56	; 0x38
 8006612:	f003 f925 	bl	8009860 <GUI_ALLOC_UnlockH>
 8006616:	e177      	b.n	8006908 <_DrawBitmap+0x718>
 8006618:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800661a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800661c:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 8006620:	f1c7 0604 	rsb	r6, r7, #4
 8006624:	f89a 7000 	ldrb.w	r7, [sl]
 8006628:	409f      	lsls	r7, r3
 800662a:	4b4d      	ldr	r3, [pc, #308]	; (8006760 <_DrawBitmap+0x570>)
 800662c:	681b      	ldr	r3, [r3, #0]
 800662e:	7c1b      	ldrb	r3, [r3, #16]
 8006630:	f003 0303 	and.w	r3, r3, #3
 8006634:	2b01      	cmp	r3, #1
 8006636:	b2f6      	uxtb	r6, r6
 8006638:	b2ff      	uxtb	r7, r7
 800663a:	d066      	beq.n	800670a <_DrawBitmap+0x51a>
 800663c:	d308      	bcc.n	8006650 <_DrawBitmap+0x460>
 800663e:	2b02      	cmp	r3, #2
 8006640:	f040 8162 	bne.w	8006908 <_DrawBitmap+0x718>
 8006644:	9804      	ldr	r0, [sp, #16]
 8006646:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800664a:	46d8      	mov	r8, fp
 800664c:	9006      	str	r0, [sp, #24]
 800664e:	e03e      	b.n	80066ce <_DrawBitmap+0x4de>
 8006650:	4652      	mov	r2, sl
 8006652:	465b      	mov	r3, fp
 8006654:	429e      	cmp	r6, r3
 8006656:	bfc8      	it	gt
 8006658:	b2de      	uxtbgt	r6, r3
 800665a:	1b9b      	subs	r3, r3, r6
 800665c:	4631      	mov	r1, r6
 800665e:	4620      	mov	r0, r4
 8006660:	ea4f 1c97 	mov.w	ip, r7, lsr #6
 8006664:	3901      	subs	r1, #1
 8006666:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 800666a:	f840 cb04 	str.w	ip, [r0], #4
 800666e:	00bf      	lsls	r7, r7, #2
 8006670:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8006674:	b2ff      	uxtb	r7, r7
 8006676:	d1f3      	bne.n	8006660 <_DrawBitmap+0x470>
 8006678:	3e01      	subs	r6, #1
 800667a:	b2f6      	uxtb	r6, r6
 800667c:	3601      	adds	r6, #1
 800667e:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 8006682:	2b00      	cmp	r3, #0
 8006684:	f000 8140 	beq.w	8006908 <_DrawBitmap+0x718>
 8006688:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800668c:	2604      	movs	r6, #4
 800668e:	e7e1      	b.n	8006654 <_DrawBitmap+0x464>
 8006690:	9906      	ldr	r1, [sp, #24]
 8006692:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 8006696:	4449      	add	r1, r9
 8006698:	d122      	bne.n	80066e0 <_DrawBitmap+0x4f0>
 800669a:	f109 0901 	add.w	r9, r9, #1
 800669e:	fa5f f289 	uxtb.w	r2, r9
 80066a2:	00bf      	lsls	r7, r7, #2
 80066a4:	4296      	cmp	r6, r2
 80066a6:	b2ff      	uxtb	r7, r7
 80066a8:	d1f2      	bne.n	8006690 <_DrawBitmap+0x4a0>
 80066aa:	9f06      	ldr	r7, [sp, #24]
 80066ac:	3e01      	subs	r6, #1
 80066ae:	b2f6      	uxtb	r6, r6
 80066b0:	1c7b      	adds	r3, r7, #1
 80066b2:	1c72      	adds	r2, r6, #1
 80066b4:	199e      	adds	r6, r3, r6
 80066b6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80066ba:	9606      	str	r6, [sp, #24]
 80066bc:	f1b8 0f00 	cmp.w	r8, #0
 80066c0:	f000 8122 	beq.w	8006908 <_DrawBitmap+0x718>
 80066c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80066c6:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 80066ca:	9309      	str	r3, [sp, #36]	; 0x24
 80066cc:	2604      	movs	r6, #4
 80066ce:	4546      	cmp	r6, r8
 80066d0:	bfc8      	it	gt
 80066d2:	fa5f f688 	uxtbgt.w	r6, r8
 80066d6:	ebc6 0808 	rsb	r8, r6, r8
 80066da:	f04f 0900 	mov.w	r9, #0
 80066de:	e7d7      	b.n	8006690 <_DrawBitmap+0x4a0>
 80066e0:	09ba      	lsrs	r2, r7, #6
 80066e2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80066e6:	f844 2029 	str.w	r2, [r4, r9, lsl #2]
 80066ea:	f1bc 0f00 	cmp.w	ip, #0
 80066ee:	d0d4      	beq.n	800669a <_DrawBitmap+0x4aa>
 80066f0:	f8dc 2008 	ldr.w	r2, [ip, #8]
 80066f4:	6812      	ldr	r2, [r2, #0]
 80066f6:	920b      	str	r2, [sp, #44]	; 0x2c
 80066f8:	4660      	mov	r0, ip
 80066fa:	f8cd c00c 	str.w	ip, [sp, #12]
 80066fe:	9a05      	ldr	r2, [sp, #20]
 8006700:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006702:	4798      	blx	r3
 8006704:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8006708:	e7c7      	b.n	800669a <_DrawBitmap+0x4aa>
 800670a:	4650      	mov	r0, sl
 800670c:	465b      	mov	r3, fp
 800670e:	429e      	cmp	r6, r3
 8006710:	bfc8      	it	gt
 8006712:	b2de      	uxtbgt	r6, r3
 8006714:	1b9b      	subs	r3, r3, r6
 8006716:	1d22      	adds	r2, r4, #4
 8006718:	46b4      	mov	ip, r6
 800671a:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 800671e:	d005      	beq.n	800672c <_DrawBitmap+0x53c>
 8006720:	f852 1c04 	ldr.w	r1, [r2, #-4]
 8006724:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 8006728:	f842 1c04 	str.w	r1, [r2, #-4]
 800672c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8006730:	00bf      	lsls	r7, r7, #2
 8006732:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 8006736:	b2ff      	uxtb	r7, r7
 8006738:	f102 0204 	add.w	r2, r2, #4
 800673c:	d1ed      	bne.n	800671a <_DrawBitmap+0x52a>
 800673e:	3e01      	subs	r6, #1
 8006740:	b2f6      	uxtb	r6, r6
 8006742:	3601      	adds	r6, #1
 8006744:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 8006748:	2b00      	cmp	r3, #0
 800674a:	f000 80dd 	beq.w	8006908 <_DrawBitmap+0x718>
 800674e:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 8006752:	2604      	movs	r6, #4
 8006754:	e7db      	b.n	800670e <_DrawBitmap+0x51e>
 8006756:	bf00      	nop
 8006758:	0800d570 	.word	0x0800d570
 800675c:	0800f53a 	.word	0x0800f53a
 8006760:	200000b0 	.word	0x200000b0
 8006764:	4a71      	ldr	r2, [pc, #452]	; (800692c <_DrawBitmap+0x73c>)
 8006766:	f89a 3000 	ldrb.w	r3, [sl]
 800676a:	6812      	ldr	r2, [r2, #0]
 800676c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800676e:	7c12      	ldrb	r2, [r2, #16]
 8006770:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8006772:	f002 0203 	and.w	r2, r2, #3
 8006776:	4083      	lsls	r3, r0
 8006778:	2a01      	cmp	r2, #1
 800677a:	b2de      	uxtb	r6, r3
 800677c:	f000 809c 	beq.w	80068b8 <_DrawBitmap+0x6c8>
 8006780:	d302      	bcc.n	8006788 <_DrawBitmap+0x598>
 8006782:	2a02      	cmp	r2, #2
 8006784:	d035      	beq.n	80067f2 <_DrawBitmap+0x602>
 8006786:	e0bf      	b.n	8006908 <_DrawBitmap+0x718>
 8006788:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800678a:	b15f      	cbz	r7, 80067a4 <_DrawBitmap+0x5b4>
 800678c:	0936      	lsrs	r6, r6, #4
 800678e:	f10a 0201 	add.w	r2, sl, #1
 8006792:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8006796:	6023      	str	r3, [r4, #0]
 8006798:	f89a 6001 	ldrb.w	r6, [sl, #1]
 800679c:	9c08      	ldr	r4, [sp, #32]
 800679e:	f10b 33ff 	add.w	r3, fp, #4294967295
 80067a2:	e001      	b.n	80067a8 <_DrawBitmap+0x5b8>
 80067a4:	465b      	mov	r3, fp
 80067a6:	4652      	mov	r2, sl
 80067a8:	2b01      	cmp	r3, #1
 80067aa:	dd1a      	ble.n	80067e2 <_DrawBitmap+0x5f2>
 80067ac:	1058      	asrs	r0, r3, #1
 80067ae:	f104 0108 	add.w	r1, r4, #8
 80067b2:	f003 0301 	and.w	r3, r3, #1
 80067b6:	eb02 0800 	add.w	r8, r2, r0
 80067ba:	ea4f 1c16 	mov.w	ip, r6, lsr #4
 80067be:	f006 060f 	and.w	r6, r6, #15
 80067c2:	f855 702c 	ldr.w	r7, [r5, ip, lsl #2]
 80067c6:	f841 7c08 	str.w	r7, [r1, #-8]
 80067ca:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 80067ce:	f841 6c04 	str.w	r6, [r1, #-4]
 80067d2:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 80067d6:	4542      	cmp	r2, r8
 80067d8:	f101 0108 	add.w	r1, r1, #8
 80067dc:	d1ed      	bne.n	80067ba <_DrawBitmap+0x5ca>
 80067de:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
 80067e2:	2b00      	cmp	r3, #0
 80067e4:	f000 8090 	beq.w	8006908 <_DrawBitmap+0x718>
 80067e8:	0936      	lsrs	r6, r6, #4
 80067ea:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 80067ee:	6023      	str	r3, [r4, #0]
 80067f0:	e08a      	b.n	8006908 <_DrawBitmap+0x718>
 80067f2:	981e      	ldr	r0, [sp, #120]	; 0x78
 80067f4:	b1c0      	cbz	r0, 8006828 <_DrawBitmap+0x638>
 80067f6:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 80067fa:	d00a      	beq.n	8006812 <_DrawBitmap+0x622>
 80067fc:	0936      	lsrs	r6, r6, #4
 80067fe:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8006802:	6023      	str	r3, [r4, #0]
 8006804:	b12f      	cbz	r7, 8006812 <_DrawBitmap+0x622>
 8006806:	68bb      	ldr	r3, [r7, #8]
 8006808:	9904      	ldr	r1, [sp, #16]
 800680a:	681b      	ldr	r3, [r3, #0]
 800680c:	9a05      	ldr	r2, [sp, #20]
 800680e:	4638      	mov	r0, r7
 8006810:	4798      	blx	r3
 8006812:	9904      	ldr	r1, [sp, #16]
 8006814:	9c08      	ldr	r4, [sp, #32]
 8006816:	f89a 6001 	ldrb.w	r6, [sl, #1]
 800681a:	f101 0801 	add.w	r8, r1, #1
 800681e:	f10b 3cff 	add.w	ip, fp, #4294967295
 8006822:	f10a 0901 	add.w	r9, sl, #1
 8006826:	e011      	b.n	800684c <_DrawBitmap+0x65c>
 8006828:	46dc      	mov	ip, fp
 800682a:	46d1      	mov	r9, sl
 800682c:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8006830:	e00c      	b.n	800684c <_DrawBitmap+0x65c>
 8006832:	f016 0ff0 	tst.w	r6, #240	; 0xf0
 8006836:	d10d      	bne.n	8006854 <_DrawBitmap+0x664>
 8006838:	f016 060f 	ands.w	r6, r6, #15
 800683c:	d11b      	bne.n	8006876 <_DrawBitmap+0x686>
 800683e:	f819 6f01 	ldrb.w	r6, [r9, #1]!
 8006842:	3408      	adds	r4, #8
 8006844:	f108 0802 	add.w	r8, r8, #2
 8006848:	f1ac 0c02 	sub.w	ip, ip, #2
 800684c:	f1bc 0f01 	cmp.w	ip, #1
 8006850:	dcef      	bgt.n	8006832 <_DrawBitmap+0x642>
 8006852:	e021      	b.n	8006898 <_DrawBitmap+0x6a8>
 8006854:	0933      	lsrs	r3, r6, #4
 8006856:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800685a:	6023      	str	r3, [r4, #0]
 800685c:	2f00      	cmp	r7, #0
 800685e:	d0eb      	beq.n	8006838 <_DrawBitmap+0x648>
 8006860:	68bb      	ldr	r3, [r7, #8]
 8006862:	9a05      	ldr	r2, [sp, #20]
 8006864:	681b      	ldr	r3, [r3, #0]
 8006866:	f8cd c00c 	str.w	ip, [sp, #12]
 800686a:	4638      	mov	r0, r7
 800686c:	4641      	mov	r1, r8
 800686e:	4798      	blx	r3
 8006870:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8006874:	e7e0      	b.n	8006838 <_DrawBitmap+0x648>
 8006876:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800687a:	6063      	str	r3, [r4, #4]
 800687c:	2f00      	cmp	r7, #0
 800687e:	d0de      	beq.n	800683e <_DrawBitmap+0x64e>
 8006880:	68bb      	ldr	r3, [r7, #8]
 8006882:	9a05      	ldr	r2, [sp, #20]
 8006884:	681b      	ldr	r3, [r3, #0]
 8006886:	f8cd c00c 	str.w	ip, [sp, #12]
 800688a:	4638      	mov	r0, r7
 800688c:	f108 0101 	add.w	r1, r8, #1
 8006890:	4798      	blx	r3
 8006892:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8006896:	e7d2      	b.n	800683e <_DrawBitmap+0x64e>
 8006898:	f1bc 0f00 	cmp.w	ip, #0
 800689c:	d034      	beq.n	8006908 <_DrawBitmap+0x718>
 800689e:	0936      	lsrs	r6, r6, #4
 80068a0:	d032      	beq.n	8006908 <_DrawBitmap+0x718>
 80068a2:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 80068a6:	6023      	str	r3, [r4, #0]
 80068a8:	b377      	cbz	r7, 8006908 <_DrawBitmap+0x718>
 80068aa:	68bb      	ldr	r3, [r7, #8]
 80068ac:	9a05      	ldr	r2, [sp, #20]
 80068ae:	681b      	ldr	r3, [r3, #0]
 80068b0:	4638      	mov	r0, r7
 80068b2:	4641      	mov	r1, r8
 80068b4:	4798      	blx	r3
 80068b6:	e027      	b.n	8006908 <_DrawBitmap+0x718>
 80068b8:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 80068ba:	f1c7 0302 	rsb	r3, r7, #2
 80068be:	b2db      	uxtb	r3, r3
 80068c0:	4657      	mov	r7, sl
 80068c2:	465a      	mov	r2, fp
 80068c4:	4293      	cmp	r3, r2
 80068c6:	bfc8      	it	gt
 80068c8:	b2d3      	uxtbgt	r3, r2
 80068ca:	1ad2      	subs	r2, r2, r3
 80068cc:	1d20      	adds	r0, r4, #4
 80068ce:	469c      	mov	ip, r3
 80068d0:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 80068d4:	d005      	beq.n	80068e2 <_DrawBitmap+0x6f2>
 80068d6:	f850 1c04 	ldr.w	r1, [r0, #-4]
 80068da:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 80068de:	f840 1c04 	str.w	r1, [r0, #-4]
 80068e2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80068e6:	0136      	lsls	r6, r6, #4
 80068e8:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 80068ec:	b2f6      	uxtb	r6, r6
 80068ee:	f100 0004 	add.w	r0, r0, #4
 80068f2:	d1ed      	bne.n	80068d0 <_DrawBitmap+0x6e0>
 80068f4:	3b01      	subs	r3, #1
 80068f6:	b2db      	uxtb	r3, r3
 80068f8:	3301      	adds	r3, #1
 80068fa:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 80068fe:	b11a      	cbz	r2, 8006908 <_DrawBitmap+0x718>
 8006900:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8006904:	2302      	movs	r3, #2
 8006906:	e7dd      	b.n	80068c4 <_DrawBitmap+0x6d4>
 8006908:	9b05      	ldr	r3, [sp, #20]
 800690a:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800690c:	3301      	adds	r3, #1
 800690e:	44ba      	add	sl, r7
 8006910:	9305      	str	r3, [sp, #20]
 8006912:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8006914:	9b08      	ldr	r3, [sp, #32]
 8006916:	443b      	add	r3, r7
 8006918:	9308      	str	r3, [sp, #32]
 800691a:	e5c3      	b.n	80064a4 <_DrawBitmap+0x2b4>
 800691c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800691e:	b113      	cbz	r3, 8006926 <_DrawBitmap+0x736>
 8006920:	a80f      	add	r0, sp, #60	; 0x3c
 8006922:	f002 ff9d 	bl	8009860 <GUI_ALLOC_UnlockH>
 8006926:	b011      	add	sp, #68	; 0x44
 8006928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800692c:	200000b0 	.word	0x200000b0

08006930 <GUI_MEMDEV__WriteToActiveAt>:
 8006930:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006934:	460e      	mov	r6, r1
 8006936:	4690      	mov	r8, r2
 8006938:	4607      	mov	r7, r0
 800693a:	f002 ff83 	bl	8009844 <GUI_ALLOC_LockH>
 800693e:	6803      	ldr	r3, [r0, #0]
 8006940:	ac02      	add	r4, sp, #8
 8006942:	68db      	ldr	r3, [r3, #12]
 8006944:	f844 0d04 	str.w	r0, [r4, #-4]!
 8006948:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800694a:	2000      	movs	r0, #0
 800694c:	2116      	movs	r1, #22
 800694e:	4798      	blx	r3
 8006950:	4605      	mov	r5, r0
 8006952:	4620      	mov	r0, r4
 8006954:	f002 ff84 	bl	8009860 <GUI_ALLOC_UnlockH>
 8006958:	b11d      	cbz	r5, 8006962 <GUI_MEMDEV__WriteToActiveAt+0x32>
 800695a:	4638      	mov	r0, r7
 800695c:	4631      	mov	r1, r6
 800695e:	4642      	mov	r2, r8
 8006960:	47a8      	blx	r5
 8006962:	b002      	add	sp, #8
 8006964:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006968 <GUI_MEMDEV__CreateFixed>:
 8006968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800696c:	4e3e      	ldr	r6, [pc, #248]	; (8006a68 <GUI_MEMDEV__CreateFixed+0x100>)
 800696e:	b087      	sub	sp, #28
 8006970:	461d      	mov	r5, r3
 8006972:	6833      	ldr	r3, [r6, #0]
 8006974:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006976:	7c5b      	ldrb	r3, [r3, #17]
 8006978:	4683      	mov	fp, r0
 800697a:	468a      	mov	sl, r1
 800697c:	4690      	mov	r8, r2
 800697e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8006980:	9912      	ldr	r1, [sp, #72]	; 0x48
 8006982:	2200      	movs	r2, #0
 8006984:	f002 f8f2 	bl	8008b6c <GUI_DEVICE_Create>
 8006988:	4604      	mov	r4, r0
 800698a:	2800      	cmp	r0, #0
 800698c:	d033      	beq.n	80069f6 <GUI_MEMDEV__CreateFixed+0x8e>
 800698e:	6903      	ldr	r3, [r0, #16]
 8006990:	689b      	ldr	r3, [r3, #8]
 8006992:	4798      	blx	r3
 8006994:	f000 fa20 	bl	8006dd8 <LCD__GetBPPDevice>
 8006998:	fb08 f600 	mul.w	r6, r8, r0
 800699c:	9003      	str	r0, [sp, #12]
 800699e:	3607      	adds	r6, #7
 80069a0:	f003 f888 	bl	8009ab4 <GUI_ALLOC_RequestSize>
 80069a4:	f017 0901 	ands.w	r9, r7, #1
 80069a8:	ea4f 06d6 	mov.w	r6, r6, lsr #3
 80069ac:	d104      	bne.n	80069b8 <GUI_MEMDEV__CreateFixed+0x50>
 80069ae:	2304      	movs	r3, #4
 80069b0:	fb90 f0f3 	sdiv	r0, r0, r3
 80069b4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80069b8:	2d00      	cmp	r5, #0
 80069ba:	dc09      	bgt.n	80069d0 <GUI_MEMDEV__CreateFixed+0x68>
 80069bc:	b11e      	cbz	r6, 80069c6 <GUI_MEMDEV__CreateFixed+0x5e>
 80069be:	3818      	subs	r0, #24
 80069c0:	fbb0 f0f6 	udiv	r0, r0, r6
 80069c4:	e000      	b.n	80069c8 <GUI_MEMDEV__CreateFixed+0x60>
 80069c6:	4630      	mov	r0, r6
 80069c8:	426d      	negs	r5, r5
 80069ca:	42a8      	cmp	r0, r5
 80069cc:	bfb8      	it	lt
 80069ce:	4605      	movlt	r5, r0
 80069d0:	f1b9 0f00 	cmp.w	r9, #0
 80069d4:	d109      	bne.n	80069ea <GUI_MEMDEV__CreateFixed+0x82>
 80069d6:	f8cd 9000 	str.w	r9, [sp]
 80069da:	4658      	mov	r0, fp
 80069dc:	4651      	mov	r1, sl
 80069de:	4642      	mov	r2, r8
 80069e0:	462b      	mov	r3, r5
 80069e2:	f005 f8f9 	bl	800bbd8 <GUI_USAGE_BM_Create>
 80069e6:	4607      	mov	r7, r0
 80069e8:	e000      	b.n	80069ec <GUI_MEMDEV__CreateFixed+0x84>
 80069ea:	2700      	movs	r7, #0
 80069ec:	2d00      	cmp	r5, #0
 80069ee:	dc04      	bgt.n	80069fa <GUI_MEMDEV__CreateFixed+0x92>
 80069f0:	4620      	mov	r0, r4
 80069f2:	f002 f8b9 	bl	8008b68 <GUI_DEVICE_Delete>
 80069f6:	2000      	movs	r0, #0
 80069f8:	e032      	b.n	8006a60 <GUI_MEMDEV__CreateFixed+0xf8>
 80069fa:	fb06 f005 	mul.w	r0, r6, r5
 80069fe:	3018      	adds	r0, #24
 8006a00:	f1b9 0f00 	cmp.w	r9, #0
 8006a04:	d002      	beq.n	8006a0c <GUI_MEMDEV__CreateFixed+0xa4>
 8006a06:	f003 f8e1 	bl	8009bcc <GUI_ALLOC_AllocNoInit>
 8006a0a:	e001      	b.n	8006a10 <GUI_MEMDEV__CreateFixed+0xa8>
 8006a0c:	f003 f90c 	bl	8009c28 <GUI_ALLOC_AllocZero>
 8006a10:	4681      	mov	r9, r0
 8006a12:	b940      	cbnz	r0, 8006a26 <GUI_MEMDEV__CreateFixed+0xbe>
 8006a14:	4620      	mov	r0, r4
 8006a16:	f002 f8a7 	bl	8008b68 <GUI_DEVICE_Delete>
 8006a1a:	2f00      	cmp	r7, #0
 8006a1c:	d0eb      	beq.n	80069f6 <GUI_MEMDEV__CreateFixed+0x8e>
 8006a1e:	4638      	mov	r0, r7
 8006a20:	f002 ff42 	bl	80098a8 <GUI_ALLOC_Free>
 8006a24:	e01b      	b.n	8006a5e <GUI_MEMDEV__CreateFixed+0xf6>
 8006a26:	f002 ff0d 	bl	8009844 <GUI_ALLOC_LockH>
 8006a2a:	4603      	mov	r3, r0
 8006a2c:	a806      	add	r0, sp, #24
 8006a2e:	9a03      	ldr	r2, [sp, #12]
 8006a30:	f840 3d04 	str.w	r3, [r0, #-4]!
 8006a34:	611a      	str	r2, [r3, #16]
 8006a36:	601c      	str	r4, [r3, #0]
 8006a38:	f8a3 b004 	strh.w	fp, [r3, #4]
 8006a3c:	f8a3 a006 	strh.w	sl, [r3, #6]
 8006a40:	f8a3 8008 	strh.w	r8, [r3, #8]
 8006a44:	815d      	strh	r5, [r3, #10]
 8006a46:	60de      	str	r6, [r3, #12]
 8006a48:	615f      	str	r7, [r3, #20]
 8006a4a:	f002 ff09 	bl	8009860 <GUI_ALLOC_UnlockH>
 8006a4e:	4a06      	ldr	r2, [pc, #24]	; (8006a68 <GUI_MEMDEV__CreateFixed+0x100>)
 8006a50:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006a52:	6123      	str	r3, [r4, #16]
 8006a54:	6813      	ldr	r3, [r2, #0]
 8006a56:	f8c4 9008 	str.w	r9, [r4, #8]
 8006a5a:	7c5b      	ldrb	r3, [r3, #17]
 8006a5c:	61a3      	str	r3, [r4, #24]
 8006a5e:	4648      	mov	r0, r9
 8006a60:	b007      	add	sp, #28
 8006a62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a66:	bf00      	nop
 8006a68:	200000b0 	.word	0x200000b0

08006a6c <GUI_MEMDEV_GetBitsPerPixel>:
 8006a6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006a6e:	4605      	mov	r5, r0
 8006a70:	b170      	cbz	r0, 8006a90 <GUI_MEMDEV_GetBitsPerPixel+0x24>
 8006a72:	f002 fee7 	bl	8009844 <GUI_ALLOC_LockH>
 8006a76:	6803      	ldr	r3, [r0, #0]
 8006a78:	ac02      	add	r4, sp, #8
 8006a7a:	691b      	ldr	r3, [r3, #16]
 8006a7c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8006a80:	689b      	ldr	r3, [r3, #8]
 8006a82:	4798      	blx	r3
 8006a84:	f000 f9a8 	bl	8006dd8 <LCD__GetBPPDevice>
 8006a88:	4605      	mov	r5, r0
 8006a8a:	4620      	mov	r0, r4
 8006a8c:	f002 fee8 	bl	8009860 <GUI_ALLOC_UnlockH>
 8006a90:	4628      	mov	r0, r5
 8006a92:	b003      	add	sp, #12
 8006a94:	bd30      	pop	{r4, r5, pc}
	...

08006a98 <GUI_MEMDEV_Delete>:
 8006a98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006a9a:	4604      	mov	r4, r0
 8006a9c:	b1d0      	cbz	r0, 8006ad4 <GUI_MEMDEV_Delete+0x3c>
 8006a9e:	4b0e      	ldr	r3, [pc, #56]	; (8006ad8 <GUI_MEMDEV_Delete+0x40>)
 8006aa0:	681b      	ldr	r3, [r3, #0]
 8006aa2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006aa4:	4283      	cmp	r3, r0
 8006aa6:	d101      	bne.n	8006aac <GUI_MEMDEV_Delete+0x14>
 8006aa8:	f002 fa7a 	bl	8008fa0 <GUI_SelectLCD>
 8006aac:	4620      	mov	r0, r4
 8006aae:	f002 fec9 	bl	8009844 <GUI_ALLOC_LockH>
 8006ab2:	9001      	str	r0, [sp, #4]
 8006ab4:	6940      	ldr	r0, [r0, #20]
 8006ab6:	b108      	cbz	r0, 8006abc <GUI_MEMDEV_Delete+0x24>
 8006ab8:	f005 f8ba 	bl	800bc30 <GUI_USAGE_DecUseCnt>
 8006abc:	ad02      	add	r5, sp, #8
 8006abe:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8006ac2:	6818      	ldr	r0, [r3, #0]
 8006ac4:	f002 f850 	bl	8008b68 <GUI_DEVICE_Delete>
 8006ac8:	4628      	mov	r0, r5
 8006aca:	f002 fec9 	bl	8009860 <GUI_ALLOC_UnlockH>
 8006ace:	4620      	mov	r0, r4
 8006ad0:	f002 feea 	bl	80098a8 <GUI_ALLOC_Free>
 8006ad4:	b003      	add	sp, #12
 8006ad6:	bd30      	pop	{r4, r5, pc}
 8006ad8:	200000b0 	.word	0x200000b0

08006adc <GUI_MEMDEV_CreateEx>:
 8006adc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006ae0:	469a      	mov	sl, r3
 8006ae2:	4b19      	ldr	r3, [pc, #100]	; (8006b48 <GUI_MEMDEV_CreateEx+0x6c>)
 8006ae4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8006ae6:	681b      	ldr	r3, [r3, #0]
 8006ae8:	4607      	mov	r7, r0
 8006aea:	7c58      	ldrb	r0, [r3, #17]
 8006aec:	4b17      	ldr	r3, [pc, #92]	; (8006b4c <GUI_MEMDEV_CreateEx+0x70>)
 8006aee:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8006af2:	4688      	mov	r8, r1
 8006af4:	4691      	mov	r9, r2
 8006af6:	68e3      	ldr	r3, [r4, #12]
 8006af8:	681b      	ldr	r3, [r3, #0]
 8006afa:	2b04      	cmp	r3, #4
 8006afc:	d006      	beq.n	8006b0c <GUI_MEMDEV_CreateEx+0x30>
 8006afe:	6824      	ldr	r4, [r4, #0]
 8006b00:	2c00      	cmp	r4, #0
 8006b02:	d1f8      	bne.n	8006af6 <GUI_MEMDEV_CreateEx+0x1a>
 8006b04:	f002 f820 	bl	8008b48 <GUI_DEVICE__GetpDriver>
 8006b08:	4604      	mov	r4, r0
 8006b0a:	b130      	cbz	r0, 8006b1a <GUI_MEMDEV_CreateEx+0x3e>
 8006b0c:	68e3      	ldr	r3, [r4, #12]
 8006b0e:	4620      	mov	r0, r4
 8006b10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b12:	2101      	movs	r1, #1
 8006b14:	4798      	blx	r3
 8006b16:	4606      	mov	r6, r0
 8006b18:	b908      	cbnz	r0, 8006b1e <GUI_MEMDEV_CreateEx+0x42>
 8006b1a:	2000      	movs	r0, #0
 8006b1c:	e010      	b.n	8006b40 <GUI_MEMDEV_CreateEx+0x64>
 8006b1e:	6924      	ldr	r4, [r4, #16]
 8006b20:	68a3      	ldr	r3, [r4, #8]
 8006b22:	4798      	blx	r3
 8006b24:	3001      	adds	r0, #1
 8006b26:	bf04      	itt	eq
 8006b28:	f045 0501 	orreq.w	r5, r5, #1
 8006b2c:	4c08      	ldreq	r4, [pc, #32]	; (8006b50 <GUI_MEMDEV_CreateEx+0x74>)
 8006b2e:	9402      	str	r4, [sp, #8]
 8006b30:	e88d 0060 	stmia.w	sp, {r5, r6}
 8006b34:	4638      	mov	r0, r7
 8006b36:	4641      	mov	r1, r8
 8006b38:	464a      	mov	r2, r9
 8006b3a:	4653      	mov	r3, sl
 8006b3c:	f7ff ff14 	bl	8006968 <GUI_MEMDEV__CreateFixed>
 8006b40:	b004      	add	sp, #16
 8006b42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006b46:	bf00      	nop
 8006b48:	200000b0 	.word	0x200000b0
 8006b4c:	200004d8 	.word	0x200004d8
 8006b50:	0800f6b4 	.word	0x0800f6b4

08006b54 <GUI_MEMDEV_Select>:
 8006b54:	4b11      	ldr	r3, [pc, #68]	; (8006b9c <GUI_MEMDEV_Select+0x48>)
 8006b56:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006b58:	681a      	ldr	r2, [r3, #0]
 8006b5a:	4604      	mov	r4, r0
 8006b5c:	6e16      	ldr	r6, [r2, #96]	; 0x60
 8006b5e:	461f      	mov	r7, r3
 8006b60:	b910      	cbnz	r0, 8006b68 <GUI_MEMDEV_Select+0x14>
 8006b62:	f002 fa1d 	bl	8008fa0 <GUI_SelectLCD>
 8006b66:	e016      	b.n	8006b96 <GUI_MEMDEV_Select+0x42>
 8006b68:	b10e      	cbz	r6, 8006b6e <GUI_MEMDEV_Select+0x1a>
 8006b6a:	f002 fa19 	bl	8008fa0 <GUI_SelectLCD>
 8006b6e:	f7fe ffdf 	bl	8005b30 <WM_Deactivate>
 8006b72:	4620      	mov	r0, r4
 8006b74:	f002 fe66 	bl	8009844 <GUI_ALLOC_LockH>
 8006b78:	ad02      	add	r5, sp, #8
 8006b7a:	683b      	ldr	r3, [r7, #0]
 8006b7c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8006b80:	661c      	str	r4, [r3, #96]	; 0x60
 8006b82:	6800      	ldr	r0, [r0, #0]
 8006b84:	f002 f832 	bl	8008bec <GUI_DEVICE_Link>
 8006b88:	4628      	mov	r0, r5
 8006b8a:	f002 fe69 	bl	8009860 <GUI_ALLOC_UnlockH>
 8006b8e:	f000 f85f 	bl	8006c50 <LCD_UpdateColorIndices>
 8006b92:	f000 fbe1 	bl	8007358 <LCD_SetClipRectMax>
 8006b96:	4630      	mov	r0, r6
 8006b98:	b003      	add	sp, #12
 8006b9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006b9c:	200000b0 	.word	0x200000b0

08006ba0 <GUI_MEMDEV_CopyToLCDAt>:
 8006ba0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006ba4:	460c      	mov	r4, r1
 8006ba6:	b085      	sub	sp, #20
 8006ba8:	4615      	mov	r5, r2
 8006baa:	4606      	mov	r6, r0
 8006bac:	2800      	cmp	r0, #0
 8006bae:	d041      	beq.n	8006c34 <GUI_MEMDEV_CopyToLCDAt+0x94>
 8006bb0:	2000      	movs	r0, #0
 8006bb2:	f002 fa02 	bl	8008fba <GUI_SetDrawMode>
 8006bb6:	4b21      	ldr	r3, [pc, #132]	; (8006c3c <GUI_MEMDEV_CopyToLCDAt+0x9c>)
 8006bb8:	681b      	ldr	r3, [r3, #0]
 8006bba:	4607      	mov	r7, r0
 8006bbc:	4630      	mov	r0, r6
 8006bbe:	f8d3 8060 	ldr.w	r8, [r3, #96]	; 0x60
 8006bc2:	f002 fe3f 	bl	8009844 <GUI_ALLOC_LockH>
 8006bc6:	6803      	ldr	r3, [r0, #0]
 8006bc8:	9001      	str	r0, [sp, #4]
 8006bca:	6998      	ldr	r0, [r3, #24]
 8006bcc:	f001 f970 	bl	8007eb0 <GUI_SelectLayer>
 8006bd0:	4b1b      	ldr	r3, [pc, #108]	; (8006c40 <GUI_MEMDEV_CopyToLCDAt+0xa0>)
 8006bd2:	429c      	cmp	r4, r3
 8006bd4:	9b01      	ldr	r3, [sp, #4]
 8006bd6:	bf04      	itt	eq
 8006bd8:	f9b3 4004 	ldrsheq.w	r4, [r3, #4]
 8006bdc:	f9b3 5006 	ldrsheq.w	r5, [r3, #6]
 8006be0:	891a      	ldrh	r2, [r3, #8]
 8006be2:	895b      	ldrh	r3, [r3, #10]
 8006be4:	f8ad 4008 	strh.w	r4, [sp, #8]
 8006be8:	3a01      	subs	r2, #1
 8006bea:	3b01      	subs	r3, #1
 8006bec:	4422      	add	r2, r4
 8006bee:	442b      	add	r3, r5
 8006bf0:	4681      	mov	r9, r0
 8006bf2:	f8ad 200c 	strh.w	r2, [sp, #12]
 8006bf6:	f8ad 300e 	strh.w	r3, [sp, #14]
 8006bfa:	f8ad 500a 	strh.w	r5, [sp, #10]
 8006bfe:	f7fe ff8f 	bl	8005b20 <WM_Activate>
 8006c02:	a801      	add	r0, sp, #4
 8006c04:	f002 fe2c 	bl	8009860 <GUI_ALLOC_UnlockH>
 8006c08:	a802      	add	r0, sp, #8
 8006c0a:	f7fe fdd9 	bl	80057c0 <WM__InitIVRSearch>
 8006c0e:	b948      	cbnz	r0, 8006c24 <GUI_MEMDEV_CopyToLCDAt+0x84>
 8006c10:	4648      	mov	r0, r9
 8006c12:	f001 f94d 	bl	8007eb0 <GUI_SelectLayer>
 8006c16:	4640      	mov	r0, r8
 8006c18:	f7ff ff9c 	bl	8006b54 <GUI_MEMDEV_Select>
 8006c1c:	4638      	mov	r0, r7
 8006c1e:	f002 f9cc 	bl	8008fba <GUI_SetDrawMode>
 8006c22:	e007      	b.n	8006c34 <GUI_MEMDEV_CopyToLCDAt+0x94>
 8006c24:	4630      	mov	r0, r6
 8006c26:	4621      	mov	r1, r4
 8006c28:	462a      	mov	r2, r5
 8006c2a:	f004 faa1 	bl	800b170 <GUI_MEMDEV__WriteToActiveOpaque>
 8006c2e:	f7fe fd05 	bl	800563c <WM__GetNextIVR>
 8006c32:	e7ec      	b.n	8006c0e <GUI_MEMDEV_CopyToLCDAt+0x6e>
 8006c34:	b005      	add	sp, #20
 8006c36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006c3a:	bf00      	nop
 8006c3c:	200000b0 	.word	0x200000b0
 8006c40:	fffff001 	.word	0xfffff001

08006c44 <GUI_MEMDEV_CopyToLCD>:
 8006c44:	4901      	ldr	r1, [pc, #4]	; (8006c4c <GUI_MEMDEV_CopyToLCD+0x8>)
 8006c46:	460a      	mov	r2, r1
 8006c48:	f7ff bfaa 	b.w	8006ba0 <GUI_MEMDEV_CopyToLCDAt>
 8006c4c:	fffff001 	.word	0xfffff001

08006c50 <LCD_UpdateColorIndices>:
 8006c50:	b510      	push	{r4, lr}
 8006c52:	4c07      	ldr	r4, [pc, #28]	; (8006c70 <LCD_UpdateColorIndices+0x20>)
 8006c54:	6823      	ldr	r3, [r4, #0]
 8006c56:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8006c58:	f000 fb8e 	bl	8007378 <LCD_Color2Index>
 8006c5c:	f000 fbac 	bl	80073b8 <LCD_SetColorIndex>
 8006c60:	6823      	ldr	r3, [r4, #0]
 8006c62:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8006c64:	f000 fb88 	bl	8007378 <LCD_Color2Index>
 8006c68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006c6c:	f000 bbc0 	b.w	80073f0 <LCD_SetBkColorIndex>
 8006c70:	200000b0 	.word	0x200000b0

08006c74 <LCD_SetClipRectEx>:
 8006c74:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006c76:	4c09      	ldr	r4, [pc, #36]	; (8006c9c <LCD_SetClipRectEx+0x28>)
 8006c78:	6823      	ldr	r3, [r4, #0]
 8006c7a:	7c5a      	ldrb	r2, [r3, #17]
 8006c7c:	4b08      	ldr	r3, [pc, #32]	; (8006ca0 <LCD_SetClipRectEx+0x2c>)
 8006c7e:	4605      	mov	r5, r0
 8006c80:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8006c84:	68c2      	ldr	r2, [r0, #12]
 8006c86:	4669      	mov	r1, sp
 8006c88:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8006c8a:	4790      	blx	r2
 8006c8c:	6820      	ldr	r0, [r4, #0]
 8006c8e:	4629      	mov	r1, r5
 8006c90:	466a      	mov	r2, sp
 8006c92:	3008      	adds	r0, #8
 8006c94:	f000 fc17 	bl	80074c6 <GUI__IntersectRects>
 8006c98:	b003      	add	sp, #12
 8006c9a:	bd30      	pop	{r4, r5, pc}
 8006c9c:	200000b0 	.word	0x200000b0
 8006ca0:	200004d8 	.word	0x200004d8

08006ca4 <_GetDevProp>:
 8006ca4:	2801      	cmp	r0, #1
 8006ca6:	b510      	push	{r4, lr}
 8006ca8:	460c      	mov	r4, r1
 8006caa:	dc08      	bgt.n	8006cbe <_GetDevProp+0x1a>
 8006cac:	f001 ff4c 	bl	8008b48 <GUI_DEVICE__GetpDriver>
 8006cb0:	b120      	cbz	r0, 8006cbc <_GetDevProp+0x18>
 8006cb2:	68c3      	ldr	r3, [r0, #12]
 8006cb4:	4621      	mov	r1, r4
 8006cb6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006cb8:	4798      	blx	r3
 8006cba:	bd10      	pop	{r4, pc}
 8006cbc:	bd10      	pop	{r4, pc}
 8006cbe:	2000      	movs	r0, #0
 8006cc0:	bd10      	pop	{r4, pc}

08006cc2 <_GetMaxValue>:
 8006cc2:	b538      	push	{r3, r4, r5, lr}
 8006cc4:	4604      	mov	r4, r0
 8006cc6:	4621      	mov	r1, r4
 8006cc8:	2001      	movs	r0, #1
 8006cca:	f7ff ffeb 	bl	8006ca4 <_GetDevProp>
 8006cce:	4621      	mov	r1, r4
 8006cd0:	4605      	mov	r5, r0
 8006cd2:	2000      	movs	r0, #0
 8006cd4:	f7ff ffe6 	bl	8006ca4 <_GetDevProp>
 8006cd8:	42a8      	cmp	r0, r5
 8006cda:	bfb8      	it	lt
 8006cdc:	4628      	movlt	r0, r5
 8006cde:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8006ce2:	bd38      	pop	{r3, r4, r5, pc}

08006ce4 <LCD_GetXSizeEx>:
 8006ce4:	2101      	movs	r1, #1
 8006ce6:	f7ff bfdd 	b.w	8006ca4 <_GetDevProp>

08006cea <LCD_GetYSizeEx>:
 8006cea:	2102      	movs	r1, #2
 8006cec:	f7ff bfda 	b.w	8006ca4 <_GetDevProp>

08006cf0 <LCD_GetVXSizeEx>:
 8006cf0:	2103      	movs	r1, #3
 8006cf2:	f7ff bfd7 	b.w	8006ca4 <_GetDevProp>

08006cf6 <LCD_GetVYSizeEx>:
 8006cf6:	2104      	movs	r1, #4
 8006cf8:	f7ff bfd4 	b.w	8006ca4 <_GetDevProp>

08006cfc <LCD_GetXSize>:
 8006cfc:	4b02      	ldr	r3, [pc, #8]	; (8006d08 <LCD_GetXSize+0xc>)
 8006cfe:	681b      	ldr	r3, [r3, #0]
 8006d00:	7c58      	ldrb	r0, [r3, #17]
 8006d02:	f7ff bfef 	b.w	8006ce4 <LCD_GetXSizeEx>
 8006d06:	bf00      	nop
 8006d08:	200000b0 	.word	0x200000b0

08006d0c <LCD_GetYSize>:
 8006d0c:	4b02      	ldr	r3, [pc, #8]	; (8006d18 <LCD_GetYSize+0xc>)
 8006d0e:	681b      	ldr	r3, [r3, #0]
 8006d10:	7c58      	ldrb	r0, [r3, #17]
 8006d12:	f7ff bfea 	b.w	8006cea <LCD_GetYSizeEx>
 8006d16:	bf00      	nop
 8006d18:	200000b0 	.word	0x200000b0

08006d1c <GUI_GetBitsPerPixelEx>:
 8006d1c:	b508      	push	{r3, lr}
 8006d1e:	4b04      	ldr	r3, [pc, #16]	; (8006d30 <GUI_GetBitsPerPixelEx+0x14>)
 8006d20:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8006d24:	68c3      	ldr	r3, [r0, #12]
 8006d26:	2108      	movs	r1, #8
 8006d28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006d2a:	4798      	blx	r3
 8006d2c:	bd08      	pop	{r3, pc}
 8006d2e:	bf00      	nop
 8006d30:	200004d8 	.word	0x200004d8

08006d34 <GUI_GetpfIndex2ColorEx>:
 8006d34:	4b02      	ldr	r3, [pc, #8]	; (8006d40 <GUI_GetpfIndex2ColorEx+0xc>)
 8006d36:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8006d3a:	691b      	ldr	r3, [r3, #16]
 8006d3c:	6858      	ldr	r0, [r3, #4]
 8006d3e:	4770      	bx	lr
 8006d40:	200004d8 	.word	0x200004d8

08006d44 <GUI_GetpfColor2IndexEx>:
 8006d44:	4b02      	ldr	r3, [pc, #8]	; (8006d50 <GUI_GetpfColor2IndexEx+0xc>)
 8006d46:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8006d4a:	691b      	ldr	r3, [r3, #16]
 8006d4c:	6818      	ldr	r0, [r3, #0]
 8006d4e:	4770      	bx	lr
 8006d50:	200004d8 	.word	0x200004d8

08006d54 <LCD_GetVXSizeMax>:
 8006d54:	2003      	movs	r0, #3
 8006d56:	f7ff bfb4 	b.w	8006cc2 <_GetMaxValue>

08006d5a <LCD__GetBPP>:
 8006d5a:	2800      	cmp	r0, #0
 8006d5c:	d03b      	beq.n	8006dd6 <LCD__GetBPP+0x7c>
 8006d5e:	f030 0301 	bics.w	r3, r0, #1
 8006d62:	d029      	beq.n	8006db8 <LCD__GetBPP+0x5e>
 8006d64:	f030 0303 	bics.w	r3, r0, #3
 8006d68:	d028      	beq.n	8006dbc <LCD__GetBPP+0x62>
 8006d6a:	f030 0307 	bics.w	r3, r0, #7
 8006d6e:	d027      	beq.n	8006dc0 <LCD__GetBPP+0x66>
 8006d70:	f030 030f 	bics.w	r3, r0, #15
 8006d74:	d026      	beq.n	8006dc4 <LCD__GetBPP+0x6a>
 8006d76:	f030 031f 	bics.w	r3, r0, #31
 8006d7a:	d025      	beq.n	8006dc8 <LCD__GetBPP+0x6e>
 8006d7c:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 8006d80:	d024      	beq.n	8006dcc <LCD__GetBPP+0x72>
 8006d82:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 8006d86:	f023 0301 	bic.w	r3, r3, #1
 8006d8a:	b30b      	cbz	r3, 8006dd0 <LCD__GetBPP+0x76>
 8006d8c:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
 8006d90:	f023 030f 	bic.w	r3, r3, #15
 8006d94:	b1e3      	cbz	r3, 8006dd0 <LCD__GetBPP+0x76>
 8006d96:	f420 43ff 	bic.w	r3, r0, #32640	; 0x7f80
 8006d9a:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8006d9e:	b1bb      	cbz	r3, 8006dd0 <LCD__GetBPP+0x76>
 8006da0:	0c03      	lsrs	r3, r0, #16
 8006da2:	041b      	lsls	r3, r3, #16
 8006da4:	b1a3      	cbz	r3, 8006dd0 <LCD__GetBPP+0x76>
 8006da6:	0c83      	lsrs	r3, r0, #18
 8006da8:	049b      	lsls	r3, r3, #18
 8006daa:	b19b      	cbz	r3, 8006dd4 <LCD__GetBPP+0x7a>
 8006dac:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8006db0:	bf0c      	ite	eq
 8006db2:	2018      	moveq	r0, #24
 8006db4:	2020      	movne	r0, #32
 8006db6:	4770      	bx	lr
 8006db8:	2001      	movs	r0, #1
 8006dba:	4770      	bx	lr
 8006dbc:	2002      	movs	r0, #2
 8006dbe:	4770      	bx	lr
 8006dc0:	2003      	movs	r0, #3
 8006dc2:	4770      	bx	lr
 8006dc4:	2004      	movs	r0, #4
 8006dc6:	4770      	bx	lr
 8006dc8:	2005      	movs	r0, #5
 8006dca:	4770      	bx	lr
 8006dcc:	2008      	movs	r0, #8
 8006dce:	4770      	bx	lr
 8006dd0:	2010      	movs	r0, #16
 8006dd2:	4770      	bx	lr
 8006dd4:	2012      	movs	r0, #18
 8006dd6:	4770      	bx	lr

08006dd8 <LCD__GetBPPDevice>:
 8006dd8:	b508      	push	{r3, lr}
 8006dda:	f7ff ffbe 	bl	8006d5a <LCD__GetBPP>
 8006dde:	2801      	cmp	r0, #1
 8006de0:	d00f      	beq.n	8006e02 <LCD__GetBPPDevice+0x2a>
 8006de2:	1e83      	subs	r3, r0, #2
 8006de4:	2b06      	cmp	r3, #6
 8006de6:	d909      	bls.n	8006dfc <LCD__GetBPPDevice+0x24>
 8006de8:	f1a0 0309 	sub.w	r3, r0, #9
 8006dec:	2b07      	cmp	r3, #7
 8006dee:	d907      	bls.n	8006e00 <LCD__GetBPPDevice+0x28>
 8006df0:	3811      	subs	r0, #17
 8006df2:	2810      	cmp	r0, #16
 8006df4:	bf34      	ite	cc
 8006df6:	2020      	movcc	r0, #32
 8006df8:	2000      	movcs	r0, #0
 8006dfa:	bd08      	pop	{r3, pc}
 8006dfc:	2008      	movs	r0, #8
 8006dfe:	bd08      	pop	{r3, pc}
 8006e00:	2010      	movs	r0, #16
 8006e02:	bd08      	pop	{r3, pc}

08006e04 <_SetDrawMode>:
 8006e04:	b570      	push	{r4, r5, r6, lr}
 8006e06:	4b08      	ldr	r3, [pc, #32]	; (8006e28 <_SetDrawMode+0x24>)
 8006e08:	681b      	ldr	r3, [r3, #0]
 8006e0a:	7c1a      	ldrb	r2, [r3, #16]
 8006e0c:	ea80 0102 	eor.w	r1, r0, r2
 8006e10:	0749      	lsls	r1, r1, #29
 8006e12:	d505      	bpl.n	8006e20 <_SetDrawMode+0x1c>
 8006e14:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8006e16:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8006e18:	6826      	ldr	r6, [r4, #0]
 8006e1a:	680d      	ldr	r5, [r1, #0]
 8006e1c:	6025      	str	r5, [r4, #0]
 8006e1e:	600e      	str	r6, [r1, #0]
 8006e20:	7418      	strb	r0, [r3, #16]
 8006e22:	4610      	mov	r0, r2
 8006e24:	bd70      	pop	{r4, r5, r6, pc}
 8006e26:	bf00      	nop
 8006e28:	200000b0 	.word	0x200000b0

08006e2c <LCD_SetDrawMode>:
 8006e2c:	b508      	push	{r3, lr}
 8006e2e:	4b02      	ldr	r3, [pc, #8]	; (8006e38 <LCD_SetDrawMode+0xc>)
 8006e30:	681b      	ldr	r3, [r3, #0]
 8006e32:	689b      	ldr	r3, [r3, #8]
 8006e34:	4798      	blx	r3
 8006e36:	bd08      	pop	{r3, pc}
 8006e38:	20000098 	.word	0x20000098

08006e3c <LCD_DrawPixel>:
 8006e3c:	b538      	push	{r3, r4, r5, lr}
 8006e3e:	4b14      	ldr	r3, [pc, #80]	; (8006e90 <LCD_DrawPixel+0x54>)
 8006e40:	681b      	ldr	r3, [r3, #0]
 8006e42:	460a      	mov	r2, r1
 8006e44:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 8006e48:	428a      	cmp	r2, r1
 8006e4a:	4604      	mov	r4, r0
 8006e4c:	db1e      	blt.n	8006e8c <LCD_DrawPixel+0x50>
 8006e4e:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8006e52:	428a      	cmp	r2, r1
 8006e54:	dc1a      	bgt.n	8006e8c <LCD_DrawPixel+0x50>
 8006e56:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8006e5a:	4288      	cmp	r0, r1
 8006e5c:	db16      	blt.n	8006e8c <LCD_DrawPixel+0x50>
 8006e5e:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
 8006e62:	4288      	cmp	r0, r1
 8006e64:	dc12      	bgt.n	8006e8c <LCD_DrawPixel+0x50>
 8006e66:	7c19      	ldrb	r1, [r3, #16]
 8006e68:	7c58      	ldrb	r0, [r3, #17]
 8006e6a:	f011 0f01 	tst.w	r1, #1
 8006e6e:	4909      	ldr	r1, [pc, #36]	; (8006e94 <LCD_DrawPixel+0x58>)
 8006e70:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8006e74:	d004      	beq.n	8006e80 <LCD_DrawPixel+0x44>
 8006e76:	68c3      	ldr	r3, [r0, #12]
 8006e78:	4621      	mov	r1, r4
 8006e7a:	69db      	ldr	r3, [r3, #28]
 8006e7c:	4798      	blx	r3
 8006e7e:	bd38      	pop	{r3, r4, r5, pc}
 8006e80:	68c1      	ldr	r1, [r0, #12]
 8006e82:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006e84:	698d      	ldr	r5, [r1, #24]
 8006e86:	681b      	ldr	r3, [r3, #0]
 8006e88:	4621      	mov	r1, r4
 8006e8a:	47a8      	blx	r5
 8006e8c:	bd38      	pop	{r3, r4, r5, pc}
 8006e8e:	bf00      	nop
 8006e90:	200000b0 	.word	0x200000b0
 8006e94:	200004d8 	.word	0x200004d8

08006e98 <LCD_DrawHLine>:
 8006e98:	b538      	push	{r3, r4, r5, lr}
 8006e9a:	4b10      	ldr	r3, [pc, #64]	; (8006edc <LCD_DrawHLine+0x44>)
 8006e9c:	681c      	ldr	r4, [r3, #0]
 8006e9e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8006ea2:	4299      	cmp	r1, r3
 8006ea4:	460d      	mov	r5, r1
 8006ea6:	db17      	blt.n	8006ed8 <LCD_DrawHLine+0x40>
 8006ea8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8006eac:	4299      	cmp	r1, r3
 8006eae:	dc13      	bgt.n	8006ed8 <LCD_DrawHLine+0x40>
 8006eb0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8006eb4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006eb8:	4288      	cmp	r0, r1
 8006eba:	bfa8      	it	ge
 8006ebc:	4601      	movge	r1, r0
 8006ebe:	429a      	cmp	r2, r3
 8006ec0:	bfb8      	it	lt
 8006ec2:	4613      	movlt	r3, r2
 8006ec4:	428b      	cmp	r3, r1
 8006ec6:	db07      	blt.n	8006ed8 <LCD_DrawHLine+0x40>
 8006ec8:	7c60      	ldrb	r0, [r4, #17]
 8006eca:	4a05      	ldr	r2, [pc, #20]	; (8006ee0 <LCD_DrawHLine+0x48>)
 8006ecc:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8006ed0:	68c2      	ldr	r2, [r0, #12]
 8006ed2:	6894      	ldr	r4, [r2, #8]
 8006ed4:	462a      	mov	r2, r5
 8006ed6:	47a0      	blx	r4
 8006ed8:	bd38      	pop	{r3, r4, r5, pc}
 8006eda:	bf00      	nop
 8006edc:	200000b0 	.word	0x200000b0
 8006ee0:	200004d8 	.word	0x200004d8

08006ee4 <LCD_DrawVLine>:
 8006ee4:	b538      	push	{r3, r4, r5, lr}
 8006ee6:	4b10      	ldr	r3, [pc, #64]	; (8006f28 <LCD_DrawVLine+0x44>)
 8006ee8:	681c      	ldr	r4, [r3, #0]
 8006eea:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8006eee:	4605      	mov	r5, r0
 8006ef0:	429d      	cmp	r5, r3
 8006ef2:	4610      	mov	r0, r2
 8006ef4:	db17      	blt.n	8006f26 <LCD_DrawVLine+0x42>
 8006ef6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006efa:	429d      	cmp	r5, r3
 8006efc:	dc13      	bgt.n	8006f26 <LCD_DrawVLine+0x42>
 8006efe:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8006f02:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8006f06:	4291      	cmp	r1, r2
 8006f08:	bfa8      	it	ge
 8006f0a:	460a      	movge	r2, r1
 8006f0c:	4298      	cmp	r0, r3
 8006f0e:	bfb8      	it	lt
 8006f10:	4603      	movlt	r3, r0
 8006f12:	4293      	cmp	r3, r2
 8006f14:	db07      	blt.n	8006f26 <LCD_DrawVLine+0x42>
 8006f16:	7c60      	ldrb	r0, [r4, #17]
 8006f18:	4904      	ldr	r1, [pc, #16]	; (8006f2c <LCD_DrawVLine+0x48>)
 8006f1a:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8006f1e:	68c1      	ldr	r1, [r0, #12]
 8006f20:	68cc      	ldr	r4, [r1, #12]
 8006f22:	4629      	mov	r1, r5
 8006f24:	47a0      	blx	r4
 8006f26:	bd38      	pop	{r3, r4, r5, pc}
 8006f28:	200000b0 	.word	0x200000b0
 8006f2c:	200004d8 	.word	0x200004d8

08006f30 <LCD_FillRect>:
 8006f30:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006f32:	460e      	mov	r6, r1
 8006f34:	4912      	ldr	r1, [pc, #72]	; (8006f80 <LCD_FillRect+0x50>)
 8006f36:	680c      	ldr	r4, [r1, #0]
 8006f38:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8006f3c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8006f40:	4288      	cmp	r0, r1
 8006f42:	bfa8      	it	ge
 8006f44:	4601      	movge	r1, r0
 8006f46:	42aa      	cmp	r2, r5
 8006f48:	bfb8      	it	lt
 8006f4a:	4615      	movlt	r5, r2
 8006f4c:	428d      	cmp	r5, r1
 8006f4e:	db14      	blt.n	8006f7a <LCD_FillRect+0x4a>
 8006f50:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8006f54:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8006f58:	4296      	cmp	r6, r2
 8006f5a:	bfa8      	it	ge
 8006f5c:	4632      	movge	r2, r6
 8006f5e:	4283      	cmp	r3, r0
 8006f60:	bfa8      	it	ge
 8006f62:	4603      	movge	r3, r0
 8006f64:	4293      	cmp	r3, r2
 8006f66:	db08      	blt.n	8006f7a <LCD_FillRect+0x4a>
 8006f68:	7c64      	ldrb	r4, [r4, #17]
 8006f6a:	4806      	ldr	r0, [pc, #24]	; (8006f84 <LCD_FillRect+0x54>)
 8006f6c:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8006f70:	68c4      	ldr	r4, [r0, #12]
 8006f72:	9300      	str	r3, [sp, #0]
 8006f74:	6924      	ldr	r4, [r4, #16]
 8006f76:	462b      	mov	r3, r5
 8006f78:	47a0      	blx	r4
 8006f7a:	b002      	add	sp, #8
 8006f7c:	bd70      	pop	{r4, r5, r6, pc}
 8006f7e:	bf00      	nop
 8006f80:	200000b0 	.word	0x200000b0
 8006f84:	200004d8 	.word	0x200004d8

08006f88 <LCD__DrawBitmap_1bpp>:
 8006f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f8c:	f8df c1ac 	ldr.w	ip, [pc, #428]	; 800713c <LCD__DrawBitmap_1bpp+0x1b4>
 8006f90:	b08f      	sub	sp, #60	; 0x3c
 8006f92:	f8dc c000 	ldr.w	ip, [ip]
 8006f96:	9009      	str	r0, [sp, #36]	; 0x24
 8006f98:	460e      	mov	r6, r1
 8006f9a:	4615      	mov	r5, r2
 8006f9c:	469b      	mov	fp, r3
 8006f9e:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8006fa0:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 8006fa4:	f1bc 0f00 	cmp.w	ip, #0
 8006fa8:	d00d      	beq.n	8006fc6 <LCD__DrawBitmap_1bpp+0x3e>
 8006faa:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8006fac:	9e19      	ldr	r6, [sp, #100]	; 0x64
 8006fae:	9500      	str	r5, [sp, #0]
 8006fb0:	9601      	str	r6, [sp, #4]
 8006fb2:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006fb4:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8006fb6:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8006fb8:	9702      	str	r7, [sp, #8]
 8006fba:	9503      	str	r5, [sp, #12]
 8006fbc:	9404      	str	r4, [sp, #16]
 8006fbe:	9605      	str	r6, [sp, #20]
 8006fc0:	f8dc 4000 	ldr.w	r4, [ip]
 8006fc4:	e053      	b.n	800706e <LCD__DrawBitmap_1bpp+0xe6>
 8006fc6:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8006fc8:	9819      	ldr	r0, [sp, #100]	; 0x64
 8006fca:	ea47 0300 	orr.w	r3, r7, r0
 8006fce:	2b01      	cmp	r3, #1
 8006fd0:	d14f      	bne.n	8007072 <LCD__DrawBitmap_1bpp+0xea>
 8006fd2:	4b58      	ldr	r3, [pc, #352]	; (8007134 <LCD__DrawBitmap_1bpp+0x1ac>)
 8006fd4:	6818      	ldr	r0, [r3, #0]
 8006fd6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8006fda:	1a51      	subs	r1, r2, r1
 8006fdc:	2900      	cmp	r1, #0
 8006fde:	dd08      	ble.n	8006ff2 <LCD__DrawBitmap_1bpp+0x6a>
 8006fe0:	ebc1 030b 	rsb	r3, r1, fp
 8006fe4:	2b00      	cmp	r3, #0
 8006fe6:	f340 80a2 	ble.w	800712e <LCD__DrawBitmap_1bpp+0x1a6>
 8006fea:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006fec:	fb07 4401 	mla	r4, r7, r1, r4
 8006ff0:	e001      	b.n	8006ff6 <LCD__DrawBitmap_1bpp+0x6e>
 8006ff2:	465b      	mov	r3, fp
 8006ff4:	4632      	mov	r2, r6
 8006ff6:	445e      	add	r6, fp
 8006ff8:	f9b0 100e 	ldrsh.w	r1, [r0, #14]
 8006ffc:	3e01      	subs	r6, #1
 8006ffe:	1a76      	subs	r6, r6, r1
 8007000:	2e00      	cmp	r6, #0
 8007002:	dd03      	ble.n	800700c <LCD__DrawBitmap_1bpp+0x84>
 8007004:	1b9b      	subs	r3, r3, r6
 8007006:	2b00      	cmp	r3, #0
 8007008:	f340 8091 	ble.w	800712e <LCD__DrawBitmap_1bpp+0x1a6>
 800700c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800700e:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 8007012:	4429      	add	r1, r5
 8007014:	3901      	subs	r1, #1
 8007016:	1b89      	subs	r1, r1, r6
 8007018:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800701a:	2900      	cmp	r1, #0
 800701c:	bfc8      	it	gt
 800701e:	ebc1 0505 	rsbgt	r5, r1, r5
 8007022:	ebc8 0106 	rsb	r1, r8, r6
 8007026:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800702a:	42b1      	cmp	r1, r6
 800702c:	da0c      	bge.n	8007048 <LCD__DrawBitmap_1bpp+0xc0>
 800702e:	ebc1 0c06 	rsb	ip, r1, r6
 8007032:	eb08 070c 	add.w	r7, r8, ip
 8007036:	1b8e      	subs	r6, r1, r6
 8007038:	f02c 0c07 	bic.w	ip, ip, #7
 800703c:	4435      	add	r5, r6
 800703e:	eb04 04e7 	add.w	r4, r4, r7, asr #3
 8007042:	4461      	add	r1, ip
 8007044:	f007 0807 	and.w	r8, r7, #7
 8007048:	2d00      	cmp	r5, #0
 800704a:	dd70      	ble.n	800712e <LCD__DrawBitmap_1bpp+0x1a6>
 800704c:	7c46      	ldrb	r6, [r0, #17]
 800704e:	483a      	ldr	r0, [pc, #232]	; (8007138 <LCD__DrawBitmap_1bpp+0x1b0>)
 8007050:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8007052:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 8007056:	68c6      	ldr	r6, [r0, #12]
 8007058:	9701      	str	r7, [sp, #4]
 800705a:	9403      	str	r4, [sp, #12]
 800705c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800705e:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 8007060:	9300      	str	r3, [sp, #0]
 8007062:	9702      	str	r7, [sp, #8]
 8007064:	f8cd 8010 	str.w	r8, [sp, #16]
 8007068:	9405      	str	r4, [sp, #20]
 800706a:	6874      	ldr	r4, [r6, #4]
 800706c:	462b      	mov	r3, r5
 800706e:	47a0      	blx	r4
 8007070:	e05d      	b.n	800712e <LCD__DrawBitmap_1bpp+0x1a6>
 8007072:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8007074:	f1c7 0708 	rsb	r7, r7, #8
 8007078:	970c      	str	r7, [sp, #48]	; 0x30
 800707a:	4667      	mov	r7, ip
 800707c:	45dc      	cmp	ip, fp
 800707e:	da56      	bge.n	800712e <LCD__DrawBitmap_1bpp+0x1a6>
 8007080:	4b2c      	ldr	r3, [pc, #176]	; (8007134 <LCD__DrawBitmap_1bpp+0x1ac>)
 8007082:	9819      	ldr	r0, [sp, #100]	; 0x64
 8007084:	681b      	ldr	r3, [r3, #0]
 8007086:	4430      	add	r0, r6
 8007088:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 800708c:	900a      	str	r0, [sp, #40]	; 0x28
 800708e:	1e41      	subs	r1, r0, #1
 8007090:	4291      	cmp	r1, r2
 8007092:	910b      	str	r1, [sp, #44]	; 0x2c
 8007094:	db45      	blt.n	8007122 <LCD__DrawBitmap_1bpp+0x19a>
 8007096:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 800709a:	429e      	cmp	r6, r3
 800709c:	dc41      	bgt.n	8007122 <LCD__DrawBitmap_1bpp+0x19a>
 800709e:	f04f 0800 	mov.w	r8, #0
 80070a2:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 80070a6:	9408      	str	r4, [sp, #32]
 80070a8:	46c2      	mov	sl, r8
 80070aa:	45aa      	cmp	sl, r5
 80070ac:	da39      	bge.n	8007122 <LCD__DrawBitmap_1bpp+0x19a>
 80070ae:	f1b8 0f00 	cmp.w	r8, #0
 80070b2:	d105      	bne.n	80070c0 <LCD__DrawBitmap_1bpp+0x138>
 80070b4:	9a08      	ldr	r2, [sp, #32]
 80070b6:	7817      	ldrb	r7, [r2, #0]
 80070b8:	3201      	adds	r2, #1
 80070ba:	9208      	str	r2, [sp, #32]
 80070bc:	f04f 0808 	mov.w	r8, #8
 80070c0:	980c      	ldr	r0, [sp, #48]	; 0x30
 80070c2:	991a      	ldr	r1, [sp, #104]	; 0x68
 80070c4:	4a1b      	ldr	r2, [pc, #108]	; (8007134 <LCD__DrawBitmap_1bpp+0x1ac>)
 80070c6:	fa47 f300 	asr.w	r3, r7, r0
 80070ca:	ebc1 0808 	rsb	r8, r1, r8
 80070ce:	408f      	lsls	r7, r1
 80070d0:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 80070d4:	b2ff      	uxtb	r7, r7
 80070d6:	d103      	bne.n	80070e0 <LCD__DrawBitmap_1bpp+0x158>
 80070d8:	6810      	ldr	r0, [r2, #0]
 80070da:	7c00      	ldrb	r0, [r0, #16]
 80070dc:	0780      	lsls	r0, r0, #30
 80070de:	d41b      	bmi.n	8007118 <LCD__DrawBitmap_1bpp+0x190>
 80070e0:	6812      	ldr	r2, [r2, #0]
 80070e2:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80070e4:	6810      	ldr	r0, [r2, #0]
 80070e6:	900d      	str	r0, [sp, #52]	; 0x34
 80070e8:	981d      	ldr	r0, [sp, #116]	; 0x74
 80070ea:	b110      	cbz	r0, 80070f2 <LCD__DrawBitmap_1bpp+0x16a>
 80070ec:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 80070f0:	e000      	b.n	80070f4 <LCD__DrawBitmap_1bpp+0x16c>
 80070f2:	b2db      	uxtb	r3, r3
 80070f4:	9918      	ldr	r1, [sp, #96]	; 0x60
 80070f6:	6013      	str	r3, [r2, #0]
 80070f8:	1e4a      	subs	r2, r1, #1
 80070fa:	444a      	add	r2, r9
 80070fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80070fe:	f8cd c01c 	str.w	ip, [sp, #28]
 8007102:	4648      	mov	r0, r9
 8007104:	4631      	mov	r1, r6
 8007106:	f7ff ff13 	bl	8006f30 <LCD_FillRect>
 800710a:	4b0a      	ldr	r3, [pc, #40]	; (8007134 <LCD__DrawBitmap_1bpp+0x1ac>)
 800710c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800710e:	681b      	ldr	r3, [r3, #0]
 8007110:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8007114:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007116:	601a      	str	r2, [r3, #0]
 8007118:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800711a:	f10a 0a01 	add.w	sl, sl, #1
 800711e:	4499      	add	r9, r3
 8007120:	e7c3      	b.n	80070aa <LCD__DrawBitmap_1bpp+0x122>
 8007122:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8007124:	f10c 0c01 	add.w	ip, ip, #1
 8007128:	4434      	add	r4, r6
 800712a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800712c:	e7a6      	b.n	800707c <LCD__DrawBitmap_1bpp+0xf4>
 800712e:	b00f      	add	sp, #60	; 0x3c
 8007130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007134:	200000b0 	.word	0x200000b0
 8007138:	200004d8 	.word	0x200004d8
 800713c:	20000490 	.word	0x20000490

08007140 <LCD_DrawBitmap>:
 8007140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007144:	f8df c20c 	ldr.w	ip, [pc, #524]	; 8007354 <LCD_DrawBitmap+0x214>
 8007148:	b091      	sub	sp, #68	; 0x44
 800714a:	f8dc 9000 	ldr.w	r9, [ip]
 800714e:	9207      	str	r2, [sp, #28]
 8007150:	4605      	mov	r5, r0
 8007152:	4688      	mov	r8, r1
 8007154:	469b      	mov	fp, r3
 8007156:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 8007158:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 800715a:	f1b9 0f00 	cmp.w	r9, #0
 800715e:	d00c      	beq.n	800717a <LCD_DrawBitmap+0x3a>
 8007160:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007162:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007164:	9500      	str	r5, [sp, #0]
 8007166:	9701      	str	r7, [sp, #4]
 8007168:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 800716a:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 800716c:	9602      	str	r6, [sp, #8]
 800716e:	9503      	str	r5, [sp, #12]
 8007170:	9404      	str	r4, [sp, #16]
 8007172:	9705      	str	r7, [sp, #20]
 8007174:	f8d9 4000 	ldr.w	r4, [r9]
 8007178:	e081      	b.n	800727e <LCD_DrawBitmap+0x13e>
 800717a:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800717c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800717e:	ea47 0300 	orr.w	r3, r7, r0
 8007182:	2b01      	cmp	r3, #1
 8007184:	d17d      	bne.n	8007282 <LCD_DrawBitmap+0x142>
 8007186:	4b71      	ldr	r3, [pc, #452]	; (800734c <LCD_DrawBitmap+0x20c>)
 8007188:	6818      	ldr	r0, [r3, #0]
 800718a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800718e:	1a53      	subs	r3, r2, r1
 8007190:	2b00      	cmp	r3, #0
 8007192:	dd08      	ble.n	80071a6 <LCD_DrawBitmap+0x66>
 8007194:	ebc3 010b 	rsb	r1, r3, fp
 8007198:	2900      	cmp	r1, #0
 800719a:	f340 80d4 	ble.w	8007346 <LCD_DrawBitmap+0x206>
 800719e:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 80071a0:	fb07 4403 	mla	r4, r7, r3, r4
 80071a4:	e001      	b.n	80071aa <LCD_DrawBitmap+0x6a>
 80071a6:	4659      	mov	r1, fp
 80071a8:	4642      	mov	r2, r8
 80071aa:	44d8      	add	r8, fp
 80071ac:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 80071b0:	f108 38ff 	add.w	r8, r8, #4294967295
 80071b4:	ebc3 0808 	rsb	r8, r3, r8
 80071b8:	f1b8 0f00 	cmp.w	r8, #0
 80071bc:	dd04      	ble.n	80071c8 <LCD_DrawBitmap+0x88>
 80071be:	ebc8 0101 	rsb	r1, r8, r1
 80071c2:	2900      	cmp	r1, #0
 80071c4:	f340 80bf 	ble.w	8007346 <LCD_DrawBitmap+0x206>
 80071c8:	9b07      	ldr	r3, [sp, #28]
 80071ca:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 80071ce:	442b      	add	r3, r5
 80071d0:	3b01      	subs	r3, #1
 80071d2:	ebcc 0303 	rsb	r3, ip, r3
 80071d6:	2b00      	cmp	r3, #0
 80071d8:	dd02      	ble.n	80071e0 <LCD_DrawBitmap+0xa0>
 80071da:	9f07      	ldr	r7, [sp, #28]
 80071dc:	1aff      	subs	r7, r7, r3
 80071de:	9707      	str	r7, [sp, #28]
 80071e0:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 80071e4:	4565      	cmp	r5, ip
 80071e6:	da33      	bge.n	8007250 <LCD_DrawBitmap+0x110>
 80071e8:	9f07      	ldr	r7, [sp, #28]
 80071ea:	ebc5 030c 	rsb	r3, r5, ip
 80071ee:	1aff      	subs	r7, r7, r3
 80071f0:	2e08      	cmp	r6, #8
 80071f2:	9707      	str	r7, [sp, #28]
 80071f4:	d027      	beq.n	8007246 <LCD_DrawBitmap+0x106>
 80071f6:	dc0d      	bgt.n	8007214 <LCD_DrawBitmap+0xd4>
 80071f8:	2e02      	cmp	r6, #2
 80071fa:	d014      	beq.n	8007226 <LCD_DrawBitmap+0xe6>
 80071fc:	2e04      	cmp	r6, #4
 80071fe:	d01a      	beq.n	8007236 <LCD_DrawBitmap+0xf6>
 8007200:	2e01      	cmp	r6, #1
 8007202:	d126      	bne.n	8007252 <LCD_DrawBitmap+0x112>
 8007204:	f023 0c07 	bic.w	ip, r3, #7
 8007208:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 800720c:	4465      	add	r5, ip
 800720e:	f003 0307 	and.w	r3, r3, #7
 8007212:	e01e      	b.n	8007252 <LCD_DrawBitmap+0x112>
 8007214:	2e18      	cmp	r6, #24
 8007216:	d018      	beq.n	800724a <LCD_DrawBitmap+0x10a>
 8007218:	2e20      	cmp	r6, #32
 800721a:	d016      	beq.n	800724a <LCD_DrawBitmap+0x10a>
 800721c:	2e10      	cmp	r6, #16
 800721e:	d118      	bne.n	8007252 <LCD_DrawBitmap+0x112>
 8007220:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8007224:	e013      	b.n	800724e <LCD_DrawBitmap+0x10e>
 8007226:	f023 0c03 	bic.w	ip, r3, #3
 800722a:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 800722e:	4465      	add	r5, ip
 8007230:	f003 0303 	and.w	r3, r3, #3
 8007234:	e00d      	b.n	8007252 <LCD_DrawBitmap+0x112>
 8007236:	f023 0c01 	bic.w	ip, r3, #1
 800723a:	eb04 0463 	add.w	r4, r4, r3, asr #1
 800723e:	4465      	add	r5, ip
 8007240:	f003 0301 	and.w	r3, r3, #1
 8007244:	e005      	b.n	8007252 <LCD_DrawBitmap+0x112>
 8007246:	441c      	add	r4, r3
 8007248:	e001      	b.n	800724e <LCD_DrawBitmap+0x10e>
 800724a:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800724e:	4665      	mov	r5, ip
 8007250:	2300      	movs	r3, #0
 8007252:	9f07      	ldr	r7, [sp, #28]
 8007254:	2f00      	cmp	r7, #0
 8007256:	dd76      	ble.n	8007346 <LCD_DrawBitmap+0x206>
 8007258:	f890 e011 	ldrb.w	lr, [r0, #17]
 800725c:	483c      	ldr	r0, [pc, #240]	; (8007350 <LCD_DrawBitmap+0x210>)
 800725e:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8007260:	f850 002e 	ldr.w	r0, [r0, lr, lsl #2]
 8007264:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 8007268:	9403      	str	r4, [sp, #12]
 800726a:	e88d 0042 	stmia.w	sp, {r1, r6}
 800726e:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 8007270:	9304      	str	r3, [sp, #16]
 8007272:	9702      	str	r7, [sp, #8]
 8007274:	9405      	str	r4, [sp, #20]
 8007276:	f8de 4004 	ldr.w	r4, [lr, #4]
 800727a:	9b07      	ldr	r3, [sp, #28]
 800727c:	4629      	mov	r1, r5
 800727e:	47a0      	blx	r4
 8007280:	e061      	b.n	8007346 <LCD_DrawBitmap+0x206>
 8007282:	f1c6 0708 	rsb	r7, r6, #8
 8007286:	970e      	str	r7, [sp, #56]	; 0x38
 8007288:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800728c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800728e:	455f      	cmp	r7, fp
 8007290:	da59      	bge.n	8007346 <LCD_DrawBitmap+0x206>
 8007292:	4b2e      	ldr	r3, [pc, #184]	; (800734c <LCD_DrawBitmap+0x20c>)
 8007294:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007296:	681b      	ldr	r3, [r3, #0]
 8007298:	4447      	add	r7, r8
 800729a:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 800729e:	970c      	str	r7, [sp, #48]	; 0x30
 80072a0:	3f01      	subs	r7, #1
 80072a2:	4297      	cmp	r7, r2
 80072a4:	970d      	str	r7, [sp, #52]	; 0x34
 80072a6:	db46      	blt.n	8007336 <LCD_DrawBitmap+0x1f6>
 80072a8:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 80072ac:	4598      	cmp	r8, r3
 80072ae:	dc42      	bgt.n	8007336 <LCD_DrawBitmap+0x1f6>
 80072b0:	f04f 0a00 	mov.w	sl, #0
 80072b4:	940b      	str	r4, [sp, #44]	; 0x2c
 80072b6:	46ac      	mov	ip, r5
 80072b8:	4657      	mov	r7, sl
 80072ba:	9807      	ldr	r0, [sp, #28]
 80072bc:	4287      	cmp	r7, r0
 80072be:	da3a      	bge.n	8007336 <LCD_DrawBitmap+0x1f6>
 80072c0:	f1ba 0f00 	cmp.w	sl, #0
 80072c4:	d106      	bne.n	80072d4 <LCD_DrawBitmap+0x194>
 80072c6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80072c8:	f890 9000 	ldrb.w	r9, [r0]
 80072cc:	3001      	adds	r0, #1
 80072ce:	900b      	str	r0, [sp, #44]	; 0x2c
 80072d0:	f04f 0a08 	mov.w	sl, #8
 80072d4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80072d6:	4a1d      	ldr	r2, [pc, #116]	; (800734c <LCD_DrawBitmap+0x20c>)
 80072d8:	fa49 f301 	asr.w	r3, r9, r1
 80072dc:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 80072e0:	fa09 f906 	lsl.w	r9, r9, r6
 80072e4:	fa5f f989 	uxtb.w	r9, r9
 80072e8:	ebc6 0a0a 	rsb	sl, r6, sl
 80072ec:	d103      	bne.n	80072f6 <LCD_DrawBitmap+0x1b6>
 80072ee:	6810      	ldr	r0, [r2, #0]
 80072f0:	7c00      	ldrb	r0, [r0, #16]
 80072f2:	0780      	lsls	r0, r0, #30
 80072f4:	d41b      	bmi.n	800732e <LCD_DrawBitmap+0x1ee>
 80072f6:	6812      	ldr	r2, [r2, #0]
 80072f8:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80072fa:	6810      	ldr	r0, [r2, #0]
 80072fc:	900f      	str	r0, [sp, #60]	; 0x3c
 80072fe:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8007300:	b110      	cbz	r0, 8007308 <LCD_DrawBitmap+0x1c8>
 8007302:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8007306:	e000      	b.n	800730a <LCD_DrawBitmap+0x1ca>
 8007308:	b2db      	uxtb	r3, r3
 800730a:	991a      	ldr	r1, [sp, #104]	; 0x68
 800730c:	6013      	str	r3, [r2, #0]
 800730e:	1e4a      	subs	r2, r1, #1
 8007310:	4462      	add	r2, ip
 8007312:	4660      	mov	r0, ip
 8007314:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007316:	f8cd c020 	str.w	ip, [sp, #32]
 800731a:	4641      	mov	r1, r8
 800731c:	f7ff fe08 	bl	8006f30 <LCD_FillRect>
 8007320:	4b0a      	ldr	r3, [pc, #40]	; (800734c <LCD_DrawBitmap+0x20c>)
 8007322:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8007324:	681b      	ldr	r3, [r3, #0]
 8007326:	f8dd c020 	ldr.w	ip, [sp, #32]
 800732a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800732c:	601a      	str	r2, [r3, #0]
 800732e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8007330:	3701      	adds	r7, #1
 8007332:	449c      	add	ip, r3
 8007334:	e7c1      	b.n	80072ba <LCD_DrawBitmap+0x17a>
 8007336:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8007338:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800733c:	3701      	adds	r7, #1
 800733e:	970a      	str	r7, [sp, #40]	; 0x28
 8007340:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8007342:	443c      	add	r4, r7
 8007344:	e7a2      	b.n	800728c <LCD_DrawBitmap+0x14c>
 8007346:	b011      	add	sp, #68	; 0x44
 8007348:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800734c:	200000b0 	.word	0x200000b0
 8007350:	200004d8 	.word	0x200004d8
 8007354:	20000490 	.word	0x20000490

08007358 <LCD_SetClipRectMax>:
 8007358:	b508      	push	{r3, lr}
 800735a:	4b05      	ldr	r3, [pc, #20]	; (8007370 <LCD_SetClipRectMax+0x18>)
 800735c:	6819      	ldr	r1, [r3, #0]
 800735e:	4b05      	ldr	r3, [pc, #20]	; (8007374 <LCD_SetClipRectMax+0x1c>)
 8007360:	7c4a      	ldrb	r2, [r1, #17]
 8007362:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8007366:	68c3      	ldr	r3, [r0, #12]
 8007368:	3108      	adds	r1, #8
 800736a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800736c:	4798      	blx	r3
 800736e:	bd08      	pop	{r3, pc}
 8007370:	200000b0 	.word	0x200000b0
 8007374:	200004d8 	.word	0x200004d8

08007378 <LCD_Color2Index>:
 8007378:	b508      	push	{r3, lr}
 800737a:	4b05      	ldr	r3, [pc, #20]	; (8007390 <LCD_Color2Index+0x18>)
 800737c:	681b      	ldr	r3, [r3, #0]
 800737e:	7c5a      	ldrb	r2, [r3, #17]
 8007380:	4b04      	ldr	r3, [pc, #16]	; (8007394 <LCD_Color2Index+0x1c>)
 8007382:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8007386:	691b      	ldr	r3, [r3, #16]
 8007388:	681b      	ldr	r3, [r3, #0]
 800738a:	4798      	blx	r3
 800738c:	bd08      	pop	{r3, pc}
 800738e:	bf00      	nop
 8007390:	200000b0 	.word	0x200000b0
 8007394:	200004d8 	.word	0x200004d8

08007398 <LCD_Index2Color>:
 8007398:	b508      	push	{r3, lr}
 800739a:	4b05      	ldr	r3, [pc, #20]	; (80073b0 <LCD_Index2Color+0x18>)
 800739c:	681b      	ldr	r3, [r3, #0]
 800739e:	7c5a      	ldrb	r2, [r3, #17]
 80073a0:	4b04      	ldr	r3, [pc, #16]	; (80073b4 <LCD_Index2Color+0x1c>)
 80073a2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80073a6:	691b      	ldr	r3, [r3, #16]
 80073a8:	685b      	ldr	r3, [r3, #4]
 80073aa:	4798      	blx	r3
 80073ac:	bd08      	pop	{r3, pc}
 80073ae:	bf00      	nop
 80073b0:	200000b0 	.word	0x200000b0
 80073b4:	200004d8 	.word	0x200004d8

080073b8 <LCD_SetColorIndex>:
 80073b8:	4b04      	ldr	r3, [pc, #16]	; (80073cc <LCD_SetColorIndex+0x14>)
 80073ba:	681b      	ldr	r3, [r3, #0]
 80073bc:	7c1a      	ldrb	r2, [r3, #16]
 80073be:	0752      	lsls	r2, r2, #29
 80073c0:	bf4c      	ite	mi
 80073c2:	6b9b      	ldrmi	r3, [r3, #56]	; 0x38
 80073c4:	6bdb      	ldrpl	r3, [r3, #60]	; 0x3c
 80073c6:	6018      	str	r0, [r3, #0]
 80073c8:	4770      	bx	lr
 80073ca:	bf00      	nop
 80073cc:	200000b0 	.word	0x200000b0

080073d0 <_SetColor>:
 80073d0:	b508      	push	{r3, lr}
 80073d2:	4b06      	ldr	r3, [pc, #24]	; (80073ec <_SetColor+0x1c>)
 80073d4:	681b      	ldr	r3, [r3, #0]
 80073d6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80073d8:	4281      	cmp	r1, r0
 80073da:	d006      	beq.n	80073ea <_SetColor+0x1a>
 80073dc:	6318      	str	r0, [r3, #48]	; 0x30
 80073de:	f7ff ffcb 	bl	8007378 <LCD_Color2Index>
 80073e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80073e6:	f7ff bfe7 	b.w	80073b8 <LCD_SetColorIndex>
 80073ea:	bd08      	pop	{r3, pc}
 80073ec:	200000b0 	.word	0x200000b0

080073f0 <LCD_SetBkColorIndex>:
 80073f0:	4b04      	ldr	r3, [pc, #16]	; (8007404 <LCD_SetBkColorIndex+0x14>)
 80073f2:	681b      	ldr	r3, [r3, #0]
 80073f4:	7c1a      	ldrb	r2, [r3, #16]
 80073f6:	0752      	lsls	r2, r2, #29
 80073f8:	bf4c      	ite	mi
 80073fa:	6bdb      	ldrmi	r3, [r3, #60]	; 0x3c
 80073fc:	6b9b      	ldrpl	r3, [r3, #56]	; 0x38
 80073fe:	6018      	str	r0, [r3, #0]
 8007400:	4770      	bx	lr
 8007402:	bf00      	nop
 8007404:	200000b0 	.word	0x200000b0

08007408 <_SetBkColor>:
 8007408:	b508      	push	{r3, lr}
 800740a:	4b06      	ldr	r3, [pc, #24]	; (8007424 <_SetBkColor+0x1c>)
 800740c:	681b      	ldr	r3, [r3, #0]
 800740e:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8007410:	4281      	cmp	r1, r0
 8007412:	d006      	beq.n	8007422 <_SetBkColor+0x1a>
 8007414:	6358      	str	r0, [r3, #52]	; 0x34
 8007416:	f7ff ffaf 	bl	8007378 <LCD_Color2Index>
 800741a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800741e:	f7ff bfe7 	b.w	80073f0 <LCD_SetBkColorIndex>
 8007422:	bd08      	pop	{r3, pc}
 8007424:	200000b0 	.word	0x200000b0

08007428 <LCD_SetBkColor>:
 8007428:	b508      	push	{r3, lr}
 800742a:	4b02      	ldr	r3, [pc, #8]	; (8007434 <LCD_SetBkColor+0xc>)
 800742c:	681b      	ldr	r3, [r3, #0]
 800742e:	685b      	ldr	r3, [r3, #4]
 8007430:	4798      	blx	r3
 8007432:	bd08      	pop	{r3, pc}
 8007434:	20000098 	.word	0x20000098

08007438 <LCD_SetColor>:
 8007438:	b508      	push	{r3, lr}
 800743a:	4b02      	ldr	r3, [pc, #8]	; (8007444 <LCD_SetColor+0xc>)
 800743c:	681b      	ldr	r3, [r3, #0]
 800743e:	681b      	ldr	r3, [r3, #0]
 8007440:	4798      	blx	r3
 8007442:	bd08      	pop	{r3, pc}
 8007444:	20000098 	.word	0x20000098

08007448 <GUI__DivideRound32>:
 8007448:	b149      	cbz	r1, 800745e <GUI__DivideRound32+0x16>
 800744a:	2800      	cmp	r0, #0
 800744c:	ea4f 0361 	mov.w	r3, r1, asr #1
 8007450:	bfb4      	ite	lt
 8007452:	ebc3 0000 	rsblt	r0, r3, r0
 8007456:	18c0      	addge	r0, r0, r3
 8007458:	fb90 f0f1 	sdiv	r0, r0, r1
 800745c:	4770      	bx	lr
 800745e:	4608      	mov	r0, r1
 8007460:	4770      	bx	lr

08007462 <GUI__HandleEOLine>:
 8007462:	b513      	push	{r0, r1, r4, lr}
 8007464:	6802      	ldr	r2, [r0, #0]
 8007466:	4604      	mov	r4, r0
 8007468:	a802      	add	r0, sp, #8
 800746a:	f840 2d04 	str.w	r2, [r0, #-4]!
 800746e:	f000 fb2b 	bl	8007ac8 <GUI_UC__GetCharCodeInc>
 8007472:	b2c0      	uxtb	r0, r0
 8007474:	b120      	cbz	r0, 8007480 <GUI__HandleEOLine+0x1e>
 8007476:	280a      	cmp	r0, #10
 8007478:	d104      	bne.n	8007484 <GUI__HandleEOLine+0x22>
 800747a:	9b01      	ldr	r3, [sp, #4]
 800747c:	6023      	str	r3, [r4, #0]
 800747e:	e001      	b.n	8007484 <GUI__HandleEOLine+0x22>
 8007480:	2001      	movs	r0, #1
 8007482:	e000      	b.n	8007486 <GUI__HandleEOLine+0x24>
 8007484:	2000      	movs	r0, #0
 8007486:	b002      	add	sp, #8
 8007488:	bd10      	pop	{r4, pc}

0800748a <GUI__IntersectRect>:
 800748a:	880b      	ldrh	r3, [r1, #0]
 800748c:	b510      	push	{r4, lr}
 800748e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8007492:	b21a      	sxth	r2, r3
 8007494:	4294      	cmp	r4, r2
 8007496:	bfb8      	it	lt
 8007498:	8003      	strhlt	r3, [r0, #0]
 800749a:	884b      	ldrh	r3, [r1, #2]
 800749c:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 80074a0:	b21a      	sxth	r2, r3
 80074a2:	4294      	cmp	r4, r2
 80074a4:	bfb8      	it	lt
 80074a6:	8043      	strhlt	r3, [r0, #2]
 80074a8:	888b      	ldrh	r3, [r1, #4]
 80074aa:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80074ae:	b21a      	sxth	r2, r3
 80074b0:	4294      	cmp	r4, r2
 80074b2:	bfc8      	it	gt
 80074b4:	8083      	strhgt	r3, [r0, #4]
 80074b6:	88cb      	ldrh	r3, [r1, #6]
 80074b8:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80074bc:	b21a      	sxth	r2, r3
 80074be:	4291      	cmp	r1, r2
 80074c0:	bfc8      	it	gt
 80074c2:	80c3      	strhgt	r3, [r0, #6]
 80074c4:	bd10      	pop	{r4, pc}

080074c6 <GUI__IntersectRects>:
 80074c6:	b570      	push	{r4, r5, r6, lr}
 80074c8:	f9b2 3000 	ldrsh.w	r3, [r2]
 80074cc:	f9b1 4000 	ldrsh.w	r4, [r1]
 80074d0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80074d4:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 80074d8:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 80074dc:	429c      	cmp	r4, r3
 80074de:	bfb8      	it	lt
 80074e0:	461c      	movlt	r4, r3
 80074e2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80074e6:	429d      	cmp	r5, r3
 80074e8:	bfa8      	it	ge
 80074ea:	462b      	movge	r3, r5
 80074ec:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 80074f0:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 80074f4:	42ae      	cmp	r6, r5
 80074f6:	bfb8      	it	lt
 80074f8:	4635      	movlt	r5, r6
 80074fa:	b2a4      	uxth	r4, r4
 80074fc:	b2ad      	uxth	r5, r5
 80074fe:	4291      	cmp	r1, r2
 8007500:	bfb8      	it	lt
 8007502:	460a      	movlt	r2, r1
 8007504:	8004      	strh	r4, [r0, #0]
 8007506:	8085      	strh	r5, [r0, #4]
 8007508:	b224      	sxth	r4, r4
 800750a:	b22d      	sxth	r5, r5
 800750c:	b29b      	uxth	r3, r3
 800750e:	b292      	uxth	r2, r2
 8007510:	42a5      	cmp	r5, r4
 8007512:	8043      	strh	r3, [r0, #2]
 8007514:	80c2      	strh	r2, [r0, #6]
 8007516:	db06      	blt.n	8007526 <GUI__IntersectRects+0x60>
 8007518:	b210      	sxth	r0, r2
 800751a:	b21b      	sxth	r3, r3
 800751c:	4298      	cmp	r0, r3
 800751e:	bfb4      	ite	lt
 8007520:	2000      	movlt	r0, #0
 8007522:	2001      	movge	r0, #1
 8007524:	bd70      	pop	{r4, r5, r6, pc}
 8007526:	2000      	movs	r0, #0
 8007528:	bd70      	pop	{r4, r5, r6, pc}

0800752a <GUI__ReduceRect>:
 800752a:	880b      	ldrh	r3, [r1, #0]
 800752c:	b292      	uxth	r2, r2
 800752e:	4413      	add	r3, r2
 8007530:	8003      	strh	r3, [r0, #0]
 8007532:	888b      	ldrh	r3, [r1, #4]
 8007534:	1a9b      	subs	r3, r3, r2
 8007536:	8083      	strh	r3, [r0, #4]
 8007538:	884b      	ldrh	r3, [r1, #2]
 800753a:	4413      	add	r3, r2
 800753c:	8043      	strh	r3, [r0, #2]
 800753e:	88cb      	ldrh	r3, [r1, #6]
 8007540:	1a9a      	subs	r2, r3, r2
 8007542:	80c2      	strh	r2, [r0, #6]
 8007544:	4770      	bx	lr

08007546 <GUI__sqrt32>:
 8007546:	b510      	push	{r4, lr}
 8007548:	2110      	movs	r1, #16
 800754a:	2300      	movs	r3, #0
 800754c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8007550:	189c      	adds	r4, r3, r2
 8007552:	4284      	cmp	r4, r0
 8007554:	bf9c      	itt	ls
 8007556:	18a3      	addls	r3, r4, r2
 8007558:	ebc4 0000 	rsbls	r0, r4, r0
 800755c:	3901      	subs	r1, #1
 800755e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8007562:	ea4f 0292 	mov.w	r2, r2, lsr #2
 8007566:	d1f3      	bne.n	8007550 <GUI__sqrt32+0xa>
 8007568:	4618      	mov	r0, r3
 800756a:	bd10      	pop	{r4, pc}

0800756c <GUI__strcmp>:
 800756c:	b510      	push	{r4, lr}
 800756e:	4b09      	ldr	r3, [pc, #36]	; (8007594 <GUI__strcmp+0x28>)
 8007570:	2800      	cmp	r0, #0
 8007572:	bf08      	it	eq
 8007574:	4618      	moveq	r0, r3
 8007576:	2900      	cmp	r1, #0
 8007578:	bf08      	it	eq
 800757a:	4619      	moveq	r1, r3
 800757c:	2300      	movs	r3, #0
 800757e:	5cc4      	ldrb	r4, [r0, r3]
 8007580:	5cca      	ldrb	r2, [r1, r3]
 8007582:	42a2      	cmp	r2, r4
 8007584:	d104      	bne.n	8007590 <GUI__strcmp+0x24>
 8007586:	3301      	adds	r3, #1
 8007588:	2a00      	cmp	r2, #0
 800758a:	d1f8      	bne.n	800757e <GUI__strcmp+0x12>
 800758c:	4610      	mov	r0, r2
 800758e:	bd10      	pop	{r4, pc}
 8007590:	2001      	movs	r0, #1
 8007592:	bd10      	pop	{r4, pc}
 8007594:	0800ff44 	.word	0x0800ff44

08007598 <GUI__strcmp_hp>:
 8007598:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800759a:	460d      	mov	r5, r1
 800759c:	b160      	cbz	r0, 80075b8 <GUI__strcmp_hp+0x20>
 800759e:	f002 f951 	bl	8009844 <GUI_ALLOC_LockH>
 80075a2:	ac02      	add	r4, sp, #8
 80075a4:	4629      	mov	r1, r5
 80075a6:	f844 0d04 	str.w	r0, [r4, #-4]!
 80075aa:	f7ff ffdf 	bl	800756c <GUI__strcmp>
 80075ae:	4605      	mov	r5, r0
 80075b0:	4620      	mov	r0, r4
 80075b2:	f002 f955 	bl	8009860 <GUI_ALLOC_UnlockH>
 80075b6:	e000      	b.n	80075ba <GUI__strcmp_hp+0x22>
 80075b8:	2501      	movs	r5, #1
 80075ba:	4628      	mov	r0, r5
 80075bc:	b003      	add	sp, #12
 80075be:	bd30      	pop	{r4, r5, pc}

080075c0 <GUI__strlen>:
 80075c0:	f04f 33ff 	mov.w	r3, #4294967295
 80075c4:	b118      	cbz	r0, 80075ce <GUI__strlen+0xe>
 80075c6:	3301      	adds	r3, #1
 80075c8:	5cc2      	ldrb	r2, [r0, r3]
 80075ca:	2a00      	cmp	r2, #0
 80075cc:	d1fb      	bne.n	80075c6 <GUI__strlen+0x6>
 80075ce:	4618      	mov	r0, r3
 80075d0:	4770      	bx	lr
	...

080075d4 <GUI__SetText>:
 80075d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80075d6:	6807      	ldr	r7, [r0, #0]
 80075d8:	4605      	mov	r5, r0
 80075da:	4638      	mov	r0, r7
 80075dc:	460e      	mov	r6, r1
 80075de:	f7ff ffdb 	bl	8007598 <GUI__strcmp_hp>
 80075e2:	b908      	cbnz	r0, 80075e8 <GUI__SetText+0x14>
 80075e4:	2000      	movs	r0, #0
 80075e6:	e02f      	b.n	8007648 <GUI__SetText+0x74>
 80075e8:	4630      	mov	r0, r6
 80075ea:	f7ff ffe9 	bl	80075c0 <GUI__strlen>
 80075ee:	1c44      	adds	r4, r0, #1
 80075f0:	4638      	mov	r0, r7
 80075f2:	f002 f94d 	bl	8009890 <GUI_ALLOC_GetSize>
 80075f6:	4284      	cmp	r4, r0
 80075f8:	d110      	bne.n	800761c <GUI__SetText+0x48>
 80075fa:	2c00      	cmp	r4, #0
 80075fc:	d0f2      	beq.n	80075e4 <GUI__SetText+0x10>
 80075fe:	4638      	mov	r0, r7
 8007600:	f002 f920 	bl	8009844 <GUI_ALLOC_LockH>
 8007604:	ad02      	add	r5, sp, #8
 8007606:	4b11      	ldr	r3, [pc, #68]	; (800764c <GUI__SetText+0x78>)
 8007608:	f845 0d04 	str.w	r0, [r5, #-4]!
 800760c:	681b      	ldr	r3, [r3, #0]
 800760e:	4631      	mov	r1, r6
 8007610:	4622      	mov	r2, r4
 8007612:	4798      	blx	r3
 8007614:	4628      	mov	r0, r5
 8007616:	f002 f923 	bl	8009860 <GUI_ALLOC_UnlockH>
 800761a:	e014      	b.n	8007646 <GUI__SetText+0x72>
 800761c:	4620      	mov	r0, r4
 800761e:	f002 fad5 	bl	8009bcc <GUI_ALLOC_AllocNoInit>
 8007622:	4607      	mov	r7, r0
 8007624:	2800      	cmp	r0, #0
 8007626:	d0dd      	beq.n	80075e4 <GUI__SetText+0x10>
 8007628:	f002 f90c 	bl	8009844 <GUI_ALLOC_LockH>
 800762c:	ac02      	add	r4, sp, #8
 800762e:	4631      	mov	r1, r6
 8007630:	f844 0d04 	str.w	r0, [r4, #-4]!
 8007634:	f005 fed0 	bl	800d3d8 <strcpy>
 8007638:	4620      	mov	r0, r4
 800763a:	f002 f911 	bl	8009860 <GUI_ALLOC_UnlockH>
 800763e:	4628      	mov	r0, r5
 8007640:	f002 fac8 	bl	8009bd4 <GUI_ALLOC_FreePtr>
 8007644:	602f      	str	r7, [r5, #0]
 8007646:	2001      	movs	r0, #1
 8007648:	b003      	add	sp, #12
 800764a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800764c:	200000a0 	.word	0x200000a0

08007650 <GUI__ManageCacheEx>:
 8007650:	2801      	cmp	r0, #1
 8007652:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007654:	4604      	mov	r4, r0
 8007656:	460d      	mov	r5, r1
 8007658:	dc65      	bgt.n	8007726 <GUI__ManageCacheEx+0xd6>
 800765a:	4b34      	ldr	r3, [pc, #208]	; (800772c <GUI__ManageCacheEx+0xdc>)
 800765c:	681b      	ldr	r3, [r3, #0]
 800765e:	b103      	cbz	r3, 8007662 <GUI__ManageCacheEx+0x12>
 8007660:	4798      	blx	r3
 8007662:	2d01      	cmp	r5, #1
 8007664:	d004      	beq.n	8007670 <GUI__ManageCacheEx+0x20>
 8007666:	2d02      	cmp	r5, #2
 8007668:	d021      	beq.n	80076ae <GUI__ManageCacheEx+0x5e>
 800766a:	2d00      	cmp	r5, #0
 800766c:	d15b      	bne.n	8007726 <GUI__ManageCacheEx+0xd6>
 800766e:	e035      	b.n	80076dc <GUI__ManageCacheEx+0x8c>
 8007670:	4e2f      	ldr	r6, [pc, #188]	; (8007730 <GUI__ManageCacheEx+0xe0>)
 8007672:	f856 7024 	ldr.w	r7, [r6, r4, lsl #2]
 8007676:	b9b7      	cbnz	r7, 80076a6 <GUI__ManageCacheEx+0x56>
 8007678:	4620      	mov	r0, r4
 800767a:	f001 fa65 	bl	8008b48 <GUI_DEVICE__GetpDriver>
 800767e:	9001      	str	r0, [sp, #4]
 8007680:	2800      	cmp	r0, #0
 8007682:	d050      	beq.n	8007726 <GUI__ManageCacheEx+0xd6>
 8007684:	68c3      	ldr	r3, [r0, #12]
 8007686:	210d      	movs	r1, #13
 8007688:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800768a:	a801      	add	r0, sp, #4
 800768c:	4798      	blx	r3
 800768e:	4603      	mov	r3, r0
 8007690:	2800      	cmp	r0, #0
 8007692:	d048      	beq.n	8007726 <GUI__ManageCacheEx+0xd6>
 8007694:	9801      	ldr	r0, [sp, #4]
 8007696:	4629      	mov	r1, r5
 8007698:	4798      	blx	r3
 800769a:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 800769e:	3301      	adds	r3, #1
 80076a0:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
 80076a4:	e018      	b.n	80076d8 <GUI__ManageCacheEx+0x88>
 80076a6:	3701      	adds	r7, #1
 80076a8:	f846 7024 	str.w	r7, [r6, r4, lsl #2]
 80076ac:	e03b      	b.n	8007726 <GUI__ManageCacheEx+0xd6>
 80076ae:	4620      	mov	r0, r4
 80076b0:	f001 fa4a 	bl	8008b48 <GUI_DEVICE__GetpDriver>
 80076b4:	9001      	str	r0, [sp, #4]
 80076b6:	2800      	cmp	r0, #0
 80076b8:	d035      	beq.n	8007726 <GUI__ManageCacheEx+0xd6>
 80076ba:	68c3      	ldr	r3, [r0, #12]
 80076bc:	210d      	movs	r1, #13
 80076be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80076c0:	a801      	add	r0, sp, #4
 80076c2:	4798      	blx	r3
 80076c4:	4604      	mov	r4, r0
 80076c6:	2800      	cmp	r0, #0
 80076c8:	d02d      	beq.n	8007726 <GUI__ManageCacheEx+0xd6>
 80076ca:	4b1a      	ldr	r3, [pc, #104]	; (8007734 <GUI__ManageCacheEx+0xe4>)
 80076cc:	681b      	ldr	r3, [r3, #0]
 80076ce:	b103      	cbz	r3, 80076d2 <GUI__ManageCacheEx+0x82>
 80076d0:	4798      	blx	r3
 80076d2:	9801      	ldr	r0, [sp, #4]
 80076d4:	2102      	movs	r1, #2
 80076d6:	47a0      	blx	r4
 80076d8:	2000      	movs	r0, #0
 80076da:	e025      	b.n	8007728 <GUI__ManageCacheEx+0xd8>
 80076dc:	4d14      	ldr	r5, [pc, #80]	; (8007730 <GUI__ManageCacheEx+0xe0>)
 80076de:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 80076e2:	2b01      	cmp	r3, #1
 80076e4:	d001      	beq.n	80076ea <GUI__ManageCacheEx+0x9a>
 80076e6:	2001      	movs	r0, #1
 80076e8:	e015      	b.n	8007716 <GUI__ManageCacheEx+0xc6>
 80076ea:	4620      	mov	r0, r4
 80076ec:	f001 fa2c 	bl	8008b48 <GUI_DEVICE__GetpDriver>
 80076f0:	9001      	str	r0, [sp, #4]
 80076f2:	2800      	cmp	r0, #0
 80076f4:	d0f7      	beq.n	80076e6 <GUI__ManageCacheEx+0x96>
 80076f6:	68c3      	ldr	r3, [r0, #12]
 80076f8:	210d      	movs	r1, #13
 80076fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80076fc:	a801      	add	r0, sp, #4
 80076fe:	4798      	blx	r3
 8007700:	4606      	mov	r6, r0
 8007702:	2800      	cmp	r0, #0
 8007704:	d0ef      	beq.n	80076e6 <GUI__ManageCacheEx+0x96>
 8007706:	4b0b      	ldr	r3, [pc, #44]	; (8007734 <GUI__ManageCacheEx+0xe4>)
 8007708:	681b      	ldr	r3, [r3, #0]
 800770a:	b103      	cbz	r3, 800770e <GUI__ManageCacheEx+0xbe>
 800770c:	4798      	blx	r3
 800770e:	9801      	ldr	r0, [sp, #4]
 8007710:	2100      	movs	r1, #0
 8007712:	47b0      	blx	r6
 8007714:	2000      	movs	r0, #0
 8007716:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 800771a:	2b00      	cmp	r3, #0
 800771c:	bf18      	it	ne
 800771e:	3b01      	subne	r3, #1
 8007720:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 8007724:	e000      	b.n	8007728 <GUI__ManageCacheEx+0xd8>
 8007726:	2001      	movs	r0, #1
 8007728:	b003      	add	sp, #12
 800772a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800772c:	200002e8 	.word	0x200002e8
 8007730:	200002e0 	.word	0x200002e0
 8007734:	200002dc 	.word	0x200002dc

08007738 <GUI__ManageCache>:
 8007738:	4b02      	ldr	r3, [pc, #8]	; (8007744 <GUI__ManageCache+0xc>)
 800773a:	681b      	ldr	r3, [r3, #0]
 800773c:	4601      	mov	r1, r0
 800773e:	7c58      	ldrb	r0, [r3, #17]
 8007740:	f7ff bf86 	b.w	8007650 <GUI__ManageCacheEx>
 8007744:	200000b0 	.word	0x200000b0

08007748 <GUI__MixColors>:
 8007748:	f081 417f 	eor.w	r1, r1, #4278190080	; 0xff000000
 800774c:	f080 407f 	eor.w	r0, r0, #4278190080	; 0xff000000
 8007750:	0e0b      	lsrs	r3, r1, #24
 8007752:	ea4f 6310 	mov.w	r3, r0, lsr #24
 8007756:	b530      	push	{r4, r5, lr}
 8007758:	fb02 f303 	mul.w	r3, r2, r3
 800775c:	f04f 04ff 	mov.w	r4, #255	; 0xff
 8007760:	fbb3 f3f4 	udiv	r3, r3, r4
 8007764:	bf08      	it	eq
 8007766:	f020 417f 	biceq.w	r1, r0, #4278190080	; 0xff000000
 800776a:	1ae2      	subs	r2, r4, r3
 800776c:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8007770:	f001 25ff 	and.w	r5, r1, #4278255360	; 0xff00ff00
 8007774:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8007778:	f044 7480 	orr.w	r4, r4, #16777216	; 0x1000000
 800777c:	0a2d      	lsrs	r5, r5, #8
 800777e:	435c      	muls	r4, r3
 8007780:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8007784:	4343      	muls	r3, r0
 8007786:	fb02 4405 	mla	r4, r2, r5, r4
 800778a:	fb02 3201 	mla	r2, r2, r1, r3
 800778e:	0a12      	lsrs	r2, r2, #8
 8007790:	f004 24ff 	and.w	r4, r4, #4278255360	; 0xff00ff00
 8007794:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8007798:	ea44 0002 	orr.w	r0, r4, r2
 800779c:	f080 407f 	eor.w	r0, r0, #4278190080	; 0xff000000
 80077a0:	bd30      	pop	{r4, r5, pc}
	...

080077a4 <_OnExit>:
 80077a4:	b570      	push	{r4, r5, r6, lr}
 80077a6:	4c0a      	ldr	r4, [pc, #40]	; (80077d0 <_OnExit+0x2c>)
 80077a8:	4d0a      	ldr	r5, [pc, #40]	; (80077d4 <_OnExit+0x30>)
 80077aa:	6820      	ldr	r0, [r4, #0]
 80077ac:	4e0a      	ldr	r6, [pc, #40]	; (80077d8 <_OnExit+0x34>)
 80077ae:	f002 f835 	bl	800981c <GUI_ALLOC_FreeFixedBlock>
 80077b2:	6828      	ldr	r0, [r5, #0]
 80077b4:	f002 f832 	bl	800981c <GUI_ALLOC_FreeFixedBlock>
 80077b8:	6830      	ldr	r0, [r6, #0]
 80077ba:	f002 f82f 	bl	800981c <GUI_ALLOC_FreeFixedBlock>
 80077be:	4a07      	ldr	r2, [pc, #28]	; (80077dc <_OnExit+0x38>)
 80077c0:	2300      	movs	r3, #0
 80077c2:	6013      	str	r3, [r2, #0]
 80077c4:	4a06      	ldr	r2, [pc, #24]	; (80077e0 <_OnExit+0x3c>)
 80077c6:	6033      	str	r3, [r6, #0]
 80077c8:	602b      	str	r3, [r5, #0]
 80077ca:	6023      	str	r3, [r4, #0]
 80077cc:	6013      	str	r3, [r2, #0]
 80077ce:	bd70      	pop	{r4, r5, r6, pc}
 80077d0:	200002f0 	.word	0x200002f0
 80077d4:	200002ec 	.word	0x200002ec
 80077d8:	200002f4 	.word	0x200002f4
 80077dc:	200002f8 	.word	0x200002f8
 80077e0:	20000308 	.word	0x20000308

080077e4 <GUI__GetAlphaBuffer>:
 80077e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80077e8:	461c      	mov	r4, r3
 80077ea:	4b28      	ldr	r3, [pc, #160]	; (800788c <GUI__GetAlphaBuffer+0xa8>)
 80077ec:	4617      	mov	r7, r2
 80077ee:	681a      	ldr	r2, [r3, #0]
 80077f0:	4606      	mov	r6, r0
 80077f2:	4688      	mov	r8, r1
 80077f4:	b932      	cbnz	r2, 8007804 <GUI__GetAlphaBuffer+0x20>
 80077f6:	2201      	movs	r2, #1
 80077f8:	4825      	ldr	r0, [pc, #148]	; (8007890 <GUI__GetAlphaBuffer+0xac>)
 80077fa:	601a      	str	r2, [r3, #0]
 80077fc:	4b25      	ldr	r3, [pc, #148]	; (8007894 <GUI__GetAlphaBuffer+0xb0>)
 80077fe:	6003      	str	r3, [r0, #0]
 8007800:	f001 fa78 	bl	8008cf4 <GUI__RegisterExit>
 8007804:	4d24      	ldr	r5, [pc, #144]	; (8007898 <GUI__GetAlphaBuffer+0xb4>)
 8007806:	682b      	ldr	r3, [r5, #0]
 8007808:	b933      	cbnz	r3, 8007818 <GUI__GetAlphaBuffer+0x34>
 800780a:	4b24      	ldr	r3, [pc, #144]	; (800789c <GUI__GetAlphaBuffer+0xb8>)
 800780c:	681b      	ldr	r3, [r3, #0]
 800780e:	602b      	str	r3, [r5, #0]
 8007810:	b913      	cbnz	r3, 8007818 <GUI__GetAlphaBuffer+0x34>
 8007812:	f7ff fa9f 	bl	8006d54 <LCD_GetVXSizeMax>
 8007816:	6028      	str	r0, [r5, #0]
 8007818:	b10c      	cbz	r4, 800781e <GUI__GetAlphaBuffer+0x3a>
 800781a:	682b      	ldr	r3, [r5, #0]
 800781c:	6023      	str	r3, [r4, #0]
 800781e:	b196      	cbz	r6, 8007846 <GUI__GetAlphaBuffer+0x62>
 8007820:	4b1f      	ldr	r3, [pc, #124]	; (80078a0 <GUI__GetAlphaBuffer+0xbc>)
 8007822:	681a      	ldr	r2, [r3, #0]
 8007824:	4699      	mov	r9, r3
 8007826:	2400      	movs	r4, #0
 8007828:	b94a      	cbnz	r2, 800783e <GUI__GetAlphaBuffer+0x5a>
 800782a:	6828      	ldr	r0, [r5, #0]
 800782c:	0080      	lsls	r0, r0, #2
 800782e:	f002 f8d1 	bl	80099d4 <GUI_ALLOC_GetFixedBlock>
 8007832:	f1d0 0401 	rsbs	r4, r0, #1
 8007836:	f8c9 0000 	str.w	r0, [r9]
 800783a:	bf38      	it	cc
 800783c:	2400      	movcc	r4, #0
 800783e:	f8d9 3000 	ldr.w	r3, [r9]
 8007842:	6033      	str	r3, [r6, #0]
 8007844:	e000      	b.n	8007848 <GUI__GetAlphaBuffer+0x64>
 8007846:	4634      	mov	r4, r6
 8007848:	f1b8 0f00 	cmp.w	r8, #0
 800784c:	d00d      	beq.n	800786a <GUI__GetAlphaBuffer+0x86>
 800784e:	4e15      	ldr	r6, [pc, #84]	; (80078a4 <GUI__GetAlphaBuffer+0xc0>)
 8007850:	6833      	ldr	r3, [r6, #0]
 8007852:	b93b      	cbnz	r3, 8007864 <GUI__GetAlphaBuffer+0x80>
 8007854:	6828      	ldr	r0, [r5, #0]
 8007856:	0080      	lsls	r0, r0, #2
 8007858:	f002 f8bc 	bl	80099d4 <GUI_ALLOC_GetFixedBlock>
 800785c:	2800      	cmp	r0, #0
 800785e:	6030      	str	r0, [r6, #0]
 8007860:	bf08      	it	eq
 8007862:	2401      	moveq	r4, #1
 8007864:	6833      	ldr	r3, [r6, #0]
 8007866:	f8c8 3000 	str.w	r3, [r8]
 800786a:	b167      	cbz	r7, 8007886 <GUI__GetAlphaBuffer+0xa2>
 800786c:	4e0e      	ldr	r6, [pc, #56]	; (80078a8 <GUI__GetAlphaBuffer+0xc4>)
 800786e:	6833      	ldr	r3, [r6, #0]
 8007870:	b93b      	cbnz	r3, 8007882 <GUI__GetAlphaBuffer+0x9e>
 8007872:	6828      	ldr	r0, [r5, #0]
 8007874:	0080      	lsls	r0, r0, #2
 8007876:	f002 f8ad 	bl	80099d4 <GUI_ALLOC_GetFixedBlock>
 800787a:	2800      	cmp	r0, #0
 800787c:	6030      	str	r0, [r6, #0]
 800787e:	bf08      	it	eq
 8007880:	2401      	moveq	r4, #1
 8007882:	6833      	ldr	r3, [r6, #0]
 8007884:	603b      	str	r3, [r7, #0]
 8007886:	4620      	mov	r0, r4
 8007888:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800788c:	20000308 	.word	0x20000308
 8007890:	200002fc 	.word	0x200002fc
 8007894:	080077a5 	.word	0x080077a5
 8007898:	200002f8 	.word	0x200002f8
 800789c:	200004e0 	.word	0x200004e0
 80078a0:	200002f0 	.word	0x200002f0
 80078a4:	200002ec 	.word	0x200002ec
 80078a8:	200002f4 	.word	0x200002f4

080078ac <GUI__DoAlphaBlending>:
 80078ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80078b0:	b093      	sub	sp, #76	; 0x4c
 80078b2:	2400      	movs	r4, #0
 80078b4:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80078b6:	900b      	str	r0, [sp, #44]	; 0x2c
 80078b8:	910c      	str	r1, [sp, #48]	; 0x30
 80078ba:	4690      	mov	r8, r2
 80078bc:	461f      	mov	r7, r3
 80078be:	6034      	str	r4, [r6, #0]
 80078c0:	a80f      	add	r0, sp, #60	; 0x3c
 80078c2:	a910      	add	r1, sp, #64	; 0x40
 80078c4:	4622      	mov	r2, r4
 80078c6:	ab11      	add	r3, sp, #68	; 0x44
 80078c8:	f7ff ff8c 	bl	80077e4 <GUI__GetAlphaBuffer>
 80078cc:	4605      	mov	r5, r0
 80078ce:	2800      	cmp	r0, #0
 80078d0:	f040 80c5 	bne.w	8007a5e <GUI__DoAlphaBlending+0x1b2>
 80078d4:	4c64      	ldr	r4, [pc, #400]	; (8007a68 <GUI__DoAlphaBlending+0x1bc>)
 80078d6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80078d8:	6823      	ldr	r3, [r4, #0]
 80078da:	7c58      	ldrb	r0, [r3, #17]
 80078dc:	4b63      	ldr	r3, [pc, #396]	; (8007a6c <GUI__DoAlphaBlending+0x1c0>)
 80078de:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80078e2:	9307      	str	r3, [sp, #28]
 80078e4:	4297      	cmp	r7, r2
 80078e6:	bfa8      	it	ge
 80078e8:	4617      	movge	r7, r2
 80078ea:	691a      	ldr	r2, [r3, #16]
 80078ec:	920d      	str	r2, [sp, #52]	; 0x34
 80078ee:	970a      	str	r7, [sp, #40]	; 0x28
 80078f0:	f7ff fa14 	bl	8006d1c <GUI_GetBitsPerPixelEx>
 80078f4:	6823      	ldr	r3, [r4, #0]
 80078f6:	9008      	str	r0, [sp, #32]
 80078f8:	7c58      	ldrb	r0, [r3, #17]
 80078fa:	f7ff fa1b 	bl	8006d34 <GUI_GetpfIndex2ColorEx>
 80078fe:	4b5c      	ldr	r3, [pc, #368]	; (8007a70 <GUI__DoAlphaBlending+0x1c4>)
 8007900:	9004      	str	r0, [sp, #16]
 8007902:	4298      	cmp	r0, r3
 8007904:	d005      	beq.n	8007912 <GUI__DoAlphaBlending+0x66>
 8007906:	4b5b      	ldr	r3, [pc, #364]	; (8007a74 <GUI__DoAlphaBlending+0x1c8>)
 8007908:	1ac3      	subs	r3, r0, r3
 800790a:	bf18      	it	ne
 800790c:	2301      	movne	r3, #1
 800790e:	9306      	str	r3, [sp, #24]
 8007910:	e000      	b.n	8007914 <GUI__DoAlphaBlending+0x68>
 8007912:	9506      	str	r5, [sp, #24]
 8007914:	2500      	movs	r5, #0
 8007916:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8007918:	46ab      	mov	fp, r5
 800791a:	4643      	mov	r3, r8
 800791c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800791e:	f853 0b04 	ldr.w	r0, [r3], #4
 8007922:	9305      	str	r3, [sp, #20]
 8007924:	4790      	blx	r2
 8007926:	0e03      	lsrs	r3, r0, #24
 8007928:	4681      	mov	r9, r0
 800792a:	9309      	str	r3, [sp, #36]	; 0x24
 800792c:	f000 8087 	beq.w	8007a3e <GUI__DoAlphaBlending+0x192>
 8007930:	f1bb 0f00 	cmp.w	fp, #0
 8007934:	d13f      	bne.n	80079b6 <GUI__DoAlphaBlending+0x10a>
 8007936:	4b4c      	ldr	r3, [pc, #304]	; (8007a68 <GUI__DoAlphaBlending+0x1bc>)
 8007938:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 800793a:	681b      	ldr	r3, [r3, #0]
 800793c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800793e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8007942:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 8007946:	990c      	ldr	r1, [sp, #48]	; 0x30
 8007948:	442f      	add	r7, r5
 800794a:	42bb      	cmp	r3, r7
 800794c:	bfc8      	it	gt
 800794e:	ebc7 0b03 	rsbgt	fp, r7, r3
 8007952:	eb0b 0a05 	add.w	sl, fp, r5
 8007956:	bfc8      	it	gt
 8007958:	461f      	movgt	r7, r3
 800795a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800795c:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 8007960:	4453      	add	r3, sl
 8007962:	4494      	add	ip, r2
 8007964:	9300      	str	r3, [sp, #0]
 8007966:	9b07      	ldr	r3, [sp, #28]
 8007968:	9301      	str	r3, [sp, #4]
 800796a:	f10c 32ff 	add.w	r2, ip, #4294967295
 800796e:	4638      	mov	r0, r7
 8007970:	460b      	mov	r3, r1
 8007972:	f8cd c00c 	str.w	ip, [sp, #12]
 8007976:	f004 facf 	bl	800bf18 <GUI_ReadRectEx>
 800797a:	9a08      	ldr	r2, [sp, #32]
 800797c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800797e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8007982:	2a17      	cmp	r2, #23
 8007984:	dc06      	bgt.n	8007994 <GUI__DoAlphaBlending+0xe8>
 8007986:	4450      	add	r0, sl
 8007988:	ebcb 0104 	rsb	r1, fp, r4
 800798c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800798e:	f004 fbbf 	bl	800c110 <GUI__ExpandPixelIndicesEx>
 8007992:	e001      	b.n	8007998 <GUI__DoAlphaBlending+0xec>
 8007994:	9b06      	ldr	r3, [sp, #24]
 8007996:	b913      	cbnz	r3, 800799e <GUI__DoAlphaBlending+0xf2>
 8007998:	f04f 0b01 	mov.w	fp, #1
 800799c:	e00b      	b.n	80079b6 <GUI__DoAlphaBlending+0x10a>
 800799e:	ebc7 070c 	rsb	r7, r7, ip
 80079a2:	4482      	add	sl, r0
 80079a4:	f8da 0000 	ldr.w	r0, [sl]
 80079a8:	9a04      	ldr	r2, [sp, #16]
 80079aa:	4790      	blx	r2
 80079ac:	3f01      	subs	r7, #1
 80079ae:	f84a 0b04 	str.w	r0, [sl], #4
 80079b2:	d1f7      	bne.n	80079a4 <GUI__DoAlphaBlending+0xf8>
 80079b4:	e7f0      	b.n	8007998 <GUI__DoAlphaBlending+0xec>
 80079b6:	4b30      	ldr	r3, [pc, #192]	; (8007a78 <GUI__DoAlphaBlending+0x1cc>)
 80079b8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80079ba:	f8d3 c000 	ldr.w	ip, [r3]
 80079be:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80079c0:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 80079c4:	f1bc 0f00 	cmp.w	ip, #0
 80079c8:	d024      	beq.n	8007a14 <GUI__DoAlphaBlending+0x168>
 80079ca:	eb07 020a 	add.w	r2, r7, sl
 80079ce:	4451      	add	r1, sl
 80079d0:	9210      	str	r2, [sp, #64]	; 0x40
 80079d2:	4623      	mov	r3, r4
 80079d4:	910f      	str	r1, [sp, #60]	; 0x3c
 80079d6:	4640      	mov	r0, r8
 80079d8:	47e0      	blx	ip
 80079da:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80079dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80079de:	2300      	movs	r3, #0
 80079e0:	f858 1003 	ldr.w	r1, [r8, r3]
 80079e4:	f001 407f 	and.w	r0, r1, #4278190080	; 0xff000000
 80079e8:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 80079ec:	58e8      	ldr	r0, [r5, r3]
 80079ee:	d101      	bne.n	80079f4 <GUI__DoAlphaBlending+0x148>
 80079f0:	50d0      	str	r0, [r2, r3]
 80079f2:	e005      	b.n	8007a00 <GUI__DoAlphaBlending+0x154>
 80079f4:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 80079f8:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 80079fc:	bf08      	it	eq
 80079fe:	50d1      	streq	r1, [r2, r3]
 8007a00:	3c01      	subs	r4, #1
 8007a02:	f103 0304 	add.w	r3, r3, #4
 8007a06:	d1eb      	bne.n	80079e0 <GUI__DoAlphaBlending+0x134>
 8007a08:	6833      	ldr	r3, [r6, #0]
 8007a0a:	9710      	str	r7, [sp, #64]	; 0x40
 8007a0c:	f043 0301 	orr.w	r3, r3, #1
 8007a10:	6033      	str	r3, [r6, #0]
 8007a12:	e022      	b.n	8007a5a <GUI__DoAlphaBlending+0x1ae>
 8007a14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007a16:	2bff      	cmp	r3, #255	; 0xff
 8007a18:	d104      	bne.n	8007a24 <GUI__DoAlphaBlending+0x178>
 8007a1a:	f851 300a 	ldr.w	r3, [r1, sl]
 8007a1e:	f847 300a 	str.w	r3, [r7, sl]
 8007a22:	e013      	b.n	8007a4c <GUI__DoAlphaBlending+0x1a0>
 8007a24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007a26:	f851 100a 	ldr.w	r1, [r1, sl]
 8007a2a:	43da      	mvns	r2, r3
 8007a2c:	4b13      	ldr	r3, [pc, #76]	; (8007a7c <GUI__DoAlphaBlending+0x1d0>)
 8007a2e:	f029 407f 	bic.w	r0, r9, #4278190080	; 0xff000000
 8007a32:	681b      	ldr	r3, [r3, #0]
 8007a34:	b2d2      	uxtb	r2, r2
 8007a36:	4798      	blx	r3
 8007a38:	f847 000a 	str.w	r0, [r7, sl]
 8007a3c:	e002      	b.n	8007a44 <GUI__DoAlphaBlending+0x198>
 8007a3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8007a40:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 8007a44:	6833      	ldr	r3, [r6, #0]
 8007a46:	f043 0301 	orr.w	r3, r3, #1
 8007a4a:	6033      	str	r3, [r6, #0]
 8007a4c:	3c01      	subs	r4, #1
 8007a4e:	f105 0501 	add.w	r5, r5, #1
 8007a52:	d002      	beq.n	8007a5a <GUI__DoAlphaBlending+0x1ae>
 8007a54:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8007a58:	e75f      	b.n	800791a <GUI__DoAlphaBlending+0x6e>
 8007a5a:	9810      	ldr	r0, [sp, #64]	; 0x40
 8007a5c:	e000      	b.n	8007a60 <GUI__DoAlphaBlending+0x1b4>
 8007a5e:	4620      	mov	r0, r4
 8007a60:	b013      	add	sp, #76	; 0x4c
 8007a62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a66:	bf00      	nop
 8007a68:	200000b0 	.word	0x200000b0
 8007a6c:	200004d8 	.word	0x200004d8
 8007a70:	08009d3b 	.word	0x08009d3b
 8007a74:	08009d39 	.word	0x08009d39
 8007a78:	20000304 	.word	0x20000304
 8007a7c:	200000a4 	.word	0x200000a4

08007a80 <GUI__AllocAlphaBuffer>:
 8007a80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007a82:	b108      	cbz	r0, 8007a88 <GUI__AllocAlphaBuffer+0x8>
 8007a84:	aa03      	add	r2, sp, #12
 8007a86:	e000      	b.n	8007a8a <GUI__AllocAlphaBuffer+0xa>
 8007a88:	4602      	mov	r2, r0
 8007a8a:	a801      	add	r0, sp, #4
 8007a8c:	a902      	add	r1, sp, #8
 8007a8e:	2300      	movs	r3, #0
 8007a90:	f7ff fea8 	bl	80077e4 <GUI__GetAlphaBuffer>
 8007a94:	b005      	add	sp, #20
 8007a96:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08007a9c <GUI_SignalEvent>:
 8007a9c:	b508      	push	{r3, lr}
 8007a9e:	4b02      	ldr	r3, [pc, #8]	; (8007aa8 <GUI_SignalEvent+0xc>)
 8007aa0:	681b      	ldr	r3, [r3, #0]
 8007aa2:	b103      	cbz	r3, 8007aa6 <GUI_SignalEvent+0xa>
 8007aa4:	4798      	blx	r3
 8007aa6:	bd08      	pop	{r3, pc}
 8007aa8:	2000030c 	.word	0x2000030c

08007aac <GUI_AddDecMin>:
 8007aac:	b570      	push	{r4, r5, r6, lr}
 8007aae:	460c      	mov	r4, r1
 8007ab0:	4605      	mov	r5, r0
 8007ab2:	f001 f93b 	bl	8008d2c <GUI_Long2Len>
 8007ab6:	4623      	mov	r3, r4
 8007ab8:	b2c1      	uxtb	r1, r0
 8007aba:	2200      	movs	r2, #0
 8007abc:	4628      	mov	r0, r5
 8007abe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007ac2:	f001 b94b 	b.w	8008d5c <GUI_AddDecShift>
	...

08007ac8 <GUI_UC__GetCharCodeInc>:
 8007ac8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007aca:	4e08      	ldr	r6, [pc, #32]	; (8007aec <GUI_UC__GetCharCodeInc+0x24>)
 8007acc:	6804      	ldr	r4, [r0, #0]
 8007ace:	6833      	ldr	r3, [r6, #0]
 8007ad0:	4605      	mov	r5, r0
 8007ad2:	681b      	ldr	r3, [r3, #0]
 8007ad4:	4620      	mov	r0, r4
 8007ad6:	4798      	blx	r3
 8007ad8:	6833      	ldr	r3, [r6, #0]
 8007ada:	4607      	mov	r7, r0
 8007adc:	685b      	ldr	r3, [r3, #4]
 8007ade:	4620      	mov	r0, r4
 8007ae0:	4798      	blx	r3
 8007ae2:	4420      	add	r0, r4
 8007ae4:	6028      	str	r0, [r5, #0]
 8007ae6:	4638      	mov	r0, r7
 8007ae8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007aea:	bf00      	nop
 8007aec:	200004d0 	.word	0x200004d0

08007af0 <GUI_UC__NumChars2NumBytes>:
 8007af0:	b570      	push	{r4, r5, r6, lr}
 8007af2:	4604      	mov	r4, r0
 8007af4:	460e      	mov	r6, r1
 8007af6:	2500      	movs	r5, #0
 8007af8:	b146      	cbz	r6, 8007b0c <GUI_UC__NumChars2NumBytes+0x1c>
 8007afa:	4b05      	ldr	r3, [pc, #20]	; (8007b10 <GUI_UC__NumChars2NumBytes+0x20>)
 8007afc:	681b      	ldr	r3, [r3, #0]
 8007afe:	4620      	mov	r0, r4
 8007b00:	685b      	ldr	r3, [r3, #4]
 8007b02:	4798      	blx	r3
 8007b04:	3e01      	subs	r6, #1
 8007b06:	4404      	add	r4, r0
 8007b08:	4405      	add	r5, r0
 8007b0a:	e7f5      	b.n	8007af8 <GUI_UC__NumChars2NumBytes+0x8>
 8007b0c:	4628      	mov	r0, r5
 8007b0e:	bd70      	pop	{r4, r5, r6, pc}
 8007b10:	200004d0 	.word	0x200004d0

08007b14 <GUI__GetNumChars>:
 8007b14:	b513      	push	{r0, r1, r4, lr}
 8007b16:	9001      	str	r0, [sp, #4]
 8007b18:	b130      	cbz	r0, 8007b28 <GUI__GetNumChars+0x14>
 8007b1a:	2400      	movs	r4, #0
 8007b1c:	a801      	add	r0, sp, #4
 8007b1e:	f7ff ffd3 	bl	8007ac8 <GUI_UC__GetCharCodeInc>
 8007b22:	b110      	cbz	r0, 8007b2a <GUI__GetNumChars+0x16>
 8007b24:	3401      	adds	r4, #1
 8007b26:	e7f9      	b.n	8007b1c <GUI__GetNumChars+0x8>
 8007b28:	4604      	mov	r4, r0
 8007b2a:	4620      	mov	r0, r4
 8007b2c:	b002      	add	sp, #8
 8007b2e:	bd10      	pop	{r4, pc}

08007b30 <_OnExit>:
 8007b30:	4a03      	ldr	r2, [pc, #12]	; (8007b40 <_OnExit+0x10>)
 8007b32:	2300      	movs	r3, #0
 8007b34:	6013      	str	r3, [r2, #0]
 8007b36:	4a03      	ldr	r2, [pc, #12]	; (8007b44 <_OnExit+0x14>)
 8007b38:	6013      	str	r3, [r2, #0]
 8007b3a:	4a03      	ldr	r2, [pc, #12]	; (8007b48 <_OnExit+0x18>)
 8007b3c:	6013      	str	r3, [r2, #0]
 8007b3e:	4770      	bx	lr
 8007b40:	20000310 	.word	0x20000310
 8007b44:	2000031c 	.word	0x2000031c
 8007b48:	20000320 	.word	0x20000320

08007b4c <GUI_TIMER_Exec>:
 8007b4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007b50:	4b19      	ldr	r3, [pc, #100]	; (8007bb8 <GUI_TIMER_Exec+0x6c>)
 8007b52:	681f      	ldr	r7, [r3, #0]
 8007b54:	b085      	sub	sp, #20
 8007b56:	2500      	movs	r5, #0
 8007b58:	4698      	mov	r8, r3
 8007b5a:	f8d8 3000 	ldr.w	r3, [r8]
 8007b5e:	4c16      	ldr	r4, [pc, #88]	; (8007bb8 <GUI_TIMER_Exec+0x6c>)
 8007b60:	b333      	cbz	r3, 8007bb0 <GUI_TIMER_Exec+0x64>
 8007b62:	f000 f991 	bl	8007e88 <GUI_GetTime>
 8007b66:	4606      	mov	r6, r0
 8007b68:	6820      	ldr	r0, [r4, #0]
 8007b6a:	f001 fe6b 	bl	8009844 <GUI_ALLOC_LockH>
 8007b6e:	4603      	mov	r3, r0
 8007b70:	a804      	add	r0, sp, #16
 8007b72:	6959      	ldr	r1, [r3, #20]
 8007b74:	f840 3d10 	str.w	r3, [r0, #-16]!
 8007b78:	1b89      	subs	r1, r1, r6
 8007b7a:	2900      	cmp	r1, #0
 8007b7c:	dc13      	bgt.n	8007ba6 <GUI_TIMER_Exec+0x5a>
 8007b7e:	6821      	ldr	r1, [r4, #0]
 8007b80:	9103      	str	r1, [sp, #12]
 8007b82:	9601      	str	r6, [sp, #4]
 8007b84:	6919      	ldr	r1, [r3, #16]
 8007b86:	685e      	ldr	r6, [r3, #4]
 8007b88:	9102      	str	r1, [sp, #8]
 8007b8a:	4668      	mov	r0, sp
 8007b8c:	6026      	str	r6, [r4, #0]
 8007b8e:	f8d3 9000 	ldr.w	r9, [r3]
 8007b92:	f001 fe65 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007b96:	a801      	add	r0, sp, #4
 8007b98:	47c8      	blx	r9
 8007b9a:	b14e      	cbz	r6, 8007bb0 <GUI_TIMER_Exec+0x64>
 8007b9c:	6823      	ldr	r3, [r4, #0]
 8007b9e:	42bb      	cmp	r3, r7
 8007ba0:	d005      	beq.n	8007bae <GUI_TIMER_Exec+0x62>
 8007ba2:	2501      	movs	r5, #1
 8007ba4:	e7d9      	b.n	8007b5a <GUI_TIMER_Exec+0xe>
 8007ba6:	4668      	mov	r0, sp
 8007ba8:	f001 fe5a 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007bac:	e000      	b.n	8007bb0 <GUI_TIMER_Exec+0x64>
 8007bae:	2500      	movs	r5, #0
 8007bb0:	4628      	mov	r0, r5
 8007bb2:	b005      	add	sp, #20
 8007bb4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007bb8:	2000031c 	.word	0x2000031c

08007bbc <_Link>:
 8007bbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007bbe:	4c25      	ldr	r4, [pc, #148]	; (8007c54 <_Link+0x98>)
 8007bc0:	b085      	sub	sp, #20
 8007bc2:	4605      	mov	r5, r0
 8007bc4:	f001 fe3e 	bl	8009844 <GUI_ALLOC_LockH>
 8007bc8:	6823      	ldr	r3, [r4, #0]
 8007bca:	9001      	str	r0, [sp, #4]
 8007bcc:	b913      	cbnz	r3, 8007bd4 <_Link+0x18>
 8007bce:	6025      	str	r5, [r4, #0]
 8007bd0:	6043      	str	r3, [r0, #4]
 8007bd2:	e039      	b.n	8007c48 <_Link+0x8c>
 8007bd4:	4618      	mov	r0, r3
 8007bd6:	f001 fe35 	bl	8009844 <GUI_ALLOC_LockH>
 8007bda:	ab04      	add	r3, sp, #16
 8007bdc:	6946      	ldr	r6, [r0, #20]
 8007bde:	f843 0d10 	str.w	r0, [r3, #-16]!
 8007be2:	4668      	mov	r0, sp
 8007be4:	f001 fe3c 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007be8:	9b01      	ldr	r3, [sp, #4]
 8007bea:	695a      	ldr	r2, [r3, #20]
 8007bec:	1b92      	subs	r2, r2, r6
 8007bee:	2a00      	cmp	r2, #0
 8007bf0:	dc03      	bgt.n	8007bfa <_Link+0x3e>
 8007bf2:	6822      	ldr	r2, [r4, #0]
 8007bf4:	605a      	str	r2, [r3, #4]
 8007bf6:	6025      	str	r5, [r4, #0]
 8007bf8:	e026      	b.n	8007c48 <_Link+0x8c>
 8007bfa:	6826      	ldr	r6, [r4, #0]
 8007bfc:	4630      	mov	r0, r6
 8007bfe:	f001 fe21 	bl	8009844 <GUI_ALLOC_LockH>
 8007c02:	ac04      	add	r4, sp, #16
 8007c04:	6846      	ldr	r6, [r0, #4]
 8007c06:	f844 0d08 	str.w	r0, [r4, #-8]!
 8007c0a:	b1be      	cbz	r6, 8007c3c <_Link+0x80>
 8007c0c:	4630      	mov	r0, r6
 8007c0e:	f001 fe19 	bl	8009844 <GUI_ALLOC_LockH>
 8007c12:	ab04      	add	r3, sp, #16
 8007c14:	6947      	ldr	r7, [r0, #20]
 8007c16:	f843 0d04 	str.w	r0, [r3, #-4]!
 8007c1a:	4618      	mov	r0, r3
 8007c1c:	f001 fe20 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007c20:	9a01      	ldr	r2, [sp, #4]
 8007c22:	6953      	ldr	r3, [r2, #20]
 8007c24:	1bdb      	subs	r3, r3, r7
 8007c26:	2b00      	cmp	r3, #0
 8007c28:	9b02      	ldr	r3, [sp, #8]
 8007c2a:	dc02      	bgt.n	8007c32 <_Link+0x76>
 8007c2c:	6056      	str	r6, [r2, #4]
 8007c2e:	605d      	str	r5, [r3, #4]
 8007c30:	e007      	b.n	8007c42 <_Link+0x86>
 8007c32:	4620      	mov	r0, r4
 8007c34:	685e      	ldr	r6, [r3, #4]
 8007c36:	f001 fe13 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007c3a:	e7df      	b.n	8007bfc <_Link+0x40>
 8007c3c:	9b01      	ldr	r3, [sp, #4]
 8007c3e:	605e      	str	r6, [r3, #4]
 8007c40:	6045      	str	r5, [r0, #4]
 8007c42:	4620      	mov	r0, r4
 8007c44:	f001 fe0c 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007c48:	a801      	add	r0, sp, #4
 8007c4a:	f001 fe09 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007c4e:	b005      	add	sp, #20
 8007c50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007c52:	bf00      	nop
 8007c54:	2000031c 	.word	0x2000031c

08007c58 <_Unlink>:
 8007c58:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007c5a:	4605      	mov	r5, r0
 8007c5c:	b1f0      	cbz	r0, 8007c9c <_Unlink+0x44>
 8007c5e:	f001 fdf1 	bl	8009844 <GUI_ALLOC_LockH>
 8007c62:	4b0f      	ldr	r3, [pc, #60]	; (8007ca0 <_Unlink+0x48>)
 8007c64:	9000      	str	r0, [sp, #0]
 8007c66:	681c      	ldr	r4, [r3, #0]
 8007c68:	42ac      	cmp	r4, r5
 8007c6a:	d104      	bne.n	8007c76 <_Unlink+0x1e>
 8007c6c:	6842      	ldr	r2, [r0, #4]
 8007c6e:	601a      	str	r2, [r3, #0]
 8007c70:	e011      	b.n	8007c96 <_Unlink+0x3e>
 8007c72:	f001 fdf5 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007c76:	b174      	cbz	r4, 8007c96 <_Unlink+0x3e>
 8007c78:	4620      	mov	r0, r4
 8007c7a:	f001 fde3 	bl	8009844 <GUI_ALLOC_LockH>
 8007c7e:	4603      	mov	r3, r0
 8007c80:	a802      	add	r0, sp, #8
 8007c82:	685c      	ldr	r4, [r3, #4]
 8007c84:	f840 3d04 	str.w	r3, [r0, #-4]!
 8007c88:	42ac      	cmp	r4, r5
 8007c8a:	d1f2      	bne.n	8007c72 <_Unlink+0x1a>
 8007c8c:	9a00      	ldr	r2, [sp, #0]
 8007c8e:	6852      	ldr	r2, [r2, #4]
 8007c90:	605a      	str	r2, [r3, #4]
 8007c92:	f001 fde5 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007c96:	4668      	mov	r0, sp
 8007c98:	f001 fde2 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007c9c:	b003      	add	sp, #12
 8007c9e:	bd30      	pop	{r4, r5, pc}
 8007ca0:	2000031c 	.word	0x2000031c

08007ca4 <GUI_TIMER__GetFirstTimer>:
 8007ca4:	2300      	movs	r3, #0
 8007ca6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007ca8:	6003      	str	r3, [r0, #0]
 8007caa:	4b09      	ldr	r3, [pc, #36]	; (8007cd0 <GUI_TIMER__GetFirstTimer+0x2c>)
 8007cac:	681c      	ldr	r4, [r3, #0]
 8007cae:	4605      	mov	r5, r0
 8007cb0:	b154      	cbz	r4, 8007cc8 <GUI_TIMER__GetFirstTimer+0x24>
 8007cb2:	4620      	mov	r0, r4
 8007cb4:	f001 fdc6 	bl	8009844 <GUI_ALLOC_LockH>
 8007cb8:	ab02      	add	r3, sp, #8
 8007cba:	6902      	ldr	r2, [r0, #16]
 8007cbc:	f843 0d04 	str.w	r0, [r3, #-4]!
 8007cc0:	602a      	str	r2, [r5, #0]
 8007cc2:	4618      	mov	r0, r3
 8007cc4:	f001 fdcc 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007cc8:	4620      	mov	r0, r4
 8007cca:	b003      	add	sp, #12
 8007ccc:	bd30      	pop	{r4, r5, pc}
 8007cce:	bf00      	nop
 8007cd0:	20000310 	.word	0x20000310

08007cd4 <GUI_TIMER__GetNextTimerLin>:
 8007cd4:	2300      	movs	r3, #0
 8007cd6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007cd8:	600b      	str	r3, [r1, #0]
 8007cda:	460e      	mov	r6, r1
 8007cdc:	4604      	mov	r4, r0
 8007cde:	b190      	cbz	r0, 8007d06 <GUI_TIMER__GetNextTimerLin+0x32>
 8007ce0:	f001 fdb0 	bl	8009844 <GUI_ALLOC_LockH>
 8007ce4:	ad02      	add	r5, sp, #8
 8007ce6:	6884      	ldr	r4, [r0, #8]
 8007ce8:	f845 0d04 	str.w	r0, [r5, #-4]!
 8007cec:	b144      	cbz	r4, 8007d00 <GUI_TIMER__GetNextTimerLin+0x2c>
 8007cee:	4628      	mov	r0, r5
 8007cf0:	f001 fdb6 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007cf4:	4620      	mov	r0, r4
 8007cf6:	f001 fda5 	bl	8009844 <GUI_ALLOC_LockH>
 8007cfa:	6903      	ldr	r3, [r0, #16]
 8007cfc:	9001      	str	r0, [sp, #4]
 8007cfe:	6033      	str	r3, [r6, #0]
 8007d00:	4628      	mov	r0, r5
 8007d02:	f001 fdad 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007d06:	4620      	mov	r0, r4
 8007d08:	b002      	add	sp, #8
 8007d0a:	bd70      	pop	{r4, r5, r6, pc}

08007d0c <GUI_TIMER_Create>:
 8007d0c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007d10:	4681      	mov	r9, r0
 8007d12:	201c      	movs	r0, #28
 8007d14:	460e      	mov	r6, r1
 8007d16:	4690      	mov	r8, r2
 8007d18:	461f      	mov	r7, r3
 8007d1a:	f001 ff85 	bl	8009c28 <GUI_ALLOC_AllocZero>
 8007d1e:	4604      	mov	r4, r0
 8007d20:	2800      	cmp	r0, #0
 8007d22:	d031      	beq.n	8007d88 <GUI_TIMER_Create+0x7c>
 8007d24:	4b1a      	ldr	r3, [pc, #104]	; (8007d90 <GUI_TIMER_Create+0x84>)
 8007d26:	4a1b      	ldr	r2, [pc, #108]	; (8007d94 <GUI_TIMER_Create+0x88>)
 8007d28:	601a      	str	r2, [r3, #0]
 8007d2a:	f001 fd8b 	bl	8009844 <GUI_ALLOC_LockH>
 8007d2e:	9000      	str	r0, [sp, #0]
 8007d30:	b916      	cbnz	r6, 8007d38 <GUI_TIMER_Create+0x2c>
 8007d32:	f000 f8a9 	bl	8007e88 <GUI_GetTime>
 8007d36:	4606      	mov	r6, r0
 8007d38:	a802      	add	r0, sp, #8
 8007d3a:	f850 5d08 	ldr.w	r5, [r0, #-8]!
 8007d3e:	4668      	mov	r0, sp
 8007d40:	616e      	str	r6, [r5, #20]
 8007d42:	f8c5 9000 	str.w	r9, [r5]
 8007d46:	f8c5 8010 	str.w	r8, [r5, #16]
 8007d4a:	81af      	strh	r7, [r5, #12]
 8007d4c:	f001 fd88 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007d50:	4620      	mov	r0, r4
 8007d52:	f7ff ff33 	bl	8007bbc <_Link>
 8007d56:	4b10      	ldr	r3, [pc, #64]	; (8007d98 <GUI_TIMER_Create+0x8c>)
 8007d58:	681a      	ldr	r2, [r3, #0]
 8007d5a:	b932      	cbnz	r2, 8007d6a <GUI_TIMER_Create+0x5e>
 8007d5c:	2201      	movs	r2, #1
 8007d5e:	480f      	ldr	r0, [pc, #60]	; (8007d9c <GUI_TIMER_Create+0x90>)
 8007d60:	601a      	str	r2, [r3, #0]
 8007d62:	4b0f      	ldr	r3, [pc, #60]	; (8007da0 <GUI_TIMER_Create+0x94>)
 8007d64:	6003      	str	r3, [r0, #0]
 8007d66:	f000 ffc5 	bl	8008cf4 <GUI__RegisterExit>
 8007d6a:	4620      	mov	r0, r4
 8007d6c:	f001 fd6a 	bl	8009844 <GUI_ALLOC_LockH>
 8007d70:	4a0c      	ldr	r2, [pc, #48]	; (8007da4 <GUI_TIMER_Create+0x98>)
 8007d72:	9001      	str	r0, [sp, #4]
 8007d74:	6813      	ldr	r3, [r2, #0]
 8007d76:	b913      	cbnz	r3, 8007d7e <GUI_TIMER_Create+0x72>
 8007d78:	6014      	str	r4, [r2, #0]
 8007d7a:	6083      	str	r3, [r0, #8]
 8007d7c:	e001      	b.n	8007d82 <GUI_TIMER_Create+0x76>
 8007d7e:	6083      	str	r3, [r0, #8]
 8007d80:	6014      	str	r4, [r2, #0]
 8007d82:	a801      	add	r0, sp, #4
 8007d84:	f001 fd6c 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007d88:	4620      	mov	r0, r4
 8007d8a:	b003      	add	sp, #12
 8007d8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007d90:	200004a8 	.word	0x200004a8
 8007d94:	08007b4d 	.word	0x08007b4d
 8007d98:	20000320 	.word	0x20000320
 8007d9c:	20000314 	.word	0x20000314
 8007da0:	08007b31 	.word	0x08007b31
 8007da4:	20000310 	.word	0x20000310

08007da8 <GUI_TIMER_Delete>:
 8007da8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007daa:	4604      	mov	r4, r0
 8007dac:	b360      	cbz	r0, 8007e08 <GUI_TIMER_Delete+0x60>
 8007dae:	4e17      	ldr	r6, [pc, #92]	; (8007e0c <GUI_TIMER_Delete+0x64>)
 8007db0:	6835      	ldr	r5, [r6, #0]
 8007db2:	4285      	cmp	r5, r0
 8007db4:	d10b      	bne.n	8007dce <GUI_TIMER_Delete+0x26>
 8007db6:	f001 fd45 	bl	8009844 <GUI_ALLOC_LockH>
 8007dba:	ab02      	add	r3, sp, #8
 8007dbc:	6882      	ldr	r2, [r0, #8]
 8007dbe:	f843 0d04 	str.w	r0, [r3, #-4]!
 8007dc2:	6032      	str	r2, [r6, #0]
 8007dc4:	4618      	mov	r0, r3
 8007dc6:	e017      	b.n	8007df8 <GUI_TIMER_Delete+0x50>
 8007dc8:	4668      	mov	r0, sp
 8007dca:	f001 fd49 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007dce:	b1ad      	cbz	r5, 8007dfc <GUI_TIMER_Delete+0x54>
 8007dd0:	4628      	mov	r0, r5
 8007dd2:	f001 fd37 	bl	8009844 <GUI_ALLOC_LockH>
 8007dd6:	6885      	ldr	r5, [r0, #8]
 8007dd8:	ae02      	add	r6, sp, #8
 8007dda:	42a5      	cmp	r5, r4
 8007ddc:	f846 0d08 	str.w	r0, [r6, #-8]!
 8007de0:	d1f2      	bne.n	8007dc8 <GUI_TIMER_Delete+0x20>
 8007de2:	4620      	mov	r0, r4
 8007de4:	f001 fd2e 	bl	8009844 <GUI_ALLOC_LockH>
 8007de8:	9b00      	ldr	r3, [sp, #0]
 8007dea:	6882      	ldr	r2, [r0, #8]
 8007dec:	9001      	str	r0, [sp, #4]
 8007dee:	609a      	str	r2, [r3, #8]
 8007df0:	a801      	add	r0, sp, #4
 8007df2:	f001 fd35 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007df6:	4668      	mov	r0, sp
 8007df8:	f001 fd32 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007dfc:	4620      	mov	r0, r4
 8007dfe:	f7ff ff2b 	bl	8007c58 <_Unlink>
 8007e02:	4620      	mov	r0, r4
 8007e04:	f001 fd50 	bl	80098a8 <GUI_ALLOC_Free>
 8007e08:	b002      	add	sp, #8
 8007e0a:	bd70      	pop	{r4, r5, r6, pc}
 8007e0c:	20000310 	.word	0x20000310

08007e10 <GUI_TIMER_SetPeriod>:
 8007e10:	b513      	push	{r0, r1, r4, lr}
 8007e12:	460c      	mov	r4, r1
 8007e14:	b140      	cbz	r0, 8007e28 <GUI_TIMER_SetPeriod+0x18>
 8007e16:	f001 fd15 	bl	8009844 <GUI_ALLOC_LockH>
 8007e1a:	ab02      	add	r3, sp, #8
 8007e1c:	6184      	str	r4, [r0, #24]
 8007e1e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8007e22:	4618      	mov	r0, r3
 8007e24:	f001 fd1c 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007e28:	b002      	add	sp, #8
 8007e2a:	bd10      	pop	{r4, pc}

08007e2c <GUI_TIMER_Restart>:
 8007e2c:	b513      	push	{r0, r1, r4, lr}
 8007e2e:	4604      	mov	r4, r0
 8007e30:	b198      	cbz	r0, 8007e5a <GUI_TIMER_Restart+0x2e>
 8007e32:	f001 fd07 	bl	8009844 <GUI_ALLOC_LockH>
 8007e36:	9001      	str	r0, [sp, #4]
 8007e38:	f000 f826 	bl	8007e88 <GUI_GetTime>
 8007e3c:	ab02      	add	r3, sp, #8
 8007e3e:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8007e42:	6991      	ldr	r1, [r2, #24]
 8007e44:	4408      	add	r0, r1
 8007e46:	6150      	str	r0, [r2, #20]
 8007e48:	4618      	mov	r0, r3
 8007e4a:	f001 fd09 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007e4e:	4620      	mov	r0, r4
 8007e50:	f7ff ff02 	bl	8007c58 <_Unlink>
 8007e54:	4620      	mov	r0, r4
 8007e56:	f7ff feb1 	bl	8007bbc <_Link>
 8007e5a:	b002      	add	sp, #8
 8007e5c:	bd10      	pop	{r4, pc}

08007e5e <GUI_TIMER_GetFlag>:
 8007e5e:	b513      	push	{r0, r1, r4, lr}
 8007e60:	460c      	mov	r4, r1
 8007e62:	b168      	cbz	r0, 8007e80 <GUI_TIMER_GetFlag+0x22>
 8007e64:	f001 fcee 	bl	8009844 <GUI_ALLOC_LockH>
 8007e68:	ab02      	add	r3, sp, #8
 8007e6a:	8982      	ldrh	r2, [r0, #12]
 8007e6c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8007e70:	4214      	tst	r4, r2
 8007e72:	4618      	mov	r0, r3
 8007e74:	bf0c      	ite	eq
 8007e76:	2400      	moveq	r4, #0
 8007e78:	2401      	movne	r4, #1
 8007e7a:	f001 fcf1 	bl	8009860 <GUI_ALLOC_UnlockH>
 8007e7e:	e000      	b.n	8007e82 <GUI_TIMER_GetFlag+0x24>
 8007e80:	2401      	movs	r4, #1
 8007e82:	4620      	mov	r0, r4
 8007e84:	b002      	add	sp, #8
 8007e86:	bd10      	pop	{r4, pc}

08007e88 <GUI_GetTime>:
 8007e88:	f7f8 bb28 	b.w	80004dc <GUI_X_GetTime>

08007e8c <GUI__AlphaPreserveTrans>:
 8007e8c:	b510      	push	{r4, lr}
 8007e8e:	4b07      	ldr	r3, [pc, #28]	; (8007eac <GUI__AlphaPreserveTrans+0x20>)
 8007e90:	781c      	ldrb	r4, [r3, #0]
 8007e92:	b120      	cbz	r0, 8007e9e <GUI__AlphaPreserveTrans+0x12>
 8007e94:	2201      	movs	r2, #1
 8007e96:	701a      	strb	r2, [r3, #0]
 8007e98:	f04f 30ff 	mov.w	r0, #4294967295
 8007e9c:	e002      	b.n	8007ea4 <GUI__AlphaPreserveTrans+0x18>
 8007e9e:	7018      	strb	r0, [r3, #0]
 8007ea0:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8007ea4:	f004 f878 	bl	800bf98 <LCD_AA_SetAndMask>
 8007ea8:	4620      	mov	r0, r4
 8007eaa:	bd10      	pop	{r4, pc}
 8007eac:	200004c0 	.word	0x200004c0

08007eb0 <GUI_SelectLayer>:
 8007eb0:	b570      	push	{r4, r5, r6, lr}
 8007eb2:	4d08      	ldr	r5, [pc, #32]	; (8007ed4 <GUI_SelectLayer+0x24>)
 8007eb4:	682b      	ldr	r3, [r5, #0]
 8007eb6:	2801      	cmp	r0, #1
 8007eb8:	4604      	mov	r4, r0
 8007eba:	7c5e      	ldrb	r6, [r3, #17]
 8007ebc:	d808      	bhi.n	8007ed0 <GUI_SelectLayer+0x20>
 8007ebe:	f000 fe43 	bl	8008b48 <GUI_DEVICE__GetpDriver>
 8007ec2:	b128      	cbz	r0, 8007ed0 <GUI_SelectLayer+0x20>
 8007ec4:	682b      	ldr	r3, [r5, #0]
 8007ec6:	745c      	strb	r4, [r3, #17]
 8007ec8:	f001 f86a 	bl	8008fa0 <GUI_SelectLCD>
 8007ecc:	4b02      	ldr	r3, [pc, #8]	; (8007ed8 <GUI_SelectLayer+0x28>)
 8007ece:	601c      	str	r4, [r3, #0]
 8007ed0:	4630      	mov	r0, r6
 8007ed2:	bd70      	pop	{r4, r5, r6, pc}
 8007ed4:	200000b0 	.word	0x200000b0
 8007ed8:	20000450 	.word	0x20000450

08007edc <GUI_PollKeyMsg>:
 8007edc:	4a0a      	ldr	r2, [pc, #40]	; (8007f08 <GUI_PollKeyMsg+0x2c>)
 8007ede:	490b      	ldr	r1, [pc, #44]	; (8007f0c <GUI_PollKeyMsg+0x30>)
 8007ee0:	6813      	ldr	r3, [r2, #0]
 8007ee2:	6809      	ldr	r1, [r1, #0]
 8007ee4:	428b      	cmp	r3, r1
 8007ee6:	b510      	push	{r4, lr}
 8007ee8:	d00b      	beq.n	8007f02 <GUI_PollKeyMsg+0x26>
 8007eea:	4c09      	ldr	r4, [pc, #36]	; (8007f10 <GUI_PollKeyMsg+0x34>)
 8007eec:	42a3      	cmp	r3, r4
 8007eee:	e893 0003 	ldmia.w	r3, {r0, r1}
 8007ef2:	bf14      	ite	ne
 8007ef4:	3308      	addne	r3, #8
 8007ef6:	3b50      	subeq	r3, #80	; 0x50
 8007ef8:	6013      	str	r3, [r2, #0]
 8007efa:	f7fc fb5d 	bl	80045b8 <WM_OnKey>
 8007efe:	2001      	movs	r0, #1
 8007f00:	bd10      	pop	{r4, pc}
 8007f02:	2000      	movs	r0, #0
 8007f04:	bd10      	pop	{r4, pc}
 8007f06:	bf00      	nop
 8007f08:	200000ac 	.word	0x200000ac
 8007f0c:	200000a8 	.word	0x200000a8
 8007f10:	20000374 	.word	0x20000374

08007f14 <_SetLineColor>:
 8007f14:	4b1e      	ldr	r3, [pc, #120]	; (8007f90 <_SetLineColor+0x7c>)
 8007f16:	681b      	ldr	r3, [r3, #0]
 8007f18:	7e9b      	ldrb	r3, [r3, #26]
 8007f1a:	3b01      	subs	r3, #1
 8007f1c:	2b03      	cmp	r3, #3
 8007f1e:	d832      	bhi.n	8007f86 <_SetLineColor+0x72>
 8007f20:	e8df f003 	tbb	[pc, r3]
 8007f24:	221a0d02 	.word	0x221a0d02
 8007f28:	4b1a      	ldr	r3, [pc, #104]	; (8007f94 <_SetLineColor+0x80>)
 8007f2a:	3006      	adds	r0, #6
 8007f2c:	4003      	ands	r3, r0
 8007f2e:	2b00      	cmp	r3, #0
 8007f30:	da03      	bge.n	8007f3a <_SetLineColor+0x26>
 8007f32:	3b01      	subs	r3, #1
 8007f34:	f063 030f 	orn	r3, r3, #15
 8007f38:	3301      	adds	r3, #1
 8007f3a:	2b0b      	cmp	r3, #11
 8007f3c:	e008      	b.n	8007f50 <_SetLineColor+0x3c>
 8007f3e:	4b16      	ldr	r3, [pc, #88]	; (8007f98 <_SetLineColor+0x84>)
 8007f40:	4003      	ands	r3, r0
 8007f42:	2b00      	cmp	r3, #0
 8007f44:	da03      	bge.n	8007f4e <_SetLineColor+0x3a>
 8007f46:	3b01      	subs	r3, #1
 8007f48:	f063 0303 	orn	r3, r3, #3
 8007f4c:	3301      	adds	r3, #1
 8007f4e:	2b01      	cmp	r3, #1
 8007f50:	bfcc      	ite	gt
 8007f52:	2000      	movgt	r0, #0
 8007f54:	2001      	movle	r0, #1
 8007f56:	4770      	bx	lr
 8007f58:	2314      	movs	r3, #20
 8007f5a:	fb90 f2f3 	sdiv	r2, r0, r3
 8007f5e:	fb03 0012 	mls	r0, r3, r2, r0
 8007f62:	280b      	cmp	r0, #11
 8007f64:	dc09      	bgt.n	8007f7a <_SetLineColor+0x66>
 8007f66:	e010      	b.n	8007f8a <_SetLineColor+0x76>
 8007f68:	2318      	movs	r3, #24
 8007f6a:	fb90 f2f3 	sdiv	r2, r0, r3
 8007f6e:	fb03 0012 	mls	r0, r3, r2, r0
 8007f72:	280b      	cmp	r0, #11
 8007f74:	dd09      	ble.n	8007f8a <_SetLineColor+0x76>
 8007f76:	f020 0004 	bic.w	r0, r0, #4
 8007f7a:	3810      	subs	r0, #16
 8007f7c:	2801      	cmp	r0, #1
 8007f7e:	bf8c      	ite	hi
 8007f80:	2000      	movhi	r0, #0
 8007f82:	2001      	movls	r0, #1
 8007f84:	4770      	bx	lr
 8007f86:	2000      	movs	r0, #0
 8007f88:	4770      	bx	lr
 8007f8a:	2001      	movs	r0, #1
 8007f8c:	4770      	bx	lr
 8007f8e:	bf00      	nop
 8007f90:	200000b0 	.word	0x200000b0
 8007f94:	8000000f 	.word	0x8000000f
 8007f98:	80000003 	.word	0x80000003

08007f9c <GUI_sin>:
 8007f9c:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8007fa0:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8007fa4:	bfc6      	itte	gt
 8007fa6:	f5a0 6000 	subgt.w	r0, r0, #2048	; 0x800
 8007faa:	2101      	movgt	r1, #1
 8007fac:	2100      	movle	r1, #0
 8007fae:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8007fb2:	bfc8      	it	gt
 8007fb4:	f5c0 6000 	rsbgt	r0, r0, #2048	; 0x800
 8007fb8:	f000 033f 	and.w	r3, r0, #63	; 0x3f
 8007fbc:	b510      	push	{r4, lr}
 8007fbe:	1182      	asrs	r2, r0, #6
 8007fc0:	4c0b      	ldr	r4, [pc, #44]	; (8007ff0 <GUI_sin+0x54>)
 8007fc2:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8007fc6:	b29b      	uxth	r3, r3
 8007fc8:	f834 0012 	ldrh.w	r0, [r4, r2, lsl #1]
 8007fcc:	2b40      	cmp	r3, #64	; 0x40
 8007fce:	fb00 f003 	mul.w	r0, r0, r3
 8007fd2:	d008      	beq.n	8007fe6 <GUI_sin+0x4a>
 8007fd4:	2a10      	cmp	r2, #16
 8007fd6:	d006      	beq.n	8007fe6 <GUI_sin+0x4a>
 8007fd8:	3201      	adds	r2, #1
 8007fda:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8007fde:	f834 2012 	ldrh.w	r2, [r4, r2, lsl #1]
 8007fe2:	fb03 0002 	mla	r0, r3, r2, r0
 8007fe6:	3020      	adds	r0, #32
 8007fe8:	0980      	lsrs	r0, r0, #6
 8007fea:	b101      	cbz	r1, 8007fee <GUI_sin+0x52>
 8007fec:	4240      	negs	r0, r0
 8007fee:	bd10      	pop	{r4, pc}
 8007ff0:	0800f648 	.word	0x0800f648

08007ff4 <GUI_cos>:
 8007ff4:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 8007ff8:	f7ff bfd0 	b.w	8007f9c <GUI_sin>

08007ffc <GL_DrawLine1Ex>:
 8007ffc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008000:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8008004:	1a17      	subs	r7, r2, r0
 8008006:	1a5c      	subs	r4, r3, r1
 8008008:	ea54 0c07 	orrs.w	ip, r4, r7
 800800c:	4605      	mov	r5, r0
 800800e:	460e      	mov	r6, r1
 8008010:	f8d8 b000 	ldr.w	fp, [r8]
 8008014:	d104      	bne.n	8008020 <GL_DrawLine1Ex+0x24>
 8008016:	b003      	add	sp, #12
 8008018:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800801c:	f000 ba16 	b.w	800844c <GL_DrawPoint>
 8008020:	ea87 70e7 	eor.w	r0, r7, r7, asr #31
 8008024:	eba0 70e7 	sub.w	r0, r0, r7, asr #31
 8008028:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 800802c:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 8008030:	4288      	cmp	r0, r1
 8008032:	db04      	blt.n	800803e <GL_DrawLine1Ex+0x42>
 8008034:	4621      	mov	r1, r4
 8008036:	463c      	mov	r4, r7
 8008038:	460f      	mov	r7, r1
 800803a:	2100      	movs	r1, #0
 800803c:	e006      	b.n	800804c <GL_DrawLine1Ex+0x50>
 800803e:	4611      	mov	r1, r2
 8008040:	461a      	mov	r2, r3
 8008042:	460b      	mov	r3, r1
 8008044:	4629      	mov	r1, r5
 8008046:	4635      	mov	r5, r6
 8008048:	460e      	mov	r6, r1
 800804a:	2101      	movs	r1, #1
 800804c:	9100      	str	r1, [sp, #0]
 800804e:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 8008052:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 8008056:	428c      	cmp	r4, r1
 8008058:	d008      	beq.n	800806c <GL_DrawLine1Ex+0x70>
 800805a:	461e      	mov	r6, r3
 800805c:	462b      	mov	r3, r5
 800805e:	4264      	negs	r4, r4
 8008060:	4615      	mov	r5, r2
 8008062:	427f      	negs	r7, r7
 8008064:	461a      	mov	r2, r3
 8008066:	f04f 3aff 	mov.w	sl, #4294967295
 800806a:	e001      	b.n	8008070 <GL_DrawLine1Ex+0x74>
 800806c:	f04f 0a01 	mov.w	sl, #1
 8008070:	2f00      	cmp	r7, #0
 8008072:	f8df 9148 	ldr.w	r9, [pc, #328]	; 80081bc <GL_DrawLine1Ex+0x1c0>
 8008076:	d13e      	bne.n	80080f6 <GL_DrawLine1Ex+0xfa>
 8008078:	9b00      	ldr	r3, [sp, #0]
 800807a:	b1d3      	cbz	r3, 80080b2 <GL_DrawLine1Ex+0xb6>
 800807c:	f8d9 3000 	ldr.w	r3, [r9]
 8008080:	7e9b      	ldrb	r3, [r3, #26]
 8008082:	b98b      	cbnz	r3, 80080a8 <GL_DrawLine1Ex+0xac>
 8008084:	4630      	mov	r0, r6
 8008086:	4629      	mov	r1, r5
 8008088:	b003      	add	sp, #12
 800808a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800808e:	f7fe bf29 	b.w	8006ee4 <LCD_DrawVLine>
 8008092:	f7ff ff3f 	bl	8007f14 <_SetLineColor>
 8008096:	b930      	cbnz	r0, 80080a6 <GL_DrawLine1Ex+0xaa>
 8008098:	f8d9 3000 	ldr.w	r3, [r9]
 800809c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800809e:	4630      	mov	r0, r6
 80080a0:	685b      	ldr	r3, [r3, #4]
 80080a2:	1979      	adds	r1, r7, r5
 80080a4:	4798      	blx	r3
 80080a6:	3701      	adds	r7, #1
 80080a8:	42a7      	cmp	r7, r4
 80080aa:	eb07 000b 	add.w	r0, r7, fp
 80080ae:	ddf0      	ble.n	8008092 <GL_DrawLine1Ex+0x96>
 80080b0:	e01d      	b.n	80080ee <GL_DrawLine1Ex+0xf2>
 80080b2:	f8d9 3000 	ldr.w	r3, [r9]
 80080b6:	7e99      	ldrb	r1, [r3, #26]
 80080b8:	b111      	cbz	r1, 80080c0 <GL_DrawLine1Ex+0xc4>
 80080ba:	f8dd a000 	ldr.w	sl, [sp]
 80080be:	e012      	b.n	80080e6 <GL_DrawLine1Ex+0xea>
 80080c0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80080c2:	4628      	mov	r0, r5
 80080c4:	681b      	ldr	r3, [r3, #0]
 80080c6:	4631      	mov	r1, r6
 80080c8:	4798      	blx	r3
 80080ca:	e074      	b.n	80081b6 <GL_DrawLine1Ex+0x1ba>
 80080cc:	f7ff ff22 	bl	8007f14 <_SetLineColor>
 80080d0:	b938      	cbnz	r0, 80080e2 <GL_DrawLine1Ex+0xe6>
 80080d2:	f8d9 3000 	ldr.w	r3, [r9]
 80080d6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80080d8:	eb0a 0005 	add.w	r0, sl, r5
 80080dc:	685b      	ldr	r3, [r3, #4]
 80080de:	4631      	mov	r1, r6
 80080e0:	4798      	blx	r3
 80080e2:	f10a 0a01 	add.w	sl, sl, #1
 80080e6:	45a2      	cmp	sl, r4
 80080e8:	eb0a 000b 	add.w	r0, sl, fp
 80080ec:	ddee      	ble.n	80080cc <GL_DrawLine1Ex+0xd0>
 80080ee:	3801      	subs	r0, #1
 80080f0:	f8c8 0000 	str.w	r0, [r8]
 80080f4:	e05f      	b.n	80081b6 <GL_DrawLine1Ex+0x1ba>
 80080f6:	f8d9 1000 	ldr.w	r1, [r9]
 80080fa:	f04f 0202 	mov.w	r2, #2
 80080fe:	7e89      	ldrb	r1, [r1, #26]
 8008100:	fb94 f2f2 	sdiv	r2, r4, r2
 8008104:	bfb8      	it	lt
 8008106:	4252      	neglt	r2, r2
 8008108:	b9d9      	cbnz	r1, 8008142 <GL_DrawLine1Ex+0x146>
 800810a:	4693      	mov	fp, r2
 800810c:	46a8      	mov	r8, r5
 800810e:	ebc5 0308 	rsb	r3, r5, r8
 8008112:	42a3      	cmp	r3, r4
 8008114:	dc4f      	bgt.n	80081b6 <GL_DrawLine1Ex+0x1ba>
 8008116:	9b00      	ldr	r3, [sp, #0]
 8008118:	fb9b f1f4 	sdiv	r1, fp, r4
 800811c:	4431      	add	r1, r6
 800811e:	b92b      	cbnz	r3, 800812c <GL_DrawLine1Ex+0x130>
 8008120:	f8d9 3000 	ldr.w	r3, [r9]
 8008124:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8008126:	4640      	mov	r0, r8
 8008128:	685b      	ldr	r3, [r3, #4]
 800812a:	e005      	b.n	8008138 <GL_DrawLine1Ex+0x13c>
 800812c:	f8d9 3000 	ldr.w	r3, [r9]
 8008130:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8008132:	685b      	ldr	r3, [r3, #4]
 8008134:	4608      	mov	r0, r1
 8008136:	4641      	mov	r1, r8
 8008138:	4798      	blx	r3
 800813a:	f108 0801 	add.w	r8, r8, #1
 800813e:	44bb      	add	fp, r7
 8008140:	e7e5      	b.n	800810e <GL_DrawLine1Ex+0x112>
 8008142:	f1ba 3fff 	cmp.w	sl, #4294967295
 8008146:	bf04      	itt	eq
 8008148:	eb04 010b 	addeq.w	r1, r4, fp
 800814c:	f8c8 1000 	streq.w	r1, [r8]
 8008150:	9201      	str	r2, [sp, #4]
 8008152:	46ab      	mov	fp, r5
 8008154:	ebc5 010b 	rsb	r1, r5, fp
 8008158:	42a1      	cmp	r1, r4
 800815a:	f8d8 0000 	ldr.w	r0, [r8]
 800815e:	dc1e      	bgt.n	800819e <GL_DrawLine1Ex+0x1a2>
 8008160:	4450      	add	r0, sl
 8008162:	f8c8 0000 	str.w	r0, [r8]
 8008166:	f7ff fed5 	bl	8007f14 <_SetLineColor>
 800816a:	b980      	cbnz	r0, 800818e <GL_DrawLine1Ex+0x192>
 800816c:	f8dd c004 	ldr.w	ip, [sp, #4]
 8008170:	f8d9 0000 	ldr.w	r0, [r9]
 8008174:	9b00      	ldr	r3, [sp, #0]
 8008176:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8008178:	fb9c f1f4 	sdiv	r1, ip, r4
 800817c:	4431      	add	r1, r6
 800817e:	b913      	cbnz	r3, 8008186 <GL_DrawLine1Ex+0x18a>
 8008180:	6843      	ldr	r3, [r0, #4]
 8008182:	4658      	mov	r0, fp
 8008184:	e002      	b.n	800818c <GL_DrawLine1Ex+0x190>
 8008186:	6843      	ldr	r3, [r0, #4]
 8008188:	4608      	mov	r0, r1
 800818a:	4659      	mov	r1, fp
 800818c:	4798      	blx	r3
 800818e:	f8dd c004 	ldr.w	ip, [sp, #4]
 8008192:	44bc      	add	ip, r7
 8008194:	f10b 0b01 	add.w	fp, fp, #1
 8008198:	f8cd c004 	str.w	ip, [sp, #4]
 800819c:	e7da      	b.n	8008154 <GL_DrawLine1Ex+0x158>
 800819e:	f1ba 3fff 	cmp.w	sl, #4294967295
 80081a2:	bf04      	itt	eq
 80081a4:	1824      	addeq	r4, r4, r0
 80081a6:	f8c8 4000 	streq.w	r4, [r8]
 80081aa:	f8d8 2000 	ldr.w	r2, [r8]
 80081ae:	ebca 0302 	rsb	r3, sl, r2
 80081b2:	f8c8 3000 	str.w	r3, [r8]
 80081b6:	b003      	add	sp, #12
 80081b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80081bc:	200000b0 	.word	0x200000b0

080081c0 <GL_DrawLineEx>:
 80081c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80081c4:	4d67      	ldr	r5, [pc, #412]	; (8008364 <GL_DrawLineEx+0x1a4>)
 80081c6:	682c      	ldr	r4, [r5, #0]
 80081c8:	f894 b018 	ldrb.w	fp, [r4, #24]
 80081cc:	f1bb 0f01 	cmp.w	fp, #1
 80081d0:	b087      	sub	sp, #28
 80081d2:	4681      	mov	r9, r0
 80081d4:	4688      	mov	r8, r1
 80081d6:	4617      	mov	r7, r2
 80081d8:	461e      	mov	r6, r3
 80081da:	46aa      	mov	sl, r5
 80081dc:	d104      	bne.n	80081e8 <GL_DrawLineEx+0x28>
 80081de:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80081e0:	9400      	str	r4, [sp, #0]
 80081e2:	f7ff ff0b 	bl	8007ffc <GL_DrawLine1Ex>
 80081e6:	e0ba      	b.n	800835e <GL_DrawLineEx+0x19e>
 80081e8:	1a84      	subs	r4, r0, r2
 80081ea:	1acd      	subs	r5, r1, r3
 80081ec:	ea54 0305 	orrs.w	r3, r4, r5
 80081f0:	f000 80b5 	beq.w	800835e <GL_DrawLineEx+0x19e>
 80081f4:	2c00      	cmp	r4, #0
 80081f6:	bfba      	itte	lt
 80081f8:	4264      	neglt	r4, r4
 80081fa:	2301      	movlt	r3, #1
 80081fc:	2300      	movge	r3, #0
 80081fe:	2d00      	cmp	r5, #0
 8008200:	bfbc      	itt	lt
 8008202:	426d      	neglt	r5, r5
 8008204:	f043 0302 	orrlt.w	r3, r3, #2
 8008208:	42a5      	cmp	r5, r4
 800820a:	f10b 3bff 	add.w	fp, fp, #4294967295
 800820e:	dd04      	ble.n	800821a <GL_DrawLineEx+0x5a>
 8008210:	4622      	mov	r2, r4
 8008212:	f043 0304 	orr.w	r3, r3, #4
 8008216:	462c      	mov	r4, r5
 8008218:	4615      	mov	r5, r2
 800821a:	2202      	movs	r2, #2
 800821c:	fb94 f2f2 	sdiv	r2, r4, r2
 8008220:	eb02 2585 	add.w	r5, r2, r5, lsl #10
 8008224:	fb95 f4f4 	sdiv	r4, r5, r4
 8008228:	11a1      	asrs	r1, r4, #6
 800822a:	4a4f      	ldr	r2, [pc, #316]	; (8008368 <GL_DrawLineEx+0x1a8>)
 800822c:	f3c4 0483 	ubfx	r4, r4, #2, #4
 8008230:	f1c4 0510 	rsb	r5, r4, #16
 8008234:	f932 0011 	ldrsh.w	r0, [r2, r1, lsl #1]
 8008238:	2d10      	cmp	r5, #16
 800823a:	fb05 f000 	mul.w	r0, r5, r0
 800823e:	d004      	beq.n	800824a <GL_DrawLineEx+0x8a>
 8008240:	3101      	adds	r1, #1
 8008242:	f932 2011 	ldrsh.w	r2, [r2, r1, lsl #1]
 8008246:	fb04 0002 	mla	r0, r4, r2, r0
 800824a:	2210      	movs	r2, #16
 800824c:	3008      	adds	r0, #8
 800824e:	fb90 f0f2 	sdiv	r0, r0, r2
 8008252:	0759      	lsls	r1, r3, #29
 8008254:	bf48      	it	mi
 8008256:	f5c0 6080 	rsbmi	r0, r0, #1024	; 0x400
 800825a:	07da      	lsls	r2, r3, #31
 800825c:	bf48      	it	mi
 800825e:	f5c0 6000 	rsbmi	r0, r0, #2048	; 0x800
 8008262:	079b      	lsls	r3, r3, #30
 8008264:	bf48      	it	mi
 8008266:	f5c0 5080 	rsbmi	r0, r0, #4096	; 0x1000
 800826a:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 800826e:	4628      	mov	r0, r5
 8008270:	f7ff fec0 	bl	8007ff4 <GUI_cos>
 8008274:	fb00 f40b 	mul.w	r4, r0, fp
 8008278:	4628      	mov	r0, r5
 800827a:	f7ff fe8f 	bl	8007f9c <GUI_sin>
 800827e:	2c00      	cmp	r4, #0
 8008280:	fb00 f00b 	mul.w	r0, r0, fp
 8008284:	da04      	bge.n	8008290 <GL_DrawLineEx+0xd0>
 8008286:	f5c4 7300 	rsb	r3, r4, #512	; 0x200
 800828a:	129b      	asrs	r3, r3, #10
 800828c:	425b      	negs	r3, r3
 800828e:	e002      	b.n	8008296 <GL_DrawLineEx+0xd6>
 8008290:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8008294:	129b      	asrs	r3, r3, #10
 8008296:	2800      	cmp	r0, #0
 8008298:	da06      	bge.n	80082a8 <GL_DrawLineEx+0xe8>
 800829a:	f5c0 7b00 	rsb	fp, r0, #512	; 0x200
 800829e:	ea4f 2bab 	mov.w	fp, fp, asr #10
 80082a2:	f1cb 0b00 	rsb	fp, fp, #0
 80082a6:	e003      	b.n	80082b0 <GL_DrawLineEx+0xf0>
 80082a8:	f500 7b00 	add.w	fp, r0, #512	; 0x200
 80082ac:	ea4f 2bab 	mov.w	fp, fp, asr #10
 80082b0:	2b00      	cmp	r3, #0
 80082b2:	dd03      	ble.n	80082bc <GL_DrawLineEx+0xfc>
 80082b4:	1c58      	adds	r0, r3, #1
 80082b6:	1040      	asrs	r0, r0, #1
 80082b8:	105b      	asrs	r3, r3, #1
 80082ba:	e005      	b.n	80082c8 <GL_DrawLineEx+0x108>
 80082bc:	2202      	movs	r2, #2
 80082be:	fb93 f0f2 	sdiv	r0, r3, r2
 80082c2:	3b01      	subs	r3, #1
 80082c4:	fb93 f3f2 	sdiv	r3, r3, r2
 80082c8:	f1bb 0f00 	cmp.w	fp, #0
 80082cc:	dd05      	ble.n	80082da <GL_DrawLineEx+0x11a>
 80082ce:	f10b 0201 	add.w	r2, fp, #1
 80082d2:	1052      	asrs	r2, r2, #1
 80082d4:	ea4f 0b6b 	mov.w	fp, fp, asr #1
 80082d8:	e006      	b.n	80082e8 <GL_DrawLineEx+0x128>
 80082da:	2102      	movs	r1, #2
 80082dc:	fb9b f2f1 	sdiv	r2, fp, r1
 80082e0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80082e4:	fb9b fbf1 	sdiv	fp, fp, r1
 80082e8:	b280      	uxth	r0, r0
 80082ea:	fa1f f489 	uxth.w	r4, r9
 80082ee:	1901      	adds	r1, r0, r4
 80082f0:	b292      	uxth	r2, r2
 80082f2:	f8ad 1008 	strh.w	r1, [sp, #8]
 80082f6:	fa1f fb8b 	uxth.w	fp, fp
 80082fa:	fa1f f188 	uxth.w	r1, r8
 80082fe:	1855      	adds	r5, r2, r1
 8008300:	ebcb 0101 	rsb	r1, fp, r1
 8008304:	b29b      	uxth	r3, r3
 8008306:	f8ad 100e 	strh.w	r1, [sp, #14]
 800830a:	b2b9      	uxth	r1, r7
 800830c:	1ae4      	subs	r4, r4, r3
 800830e:	1acb      	subs	r3, r1, r3
 8008310:	f8ad 3010 	strh.w	r3, [sp, #16]
 8008314:	b2b3      	uxth	r3, r6
 8008316:	4401      	add	r1, r0
 8008318:	ebcb 0b03 	rsb	fp, fp, r3
 800831c:	4413      	add	r3, r2
 800831e:	2200      	movs	r2, #0
 8008320:	f8ad 1014 	strh.w	r1, [sp, #20]
 8008324:	f8ad 3016 	strh.w	r3, [sp, #22]
 8008328:	a802      	add	r0, sp, #8
 800832a:	4613      	mov	r3, r2
 800832c:	2104      	movs	r1, #4
 800832e:	f8ad 500a 	strh.w	r5, [sp, #10]
 8008332:	f8ad 400c 	strh.w	r4, [sp, #12]
 8008336:	f8ad b012 	strh.w	fp, [sp, #18]
 800833a:	f004 fa39 	bl	800c7b0 <GL_FillPolygon>
 800833e:	f8da 3000 	ldr.w	r3, [sl]
 8008342:	7e5b      	ldrb	r3, [r3, #25]
 8008344:	b91b      	cbnz	r3, 800834e <GL_DrawLineEx+0x18e>
 8008346:	4648      	mov	r0, r9
 8008348:	4641      	mov	r1, r8
 800834a:	f000 f87f 	bl	800844c <GL_DrawPoint>
 800834e:	f8da 3000 	ldr.w	r3, [sl]
 8008352:	7e5b      	ldrb	r3, [r3, #25]
 8008354:	b91b      	cbnz	r3, 800835e <GL_DrawLineEx+0x19e>
 8008356:	4638      	mov	r0, r7
 8008358:	4631      	mov	r1, r6
 800835a:	f000 f877 	bl	800844c <GL_DrawPoint>
 800835e:	b007      	add	sp, #28
 8008360:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008364:	200000b0 	.word	0x200000b0
 8008368:	0800f66a 	.word	0x0800f66a

0800836c <GL_DrawLine>:
 800836c:	b530      	push	{r4, r5, lr}
 800836e:	b085      	sub	sp, #20
 8008370:	ac04      	add	r4, sp, #16
 8008372:	2500      	movs	r5, #0
 8008374:	f844 5d04 	str.w	r5, [r4, #-4]!
 8008378:	9400      	str	r4, [sp, #0]
 800837a:	f7ff ff21 	bl	80081c0 <GL_DrawLineEx>
 800837e:	b005      	add	sp, #20
 8008380:	bd30      	pop	{r4, r5, pc}
	...

08008384 <GUI_DrawLine>:
 8008384:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008388:	461e      	mov	r6, r3
 800838a:	4b0c      	ldr	r3, [pc, #48]	; (80083bc <GUI_DrawLine+0x38>)
 800838c:	681c      	ldr	r4, [r3, #0]
 800838e:	4681      	mov	r9, r0
 8008390:	2000      	movs	r0, #0
 8008392:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8008394:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8008396:	4688      	mov	r8, r1
 8008398:	4617      	mov	r7, r2
 800839a:	f7fd fa11 	bl	80057c0 <WM__InitIVRSearch>
 800839e:	b150      	cbz	r0, 80083b6 <GUI_DrawLine+0x32>
 80083a0:	eb09 0005 	add.w	r0, r9, r5
 80083a4:	eb08 0104 	add.w	r1, r8, r4
 80083a8:	197a      	adds	r2, r7, r5
 80083aa:	1933      	adds	r3, r6, r4
 80083ac:	f7ff ffde 	bl	800836c <GL_DrawLine>
 80083b0:	f7fd f944 	bl	800563c <WM__GetNextIVR>
 80083b4:	e7f3      	b.n	800839e <GUI_DrawLine+0x1a>
 80083b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80083ba:	bf00      	nop
 80083bc:	200000b0 	.word	0x200000b0

080083c0 <GUI_DrawHLine>:
 80083c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80083c2:	4f10      	ldr	r7, [pc, #64]	; (8008404 <GUI_DrawHLine+0x44>)
 80083c4:	683b      	ldr	r3, [r7, #0]
 80083c6:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 80083c8:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80083ca:	4405      	add	r5, r0
 80083cc:	190e      	adds	r6, r1, r4
 80083ce:	b2ab      	uxth	r3, r5
 80083d0:	4414      	add	r4, r2
 80083d2:	4668      	mov	r0, sp
 80083d4:	f8ad 6000 	strh.w	r6, [sp]
 80083d8:	f8ad 4004 	strh.w	r4, [sp, #4]
 80083dc:	f8ad 3002 	strh.w	r3, [sp, #2]
 80083e0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80083e4:	f7fd f9ec 	bl	80057c0 <WM__InitIVRSearch>
 80083e8:	b148      	cbz	r0, 80083fe <GUI_DrawHLine+0x3e>
 80083ea:	683b      	ldr	r3, [r7, #0]
 80083ec:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80083ee:	4630      	mov	r0, r6
 80083f0:	681b      	ldr	r3, [r3, #0]
 80083f2:	4629      	mov	r1, r5
 80083f4:	4622      	mov	r2, r4
 80083f6:	4798      	blx	r3
 80083f8:	f7fd f920 	bl	800563c <WM__GetNextIVR>
 80083fc:	e7f4      	b.n	80083e8 <GUI_DrawHLine+0x28>
 80083fe:	b003      	add	sp, #12
 8008400:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008402:	bf00      	nop
 8008404:	200000b0 	.word	0x200000b0

08008408 <GUI_DrawPixel>:
 8008408:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800840a:	4e0f      	ldr	r6, [pc, #60]	; (8008448 <GUI_DrawPixel+0x40>)
 800840c:	6833      	ldr	r3, [r6, #0]
 800840e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8008410:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 8008412:	4405      	add	r5, r0
 8008414:	b2ab      	uxth	r3, r5
 8008416:	440c      	add	r4, r1
 8008418:	f8ad 3004 	strh.w	r3, [sp, #4]
 800841c:	f8ad 3000 	strh.w	r3, [sp]
 8008420:	4668      	mov	r0, sp
 8008422:	b2a3      	uxth	r3, r4
 8008424:	f8ad 3006 	strh.w	r3, [sp, #6]
 8008428:	f8ad 3002 	strh.w	r3, [sp, #2]
 800842c:	f7fd f9c8 	bl	80057c0 <WM__InitIVRSearch>
 8008430:	b140      	cbz	r0, 8008444 <GUI_DrawPixel+0x3c>
 8008432:	6833      	ldr	r3, [r6, #0]
 8008434:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8008436:	4628      	mov	r0, r5
 8008438:	685b      	ldr	r3, [r3, #4]
 800843a:	4621      	mov	r1, r4
 800843c:	4798      	blx	r3
 800843e:	f7fd f8fd 	bl	800563c <WM__GetNextIVR>
 8008442:	e7f5      	b.n	8008430 <GUI_DrawPixel+0x28>
 8008444:	b002      	add	sp, #8
 8008446:	bd70      	pop	{r4, r5, r6, pc}
 8008448:	200000b0 	.word	0x200000b0

0800844c <GL_DrawPoint>:
 800844c:	b508      	push	{r3, lr}
 800844e:	4b08      	ldr	r3, [pc, #32]	; (8008470 <GL_DrawPoint+0x24>)
 8008450:	681b      	ldr	r3, [r3, #0]
 8008452:	7e1a      	ldrb	r2, [r3, #24]
 8008454:	2a01      	cmp	r2, #1
 8008456:	d103      	bne.n	8008460 <GL_DrawPoint+0x14>
 8008458:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800845a:	685b      	ldr	r3, [r3, #4]
 800845c:	4798      	blx	r3
 800845e:	bd08      	pop	{r3, pc}
 8008460:	2302      	movs	r3, #2
 8008462:	3a01      	subs	r2, #1
 8008464:	fb92 f2f3 	sdiv	r2, r2, r3
 8008468:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800846c:	f000 bdf2 	b.w	8009054 <GL_FillCircle>
 8008470:	200000b0 	.word	0x200000b0

08008474 <GUI_DrawVLine>:
 8008474:	4b0f      	ldr	r3, [pc, #60]	; (80084b4 <GUI_DrawVLine+0x40>)
 8008476:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008478:	681b      	ldr	r3, [r3, #0]
 800847a:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800847c:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 800847e:	4406      	add	r6, r0
 8008480:	190d      	adds	r5, r1, r4
 8008482:	b2b3      	uxth	r3, r6
 8008484:	4414      	add	r4, r2
 8008486:	4668      	mov	r0, sp
 8008488:	f8ad 3000 	strh.w	r3, [sp]
 800848c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008490:	f8ad 5002 	strh.w	r5, [sp, #2]
 8008494:	f8ad 4006 	strh.w	r4, [sp, #6]
 8008498:	f7fd f992 	bl	80057c0 <WM__InitIVRSearch>
 800849c:	b138      	cbz	r0, 80084ae <GUI_DrawVLine+0x3a>
 800849e:	4630      	mov	r0, r6
 80084a0:	4629      	mov	r1, r5
 80084a2:	4622      	mov	r2, r4
 80084a4:	f7fe fd1e 	bl	8006ee4 <LCD_DrawVLine>
 80084a8:	f7fd f8c8 	bl	800563c <WM__GetNextIVR>
 80084ac:	e7f6      	b.n	800849c <GUI_DrawVLine+0x28>
 80084ae:	b002      	add	sp, #8
 80084b0:	bd70      	pop	{r4, r5, r6, pc}
 80084b2:	bf00      	nop
 80084b4:	200000b0 	.word	0x200000b0

080084b8 <GUI_FillRect>:
 80084b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80084ba:	4c0f      	ldr	r4, [pc, #60]	; (80084f8 <GUI_FillRect+0x40>)
 80084bc:	6824      	ldr	r4, [r4, #0]
 80084be:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80084c0:	6d24      	ldr	r4, [r4, #80]	; 0x50
 80084c2:	1947      	adds	r7, r0, r5
 80084c4:	190e      	adds	r6, r1, r4
 80084c6:	4415      	add	r5, r2
 80084c8:	441c      	add	r4, r3
 80084ca:	4668      	mov	r0, sp
 80084cc:	f8ad 7000 	strh.w	r7, [sp]
 80084d0:	f8ad 5004 	strh.w	r5, [sp, #4]
 80084d4:	f8ad 6002 	strh.w	r6, [sp, #2]
 80084d8:	f8ad 4006 	strh.w	r4, [sp, #6]
 80084dc:	f7fd f970 	bl	80057c0 <WM__InitIVRSearch>
 80084e0:	b140      	cbz	r0, 80084f4 <GUI_FillRect+0x3c>
 80084e2:	4638      	mov	r0, r7
 80084e4:	4631      	mov	r1, r6
 80084e6:	462a      	mov	r2, r5
 80084e8:	4623      	mov	r3, r4
 80084ea:	f7fe fd21 	bl	8006f30 <LCD_FillRect>
 80084ee:	f7fd f8a5 	bl	800563c <WM__GetNextIVR>
 80084f2:	e7f5      	b.n	80084e0 <GUI_FillRect+0x28>
 80084f4:	b003      	add	sp, #12
 80084f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80084f8:	200000b0 	.word	0x200000b0

080084fc <GUI_FillRectEx>:
 80084fc:	4603      	mov	r3, r0
 80084fe:	f9b0 0000 	ldrsh.w	r0, [r0]
 8008502:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 8008506:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800850a:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800850e:	f7ff bfd3 	b.w	80084b8 <GUI_FillRect>
	...

08008514 <GUI_DrawGraphEx>:
 8008514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008518:	4698      	mov	r8, r3
 800851a:	4b81      	ldr	r3, [pc, #516]	; (8008720 <GUI_DrawGraphEx+0x20c>)
 800851c:	b08b      	sub	sp, #44	; 0x2c
 800851e:	468a      	mov	sl, r1
 8008520:	6819      	ldr	r1, [r3, #0]
 8008522:	9006      	str	r0, [sp, #24]
 8008524:	2000      	movs	r0, #0
 8008526:	4691      	mov	r9, r2
 8008528:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800852a:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800852c:	6ccd      	ldr	r5, [r1, #76]	; 0x4c
 800852e:	6d0c      	ldr	r4, [r1, #80]	; 0x50
 8008530:	f7fd f946 	bl	80057c0 <WM__InitIVRSearch>
 8008534:	2800      	cmp	r0, #0
 8008536:	f000 80ef 	beq.w	8008718 <GUI_DrawGraphEx+0x204>
 800853a:	f10a 4300 	add.w	r3, sl, #2147483648	; 0x80000000
 800853e:	9806      	ldr	r0, [sp, #24]
 8008540:	3b01      	subs	r3, #1
 8008542:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8008546:	9307      	str	r3, [sp, #28]
 8008548:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800854a:	2b00      	cmp	r3, #0
 800854c:	bf14      	ite	ne
 800854e:	f06f 0301 	mvnne.w	r3, #1
 8008552:	2302      	moveq	r3, #2
 8008554:	44a9      	add	r9, r5
 8008556:	4444      	add	r4, r8
 8008558:	9309      	str	r3, [sp, #36]	; 0x24
 800855a:	b927      	cbnz	r7, 8008566 <GUI_DrawGraphEx+0x52>
 800855c:	f7fd f86e 	bl	800563c <WM__GetNextIVR>
 8008560:	2800      	cmp	r0, #0
 8008562:	d1fa      	bne.n	800855a <GUI_DrawGraphEx+0x46>
 8008564:	e0d8      	b.n	8008718 <GUI_DrawGraphEx+0x204>
 8008566:	2e00      	cmp	r6, #0
 8008568:	d0f8      	beq.n	800855c <GUI_DrawGraphEx+0x48>
 800856a:	f1ba 0f00 	cmp.w	sl, #0
 800856e:	ddf5      	ble.n	800855c <GUI_DrawGraphEx+0x48>
 8008570:	1c7b      	adds	r3, r7, #1
 8008572:	d104      	bne.n	800857e <GUI_DrawGraphEx+0x6a>
 8008574:	2e01      	cmp	r6, #1
 8008576:	bf14      	ite	ne
 8008578:	2302      	movne	r3, #2
 800857a:	2301      	moveq	r3, #1
 800857c:	e00a      	b.n	8008594 <GUI_DrawGraphEx+0x80>
 800857e:	2f01      	cmp	r7, #1
 8008580:	d104      	bne.n	800858c <GUI_DrawGraphEx+0x78>
 8008582:	2e01      	cmp	r6, #1
 8008584:	bf14      	ite	ne
 8008586:	2303      	movne	r3, #3
 8008588:	2300      	moveq	r3, #0
 800858a:	e003      	b.n	8008594 <GUI_DrawGraphEx+0x80>
 800858c:	2e01      	cmp	r6, #1
 800858e:	bf14      	ite	ne
 8008590:	2305      	movne	r3, #5
 8008592:	2304      	moveq	r3, #4
 8008594:	9305      	str	r3, [sp, #20]
 8008596:	4b62      	ldr	r3, [pc, #392]	; (8008720 <GUI_DrawGraphEx+0x20c>)
 8008598:	681b      	ldr	r3, [r3, #0]
 800859a:	695b      	ldr	r3, [r3, #20]
 800859c:	b1eb      	cbz	r3, 80085da <GUI_DrawGraphEx+0xc6>
 800859e:	f9b3 8000 	ldrsh.w	r8, [r3]
 80085a2:	f9b3 0002 	ldrsh.w	r0, [r3, #2]
 80085a6:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 80085aa:	f9b3 b006 	ldrsh.w	fp, [r3, #6]
 80085ae:	9004      	str	r0, [sp, #16]
 80085b0:	f108 38ff 	add.w	r8, r8, #4294967295
 80085b4:	45c1      	cmp	r9, r8
 80085b6:	eb09 030a 	add.w	r3, r9, sl
 80085ba:	bfb8      	it	lt
 80085bc:	ebc9 0808 	rsblt	r8, r9, r8
 80085c0:	f103 33ff 	add.w	r3, r3, #4294967295
 80085c4:	bfb4      	ite	lt
 80085c6:	ea28 78e8 	biclt.w	r8, r8, r8, asr #31
 80085ca:	f04f 0800 	movge.w	r8, #0
 80085ce:	4293      	cmp	r3, r2
 80085d0:	dd0a      	ble.n	80085e8 <GUI_DrawGraphEx+0xd4>
 80085d2:	ebc9 0202 	rsb	r2, r9, r2
 80085d6:	3201      	adds	r2, #1
 80085d8:	e007      	b.n	80085ea <GUI_DrawGraphEx+0xd6>
 80085da:	f04f 3bff 	mov.w	fp, #4294967295
 80085de:	4652      	mov	r2, sl
 80085e0:	f8cd b010 	str.w	fp, [sp, #16]
 80085e4:	4698      	mov	r8, r3
 80085e6:	e000      	b.n	80085ea <GUI_DrawGraphEx+0xd6>
 80085e8:	4652      	mov	r2, sl
 80085ea:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80085ec:	b91b      	cbnz	r3, 80085f6 <GUI_DrawGraphEx+0xe2>
 80085ee:	9b06      	ldr	r3, [sp, #24]
 80085f0:	eb03 0348 	add.w	r3, r3, r8, lsl #1
 80085f4:	e000      	b.n	80085f8 <GUI_DrawGraphEx+0xe4>
 80085f6:	9b07      	ldr	r3, [sp, #28]
 80085f8:	4590      	cmp	r8, r2
 80085fa:	9303      	str	r3, [sp, #12]
 80085fc:	daae      	bge.n	800855c <GUI_DrawGraphEx+0x48>
 80085fe:	444a      	add	r2, r9
 8008600:	9208      	str	r2, [sp, #32]
 8008602:	2200      	movs	r2, #0
 8008604:	44c8      	add	r8, r9
 8008606:	2301      	movs	r3, #1
 8008608:	9202      	str	r2, [sp, #8]
 800860a:	9803      	ldr	r0, [sp, #12]
 800860c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800860e:	8805      	ldrh	r5, [r0, #0]
 8008610:	4408      	add	r0, r1
 8008612:	b22d      	sxth	r5, r5
 8008614:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8008618:	428d      	cmp	r5, r1
 800861a:	9003      	str	r0, [sp, #12]
 800861c:	d10d      	bne.n	800863a <GUI_DrawGraphEx+0x126>
 800861e:	9802      	ldr	r0, [sp, #8]
 8008620:	2800      	cmp	r0, #0
 8008622:	d16f      	bne.n	8008704 <GUI_DrawGraphEx+0x1f0>
 8008624:	2b00      	cmp	r3, #0
 8008626:	d16f      	bne.n	8008708 <GUI_DrawGraphEx+0x1f4>
 8008628:	4611      	mov	r1, r2
 800862a:	f108 30ff 	add.w	r0, r8, #4294967295
 800862e:	9201      	str	r2, [sp, #4]
 8008630:	f7fe fc04 	bl	8006e3c <LCD_DrawPixel>
 8008634:	2301      	movs	r3, #1
 8008636:	9a01      	ldr	r2, [sp, #4]
 8008638:	e067      	b.n	800870a <GUI_DrawGraphEx+0x1f6>
 800863a:	9805      	ldr	r0, [sp, #20]
 800863c:	1e41      	subs	r1, r0, #1
 800863e:	b1db      	cbz	r3, 8008678 <GUI_DrawGraphEx+0x164>
 8008640:	2904      	cmp	r1, #4
 8008642:	d817      	bhi.n	8008674 <GUI_DrawGraphEx+0x160>
 8008644:	e8df f001 	tbb	[pc, r1]
 8008648:	0b070503 	.word	0x0b070503
 800864c:	0f          	.byte	0x0f
 800864d:	00          	.byte	0x00
 800864e:	1b62      	subs	r2, r4, r5
 8008650:	e00e      	b.n	8008670 <GUI_DrawGraphEx+0x15c>
 8008652:	1b65      	subs	r5, r4, r5
 8008654:	e000      	b.n	8008658 <GUI_DrawGraphEx+0x144>
 8008656:	4425      	add	r5, r4
 8008658:	fbb5 f2f6 	udiv	r2, r5, r6
 800865c:	e008      	b.n	8008670 <GUI_DrawGraphEx+0x15c>
 800865e:	4425      	add	r5, r4
 8008660:	fb07 f205 	mul.w	r2, r7, r5
 8008664:	e004      	b.n	8008670 <GUI_DrawGraphEx+0x15c>
 8008666:	4425      	add	r5, r4
 8008668:	fb07 f205 	mul.w	r2, r7, r5
 800866c:	fbb2 f2f6 	udiv	r2, r2, r6
 8008670:	2300      	movs	r3, #0
 8008672:	e04a      	b.n	800870a <GUI_DrawGraphEx+0x1f6>
 8008674:	192a      	adds	r2, r5, r4
 8008676:	e7fb      	b.n	8008670 <GUI_DrawGraphEx+0x15c>
 8008678:	2904      	cmp	r1, #4
 800867a:	d812      	bhi.n	80086a2 <GUI_DrawGraphEx+0x18e>
 800867c:	e8df f001 	tbb	[pc, r1]
 8008680:	0b070503 	.word	0x0b070503
 8008684:	0e          	.byte	0x0e
 8008685:	00          	.byte	0x00
 8008686:	1b65      	subs	r5, r4, r5
 8008688:	e00c      	b.n	80086a4 <GUI_DrawGraphEx+0x190>
 800868a:	1b65      	subs	r5, r4, r5
 800868c:	e000      	b.n	8008690 <GUI_DrawGraphEx+0x17c>
 800868e:	4425      	add	r5, r4
 8008690:	fbb5 f5f6 	udiv	r5, r5, r6
 8008694:	e006      	b.n	80086a4 <GUI_DrawGraphEx+0x190>
 8008696:	4425      	add	r5, r4
 8008698:	437d      	muls	r5, r7
 800869a:	e003      	b.n	80086a4 <GUI_DrawGraphEx+0x190>
 800869c:	4425      	add	r5, r4
 800869e:	437d      	muls	r5, r7
 80086a0:	e7f6      	b.n	8008690 <GUI_DrawGraphEx+0x17c>
 80086a2:	4425      	add	r5, r4
 80086a4:	9904      	ldr	r1, [sp, #16]
 80086a6:	428a      	cmp	r2, r1
 80086a8:	da01      	bge.n	80086ae <GUI_DrawGraphEx+0x19a>
 80086aa:	428d      	cmp	r5, r1
 80086ac:	db25      	blt.n	80086fa <GUI_DrawGraphEx+0x1e6>
 80086ae:	455a      	cmp	r2, fp
 80086b0:	dd01      	ble.n	80086b6 <GUI_DrawGraphEx+0x1a2>
 80086b2:	455d      	cmp	r5, fp
 80086b4:	dc21      	bgt.n	80086fa <GUI_DrawGraphEx+0x1e6>
 80086b6:	eb05 0c02 	add.w	ip, r5, r2
 80086ba:	2102      	movs	r1, #2
 80086bc:	42aa      	cmp	r2, r5
 80086be:	fb9c fcf1 	sdiv	ip, ip, r1
 80086c2:	f108 30ff 	add.w	r0, r8, #4294967295
 80086c6:	dc0b      	bgt.n	80086e0 <GUI_DrawGraphEx+0x1cc>
 80086c8:	4611      	mov	r1, r2
 80086ca:	4662      	mov	r2, ip
 80086cc:	e88d 1008 	stmia.w	sp, {r3, ip}
 80086d0:	f7fe fc08 	bl	8006ee4 <LCD_DrawVLine>
 80086d4:	f8dd c004 	ldr.w	ip, [sp, #4]
 80086d8:	4640      	mov	r0, r8
 80086da:	4661      	mov	r1, ip
 80086dc:	462a      	mov	r2, r5
 80086de:	e009      	b.n	80086f4 <GUI_DrawGraphEx+0x1e0>
 80086e0:	4661      	mov	r1, ip
 80086e2:	e88d 1008 	stmia.w	sp, {r3, ip}
 80086e6:	f7fe fbfd 	bl	8006ee4 <LCD_DrawVLine>
 80086ea:	f8dd c004 	ldr.w	ip, [sp, #4]
 80086ee:	4640      	mov	r0, r8
 80086f0:	4629      	mov	r1, r5
 80086f2:	4662      	mov	r2, ip
 80086f4:	f7fe fbf6 	bl	8006ee4 <LCD_DrawVLine>
 80086f8:	9b00      	ldr	r3, [sp, #0]
 80086fa:	9a02      	ldr	r2, [sp, #8]
 80086fc:	3201      	adds	r2, #1
 80086fe:	9202      	str	r2, [sp, #8]
 8008700:	462a      	mov	r2, r5
 8008702:	e002      	b.n	800870a <GUI_DrawGraphEx+0x1f6>
 8008704:	2300      	movs	r3, #0
 8008706:	9302      	str	r3, [sp, #8]
 8008708:	2301      	movs	r3, #1
 800870a:	9808      	ldr	r0, [sp, #32]
 800870c:	f108 0801 	add.w	r8, r8, #1
 8008710:	4580      	cmp	r8, r0
 8008712:	f47f af7a 	bne.w	800860a <GUI_DrawGraphEx+0xf6>
 8008716:	e721      	b.n	800855c <GUI_DrawGraphEx+0x48>
 8008718:	b00b      	add	sp, #44	; 0x2c
 800871a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800871e:	bf00      	nop
 8008720:	200000b0 	.word	0x200000b0

08008724 <GUI_DispString>:
 8008724:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008728:	4604      	mov	r4, r0
 800872a:	2800      	cmp	r0, #0
 800872c:	d079      	beq.n	8008822 <GUI_DispString+0xfe>
 800872e:	4d3e      	ldr	r5, [pc, #248]	; (8008828 <GUI_DispString+0x104>)
 8008730:	f000 ff88 	bl	8009644 <GUI_GetFontDistY>
 8008734:	682b      	ldr	r3, [r5, #0]
 8008736:	4680      	mov	r8, r0
 8008738:	f8b3 9022 	ldrh.w	r9, [r3, #34]	; 0x22
 800873c:	f000 ff6a 	bl	8009614 <GUI_GetYAdjust>
 8008740:	682b      	ldr	r3, [r5, #0]
 8008742:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 8008744:	b287      	uxth	r7, r0
 8008746:	1bd2      	subs	r2, r2, r7
 8008748:	849a      	strh	r2, [r3, #36]	; 0x24
 800874a:	7823      	ldrb	r3, [r4, #0]
 800874c:	2b00      	cmp	r3, #0
 800874e:	d05d      	beq.n	800880c <GUI_DispString+0xe8>
 8008750:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8008754:	4620      	mov	r0, r4
 8008756:	f000 feab 	bl	80094b0 <GUI__GetLineNumChars>
 800875a:	4606      	mov	r6, r0
 800875c:	4631      	mov	r1, r6
 800875e:	4620      	mov	r0, r4
 8008760:	f000 fed4 	bl	800950c <GUI__GetLineDistX>
 8008764:	682b      	ldr	r3, [r5, #0]
 8008766:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8008768:	f002 0203 	and.w	r2, r2, #3
 800876c:	2a01      	cmp	r2, #1
 800876e:	d005      	beq.n	800877c <GUI_DispString+0x58>
 8008770:	2a02      	cmp	r2, #2
 8008772:	bf14      	ite	ne
 8008774:	2200      	movne	r2, #0
 8008776:	fb90 f2f2 	sdiveq	r2, r0, r2
 800877a:	e000      	b.n	800877e <GUI_DispString+0x5a>
 800877c:	4602      	mov	r2, r0
 800877e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8008780:	1a8a      	subs	r2, r1, r2
 8008782:	b292      	uxth	r2, r2
 8008784:	b291      	uxth	r1, r2
 8008786:	8459      	strh	r1, [r3, #34]	; 0x22
 8008788:	fa1f fa80 	uxth.w	sl, r0
 800878c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800878e:	f8ad 1000 	strh.w	r1, [sp]
 8008792:	f10a 31ff 	add.w	r1, sl, #4294967295
 8008796:	440a      	add	r2, r1
 8008798:	f8ad 3002 	strh.w	r3, [sp, #2]
 800879c:	fa1f fb88 	uxth.w	fp, r8
 80087a0:	3b01      	subs	r3, #1
 80087a2:	445b      	add	r3, fp
 80087a4:	f8ad 2004 	strh.w	r2, [sp, #4]
 80087a8:	4620      	mov	r0, r4
 80087aa:	4631      	mov	r1, r6
 80087ac:	466a      	mov	r2, sp
 80087ae:	f8ad 3006 	strh.w	r3, [sp, #6]
 80087b2:	f000 fedb 	bl	800956c <GUI__DispLine>
 80087b6:	682b      	ldr	r3, [r5, #0]
 80087b8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80087bc:	849a      	strh	r2, [r3, #36]	; 0x24
 80087be:	4620      	mov	r0, r4
 80087c0:	4631      	mov	r1, r6
 80087c2:	f7ff f995 	bl	8007af0 <GUI_UC__NumChars2NumBytes>
 80087c6:	5c23      	ldrb	r3, [r4, r0]
 80087c8:	2b0a      	cmp	r3, #10
 80087ca:	eb04 0200 	add.w	r2, r4, r0
 80087ce:	d001      	beq.n	80087d4 <GUI_DispString+0xb0>
 80087d0:	2b0d      	cmp	r3, #13
 80087d2:	d112      	bne.n	80087fa <GUI_DispString+0xd6>
 80087d4:	682b      	ldr	r3, [r5, #0]
 80087d6:	8d99      	ldrh	r1, [r3, #44]	; 0x2c
 80087d8:	f001 0103 	and.w	r1, r1, #3
 80087dc:	3901      	subs	r1, #1
 80087de:	2901      	cmp	r1, #1
 80087e0:	bf8a      	itet	hi
 80087e2:	8c19      	ldrhhi	r1, [r3, #32]
 80087e4:	f8a3 9022 	strhls.w	r9, [r3, #34]	; 0x22
 80087e8:	8459      	strhhi	r1, [r3, #34]	; 0x22
 80087ea:	7811      	ldrb	r1, [r2, #0]
 80087ec:	290a      	cmp	r1, #10
 80087ee:	d10b      	bne.n	8008808 <GUI_DispString+0xe4>
 80087f0:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 80087f2:	448b      	add	fp, r1
 80087f4:	f8a3 b024 	strh.w	fp, [r3, #36]	; 0x24
 80087f8:	e006      	b.n	8008808 <GUI_DispString+0xe4>
 80087fa:	4b0b      	ldr	r3, [pc, #44]	; (8008828 <GUI_DispString+0x104>)
 80087fc:	f8bd 0000 	ldrh.w	r0, [sp]
 8008800:	681b      	ldr	r3, [r3, #0]
 8008802:	4482      	add	sl, r0
 8008804:	f8a3 a022 	strh.w	sl, [r3, #34]	; 0x22
 8008808:	7813      	ldrb	r3, [r2, #0]
 800880a:	b943      	cbnz	r3, 800881e <GUI_DispString+0xfa>
 800880c:	682b      	ldr	r3, [r5, #0]
 800880e:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 8008810:	4417      	add	r7, r2
 8008812:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8008814:	849f      	strh	r7, [r3, #36]	; 0x24
 8008816:	f022 0203 	bic.w	r2, r2, #3
 800881a:	859a      	strh	r2, [r3, #44]	; 0x2c
 800881c:	e001      	b.n	8008822 <GUI_DispString+0xfe>
 800881e:	1c54      	adds	r4, r2, #1
 8008820:	e793      	b.n	800874a <GUI_DispString+0x26>
 8008822:	b003      	add	sp, #12
 8008824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008828:	200000b0 	.word	0x200000b0

0800882c <GUI_DispStringAt>:
 800882c:	4b02      	ldr	r3, [pc, #8]	; (8008838 <GUI_DispStringAt+0xc>)
 800882e:	681b      	ldr	r3, [r3, #0]
 8008830:	8459      	strh	r1, [r3, #34]	; 0x22
 8008832:	849a      	strh	r2, [r3, #36]	; 0x24
 8008834:	f7ff bf76 	b.w	8008724 <GUI_DispString>
 8008838:	200000b0 	.word	0x200000b0

0800883c <GUI__DispStringInRect>:
 800883c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008840:	b087      	sub	sp, #28
 8008842:	460c      	mov	r4, r1
 8008844:	9001      	str	r0, [sp, #4]
 8008846:	4691      	mov	r9, r2
 8008848:	461d      	mov	r5, r3
 800884a:	f000 fefb 	bl	8009644 <GUI_GetFontDistY>
 800884e:	9f01      	ldr	r7, [sp, #4]
 8008850:	4680      	mov	r8, r0
 8008852:	b124      	cbz	r4, 800885e <GUI__DispStringInRect+0x22>
 8008854:	6820      	ldr	r0, [r4, #0]
 8008856:	6861      	ldr	r1, [r4, #4]
 8008858:	ab04      	add	r3, sp, #16
 800885a:	c303      	stmia	r3!, {r0, r1}
 800885c:	e002      	b.n	8008864 <GUI__DispStringInRect+0x28>
 800885e:	a804      	add	r0, sp, #16
 8008860:	f000 faca 	bl	8008df8 <GUI_GetClientRect>
 8008864:	f019 0a0c 	ands.w	sl, r9, #12
 8008868:	d002      	beq.n	8008870 <GUI__DispStringInRect+0x34>
 800886a:	462c      	mov	r4, r5
 800886c:	2600      	movs	r6, #0
 800886e:	e016      	b.n	800889e <GUI__DispStringInRect+0x62>
 8008870:	f9bd 4012 	ldrsh.w	r4, [sp, #18]
 8008874:	e032      	b.n	80088dc <GUI__DispStringInRect+0xa0>
 8008876:	4621      	mov	r1, r4
 8008878:	9801      	ldr	r0, [sp, #4]
 800887a:	f000 fe19 	bl	80094b0 <GUI__GetLineNumChars>
 800887e:	f8dd b004 	ldr.w	fp, [sp, #4]
 8008882:	4601      	mov	r1, r0
 8008884:	1a24      	subs	r4, r4, r0
 8008886:	4658      	mov	r0, fp
 8008888:	f7ff f932 	bl	8007af0 <GUI_UC__NumChars2NumBytes>
 800888c:	eb0b 0300 	add.w	r3, fp, r0
 8008890:	a806      	add	r0, sp, #24
 8008892:	3601      	adds	r6, #1
 8008894:	f840 3d14 	str.w	r3, [r0, #-20]!
 8008898:	f7fe fde3 	bl	8007462 <GUI__HandleEOLine>
 800889c:	b908      	cbnz	r0, 80088a2 <GUI__DispStringInRect+0x66>
 800889e:	2c00      	cmp	r4, #0
 80088a0:	d1e9      	bne.n	8008876 <GUI__DispStringInRect+0x3a>
 80088a2:	f1ba 0f08 	cmp.w	sl, #8
 80088a6:	d005      	beq.n	80088b4 <GUI__DispStringInRect+0x78>
 80088a8:	f1ba 0f0c 	cmp.w	sl, #12
 80088ac:	d008      	beq.n	80088c0 <GUI__DispStringInRect+0x84>
 80088ae:	f1ba 0f04 	cmp.w	sl, #4
 80088b2:	d112      	bne.n	80088da <GUI__DispStringInRect+0x9e>
 80088b4:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 80088b8:	fb08 4416 	mls	r4, r8, r6, r4
 80088bc:	3401      	adds	r4, #1
 80088be:	e00d      	b.n	80088dc <GUI__DispStringInRect+0xa0>
 80088c0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80088c4:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 80088c8:	1ae4      	subs	r4, r4, r3
 80088ca:	3401      	adds	r4, #1
 80088cc:	fb08 4416 	mls	r4, r8, r6, r4
 80088d0:	2202      	movs	r2, #2
 80088d2:	fb94 f4f2 	sdiv	r4, r4, r2
 80088d6:	441c      	add	r4, r3
 80088d8:	e000      	b.n	80088dc <GUI__DispStringInRect+0xa0>
 80088da:	2400      	movs	r4, #0
 80088dc:	9701      	str	r7, [sp, #4]
 80088de:	2600      	movs	r6, #0
 80088e0:	2d00      	cmp	r5, #0
 80088e2:	d04b      	beq.n	800897c <GUI__DispStringInRect+0x140>
 80088e4:	4629      	mov	r1, r5
 80088e6:	9801      	ldr	r0, [sp, #4]
 80088e8:	f000 fde2 	bl	80094b0 <GUI__GetLineNumChars>
 80088ec:	4607      	mov	r7, r0
 80088ee:	1a2d      	subs	r5, r5, r0
 80088f0:	4639      	mov	r1, r7
 80088f2:	9801      	ldr	r0, [sp, #4]
 80088f4:	f000 fe0a 	bl	800950c <GUI__GetLineDistX>
 80088f8:	f009 0303 	and.w	r3, r9, #3
 80088fc:	2b01      	cmp	r3, #1
 80088fe:	d00f      	beq.n	8008920 <GUI__DispStringInRect+0xe4>
 8008900:	2b02      	cmp	r3, #2
 8008902:	d003      	beq.n	800890c <GUI__DispStringInRect+0xd0>
 8008904:	b983      	cbnz	r3, 8008928 <GUI__DispStringInRect+0xec>
 8008906:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
 800890a:	e00d      	b.n	8008928 <GUI__DispStringInRect+0xec>
 800890c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8008910:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 8008914:	1ab6      	subs	r6, r6, r2
 8008916:	1a36      	subs	r6, r6, r0
 8008918:	fb96 f6f3 	sdiv	r6, r6, r3
 800891c:	4416      	add	r6, r2
 800891e:	e003      	b.n	8008928 <GUI__DispStringInRect+0xec>
 8008920:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 8008924:	1a36      	subs	r6, r6, r0
 8008926:	3601      	adds	r6, #1
 8008928:	4b16      	ldr	r3, [pc, #88]	; (8008984 <GUI__DispStringInRect+0x148>)
 800892a:	6819      	ldr	r1, [r3, #0]
 800892c:	3801      	subs	r0, #1
 800892e:	b2a3      	uxth	r3, r4
 8008930:	b2b2      	uxth	r2, r6
 8008932:	848b      	strh	r3, [r1, #36]	; 0x24
 8008934:	4430      	add	r0, r6
 8008936:	f8ad 300a 	strh.w	r3, [sp, #10]
 800893a:	f108 33ff 	add.w	r3, r8, #4294967295
 800893e:	4423      	add	r3, r4
 8008940:	844a      	strh	r2, [r1, #34]	; 0x22
 8008942:	f8ad 2008 	strh.w	r2, [sp, #8]
 8008946:	4639      	mov	r1, r7
 8008948:	aa02      	add	r2, sp, #8
 800894a:	f8ad 000c 	strh.w	r0, [sp, #12]
 800894e:	9801      	ldr	r0, [sp, #4]
 8008950:	f8ad 300e 	strh.w	r3, [sp, #14]
 8008954:	f000 fe0a 	bl	800956c <GUI__DispLine>
 8008958:	f8dd a004 	ldr.w	sl, [sp, #4]
 800895c:	4639      	mov	r1, r7
 800895e:	4650      	mov	r0, sl
 8008960:	f7ff f8c6 	bl	8007af0 <GUI_UC__NumChars2NumBytes>
 8008964:	af06      	add	r7, sp, #24
 8008966:	4450      	add	r0, sl
 8008968:	f847 0d14 	str.w	r0, [r7, #-20]!
 800896c:	f000 fe6a 	bl	8009644 <GUI_GetFontDistY>
 8008970:	4404      	add	r4, r0
 8008972:	4638      	mov	r0, r7
 8008974:	f7fe fd75 	bl	8007462 <GUI__HandleEOLine>
 8008978:	2800      	cmp	r0, #0
 800897a:	d0b1      	beq.n	80088e0 <GUI__DispStringInRect+0xa4>
 800897c:	b007      	add	sp, #28
 800897e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008982:	bf00      	nop
 8008984:	200000b0 	.word	0x200000b0

08008988 <GUI_DispStringInRectMax>:
 8008988:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800898c:	460c      	mov	r4, r1
 800898e:	4690      	mov	r8, r2
 8008990:	461f      	mov	r7, r3
 8008992:	4606      	mov	r6, r0
 8008994:	b1c0      	cbz	r0, 80089c8 <GUI_DispStringInRectMax+0x40>
 8008996:	b169      	cbz	r1, 80089b4 <GUI_DispStringInRectMax+0x2c>
 8008998:	4608      	mov	r0, r1
 800899a:	f7fb ff3b 	bl	8004814 <WM_SetUserClipRect>
 800899e:	4605      	mov	r5, r0
 80089a0:	b148      	cbz	r0, 80089b6 <GUI_DispStringInRectMax+0x2e>
 80089a2:	4668      	mov	r0, sp
 80089a4:	4621      	mov	r1, r4
 80089a6:	462a      	mov	r2, r5
 80089a8:	f7fe fd8d 	bl	80074c6 <GUI__IntersectRects>
 80089ac:	4668      	mov	r0, sp
 80089ae:	f7fb ff31 	bl	8004814 <WM_SetUserClipRect>
 80089b2:	e000      	b.n	80089b6 <GUI_DispStringInRectMax+0x2e>
 80089b4:	460d      	mov	r5, r1
 80089b6:	4630      	mov	r0, r6
 80089b8:	4621      	mov	r1, r4
 80089ba:	4642      	mov	r2, r8
 80089bc:	463b      	mov	r3, r7
 80089be:	f7ff ff3d 	bl	800883c <GUI__DispStringInRect>
 80089c2:	4628      	mov	r0, r5
 80089c4:	f7fb ff26 	bl	8004814 <WM_SetUserClipRect>
 80089c8:	b002      	add	sp, #8
 80089ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080089ce <GUI_DispStringInRect>:
 80089ce:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80089d2:	f7ff bfd9 	b.w	8008988 <GUI_DispStringInRectMax>

080089d6 <GUI_WrapGetNumLines>:
 80089d6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80089d8:	4605      	mov	r5, r0
 80089da:	460e      	mov	r6, r1
 80089dc:	4617      	mov	r7, r2
 80089de:	2400      	movs	r4, #0
 80089e0:	4628      	mov	r0, r5
 80089e2:	4631      	mov	r1, r6
 80089e4:	463a      	mov	r2, r7
 80089e6:	f003 fb89 	bl	800c0fc <GUI__WrapGetNumBytesToNextLine>
 80089ea:	b110      	cbz	r0, 80089f2 <GUI_WrapGetNumLines+0x1c>
 80089ec:	4405      	add	r5, r0
 80089ee:	3401      	adds	r4, #1
 80089f0:	e7f6      	b.n	80089e0 <GUI_WrapGetNumLines+0xa>
 80089f2:	4620      	mov	r0, r4
 80089f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080089f6 <GUI_DispStringInRectWrap>:
 80089f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80089fa:	b089      	sub	sp, #36	; 0x24
 80089fc:	460c      	mov	r4, r1
 80089fe:	9202      	str	r2, [sp, #8]
 8008a00:	9303      	str	r3, [sp, #12]
 8008a02:	4605      	mov	r5, r0
 8008a04:	2800      	cmp	r0, #0
 8008a06:	f000 8092 	beq.w	8008b2e <GUI_DispStringInRectWrap+0x138>
 8008a0a:	f8b1 a000 	ldrh.w	sl, [r1]
 8008a0e:	f8b1 9004 	ldrh.w	r9, [r1, #4]
 8008a12:	884e      	ldrh	r6, [r1, #2]
 8008a14:	f8b1 b006 	ldrh.w	fp, [r1, #6]
 8008a18:	fa0f f289 	sxth.w	r2, r9
 8008a1c:	fa0f f38a 	sxth.w	r3, sl
 8008a20:	1ad3      	subs	r3, r2, r3
 8008a22:	3301      	adds	r3, #1
 8008a24:	9301      	str	r3, [sp, #4]
 8008a26:	f000 fe0d 	bl	8009644 <GUI_GetFontDistY>
 8008a2a:	9902      	ldr	r1, [sp, #8]
 8008a2c:	f011 070c 	ands.w	r7, r1, #12
 8008a30:	4680      	mov	r8, r0
 8008a32:	d01b      	beq.n	8008a6c <GUI_DispStringInRectWrap+0x76>
 8008a34:	4628      	mov	r0, r5
 8008a36:	9901      	ldr	r1, [sp, #4]
 8008a38:	9a03      	ldr	r2, [sp, #12]
 8008a3a:	f7ff ffcc 	bl	80089d6 <GUI_WrapGetNumLines>
 8008a3e:	2f08      	cmp	r7, #8
 8008a40:	d003      	beq.n	8008a4a <GUI_DispStringInRectWrap+0x54>
 8008a42:	2f0c      	cmp	r7, #12
 8008a44:	d006      	beq.n	8008a54 <GUI_DispStringInRectWrap+0x5e>
 8008a46:	2f04      	cmp	r7, #4
 8008a48:	d110      	bne.n	8008a6c <GUI_DispStringInRectWrap+0x76>
 8008a4a:	f10b 0601 	add.w	r6, fp, #1
 8008a4e:	fb00 6618 	mls	r6, r0, r8, r6
 8008a52:	e00a      	b.n	8008a6a <GUI_DispStringInRectWrap+0x74>
 8008a54:	b232      	sxth	r2, r6
 8008a56:	fa0f f38b 	sxth.w	r3, fp
 8008a5a:	1a9b      	subs	r3, r3, r2
 8008a5c:	3301      	adds	r3, #1
 8008a5e:	fb08 3010 	mls	r0, r8, r0, r3
 8008a62:	2302      	movs	r3, #2
 8008a64:	fb90 f0f3 	sdiv	r0, r0, r3
 8008a68:	4406      	add	r6, r0
 8008a6a:	b2b6      	uxth	r6, r6
 8008a6c:	4620      	mov	r0, r4
 8008a6e:	f7fb fed1 	bl	8004814 <WM_SetUserClipRect>
 8008a72:	4607      	mov	r7, r0
 8008a74:	b178      	cbz	r0, 8008a96 <GUI_DispStringInRectWrap+0xa0>
 8008a76:	a804      	add	r0, sp, #16
 8008a78:	4621      	mov	r1, r4
 8008a7a:	463a      	mov	r2, r7
 8008a7c:	f8ad a010 	strh.w	sl, [sp, #16]
 8008a80:	f8ad 6012 	strh.w	r6, [sp, #18]
 8008a84:	f8ad 9014 	strh.w	r9, [sp, #20]
 8008a88:	f8ad b016 	strh.w	fp, [sp, #22]
 8008a8c:	f7fe fd1b 	bl	80074c6 <GUI__IntersectRects>
 8008a90:	a804      	add	r0, sp, #16
 8008a92:	f7fb febf 	bl	8004814 <WM_SetUserClipRect>
 8008a96:	9901      	ldr	r1, [sp, #4]
 8008a98:	9a03      	ldr	r2, [sp, #12]
 8008a9a:	4628      	mov	r0, r5
 8008a9c:	f003 fafc 	bl	800c098 <GUI__WrapGetNumCharsDisp>
 8008aa0:	eb06 0b08 	add.w	fp, r6, r8
 8008aa4:	4602      	mov	r2, r0
 8008aa6:	fa1f fb8b 	uxth.w	fp, fp
 8008aaa:	f10b 33ff 	add.w	r3, fp, #4294967295
 8008aae:	4611      	mov	r1, r2
 8008ab0:	4628      	mov	r0, r5
 8008ab2:	f8ad 301e 	strh.w	r3, [sp, #30]
 8008ab6:	9200      	str	r2, [sp, #0]
 8008ab8:	f8ad a018 	strh.w	sl, [sp, #24]
 8008abc:	f8ad 601a 	strh.w	r6, [sp, #26]
 8008ac0:	f8ad 901c 	strh.w	r9, [sp, #28]
 8008ac4:	f000 fd22 	bl	800950c <GUI__GetLineDistX>
 8008ac8:	9902      	ldr	r1, [sp, #8]
 8008aca:	9a00      	ldr	r2, [sp, #0]
 8008acc:	f001 0303 	and.w	r3, r1, #3
 8008ad0:	2b01      	cmp	r3, #1
 8008ad2:	d014      	beq.n	8008afe <GUI_DispStringInRectWrap+0x108>
 8008ad4:	2b02      	cmp	r3, #2
 8008ad6:	d004      	beq.n	8008ae2 <GUI_DispStringInRectWrap+0xec>
 8008ad8:	b9b3      	cbnz	r3, 8008b08 <GUI_DispStringInRectWrap+0x112>
 8008ada:	8823      	ldrh	r3, [r4, #0]
 8008adc:	f8ad 3018 	strh.w	r3, [sp, #24]
 8008ae0:	e012      	b.n	8008b08 <GUI_DispStringInRectWrap+0x112>
 8008ae2:	8821      	ldrh	r1, [r4, #0]
 8008ae4:	f9b4 e004 	ldrsh.w	lr, [r4, #4]
 8008ae8:	b20e      	sxth	r6, r1
 8008aea:	ebc6 060e 	rsb	r6, r6, lr
 8008aee:	1a30      	subs	r0, r6, r0
 8008af0:	3001      	adds	r0, #1
 8008af2:	fb90 f3f3 	sdiv	r3, r0, r3
 8008af6:	4419      	add	r1, r3
 8008af8:	f8ad 1018 	strh.w	r1, [sp, #24]
 8008afc:	e004      	b.n	8008b08 <GUI_DispStringInRectWrap+0x112>
 8008afe:	88a3      	ldrh	r3, [r4, #4]
 8008b00:	3301      	adds	r3, #1
 8008b02:	1a18      	subs	r0, r3, r0
 8008b04:	f8ad 0018 	strh.w	r0, [sp, #24]
 8008b08:	4628      	mov	r0, r5
 8008b0a:	4611      	mov	r1, r2
 8008b0c:	aa06      	add	r2, sp, #24
 8008b0e:	f000 fd2d 	bl	800956c <GUI__DispLine>
 8008b12:	4628      	mov	r0, r5
 8008b14:	9901      	ldr	r1, [sp, #4]
 8008b16:	9a03      	ldr	r2, [sp, #12]
 8008b18:	f003 faf0 	bl	800c0fc <GUI__WrapGetNumBytesToNextLine>
 8008b1c:	4405      	add	r5, r0
 8008b1e:	fa1f f68b 	uxth.w	r6, fp
 8008b22:	782b      	ldrb	r3, [r5, #0]
 8008b24:	2b00      	cmp	r3, #0
 8008b26:	d1b6      	bne.n	8008a96 <GUI_DispStringInRectWrap+0xa0>
 8008b28:	4638      	mov	r0, r7
 8008b2a:	f7fb fe73 	bl	8004814 <WM_SetUserClipRect>
 8008b2e:	b009      	add	sp, #36	; 0x24
 8008b30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08008b34 <GUI_GetStringDistX>:
 8008b34:	b510      	push	{r4, lr}
 8008b36:	4604      	mov	r4, r0
 8008b38:	f7fe ffec 	bl	8007b14 <GUI__GetNumChars>
 8008b3c:	4601      	mov	r1, r0
 8008b3e:	4620      	mov	r0, r4
 8008b40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008b44:	f000 bce2 	b.w	800950c <GUI__GetLineDistX>

08008b48 <GUI_DEVICE__GetpDriver>:
 8008b48:	2801      	cmp	r0, #1
 8008b4a:	dc09      	bgt.n	8008b60 <GUI_DEVICE__GetpDriver+0x18>
 8008b4c:	4b05      	ldr	r3, [pc, #20]	; (8008b64 <GUI_DEVICE__GetpDriver+0x1c>)
 8008b4e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8008b52:	b120      	cbz	r0, 8008b5e <GUI_DEVICE__GetpDriver+0x16>
 8008b54:	68c3      	ldr	r3, [r0, #12]
 8008b56:	681b      	ldr	r3, [r3, #0]
 8008b58:	b11b      	cbz	r3, 8008b62 <GUI_DEVICE__GetpDriver+0x1a>
 8008b5a:	6800      	ldr	r0, [r0, #0]
 8008b5c:	e7f9      	b.n	8008b52 <GUI_DEVICE__GetpDriver+0xa>
 8008b5e:	4770      	bx	lr
 8008b60:	2000      	movs	r0, #0
 8008b62:	4770      	bx	lr
 8008b64:	200004d8 	.word	0x200004d8

08008b68 <GUI_DEVICE_Delete>:
 8008b68:	f000 be58 	b.w	800981c <GUI_ALLOC_FreeFixedBlock>

08008b6c <GUI_DEVICE_Create>:
 8008b6c:	2b01      	cmp	r3, #1
 8008b6e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b70:	4606      	mov	r6, r0
 8008b72:	460d      	mov	r5, r1
 8008b74:	4617      	mov	r7, r2
 8008b76:	461c      	mov	r4, r3
 8008b78:	dd01      	ble.n	8008b7e <GUI_DEVICE_Create+0x12>
 8008b7a:	2000      	movs	r0, #0
 8008b7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008b7e:	201c      	movs	r0, #28
 8008b80:	f000 ff28 	bl	80099d4 <GUI_ALLOC_GetFixedBlock>
 8008b84:	2800      	cmp	r0, #0
 8008b86:	d0f8      	beq.n	8008b7a <GUI_DEVICE_Create+0xe>
 8008b88:	b10d      	cbz	r5, 8008b8e <GUI_DEVICE_Create+0x22>
 8008b8a:	6105      	str	r5, [r0, #16]
 8008b8c:	e009      	b.n	8008ba2 <GUI_DEVICE_Create+0x36>
 8008b8e:	4b09      	ldr	r3, [pc, #36]	; (8008bb4 <GUI_DEVICE_Create+0x48>)
 8008b90:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 8008b94:	b129      	cbz	r1, 8008ba2 <GUI_DEVICE_Create+0x36>
 8008b96:	680b      	ldr	r3, [r1, #0]
 8008b98:	b10b      	cbz	r3, 8008b9e <GUI_DEVICE_Create+0x32>
 8008b9a:	4619      	mov	r1, r3
 8008b9c:	e7fb      	b.n	8008b96 <GUI_DEVICE_Create+0x2a>
 8008b9e:	690b      	ldr	r3, [r1, #16]
 8008ba0:	6103      	str	r3, [r0, #16]
 8008ba2:	2300      	movs	r3, #0
 8008ba4:	6083      	str	r3, [r0, #8]
 8008ba6:	6184      	str	r4, [r0, #24]
 8008ba8:	8287      	strh	r7, [r0, #20]
 8008baa:	60c6      	str	r6, [r0, #12]
 8008bac:	6003      	str	r3, [r0, #0]
 8008bae:	6043      	str	r3, [r0, #4]
 8008bb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008bb2:	bf00      	nop
 8008bb4:	200004d8 	.word	0x200004d8

08008bb8 <GUI_DEVICE_Unlink>:
 8008bb8:	6981      	ldr	r1, [r0, #24]
 8008bba:	4a0b      	ldr	r2, [pc, #44]	; (8008be8 <GUI_DEVICE_Unlink+0x30>)
 8008bbc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8008bc0:	4283      	cmp	r3, r0
 8008bc2:	d105      	bne.n	8008bd0 <GUI_DEVICE_Unlink+0x18>
 8008bc4:	6803      	ldr	r3, [r0, #0]
 8008bc6:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8008bca:	b10b      	cbz	r3, 8008bd0 <GUI_DEVICE_Unlink+0x18>
 8008bcc:	2200      	movs	r2, #0
 8008bce:	605a      	str	r2, [r3, #4]
 8008bd0:	6843      	ldr	r3, [r0, #4]
 8008bd2:	b10b      	cbz	r3, 8008bd8 <GUI_DEVICE_Unlink+0x20>
 8008bd4:	6802      	ldr	r2, [r0, #0]
 8008bd6:	601a      	str	r2, [r3, #0]
 8008bd8:	6802      	ldr	r2, [r0, #0]
 8008bda:	b102      	cbz	r2, 8008bde <GUI_DEVICE_Unlink+0x26>
 8008bdc:	6053      	str	r3, [r2, #4]
 8008bde:	2300      	movs	r3, #0
 8008be0:	6003      	str	r3, [r0, #0]
 8008be2:	6043      	str	r3, [r0, #4]
 8008be4:	4770      	bx	lr
 8008be6:	bf00      	nop
 8008be8:	200004d8 	.word	0x200004d8

08008bec <GUI_DEVICE_Link>:
 8008bec:	b570      	push	{r4, r5, r6, lr}
 8008bee:	b908      	cbnz	r0, 8008bf4 <GUI_DEVICE_Link+0x8>
 8008bf0:	2001      	movs	r0, #1
 8008bf2:	bd70      	pop	{r4, r5, r6, pc}
 8008bf4:	6982      	ldr	r2, [r0, #24]
 8008bf6:	2a01      	cmp	r2, #1
 8008bf8:	dcfa      	bgt.n	8008bf0 <GUI_DEVICE_Link+0x4>
 8008bfa:	4b1b      	ldr	r3, [pc, #108]	; (8008c68 <GUI_DEVICE_Link+0x7c>)
 8008bfc:	7819      	ldrb	r1, [r3, #0]
 8008bfe:	428a      	cmp	r2, r1
 8008c00:	bfa4      	itt	ge
 8008c02:	1c51      	addge	r1, r2, #1
 8008c04:	7019      	strbge	r1, [r3, #0]
 8008c06:	4919      	ldr	r1, [pc, #100]	; (8008c6c <GUI_DEVICE_Link+0x80>)
 8008c08:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 8008c0c:	460d      	mov	r5, r1
 8008c0e:	b913      	cbnz	r3, 8008c16 <GUI_DEVICE_Link+0x2a>
 8008c10:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 8008c14:	e01a      	b.n	8008c4c <GUI_DEVICE_Link+0x60>
 8008c16:	6859      	ldr	r1, [r3, #4]
 8008c18:	b109      	cbz	r1, 8008c1e <GUI_DEVICE_Link+0x32>
 8008c1a:	460b      	mov	r3, r1
 8008c1c:	e7fb      	b.n	8008c16 <GUI_DEVICE_Link+0x2a>
 8008c1e:	68c1      	ldr	r1, [r0, #12]
 8008c20:	680e      	ldr	r6, [r1, #0]
 8008c22:	68d9      	ldr	r1, [r3, #12]
 8008c24:	680c      	ldr	r4, [r1, #0]
 8008c26:	42b4      	cmp	r4, r6
 8008c28:	dd03      	ble.n	8008c32 <GUI_DEVICE_Link+0x46>
 8008c2a:	681b      	ldr	r3, [r3, #0]
 8008c2c:	2b00      	cmp	r3, #0
 8008c2e:	d1f8      	bne.n	8008c22 <GUI_DEVICE_Link+0x36>
 8008c30:	e7de      	b.n	8008bf0 <GUI_DEVICE_Link+0x4>
 8008c32:	d102      	bne.n	8008c3a <GUI_DEVICE_Link+0x4e>
 8008c34:	8a81      	ldrh	r1, [r0, #20]
 8008c36:	2901      	cmp	r1, #1
 8008c38:	d00f      	beq.n	8008c5a <GUI_DEVICE_Link+0x6e>
 8008c3a:	6859      	ldr	r1, [r3, #4]
 8008c3c:	b189      	cbz	r1, 8008c62 <GUI_DEVICE_Link+0x76>
 8008c3e:	6008      	str	r0, [r1, #0]
 8008c40:	6041      	str	r1, [r0, #4]
 8008c42:	6058      	str	r0, [r3, #4]
 8008c44:	4298      	cmp	r0, r3
 8008c46:	bf08      	it	eq
 8008c48:	2300      	moveq	r3, #0
 8008c4a:	6003      	str	r3, [r0, #0]
 8008c4c:	2000      	movs	r0, #0
 8008c4e:	bd70      	pop	{r4, r5, r6, pc}
 8008c50:	68cb      	ldr	r3, [r1, #12]
 8008c52:	681b      	ldr	r3, [r3, #0]
 8008c54:	42a3      	cmp	r3, r4
 8008c56:	460b      	mov	r3, r1
 8008c58:	dbef      	blt.n	8008c3a <GUI_DEVICE_Link+0x4e>
 8008c5a:	6819      	ldr	r1, [r3, #0]
 8008c5c:	2900      	cmp	r1, #0
 8008c5e:	d1f7      	bne.n	8008c50 <GUI_DEVICE_Link+0x64>
 8008c60:	e7eb      	b.n	8008c3a <GUI_DEVICE_Link+0x4e>
 8008c62:	f845 0022 	str.w	r0, [r5, r2, lsl #2]
 8008c66:	e7ec      	b.n	8008c42 <GUI_DEVICE_Link+0x56>
 8008c68:	20000486 	.word	0x20000486
 8008c6c:	200004d8 	.word	0x200004d8

08008c70 <GUI_ClearRect>:
 8008c70:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8008c74:	4607      	mov	r7, r0
 8008c76:	2004      	movs	r0, #4
 8008c78:	469a      	mov	sl, r3
 8008c7a:	460e      	mov	r6, r1
 8008c7c:	4691      	mov	r9, r2
 8008c7e:	f7fe f8d5 	bl	8006e2c <LCD_SetDrawMode>
 8008c82:	4b13      	ldr	r3, [pc, #76]	; (8008cd0 <GUI_ClearRect+0x60>)
 8008c84:	681c      	ldr	r4, [r3, #0]
 8008c86:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8008c88:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8008c8a:	442f      	add	r7, r5
 8008c8c:	4426      	add	r6, r4
 8008c8e:	4680      	mov	r8, r0
 8008c90:	444d      	add	r5, r9
 8008c92:	4454      	add	r4, sl
 8008c94:	4668      	mov	r0, sp
 8008c96:	f8ad 7000 	strh.w	r7, [sp]
 8008c9a:	f8ad 5004 	strh.w	r5, [sp, #4]
 8008c9e:	f8ad 6002 	strh.w	r6, [sp, #2]
 8008ca2:	f8ad 4006 	strh.w	r4, [sp, #6]
 8008ca6:	f7fc fd8b 	bl	80057c0 <WM__InitIVRSearch>
 8008caa:	b928      	cbnz	r0, 8008cb8 <GUI_ClearRect+0x48>
 8008cac:	4640      	mov	r0, r8
 8008cae:	f7fe f8bd 	bl	8006e2c <LCD_SetDrawMode>
 8008cb2:	b002      	add	sp, #8
 8008cb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008cb8:	4638      	mov	r0, r7
 8008cba:	4631      	mov	r1, r6
 8008cbc:	462a      	mov	r2, r5
 8008cbe:	4623      	mov	r3, r4
 8008cc0:	f7fe f936 	bl	8006f30 <LCD_FillRect>
 8008cc4:	f7fc fcba 	bl	800563c <WM__GetNextIVR>
 8008cc8:	2800      	cmp	r0, #0
 8008cca:	d1f5      	bne.n	8008cb8 <GUI_ClearRect+0x48>
 8008ccc:	e7ee      	b.n	8008cac <GUI_ClearRect+0x3c>
 8008cce:	bf00      	nop
 8008cd0:	200000b0 	.word	0x200000b0

08008cd4 <GUI_Clear>:
 8008cd4:	b510      	push	{r4, lr}
 8008cd6:	2000      	movs	r0, #0
 8008cd8:	4601      	mov	r1, r0
 8008cda:	f000 f91f 	bl	8008f1c <GUI_GotoXY>
 8008cde:	4804      	ldr	r0, [pc, #16]	; (8008cf0 <GUI_Clear+0x1c>)
 8008ce0:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8008ce4:	4601      	mov	r1, r0
 8008ce6:	4613      	mov	r3, r2
 8008ce8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008cec:	f7ff bfc0 	b.w	8008c70 <GUI_ClearRect>
 8008cf0:	ffffc001 	.word	0xffffc001

08008cf4 <GUI__RegisterExit>:
 8008cf4:	b480      	push	{r7}
 8008cf6:	b083      	sub	sp, #12
 8008cf8:	af00      	add	r7, sp, #0
 8008cfa:	6078      	str	r0, [r7, #4]
 8008cfc:	4b05      	ldr	r3, [pc, #20]	; (8008d14 <GUI__RegisterExit+0x20>)
 8008cfe:	681a      	ldr	r2, [r3, #0]
 8008d00:	687b      	ldr	r3, [r7, #4]
 8008d02:	605a      	str	r2, [r3, #4]
 8008d04:	4b03      	ldr	r3, [pc, #12]	; (8008d14 <GUI__RegisterExit+0x20>)
 8008d06:	687a      	ldr	r2, [r7, #4]
 8008d08:	601a      	str	r2, [r3, #0]
 8008d0a:	370c      	adds	r7, #12
 8008d0c:	46bd      	mov	sp, r7
 8008d0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d12:	4770      	bx	lr
 8008d14:	2000037c 	.word	0x2000037c

08008d18 <GUI__GetFontSizeY>:
 8008d18:	4b03      	ldr	r3, [pc, #12]	; (8008d28 <GUI__GetFontSizeY+0x10>)
 8008d1a:	681b      	ldr	r3, [r3, #0]
 8008d1c:	69db      	ldr	r3, [r3, #28]
 8008d1e:	7e18      	ldrb	r0, [r3, #24]
 8008d20:	7edb      	ldrb	r3, [r3, #27]
 8008d22:	4358      	muls	r0, r3
 8008d24:	4770      	bx	lr
 8008d26:	bf00      	nop
 8008d28:	200000b0 	.word	0x200000b0

08008d2c <GUI_Long2Len>:
 8008d2c:	b510      	push	{r4, lr}
 8008d2e:	ea80 71e0 	eor.w	r1, r0, r0, asr #31
 8008d32:	eba1 71e0 	sub.w	r1, r1, r0, asr #31
 8008d36:	2200      	movs	r2, #0
 8008d38:	1c53      	adds	r3, r2, #1
 8008d3a:	2b0a      	cmp	r3, #10
 8008d3c:	d006      	beq.n	8008d4c <GUI_Long2Len+0x20>
 8008d3e:	4c06      	ldr	r4, [pc, #24]	; (8008d58 <GUI_Long2Len+0x2c>)
 8008d40:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 8008d44:	42a1      	cmp	r1, r4
 8008d46:	d301      	bcc.n	8008d4c <GUI_Long2Len+0x20>
 8008d48:	461a      	mov	r2, r3
 8008d4a:	e7f5      	b.n	8008d38 <GUI_Long2Len+0xc>
 8008d4c:	2800      	cmp	r0, #0
 8008d4e:	bfb8      	it	lt
 8008d50:	1c93      	addlt	r3, r2, #2
 8008d52:	4618      	mov	r0, r3
 8008d54:	bd10      	pop	{r4, pc}
 8008d56:	bf00      	nop
 8008d58:	0800f68c 	.word	0x0800f68c

08008d5c <GUI_AddDecShift>:
 8008d5c:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
 8008d60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008d62:	681c      	ldr	r4, [r3, #0]
 8008d64:	d109      	bne.n	8008d7a <GUI_AddDecShift+0x1e>
 8008d66:	1c60      	adds	r0, r4, #1
 8008d68:	6018      	str	r0, [r3, #0]
 8008d6a:	3901      	subs	r1, #1
 8008d6c:	202d      	movs	r0, #45	; 0x2d
 8008d6e:	7020      	strb	r0, [r4, #0]
 8008d70:	b2c9      	uxtb	r1, r1
 8008d72:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8008d76:	2601      	movs	r6, #1
 8008d78:	e00c      	b.n	8008d94 <GUI_AddDecShift+0x38>
 8008d7a:	2800      	cmp	r0, #0
 8008d7c:	da06      	bge.n	8008d8c <GUI_AddDecShift+0x30>
 8008d7e:	1c65      	adds	r5, r4, #1
 8008d80:	601d      	str	r5, [r3, #0]
 8008d82:	252d      	movs	r5, #45	; 0x2d
 8008d84:	7025      	strb	r5, [r4, #0]
 8008d86:	4240      	negs	r0, r0
 8008d88:	2401      	movs	r4, #1
 8008d8a:	e000      	b.n	8008d8e <GUI_AddDecShift+0x32>
 8008d8c:	2400      	movs	r4, #0
 8008d8e:	1b09      	subs	r1, r1, r4
 8008d90:	b2c9      	uxtb	r1, r1
 8008d92:	2600      	movs	r6, #0
 8008d94:	b30a      	cbz	r2, 8008dda <GUI_AddDecShift+0x7e>
 8008d96:	3901      	subs	r1, #1
 8008d98:	b2c9      	uxtb	r1, r1
 8008d9a:	e01e      	b.n	8008dda <GUI_AddDecShift+0x7e>
 8008d9c:	1e4d      	subs	r5, r1, #1
 8008d9e:	4291      	cmp	r1, r2
 8008da0:	b2ed      	uxtb	r5, r5
 8008da2:	d105      	bne.n	8008db0 <GUI_AddDecShift+0x54>
 8008da4:	681c      	ldr	r4, [r3, #0]
 8008da6:	1c67      	adds	r7, r4, #1
 8008da8:	601f      	str	r7, [r3, #0]
 8008daa:	4f11      	ldr	r7, [pc, #68]	; (8008df0 <GUI_AddDecShift+0x94>)
 8008dac:	783f      	ldrb	r7, [r7, #0]
 8008dae:	7027      	strb	r7, [r4, #0]
 8008db0:	4c10      	ldr	r4, [pc, #64]	; (8008df4 <GUI_AddDecShift+0x98>)
 8008db2:	f854 7025 	ldr.w	r7, [r4, r5, lsl #2]
 8008db6:	fb90 f4f7 	sdiv	r4, r0, r7
 8008dba:	b2e4      	uxtb	r4, r4
 8008dbc:	2c0a      	cmp	r4, #10
 8008dbe:	d80e      	bhi.n	8008dde <GUI_AddDecShift+0x82>
 8008dc0:	fb07 0014 	mls	r0, r7, r4, r0
 8008dc4:	b17d      	cbz	r5, 8008de6 <GUI_AddDecShift+0x8a>
 8008dc6:	2c0a      	cmp	r4, #10
 8008dc8:	bf18      	it	ne
 8008dca:	4629      	movne	r1, r5
 8008dcc:	681d      	ldr	r5, [r3, #0]
 8008dce:	bf08      	it	eq
 8008dd0:	2401      	moveq	r4, #1
 8008dd2:	1c6f      	adds	r7, r5, #1
 8008dd4:	3430      	adds	r4, #48	; 0x30
 8008dd6:	601f      	str	r7, [r3, #0]
 8008dd8:	702c      	strb	r4, [r5, #0]
 8008dda:	2900      	cmp	r1, #0
 8008ddc:	d1de      	bne.n	8008d9c <GUI_AddDecShift+0x40>
 8008dde:	681b      	ldr	r3, [r3, #0]
 8008de0:	2200      	movs	r2, #0
 8008de2:	701a      	strb	r2, [r3, #0]
 8008de4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008de6:	2e00      	cmp	r6, #0
 8008de8:	d0ed      	beq.n	8008dc6 <GUI_AddDecShift+0x6a>
 8008dea:	3401      	adds	r4, #1
 8008dec:	b2e4      	uxtb	r4, r4
 8008dee:	e7ea      	b.n	8008dc6 <GUI_AddDecShift+0x6a>
 8008df0:	2000048c 	.word	0x2000048c
 8008df4:	0800f68c 	.word	0x0800f68c

08008df8 <GUI_GetClientRect>:
 8008df8:	b108      	cbz	r0, 8008dfe <GUI_GetClientRect+0x6>
 8008dfa:	f7fb ba05 	b.w	8004208 <WM_GetClientRect>
 8008dfe:	4770      	bx	lr

08008e00 <GUI_GetBkColor>:
 8008e00:	b508      	push	{r3, lr}
 8008e02:	f003 f8b9 	bl	800bf78 <LCD_GetBkColorIndex>
 8008e06:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008e0a:	f7fe bac5 	b.w	8007398 <LCD_Index2Color>

08008e0e <GUI_GetColor>:
 8008e0e:	b508      	push	{r3, lr}
 8008e10:	f003 f8ba 	bl	800bf88 <LCD_GetColorIndex>
 8008e14:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008e18:	f7fe babe 	b.w	8007398 <LCD_Index2Color>

08008e1c <GUI_GetFontSizeY>:
 8008e1c:	f7ff bf7c 	b.w	8008d18 <GUI__GetFontSizeY>

08008e20 <GUI_GetLineStyle>:
 8008e20:	4b01      	ldr	r3, [pc, #4]	; (8008e28 <GUI_GetLineStyle+0x8>)
 8008e22:	681b      	ldr	r3, [r3, #0]
 8008e24:	7e98      	ldrb	r0, [r3, #26]
 8008e26:	4770      	bx	lr
 8008e28:	200000b0 	.word	0x200000b0

08008e2c <GUI_GetOrg>:
 8008e2c:	4b04      	ldr	r3, [pc, #16]	; (8008e40 <GUI_GetOrg+0x14>)
 8008e2e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8008e32:	6003      	str	r3, [r0, #0]
 8008e34:	4b03      	ldr	r3, [pc, #12]	; (8008e44 <GUI_GetOrg+0x18>)
 8008e36:	f9b3 3000 	ldrsh.w	r3, [r3]
 8008e3a:	600b      	str	r3, [r1, #0]
 8008e3c:	4770      	bx	lr
 8008e3e:	bf00      	nop
 8008e40:	200004ac 	.word	0x200004ac
 8008e44:	2000049c 	.word	0x2000049c

08008e48 <GUI_GetYSizeOfFont>:
 8008e48:	7e02      	ldrb	r2, [r0, #24]
 8008e4a:	7ec0      	ldrb	r0, [r0, #27]
 8008e4c:	4350      	muls	r0, r2
 8008e4e:	4770      	bx	lr

08008e50 <GUI_MergeRect>:
 8008e50:	b510      	push	{r4, lr}
 8008e52:	b338      	cbz	r0, 8008ea4 <GUI_MergeRect+0x54>
 8008e54:	b309      	cbz	r1, 8008e9a <GUI_MergeRect+0x4a>
 8008e56:	b30a      	cbz	r2, 8008e9c <GUI_MergeRect+0x4c>
 8008e58:	f9b1 4000 	ldrsh.w	r4, [r1]
 8008e5c:	f9b2 3000 	ldrsh.w	r3, [r2]
 8008e60:	429c      	cmp	r4, r3
 8008e62:	bfb8      	it	lt
 8008e64:	4623      	movlt	r3, r4
 8008e66:	8003      	strh	r3, [r0, #0]
 8008e68:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8008e6c:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8008e70:	429c      	cmp	r4, r3
 8008e72:	bfb8      	it	lt
 8008e74:	4623      	movlt	r3, r4
 8008e76:	8043      	strh	r3, [r0, #2]
 8008e78:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 8008e7c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8008e80:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 8008e84:	429c      	cmp	r4, r3
 8008e86:	bfa8      	it	ge
 8008e88:	4623      	movge	r3, r4
 8008e8a:	8083      	strh	r3, [r0, #4]
 8008e8c:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8008e90:	4299      	cmp	r1, r3
 8008e92:	bfa8      	it	ge
 8008e94:	460b      	movge	r3, r1
 8008e96:	80c3      	strh	r3, [r0, #6]
 8008e98:	bd10      	pop	{r4, pc}
 8008e9a:	4611      	mov	r1, r2
 8008e9c:	680b      	ldr	r3, [r1, #0]
 8008e9e:	6003      	str	r3, [r0, #0]
 8008ea0:	684b      	ldr	r3, [r1, #4]
 8008ea2:	6043      	str	r3, [r0, #4]
 8008ea4:	bd10      	pop	{r4, pc}

08008ea6 <GUI_MoveRect>:
 8008ea6:	b168      	cbz	r0, 8008ec4 <GUI_MoveRect+0x1e>
 8008ea8:	8803      	ldrh	r3, [r0, #0]
 8008eaa:	b289      	uxth	r1, r1
 8008eac:	440b      	add	r3, r1
 8008eae:	8003      	strh	r3, [r0, #0]
 8008eb0:	8883      	ldrh	r3, [r0, #4]
 8008eb2:	4419      	add	r1, r3
 8008eb4:	8843      	ldrh	r3, [r0, #2]
 8008eb6:	8081      	strh	r1, [r0, #4]
 8008eb8:	b292      	uxth	r2, r2
 8008eba:	4413      	add	r3, r2
 8008ebc:	8043      	strh	r3, [r0, #2]
 8008ebe:	88c3      	ldrh	r3, [r0, #6]
 8008ec0:	441a      	add	r2, r3
 8008ec2:	80c2      	strh	r2, [r0, #6]
 8008ec4:	4770      	bx	lr
	...

08008ec8 <GUI_Exec1>:
 8008ec8:	4b0c      	ldr	r3, [pc, #48]	; (8008efc <GUI_Exec1+0x34>)
 8008eca:	b510      	push	{r4, lr}
 8008ecc:	681c      	ldr	r4, [r3, #0]
 8008ece:	b11c      	cbz	r4, 8008ed8 <GUI_Exec1+0x10>
 8008ed0:	47a0      	blx	r4
 8008ed2:	1c04      	adds	r4, r0, #0
 8008ed4:	bf18      	it	ne
 8008ed6:	2401      	movne	r4, #1
 8008ed8:	f7fc fde6 	bl	8005aa8 <WM_Exec>
 8008edc:	4b08      	ldr	r3, [pc, #32]	; (8008f00 <GUI_Exec1+0x38>)
 8008ede:	681b      	ldr	r3, [r3, #0]
 8008ee0:	2800      	cmp	r0, #0
 8008ee2:	bf18      	it	ne
 8008ee4:	2401      	movne	r4, #1
 8008ee6:	b11b      	cbz	r3, 8008ef0 <GUI_Exec1+0x28>
 8008ee8:	4798      	blx	r3
 8008eea:	2800      	cmp	r0, #0
 8008eec:	bf18      	it	ne
 8008eee:	2401      	movne	r4, #1
 8008ef0:	4b04      	ldr	r3, [pc, #16]	; (8008f04 <GUI_Exec1+0x3c>)
 8008ef2:	681b      	ldr	r3, [r3, #0]
 8008ef4:	b103      	cbz	r3, 8008ef8 <GUI_Exec1+0x30>
 8008ef6:	4798      	blx	r3
 8008ef8:	4620      	mov	r0, r4
 8008efa:	bd10      	pop	{r4, pc}
 8008efc:	200004a8 	.word	0x200004a8
 8008f00:	200004d4 	.word	0x200004d4
 8008f04:	200004cc 	.word	0x200004cc

08008f08 <GUI_Exec>:
 8008f08:	b510      	push	{r4, lr}
 8008f0a:	2400      	movs	r4, #0
 8008f0c:	f7ff ffdc 	bl	8008ec8 <GUI_Exec1>
 8008f10:	b108      	cbz	r0, 8008f16 <GUI_Exec+0xe>
 8008f12:	2401      	movs	r4, #1
 8008f14:	e7fa      	b.n	8008f0c <GUI_Exec+0x4>
 8008f16:	4620      	mov	r0, r4
 8008f18:	bd10      	pop	{r4, pc}
	...

08008f1c <GUI_GotoXY>:
 8008f1c:	4b02      	ldr	r3, [pc, #8]	; (8008f28 <GUI_GotoXY+0xc>)
 8008f1e:	681b      	ldr	r3, [r3, #0]
 8008f20:	8458      	strh	r0, [r3, #34]	; 0x22
 8008f22:	8499      	strh	r1, [r3, #36]	; 0x24
 8008f24:	2000      	movs	r0, #0
 8008f26:	4770      	bx	lr
 8008f28:	200000b0 	.word	0x200000b0

08008f2c <GUI_SetPenSize>:
 8008f2c:	4b02      	ldr	r3, [pc, #8]	; (8008f38 <GUI_SetPenSize+0xc>)
 8008f2e:	681b      	ldr	r3, [r3, #0]
 8008f30:	7e1a      	ldrb	r2, [r3, #24]
 8008f32:	7618      	strb	r0, [r3, #24]
 8008f34:	4610      	mov	r0, r2
 8008f36:	4770      	bx	lr
 8008f38:	200000b0 	.word	0x200000b0

08008f3c <GUI_RectsIntersect>:
 8008f3c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8008f40:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8008f44:	429a      	cmp	r2, r3
 8008f46:	dc14      	bgt.n	8008f72 <GUI_RectsIntersect+0x36>
 8008f48:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 8008f4c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8008f50:	429a      	cmp	r2, r3
 8008f52:	dc0e      	bgt.n	8008f72 <GUI_RectsIntersect+0x36>
 8008f54:	f9b0 2000 	ldrsh.w	r2, [r0]
 8008f58:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8008f5c:	429a      	cmp	r2, r3
 8008f5e:	dc08      	bgt.n	8008f72 <GUI_RectsIntersect+0x36>
 8008f60:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8008f64:	f9b1 2000 	ldrsh.w	r2, [r1]
 8008f68:	429a      	cmp	r2, r3
 8008f6a:	bfcc      	ite	gt
 8008f6c:	2000      	movgt	r0, #0
 8008f6e:	2001      	movle	r0, #1
 8008f70:	4770      	bx	lr
 8008f72:	2000      	movs	r0, #0
 8008f74:	4770      	bx	lr
	...

08008f78 <GUI_SaveContext_W>:
 8008f78:	b508      	push	{r3, lr}
 8008f7a:	4b03      	ldr	r3, [pc, #12]	; (8008f88 <GUI_SaveContext_W+0x10>)
 8008f7c:	2270      	movs	r2, #112	; 0x70
 8008f7e:	6819      	ldr	r1, [r3, #0]
 8008f80:	f004 f9fa 	bl	800d378 <memcpy>
 8008f84:	bd08      	pop	{r3, pc}
 8008f86:	bf00      	nop
 8008f88:	200000b0 	.word	0x200000b0

08008f8c <GUI_RestoreContext>:
 8008f8c:	b508      	push	{r3, lr}
 8008f8e:	4b03      	ldr	r3, [pc, #12]	; (8008f9c <GUI_RestoreContext+0x10>)
 8008f90:	4601      	mov	r1, r0
 8008f92:	2270      	movs	r2, #112	; 0x70
 8008f94:	6818      	ldr	r0, [r3, #0]
 8008f96:	f004 f9ef 	bl	800d378 <memcpy>
 8008f9a:	bd08      	pop	{r3, pc}
 8008f9c:	200000b0 	.word	0x200000b0

08008fa0 <GUI_SelectLCD>:
 8008fa0:	b508      	push	{r3, lr}
 8008fa2:	f002 fea5 	bl	800bcf0 <LCD_SelectLCD>
 8008fa6:	f7fd fe53 	bl	8006c50 <LCD_UpdateColorIndices>
 8008faa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008fae:	f7fc bdb7 	b.w	8005b20 <WM_Activate>

08008fb2 <GUI_SetBkColor>:
 8008fb2:	f7fe ba39 	b.w	8007428 <LCD_SetBkColor>

08008fb6 <GUI_SetColor>:
 8008fb6:	f7fe ba3f 	b.w	8007438 <LCD_SetColor>

08008fba <GUI_SetDrawMode>:
 8008fba:	f7fd bf37 	b.w	8006e2c <LCD_SetDrawMode>
	...

08008fc0 <GUI_SetFont>:
 8008fc0:	4b03      	ldr	r3, [pc, #12]	; (8008fd0 <GUI_SetFont+0x10>)
 8008fc2:	681b      	ldr	r3, [r3, #0]
 8008fc4:	69d9      	ldr	r1, [r3, #28]
 8008fc6:	b100      	cbz	r0, 8008fca <GUI_SetFont+0xa>
 8008fc8:	61d8      	str	r0, [r3, #28]
 8008fca:	4608      	mov	r0, r1
 8008fcc:	4770      	bx	lr
 8008fce:	bf00      	nop
 8008fd0:	200000b0 	.word	0x200000b0

08008fd4 <GUI_SetLineStyle>:
 8008fd4:	4b02      	ldr	r3, [pc, #8]	; (8008fe0 <GUI_SetLineStyle+0xc>)
 8008fd6:	681b      	ldr	r3, [r3, #0]
 8008fd8:	7e9a      	ldrb	r2, [r3, #26]
 8008fda:	7698      	strb	r0, [r3, #26]
 8008fdc:	4610      	mov	r0, r2
 8008fde:	4770      	bx	lr
 8008fe0:	200000b0 	.word	0x200000b0

08008fe4 <GUI_SetTextAlign>:
 8008fe4:	4b03      	ldr	r3, [pc, #12]	; (8008ff4 <GUI_SetTextAlign+0x10>)
 8008fe6:	681b      	ldr	r3, [r3, #0]
 8008fe8:	f9b3 202c 	ldrsh.w	r2, [r3, #44]	; 0x2c
 8008fec:	8598      	strh	r0, [r3, #44]	; 0x2c
 8008fee:	4610      	mov	r0, r2
 8008ff0:	4770      	bx	lr
 8008ff2:	bf00      	nop
 8008ff4:	200000b0 	.word	0x200000b0

08008ff8 <GUI_SetTextMode>:
 8008ff8:	4b03      	ldr	r3, [pc, #12]	; (8009008 <GUI_SetTextMode+0x10>)
 8008ffa:	681b      	ldr	r3, [r3, #0]
 8008ffc:	f9b3 202a 	ldrsh.w	r2, [r3, #42]	; 0x2a
 8009000:	8558      	strh	r0, [r3, #42]	; 0x2a
 8009002:	4610      	mov	r0, r2
 8009004:	4770      	bx	lr
 8009006:	bf00      	nop
 8009008:	200000b0 	.word	0x200000b0

0800900c <GL_SetDefault>:
 800900c:	b508      	push	{r3, lr}
 800900e:	4b0e      	ldr	r3, [pc, #56]	; (8009048 <GL_SetDefault+0x3c>)
 8009010:	6818      	ldr	r0, [r3, #0]
 8009012:	f7fe fa09 	bl	8007428 <LCD_SetBkColor>
 8009016:	4b0d      	ldr	r3, [pc, #52]	; (800904c <GL_SetDefault+0x40>)
 8009018:	6818      	ldr	r0, [r3, #0]
 800901a:	f7fe fa0d 	bl	8007438 <LCD_SetColor>
 800901e:	2001      	movs	r0, #1
 8009020:	f7ff ff84 	bl	8008f2c <GUI_SetPenSize>
 8009024:	2000      	movs	r0, #0
 8009026:	f7ff ffdd 	bl	8008fe4 <GUI_SetTextAlign>
 800902a:	2000      	movs	r0, #0
 800902c:	f7ff ffe4 	bl	8008ff8 <GUI_SetTextMode>
 8009030:	2000      	movs	r0, #0
 8009032:	f7ff ffc2 	bl	8008fba <GUI_SetDrawMode>
 8009036:	4b06      	ldr	r3, [pc, #24]	; (8009050 <GL_SetDefault+0x44>)
 8009038:	6818      	ldr	r0, [r3, #0]
 800903a:	f7ff ffc1 	bl	8008fc0 <GUI_SetFont>
 800903e:	2000      	movs	r0, #0
 8009040:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8009044:	f7ff bfc6 	b.w	8008fd4 <GUI_SetLineStyle>
 8009048:	20000380 	.word	0x20000380
 800904c:	200000b8 	.word	0x200000b8
 8009050:	200000b4 	.word	0x200000b4

08009054 <GL_FillCircle>:
 8009054:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009058:	f240 29c3 	movw	r9, #707	; 0x2c3
 800905c:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 8009114 <GL_FillCircle+0xc0>
 8009060:	fb09 f902 	mul.w	r9, r9, r2
 8009064:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8009068:	fb99 f9f3 	sdiv	r9, r9, r3
 800906c:	f8d8 3000 	ldr.w	r3, [r8]
 8009070:	f04f 0b02 	mov.w	fp, #2
 8009074:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009076:	4606      	mov	r6, r0
 8009078:	fb92 fbfb 	sdiv	fp, r2, fp
 800907c:	1a80      	subs	r0, r0, r2
 800907e:	4614      	mov	r4, r2
 8009080:	fb02 bb02 	mla	fp, r2, r2, fp
 8009084:	681b      	ldr	r3, [r3, #0]
 8009086:	18b2      	adds	r2, r6, r2
 8009088:	460f      	mov	r7, r1
 800908a:	4798      	blx	r3
 800908c:	f109 0901 	add.w	r9, r9, #1
 8009090:	2501      	movs	r5, #1
 8009092:	454d      	cmp	r5, r9
 8009094:	dc3a      	bgt.n	800910c <GL_FillCircle+0xb8>
 8009096:	fb04 f304 	mul.w	r3, r4, r4
 800909a:	fb05 3305 	mla	r3, r5, r5, r3
 800909e:	455b      	cmp	r3, fp
 80090a0:	dd1b      	ble.n	80090da <GL_FillCircle+0x86>
 80090a2:	454c      	cmp	r4, r9
 80090a4:	dd18      	ble.n	80090d8 <GL_FillCircle+0x84>
 80090a6:	f8d8 2000 	ldr.w	r2, [r8]
 80090aa:	1c73      	adds	r3, r6, #1
 80090ac:	6e52      	ldr	r2, [r2, #100]	; 0x64
 80090ae:	f106 3aff 	add.w	sl, r6, #4294967295
 80090b2:	1b5b      	subs	r3, r3, r5
 80090b4:	44aa      	add	sl, r5
 80090b6:	f8d2 c000 	ldr.w	ip, [r2]
 80090ba:	9301      	str	r3, [sp, #4]
 80090bc:	4618      	mov	r0, r3
 80090be:	1939      	adds	r1, r7, r4
 80090c0:	4652      	mov	r2, sl
 80090c2:	47e0      	blx	ip
 80090c4:	f8d8 2000 	ldr.w	r2, [r8]
 80090c8:	9b01      	ldr	r3, [sp, #4]
 80090ca:	6e52      	ldr	r2, [r2, #100]	; 0x64
 80090cc:	4618      	mov	r0, r3
 80090ce:	f8d2 c000 	ldr.w	ip, [r2]
 80090d2:	1b39      	subs	r1, r7, r4
 80090d4:	4652      	mov	r2, sl
 80090d6:	47e0      	blx	ip
 80090d8:	3c01      	subs	r4, #1
 80090da:	f8d8 2000 	ldr.w	r2, [r8]
 80090de:	6e52      	ldr	r2, [r2, #100]	; 0x64
 80090e0:	1b33      	subs	r3, r6, r4
 80090e2:	eb06 0a04 	add.w	sl, r6, r4
 80090e6:	f8d2 c000 	ldr.w	ip, [r2]
 80090ea:	9301      	str	r3, [sp, #4]
 80090ec:	4618      	mov	r0, r3
 80090ee:	19e9      	adds	r1, r5, r7
 80090f0:	4652      	mov	r2, sl
 80090f2:	47e0      	blx	ip
 80090f4:	f8d8 2000 	ldr.w	r2, [r8]
 80090f8:	9b01      	ldr	r3, [sp, #4]
 80090fa:	6e52      	ldr	r2, [r2, #100]	; 0x64
 80090fc:	1b79      	subs	r1, r7, r5
 80090fe:	f8d2 c000 	ldr.w	ip, [r2]
 8009102:	4618      	mov	r0, r3
 8009104:	4652      	mov	r2, sl
 8009106:	47e0      	blx	ip
 8009108:	3501      	adds	r5, #1
 800910a:	e7c2      	b.n	8009092 <GL_FillCircle+0x3e>
 800910c:	b003      	add	sp, #12
 800910e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009112:	bf00      	nop
 8009114:	200000b0 	.word	0x200000b0

08009118 <GUIPROP__FindChar>:
 8009118:	b138      	cbz	r0, 800912a <GUIPROP__FindChar+0x12>
 800911a:	8803      	ldrh	r3, [r0, #0]
 800911c:	428b      	cmp	r3, r1
 800911e:	d802      	bhi.n	8009126 <GUIPROP__FindChar+0xe>
 8009120:	8843      	ldrh	r3, [r0, #2]
 8009122:	428b      	cmp	r3, r1
 8009124:	d201      	bcs.n	800912a <GUIPROP__FindChar+0x12>
 8009126:	6880      	ldr	r0, [r0, #8]
 8009128:	e7f6      	b.n	8009118 <GUIPROP__FindChar>
 800912a:	4770      	bx	lr

0800912c <GUIPROP_DispChar>:
 800912c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009130:	4c38      	ldr	r4, [pc, #224]	; (8009214 <GUIPROP_DispChar+0xe8>)
 8009132:	6823      	ldr	r3, [r4, #0]
 8009134:	f9b3 902a 	ldrsh.w	r9, [r3, #42]	; 0x2a
 8009138:	69db      	ldr	r3, [r3, #28]
 800913a:	4605      	mov	r5, r0
 800913c:	b089      	sub	sp, #36	; 0x24
 800913e:	69d8      	ldr	r0, [r3, #28]
 8009140:	4629      	mov	r1, r5
 8009142:	f7ff ffe9 	bl	8009118 <GUIPROP__FindChar>
 8009146:	2800      	cmp	r0, #0
 8009148:	d061      	beq.n	800920e <GUIPROP_DispChar+0xe2>
 800914a:	f8b0 8000 	ldrh.w	r8, [r0]
 800914e:	6847      	ldr	r7, [r0, #4]
 8009150:	ebc8 0805 	rsb	r8, r8, r5
 8009154:	eb07 06c8 	add.w	r6, r7, r8, lsl #3
 8009158:	4648      	mov	r0, r9
 800915a:	f896 b002 	ldrb.w	fp, [r6, #2]
 800915e:	f7fd fe65 	bl	8006e2c <LCD_SetDrawMode>
 8009162:	6825      	ldr	r5, [r4, #0]
 8009164:	f817 2038 	ldrb.w	r2, [r7, r8, lsl #3]
 8009168:	f8d5 e01c 	ldr.w	lr, [r5, #28]
 800916c:	f9b5 1024 	ldrsh.w	r1, [r5, #36]	; 0x24
 8009170:	f89e c01a 	ldrb.w	ip, [lr, #26]
 8009174:	f89e 3018 	ldrb.w	r3, [lr, #24]
 8009178:	9306      	str	r3, [sp, #24]
 800917a:	4682      	mov	sl, r0
 800917c:	f9b5 0022 	ldrsh.w	r0, [r5, #34]	; 0x22
 8009180:	f8cd c000 	str.w	ip, [sp]
 8009184:	f89e e01b 	ldrb.w	lr, [lr, #27]
 8009188:	f8cd e004 	str.w	lr, [sp, #4]
 800918c:	f04f 0e01 	mov.w	lr, #1
 8009190:	f8cd b00c 	str.w	fp, [sp, #12]
 8009194:	f8cd e008 	str.w	lr, [sp, #8]
 8009198:	6873      	ldr	r3, [r6, #4]
 800919a:	9304      	str	r3, [sp, #16]
 800919c:	6bad      	ldr	r5, [r5, #56]	; 0x38
 800919e:	9b06      	ldr	r3, [sp, #24]
 80091a0:	9505      	str	r5, [sp, #20]
 80091a2:	f7fd ffcd 	bl	8007140 <LCD_DrawBitmap>
 80091a6:	6823      	ldr	r3, [r4, #0]
 80091a8:	69da      	ldr	r2, [r3, #28]
 80091aa:	f892 b019 	ldrb.w	fp, [r2, #25]
 80091ae:	7e11      	ldrb	r1, [r2, #24]
 80091b0:	458b      	cmp	fp, r1
 80091b2:	d920      	bls.n	80091f6 <GUIPROP_DispChar+0xca>
 80091b4:	f1b9 0f02 	cmp.w	r9, #2
 80091b8:	7ed5      	ldrb	r5, [r2, #27]
 80091ba:	d01c      	beq.n	80091f6 <GUIPROP_DispChar+0xca>
 80091bc:	9107      	str	r1, [sp, #28]
 80091be:	f7ff fe26 	bl	8008e0e <GUI_GetColor>
 80091c2:	4681      	mov	r9, r0
 80091c4:	f7ff fe1c 	bl	8008e00 <GUI_GetBkColor>
 80091c8:	f7ff fef5 	bl	8008fb6 <GUI_SetColor>
 80091cc:	6824      	ldr	r4, [r4, #0]
 80091ce:	f817 7038 	ldrb.w	r7, [r7, r8, lsl #3]
 80091d2:	69e2      	ldr	r2, [r4, #28]
 80091d4:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
 80091d8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80091dc:	7ed2      	ldrb	r2, [r2, #27]
 80091de:	9907      	ldr	r1, [sp, #28]
 80091e0:	fb07 0202 	mla	r2, r7, r2, r0
 80091e4:	fb01 3105 	mla	r1, r1, r5, r3
 80091e8:	fb0b 3305 	mla	r3, fp, r5, r3
 80091ec:	f7fd fea0 	bl	8006f30 <LCD_FillRect>
 80091f0:	4648      	mov	r0, r9
 80091f2:	f7ff fee0 	bl	8008fb6 <GUI_SetColor>
 80091f6:	4650      	mov	r0, sl
 80091f8:	f7fd fe18 	bl	8006e2c <LCD_SetDrawMode>
 80091fc:	4b05      	ldr	r3, [pc, #20]	; (8009214 <GUIPROP_DispChar+0xe8>)
 80091fe:	681b      	ldr	r3, [r3, #0]
 8009200:	69da      	ldr	r2, [r3, #28]
 8009202:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8009204:	7e90      	ldrb	r0, [r2, #26]
 8009206:	7872      	ldrb	r2, [r6, #1]
 8009208:	fb00 1202 	mla	r2, r0, r2, r1
 800920c:	845a      	strh	r2, [r3, #34]	; 0x22
 800920e:	b009      	add	sp, #36	; 0x24
 8009210:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009214:	200000b0 	.word	0x200000b0

08009218 <GUIPROP_GetCharDistX>:
 8009218:	4b0d      	ldr	r3, [pc, #52]	; (8009250 <GUIPROP_GetCharDistX+0x38>)
 800921a:	b570      	push	{r4, r5, r6, lr}
 800921c:	681b      	ldr	r3, [r3, #0]
 800921e:	69dd      	ldr	r5, [r3, #28]
 8009220:	4606      	mov	r6, r0
 8009222:	460c      	mov	r4, r1
 8009224:	69e8      	ldr	r0, [r5, #28]
 8009226:	4631      	mov	r1, r6
 8009228:	f7ff ff76 	bl	8009118 <GUIPROP__FindChar>
 800922c:	b170      	cbz	r0, 800924c <GUIPROP_GetCharDistX+0x34>
 800922e:	8803      	ldrh	r3, [r0, #0]
 8009230:	6842      	ldr	r2, [r0, #4]
 8009232:	1af6      	subs	r6, r6, r3
 8009234:	eb02 03c6 	add.w	r3, r2, r6, lsl #3
 8009238:	7858      	ldrb	r0, [r3, #1]
 800923a:	7eab      	ldrb	r3, [r5, #26]
 800923c:	fb10 f003 	smulbb	r0, r0, r3
 8009240:	b124      	cbz	r4, 800924c <GUIPROP_GetCharDistX+0x34>
 8009242:	f812 2036 	ldrb.w	r2, [r2, r6, lsl #3]
 8009246:	fb12 f303 	smulbb	r3, r2, r3
 800924a:	6023      	str	r3, [r4, #0]
 800924c:	bd70      	pop	{r4, r5, r6, pc}
 800924e:	bf00      	nop
 8009250:	200000b0 	.word	0x200000b0

08009254 <GUIPROP_GetFontInfo>:
 8009254:	2301      	movs	r3, #1
 8009256:	800b      	strh	r3, [r1, #0]
 8009258:	4770      	bx	lr

0800925a <GUIPROP_IsInFont>:
 800925a:	b508      	push	{r3, lr}
 800925c:	69c0      	ldr	r0, [r0, #28]
 800925e:	f7ff ff5b 	bl	8009118 <GUIPROP__FindChar>
 8009262:	3000      	adds	r0, #0
 8009264:	bf18      	it	ne
 8009266:	2001      	movne	r0, #1
 8009268:	bd08      	pop	{r3, pc}
	...

0800926c <GUIMONO_DispChar>:
 800926c:	4b52      	ldr	r3, [pc, #328]	; (80093b8 <GUIMONO_DispChar+0x14c>)
 800926e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009272:	681b      	ldr	r3, [r3, #0]
 8009274:	69d9      	ldr	r1, [r3, #28]
 8009276:	8c5f      	ldrh	r7, [r3, #34]	; 0x22
 8009278:	69cc      	ldr	r4, [r1, #28]
 800927a:	8c9d      	ldrh	r5, [r3, #36]	; 0x24
 800927c:	89a2      	ldrh	r2, [r4, #12]
 800927e:	4290      	cmp	r0, r2
 8009280:	b08b      	sub	sp, #44	; 0x2c
 8009282:	d308      	bcc.n	8009296 <GUIMONO_DispChar+0x2a>
 8009284:	89e6      	ldrh	r6, [r4, #14]
 8009286:	4286      	cmp	r6, r0
 8009288:	d305      	bcc.n	8009296 <GUIMONO_DispChar+0x2a>
 800928a:	f8d4 9000 	ldr.w	r9, [r4]
 800928e:	1a82      	subs	r2, r0, r2
 8009290:	f04f 3bff 	mov.w	fp, #4294967295
 8009294:	e015      	b.n	80092c2 <GUIMONO_DispChar+0x56>
 8009296:	68a2      	ldr	r2, [r4, #8]
 8009298:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800929c:	2a00      	cmp	r2, #0
 800929e:	f000 8081 	beq.w	80093a4 <GUIMONO_DispChar+0x138>
 80092a2:	8816      	ldrh	r6, [r2, #0]
 80092a4:	42b0      	cmp	r0, r6
 80092a6:	d37d      	bcc.n	80093a4 <GUIMONO_DispChar+0x138>
 80092a8:	f8b2 c002 	ldrh.w	ip, [r2, #2]
 80092ac:	4584      	cmp	ip, r0
 80092ae:	d379      	bcc.n	80093a4 <GUIMONO_DispChar+0x138>
 80092b0:	6852      	ldr	r2, [r2, #4]
 80092b2:	1b80      	subs	r0, r0, r6
 80092b4:	b280      	uxth	r0, r0
 80092b6:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 80092ba:	f932 2020 	ldrsh.w	r2, [r2, r0, lsl #2]
 80092be:	f9b6 b002 	ldrsh.w	fp, [r6, #2]
 80092c2:	1c50      	adds	r0, r2, #1
 80092c4:	d06e      	beq.n	80093a4 <GUIMONO_DispChar+0x138>
 80092c6:	f891 8018 	ldrb.w	r8, [r1, #24]
 80092ca:	7ca1      	ldrb	r1, [r4, #18]
 80092cc:	f8b3 a02a 	ldrh.w	sl, [r3, #42]	; 0x2a
 80092d0:	7c26      	ldrb	r6, [r4, #16]
 80092d2:	9206      	str	r2, [sp, #24]
 80092d4:	fb18 f101 	smulbb	r1, r8, r1
 80092d8:	9107      	str	r1, [sp, #28]
 80092da:	fa0f f18a 	sxth.w	r1, sl
 80092de:	4608      	mov	r0, r1
 80092e0:	9108      	str	r1, [sp, #32]
 80092e2:	f7fd fda3 	bl	8006e2c <LCD_SetDrawMode>
 80092e6:	4934      	ldr	r1, [pc, #208]	; (80093b8 <GUIMONO_DispChar+0x14c>)
 80092e8:	9009      	str	r0, [sp, #36]	; 0x24
 80092ea:	680b      	ldr	r3, [r1, #0]
 80092ec:	9a06      	ldr	r2, [sp, #24]
 80092ee:	69d9      	ldr	r1, [r3, #28]
 80092f0:	7e88      	ldrb	r0, [r1, #26]
 80092f2:	9000      	str	r0, [sp, #0]
 80092f4:	7ec9      	ldrb	r1, [r1, #27]
 80092f6:	9101      	str	r1, [sp, #4]
 80092f8:	2101      	movs	r1, #1
 80092fa:	9102      	str	r1, [sp, #8]
 80092fc:	7ca1      	ldrb	r1, [r4, #18]
 80092fe:	9103      	str	r1, [sp, #12]
 8009300:	9907      	ldr	r1, [sp, #28]
 8009302:	fb01 9202 	mla	r2, r1, r2, r9
 8009306:	9204      	str	r2, [sp, #16]
 8009308:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800930a:	9305      	str	r3, [sp, #20]
 800930c:	b23f      	sxth	r7, r7
 800930e:	b22d      	sxth	r5, r5
 8009310:	4638      	mov	r0, r7
 8009312:	4629      	mov	r1, r5
 8009314:	4632      	mov	r2, r6
 8009316:	4643      	mov	r3, r8
 8009318:	f7fd ff12 	bl	8007140 <LCD_DrawBitmap>
 800931c:	f1bb 3fff 	cmp.w	fp, #4294967295
 8009320:	d01b      	beq.n	800935a <GUIMONO_DispChar+0xee>
 8009322:	f04a 0002 	orr.w	r0, sl, #2
 8009326:	b200      	sxth	r0, r0
 8009328:	f7fd fd80 	bl	8006e2c <LCD_SetDrawMode>
 800932c:	4a22      	ldr	r2, [pc, #136]	; (80093b8 <GUIMONO_DispChar+0x14c>)
 800932e:	6813      	ldr	r3, [r2, #0]
 8009330:	69da      	ldr	r2, [r3, #28]
 8009332:	7e91      	ldrb	r1, [r2, #26]
 8009334:	9100      	str	r1, [sp, #0]
 8009336:	7ed2      	ldrb	r2, [r2, #27]
 8009338:	9201      	str	r2, [sp, #4]
 800933a:	2101      	movs	r1, #1
 800933c:	9102      	str	r1, [sp, #8]
 800933e:	9907      	ldr	r1, [sp, #28]
 8009340:	7ca2      	ldrb	r2, [r4, #18]
 8009342:	9203      	str	r2, [sp, #12]
 8009344:	fb01 920b 	mla	r2, r1, fp, r9
 8009348:	9204      	str	r2, [sp, #16]
 800934a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800934c:	9305      	str	r3, [sp, #20]
 800934e:	4638      	mov	r0, r7
 8009350:	4629      	mov	r1, r5
 8009352:	4632      	mov	r2, r6
 8009354:	4643      	mov	r3, r8
 8009356:	f7fd fef3 	bl	8007140 <LCD_DrawBitmap>
 800935a:	f8df 805c 	ldr.w	r8, [pc, #92]	; 80093b8 <GUIMONO_DispChar+0x14c>
 800935e:	f8d8 3000 	ldr.w	r3, [r8]
 8009362:	69db      	ldr	r3, [r3, #28]
 8009364:	7e5a      	ldrb	r2, [r3, #25]
 8009366:	7e1b      	ldrb	r3, [r3, #24]
 8009368:	429a      	cmp	r2, r3
 800936a:	d917      	bls.n	800939c <GUIMONO_DispChar+0x130>
 800936c:	9a08      	ldr	r2, [sp, #32]
 800936e:	2a02      	cmp	r2, #2
 8009370:	d014      	beq.n	800939c <GUIMONO_DispChar+0x130>
 8009372:	f08a 0004 	eor.w	r0, sl, #4
 8009376:	b200      	sxth	r0, r0
 8009378:	f7fd fd58 	bl	8006e2c <LCD_SetDrawMode>
 800937c:	f8d8 3000 	ldr.w	r3, [r8]
 8009380:	69db      	ldr	r3, [r3, #28]
 8009382:	f893 e018 	ldrb.w	lr, [r3, #24]
 8009386:	7ed9      	ldrb	r1, [r3, #27]
 8009388:	7e9a      	ldrb	r2, [r3, #26]
 800938a:	7e5b      	ldrb	r3, [r3, #25]
 800938c:	4638      	mov	r0, r7
 800938e:	fb0e 5101 	mla	r1, lr, r1, r5
 8009392:	fb06 7202 	mla	r2, r6, r2, r7
 8009396:	442b      	add	r3, r5
 8009398:	f7fd fdca 	bl	8006f30 <LCD_FillRect>
 800939c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800939e:	b2d8      	uxtb	r0, r3
 80093a0:	f7fd fd44 	bl	8006e2c <LCD_SetDrawMode>
 80093a4:	4b04      	ldr	r3, [pc, #16]	; (80093b8 <GUIMONO_DispChar+0x14c>)
 80093a6:	7c61      	ldrb	r1, [r4, #17]
 80093a8:	681b      	ldr	r3, [r3, #0]
 80093aa:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 80093ac:	440a      	add	r2, r1
 80093ae:	845a      	strh	r2, [r3, #34]	; 0x22
 80093b0:	b00b      	add	sp, #44	; 0x2c
 80093b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80093b6:	bf00      	nop
 80093b8:	200000b0 	.word	0x200000b0

080093bc <GUIMONO_GetCharDistX>:
 80093bc:	4b04      	ldr	r3, [pc, #16]	; (80093d0 <GUIMONO_GetCharDistX+0x14>)
 80093be:	681b      	ldr	r3, [r3, #0]
 80093c0:	69db      	ldr	r3, [r3, #28]
 80093c2:	69db      	ldr	r3, [r3, #28]
 80093c4:	b109      	cbz	r1, 80093ca <GUIMONO_GetCharDistX+0xe>
 80093c6:	7c1a      	ldrb	r2, [r3, #16]
 80093c8:	600a      	str	r2, [r1, #0]
 80093ca:	7c58      	ldrb	r0, [r3, #17]
 80093cc:	4770      	bx	lr
 80093ce:	bf00      	nop
 80093d0:	200000b0 	.word	0x200000b0

080093d4 <GUIMONO_GetFontInfo>:
 80093d4:	2302      	movs	r3, #2
 80093d6:	800b      	strh	r3, [r1, #0]
 80093d8:	4770      	bx	lr

080093da <GUIMONO_IsInFont>:
 80093da:	69c3      	ldr	r3, [r0, #28]
 80093dc:	899a      	ldrh	r2, [r3, #12]
 80093de:	428a      	cmp	r2, r1
 80093e0:	d802      	bhi.n	80093e8 <GUIMONO_IsInFont+0xe>
 80093e2:	89da      	ldrh	r2, [r3, #14]
 80093e4:	428a      	cmp	r2, r1
 80093e6:	d20f      	bcs.n	8009408 <GUIMONO_IsInFont+0x2e>
 80093e8:	6898      	ldr	r0, [r3, #8]
 80093ea:	b180      	cbz	r0, 800940e <GUIMONO_IsInFont+0x34>
 80093ec:	8803      	ldrh	r3, [r0, #0]
 80093ee:	4299      	cmp	r1, r3
 80093f0:	d30c      	bcc.n	800940c <GUIMONO_IsInFont+0x32>
 80093f2:	8842      	ldrh	r2, [r0, #2]
 80093f4:	428a      	cmp	r2, r1
 80093f6:	d309      	bcc.n	800940c <GUIMONO_IsInFont+0x32>
 80093f8:	1ac9      	subs	r1, r1, r3
 80093fa:	6842      	ldr	r2, [r0, #4]
 80093fc:	f832 0021 	ldrh.w	r0, [r2, r1, lsl #2]
 8009400:	43c0      	mvns	r0, r0
 8009402:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8009406:	4770      	bx	lr
 8009408:	2001      	movs	r0, #1
 800940a:	4770      	bx	lr
 800940c:	2000      	movs	r0, #0
 800940e:	4770      	bx	lr

08009410 <_Log2VisBuffered>:
 8009410:	4770      	bx	lr
	...

08009414 <_DispLine>:
 8009414:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009416:	4615      	mov	r5, r2
 8009418:	ab02      	add	r3, sp, #8
 800941a:	4a21      	ldr	r2, [pc, #132]	; (80094a0 <_DispLine+0x8c>)
 800941c:	f843 1d08 	str.w	r1, [r3, #-8]!
 8009420:	9001      	str	r0, [sp, #4]
 8009422:	6812      	ldr	r2, [r2, #0]
 8009424:	4c1f      	ldr	r4, [pc, #124]	; (80094a4 <_DispLine+0x90>)
 8009426:	4669      	mov	r1, sp
 8009428:	4790      	blx	r2
 800942a:	6823      	ldr	r3, [r4, #0]
 800942c:	9001      	str	r0, [sp, #4]
 800942e:	6958      	ldr	r0, [r3, #20]
 8009430:	b938      	cbnz	r0, 8009442 <_DispLine+0x2e>
 8009432:	2001      	movs	r0, #1
 8009434:	f7fe f980 	bl	8007738 <GUI__ManageCache>
 8009438:	6822      	ldr	r2, [r4, #0]
 800943a:	69d3      	ldr	r3, [r2, #28]
 800943c:	695b      	ldr	r3, [r3, #20]
 800943e:	b933      	cbnz	r3, 800944e <_DispLine+0x3a>
 8009440:	e023      	b.n	800948a <_DispLine+0x76>
 8009442:	4629      	mov	r1, r5
 8009444:	f7ff fd7a 	bl	8008f3c <GUI_RectsIntersect>
 8009448:	2800      	cmp	r0, #0
 800944a:	d1f2      	bne.n	8009432 <_DispLine+0x1e>
 800944c:	e025      	b.n	800949a <_DispLine+0x86>
 800944e:	4c16      	ldr	r4, [pc, #88]	; (80094a8 <_DispLine+0x94>)
 8009450:	689b      	ldr	r3, [r3, #8]
 8009452:	6821      	ldr	r1, [r4, #0]
 8009454:	b141      	cbz	r1, 8009468 <_DispLine+0x54>
 8009456:	f9b2 5022 	ldrsh.w	r5, [r2, #34]	; 0x22
 800945a:	9801      	ldr	r0, [sp, #4]
 800945c:	9900      	ldr	r1, [sp, #0]
 800945e:	4798      	blx	r3
 8009460:	6823      	ldr	r3, [r4, #0]
 8009462:	4628      	mov	r0, r5
 8009464:	4798      	blx	r3
 8009466:	e015      	b.n	8009494 <_DispLine+0x80>
 8009468:	9801      	ldr	r0, [sp, #4]
 800946a:	9900      	ldr	r1, [sp, #0]
 800946c:	4798      	blx	r3
 800946e:	e011      	b.n	8009494 <_DispLine+0x80>
 8009470:	a801      	add	r0, sp, #4
 8009472:	f7fe fb29 	bl	8007ac8 <GUI_UC__GetCharCodeInc>
 8009476:	6823      	ldr	r3, [r4, #0]
 8009478:	69db      	ldr	r3, [r3, #28]
 800947a:	681b      	ldr	r3, [r3, #0]
 800947c:	4605      	mov	r5, r0
 800947e:	4798      	blx	r3
 8009480:	4b0a      	ldr	r3, [pc, #40]	; (80094ac <_DispLine+0x98>)
 8009482:	681b      	ldr	r3, [r3, #0]
 8009484:	b10b      	cbz	r3, 800948a <_DispLine+0x76>
 8009486:	4628      	mov	r0, r5
 8009488:	4798      	blx	r3
 800948a:	9b00      	ldr	r3, [sp, #0]
 800948c:	3b01      	subs	r3, #1
 800948e:	2b00      	cmp	r3, #0
 8009490:	9300      	str	r3, [sp, #0]
 8009492:	daed      	bge.n	8009470 <_DispLine+0x5c>
 8009494:	2000      	movs	r0, #0
 8009496:	f7fe f94f 	bl	8007738 <GUI__ManageCache>
 800949a:	b003      	add	sp, #12
 800949c:	bd30      	pop	{r4, r5, pc}
 800949e:	bf00      	nop
 80094a0:	200000bc 	.word	0x200000bc
 80094a4:	200000b0 	.word	0x200000b0
 80094a8:	200004a4 	.word	0x200004a4
 80094ac:	200004b4 	.word	0x200004b4

080094b0 <GUI__GetLineNumChars>:
 80094b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80094b2:	460d      	mov	r5, r1
 80094b4:	9001      	str	r0, [sp, #4]
 80094b6:	4604      	mov	r4, r0
 80094b8:	b198      	cbz	r0, 80094e2 <GUI__GetLineNumChars+0x32>
 80094ba:	4b0b      	ldr	r3, [pc, #44]	; (80094e8 <GUI__GetLineNumChars+0x38>)
 80094bc:	681b      	ldr	r3, [r3, #0]
 80094be:	69db      	ldr	r3, [r3, #28]
 80094c0:	695b      	ldr	r3, [r3, #20]
 80094c2:	b10b      	cbz	r3, 80094c8 <GUI__GetLineNumChars+0x18>
 80094c4:	685b      	ldr	r3, [r3, #4]
 80094c6:	b90b      	cbnz	r3, 80094cc <GUI__GetLineNumChars+0x1c>
 80094c8:	2400      	movs	r4, #0
 80094ca:	e008      	b.n	80094de <GUI__GetLineNumChars+0x2e>
 80094cc:	4798      	blx	r3
 80094ce:	e009      	b.n	80094e4 <GUI__GetLineNumChars+0x34>
 80094d0:	a801      	add	r0, sp, #4
 80094d2:	f7fe faf9 	bl	8007ac8 <GUI_UC__GetCharCodeInc>
 80094d6:	b120      	cbz	r0, 80094e2 <GUI__GetLineNumChars+0x32>
 80094d8:	280a      	cmp	r0, #10
 80094da:	d002      	beq.n	80094e2 <GUI__GetLineNumChars+0x32>
 80094dc:	3401      	adds	r4, #1
 80094de:	42ac      	cmp	r4, r5
 80094e0:	dbf6      	blt.n	80094d0 <GUI__GetLineNumChars+0x20>
 80094e2:	4620      	mov	r0, r4
 80094e4:	b003      	add	sp, #12
 80094e6:	bd30      	pop	{r4, r5, pc}
 80094e8:	200000b0 	.word	0x200000b0

080094ec <GUI__GetOverlap>:
 80094ec:	b513      	push	{r0, r1, r4, lr}
 80094ee:	a902      	add	r1, sp, #8
 80094f0:	2400      	movs	r4, #0
 80094f2:	f841 4d04 	str.w	r4, [r1, #-4]!
 80094f6:	f000 f8b7 	bl	8009668 <GUI_GetCharDistXEx>
 80094fa:	9b01      	ldr	r3, [sp, #4]
 80094fc:	4283      	cmp	r3, r0
 80094fe:	bfcc      	ite	gt
 8009500:	ebc0 0003 	rsbgt	r0, r0, r3
 8009504:	4620      	movle	r0, r4
 8009506:	b002      	add	sp, #8
 8009508:	bd10      	pop	{r4, pc}
	...

0800950c <GUI__GetLineDistX>:
 800950c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800950e:	4a15      	ldr	r2, [pc, #84]	; (8009564 <GUI__GetLineDistX+0x58>)
 8009510:	9001      	str	r0, [sp, #4]
 8009512:	ab02      	add	r3, sp, #8
 8009514:	6812      	ldr	r2, [r2, #0]
 8009516:	f843 1d08 	str.w	r1, [r3, #-8]!
 800951a:	4669      	mov	r1, sp
 800951c:	4790      	blx	r2
 800951e:	9001      	str	r0, [sp, #4]
 8009520:	b1f0      	cbz	r0, 8009560 <GUI__GetLineDistX+0x54>
 8009522:	4b11      	ldr	r3, [pc, #68]	; (8009568 <GUI__GetLineDistX+0x5c>)
 8009524:	681b      	ldr	r3, [r3, #0]
 8009526:	69db      	ldr	r3, [r3, #28]
 8009528:	695b      	ldr	r3, [r3, #20]
 800952a:	b10b      	cbz	r3, 8009530 <GUI__GetLineDistX+0x24>
 800952c:	681b      	ldr	r3, [r3, #0]
 800952e:	b913      	cbnz	r3, 8009536 <GUI__GetLineDistX+0x2a>
 8009530:	2500      	movs	r5, #0
 8009532:	462c      	mov	r4, r5
 8009534:	e002      	b.n	800953c <GUI__GetLineDistX+0x30>
 8009536:	9900      	ldr	r1, [sp, #0]
 8009538:	4798      	blx	r3
 800953a:	e011      	b.n	8009560 <GUI__GetLineDistX+0x54>
 800953c:	9b00      	ldr	r3, [sp, #0]
 800953e:	3b01      	subs	r3, #1
 8009540:	2b00      	cmp	r3, #0
 8009542:	9300      	str	r3, [sp, #0]
 8009544:	db07      	blt.n	8009556 <GUI__GetLineDistX+0x4a>
 8009546:	a801      	add	r0, sp, #4
 8009548:	f7fe fabe 	bl	8007ac8 <GUI_UC__GetCharCodeInc>
 800954c:	4605      	mov	r5, r0
 800954e:	f000 f881 	bl	8009654 <GUI_GetCharDistX>
 8009552:	4404      	add	r4, r0
 8009554:	e7f2      	b.n	800953c <GUI__GetLineDistX+0x30>
 8009556:	4628      	mov	r0, r5
 8009558:	f7ff ffc8 	bl	80094ec <GUI__GetOverlap>
 800955c:	4420      	add	r0, r4
 800955e:	e7ff      	b.n	8009560 <GUI__GetLineDistX+0x54>
 8009560:	b003      	add	sp, #12
 8009562:	bd30      	pop	{r4, r5, pc}
 8009564:	200000bc 	.word	0x200000bc
 8009568:	200000b0 	.word	0x200000b0

0800956c <GUI__DispLine>:
 800956c:	4b27      	ldr	r3, [pc, #156]	; (800960c <GUI__DispLine+0xa0>)
 800956e:	681b      	ldr	r3, [r3, #0]
 8009570:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009572:	4605      	mov	r5, r0
 8009574:	460c      	mov	r4, r1
 8009576:	b163      	cbz	r3, 8009592 <GUI__DispLine+0x26>
 8009578:	2000      	movs	r0, #0
 800957a:	f7fc f921 	bl	80057c0 <WM__InitIVRSearch>
 800957e:	2800      	cmp	r0, #0
 8009580:	d041      	beq.n	8009606 <GUI__DispLine+0x9a>
 8009582:	4628      	mov	r0, r5
 8009584:	4621      	mov	r1, r4
 8009586:	466a      	mov	r2, sp
 8009588:	f7ff ff44 	bl	8009414 <_DispLine>
 800958c:	f7fc f856 	bl	800563c <WM__GetNextIVR>
 8009590:	e7f5      	b.n	800957e <GUI__DispLine+0x12>
 8009592:	6810      	ldr	r0, [r2, #0]
 8009594:	6851      	ldr	r1, [r2, #4]
 8009596:	4e1e      	ldr	r6, [pc, #120]	; (8009610 <GUI__DispLine+0xa4>)
 8009598:	466b      	mov	r3, sp
 800959a:	c303      	stmia	r3!, {r0, r1}
 800959c:	6833      	ldr	r3, [r6, #0]
 800959e:	f8bd 1000 	ldrh.w	r1, [sp]
 80095a2:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 80095a6:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80095aa:	4411      	add	r1, r2
 80095ac:	f8ad 1000 	strh.w	r1, [sp]
 80095b0:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 80095b4:	4419      	add	r1, r3
 80095b6:	f8ad 1002 	strh.w	r1, [sp, #2]
 80095ba:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80095be:	440a      	add	r2, r1
 80095c0:	f8ad 2004 	strh.w	r2, [sp, #4]
 80095c4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80095c8:	4668      	mov	r0, sp
 80095ca:	4413      	add	r3, r2
 80095cc:	f8ad 3006 	strh.w	r3, [sp, #6]
 80095d0:	f7fc f8f6 	bl	80057c0 <WM__InitIVRSearch>
 80095d4:	6833      	ldr	r3, [r6, #0]
 80095d6:	b940      	cbnz	r0, 80095ea <GUI__DispLine+0x7e>
 80095d8:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80095da:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80095dc:	1a8a      	subs	r2, r1, r2
 80095de:	845a      	strh	r2, [r3, #34]	; 0x22
 80095e0:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 80095e2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80095e4:	1a8a      	subs	r2, r1, r2
 80095e6:	849a      	strh	r2, [r3, #36]	; 0x24
 80095e8:	e00d      	b.n	8009606 <GUI__DispLine+0x9a>
 80095ea:	f8bd 2000 	ldrh.w	r2, [sp]
 80095ee:	845a      	strh	r2, [r3, #34]	; 0x22
 80095f0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80095f4:	849a      	strh	r2, [r3, #36]	; 0x24
 80095f6:	4628      	mov	r0, r5
 80095f8:	4621      	mov	r1, r4
 80095fa:	466a      	mov	r2, sp
 80095fc:	f7ff ff0a 	bl	8009414 <_DispLine>
 8009600:	f7fc f81c 	bl	800563c <WM__GetNextIVR>
 8009604:	e7e6      	b.n	80095d4 <GUI__DispLine+0x68>
 8009606:	b002      	add	sp, #8
 8009608:	bd70      	pop	{r4, r5, r6, pc}
 800960a:	bf00      	nop
 800960c:	20000490 	.word	0x20000490
 8009610:	200000b0 	.word	0x200000b0

08009614 <GUI_GetYAdjust>:
 8009614:	4b0a      	ldr	r3, [pc, #40]	; (8009640 <GUI_GetYAdjust+0x2c>)
 8009616:	681b      	ldr	r3, [r3, #0]
 8009618:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800961a:	f002 020c 	and.w	r2, r2, #12
 800961e:	2a08      	cmp	r2, #8
 8009620:	d007      	beq.n	8009632 <GUI_GetYAdjust+0x1e>
 8009622:	2a0c      	cmp	r2, #12
 8009624:	d005      	beq.n	8009632 <GUI_GetYAdjust+0x1e>
 8009626:	2a04      	cmp	r2, #4
 8009628:	d107      	bne.n	800963a <GUI_GetYAdjust+0x26>
 800962a:	69db      	ldr	r3, [r3, #28]
 800962c:	7e18      	ldrb	r0, [r3, #24]
 800962e:	3801      	subs	r0, #1
 8009630:	4770      	bx	lr
 8009632:	69db      	ldr	r3, [r3, #28]
 8009634:	7e18      	ldrb	r0, [r3, #24]
 8009636:	0840      	lsrs	r0, r0, #1
 8009638:	4770      	bx	lr
 800963a:	2000      	movs	r0, #0
 800963c:	4770      	bx	lr
 800963e:	bf00      	nop
 8009640:	200000b0 	.word	0x200000b0

08009644 <GUI_GetFontDistY>:
 8009644:	4b02      	ldr	r3, [pc, #8]	; (8009650 <GUI_GetFontDistY+0xc>)
 8009646:	681b      	ldr	r3, [r3, #0]
 8009648:	69db      	ldr	r3, [r3, #28]
 800964a:	7e58      	ldrb	r0, [r3, #25]
 800964c:	4770      	bx	lr
 800964e:	bf00      	nop
 8009650:	200000b0 	.word	0x200000b0

08009654 <GUI_GetCharDistX>:
 8009654:	b508      	push	{r3, lr}
 8009656:	4b03      	ldr	r3, [pc, #12]	; (8009664 <GUI_GetCharDistX+0x10>)
 8009658:	681b      	ldr	r3, [r3, #0]
 800965a:	69db      	ldr	r3, [r3, #28]
 800965c:	2100      	movs	r1, #0
 800965e:	685b      	ldr	r3, [r3, #4]
 8009660:	4798      	blx	r3
 8009662:	bd08      	pop	{r3, pc}
 8009664:	200000b0 	.word	0x200000b0

08009668 <GUI_GetCharDistXEx>:
 8009668:	b508      	push	{r3, lr}
 800966a:	4b03      	ldr	r3, [pc, #12]	; (8009678 <GUI_GetCharDistXEx+0x10>)
 800966c:	681b      	ldr	r3, [r3, #0]
 800966e:	69db      	ldr	r3, [r3, #28]
 8009670:	685b      	ldr	r3, [r3, #4]
 8009672:	4798      	blx	r3
 8009674:	bd08      	pop	{r3, pc}
 8009676:	bf00      	nop
 8009678:	200000b0 	.word	0x200000b0

0800967c <_PushFreeBlock>:
 800967c:	4b07      	ldr	r3, [pc, #28]	; (800969c <_PushFreeBlock+0x20>)
 800967e:	685a      	ldr	r2, [r3, #4]
 8009680:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8009682:	3201      	adds	r2, #1
 8009684:	b510      	push	{r4, lr}
 8009686:	605a      	str	r2, [r3, #4]
 8009688:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800968a:	eb02 04c0 	add.w	r4, r2, r0, lsl #3
 800968e:	6061      	str	r1, [r4, #4]
 8009690:	2100      	movs	r1, #0
 8009692:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 8009696:	6258      	str	r0, [r3, #36]	; 0x24
 8009698:	bd10      	pop	{r4, pc}
 800969a:	bf00      	nop
 800969c:	200004e8 	.word	0x200004e8

080096a0 <_RemoveFreeBlock>:
 80096a0:	b510      	push	{r4, lr}
 80096a2:	6842      	ldr	r2, [r0, #4]
 80096a4:	230f      	movs	r3, #15
 80096a6:	490d      	ldr	r1, [pc, #52]	; (80096dc <_RemoveFreeBlock+0x3c>)
 80096a8:	eb01 04c3 	add.w	r4, r1, r3, lsl #3
 80096ac:	6c24      	ldr	r4, [r4, #64]	; 0x40
 80096ae:	42a2      	cmp	r2, r4
 80096b0:	d203      	bcs.n	80096ba <_RemoveFreeBlock+0x1a>
 80096b2:	f113 33ff 	adds.w	r3, r3, #4294967295
 80096b6:	d2f6      	bcs.n	80096a6 <_RemoveFreeBlock+0x6>
 80096b8:	bd10      	pop	{r4, pc}
 80096ba:	2b0f      	cmp	r3, #15
 80096bc:	d80c      	bhi.n	80096d8 <_RemoveFreeBlock+0x38>
 80096be:	680c      	ldr	r4, [r1, #0]
 80096c0:	1aa2      	subs	r2, r4, r2
 80096c2:	600a      	str	r2, [r1, #0]
 80096c4:	6882      	ldr	r2, [r0, #8]
 80096c6:	68c0      	ldr	r0, [r0, #12]
 80096c8:	b102      	cbz	r2, 80096cc <_RemoveFreeBlock+0x2c>
 80096ca:	6050      	str	r0, [r2, #4]
 80096cc:	b108      	cbz	r0, 80096d2 <_RemoveFreeBlock+0x32>
 80096ce:	6002      	str	r2, [r0, #0]
 80096d0:	bd10      	pop	{r4, pc}
 80096d2:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80096d6:	645a      	str	r2, [r3, #68]	; 0x44
 80096d8:	bd10      	pop	{r4, pc}
 80096da:	bf00      	nop
 80096dc:	200004e8 	.word	0x200004e8

080096e0 <_AddFreeMemory>:
 80096e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80096e2:	4e26      	ldr	r6, [pc, #152]	; (800977c <_AddFreeMemory+0x9c>)
 80096e4:	68f3      	ldr	r3, [r6, #12]
 80096e6:	1e5a      	subs	r2, r3, #1
 80096e8:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 80096ea:	4605      	mov	r5, r0
 80096ec:	4413      	add	r3, r2
 80096ee:	1808      	adds	r0, r1, r0
 80096f0:	4298      	cmp	r0, r3
 80096f2:	460c      	mov	r4, r1
 80096f4:	d805      	bhi.n	8009702 <_AddFreeMemory+0x22>
 80096f6:	594b      	ldr	r3, [r1, r5]
 80096f8:	b91b      	cbnz	r3, 8009702 <_AddFreeMemory+0x22>
 80096fa:	6843      	ldr	r3, [r0, #4]
 80096fc:	441d      	add	r5, r3
 80096fe:	f7ff ffcf 	bl	80096a0 <_RemoveFreeBlock>
 8009702:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8009704:	429c      	cmp	r4, r3
 8009706:	d90a      	bls.n	800971e <_AddFreeMemory+0x3e>
 8009708:	f854 7c04 	ldr.w	r7, [r4, #-4]
 800970c:	1be7      	subs	r7, r4, r7
 800970e:	683b      	ldr	r3, [r7, #0]
 8009710:	b92b      	cbnz	r3, 800971e <_AddFreeMemory+0x3e>
 8009712:	687b      	ldr	r3, [r7, #4]
 8009714:	4638      	mov	r0, r7
 8009716:	441d      	add	r5, r3
 8009718:	f7ff ffc2 	bl	80096a0 <_RemoveFreeBlock>
 800971c:	463c      	mov	r4, r7
 800971e:	230f      	movs	r3, #15
 8009720:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8009724:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8009726:	4295      	cmp	r5, r2
 8009728:	d203      	bcs.n	8009732 <_AddFreeMemory+0x52>
 800972a:	f113 33ff 	adds.w	r3, r3, #4294967295
 800972e:	d2f7      	bcs.n	8009720 <_AddFreeMemory+0x40>
 8009730:	e022      	b.n	8009778 <_AddFreeMemory+0x98>
 8009732:	2b0f      	cmp	r3, #15
 8009734:	d820      	bhi.n	8009778 <_AddFreeMemory+0x98>
 8009736:	3308      	adds	r3, #8
 8009738:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800973c:	1961      	adds	r1, r4, r5
 800973e:	6852      	ldr	r2, [r2, #4]
 8009740:	60a2      	str	r2, [r4, #8]
 8009742:	2000      	movs	r0, #0
 8009744:	e884 0021 	stmia.w	r4, {r0, r5}
 8009748:	6124      	str	r4, [r4, #16]
 800974a:	f841 5c04 	str.w	r5, [r1, #-4]
 800974e:	f104 0108 	add.w	r1, r4, #8
 8009752:	b102      	cbz	r2, 8009756 <_AddFreeMemory+0x76>
 8009754:	6051      	str	r1, [r2, #4]
 8009756:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 800975a:	60e0      	str	r0, [r4, #12]
 800975c:	6059      	str	r1, [r3, #4]
 800975e:	6833      	ldr	r3, [r6, #0]
 8009760:	f896 1029 	ldrb.w	r1, [r6, #41]	; 0x29
 8009764:	4a05      	ldr	r2, [pc, #20]	; (800977c <_AddFreeMemory+0x9c>)
 8009766:	442b      	add	r3, r5
 8009768:	6033      	str	r3, [r6, #0]
 800976a:	b929      	cbnz	r1, 8009778 <_AddFreeMemory+0x98>
 800976c:	68d1      	ldr	r1, [r2, #12]
 800976e:	1acb      	subs	r3, r1, r3
 8009770:	6891      	ldr	r1, [r2, #8]
 8009772:	4299      	cmp	r1, r3
 8009774:	bf38      	it	cc
 8009776:	6093      	strcc	r3, [r2, #8]
 8009778:	4628      	mov	r0, r5
 800977a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800977c:	200004e8 	.word	0x200004e8

08009780 <_RemoveHoles>:
 8009780:	4b25      	ldr	r3, [pc, #148]	; (8009818 <_RemoveHoles+0x98>)
 8009782:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009786:	68da      	ldr	r2, [r3, #12]
 8009788:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800978a:	3a01      	subs	r2, #1
 800978c:	4682      	mov	sl, r0
 800978e:	eb02 0904 	add.w	r9, r2, r4
 8009792:	469b      	mov	fp, r3
 8009794:	e894 0028 	ldmia.w	r4, {r3, r5}
 8009798:	2b00      	cmp	r3, #0
 800979a:	d133      	bne.n	8009804 <_RemoveHoles+0x84>
 800979c:	eb04 0805 	add.w	r8, r4, r5
 80097a0:	45c8      	cmp	r8, r9
 80097a2:	d22f      	bcs.n	8009804 <_RemoveHoles+0x84>
 80097a4:	f854 c005 	ldr.w	ip, [r4, r5]
 80097a8:	f8d8 6004 	ldr.w	r6, [r8, #4]
 80097ac:	f1bc 0f00 	cmp.w	ip, #0
 80097b0:	d028      	beq.n	8009804 <_RemoveHoles+0x84>
 80097b2:	f8db 3034 	ldr.w	r3, [fp, #52]	; 0x34
 80097b6:	4f18      	ldr	r7, [pc, #96]	; (8009818 <_RemoveHoles+0x98>)
 80097b8:	f813 303c 	ldrb.w	r3, [r3, ip, lsl #3]
 80097bc:	2b01      	cmp	r3, #1
 80097be:	d121      	bne.n	8009804 <_RemoveHoles+0x84>
 80097c0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80097c2:	4620      	mov	r0, r4
 80097c4:	e88d 1008 	stmia.w	sp, {r3, ip}
 80097c8:	f7ff ff6a 	bl	80096a0 <_RemoveFreeBlock>
 80097cc:	f8d8 1000 	ldr.w	r1, [r8]
 80097d0:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80097d2:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 80097d6:	4620      	mov	r0, r4
 80097d8:	6054      	str	r4, [r2, #4]
 80097da:	4641      	mov	r1, r8
 80097dc:	4632      	mov	r2, r6
 80097de:	f003 fdd9 	bl	800d394 <memmove>
 80097e2:	e89d 1008 	ldmia.w	sp, {r3, ip}
 80097e6:	459c      	cmp	ip, r3
 80097e8:	d102      	bne.n	80097f0 <_RemoveHoles+0x70>
 80097ea:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80097ec:	1b5b      	subs	r3, r3, r5
 80097ee:	637b      	str	r3, [r7, #52]	; 0x34
 80097f0:	4628      	mov	r0, r5
 80097f2:	19a1      	adds	r1, r4, r6
 80097f4:	f7ff ff74 	bl	80096e0 <_AddFreeMemory>
 80097f8:	f1ba 0f00 	cmp.w	sl, #0
 80097fc:	d001      	beq.n	8009802 <_RemoveHoles+0x82>
 80097fe:	4582      	cmp	sl, r0
 8009800:	d905      	bls.n	800980e <_RemoveHoles+0x8e>
 8009802:	4635      	mov	r5, r6
 8009804:	442c      	add	r4, r5
 8009806:	454c      	cmp	r4, r9
 8009808:	d3c4      	bcc.n	8009794 <_RemoveHoles+0x14>
 800980a:	2001      	movs	r0, #1
 800980c:	e000      	b.n	8009810 <_RemoveHoles+0x90>
 800980e:	2000      	movs	r0, #0
 8009810:	b003      	add	sp, #12
 8009812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009816:	bf00      	nop
 8009818:	200004e8 	.word	0x200004e8

0800981c <GUI_ALLOC_FreeFixedBlock>:
 800981c:	b128      	cbz	r0, 800982a <GUI_ALLOC_FreeFixedBlock+0xe>
 800981e:	4a03      	ldr	r2, [pc, #12]	; (800982c <GUI_ALLOC_FreeFixedBlock+0x10>)
 8009820:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8009822:	6003      	str	r3, [r0, #0]
 8009824:	b103      	cbz	r3, 8009828 <GUI_ALLOC_FreeFixedBlock+0xc>
 8009826:	6058      	str	r0, [r3, #4]
 8009828:	63d0      	str	r0, [r2, #60]	; 0x3c
 800982a:	4770      	bx	lr
 800982c:	200004e8 	.word	0x200004e8

08009830 <GUI_ALLOC_h2p>:
 8009830:	4b03      	ldr	r3, [pc, #12]	; (8009840 <GUI_ALLOC_h2p+0x10>)
 8009832:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009834:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 8009838:	6840      	ldr	r0, [r0, #4]
 800983a:	3008      	adds	r0, #8
 800983c:	4770      	bx	lr
 800983e:	bf00      	nop
 8009840:	200004e8 	.word	0x200004e8

08009844 <GUI_ALLOC_LockH>:
 8009844:	4b05      	ldr	r3, [pc, #20]	; (800985c <GUI_ALLOC_LockH+0x18>)
 8009846:	69d9      	ldr	r1, [r3, #28]
 8009848:	3101      	adds	r1, #1
 800984a:	61d9      	str	r1, [r3, #28]
 800984c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800984e:	f813 1030 	ldrb.w	r1, [r3, r0, lsl #3]
 8009852:	3101      	adds	r1, #1
 8009854:	f803 1030 	strb.w	r1, [r3, r0, lsl #3]
 8009858:	f7ff bfea 	b.w	8009830 <GUI_ALLOC_h2p>
 800985c:	200004e8 	.word	0x200004e8

08009860 <GUI_ALLOC_UnlockH>:
 8009860:	b530      	push	{r4, r5, lr}
 8009862:	6802      	ldr	r2, [r0, #0]
 8009864:	4b09      	ldr	r3, [pc, #36]	; (800988c <GUI_ALLOC_UnlockH+0x2c>)
 8009866:	f852 1c08 	ldr.w	r1, [r2, #-8]
 800986a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800986c:	f812 4031 	ldrb.w	r4, [r2, r1, lsl #3]
 8009870:	2c01      	cmp	r4, #1
 8009872:	d903      	bls.n	800987c <GUI_ALLOC_UnlockH+0x1c>
 8009874:	69dd      	ldr	r5, [r3, #28]
 8009876:	b10d      	cbz	r5, 800987c <GUI_ALLOC_UnlockH+0x1c>
 8009878:	3d01      	subs	r5, #1
 800987a:	61dd      	str	r5, [r3, #28]
 800987c:	3c01      	subs	r4, #1
 800987e:	f802 4031 	strb.w	r4, [r2, r1, lsl #3]
 8009882:	2300      	movs	r3, #0
 8009884:	6003      	str	r3, [r0, #0]
 8009886:	4618      	mov	r0, r3
 8009888:	bd30      	pop	{r4, r5, pc}
 800988a:	bf00      	nop
 800988c:	200004e8 	.word	0x200004e8

08009890 <GUI_ALLOC_GetSize>:
 8009890:	b130      	cbz	r0, 80098a0 <GUI_ALLOC_GetSize+0x10>
 8009892:	4b04      	ldr	r3, [pc, #16]	; (80098a4 <GUI_ALLOC_GetSize+0x14>)
 8009894:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009896:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800989a:	6843      	ldr	r3, [r0, #4]
 800989c:	6858      	ldr	r0, [r3, #4]
 800989e:	380c      	subs	r0, #12
 80098a0:	4770      	bx	lr
 80098a2:	bf00      	nop
 80098a4:	200004e8 	.word	0x200004e8

080098a8 <GUI_ALLOC_Free>:
 80098a8:	b510      	push	{r4, lr}
 80098aa:	4604      	mov	r4, r0
 80098ac:	b160      	cbz	r0, 80098c8 <GUI_ALLOC_Free+0x20>
 80098ae:	4b07      	ldr	r3, [pc, #28]	; (80098cc <GUI_ALLOC_Free+0x24>)
 80098b0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80098b2:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 80098b6:	6859      	ldr	r1, [r3, #4]
 80098b8:	6848      	ldr	r0, [r1, #4]
 80098ba:	f7ff ff11 	bl	80096e0 <_AddFreeMemory>
 80098be:	4620      	mov	r0, r4
 80098c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80098c4:	f7ff beda 	b.w	800967c <_PushFreeBlock>
 80098c8:	bd10      	pop	{r4, pc}
 80098ca:	bf00      	nop
 80098cc:	200004e8 	.word	0x200004e8

080098d0 <_EnlargeBlocks>:
 80098d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80098d4:	4c23      	ldr	r4, [pc, #140]	; (8009964 <_EnlargeBlocks+0x94>)
 80098d6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80098d8:	b93b      	cbnz	r3, 80098ea <_EnlargeBlocks+0x1a>
 80098da:	4b23      	ldr	r3, [pc, #140]	; (8009968 <_EnlargeBlocks+0x98>)
 80098dc:	689d      	ldr	r5, [r3, #8]
 80098de:	685b      	ldr	r3, [r3, #4]
 80098e0:	3508      	adds	r5, #8
 80098e2:	fbb3 f5f5 	udiv	r5, r3, r5
 80098e6:	3502      	adds	r5, #2
 80098e8:	e003      	b.n	80098f2 <_EnlargeBlocks+0x22>
 80098ea:	6923      	ldr	r3, [r4, #16]
 80098ec:	1d1d      	adds	r5, r3, #4
 80098ee:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
 80098f2:	00e8      	lsls	r0, r5, #3
 80098f4:	f000 f8f4 	bl	8009ae0 <_Alloc>
 80098f8:	4680      	mov	r8, r0
 80098fa:	b368      	cbz	r0, 8009958 <_EnlargeBlocks+0x88>
 80098fc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80098fe:	6922      	ldr	r2, [r4, #16]
 8009900:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8009902:	eb01 03c0 	add.w	r3, r1, r0, lsl #3
 8009906:	00d2      	lsls	r2, r2, #3
 8009908:	685e      	ldr	r6, [r3, #4]
 800990a:	4b18      	ldr	r3, [pc, #96]	; (800996c <_EnlargeBlocks+0x9c>)
 800990c:	3608      	adds	r6, #8
 800990e:	681b      	ldr	r3, [r3, #0]
 8009910:	4630      	mov	r0, r6
 8009912:	4798      	blx	r3
 8009914:	6922      	ldr	r2, [r4, #16]
 8009916:	6366      	str	r6, [r4, #52]	; 0x34
 8009918:	eb06 01c2 	add.w	r1, r6, r2, lsl #3
 800991c:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
 8009920:	3104      	adds	r1, #4
 8009922:	4613      	mov	r3, r2
 8009924:	1e68      	subs	r0, r5, #1
 8009926:	4283      	cmp	r3, r0
 8009928:	f101 0108 	add.w	r1, r1, #8
 800992c:	d203      	bcs.n	8009936 <_EnlargeBlocks+0x66>
 800992e:	3301      	adds	r3, #1
 8009930:	f841 3c08 	str.w	r3, [r1, #-8]
 8009934:	e7f6      	b.n	8009924 <_EnlargeBlocks+0x54>
 8009936:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 800993a:	2600      	movs	r6, #0
 800993c:	605e      	str	r6, [r3, #4]
 800993e:	6863      	ldr	r3, [r4, #4]
 8009940:	6262      	str	r2, [r4, #36]	; 0x24
 8009942:	1a9b      	subs	r3, r3, r2
 8009944:	442b      	add	r3, r5
 8009946:	6063      	str	r3, [r4, #4]
 8009948:	6125      	str	r5, [r4, #16]
 800994a:	4638      	mov	r0, r7
 800994c:	b13f      	cbz	r7, 800995e <_EnlargeBlocks+0x8e>
 800994e:	f7ff ffab 	bl	80098a8 <GUI_ALLOC_Free>
 8009952:	4630      	mov	r0, r6
 8009954:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009958:	2001      	movs	r0, #1
 800995a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800995e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009962:	bf00      	nop
 8009964:	200004e8 	.word	0x200004e8
 8009968:	200003f4 	.word	0x200003f4
 800996c:	200000a0 	.word	0x200000a0

08009970 <_InitOnce>:
 8009970:	b538      	push	{r3, r4, r5, lr}
 8009972:	4916      	ldr	r1, [pc, #88]	; (80099cc <_InitOnce+0x5c>)
 8009974:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8009978:	bb3b      	cbnz	r3, 80099ca <_InitOnce+0x5a>
 800997a:	4a15      	ldr	r2, [pc, #84]	; (80099d0 <_InitOnce+0x60>)
 800997c:	2301      	movs	r3, #1
 800997e:	f881 3028 	strb.w	r3, [r1, #40]	; 0x28
 8009982:	6893      	ldr	r3, [r2, #8]
 8009984:	b913      	cbnz	r3, 800998c <_InitOnce+0x1c>
 8009986:	6853      	ldr	r3, [r2, #4]
 8009988:	089b      	lsrs	r3, r3, #2
 800998a:	6093      	str	r3, [r2, #8]
 800998c:	235a      	movs	r3, #90	; 0x5a
 800998e:	620b      	str	r3, [r1, #32]
 8009990:	2300      	movs	r3, #0
 8009992:	2510      	movs	r5, #16
 8009994:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
 8009998:	409d      	lsls	r5, r3
 800999a:	3301      	adds	r3, #1
 800999c:	2b10      	cmp	r3, #16
 800999e:	4c0b      	ldr	r4, [pc, #44]	; (80099cc <_InitOnce+0x5c>)
 80099a0:	6405      	str	r5, [r0, #64]	; 0x40
 80099a2:	d1f6      	bne.n	8009992 <_InitOnce+0x22>
 80099a4:	6850      	ldr	r0, [r2, #4]
 80099a6:	6811      	ldr	r1, [r2, #0]
 80099a8:	63a1      	str	r1, [r4, #56]	; 0x38
 80099aa:	2302      	movs	r3, #2
 80099ac:	6123      	str	r3, [r4, #16]
 80099ae:	f1a0 0314 	sub.w	r3, r0, #20
 80099b2:	440b      	add	r3, r1
 80099b4:	2501      	movs	r5, #1
 80099b6:	6363      	str	r3, [r4, #52]	; 0x34
 80099b8:	60e0      	str	r0, [r4, #12]
 80099ba:	605d      	str	r5, [r3, #4]
 80099bc:	6265      	str	r5, [r4, #36]	; 0x24
 80099be:	6065      	str	r5, [r4, #4]
 80099c0:	f7ff fe8e 	bl	80096e0 <_AddFreeMemory>
 80099c4:	f7ff ff84 	bl	80098d0 <_EnlargeBlocks>
 80099c8:	6325      	str	r5, [r4, #48]	; 0x30
 80099ca:	bd38      	pop	{r3, r4, r5, pc}
 80099cc:	200004e8 	.word	0x200004e8
 80099d0:	200003f4 	.word	0x200003f4

080099d4 <GUI_ALLOC_GetFixedBlock>:
 80099d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80099d8:	4605      	mov	r5, r0
 80099da:	4e26      	ldr	r6, [pc, #152]	; (8009a74 <GUI_ALLOC_GetFixedBlock+0xa0>)
 80099dc:	3503      	adds	r5, #3
 80099de:	f7ff ffc7 	bl	8009970 <_InitOnce>
 80099e2:	f025 0503 	bic.w	r5, r5, #3
 80099e6:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80099e8:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 80099ea:	3504      	adds	r5, #4
 80099ec:	429d      	cmp	r5, r3
 80099ee:	bf38      	it	cc
 80099f0:	461d      	movcc	r5, r3
 80099f2:	4614      	mov	r4, r2
 80099f4:	b12c      	cbz	r4, 8009a02 <GUI_ALLOC_GetFixedBlock+0x2e>
 80099f6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80099fa:	42ab      	cmp	r3, r5
 80099fc:	d02c      	beq.n	8009a58 <GUI_ALLOC_GetFixedBlock+0x84>
 80099fe:	6824      	ldr	r4, [r4, #0]
 8009a00:	e7f8      	b.n	80099f4 <GUI_ALLOC_GetFixedBlock+0x20>
 8009a02:	68f3      	ldr	r3, [r6, #12]
 8009a04:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 8009a06:	eb02 0803 	add.w	r8, r2, r3
 8009a0a:	f858 7c04 	ldr.w	r7, [r8, #-4]
 8009a0e:	ebc7 0708 	rsb	r7, r7, r8
 8009a12:	683b      	ldr	r3, [r7, #0]
 8009a14:	b133      	cbz	r3, 8009a24 <GUI_ALLOC_GetFixedBlock+0x50>
 8009a16:	4620      	mov	r0, r4
 8009a18:	f7ff feb2 	bl	8009780 <_RemoveHoles>
 8009a1c:	f858 7c04 	ldr.w	r7, [r8, #-4]
 8009a20:	ebc7 0708 	rsb	r7, r7, r8
 8009a24:	683b      	ldr	r3, [r7, #0]
 8009a26:	bb13      	cbnz	r3, 8009a6e <GUI_ALLOC_GetFixedBlock+0x9a>
 8009a28:	687b      	ldr	r3, [r7, #4]
 8009a2a:	42ab      	cmp	r3, r5
 8009a2c:	db1f      	blt.n	8009a6e <GUI_ALLOC_GetFixedBlock+0x9a>
 8009a2e:	4638      	mov	r0, r7
 8009a30:	1d1c      	adds	r4, r3, #4
 8009a32:	f7ff fe35 	bl	80096a0 <_RemoveFreeBlock>
 8009a36:	68f3      	ldr	r3, [r6, #12]
 8009a38:	6878      	ldr	r0, [r7, #4]
 8009a3a:	1b5b      	subs	r3, r3, r5
 8009a3c:	60f3      	str	r3, [r6, #12]
 8009a3e:	6973      	ldr	r3, [r6, #20]
 8009a40:	1b64      	subs	r4, r4, r5
 8009a42:	442b      	add	r3, r5
 8009a44:	1b40      	subs	r0, r0, r5
 8009a46:	443c      	add	r4, r7
 8009a48:	6173      	str	r3, [r6, #20]
 8009a4a:	d002      	beq.n	8009a52 <GUI_ALLOC_GetFixedBlock+0x7e>
 8009a4c:	4639      	mov	r1, r7
 8009a4e:	f7ff fe47 	bl	80096e0 <_AddFreeMemory>
 8009a52:	f844 5c04 	str.w	r5, [r4, #-4]
 8009a56:	e00a      	b.n	8009a6e <GUI_ALLOC_GetFixedBlock+0x9a>
 8009a58:	6823      	ldr	r3, [r4, #0]
 8009a5a:	b10b      	cbz	r3, 8009a60 <GUI_ALLOC_GetFixedBlock+0x8c>
 8009a5c:	6861      	ldr	r1, [r4, #4]
 8009a5e:	6059      	str	r1, [r3, #4]
 8009a60:	6861      	ldr	r1, [r4, #4]
 8009a62:	b101      	cbz	r1, 8009a66 <GUI_ALLOC_GetFixedBlock+0x92>
 8009a64:	600b      	str	r3, [r1, #0]
 8009a66:	42a2      	cmp	r2, r4
 8009a68:	d101      	bne.n	8009a6e <GUI_ALLOC_GetFixedBlock+0x9a>
 8009a6a:	6823      	ldr	r3, [r4, #0]
 8009a6c:	63f3      	str	r3, [r6, #60]	; 0x3c
 8009a6e:	4620      	mov	r0, r4
 8009a70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009a74:	200004e8 	.word	0x200004e8

08009a78 <GUI_ALLOC_GetMaxSize>:
 8009a78:	b508      	push	{r3, lr}
 8009a7a:	f7ff ff79 	bl	8009970 <_InitOnce>
 8009a7e:	2200      	movs	r2, #0
 8009a80:	4b0b      	ldr	r3, [pc, #44]	; (8009ab0 <GUI_ALLOC_GetMaxSize+0x38>)
 8009a82:	4413      	add	r3, r2
 8009a84:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8009a88:	b113      	cbz	r3, 8009a90 <GUI_ALLOC_GetMaxSize+0x18>
 8009a8a:	689b      	ldr	r3, [r3, #8]
 8009a8c:	2000      	movs	r0, #0
 8009a8e:	e00b      	b.n	8009aa8 <GUI_ALLOC_GetMaxSize+0x30>
 8009a90:	3a08      	subs	r2, #8
 8009a92:	f112 0f80 	cmn.w	r2, #128	; 0x80
 8009a96:	d1f3      	bne.n	8009a80 <GUI_ALLOC_GetMaxSize+0x8>
 8009a98:	e7f8      	b.n	8009a8c <GUI_ALLOC_GetMaxSize+0x14>
 8009a9a:	685a      	ldr	r2, [r3, #4]
 8009a9c:	689b      	ldr	r3, [r3, #8]
 8009a9e:	4290      	cmp	r0, r2
 8009aa0:	bf38      	it	cc
 8009aa2:	4610      	movcc	r0, r2
 8009aa4:	b113      	cbz	r3, 8009aac <GUI_ALLOC_GetMaxSize+0x34>
 8009aa6:	689b      	ldr	r3, [r3, #8]
 8009aa8:	2b00      	cmp	r3, #0
 8009aaa:	d1f6      	bne.n	8009a9a <GUI_ALLOC_GetMaxSize+0x22>
 8009aac:	380c      	subs	r0, #12
 8009aae:	bd08      	pop	{r3, pc}
 8009ab0:	200004e8 	.word	0x200004e8

08009ab4 <GUI_ALLOC_RequestSize>:
 8009ab4:	b508      	push	{r3, lr}
 8009ab6:	f7ff ffdf 	bl	8009a78 <GUI_ALLOC_GetMaxSize>
 8009aba:	f5b0 0f80 	cmp.w	r0, #4194304	; 0x400000
 8009abe:	f04f 0364 	mov.w	r3, #100	; 0x64
 8009ac2:	4a06      	ldr	r2, [pc, #24]	; (8009adc <GUI_ALLOC_RequestSize+0x28>)
 8009ac4:	d904      	bls.n	8009ad0 <GUI_ALLOC_RequestSize+0x1c>
 8009ac6:	fb90 f0f3 	sdiv	r0, r0, r3
 8009aca:	6a13      	ldr	r3, [r2, #32]
 8009acc:	4358      	muls	r0, r3
 8009ace:	bd08      	pop	{r3, pc}
 8009ad0:	6a12      	ldr	r2, [r2, #32]
 8009ad2:	4350      	muls	r0, r2
 8009ad4:	fbb0 f0f3 	udiv	r0, r0, r3
 8009ad8:	bd08      	pop	{r3, pc}
 8009ada:	bf00      	nop
 8009adc:	200004e8 	.word	0x200004e8

08009ae0 <_Alloc>:
 8009ae0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009ae4:	4d38      	ldr	r5, [pc, #224]	; (8009bc8 <_Alloc+0xe8>)
 8009ae6:	4604      	mov	r4, r0
 8009ae8:	f7ff ff42 	bl	8009970 <_InitOnce>
 8009aec:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 8009aee:	682b      	ldr	r3, [r5, #0]
 8009af0:	42bc      	cmp	r4, r7
 8009af2:	bf24      	itt	cs
 8009af4:	1ce7      	addcs	r7, r4, #3
 8009af6:	f027 0703 	biccs.w	r7, r7, #3
 8009afa:	370c      	adds	r7, #12
 8009afc:	429f      	cmp	r7, r3
 8009afe:	4c32      	ldr	r4, [pc, #200]	; (8009bc8 <_Alloc+0xe8>)
 8009b00:	d83e      	bhi.n	8009b80 <_Alloc+0xa0>
 8009b02:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009b04:	6862      	ldr	r2, [r4, #4]
 8009b06:	429a      	cmp	r2, r3
 8009b08:	d90f      	bls.n	8009b2a <_Alloc+0x4a>
 8009b0a:	686b      	ldr	r3, [r5, #4]
 8009b0c:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 8009b0e:	3b01      	subs	r3, #1
 8009b10:	606b      	str	r3, [r5, #4]
 8009b12:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8009b14:	ea4f 09c6 	mov.w	r9, r6, lsl #3
 8009b18:	eb03 0209 	add.w	r2, r3, r9
 8009b1c:	6852      	ldr	r2, [r2, #4]
 8009b1e:	626a      	str	r2, [r5, #36]	; 0x24
 8009b20:	2201      	movs	r2, #1
 8009b22:	f803 2036 	strb.w	r2, [r3, r6, lsl #3]
 8009b26:	b956      	cbnz	r6, 8009b3e <_Alloc+0x5e>
 8009b28:	e02a      	b.n	8009b80 <_Alloc+0xa0>
 8009b2a:	3b01      	subs	r3, #1
 8009b2c:	6323      	str	r3, [r4, #48]	; 0x30
 8009b2e:	f7ff fecf 	bl	80098d0 <_EnlargeBlocks>
 8009b32:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009b34:	3301      	adds	r3, #1
 8009b36:	6323      	str	r3, [r4, #48]	; 0x30
 8009b38:	2800      	cmp	r0, #0
 8009b3a:	d0e6      	beq.n	8009b0a <_Alloc+0x2a>
 8009b3c:	e020      	b.n	8009b80 <_Alloc+0xa0>
 8009b3e:	230f      	movs	r3, #15
 8009b40:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 8009b44:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8009b46:	4297      	cmp	r7, r2
 8009b48:	d20c      	bcs.n	8009b64 <_Alloc+0x84>
 8009b4a:	f113 33ff 	adds.w	r3, r3, #4294967295
 8009b4e:	d2f7      	bcs.n	8009b40 <_Alloc+0x60>
 8009b50:	e008      	b.n	8009b64 <_Alloc+0x84>
 8009b52:	6894      	ldr	r4, [r2, #8]
 8009b54:	b12c      	cbz	r4, 8009b62 <_Alloc+0x82>
 8009b56:	6862      	ldr	r2, [r4, #4]
 8009b58:	4297      	cmp	r7, r2
 8009b5a:	d914      	bls.n	8009b86 <_Alloc+0xa6>
 8009b5c:	68a2      	ldr	r2, [r4, #8]
 8009b5e:	2a00      	cmp	r2, #0
 8009b60:	d1f7      	bne.n	8009b52 <_Alloc+0x72>
 8009b62:	3301      	adds	r3, #1
 8009b64:	2b0f      	cmp	r3, #15
 8009b66:	d803      	bhi.n	8009b70 <_Alloc+0x90>
 8009b68:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 8009b6c:	6c52      	ldr	r2, [r2, #68]	; 0x44
 8009b6e:	e7f6      	b.n	8009b5e <_Alloc+0x7e>
 8009b70:	4638      	mov	r0, r7
 8009b72:	f7ff fe05 	bl	8009780 <_RemoveHoles>
 8009b76:	2800      	cmp	r0, #0
 8009b78:	d0e1      	beq.n	8009b3e <_Alloc+0x5e>
 8009b7a:	4630      	mov	r0, r6
 8009b7c:	f7ff fd7e 	bl	800967c <_PushFreeBlock>
 8009b80:	2000      	movs	r0, #0
 8009b82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009b86:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8009b8a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8009b8c:	ebc7 0208 	rsb	r2, r7, r8
 8009b90:	330c      	adds	r3, #12
 8009b92:	4620      	mov	r0, r4
 8009b94:	429a      	cmp	r2, r3
 8009b96:	bf38      	it	cc
 8009b98:	4647      	movcc	r7, r8
 8009b9a:	f7ff fd81 	bl	80096a0 <_RemoveFreeBlock>
 8009b9e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8009ba0:	444b      	add	r3, r9
 8009ba2:	19e1      	adds	r1, r4, r7
 8009ba4:	605c      	str	r4, [r3, #4]
 8009ba6:	45b8      	cmp	r8, r7
 8009ba8:	f04f 0300 	mov.w	r3, #0
 8009bac:	e884 00c0 	stmia.w	r4, {r6, r7}
 8009bb0:	60a3      	str	r3, [r4, #8]
 8009bb2:	6124      	str	r4, [r4, #16]
 8009bb4:	f841 7c04 	str.w	r7, [r1, #-4]
 8009bb8:	dd03      	ble.n	8009bc2 <_Alloc+0xe2>
 8009bba:	ebc7 0008 	rsb	r0, r7, r8
 8009bbe:	f7ff fd8f 	bl	80096e0 <_AddFreeMemory>
 8009bc2:	4630      	mov	r0, r6
 8009bc4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009bc8:	200004e8 	.word	0x200004e8

08009bcc <GUI_ALLOC_AllocNoInit>:
 8009bcc:	b108      	cbz	r0, 8009bd2 <GUI_ALLOC_AllocNoInit+0x6>
 8009bce:	f7ff bf87 	b.w	8009ae0 <_Alloc>
 8009bd2:	4770      	bx	lr

08009bd4 <GUI_ALLOC_FreePtr>:
 8009bd4:	b510      	push	{r4, lr}
 8009bd6:	4604      	mov	r4, r0
 8009bd8:	6800      	ldr	r0, [r0, #0]
 8009bda:	f7ff fe65 	bl	80098a8 <GUI_ALLOC_Free>
 8009bde:	2300      	movs	r3, #0
 8009be0:	6023      	str	r3, [r4, #0]
 8009be2:	bd10      	pop	{r4, pc}

08009be4 <GUI_ALLOC_AllocInit>:
 8009be4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009be6:	4605      	mov	r5, r0
 8009be8:	460c      	mov	r4, r1
 8009bea:	b909      	cbnz	r1, 8009bf0 <GUI_ALLOC_AllocInit+0xc>
 8009bec:	2000      	movs	r0, #0
 8009bee:	e014      	b.n	8009c1a <GUI_ALLOC_AllocInit+0x36>
 8009bf0:	4608      	mov	r0, r1
 8009bf2:	f7ff ffeb 	bl	8009bcc <GUI_ALLOC_AllocNoInit>
 8009bf6:	4606      	mov	r6, r0
 8009bf8:	2800      	cmp	r0, #0
 8009bfa:	d0f7      	beq.n	8009bec <GUI_ALLOC_AllocInit+0x8>
 8009bfc:	f7ff fe22 	bl	8009844 <GUI_ALLOC_LockH>
 8009c00:	9001      	str	r0, [sp, #4]
 8009c02:	b10d      	cbz	r5, 8009c08 <GUI_ALLOC_AllocInit+0x24>
 8009c04:	4b06      	ldr	r3, [pc, #24]	; (8009c20 <GUI_ALLOC_AllocInit+0x3c>)
 8009c06:	e000      	b.n	8009c0a <GUI_ALLOC_AllocInit+0x26>
 8009c08:	4b06      	ldr	r3, [pc, #24]	; (8009c24 <GUI_ALLOC_AllocInit+0x40>)
 8009c0a:	681b      	ldr	r3, [r3, #0]
 8009c0c:	4629      	mov	r1, r5
 8009c0e:	4622      	mov	r2, r4
 8009c10:	4798      	blx	r3
 8009c12:	a801      	add	r0, sp, #4
 8009c14:	f7ff fe24 	bl	8009860 <GUI_ALLOC_UnlockH>
 8009c18:	4630      	mov	r0, r6
 8009c1a:	b002      	add	sp, #8
 8009c1c:	bd70      	pop	{r4, r5, r6, pc}
 8009c1e:	bf00      	nop
 8009c20:	200000a0 	.word	0x200000a0
 8009c24:	2000009c 	.word	0x2000009c

08009c28 <GUI_ALLOC_AllocZero>:
 8009c28:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009c2a:	4605      	mov	r5, r0
 8009c2c:	f7ff ffce 	bl	8009bcc <GUI_ALLOC_AllocNoInit>
 8009c30:	4606      	mov	r6, r0
 8009c32:	b160      	cbz	r0, 8009c4e <GUI_ALLOC_AllocZero+0x26>
 8009c34:	f7ff fe06 	bl	8009844 <GUI_ALLOC_LockH>
 8009c38:	ac02      	add	r4, sp, #8
 8009c3a:	4b06      	ldr	r3, [pc, #24]	; (8009c54 <GUI_ALLOC_AllocZero+0x2c>)
 8009c3c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009c40:	681b      	ldr	r3, [r3, #0]
 8009c42:	2100      	movs	r1, #0
 8009c44:	462a      	mov	r2, r5
 8009c46:	4798      	blx	r3
 8009c48:	4620      	mov	r0, r4
 8009c4a:	f7ff fe09 	bl	8009860 <GUI_ALLOC_UnlockH>
 8009c4e:	4630      	mov	r0, r6
 8009c50:	b002      	add	sp, #8
 8009c52:	bd70      	pop	{r4, r5, r6, pc}
 8009c54:	2000009c 	.word	0x2000009c

08009c58 <GUI_ALLOC_Realloc>:
 8009c58:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009c5a:	4604      	mov	r4, r0
 8009c5c:	4608      	mov	r0, r1
 8009c5e:	460e      	mov	r6, r1
 8009c60:	f7ff ffb4 	bl	8009bcc <GUI_ALLOC_AllocNoInit>
 8009c64:	4605      	mov	r5, r0
 8009c66:	b300      	cbz	r0, 8009caa <GUI_ALLOC_Realloc+0x52>
 8009c68:	b1fc      	cbz	r4, 8009caa <GUI_ALLOC_Realloc+0x52>
 8009c6a:	4620      	mov	r0, r4
 8009c6c:	f7ff fe10 	bl	8009890 <GUI_ALLOC_GetSize>
 8009c70:	42b0      	cmp	r0, r6
 8009c72:	bfb4      	ite	lt
 8009c74:	4607      	movlt	r7, r0
 8009c76:	4637      	movge	r7, r6
 8009c78:	4628      	mov	r0, r5
 8009c7a:	f7ff fde3 	bl	8009844 <GUI_ALLOC_LockH>
 8009c7e:	9000      	str	r0, [sp, #0]
 8009c80:	4620      	mov	r0, r4
 8009c82:	f7ff fddf 	bl	8009844 <GUI_ALLOC_LockH>
 8009c86:	ae02      	add	r6, sp, #8
 8009c88:	4b09      	ldr	r3, [pc, #36]	; (8009cb0 <GUI_ALLOC_Realloc+0x58>)
 8009c8a:	9001      	str	r0, [sp, #4]
 8009c8c:	4601      	mov	r1, r0
 8009c8e:	681b      	ldr	r3, [r3, #0]
 8009c90:	f856 0d08 	ldr.w	r0, [r6, #-8]!
 8009c94:	463a      	mov	r2, r7
 8009c96:	4798      	blx	r3
 8009c98:	4668      	mov	r0, sp
 8009c9a:	f7ff fde1 	bl	8009860 <GUI_ALLOC_UnlockH>
 8009c9e:	a801      	add	r0, sp, #4
 8009ca0:	f7ff fdde 	bl	8009860 <GUI_ALLOC_UnlockH>
 8009ca4:	4620      	mov	r0, r4
 8009ca6:	f7ff fdff 	bl	80098a8 <GUI_ALLOC_Free>
 8009caa:	4628      	mov	r0, r5
 8009cac:	b003      	add	sp, #12
 8009cae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009cb0:	200000a0 	.word	0x200000a0

08009cb4 <GUI_DrawRect>:
 8009cb4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8009cb8:	4c1e      	ldr	r4, [pc, #120]	; (8009d34 <GUI_DrawRect+0x80>)
 8009cba:	f8d4 e000 	ldr.w	lr, [r4]
 8009cbe:	f8de 404c 	ldr.w	r4, [lr, #76]	; 0x4c
 8009cc2:	f8de 6050 	ldr.w	r6, [lr, #80]	; 0x50
 8009cc6:	1905      	adds	r5, r0, r4
 8009cc8:	4414      	add	r4, r2
 8009cca:	f89e 2018 	ldrb.w	r2, [lr, #24]
 8009cce:	3a01      	subs	r2, #1
 8009cd0:	b292      	uxth	r2, r2
 8009cd2:	198f      	adds	r7, r1, r6
 8009cd4:	441e      	add	r6, r3
 8009cd6:	1aab      	subs	r3, r5, r2
 8009cd8:	f8ad 3000 	strh.w	r3, [sp]
 8009cdc:	1913      	adds	r3, r2, r4
 8009cde:	f8ad 3004 	strh.w	r3, [sp, #4]
 8009ce2:	4668      	mov	r0, sp
 8009ce4:	1abb      	subs	r3, r7, r2
 8009ce6:	4432      	add	r2, r6
 8009ce8:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009cec:	f8ad 2006 	strh.w	r2, [sp, #6]
 8009cf0:	f7fb fd66 	bl	80057c0 <WM__InitIVRSearch>
 8009cf4:	b1d0      	cbz	r0, 8009d2c <GUI_DrawRect+0x78>
 8009cf6:	4628      	mov	r0, r5
 8009cf8:	4639      	mov	r1, r7
 8009cfa:	4622      	mov	r2, r4
 8009cfc:	f7fd f8cc 	bl	8006e98 <LCD_DrawHLine>
 8009d00:	f107 0901 	add.w	r9, r7, #1
 8009d04:	4628      	mov	r0, r5
 8009d06:	4631      	mov	r1, r6
 8009d08:	4622      	mov	r2, r4
 8009d0a:	f106 38ff 	add.w	r8, r6, #4294967295
 8009d0e:	f7fd f8c3 	bl	8006e98 <LCD_DrawHLine>
 8009d12:	4628      	mov	r0, r5
 8009d14:	4649      	mov	r1, r9
 8009d16:	4642      	mov	r2, r8
 8009d18:	f7fd f8e4 	bl	8006ee4 <LCD_DrawVLine>
 8009d1c:	4620      	mov	r0, r4
 8009d1e:	4649      	mov	r1, r9
 8009d20:	4642      	mov	r2, r8
 8009d22:	f7fd f8df 	bl	8006ee4 <LCD_DrawVLine>
 8009d26:	f7fb fc89 	bl	800563c <WM__GetNextIVR>
 8009d2a:	e7e3      	b.n	8009cf4 <GUI_DrawRect+0x40>
 8009d2c:	b003      	add	sp, #12
 8009d2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009d32:	bf00      	nop
 8009d34:	200000b0 	.word	0x200000b0

08009d38 <LCD_Index2Color_888>:
 8009d38:	4770      	bx	lr

08009d3a <LCD_Index2Color_8888>:
 8009d3a:	4770      	bx	lr

08009d3c <_Color2Index_8888>:
 8009d3c:	4770      	bx	lr

08009d3e <_GetIndexMask_8888>:
 8009d3e:	f04f 30ff 	mov.w	r0, #4294967295
 8009d42:	4770      	bx	lr

08009d44 <_Color2IndexBulk>:
 8009d44:	b510      	push	{r4, lr}
 8009d46:	f850 4b04 	ldr.w	r4, [r0], #4
 8009d4a:	600c      	str	r4, [r1, #0]
 8009d4c:	3a01      	subs	r2, #1
 8009d4e:	4419      	add	r1, r3
 8009d50:	d1f9      	bne.n	8009d46 <_Color2IndexBulk+0x2>
 8009d52:	bd10      	pop	{r4, pc}

08009d54 <_Index2ColorBulk>:
 8009d54:	b510      	push	{r4, lr}
 8009d56:	6804      	ldr	r4, [r0, #0]
 8009d58:	f841 4b04 	str.w	r4, [r1], #4
 8009d5c:	3a01      	subs	r2, #1
 8009d5e:	4418      	add	r0, r3
 8009d60:	d1f9      	bne.n	8009d56 <_Index2ColorBulk+0x2>
 8009d62:	bd10      	pop	{r4, pc}

08009d64 <_DrawDown>:
 8009d64:	4770      	bx	lr

08009d66 <_DrawUp>:
 8009d66:	4770      	bx	lr

08009d68 <_DrawDownRect>:
 8009d68:	4770      	bx	lr

08009d6a <_DrawUpRect>:
 8009d6a:	4770      	bx	lr

08009d6c <_DrawFlat>:
 8009d6c:	4770      	bx	lr

08009d6e <_EffectRequiresRedraw>:
 8009d6e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009d70:	460d      	mov	r5, r1
 8009d72:	f100 0108 	add.w	r1, r0, #8
 8009d76:	4602      	mov	r2, r0
 8009d78:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009d7a:	c903      	ldmia	r1, {r0, r1}
 8009d7c:	681c      	ldr	r4, [r3, #0]
 8009d7e:	e88d 0003 	stmia.w	sp, {r0, r1}
 8009d82:	4610      	mov	r0, r2
 8009d84:	4669      	mov	r1, sp
 8009d86:	f7f9 ff8f 	bl	8003ca8 <WM__Screen2Client>
 8009d8a:	f9b5 2000 	ldrsh.w	r2, [r5]
 8009d8e:	f9bd 3000 	ldrsh.w	r3, [sp]
 8009d92:	4422      	add	r2, r4
 8009d94:	429a      	cmp	r2, r3
 8009d96:	dc17      	bgt.n	8009dc8 <_EffectRequiresRedraw+0x5a>
 8009d98:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009d9c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8009da0:	1b12      	subs	r2, r2, r4
 8009da2:	429a      	cmp	r2, r3
 8009da4:	db10      	blt.n	8009dc8 <_EffectRequiresRedraw+0x5a>
 8009da6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8009daa:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8009dae:	4422      	add	r2, r4
 8009db0:	429a      	cmp	r2, r3
 8009db2:	dc09      	bgt.n	8009dc8 <_EffectRequiresRedraw+0x5a>
 8009db4:	f9b5 0006 	ldrsh.w	r0, [r5, #6]
 8009db8:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8009dbc:	1b04      	subs	r4, r0, r4
 8009dbe:	429c      	cmp	r4, r3
 8009dc0:	bfac      	ite	ge
 8009dc2:	2000      	movge	r0, #0
 8009dc4:	2001      	movlt	r0, #1
 8009dc6:	e000      	b.n	8009dca <_EffectRequiresRedraw+0x5c>
 8009dc8:	2001      	movs	r0, #1
 8009dca:	b003      	add	sp, #12
 8009dcc:	bd30      	pop	{r4, r5, pc}

08009dce <WIDGET__RotateRect90>:
 8009dce:	f9b0 3000 	ldrsh.w	r3, [r0]
 8009dd2:	b570      	push	{r4, r5, r6, lr}
 8009dd4:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8009dd8:	8815      	ldrh	r5, [r2, #0]
 8009dda:	88d0      	ldrh	r0, [r2, #6]
 8009ddc:	8894      	ldrh	r4, [r2, #4]
 8009dde:	8852      	ldrh	r2, [r2, #2]
 8009de0:	804d      	strh	r5, [r1, #2]
 8009de2:	1af3      	subs	r3, r6, r3
 8009de4:	b29b      	uxth	r3, r3
 8009de6:	1a18      	subs	r0, r3, r0
 8009de8:	1a9b      	subs	r3, r3, r2
 8009dea:	8008      	strh	r0, [r1, #0]
 8009dec:	808b      	strh	r3, [r1, #4]
 8009dee:	80cc      	strh	r4, [r1, #6]
 8009df0:	bd70      	pop	{r4, r5, r6, pc}

08009df2 <WIDGET__GetClientRect>:
 8009df2:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8009df4:	071b      	lsls	r3, r3, #28
 8009df6:	b513      	push	{r0, r1, r4, lr}
 8009df8:	460c      	mov	r4, r1
 8009dfa:	d50f      	bpl.n	8009e1c <WIDGET__GetClientRect+0x2a>
 8009dfc:	4668      	mov	r0, sp
 8009dfe:	f7fa fa03 	bl	8004208 <WM_GetClientRect>
 8009e02:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009e06:	8023      	strh	r3, [r4, #0]
 8009e08:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009e0c:	80a3      	strh	r3, [r4, #4]
 8009e0e:	f8bd 3000 	ldrh.w	r3, [sp]
 8009e12:	8063      	strh	r3, [r4, #2]
 8009e14:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009e18:	80e3      	strh	r3, [r4, #6]
 8009e1a:	e002      	b.n	8009e22 <WIDGET__GetClientRect+0x30>
 8009e1c:	4608      	mov	r0, r1
 8009e1e:	f7fa f9f3 	bl	8004208 <WM_GetClientRect>
 8009e22:	b002      	add	sp, #8
 8009e24:	bd10      	pop	{r4, pc}

08009e26 <WIDGET__GetInsideRect>:
 8009e26:	b538      	push	{r3, r4, r5, lr}
 8009e28:	4604      	mov	r4, r0
 8009e2a:	460d      	mov	r5, r1
 8009e2c:	f7fb f912 	bl	8005054 <WM__GetClientRectWin>
 8009e30:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009e32:	4628      	mov	r0, r5
 8009e34:	4629      	mov	r1, r5
 8009e36:	681a      	ldr	r2, [r3, #0]
 8009e38:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009e3c:	f7fd bb75 	b.w	800752a <GUI__ReduceRect>

08009e40 <WIDGET__Init>:
 8009e40:	4b02      	ldr	r3, [pc, #8]	; (8009e4c <WIDGET__Init+0xc>)
 8009e42:	8642      	strh	r2, [r0, #50]	; 0x32
 8009e44:	681b      	ldr	r3, [r3, #0]
 8009e46:	62c3      	str	r3, [r0, #44]	; 0x2c
 8009e48:	8601      	strh	r1, [r0, #48]	; 0x30
 8009e4a:	4770      	bx	lr
 8009e4c:	200000c0 	.word	0x200000c0

08009e50 <WIDGET_SetState>:
 8009e50:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009e52:	460c      	mov	r4, r1
 8009e54:	4605      	mov	r5, r0
 8009e56:	f7ff fcf5 	bl	8009844 <GUI_ALLOC_LockH>
 8009e5a:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8009e5c:	9001      	str	r0, [sp, #4]
 8009e5e:	4294      	cmp	r4, r2
 8009e60:	d003      	beq.n	8009e6a <WIDGET_SetState+0x1a>
 8009e62:	8644      	strh	r4, [r0, #50]	; 0x32
 8009e64:	4628      	mov	r0, r5
 8009e66:	f7fb fa3f 	bl	80052e8 <WM_InvalidateWindow>
 8009e6a:	a801      	add	r0, sp, #4
 8009e6c:	f7ff fcf8 	bl	8009860 <GUI_ALLOC_UnlockH>
 8009e70:	b003      	add	sp, #12
 8009e72:	bd30      	pop	{r4, r5, pc}

08009e74 <WIDGET_OrState>:
 8009e74:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009e76:	460c      	mov	r4, r1
 8009e78:	4605      	mov	r5, r0
 8009e7a:	b178      	cbz	r0, 8009e9c <WIDGET_OrState+0x28>
 8009e7c:	f7ff fce2 	bl	8009844 <GUI_ALLOC_LockH>
 8009e80:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8009e82:	9001      	str	r0, [sp, #4]
 8009e84:	ea04 0102 	and.w	r1, r4, r2
 8009e88:	428c      	cmp	r4, r1
 8009e8a:	d004      	beq.n	8009e96 <WIDGET_OrState+0x22>
 8009e8c:	4314      	orrs	r4, r2
 8009e8e:	8644      	strh	r4, [r0, #50]	; 0x32
 8009e90:	4628      	mov	r0, r5
 8009e92:	f7fb fa29 	bl	80052e8 <WM_InvalidateWindow>
 8009e96:	a801      	add	r0, sp, #4
 8009e98:	f7ff fce2 	bl	8009860 <GUI_ALLOC_UnlockH>
 8009e9c:	b003      	add	sp, #12
 8009e9e:	bd30      	pop	{r4, r5, pc}

08009ea0 <WIDGET_AndState>:
 8009ea0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009ea2:	460d      	mov	r5, r1
 8009ea4:	4604      	mov	r4, r0
 8009ea6:	b170      	cbz	r0, 8009ec6 <WIDGET_AndState+0x26>
 8009ea8:	f7ff fccc 	bl	8009844 <GUI_ALLOC_LockH>
 8009eac:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8009eae:	9001      	str	r0, [sp, #4]
 8009eb0:	ea22 0105 	bic.w	r1, r2, r5
 8009eb4:	428a      	cmp	r2, r1
 8009eb6:	d003      	beq.n	8009ec0 <WIDGET_AndState+0x20>
 8009eb8:	8641      	strh	r1, [r0, #50]	; 0x32
 8009eba:	4620      	mov	r0, r4
 8009ebc:	f7fb fa14 	bl	80052e8 <WM_InvalidateWindow>
 8009ec0:	a801      	add	r0, sp, #4
 8009ec2:	f7ff fccd 	bl	8009860 <GUI_ALLOC_UnlockH>
 8009ec6:	b003      	add	sp, #12
 8009ec8:	bd30      	pop	{r4, r5, pc}

08009eca <WIDGET_HandleActive>:
 8009eca:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009ecc:	460d      	mov	r5, r1
 8009ece:	b085      	sub	sp, #20
 8009ed0:	4606      	mov	r6, r0
 8009ed2:	2800      	cmp	r0, #0
 8009ed4:	f000 8095 	beq.w	800a002 <WIDGET_HandleActive+0x138>
 8009ed8:	f7ff fcb4 	bl	8009844 <GUI_ALLOC_LockH>
 8009edc:	682b      	ldr	r3, [r5, #0]
 8009ede:	9002      	str	r0, [sp, #8]
 8009ee0:	2b16      	cmp	r3, #22
 8009ee2:	d054      	beq.n	8009f8e <WIDGET_HandleActive+0xc4>
 8009ee4:	dc0c      	bgt.n	8009f00 <WIDGET_HandleActive+0x36>
 8009ee6:	2b11      	cmp	r3, #17
 8009ee8:	d033      	beq.n	8009f52 <WIDGET_HandleActive+0x88>
 8009eea:	dc02      	bgt.n	8009ef2 <WIDGET_HandleActive+0x28>
 8009eec:	2b0d      	cmp	r3, #13
 8009eee:	d040      	beq.n	8009f72 <WIDGET_HandleActive+0xa8>
 8009ef0:	e080      	b.n	8009ff4 <WIDGET_HandleActive+0x12a>
 8009ef2:	2b14      	cmp	r3, #20
 8009ef4:	d079      	beq.n	8009fea <WIDGET_HandleActive+0x120>
 8009ef6:	2b15      	cmp	r3, #21
 8009ef8:	d17c      	bne.n	8009ff4 <WIDGET_HandleActive+0x12a>
 8009efa:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8009efe:	e072      	b.n	8009fe6 <WIDGET_HandleActive+0x11c>
 8009f00:	2b1f      	cmp	r3, #31
 8009f02:	d06d      	beq.n	8009fe0 <WIDGET_HandleActive+0x116>
 8009f04:	dc02      	bgt.n	8009f0c <WIDGET_HandleActive+0x42>
 8009f06:	2b1e      	cmp	r3, #30
 8009f08:	d044      	beq.n	8009f94 <WIDGET_HandleActive+0xca>
 8009f0a:	e073      	b.n	8009ff4 <WIDGET_HandleActive+0x12a>
 8009f0c:	2b31      	cmp	r3, #49	; 0x31
 8009f0e:	d01e      	beq.n	8009f4e <WIDGET_HandleActive+0x84>
 8009f10:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8009f14:	d16e      	bne.n	8009ff4 <WIDGET_HandleActive+0x12a>
 8009f16:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009f18:	6819      	ldr	r1, [r3, #0]
 8009f1a:	68eb      	ldr	r3, [r5, #12]
 8009f1c:	62c3      	str	r3, [r0, #44]	; 0x2c
 8009f1e:	681b      	ldr	r3, [r3, #0]
 8009f20:	a802      	add	r0, sp, #8
 8009f22:	1acd      	subs	r5, r1, r3
 8009f24:	f7ff fc9c 	bl	8009860 <GUI_ALLOC_UnlockH>
 8009f28:	4630      	mov	r0, r6
 8009f2a:	f7ff fc8b 	bl	8009844 <GUI_ALLOC_LockH>
 8009f2e:	ac04      	add	r4, sp, #16
 8009f30:	4269      	negs	r1, r5
 8009f32:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009f36:	460a      	mov	r2, r1
 8009f38:	462b      	mov	r3, r5
 8009f3a:	9500      	str	r5, [sp, #0]
 8009f3c:	f7f9 fef0 	bl	8003d20 <WM__UpdateChildPositions>
 8009f40:	4620      	mov	r0, r4
 8009f42:	f7ff fc8d 	bl	8009860 <GUI_ALLOC_UnlockH>
 8009f46:	4630      	mov	r0, r6
 8009f48:	f7fb f9ce 	bl	80052e8 <WM_InvalidateWindow>
 8009f4c:	e050      	b.n	8009ff0 <WIDGET_HandleActive+0x126>
 8009f4e:	2400      	movs	r4, #0
 8009f50:	e041      	b.n	8009fd6 <WIDGET_HandleActive+0x10c>
 8009f52:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8009f54:	06d9      	lsls	r1, r3, #27
 8009f56:	d54d      	bpl.n	8009ff4 <WIDGET_HandleActive+0x12a>
 8009f58:	68eb      	ldr	r3, [r5, #12]
 8009f5a:	2b00      	cmp	r3, #0
 8009f5c:	d04a      	beq.n	8009ff4 <WIDGET_HandleActive+0x12a>
 8009f5e:	7a1b      	ldrb	r3, [r3, #8]
 8009f60:	2b00      	cmp	r3, #0
 8009f62:	d047      	beq.n	8009ff4 <WIDGET_HandleActive+0x12a>
 8009f64:	a802      	add	r0, sp, #8
 8009f66:	f7ff fc7b 	bl	8009860 <GUI_ALLOC_UnlockH>
 8009f6a:	4630      	mov	r0, r6
 8009f6c:	f7fa fbd4 	bl	8004718 <WM_SetFocus>
 8009f70:	e040      	b.n	8009ff4 <WIDGET_HandleActive+0x12a>
 8009f72:	68eb      	ldr	r3, [r5, #12]
 8009f74:	68db      	ldr	r3, [r3, #12]
 8009f76:	2b00      	cmp	r3, #0
 8009f78:	d03c      	beq.n	8009ff4 <WIDGET_HandleActive+0x12a>
 8009f7a:	7a1b      	ldrb	r3, [r3, #8]
 8009f7c:	2b00      	cmp	r3, #0
 8009f7e:	d039      	beq.n	8009ff4 <WIDGET_HandleActive+0x12a>
 8009f80:	a802      	add	r0, sp, #8
 8009f82:	f7ff fc6d 	bl	8009860 <GUI_ALLOC_UnlockH>
 8009f86:	4630      	mov	r0, r6
 8009f88:	f7fa fce0 	bl	800494c <WM_BringToTop>
 8009f8c:	e030      	b.n	8009ff0 <WIDGET_HandleActive+0x126>
 8009f8e:	68eb      	ldr	r3, [r5, #12]
 8009f90:	8603      	strh	r3, [r0, #48]	; 0x30
 8009f92:	e02d      	b.n	8009ff0 <WIDGET_HandleActive+0x126>
 8009f94:	68eb      	ldr	r3, [r5, #12]
 8009f96:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 8009f98:	2b01      	cmp	r3, #1
 8009f9a:	d108      	bne.n	8009fae <WIDGET_HandleActive+0xe4>
 8009f9c:	06ca      	lsls	r2, r1, #27
 8009f9e:	d50d      	bpl.n	8009fbc <WIDGET_HandleActive+0xf2>
 8009fa0:	4630      	mov	r0, r6
 8009fa2:	f041 0101 	orr.w	r1, r1, #1
 8009fa6:	f7ff ff53 	bl	8009e50 <WIDGET_SetState>
 8009faa:	2708      	movs	r7, #8
 8009fac:	e008      	b.n	8009fc0 <WIDGET_HandleActive+0xf6>
 8009fae:	f021 0101 	bic.w	r1, r1, #1
 8009fb2:	4630      	mov	r0, r6
 8009fb4:	f7ff ff4c 	bl	8009e50 <WIDGET_SetState>
 8009fb8:	2709      	movs	r7, #9
 8009fba:	e001      	b.n	8009fc0 <WIDGET_HandleActive+0xf6>
 8009fbc:	f04f 37ff 	mov.w	r7, #4294967295
 8009fc0:	a802      	add	r0, sp, #8
 8009fc2:	f7ff fc4d 	bl	8009860 <GUI_ALLOC_UnlockH>
 8009fc6:	1c7b      	adds	r3, r7, #1
 8009fc8:	f04f 0400 	mov.w	r4, #0
 8009fcc:	d005      	beq.n	8009fda <WIDGET_HandleActive+0x110>
 8009fce:	4630      	mov	r0, r6
 8009fd0:	4639      	mov	r1, r7
 8009fd2:	f7fa fb96 	bl	8004702 <WM_NotifyParent>
 8009fd6:	60ec      	str	r4, [r5, #12]
 8009fd8:	e00d      	b.n	8009ff6 <WIDGET_HandleActive+0x12c>
 8009fda:	2301      	movs	r3, #1
 8009fdc:	60eb      	str	r3, [r5, #12]
 8009fde:	e00a      	b.n	8009ff6 <WIDGET_HandleActive+0x12c>
 8009fe0:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8009fe2:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8009fe6:	60eb      	str	r3, [r5, #12]
 8009fe8:	e002      	b.n	8009ff0 <WIDGET_HandleActive+0x126>
 8009fea:	68e9      	ldr	r1, [r5, #12]
 8009fec:	f7ff ff1b 	bl	8009e26 <WIDGET__GetInsideRect>
 8009ff0:	2400      	movs	r4, #0
 8009ff2:	e000      	b.n	8009ff6 <WIDGET_HandleActive+0x12c>
 8009ff4:	2401      	movs	r4, #1
 8009ff6:	9b02      	ldr	r3, [sp, #8]
 8009ff8:	b123      	cbz	r3, 800a004 <WIDGET_HandleActive+0x13a>
 8009ffa:	a802      	add	r0, sp, #8
 8009ffc:	f7ff fc30 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a000:	e000      	b.n	800a004 <WIDGET_HandleActive+0x13a>
 800a002:	2401      	movs	r4, #1
 800a004:	4620      	mov	r0, r4
 800a006:	b005      	add	sp, #20
 800a008:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a00a <WIDGET__SetScrollState>:
 800a00a:	b570      	push	{r4, r5, r6, lr}
 800a00c:	460d      	mov	r5, r1
 800a00e:	21fe      	movs	r1, #254	; 0xfe
 800a010:	4616      	mov	r6, r2
 800a012:	4604      	mov	r4, r0
 800a014:	f7fa f97a 	bl	800430c <WM_GetDialogItem>
 800a018:	4629      	mov	r1, r5
 800a01a:	f7fa fbcb 	bl	80047b4 <WM_SetScrollState>
 800a01e:	4620      	mov	r0, r4
 800a020:	21ff      	movs	r1, #255	; 0xff
 800a022:	f7fa f973 	bl	800430c <WM_GetDialogItem>
 800a026:	4631      	mov	r1, r6
 800a028:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a02c:	f7fa bbc2 	b.w	80047b4 <WM_SetScrollState>

0800a030 <WIDGET__DrawTriangle>:
 800a030:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a032:	461c      	mov	r4, r3
 800a034:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800a036:	9f06      	ldr	r7, [sp, #24]
 800a038:	071b      	lsls	r3, r3, #28
 800a03a:	460d      	mov	r5, r1
 800a03c:	4616      	mov	r6, r2
 800a03e:	d50a      	bpl.n	800a056 <WIDGET__DrawTriangle+0x26>
 800a040:	2c00      	cmp	r4, #0
 800a042:	db07      	blt.n	800a054 <WIDGET__DrawTriangle+0x24>
 800a044:	4628      	mov	r0, r5
 800a046:	1b31      	subs	r1, r6, r4
 800a048:	19a2      	adds	r2, r4, r6
 800a04a:	f7fe f9b9 	bl	80083c0 <GUI_DrawHLine>
 800a04e:	3c01      	subs	r4, #1
 800a050:	443d      	add	r5, r7
 800a052:	e7f5      	b.n	800a040 <WIDGET__DrawTriangle+0x10>
 800a054:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a056:	2c00      	cmp	r4, #0
 800a058:	db07      	blt.n	800a06a <WIDGET__DrawTriangle+0x3a>
 800a05a:	4628      	mov	r0, r5
 800a05c:	1b31      	subs	r1, r6, r4
 800a05e:	19a2      	adds	r2, r4, r6
 800a060:	f7fe fa08 	bl	8008474 <GUI_DrawVLine>
 800a064:	3c01      	subs	r4, #1
 800a066:	443d      	add	r5, r7
 800a068:	e7f5      	b.n	800a056 <WIDGET__DrawTriangle+0x26>
 800a06a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a06c <WIDGET__EFFECT_DrawDownRect>:
 800a06c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a06e:	4605      	mov	r5, r0
 800a070:	460c      	mov	r4, r1
 800a072:	b919      	cbnz	r1, 800a07c <WIDGET__EFFECT_DrawDownRect+0x10>
 800a074:	4668      	mov	r0, sp
 800a076:	f7fa f8c7 	bl	8004208 <WM_GetClientRect>
 800a07a:	466c      	mov	r4, sp
 800a07c:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 800a07e:	071b      	lsls	r3, r3, #28
 800a080:	d505      	bpl.n	800a08e <WIDGET__EFFECT_DrawDownRect+0x22>
 800a082:	4622      	mov	r2, r4
 800a084:	4628      	mov	r0, r5
 800a086:	4669      	mov	r1, sp
 800a088:	f7ff fea1 	bl	8009dce <WIDGET__RotateRect90>
 800a08c:	466c      	mov	r4, sp
 800a08e:	4628      	mov	r0, r5
 800a090:	4621      	mov	r1, r4
 800a092:	f7ff fe6c 	bl	8009d6e <_EffectRequiresRedraw>
 800a096:	b118      	cbz	r0, 800a0a0 <WIDGET__EFFECT_DrawDownRect+0x34>
 800a098:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800a09a:	4620      	mov	r0, r4
 800a09c:	691b      	ldr	r3, [r3, #16]
 800a09e:	4798      	blx	r3
 800a0a0:	b003      	add	sp, #12
 800a0a2:	bd30      	pop	{r4, r5, pc}

0800a0a4 <WIDGET_SetEffect>:
 800a0a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a0a6:	2300      	movs	r3, #0
 800a0a8:	9302      	str	r3, [sp, #8]
 800a0aa:	9103      	str	r1, [sp, #12]
 800a0ac:	f44f 7340 	mov.w	r3, #768	; 0x300
 800a0b0:	4669      	mov	r1, sp
 800a0b2:	9300      	str	r3, [sp, #0]
 800a0b4:	f7fa ffbf 	bl	8005036 <WM_SendMessage>
 800a0b8:	b005      	add	sp, #20
 800a0ba:	f85d fb04 	ldr.w	pc, [sp], #4

0800a0be <_DeleteTimer>:
 800a0be:	b507      	push	{r0, r1, r2, lr}
 800a0c0:	f7ff fbc0 	bl	8009844 <GUI_ALLOC_LockH>
 800a0c4:	9001      	str	r0, [sp, #4]
 800a0c6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800a0c8:	f000 ff93 	bl	800aff2 <WM_DeleteTimer>
 800a0cc:	a802      	add	r0, sp, #8
 800a0ce:	2200      	movs	r2, #0
 800a0d0:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800a0d4:	665a      	str	r2, [r3, #100]	; 0x64
 800a0d6:	65da      	str	r2, [r3, #92]	; 0x5c
 800a0d8:	f7ff fbc2 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a0dc:	b003      	add	sp, #12
 800a0de:	f85d fb04 	ldr.w	pc, [sp], #4

0800a0e2 <SCROLLBAR__Rect2VRect>:
 800a0e2:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800a0e4:	071b      	lsls	r3, r3, #28
 800a0e6:	b510      	push	{r4, lr}
 800a0e8:	d512      	bpl.n	800a110 <SCROLLBAR__Rect2VRect+0x2e>
 800a0ea:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800a0ee:	f9b0 3000 	ldrsh.w	r3, [r0]
 800a0f2:	8808      	ldrh	r0, [r1, #0]
 800a0f4:	884c      	ldrh	r4, [r1, #2]
 800a0f6:	800c      	strh	r4, [r1, #0]
 800a0f8:	1ad3      	subs	r3, r2, r3
 800a0fa:	888a      	ldrh	r2, [r1, #4]
 800a0fc:	88cc      	ldrh	r4, [r1, #6]
 800a0fe:	808c      	strh	r4, [r1, #4]
 800a100:	3301      	adds	r3, #1
 800a102:	b29b      	uxth	r3, r3
 800a104:	43c0      	mvns	r0, r0
 800a106:	43d2      	mvns	r2, r2
 800a108:	4418      	add	r0, r3
 800a10a:	4413      	add	r3, r2
 800a10c:	80c8      	strh	r0, [r1, #6]
 800a10e:	804b      	strh	r3, [r1, #2]
 800a110:	bd10      	pop	{r4, pc}

0800a112 <SCROLLBAR__InvalidatePartner>:
 800a112:	b510      	push	{r4, lr}
 800a114:	4604      	mov	r4, r0
 800a116:	f7fa f9a4 	bl	8004462 <WM_GetScrollPartner>
 800a11a:	f7fb f8e5 	bl	80052e8 <WM_InvalidateWindow>
 800a11e:	4620      	mov	r0, r4
 800a120:	f7fa f94a 	bl	80043b8 <WM_GetParent>
 800a124:	2125      	movs	r1, #37	; 0x25
 800a126:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a12a:	f7fa bada 	b.w	80046e2 <WM_SendMessageNoPara>
	...

0800a130 <SCROLLBAR_CreateUser>:
 800a130:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a132:	b089      	sub	sp, #36	; 0x24
 800a134:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800a136:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800a138:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800a13a:	b9fa      	cbnz	r2, 800a17c <SCROLLBAR_CreateUser+0x4c>
 800a13c:	b9f3      	cbnz	r3, 800a17c <SCROLLBAR_CreateUser+0x4c>
 800a13e:	4630      	mov	r0, r6
 800a140:	a906      	add	r1, sp, #24
 800a142:	f7fa f904 	bl	800434e <WM_GetInsideRectEx>
 800a146:	f014 0f08 	tst.w	r4, #8
 800a14a:	4b2c      	ldr	r3, [pc, #176]	; (800a1fc <SCROLLBAR_CreateUser+0xcc>)
 800a14c:	f9bd 701c 	ldrsh.w	r7, [sp, #28]
 800a150:	f9bd e01e 	ldrsh.w	lr, [sp, #30]
 800a154:	d009      	beq.n	800a16a <SCROLLBAR_CreateUser+0x3a>
 800a156:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800a15a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a15e:	1c78      	adds	r0, r7, #1
 800a160:	ebc1 030e 	rsb	r3, r1, lr
 800a164:	1a80      	subs	r0, r0, r2
 800a166:	3301      	adds	r3, #1
 800a168:	e008      	b.n	800a17c <SCROLLBAR_CreateUser+0x4c>
 800a16a:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800a16e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800a172:	f10e 0101 	add.w	r1, lr, #1
 800a176:	1a3a      	subs	r2, r7, r0
 800a178:	1ac9      	subs	r1, r1, r3
 800a17a:	3201      	adds	r2, #1
 800a17c:	9600      	str	r6, [sp, #0]
 800a17e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800a180:	9601      	str	r6, [sp, #4]
 800a182:	4e1f      	ldr	r6, [pc, #124]	; (800a200 <SCROLLBAR_CreateUser+0xd0>)
 800a184:	9602      	str	r6, [sp, #8]
 800a186:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800a188:	363c      	adds	r6, #60	; 0x3c
 800a18a:	9603      	str	r6, [sp, #12]
 800a18c:	f7fb f8da 	bl	8005344 <WM_CreateWindowAsChild>
 800a190:	4606      	mov	r6, r0
 800a192:	2800      	cmp	r0, #0
 800a194:	d02f      	beq.n	800a1f6 <SCROLLBAR_CreateUser+0xc6>
 800a196:	f7ff fb55 	bl	8009844 <GUI_ALLOC_LockH>
 800a19a:	f004 0208 	and.w	r2, r4, #8
 800a19e:	06e3      	lsls	r3, r4, #27
 800a1a0:	bf48      	it	mi
 800a1a2:	f042 0210 	orrmi.w	r2, r2, #16
 800a1a6:	f1a5 03fe 	sub.w	r3, r5, #254	; 0xfe
 800a1aa:	bf48      	it	mi
 800a1ac:	b292      	uxthmi	r2, r2
 800a1ae:	2b01      	cmp	r3, #1
 800a1b0:	bf88      	it	hi
 800a1b2:	f042 0210 	orrhi.w	r2, r2, #16
 800a1b6:	4629      	mov	r1, r5
 800a1b8:	9005      	str	r0, [sp, #20]
 800a1ba:	f7ff fe41 	bl	8009e40 <WIDGET__Init>
 800a1be:	4b11      	ldr	r3, [pc, #68]	; (800a204 <SCROLLBAR_CreateUser+0xd4>)
 800a1c0:	af08      	add	r7, sp, #32
 800a1c2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800a1c4:	f857 4d0c 	ldr.w	r4, [r7, #-12]!
 800a1c8:	f104 0534 	add.w	r5, r4, #52	; 0x34
 800a1cc:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800a1d0:	2364      	movs	r3, #100	; 0x64
 800a1d2:	64e3      	str	r3, [r4, #76]	; 0x4c
 800a1d4:	4d0c      	ldr	r5, [pc, #48]	; (800a208 <SCROLLBAR_CreateUser+0xd8>)
 800a1d6:	230a      	movs	r3, #10
 800a1d8:	6563      	str	r3, [r4, #84]	; 0x54
 800a1da:	2300      	movs	r3, #0
 800a1dc:	6523      	str	r3, [r4, #80]	; 0x50
 800a1de:	682b      	ldr	r3, [r5, #0]
 800a1e0:	6463      	str	r3, [r4, #68]	; 0x44
 800a1e2:	4638      	mov	r0, r7
 800a1e4:	f7ff fb3c 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a1e8:	682b      	ldr	r3, [r5, #0]
 800a1ea:	4630      	mov	r0, r6
 800a1ec:	685b      	ldr	r3, [r3, #4]
 800a1ee:	4798      	blx	r3
 800a1f0:	4630      	mov	r0, r6
 800a1f2:	f7ff ff8e 	bl	800a112 <SCROLLBAR__InvalidatePartner>
 800a1f6:	4630      	mov	r0, r6
 800a1f8:	b009      	add	sp, #36	; 0x24
 800a1fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a1fc:	200000d8 	.word	0x200000d8
 800a200:	0800a2eb 	.word	0x0800a2eb
 800a204:	200000c4 	.word	0x200000c4
 800a208:	200000d4 	.word	0x200000d4

0800a20c <SCROLLBAR_CreateEx>:
 800a20c:	b510      	push	{r4, lr}
 800a20e:	b086      	sub	sp, #24
 800a210:	9c08      	ldr	r4, [sp, #32]
 800a212:	9400      	str	r4, [sp, #0]
 800a214:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800a216:	9401      	str	r4, [sp, #4]
 800a218:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800a21a:	9402      	str	r4, [sp, #8]
 800a21c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800a21e:	9403      	str	r4, [sp, #12]
 800a220:	2400      	movs	r4, #0
 800a222:	9404      	str	r4, [sp, #16]
 800a224:	f7ff ff84 	bl	800a130 <SCROLLBAR_CreateUser>
 800a228:	b006      	add	sp, #24
 800a22a:	bd10      	pop	{r4, pc}

0800a22c <SCROLLBAR_CreateAttached>:
 800a22c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a22e:	f001 0308 	and.w	r3, r1, #8
 800a232:	2b00      	cmp	r3, #0
 800a234:	f240 348a 	movw	r4, #906	; 0x38a
 800a238:	f240 528a 	movw	r2, #1418	; 0x58a
 800a23c:	bf08      	it	eq
 800a23e:	4622      	moveq	r2, r4
 800a240:	bf0c      	ite	eq
 800a242:	23ff      	moveq	r3, #255	; 0xff
 800a244:	23fe      	movne	r3, #254	; 0xfe
 800a246:	e88d 0005 	stmia.w	sp, {r0, r2}
 800a24a:	2000      	movs	r0, #0
 800a24c:	9102      	str	r1, [sp, #8]
 800a24e:	9303      	str	r3, [sp, #12]
 800a250:	4602      	mov	r2, r0
 800a252:	4603      	mov	r3, r0
 800a254:	4601      	mov	r1, r0
 800a256:	f7ff ffd9 	bl	800a20c <SCROLLBAR_CreateEx>
 800a25a:	2106      	movs	r1, #6
 800a25c:	4604      	mov	r4, r0
 800a25e:	f7fa fa50 	bl	8004702 <WM_NotifyParent>
 800a262:	4620      	mov	r0, r4
 800a264:	b004      	add	sp, #16
 800a266:	bd10      	pop	{r4, pc}

0800a268 <SCROLLBAR_SetValue>:
 800a268:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a26a:	460c      	mov	r4, r1
 800a26c:	4605      	mov	r5, r0
 800a26e:	b300      	cbz	r0, 800a2b2 <SCROLLBAR_SetValue+0x4a>
 800a270:	f7ff fae8 	bl	8009844 <GUI_ALLOC_LockH>
 800a274:	2c00      	cmp	r4, #0
 800a276:	9001      	str	r0, [sp, #4]
 800a278:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 800a27a:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800a27c:	db05      	blt.n	800a28a <SCROLLBAR_SetValue+0x22>
 800a27e:	1a8a      	subs	r2, r1, r2
 800a280:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800a284:	4294      	cmp	r4, r2
 800a286:	dc02      	bgt.n	800a28e <SCROLLBAR_SetValue+0x26>
 800a288:	e000      	b.n	800a28c <SCROLLBAR_SetValue+0x24>
 800a28a:	2400      	movs	r4, #0
 800a28c:	4622      	mov	r2, r4
 800a28e:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a290:	4291      	cmp	r1, r2
 800a292:	d00b      	beq.n	800a2ac <SCROLLBAR_SetValue+0x44>
 800a294:	6502      	str	r2, [r0, #80]	; 0x50
 800a296:	4628      	mov	r0, r5
 800a298:	f7fb f826 	bl	80052e8 <WM_InvalidateWindow>
 800a29c:	a801      	add	r0, sp, #4
 800a29e:	f7ff fadf 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a2a2:	4628      	mov	r0, r5
 800a2a4:	2105      	movs	r1, #5
 800a2a6:	f7fa fa2c 	bl	8004702 <WM_NotifyParent>
 800a2aa:	e002      	b.n	800a2b2 <SCROLLBAR_SetValue+0x4a>
 800a2ac:	a801      	add	r0, sp, #4
 800a2ae:	f7ff fad7 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a2b2:	b003      	add	sp, #12
 800a2b4:	bd30      	pop	{r4, r5, pc}

0800a2b6 <SCROLLBAR_AddValue>:
 800a2b6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a2b8:	460d      	mov	r5, r1
 800a2ba:	4606      	mov	r6, r0
 800a2bc:	b160      	cbz	r0, 800a2d8 <SCROLLBAR_AddValue+0x22>
 800a2be:	f7ff fac1 	bl	8009844 <GUI_ALLOC_LockH>
 800a2c2:	4602      	mov	r2, r0
 800a2c4:	a802      	add	r0, sp, #8
 800a2c6:	6d14      	ldr	r4, [r2, #80]	; 0x50
 800a2c8:	f840 2d04 	str.w	r2, [r0, #-4]!
 800a2cc:	f7ff fac8 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a2d0:	4630      	mov	r0, r6
 800a2d2:	1961      	adds	r1, r4, r5
 800a2d4:	f7ff ffc8 	bl	800a268 <SCROLLBAR_SetValue>
 800a2d8:	b002      	add	sp, #8
 800a2da:	bd70      	pop	{r4, r5, r6, pc}

0800a2dc <SCROLLBAR_Dec>:
 800a2dc:	f04f 31ff 	mov.w	r1, #4294967295
 800a2e0:	f7ff bfe9 	b.w	800a2b6 <SCROLLBAR_AddValue>

0800a2e4 <SCROLLBAR_Inc>:
 800a2e4:	2101      	movs	r1, #1
 800a2e6:	f7ff bfe6 	b.w	800a2b6 <SCROLLBAR_AddValue>

0800a2ea <SCROLLBAR_Callback>:
 800a2ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a2ee:	6844      	ldr	r4, [r0, #4]
 800a2f0:	4680      	mov	r8, r0
 800a2f2:	b08f      	sub	sp, #60	; 0x3c
 800a2f4:	4620      	mov	r0, r4
 800a2f6:	4641      	mov	r1, r8
 800a2f8:	f7ff fde7 	bl	8009eca <WIDGET_HandleActive>
 800a2fc:	2800      	cmp	r0, #0
 800a2fe:	f000 81c0 	beq.w	800a682 <SCROLLBAR_Callback+0x398>
 800a302:	f8d8 3000 	ldr.w	r3, [r8]
 800a306:	2b23      	cmp	r3, #35	; 0x23
 800a308:	f000 8182 	beq.w	800a610 <SCROLLBAR_Callback+0x326>
 800a30c:	dc0b      	bgt.n	800a326 <SCROLLBAR_Callback+0x3c>
 800a30e:	2b0e      	cmp	r3, #14
 800a310:	f000 812a 	beq.w	800a568 <SCROLLBAR_Callback+0x27e>
 800a314:	2b0f      	cmp	r3, #15
 800a316:	d012      	beq.n	800a33e <SCROLLBAR_Callback+0x54>
 800a318:	2b0b      	cmp	r3, #11
 800a31a:	f040 81af 	bne.w	800a67c <SCROLLBAR_Callback+0x392>
 800a31e:	4620      	mov	r0, r4
 800a320:	f7ff fef7 	bl	800a112 <SCROLLBAR__InvalidatePartner>
 800a324:	e1aa      	b.n	800a67c <SCROLLBAR_Callback+0x392>
 800a326:	f240 1213 	movw	r2, #275	; 0x113
 800a32a:	4293      	cmp	r3, r2
 800a32c:	f000 817f 	beq.w	800a62e <SCROLLBAR_Callback+0x344>
 800a330:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800a334:	d012      	beq.n	800a35c <SCROLLBAR_Callback+0x72>
 800a336:	2b24      	cmp	r3, #36	; 0x24
 800a338:	f040 81a0 	bne.w	800a67c <SCROLLBAR_Callback+0x392>
 800a33c:	e143      	b.n	800a5c6 <SCROLLBAR_Callback+0x2dc>
 800a33e:	4620      	mov	r0, r4
 800a340:	f7ff fa80 	bl	8009844 <GUI_ALLOC_LockH>
 800a344:	9005      	str	r0, [sp, #20]
 800a346:	2800      	cmp	r0, #0
 800a348:	f000 819b 	beq.w	800a682 <SCROLLBAR_Callback+0x398>
 800a34c:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800a34e:	a805      	add	r0, sp, #20
 800a350:	681d      	ldr	r5, [r3, #0]
 800a352:	f7ff fa85 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a356:	4620      	mov	r0, r4
 800a358:	47a8      	blx	r5
 800a35a:	e192      	b.n	800a682 <SCROLLBAR_Callback+0x398>
 800a35c:	f8d8 700c 	ldr.w	r7, [r8, #12]
 800a360:	2f00      	cmp	r7, #0
 800a362:	f000 818b 	beq.w	800a67c <SCROLLBAR_Callback+0x392>
 800a366:	7a3b      	ldrb	r3, [r7, #8]
 800a368:	4620      	mov	r0, r4
 800a36a:	2b00      	cmp	r3, #0
 800a36c:	f000 80d6 	beq.w	800a51c <SCROLLBAR_Callback+0x232>
 800a370:	f7ff fa68 	bl	8009844 <GUI_ALLOC_LockH>
 800a374:	a905      	add	r1, sp, #20
 800a376:	6c83      	ldr	r3, [r0, #72]	; 0x48
 800a378:	9003      	str	r0, [sp, #12]
 800a37a:	6d06      	ldr	r6, [r0, #80]	; 0x50
 800a37c:	4620      	mov	r0, r4
 800a37e:	4798      	blx	r3
 800a380:	9b03      	ldr	r3, [sp, #12]
 800a382:	f8b3 a032 	ldrh.w	sl, [r3, #50]	; 0x32
 800a386:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 800a388:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800a38a:	f01a 0f08 	tst.w	sl, #8
 800a38e:	ebc5 0902 	rsb	r9, r5, r2
 800a392:	d003      	beq.n	800a39c <SCROLLBAR_Callback+0xb2>
 800a394:	e897 0006 	ldmia.w	r7, {r1, r2}
 800a398:	603a      	str	r2, [r7, #0]
 800a39a:	6079      	str	r1, [r7, #4]
 800a39c:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800a39e:	683f      	ldr	r7, [r7, #0]
 800a3a0:	2a03      	cmp	r2, #3
 800a3a2:	d114      	bne.n	800a3ce <SCROLLBAR_Callback+0xe4>
 800a3a4:	4620      	mov	r0, r4
 800a3a6:	f7ff fe8a 	bl	800a0be <_DeleteTimer>
 800a3aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a3ac:	990c      	ldr	r1, [sp, #48]	; 0x30
 800a3ae:	2002      	movs	r0, #2
 800a3b0:	fb93 f3f0 	sdiv	r3, r3, r0
 800a3b4:	1aff      	subs	r7, r7, r3
 800a3b6:	9b06      	ldr	r3, [sp, #24]
 800a3b8:	1afb      	subs	r3, r7, r3
 800a3ba:	1e58      	subs	r0, r3, #1
 800a3bc:	fb00 f009 	mul.w	r0, r0, r9
 800a3c0:	f7fd f842 	bl	8007448 <GUI__DivideRound32>
 800a3c4:	9b03      	ldr	r3, [sp, #12]
 800a3c6:	4606      	mov	r6, r0
 800a3c8:	6618      	str	r0, [r3, #96]	; 0x60
 800a3ca:	a803      	add	r0, sp, #12
 800a3cc:	e07e      	b.n	800a4cc <SCROLLBAR_Callback+0x1e2>
 800a3ce:	9806      	ldr	r0, [sp, #24]
 800a3d0:	4287      	cmp	r7, r0
 800a3d2:	dc0b      	bgt.n	800a3ec <SCROLLBAR_Callback+0x102>
 800a3d4:	2a02      	cmp	r2, #2
 800a3d6:	d039      	beq.n	800a44c <SCROLLBAR_Callback+0x162>
 800a3d8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a3da:	b113      	cbz	r3, 800a3e2 <SCROLLBAR_Callback+0xf8>
 800a3dc:	4620      	mov	r0, r4
 800a3de:	f7ff fe6e 	bl	800a0be <_DeleteTimer>
 800a3e2:	9b03      	ldr	r3, [sp, #12]
 800a3e4:	2202      	movs	r2, #2
 800a3e6:	3e01      	subs	r6, #1
 800a3e8:	659a      	str	r2, [r3, #88]	; 0x58
 800a3ea:	e02f      	b.n	800a44c <SCROLLBAR_Callback+0x162>
 800a3ec:	9907      	ldr	r1, [sp, #28]
 800a3ee:	428f      	cmp	r7, r1
 800a3f0:	da02      	bge.n	800a3f8 <SCROLLBAR_Callback+0x10e>
 800a3f2:	1b76      	subs	r6, r6, r5
 800a3f4:	426d      	negs	r5, r5
 800a3f6:	e02f      	b.n	800a458 <SCROLLBAR_Callback+0x16e>
 800a3f8:	9908      	ldr	r1, [sp, #32]
 800a3fa:	428f      	cmp	r7, r1
 800a3fc:	dc12      	bgt.n	800a424 <SCROLLBAR_Callback+0x13a>
 800a3fe:	990c      	ldr	r1, [sp, #48]	; 0x30
 800a400:	2900      	cmp	r1, #0
 800a402:	dd0b      	ble.n	800a41c <SCROLLBAR_Callback+0x132>
 800a404:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a406:	2202      	movs	r2, #2
 800a408:	fb93 f3f2 	sdiv	r3, r3, r2
 800a40c:	1aff      	subs	r7, r7, r3
 800a40e:	1a3f      	subs	r7, r7, r0
 800a410:	3f01      	subs	r7, #1
 800a412:	fb07 f009 	mul.w	r0, r7, r9
 800a416:	f7fd f817 	bl	8007448 <GUI__DivideRound32>
 800a41a:	4606      	mov	r6, r0
 800a41c:	9b03      	ldr	r3, [sp, #12]
 800a41e:	2203      	movs	r2, #3
 800a420:	659a      	str	r2, [r3, #88]	; 0x58
 800a422:	e016      	b.n	800a452 <SCROLLBAR_Callback+0x168>
 800a424:	9909      	ldr	r1, [sp, #36]	; 0x24
 800a426:	428f      	cmp	r7, r1
 800a428:	da01      	bge.n	800a42e <SCROLLBAR_Callback+0x144>
 800a42a:	442e      	add	r6, r5
 800a42c:	e014      	b.n	800a458 <SCROLLBAR_Callback+0x16e>
 800a42e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800a430:	428f      	cmp	r7, r1
 800a432:	dc0e      	bgt.n	800a452 <SCROLLBAR_Callback+0x168>
 800a434:	2a01      	cmp	r2, #1
 800a436:	d00e      	beq.n	800a456 <SCROLLBAR_Callback+0x16c>
 800a438:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a43a:	b113      	cbz	r3, 800a442 <SCROLLBAR_Callback+0x158>
 800a43c:	4620      	mov	r0, r4
 800a43e:	f7ff fe3e 	bl	800a0be <_DeleteTimer>
 800a442:	9b03      	ldr	r3, [sp, #12]
 800a444:	2501      	movs	r5, #1
 800a446:	3601      	adds	r6, #1
 800a448:	659d      	str	r5, [r3, #88]	; 0x58
 800a44a:	e005      	b.n	800a458 <SCROLLBAR_Callback+0x16e>
 800a44c:	f04f 35ff 	mov.w	r5, #4294967295
 800a450:	e002      	b.n	800a458 <SCROLLBAR_Callback+0x16e>
 800a452:	2500      	movs	r5, #0
 800a454:	e000      	b.n	800a458 <SCROLLBAR_Callback+0x16e>
 800a456:	4615      	mov	r5, r2
 800a458:	f8dd b00c 	ldr.w	fp, [sp, #12]
 800a45c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800a45e:	f8db 305c 	ldr.w	r3, [fp, #92]	; 0x5c
 800a462:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 800a466:	9a06      	ldr	r2, [sp, #24]
 800a468:	b171      	cbz	r1, 800a488 <SCROLLBAR_Callback+0x19e>
 800a46a:	2002      	movs	r0, #2
 800a46c:	fb9e f0f0 	sdiv	r0, lr, r0
 800a470:	1a38      	subs	r0, r7, r0
 800a472:	1a80      	subs	r0, r0, r2
 800a474:	3801      	subs	r0, #1
 800a476:	fb00 f009 	mul.w	r0, r0, r9
 800a47a:	9301      	str	r3, [sp, #4]
 800a47c:	f7fc ffe4 	bl	8007448 <GUI__DivideRound32>
 800a480:	9b01      	ldr	r3, [sp, #4]
 800a482:	f8cb 0060 	str.w	r0, [fp, #96]	; 0x60
 800a486:	e009      	b.n	800a49c <SCROLLBAR_Callback+0x1b2>
 800a488:	f8db 2058 	ldr.w	r2, [fp, #88]	; 0x58
 800a48c:	2a01      	cmp	r2, #1
 800a48e:	bf04      	itt	eq
 800a490:	f8db 104c 	ldreq.w	r1, [fp, #76]	; 0x4c
 800a494:	f101 31ff 	addeq.w	r1, r1, #4294967295
 800a498:	f8cb 1060 	str.w	r1, [fp, #96]	; 0x60
 800a49c:	a803      	add	r0, sp, #12
 800a49e:	9301      	str	r3, [sp, #4]
 800a4a0:	f7ff f9de 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a4a4:	9b01      	ldr	r3, [sp, #4]
 800a4a6:	b1a5      	cbz	r5, 800a4d2 <SCROLLBAR_Callback+0x1e8>
 800a4a8:	b9bb      	cbnz	r3, 800a4da <SCROLLBAR_Callback+0x1f0>
 800a4aa:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800a4ae:	f240 41d2 	movw	r1, #1234	; 0x4d2
 800a4b2:	4620      	mov	r0, r4
 800a4b4:	f000 fdd6 	bl	800b064 <WM_CreateTimer>
 800a4b8:	4607      	mov	r7, r0
 800a4ba:	4620      	mov	r0, r4
 800a4bc:	f7ff f9c2 	bl	8009844 <GUI_ALLOC_LockH>
 800a4c0:	4602      	mov	r2, r0
 800a4c2:	a80e      	add	r0, sp, #56	; 0x38
 800a4c4:	f840 2d28 	str.w	r2, [r0, #-40]!
 800a4c8:	6657      	str	r7, [r2, #100]	; 0x64
 800a4ca:	65d5      	str	r5, [r2, #92]	; 0x5c
 800a4cc:	f7ff f9c8 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a4d0:	e003      	b.n	800a4da <SCROLLBAR_Callback+0x1f0>
 800a4d2:	b113      	cbz	r3, 800a4da <SCROLLBAR_Callback+0x1f0>
 800a4d4:	4620      	mov	r0, r4
 800a4d6:	f7ff fdf2 	bl	800a0be <_DeleteTimer>
 800a4da:	4620      	mov	r0, r4
 800a4dc:	2101      	movs	r1, #1
 800a4de:	f7f9 fddd 	bl	800409c <WM_SetCapture>
 800a4e2:	4620      	mov	r0, r4
 800a4e4:	4631      	mov	r1, r6
 800a4e6:	f7ff febf 	bl	800a268 <SCROLLBAR_SetValue>
 800a4ea:	f41a 7f80 	tst.w	sl, #256	; 0x100
 800a4ee:	f040 80c5 	bne.w	800a67c <SCROLLBAR_Callback+0x392>
 800a4f2:	4620      	mov	r0, r4
 800a4f4:	f7ff f9a6 	bl	8009844 <GUI_ALLOC_LockH>
 800a4f8:	ab0e      	add	r3, sp, #56	; 0x38
 800a4fa:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800a4fc:	f843 0d28 	str.w	r0, [r3, #-40]!
 800a500:	4618      	mov	r0, r3
 800a502:	f7ff f9ad 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a506:	f44f 7180 	mov.w	r1, #256	; 0x100
 800a50a:	4620      	mov	r0, r4
 800a50c:	f7ff fcb2 	bl	8009e74 <WIDGET_OrState>
 800a510:	07a9      	lsls	r1, r5, #30
 800a512:	f140 80b3 	bpl.w	800a67c <SCROLLBAR_Callback+0x392>
 800a516:	4620      	mov	r0, r4
 800a518:	2101      	movs	r1, #1
 800a51a:	e074      	b.n	800a606 <SCROLLBAR_Callback+0x31c>
 800a51c:	f7ff f992 	bl	8009844 <GUI_ALLOC_LockH>
 800a520:	8e45      	ldrh	r5, [r0, #50]	; 0x32
 800a522:	9003      	str	r0, [sp, #12]
 800a524:	a803      	add	r0, sp, #12
 800a526:	f7ff f99b 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a52a:	05ea      	lsls	r2, r5, #23
 800a52c:	f140 80a6 	bpl.w	800a67c <SCROLLBAR_Callback+0x392>
 800a530:	4620      	mov	r0, r4
 800a532:	f44f 7180 	mov.w	r1, #256	; 0x100
 800a536:	f7ff fcb3 	bl	8009ea0 <WIDGET_AndState>
 800a53a:	4620      	mov	r0, r4
 800a53c:	f7ff f982 	bl	8009844 <GUI_ALLOC_LockH>
 800a540:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 800a542:	9005      	str	r0, [sp, #20]
 800a544:	b113      	cbz	r3, 800a54c <SCROLLBAR_Callback+0x262>
 800a546:	4620      	mov	r0, r4
 800a548:	f7ff fdb9 	bl	800a0be <_DeleteTimer>
 800a54c:	a80e      	add	r0, sp, #56	; 0x38
 800a54e:	2200      	movs	r2, #0
 800a550:	f850 3d24 	ldr.w	r3, [r0, #-36]!
 800a554:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800a556:	659a      	str	r2, [r3, #88]	; 0x58
 800a558:	f7ff f982 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a55c:	07ab      	lsls	r3, r5, #30
 800a55e:	f140 808d 	bpl.w	800a67c <SCROLLBAR_Callback+0x392>
 800a562:	4620      	mov	r0, r4
 800a564:	2102      	movs	r1, #2
 800a566:	e04e      	b.n	800a606 <SCROLLBAR_Callback+0x31c>
 800a568:	4620      	mov	r0, r4
 800a56a:	f7ff f96b 	bl	8009844 <GUI_ALLOC_LockH>
 800a56e:	ab0e      	add	r3, sp, #56	; 0x38
 800a570:	6d45      	ldr	r5, [r0, #84]	; 0x54
 800a572:	f843 0d24 	str.w	r0, [r3, #-36]!
 800a576:	4618      	mov	r0, r3
 800a578:	f7ff f972 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a57c:	f8d8 200c 	ldr.w	r2, [r8, #12]
 800a580:	6813      	ldr	r3, [r2, #0]
 800a582:	6852      	ldr	r2, [r2, #4]
 800a584:	2a00      	cmp	r2, #0
 800a586:	dd79      	ble.n	800a67c <SCROLLBAR_Callback+0x392>
 800a588:	3b10      	subs	r3, #16
 800a58a:	2b12      	cmp	r3, #18
 800a58c:	d876      	bhi.n	800a67c <SCROLLBAR_Callback+0x392>
 800a58e:	e8df f003 	tbb	[pc, r3]
 800a592:	1616      	.short	0x1616
 800a594:	75751212 	.word	0x75751212
 800a598:	75757575 	.word	0x75757575
 800a59c:	75757575 	.word	0x75757575
 800a5a0:	0a757575 	.word	0x0a757575
 800a5a4:	0d          	.byte	0x0d
 800a5a5:	00          	.byte	0x00
 800a5a6:	4620      	mov	r0, r4
 800a5a8:	4629      	mov	r1, r5
 800a5aa:	e001      	b.n	800a5b0 <SCROLLBAR_Callback+0x2c6>
 800a5ac:	4620      	mov	r0, r4
 800a5ae:	4269      	negs	r1, r5
 800a5b0:	f7ff fe81 	bl	800a2b6 <SCROLLBAR_AddValue>
 800a5b4:	e062      	b.n	800a67c <SCROLLBAR_Callback+0x392>
 800a5b6:	4620      	mov	r0, r4
 800a5b8:	f7ff fe94 	bl	800a2e4 <SCROLLBAR_Inc>
 800a5bc:	e05e      	b.n	800a67c <SCROLLBAR_Callback+0x392>
 800a5be:	4620      	mov	r0, r4
 800a5c0:	f7ff fe8c 	bl	800a2dc <SCROLLBAR_Dec>
 800a5c4:	e05a      	b.n	800a67c <SCROLLBAR_Callback+0x392>
 800a5c6:	4620      	mov	r0, r4
 800a5c8:	f8d8 600c 	ldr.w	r6, [r8, #12]
 800a5cc:	f7ff f93a 	bl	8009844 <GUI_ALLOC_LockH>
 800a5d0:	ad0e      	add	r5, sp, #56	; 0x38
 800a5d2:	4603      	mov	r3, r0
 800a5d4:	f845 0d24 	str.w	r0, [r5, #-36]!
 800a5d8:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800a5da:	6830      	ldr	r0, [r6, #0]
 800a5dc:	68b1      	ldr	r1, [r6, #8]
 800a5de:	4290      	cmp	r0, r2
 800a5e0:	6872      	ldr	r2, [r6, #4]
 800a5e2:	d105      	bne.n	800a5f0 <SCROLLBAR_Callback+0x306>
 800a5e4:	6d5e      	ldr	r6, [r3, #84]	; 0x54
 800a5e6:	428e      	cmp	r6, r1
 800a5e8:	d102      	bne.n	800a5f0 <SCROLLBAR_Callback+0x306>
 800a5ea:	6d1e      	ldr	r6, [r3, #80]	; 0x50
 800a5ec:	4296      	cmp	r6, r2
 800a5ee:	d00d      	beq.n	800a60c <SCROLLBAR_Callback+0x322>
 800a5f0:	64d8      	str	r0, [r3, #76]	; 0x4c
 800a5f2:	6559      	str	r1, [r3, #84]	; 0x54
 800a5f4:	651a      	str	r2, [r3, #80]	; 0x50
 800a5f6:	4620      	mov	r0, r4
 800a5f8:	f7fa fe76 	bl	80052e8 <WM_InvalidateWindow>
 800a5fc:	4628      	mov	r0, r5
 800a5fe:	f7ff f92f 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a602:	4620      	mov	r0, r4
 800a604:	2105      	movs	r1, #5
 800a606:	f7fa f87c 	bl	8004702 <WM_NotifyParent>
 800a60a:	e037      	b.n	800a67c <SCROLLBAR_Callback+0x392>
 800a60c:	4628      	mov	r0, r5
 800a60e:	e033      	b.n	800a678 <SCROLLBAR_Callback+0x38e>
 800a610:	4620      	mov	r0, r4
 800a612:	f7ff f917 	bl	8009844 <GUI_ALLOC_LockH>
 800a616:	9005      	str	r0, [sp, #20]
 800a618:	2800      	cmp	r0, #0
 800a61a:	d02f      	beq.n	800a67c <SCROLLBAR_Callback+0x392>
 800a61c:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800a620:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800a622:	601a      	str	r2, [r3, #0]
 800a624:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800a626:	609a      	str	r2, [r3, #8]
 800a628:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a62a:	605a      	str	r2, [r3, #4]
 800a62c:	e023      	b.n	800a676 <SCROLLBAR_Callback+0x38c>
 800a62e:	4620      	mov	r0, r4
 800a630:	f7ff f908 	bl	8009844 <GUI_ALLOC_LockH>
 800a634:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 800a636:	9005      	str	r0, [sp, #20]
 800a638:	b111      	cbz	r1, 800a640 <SCROLLBAR_Callback+0x356>
 800a63a:	4620      	mov	r0, r4
 800a63c:	f7ff fe3b 	bl	800a2b6 <SCROLLBAR_AddValue>
 800a640:	9b05      	ldr	r3, [sp, #20]
 800a642:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800a644:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800a646:	2a00      	cmp	r2, #0
 800a648:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800a64a:	dd05      	ble.n	800a658 <SCROLLBAR_Callback+0x36e>
 800a64c:	4291      	cmp	r1, r2
 800a64e:	bfb4      	ite	lt
 800a650:	2100      	movlt	r1, #0
 800a652:	2101      	movge	r1, #1
 800a654:	dd06      	ble.n	800a664 <SCROLLBAR_Callback+0x37a>
 800a656:	e004      	b.n	800a662 <SCROLLBAR_Callback+0x378>
 800a658:	4291      	cmp	r1, r2
 800a65a:	bfcc      	ite	gt
 800a65c:	2100      	movgt	r1, #0
 800a65e:	2101      	movle	r1, #1
 800a660:	da00      	bge.n	800a664 <SCROLLBAR_Callback+0x37a>
 800a662:	651a      	str	r2, [r3, #80]	; 0x50
 800a664:	b119      	cbz	r1, 800a66e <SCROLLBAR_Callback+0x384>
 800a666:	4620      	mov	r0, r4
 800a668:	f7ff fd29 	bl	800a0be <_DeleteTimer>
 800a66c:	e003      	b.n	800a676 <SCROLLBAR_Callback+0x38c>
 800a66e:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800a670:	2132      	movs	r1, #50	; 0x32
 800a672:	f000 fd27 	bl	800b0c4 <WM_RestartTimer>
 800a676:	a805      	add	r0, sp, #20
 800a678:	f7ff f8f2 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a67c:	4640      	mov	r0, r8
 800a67e:	f7fb fa61 	bl	8005b44 <WM_DefaultProc>
 800a682:	b00f      	add	sp, #60	; 0x3c
 800a684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a688 <SCROLLBAR_GetValue>:
 800a688:	b513      	push	{r0, r1, r4, lr}
 800a68a:	4604      	mov	r4, r0
 800a68c:	b140      	cbz	r0, 800a6a0 <SCROLLBAR_GetValue+0x18>
 800a68e:	f7ff f8d9 	bl	8009844 <GUI_ALLOC_LockH>
 800a692:	ab02      	add	r3, sp, #8
 800a694:	6d04      	ldr	r4, [r0, #80]	; 0x50
 800a696:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a69a:	4618      	mov	r0, r3
 800a69c:	f7ff f8e0 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a6a0:	4620      	mov	r0, r4
 800a6a2:	b002      	add	sp, #8
 800a6a4:	bd10      	pop	{r4, pc}
	...

0800a6a8 <PROGBAR_DrawSkinFlex>:
 800a6a8:	6843      	ldr	r3, [r0, #4]
 800a6aa:	2b0b      	cmp	r3, #11
 800a6ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a6b0:	4604      	mov	r4, r0
 800a6b2:	6a06      	ldr	r6, [r0, #32]
 800a6b4:	d006      	beq.n	800a6c4 <PROGBAR_DrawSkinFlex+0x1c>
 800a6b6:	2b12      	cmp	r3, #18
 800a6b8:	f000 8094 	beq.w	800a7e4 <PROGBAR_DrawSkinFlex+0x13c>
 800a6bc:	2b05      	cmp	r3, #5
 800a6be:	f040 80a0 	bne.w	800a802 <PROGBAR_DrawSkinFlex+0x15a>
 800a6c2:	e01c      	b.n	800a6fe <PROGBAR_DrawSkinFlex+0x56>
 800a6c4:	4b51      	ldr	r3, [pc, #324]	; (800a80c <PROGBAR_DrawSkinFlex+0x164>)
 800a6c6:	6a18      	ldr	r0, [r3, #32]
 800a6c8:	f7fe fc75 	bl	8008fb6 <GUI_SetColor>
 800a6cc:	6960      	ldr	r0, [r4, #20]
 800a6ce:	6921      	ldr	r1, [r4, #16]
 800a6d0:	69a2      	ldr	r2, [r4, #24]
 800a6d2:	f7fd fe75 	bl	80083c0 <GUI_DrawHLine>
 800a6d6:	69e0      	ldr	r0, [r4, #28]
 800a6d8:	6921      	ldr	r1, [r4, #16]
 800a6da:	69a2      	ldr	r2, [r4, #24]
 800a6dc:	f7fd fe70 	bl	80083c0 <GUI_DrawHLine>
 800a6e0:	6961      	ldr	r1, [r4, #20]
 800a6e2:	69e2      	ldr	r2, [r4, #28]
 800a6e4:	6920      	ldr	r0, [r4, #16]
 800a6e6:	3101      	adds	r1, #1
 800a6e8:	3a01      	subs	r2, #1
 800a6ea:	f7fd fec3 	bl	8008474 <GUI_DrawVLine>
 800a6ee:	6961      	ldr	r1, [r4, #20]
 800a6f0:	69e2      	ldr	r2, [r4, #28]
 800a6f2:	69a0      	ldr	r0, [r4, #24]
 800a6f4:	3101      	adds	r1, #1
 800a6f6:	3a01      	subs	r2, #1
 800a6f8:	f7fd febc 	bl	8008474 <GUI_DrawVLine>
 800a6fc:	e081      	b.n	800a802 <PROGBAR_DrawSkinFlex+0x15a>
 800a6fe:	6830      	ldr	r0, [r6, #0]
 800a700:	4d42      	ldr	r5, [pc, #264]	; (800a80c <PROGBAR_DrawSkinFlex+0x164>)
 800a702:	6967      	ldr	r7, [r4, #20]
 800a704:	69e3      	ldr	r3, [r4, #28]
 800a706:	6922      	ldr	r2, [r4, #16]
 800a708:	f8d4 9018 	ldr.w	r9, [r4, #24]
 800a70c:	6871      	ldr	r1, [r6, #4]
 800a70e:	2800      	cmp	r0, #0
 800a710:	d034      	beq.n	800a77c <PROGBAR_DrawSkinFlex+0xd4>
 800a712:	ebc2 0909 	rsb	r9, r2, r9
 800a716:	f109 0901 	add.w	r9, r9, #1
 800a71a:	ea4f 0969 	mov.w	r9, r9, asr #1
 800a71e:	b929      	cbnz	r1, 800a72c <PROGBAR_DrawSkinFlex+0x84>
 800a720:	468e      	mov	lr, r1
 800a722:	f8d5 c010 	ldr.w	ip, [r5, #16]
 800a726:	6968      	ldr	r0, [r5, #20]
 800a728:	2101      	movs	r1, #1
 800a72a:	e005      	b.n	800a738 <PROGBAR_DrawSkinFlex+0x90>
 800a72c:	f8d5 c000 	ldr.w	ip, [r5]
 800a730:	6868      	ldr	r0, [r5, #4]
 800a732:	f04f 0e01 	mov.w	lr, #1
 800a736:	2100      	movs	r1, #0
 800a738:	9001      	str	r0, [sp, #4]
 800a73a:	ebce 0303 	rsb	r3, lr, r3
 800a73e:	1c50      	adds	r0, r2, #1
 800a740:	f8cd c000 	str.w	ip, [sp]
 800a744:	4439      	add	r1, r7
 800a746:	444a      	add	r2, r9
 800a748:	f002 fa1e 	bl	800cb88 <GUI_DrawGradientH>
 800a74c:	6873      	ldr	r3, [r6, #4]
 800a74e:	b91b      	cbnz	r3, 800a758 <PROGBAR_DrawSkinFlex+0xb0>
 800a750:	69ae      	ldr	r6, [r5, #24]
 800a752:	69ed      	ldr	r5, [r5, #28]
 800a754:	2101      	movs	r1, #1
 800a756:	e003      	b.n	800a760 <PROGBAR_DrawSkinFlex+0xb8>
 800a758:	68ae      	ldr	r6, [r5, #8]
 800a75a:	68ed      	ldr	r5, [r5, #12]
 800a75c:	2301      	movs	r3, #1
 800a75e:	2100      	movs	r1, #0
 800a760:	6920      	ldr	r0, [r4, #16]
 800a762:	6967      	ldr	r7, [r4, #20]
 800a764:	69a2      	ldr	r2, [r4, #24]
 800a766:	69e4      	ldr	r4, [r4, #28]
 800a768:	9600      	str	r6, [sp, #0]
 800a76a:	4448      	add	r0, r9
 800a76c:	9501      	str	r5, [sp, #4]
 800a76e:	3001      	adds	r0, #1
 800a770:	4439      	add	r1, r7
 800a772:	3a01      	subs	r2, #1
 800a774:	1ae3      	subs	r3, r4, r3
 800a776:	f002 fa07 	bl	800cb88 <GUI_DrawGradientH>
 800a77a:	e042      	b.n	800a802 <PROGBAR_DrawSkinFlex+0x15a>
 800a77c:	ebc7 0803 	rsb	r8, r7, r3
 800a780:	f108 0801 	add.w	r8, r8, #1
 800a784:	ea4f 0868 	mov.w	r8, r8, asr #1
 800a788:	b921      	cbnz	r1, 800a794 <PROGBAR_DrawSkinFlex+0xec>
 800a78a:	e895 5000 	ldmia.w	r5, {ip, lr}
 800a78e:	460b      	mov	r3, r1
 800a790:	2001      	movs	r0, #1
 800a792:	e004      	b.n	800a79e <PROGBAR_DrawSkinFlex+0xf6>
 800a794:	f8d5 c010 	ldr.w	ip, [r5, #16]
 800a798:	f8d5 e014 	ldr.w	lr, [r5, #20]
 800a79c:	2301      	movs	r3, #1
 800a79e:	4410      	add	r0, r2
 800a7a0:	e88d 5000 	stmia.w	sp, {ip, lr}
 800a7a4:	ebc3 0209 	rsb	r2, r3, r9
 800a7a8:	1c79      	adds	r1, r7, #1
 800a7aa:	eb07 0308 	add.w	r3, r7, r8
 800a7ae:	f002 f9b9 	bl	800cb24 <GUI_DrawGradientV>
 800a7b2:	6872      	ldr	r2, [r6, #4]
 800a7b4:	b91a      	cbnz	r2, 800a7be <PROGBAR_DrawSkinFlex+0x116>
 800a7b6:	68ae      	ldr	r6, [r5, #8]
 800a7b8:	68ed      	ldr	r5, [r5, #12]
 800a7ba:	2001      	movs	r0, #1
 800a7bc:	e003      	b.n	800a7c6 <PROGBAR_DrawSkinFlex+0x11e>
 800a7be:	69ae      	ldr	r6, [r5, #24]
 800a7c0:	69ed      	ldr	r5, [r5, #28]
 800a7c2:	2201      	movs	r2, #1
 800a7c4:	2000      	movs	r0, #0
 800a7c6:	6961      	ldr	r1, [r4, #20]
 800a7c8:	f8d4 e010 	ldr.w	lr, [r4, #16]
 800a7cc:	69a7      	ldr	r7, [r4, #24]
 800a7ce:	69e3      	ldr	r3, [r4, #28]
 800a7d0:	9600      	str	r6, [sp, #0]
 800a7d2:	4441      	add	r1, r8
 800a7d4:	9501      	str	r5, [sp, #4]
 800a7d6:	4470      	add	r0, lr
 800a7d8:	3101      	adds	r1, #1
 800a7da:	1aba      	subs	r2, r7, r2
 800a7dc:	3b01      	subs	r3, #1
 800a7de:	f002 f9a1 	bl	800cb24 <GUI_DrawGradientV>
 800a7e2:	e00e      	b.n	800a802 <PROGBAR_DrawSkinFlex+0x15a>
 800a7e4:	6833      	ldr	r3, [r6, #0]
 800a7e6:	b963      	cbnz	r3, 800a802 <PROGBAR_DrawSkinFlex+0x15a>
 800a7e8:	4b08      	ldr	r3, [pc, #32]	; (800a80c <PROGBAR_DrawSkinFlex+0x164>)
 800a7ea:	68b5      	ldr	r5, [r6, #8]
 800a7ec:	6a58      	ldr	r0, [r3, #36]	; 0x24
 800a7ee:	f7fe fbe2 	bl	8008fb6 <GUI_SetColor>
 800a7f2:	2002      	movs	r0, #2
 800a7f4:	f7fe fc00 	bl	8008ff8 <GUI_SetTextMode>
 800a7f8:	4628      	mov	r0, r5
 800a7fa:	6921      	ldr	r1, [r4, #16]
 800a7fc:	6962      	ldr	r2, [r4, #20]
 800a7fe:	f7fe f815 	bl	800882c <GUI_DispStringAt>
 800a802:	2000      	movs	r0, #0
 800a804:	b003      	add	sp, #12
 800a806:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a80a:	bf00      	nop
 800a80c:	200000dc 	.word	0x200000dc

0800a810 <_Create>:
 800a810:	b530      	push	{r4, r5, lr}
 800a812:	b08b      	sub	sp, #44	; 0x2c
 800a814:	4605      	mov	r5, r0
 800a816:	f7ff f815 	bl	8009844 <GUI_ALLOC_LockH>
 800a81a:	ab0a      	add	r3, sp, #40	; 0x28
 800a81c:	6e42      	ldr	r2, [r0, #100]	; 0x64
 800a81e:	f843 0d28 	str.w	r0, [r3, #-40]!
 800a822:	4668      	mov	r0, sp
 800a824:	6894      	ldr	r4, [r2, #8]
 800a826:	f7ff f81b 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a82a:	a80a      	add	r0, sp, #40	; 0x28
 800a82c:	2300      	movs	r3, #0
 800a82e:	9302      	str	r3, [sp, #8]
 800a830:	f840 5d24 	str.w	r5, [r0, #-36]!
 800a834:	6823      	ldr	r3, [r4, #0]
 800a836:	4798      	blx	r3
 800a838:	b00b      	add	sp, #44	; 0x2c
 800a83a:	bd30      	pop	{r4, r5, pc}

0800a83c <_Paint>:
 800a83c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a840:	b093      	sub	sp, #76	; 0x4c
 800a842:	4604      	mov	r4, r0
 800a844:	f7fe fffe 	bl	8009844 <GUI_ALLOC_LockH>
 800a848:	f890 2068 	ldrb.w	r2, [r0, #104]	; 0x68
 800a84c:	6b41      	ldr	r1, [r0, #52]	; 0x34
 800a84e:	6e06      	ldr	r6, [r0, #96]	; 0x60
 800a850:	9000      	str	r0, [sp, #0]
 800a852:	f002 0201 	and.w	r2, r2, #1
 800a856:	9206      	str	r2, [sp, #24]
 800a858:	f8d0 904c 	ldr.w	r9, [r0, #76]	; 0x4c
 800a85c:	f7f7 ff4b 	bl	80026f6 <PROGBAR__Value2Pos>
 800a860:	af02      	add	r7, sp, #8
 800a862:	4680      	mov	r8, r0
 800a864:	4668      	mov	r0, sp
 800a866:	f7fe fffb 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a86a:	ab06      	add	r3, sp, #24
 800a86c:	4639      	mov	r1, r7
 800a86e:	4620      	mov	r0, r4
 800a870:	9311      	str	r3, [sp, #68]	; 0x44
 800a872:	f7f9 fcc6 	bl	8004202 <WM_GetClientRectEx>
 800a876:	230b      	movs	r3, #11
 800a878:	930a      	str	r3, [sp, #40]	; 0x28
 800a87a:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800a87e:	930d      	str	r3, [sp, #52]	; 0x34
 800a880:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800a884:	930e      	str	r3, [sp, #56]	; 0x38
 800a886:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a88a:	930f      	str	r3, [sp, #60]	; 0x3c
 800a88c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a890:	9310      	str	r3, [sp, #64]	; 0x40
 800a892:	9409      	str	r4, [sp, #36]	; 0x24
 800a894:	a809      	add	r0, sp, #36	; 0x24
 800a896:	47b0      	blx	r6
 800a898:	e897 0003 	ldmia.w	r7, {r0, r1}
 800a89c:	ad04      	add	r5, sp, #16
 800a89e:	e885 0003 	stmia.w	r5, {r0, r1}
 800a8a2:	2201      	movs	r2, #1
 800a8a4:	4629      	mov	r1, r5
 800a8a6:	4628      	mov	r0, r5
 800a8a8:	f7fc fe3f 	bl	800752a <GUI__ReduceRect>
 800a8ac:	4628      	mov	r0, r5
 800a8ae:	f7f9 ffb1 	bl	8004814 <WM_SetUserClipRect>
 800a8b2:	2305      	movs	r3, #5
 800a8b4:	9906      	ldr	r1, [sp, #24]
 800a8b6:	930a      	str	r3, [sp, #40]	; 0x28
 800a8b8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800a8bc:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800a8c0:	9409      	str	r4, [sp, #36]	; 0x24
 800a8c2:	930d      	str	r3, [sp, #52]	; 0x34
 800a8c4:	920e      	str	r2, [sp, #56]	; 0x38
 800a8c6:	b129      	cbz	r1, 800a8d4 <_Paint+0x98>
 800a8c8:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a8cc:	930f      	str	r3, [sp, #60]	; 0x3c
 800a8ce:	4442      	add	r2, r8
 800a8d0:	9210      	str	r2, [sp, #64]	; 0x40
 800a8d2:	e004      	b.n	800a8de <_Paint+0xa2>
 800a8d4:	4443      	add	r3, r8
 800a8d6:	930f      	str	r3, [sp, #60]	; 0x3c
 800a8d8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a8dc:	9310      	str	r3, [sp, #64]	; 0x40
 800a8de:	2300      	movs	r3, #0
 800a8e0:	9307      	str	r3, [sp, #28]
 800a8e2:	a809      	add	r0, sp, #36	; 0x24
 800a8e4:	47b0      	blx	r6
 800a8e6:	9906      	ldr	r1, [sp, #24]
 800a8e8:	f9bd 5008 	ldrsh.w	r5, [sp, #8]
 800a8ec:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 800a8f0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800a8f4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a8f8:	b119      	cbz	r1, 800a902 <_Paint+0xc6>
 800a8fa:	4440      	add	r0, r8
 800a8fc:	950d      	str	r5, [sp, #52]	; 0x34
 800a8fe:	3001      	adds	r0, #1
 800a900:	e002      	b.n	800a908 <_Paint+0xcc>
 800a902:	4445      	add	r5, r8
 800a904:	3501      	adds	r5, #1
 800a906:	950d      	str	r5, [sp, #52]	; 0x34
 800a908:	9310      	str	r3, [sp, #64]	; 0x40
 800a90a:	2301      	movs	r3, #1
 800a90c:	920f      	str	r2, [sp, #60]	; 0x3c
 800a90e:	9307      	str	r3, [sp, #28]
 800a910:	900e      	str	r0, [sp, #56]	; 0x38
 800a912:	a809      	add	r0, sp, #36	; 0x24
 800a914:	47b0      	blx	r6
 800a916:	4620      	mov	r0, r4
 800a918:	f7fe ff94 	bl	8009844 <GUI_ALLOC_LockH>
 800a91c:	9000      	str	r0, [sp, #0]
 800a91e:	f7f7 fea3 	bl	8002668 <PROGBAR__GetTextLocked>
 800a922:	9001      	str	r0, [sp, #4]
 800a924:	b1f8      	cbz	r0, 800a966 <_Paint+0x12a>
 800a926:	4648      	mov	r0, r9
 800a928:	f7fe fb4a 	bl	8008fc0 <GUI_SetFont>
 800a92c:	4639      	mov	r1, r7
 800a92e:	9a01      	ldr	r2, [sp, #4]
 800a930:	9800      	ldr	r0, [sp, #0]
 800a932:	f7f7 fe9c 	bl	800266e <PROGBAR__GetTextRect>
 800a936:	4668      	mov	r0, sp
 800a938:	f7fe ff92 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a93c:	9b01      	ldr	r3, [sp, #4]
 800a93e:	9308      	str	r3, [sp, #32]
 800a940:	2312      	movs	r3, #18
 800a942:	930a      	str	r3, [sp, #40]	; 0x28
 800a944:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800a948:	930d      	str	r3, [sp, #52]	; 0x34
 800a94a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800a94e:	930e      	str	r3, [sp, #56]	; 0x38
 800a950:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a954:	930f      	str	r3, [sp, #60]	; 0x3c
 800a956:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a95a:	9409      	str	r4, [sp, #36]	; 0x24
 800a95c:	9310      	str	r3, [sp, #64]	; 0x40
 800a95e:	a809      	add	r0, sp, #36	; 0x24
 800a960:	47b0      	blx	r6
 800a962:	a801      	add	r0, sp, #4
 800a964:	e000      	b.n	800a968 <_Paint+0x12c>
 800a966:	4668      	mov	r0, sp
 800a968:	f7fe ff7a 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a96c:	2000      	movs	r0, #0
 800a96e:	f7f9 ff51 	bl	8004814 <WM_SetUserClipRect>
 800a972:	b013      	add	sp, #76	; 0x4c
 800a974:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800a978 <GUI_ARRAY__GethItem>:
 800a978:	8803      	ldrh	r3, [r0, #0]
 800a97a:	4299      	cmp	r1, r3
 800a97c:	b513      	push	{r0, r1, r4, lr}
 800a97e:	460c      	mov	r4, r1
 800a980:	d20e      	bcs.n	800a9a0 <GUI_ARRAY__GethItem+0x28>
 800a982:	6840      	ldr	r0, [r0, #4]
 800a984:	b150      	cbz	r0, 800a99c <GUI_ARRAY__GethItem+0x24>
 800a986:	f7fe ff5d 	bl	8009844 <GUI_ALLOC_LockH>
 800a98a:	ab02      	add	r3, sp, #8
 800a98c:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 800a990:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a994:	4618      	mov	r0, r3
 800a996:	f7fe ff63 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a99a:	e002      	b.n	800a9a2 <GUI_ARRAY__GethItem+0x2a>
 800a99c:	4604      	mov	r4, r0
 800a99e:	e000      	b.n	800a9a2 <GUI_ARRAY__GethItem+0x2a>
 800a9a0:	2400      	movs	r4, #0
 800a9a2:	4620      	mov	r0, r4
 800a9a4:	b002      	add	sp, #8
 800a9a6:	bd10      	pop	{r4, pc}

0800a9a8 <GUI_ARRAY_GetNumItems>:
 800a9a8:	b513      	push	{r0, r1, r4, lr}
 800a9aa:	4604      	mov	r4, r0
 800a9ac:	b140      	cbz	r0, 800a9c0 <GUI_ARRAY_GetNumItems+0x18>
 800a9ae:	f7fe ff49 	bl	8009844 <GUI_ALLOC_LockH>
 800a9b2:	ab02      	add	r3, sp, #8
 800a9b4:	8804      	ldrh	r4, [r0, #0]
 800a9b6:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a9ba:	4618      	mov	r0, r3
 800a9bc:	f7fe ff50 	bl	8009860 <GUI_ALLOC_UnlockH>
 800a9c0:	4620      	mov	r0, r4
 800a9c2:	b002      	add	sp, #8
 800a9c4:	bd10      	pop	{r4, pc}

0800a9c6 <GUI_ARRAY_AddItem>:
 800a9c6:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a9ca:	4605      	mov	r5, r0
 800a9cc:	2800      	cmp	r0, #0
 800a9ce:	d03d      	beq.n	800aa4c <GUI_ARRAY_AddItem+0x86>
 800a9d0:	b14a      	cbz	r2, 800a9e6 <GUI_ARRAY_AddItem+0x20>
 800a9d2:	4608      	mov	r0, r1
 800a9d4:	4611      	mov	r1, r2
 800a9d6:	f7ff f905 	bl	8009be4 <GUI_ALLOC_AllocInit>
 800a9da:	f1d0 0401 	rsbs	r4, r0, #1
 800a9de:	4607      	mov	r7, r0
 800a9e0:	bf38      	it	cc
 800a9e2:	2400      	movcc	r4, #0
 800a9e4:	e001      	b.n	800a9ea <GUI_ARRAY_AddItem+0x24>
 800a9e6:	4614      	mov	r4, r2
 800a9e8:	4617      	mov	r7, r2
 800a9ea:	4628      	mov	r0, r5
 800a9ec:	f7fe ff2a 	bl	8009844 <GUI_ALLOC_LockH>
 800a9f0:	ae02      	add	r6, sp, #8
 800a9f2:	f8b0 8000 	ldrh.w	r8, [r0]
 800a9f6:	f846 0d08 	str.w	r0, [r6, #-8]!
 800a9fa:	f8d0 9004 	ldr.w	r9, [r0, #4]
 800a9fe:	4668      	mov	r0, sp
 800aa00:	f7fe ff2e 	bl	8009860 <GUI_ALLOC_UnlockH>
 800aa04:	bb24      	cbnz	r4, 800aa50 <GUI_ARRAY_AddItem+0x8a>
 800aa06:	f108 0101 	add.w	r1, r8, #1
 800aa0a:	4648      	mov	r0, r9
 800aa0c:	0089      	lsls	r1, r1, #2
 800aa0e:	f7ff f923 	bl	8009c58 <GUI_ALLOC_Realloc>
 800aa12:	4681      	mov	r9, r0
 800aa14:	b918      	cbnz	r0, 800aa1e <GUI_ARRAY_AddItem+0x58>
 800aa16:	4638      	mov	r0, r7
 800aa18:	f7fe ff46 	bl	80098a8 <GUI_ALLOC_Free>
 800aa1c:	e018      	b.n	800aa50 <GUI_ARRAY_AddItem+0x8a>
 800aa1e:	f7fe ff11 	bl	8009844 <GUI_ALLOC_LockH>
 800aa22:	ab02      	add	r3, sp, #8
 800aa24:	f843 0d04 	str.w	r0, [r3, #-4]!
 800aa28:	f840 7028 	str.w	r7, [r0, r8, lsl #2]
 800aa2c:	4618      	mov	r0, r3
 800aa2e:	f7fe ff17 	bl	8009860 <GUI_ALLOC_UnlockH>
 800aa32:	4628      	mov	r0, r5
 800aa34:	f7fe ff06 	bl	8009844 <GUI_ALLOC_LockH>
 800aa38:	8803      	ldrh	r3, [r0, #0]
 800aa3a:	9000      	str	r0, [sp, #0]
 800aa3c:	3301      	adds	r3, #1
 800aa3e:	f8c0 9004 	str.w	r9, [r0, #4]
 800aa42:	8003      	strh	r3, [r0, #0]
 800aa44:	4668      	mov	r0, sp
 800aa46:	f7fe ff0b 	bl	8009860 <GUI_ALLOC_UnlockH>
 800aa4a:	e002      	b.n	800aa52 <GUI_ARRAY_AddItem+0x8c>
 800aa4c:	4604      	mov	r4, r0
 800aa4e:	e000      	b.n	800aa52 <GUI_ARRAY_AddItem+0x8c>
 800aa50:	2401      	movs	r4, #1
 800aa52:	4620      	mov	r0, r4
 800aa54:	b003      	add	sp, #12
 800aa56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800aa5a <GUI_ARRAY_Delete>:
 800aa5a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aa5c:	4605      	mov	r5, r0
 800aa5e:	b318      	cbz	r0, 800aaa8 <GUI_ARRAY_Delete+0x4e>
 800aa60:	f7fe fef0 	bl	8009844 <GUI_ALLOC_LockH>
 800aa64:	9000      	str	r0, [sp, #0]
 800aa66:	6840      	ldr	r0, [r0, #4]
 800aa68:	b1c0      	cbz	r0, 800aa9c <GUI_ARRAY_Delete+0x42>
 800aa6a:	f7fe feeb 	bl	8009844 <GUI_ALLOC_LockH>
 800aa6e:	2400      	movs	r4, #0
 800aa70:	9001      	str	r0, [sp, #4]
 800aa72:	9b00      	ldr	r3, [sp, #0]
 800aa74:	881b      	ldrh	r3, [r3, #0]
 800aa76:	429c      	cmp	r4, r3
 800aa78:	da06      	bge.n	800aa88 <GUI_ARRAY_Delete+0x2e>
 800aa7a:	9801      	ldr	r0, [sp, #4]
 800aa7c:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 800aa80:	f7ff f8a8 	bl	8009bd4 <GUI_ALLOC_FreePtr>
 800aa84:	3401      	adds	r4, #1
 800aa86:	e7f4      	b.n	800aa72 <GUI_ARRAY_Delete+0x18>
 800aa88:	a801      	add	r0, sp, #4
 800aa8a:	f7fe fee9 	bl	8009860 <GUI_ALLOC_UnlockH>
 800aa8e:	9800      	ldr	r0, [sp, #0]
 800aa90:	3004      	adds	r0, #4
 800aa92:	f7ff f89f 	bl	8009bd4 <GUI_ALLOC_FreePtr>
 800aa96:	9b00      	ldr	r3, [sp, #0]
 800aa98:	2200      	movs	r2, #0
 800aa9a:	801a      	strh	r2, [r3, #0]
 800aa9c:	4668      	mov	r0, sp
 800aa9e:	f7fe fedf 	bl	8009860 <GUI_ALLOC_UnlockH>
 800aaa2:	4628      	mov	r0, r5
 800aaa4:	f7fe ff00 	bl	80098a8 <GUI_ALLOC_Free>
 800aaa8:	b003      	add	sp, #12
 800aaaa:	bd30      	pop	{r4, r5, pc}

0800aaac <GUI_ARRAY_GethItem>:
 800aaac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aaae:	460e      	mov	r6, r1
 800aab0:	4605      	mov	r5, r0
 800aab2:	b158      	cbz	r0, 800aacc <GUI_ARRAY_GethItem+0x20>
 800aab4:	f7fe fec6 	bl	8009844 <GUI_ALLOC_LockH>
 800aab8:	ac02      	add	r4, sp, #8
 800aaba:	4631      	mov	r1, r6
 800aabc:	f844 0d04 	str.w	r0, [r4, #-4]!
 800aac0:	f7ff ff5a 	bl	800a978 <GUI_ARRAY__GethItem>
 800aac4:	4605      	mov	r5, r0
 800aac6:	4620      	mov	r0, r4
 800aac8:	f7fe feca 	bl	8009860 <GUI_ALLOC_UnlockH>
 800aacc:	4628      	mov	r0, r5
 800aace:	b002      	add	sp, #8
 800aad0:	bd70      	pop	{r4, r5, r6, pc}

0800aad2 <GUI_ARRAY_Create>:
 800aad2:	2008      	movs	r0, #8
 800aad4:	f7ff b8a8 	b.w	8009c28 <GUI_ALLOC_AllocZero>

0800aad8 <FRAMEWIN_DrawSkinFlex>:
 800aad8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aadc:	4604      	mov	r4, r0
 800aade:	b090      	sub	sp, #64	; 0x40
 800aae0:	6800      	ldr	r0, [r0, #0]
 800aae2:	4d9b      	ldr	r5, [pc, #620]	; (800ad50 <FRAMEWIN_DrawSkinFlex+0x278>)
 800aae4:	f7f9 f802 	bl	8003aec <FRAMEWIN_GetActive>
 800aae8:	4b9a      	ldr	r3, [pc, #616]	; (800ad54 <FRAMEWIN_DrawSkinFlex+0x27c>)
 800aaea:	6866      	ldr	r6, [r4, #4]
 800aaec:	2800      	cmp	r0, #0
 800aaee:	bf18      	it	ne
 800aaf0:	461d      	movne	r5, r3
 800aaf2:	2e1c      	cmp	r6, #28
 800aaf4:	f200 81a6 	bhi.w	800ae44 <FRAMEWIN_DrawSkinFlex+0x36c>
 800aaf8:	e8df f016 	tbh	[pc, r6, lsl #1]
 800aafc:	01a40191 	.word	0x01a40191
 800ab00:	01a401a4 	.word	0x01a401a4
 800ab04:	012e01a4 	.word	0x012e01a4
 800ab08:	01a401a4 	.word	0x01a401a4
 800ab0c:	01a401a4 	.word	0x01a401a4
 800ab10:	002701a4 	.word	0x002701a4
 800ab14:	01a401a4 	.word	0x01a401a4
 800ab18:	01a4017e 	.word	0x01a4017e
 800ab1c:	01a401a4 	.word	0x01a401a4
 800ab20:	01a40145 	.word	0x01a40145
 800ab24:	002301a4 	.word	0x002301a4
 800ab28:	001f001d 	.word	0x001f001d
 800ab2c:	01a40021 	.word	0x01a40021
 800ab30:	01a401a4 	.word	0x01a401a4
 800ab34:	0025      	.short	0x0025
 800ab36:	69ee      	ldr	r6, [r5, #28]
 800ab38:	e189      	b.n	800ae4e <FRAMEWIN_DrawSkinFlex+0x376>
 800ab3a:	6a2e      	ldr	r6, [r5, #32]
 800ab3c:	e187      	b.n	800ae4e <FRAMEWIN_DrawSkinFlex+0x376>
 800ab3e:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 800ab40:	e185      	b.n	800ae4e <FRAMEWIN_DrawSkinFlex+0x376>
 800ab42:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800ab44:	e183      	b.n	800ae4e <FRAMEWIN_DrawSkinFlex+0x376>
 800ab46:	696e      	ldr	r6, [r5, #20]
 800ab48:	e181      	b.n	800ae4e <FRAMEWIN_DrawSkinFlex+0x376>
 800ab4a:	231c      	movs	r3, #28
 800ab4c:	6820      	ldr	r0, [r4, #0]
 800ab4e:	9308      	str	r3, [sp, #32]
 800ab50:	9007      	str	r0, [sp, #28]
 800ab52:	f7fe fe77 	bl	8009844 <GUI_ALLOC_LockH>
 800ab56:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ab58:	9005      	str	r0, [sp, #20]
 800ab5a:	a807      	add	r0, sp, #28
 800ab5c:	4798      	blx	r3
 800ab5e:	4606      	mov	r6, r0
 800ab60:	a805      	add	r0, sp, #20
 800ab62:	f7fe fe7d 	bl	8009860 <GUI_ALLOC_UnlockH>
 800ab66:	2e01      	cmp	r6, #1
 800ab68:	dd11      	ble.n	800ab8e <FRAMEWIN_DrawSkinFlex+0xb6>
 800ab6a:	682b      	ldr	r3, [r5, #0]
 800ab6c:	9300      	str	r3, [sp, #0]
 800ab6e:	686b      	ldr	r3, [r5, #4]
 800ab70:	9301      	str	r3, [sp, #4]
 800ab72:	68ab      	ldr	r3, [r5, #8]
 800ab74:	9302      	str	r3, [sp, #8]
 800ab76:	6920      	ldr	r0, [r4, #16]
 800ab78:	69a1      	ldr	r1, [r4, #24]
 800ab7a:	6962      	ldr	r2, [r4, #20]
 800ab7c:	4633      	mov	r3, r6
 800ab7e:	f001 fbad 	bl	800c2dc <GUI__DrawTwinArc2>
 800ab82:	6923      	ldr	r3, [r4, #16]
 800ab84:	69a7      	ldr	r7, [r4, #24]
 800ab86:	eb06 0803 	add.w	r8, r6, r3
 800ab8a:	1bbf      	subs	r7, r7, r6
 800ab8c:	e02c      	b.n	800abe8 <FRAMEWIN_DrawSkinFlex+0x110>
 800ab8e:	6828      	ldr	r0, [r5, #0]
 800ab90:	f7fe fa11 	bl	8008fb6 <GUI_SetColor>
 800ab94:	6921      	ldr	r1, [r4, #16]
 800ab96:	69ea      	ldr	r2, [r5, #28]
 800ab98:	6960      	ldr	r0, [r4, #20]
 800ab9a:	440a      	add	r2, r1
 800ab9c:	3a01      	subs	r2, #1
 800ab9e:	f7fd fc0f 	bl	80083c0 <GUI_DrawHLine>
 800aba2:	69a2      	ldr	r2, [r4, #24]
 800aba4:	69e9      	ldr	r1, [r5, #28]
 800aba6:	6960      	ldr	r0, [r4, #20]
 800aba8:	1a51      	subs	r1, r2, r1
 800abaa:	3101      	adds	r1, #1
 800abac:	f7fd fc08 	bl	80083c0 <GUI_DrawHLine>
 800abb0:	6967      	ldr	r7, [r4, #20]
 800abb2:	6920      	ldr	r0, [r4, #16]
 800abb4:	3701      	adds	r7, #1
 800abb6:	4639      	mov	r1, r7
 800abb8:	f7fd fc26 	bl	8008408 <GUI_DrawPixel>
 800abbc:	4639      	mov	r1, r7
 800abbe:	69a0      	ldr	r0, [r4, #24]
 800abc0:	f7fd fc22 	bl	8008408 <GUI_DrawPixel>
 800abc4:	6868      	ldr	r0, [r5, #4]
 800abc6:	f7fe f9f6 	bl	8008fb6 <GUI_SetColor>
 800abca:	6920      	ldr	r0, [r4, #16]
 800abcc:	4639      	mov	r1, r7
 800abce:	3001      	adds	r0, #1
 800abd0:	f7fd fc1a 	bl	8008408 <GUI_DrawPixel>
 800abd4:	69a0      	ldr	r0, [r4, #24]
 800abd6:	4639      	mov	r1, r7
 800abd8:	3801      	subs	r0, #1
 800abda:	f7fd fc15 	bl	8008408 <GUI_DrawPixel>
 800abde:	6923      	ldr	r3, [r4, #16]
 800abe0:	69a7      	ldr	r7, [r4, #24]
 800abe2:	f103 0802 	add.w	r8, r3, #2
 800abe6:	3f02      	subs	r7, #2
 800abe8:	6828      	ldr	r0, [r5, #0]
 800abea:	f7fe f9e4 	bl	8008fb6 <GUI_SetColor>
 800abee:	4641      	mov	r1, r8
 800abf0:	463a      	mov	r2, r7
 800abf2:	6960      	ldr	r0, [r4, #20]
 800abf4:	f7fd fbe4 	bl	80083c0 <GUI_DrawHLine>
 800abf8:	6868      	ldr	r0, [r5, #4]
 800abfa:	f7fe f9dc 	bl	8008fb6 <GUI_SetColor>
 800abfe:	6960      	ldr	r0, [r4, #20]
 800ac00:	4641      	mov	r1, r8
 800ac02:	3001      	adds	r0, #1
 800ac04:	463a      	mov	r2, r7
 800ac06:	f7fd fbdb 	bl	80083c0 <GUI_DrawHLine>
 800ac0a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800ac0c:	2b02      	cmp	r3, #2
 800ac0e:	dd0a      	ble.n	800ac26 <FRAMEWIN_DrawSkinFlex+0x14e>
 800ac10:	68a8      	ldr	r0, [r5, #8]
 800ac12:	f7fe f9d0 	bl	8008fb6 <GUI_SetColor>
 800ac16:	6961      	ldr	r1, [r4, #20]
 800ac18:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800ac1a:	440b      	add	r3, r1
 800ac1c:	4640      	mov	r0, r8
 800ac1e:	3102      	adds	r1, #2
 800ac20:	463a      	mov	r2, r7
 800ac22:	3b01      	subs	r3, #1
 800ac24:	e01d      	b.n	800ac62 <FRAMEWIN_DrawSkinFlex+0x18a>
 800ac26:	6a2a      	ldr	r2, [r5, #32]
 800ac28:	42b2      	cmp	r2, r6
 800ac2a:	dd1c      	ble.n	800ac66 <FRAMEWIN_DrawSkinFlex+0x18e>
 800ac2c:	6967      	ldr	r7, [r4, #20]
 800ac2e:	6923      	ldr	r3, [r4, #16]
 800ac30:	2e01      	cmp	r6, #1
 800ac32:	f107 0802 	add.w	r8, r7, #2
 800ac36:	f340 8107 	ble.w	800ae48 <FRAMEWIN_DrawSkinFlex+0x370>
 800ac3a:	4437      	add	r7, r6
 800ac3c:	18f0      	adds	r0, r6, r3
 800ac3e:	441a      	add	r2, r3
 800ac40:	3a01      	subs	r2, #1
 800ac42:	4641      	mov	r1, r8
 800ac44:	463b      	mov	r3, r7
 800ac46:	f7fd fc37 	bl	80084b8 <GUI_FillRect>
 800ac4a:	69a3      	ldr	r3, [r4, #24]
 800ac4c:	69e8      	ldr	r0, [r5, #28]
 800ac4e:	2e01      	cmp	r6, #1
 800ac50:	ebc0 0003 	rsb	r0, r0, r3
 800ac54:	bfcc      	ite	gt
 800ac56:	ebc6 0203 	rsbgt	r2, r6, r3
 800ac5a:	1e9a      	suble	r2, r3, #2
 800ac5c:	3001      	adds	r0, #1
 800ac5e:	4641      	mov	r1, r8
 800ac60:	463b      	mov	r3, r7
 800ac62:	f7fd fc29 	bl	80084b8 <GUI_FillRect>
 800ac66:	6963      	ldr	r3, [r4, #20]
 800ac68:	69e7      	ldr	r7, [r4, #28]
 800ac6a:	6828      	ldr	r0, [r5, #0]
 800ac6c:	2e01      	cmp	r6, #1
 800ac6e:	bfcc      	ite	gt
 800ac70:	18f6      	addgt	r6, r6, r3
 800ac72:	1c9e      	addle	r6, r3, #2
 800ac74:	3f01      	subs	r7, #1
 800ac76:	f7fe f99e 	bl	8008fb6 <GUI_SetColor>
 800ac7a:	463a      	mov	r2, r7
 800ac7c:	6920      	ldr	r0, [r4, #16]
 800ac7e:	4631      	mov	r1, r6
 800ac80:	f7fd fbf8 	bl	8008474 <GUI_DrawVLine>
 800ac84:	463a      	mov	r2, r7
 800ac86:	4631      	mov	r1, r6
 800ac88:	69a0      	ldr	r0, [r4, #24]
 800ac8a:	f7fd fbf3 	bl	8008474 <GUI_DrawVLine>
 800ac8e:	69e7      	ldr	r7, [r4, #28]
 800ac90:	6868      	ldr	r0, [r5, #4]
 800ac92:	f7fe f990 	bl	8008fb6 <GUI_SetColor>
 800ac96:	6920      	ldr	r0, [r4, #16]
 800ac98:	3f02      	subs	r7, #2
 800ac9a:	3001      	adds	r0, #1
 800ac9c:	4631      	mov	r1, r6
 800ac9e:	463a      	mov	r2, r7
 800aca0:	f7fd fbe8 	bl	8008474 <GUI_DrawVLine>
 800aca4:	69a0      	ldr	r0, [r4, #24]
 800aca6:	4631      	mov	r1, r6
 800aca8:	3801      	subs	r0, #1
 800acaa:	463a      	mov	r2, r7
 800acac:	f7fd fbe2 	bl	8008474 <GUI_DrawVLine>
 800acb0:	69eb      	ldr	r3, [r5, #28]
 800acb2:	2b02      	cmp	r3, #2
 800acb4:	dc02      	bgt.n	800acbc <FRAMEWIN_DrawSkinFlex+0x1e4>
 800acb6:	6a2b      	ldr	r3, [r5, #32]
 800acb8:	2b02      	cmp	r3, #2
 800acba:	dd20      	ble.n	800acfe <FRAMEWIN_DrawSkinFlex+0x226>
 800acbc:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800acbe:	69e7      	ldr	r7, [r4, #28]
 800acc0:	68a8      	ldr	r0, [r5, #8]
 800acc2:	2b02      	cmp	r3, #2
 800acc4:	bfcc      	ite	gt
 800acc6:	ebc3 0707 	rsbgt	r7, r3, r7
 800acca:	3f02      	suble	r7, #2
 800accc:	f7fe f973 	bl	8008fb6 <GUI_SetColor>
 800acd0:	69ea      	ldr	r2, [r5, #28]
 800acd2:	2a02      	cmp	r2, #2
 800acd4:	dd07      	ble.n	800ace6 <FRAMEWIN_DrawSkinFlex+0x20e>
 800acd6:	6920      	ldr	r0, [r4, #16]
 800acd8:	4402      	add	r2, r0
 800acda:	4631      	mov	r1, r6
 800acdc:	3002      	adds	r0, #2
 800acde:	3a01      	subs	r2, #1
 800ace0:	463b      	mov	r3, r7
 800ace2:	f7fd fbe9 	bl	80084b8 <GUI_FillRect>
 800ace6:	6a2b      	ldr	r3, [r5, #32]
 800ace8:	2b02      	cmp	r3, #2
 800acea:	dd08      	ble.n	800acfe <FRAMEWIN_DrawSkinFlex+0x226>
 800acec:	69a2      	ldr	r2, [r4, #24]
 800acee:	69e8      	ldr	r0, [r5, #28]
 800acf0:	1a10      	subs	r0, r2, r0
 800acf2:	3001      	adds	r0, #1
 800acf4:	4631      	mov	r1, r6
 800acf6:	3a02      	subs	r2, #2
 800acf8:	463b      	mov	r3, r7
 800acfa:	f7fd fbdd 	bl	80084b8 <GUI_FillRect>
 800acfe:	6828      	ldr	r0, [r5, #0]
 800ad00:	f7fe f959 	bl	8008fb6 <GUI_SetColor>
 800ad04:	6921      	ldr	r1, [r4, #16]
 800ad06:	69a2      	ldr	r2, [r4, #24]
 800ad08:	69e0      	ldr	r0, [r4, #28]
 800ad0a:	f7fd fb59 	bl	80083c0 <GUI_DrawHLine>
 800ad0e:	6868      	ldr	r0, [r5, #4]
 800ad10:	f7fe f951 	bl	8008fb6 <GUI_SetColor>
 800ad14:	69e0      	ldr	r0, [r4, #28]
 800ad16:	6921      	ldr	r1, [r4, #16]
 800ad18:	69a2      	ldr	r2, [r4, #24]
 800ad1a:	3801      	subs	r0, #1
 800ad1c:	3101      	adds	r1, #1
 800ad1e:	3a01      	subs	r2, #1
 800ad20:	f7fd fb4e 	bl	80083c0 <GUI_DrawHLine>
 800ad24:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800ad26:	2e02      	cmp	r6, #2
 800ad28:	f340 808c 	ble.w	800ae44 <FRAMEWIN_DrawSkinFlex+0x36c>
 800ad2c:	6920      	ldr	r0, [r4, #16]
 800ad2e:	69a2      	ldr	r2, [r4, #24]
 800ad30:	69e4      	ldr	r4, [r4, #28]
 800ad32:	f100 0802 	add.w	r8, r0, #2
 800ad36:	68a8      	ldr	r0, [r5, #8]
 800ad38:	1e97      	subs	r7, r2, #2
 800ad3a:	f7fe f93c 	bl	8008fb6 <GUI_SetColor>
 800ad3e:	1ba1      	subs	r1, r4, r6
 800ad40:	4640      	mov	r0, r8
 800ad42:	3101      	adds	r1, #1
 800ad44:	463a      	mov	r2, r7
 800ad46:	1ea3      	subs	r3, r4, #2
 800ad48:	f7fd fbb6 	bl	80084b8 <GUI_FillRect>
 800ad4c:	e07a      	b.n	800ae44 <FRAMEWIN_DrawSkinFlex+0x36c>
 800ad4e:	bf00      	nop
 800ad50:	2000013c 	.word	0x2000013c
 800ad54:	20000110 	.word	0x20000110
 800ad58:	8a20      	ldrh	r0, [r4, #16]
 800ad5a:	8aa1      	ldrh	r1, [r4, #20]
 800ad5c:	8b22      	ldrh	r2, [r4, #24]
 800ad5e:	8ba3      	ldrh	r3, [r4, #28]
 800ad60:	68ec      	ldr	r4, [r5, #12]
 800ad62:	9400      	str	r4, [sp, #0]
 800ad64:	692c      	ldr	r4, [r5, #16]
 800ad66:	f8ad 001c 	strh.w	r0, [sp, #28]
 800ad6a:	f8ad 101e 	strh.w	r1, [sp, #30]
 800ad6e:	f8ad 2020 	strh.w	r2, [sp, #32]
 800ad72:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ad76:	9401      	str	r4, [sp, #4]
 800ad78:	b200      	sxth	r0, r0
 800ad7a:	b209      	sxth	r1, r1
 800ad7c:	b212      	sxth	r2, r2
 800ad7e:	b21b      	sxth	r3, r3
 800ad80:	f001 fed0 	bl	800cb24 <GUI_DrawGradientV>
 800ad84:	e05e      	b.n	800ae44 <FRAMEWIN_DrawSkinFlex+0x36c>
 800ad86:	8b2b      	ldrh	r3, [r5, #24]
 800ad88:	6922      	ldr	r2, [r4, #16]
 800ad8a:	6820      	ldr	r0, [r4, #0]
 800ad8c:	441a      	add	r2, r3
 800ad8e:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ad92:	6962      	ldr	r2, [r4, #20]
 800ad94:	f8ad 201e 	strh.w	r2, [sp, #30]
 800ad98:	69a2      	ldr	r2, [r4, #24]
 800ad9a:	1ad3      	subs	r3, r2, r3
 800ad9c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ada0:	69e3      	ldr	r3, [r4, #28]
 800ada2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ada6:	f7fe fd4d 	bl	8009844 <GUI_ALLOC_LockH>
 800adaa:	6f03      	ldr	r3, [r0, #112]	; 0x70
 800adac:	9005      	str	r0, [sp, #20]
 800adae:	b1fb      	cbz	r3, 800adf0 <FRAMEWIN_DrawSkinFlex+0x318>
 800adb0:	2002      	movs	r0, #2
 800adb2:	f7fe f921 	bl	8008ff8 <GUI_SetTextMode>
 800adb6:	9b05      	ldr	r3, [sp, #20]
 800adb8:	f8b3 207c 	ldrh.w	r2, [r3, #124]	; 0x7c
 800adbc:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800adc0:	320e      	adds	r2, #14
 800adc2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800adc6:	6898      	ldr	r0, [r3, #8]
 800adc8:	f7fe f8f5 	bl	8008fb6 <GUI_SetColor>
 800adcc:	9b05      	ldr	r3, [sp, #20]
 800adce:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800add0:	f7fe f8f6 	bl	8008fc0 <GUI_SetFont>
 800add4:	9b05      	ldr	r3, [sp, #20]
 800add6:	6f18      	ldr	r0, [r3, #112]	; 0x70
 800add8:	f7fe fd34 	bl	8009844 <GUI_ALLOC_LockH>
 800addc:	9b05      	ldr	r3, [sp, #20]
 800adde:	9006      	str	r0, [sp, #24]
 800ade0:	a907      	add	r1, sp, #28
 800ade2:	f9b3 205a 	ldrsh.w	r2, [r3, #90]	; 0x5a
 800ade6:	f7fd fdf2 	bl	80089ce <GUI_DispStringInRect>
 800adea:	a806      	add	r0, sp, #24
 800adec:	f7fe fd38 	bl	8009860 <GUI_ALLOC_UnlockH>
 800adf0:	a805      	add	r0, sp, #20
 800adf2:	f7fe fd35 	bl	8009860 <GUI_ALLOC_UnlockH>
 800adf6:	e025      	b.n	800ae44 <FRAMEWIN_DrawSkinFlex+0x36c>
 800adf8:	6923      	ldr	r3, [r4, #16]
 800adfa:	f8ad 301c 	strh.w	r3, [sp, #28]
 800adfe:	6963      	ldr	r3, [r4, #20]
 800ae00:	f8ad 301e 	strh.w	r3, [sp, #30]
 800ae04:	69a3      	ldr	r3, [r4, #24]
 800ae06:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ae0a:	68a8      	ldr	r0, [r5, #8]
 800ae0c:	69e3      	ldr	r3, [r4, #28]
 800ae0e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ae12:	f7fe f8d0 	bl	8008fb6 <GUI_SetColor>
 800ae16:	a807      	add	r0, sp, #28
 800ae18:	f7fd fb70 	bl	80084fc <GUI_FillRectEx>
 800ae1c:	e012      	b.n	800ae44 <FRAMEWIN_DrawSkinFlex+0x36c>
 800ae1e:	6820      	ldr	r0, [r4, #0]
 800ae20:	f7fe fd10 	bl	8009844 <GUI_ALLOC_LockH>
 800ae24:	ab10      	add	r3, sp, #64	; 0x40
 800ae26:	f8b0 205a 	ldrh.w	r2, [r0, #90]	; 0x5a
 800ae2a:	f843 0d2c 	str.w	r0, [r3, #-44]!
 800ae2e:	f042 020c 	orr.w	r2, r2, #12
 800ae32:	f8a0 205a 	strh.w	r2, [r0, #90]	; 0x5a
 800ae36:	4618      	mov	r0, r3
 800ae38:	f7fe fd12 	bl	8009860 <GUI_ALLOC_UnlockH>
 800ae3c:	6820      	ldr	r0, [r4, #0]
 800ae3e:	f7f8 fffb 	bl	8003e38 <WM_SetHasTrans>
 800ae42:	e004      	b.n	800ae4e <FRAMEWIN_DrawSkinFlex+0x376>
 800ae44:	2600      	movs	r6, #0
 800ae46:	e002      	b.n	800ae4e <FRAMEWIN_DrawSkinFlex+0x376>
 800ae48:	1c98      	adds	r0, r3, #2
 800ae4a:	4647      	mov	r7, r8
 800ae4c:	e6f7      	b.n	800ac3e <FRAMEWIN_DrawSkinFlex+0x166>
 800ae4e:	4630      	mov	r0, r6
 800ae50:	b010      	add	sp, #64	; 0x40
 800ae52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ae56:	bf00      	nop

0800ae58 <_GetBorderSize>:
 800ae58:	b570      	push	{r4, r5, r6, lr}
 800ae5a:	b08a      	sub	sp, #40	; 0x28
 800ae5c:	4605      	mov	r5, r0
 800ae5e:	460c      	mov	r4, r1
 800ae60:	f7fe fcf0 	bl	8009844 <GUI_ALLOC_LockH>
 800ae64:	ab0a      	add	r3, sp, #40	; 0x28
 800ae66:	6d06      	ldr	r6, [r0, #80]	; 0x50
 800ae68:	f843 0d28 	str.w	r0, [r3, #-40]!
 800ae6c:	4668      	mov	r0, sp
 800ae6e:	f7fe fcf7 	bl	8009860 <GUI_ALLOC_UnlockH>
 800ae72:	9501      	str	r5, [sp, #4]
 800ae74:	2c03      	cmp	r4, #3
 800ae76:	d80b      	bhi.n	800ae90 <_GetBorderSize+0x38>
 800ae78:	e8df f004 	tbb	[pc, r4]
 800ae7c:	08060402 	.word	0x08060402
 800ae80:	2318      	movs	r3, #24
 800ae82:	e004      	b.n	800ae8e <_GetBorderSize+0x36>
 800ae84:	2316      	movs	r3, #22
 800ae86:	e002      	b.n	800ae8e <_GetBorderSize+0x36>
 800ae88:	2315      	movs	r3, #21
 800ae8a:	e000      	b.n	800ae8e <_GetBorderSize+0x36>
 800ae8c:	2317      	movs	r3, #23
 800ae8e:	9302      	str	r3, [sp, #8]
 800ae90:	a801      	add	r0, sp, #4
 800ae92:	47b0      	blx	r6
 800ae94:	b00a      	add	sp, #40	; 0x28
 800ae96:	bd70      	pop	{r4, r5, r6, pc}

0800ae98 <_Create>:
 800ae98:	b530      	push	{r4, r5, lr}
 800ae9a:	b08b      	sub	sp, #44	; 0x2c
 800ae9c:	4605      	mov	r5, r0
 800ae9e:	f7fe fcd1 	bl	8009844 <GUI_ALLOC_LockH>
 800aea2:	ab0a      	add	r3, sp, #40	; 0x28
 800aea4:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 800aea6:	f843 0d28 	str.w	r0, [r3, #-40]!
 800aeaa:	4668      	mov	r0, sp
 800aeac:	6894      	ldr	r4, [r2, #8]
 800aeae:	f7fe fcd7 	bl	8009860 <GUI_ALLOC_UnlockH>
 800aeb2:	a80a      	add	r0, sp, #40	; 0x28
 800aeb4:	2300      	movs	r3, #0
 800aeb6:	9302      	str	r3, [sp, #8]
 800aeb8:	f840 5d24 	str.w	r5, [r0, #-36]!
 800aebc:	6863      	ldr	r3, [r4, #4]
 800aebe:	4798      	blx	r3
 800aec0:	b00b      	add	sp, #44	; 0x2c
 800aec2:	bd30      	pop	{r4, r5, pc}

0800aec4 <_Paint>:
 800aec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aec8:	b091      	sub	sp, #68	; 0x44
 800aeca:	4604      	mov	r4, r0
 800aecc:	f7fe fcba 	bl	8009844 <GUI_ALLOC_LockH>
 800aed0:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 800aed2:	6b46      	ldr	r6, [r0, #52]	; 0x34
 800aed4:	9603      	str	r6, [sp, #12]
 800aed6:	9006      	str	r0, [sp, #24]
 800aed8:	689e      	ldr	r6, [r3, #8]
 800aeda:	6d05      	ldr	r5, [r0, #80]	; 0x50
 800aedc:	f7f8 fb3d 	bl	800355a <FRAMEWIN__CalcTitleHeight>
 800aee0:	4683      	mov	fp, r0
 800aee2:	a810      	add	r0, sp, #64	; 0x40
 800aee4:	f850 2d28 	ldr.w	r2, [r0, #-40]!
 800aee8:	f8b2 2058 	ldrh.w	r2, [r2, #88]	; 0x58
 800aeec:	9204      	str	r2, [sp, #16]
 800aeee:	f7fe fcb7 	bl	8009860 <GUI_ALLOC_UnlockH>
 800aef2:	4620      	mov	r0, r4
 800aef4:	f7f9 fcfe 	bl	80048f4 <WM_GetWindowSizeX>
 800aef8:	4681      	mov	r9, r0
 800aefa:	4620      	mov	r0, r4
 800aefc:	f7f9 fd0f 	bl	800491e <WM_GetWindowSizeY>
 800af00:	6832      	ldr	r2, [r6, #0]
 800af02:	2101      	movs	r1, #1
 800af04:	4680      	mov	r8, r0
 800af06:	4620      	mov	r0, r4
 800af08:	4790      	blx	r2
 800af0a:	6832      	ldr	r2, [r6, #0]
 800af0c:	2103      	movs	r1, #3
 800af0e:	4607      	mov	r7, r0
 800af10:	4620      	mov	r0, r4
 800af12:	4790      	blx	r2
 800af14:	6832      	ldr	r2, [r6, #0]
 800af16:	2100      	movs	r1, #0
 800af18:	4682      	mov	sl, r0
 800af1a:	4620      	mov	r0, r4
 800af1c:	4790      	blx	r2
 800af1e:	6833      	ldr	r3, [r6, #0]
 800af20:	9002      	str	r0, [sp, #8]
 800af22:	2102      	movs	r1, #2
 800af24:	4620      	mov	r0, r4
 800af26:	4798      	blx	r3
 800af28:	9005      	str	r0, [sp, #20]
 800af2a:	2000      	movs	r0, #0
 800af2c:	9407      	str	r4, [sp, #28]
 800af2e:	f7fa fc47 	bl	80057c0 <WM__InitIVRSearch>
 800af32:	2800      	cmp	r0, #0
 800af34:	d044      	beq.n	800afc0 <_Paint+0xfc>
 800af36:	2300      	movs	r3, #0
 800af38:	930c      	str	r3, [sp, #48]	; 0x30
 800af3a:	930b      	str	r3, [sp, #44]	; 0x2c
 800af3c:	f109 33ff 	add.w	r3, r9, #4294967295
 800af40:	930d      	str	r3, [sp, #52]	; 0x34
 800af42:	f108 33ff 	add.w	r3, r8, #4294967295
 800af46:	930e      	str	r3, [sp, #56]	; 0x38
 800af48:	230b      	movs	r3, #11
 800af4a:	9308      	str	r3, [sp, #32]
 800af4c:	a807      	add	r0, sp, #28
 800af4e:	47a8      	blx	r5
 800af50:	9b02      	ldr	r3, [sp, #8]
 800af52:	9e04      	ldr	r6, [sp, #16]
 800af54:	970b      	str	r7, [sp, #44]	; 0x2c
 800af56:	445b      	add	r3, fp
 800af58:	fa03 f086 	sxtah	r0, r3, r6
 800af5c:	9e05      	ldr	r6, [sp, #20]
 800af5e:	930c      	str	r3, [sp, #48]	; 0x30
 800af60:	ebc6 0108 	rsb	r1, r6, r8
 800af64:	ebca 0209 	rsb	r2, sl, r9
 800af68:	3801      	subs	r0, #1
 800af6a:	3901      	subs	r1, #1
 800af6c:	3a01      	subs	r2, #1
 800af6e:	4288      	cmp	r0, r1
 800af70:	bfd4      	ite	le
 800af72:	900e      	strle	r0, [sp, #56]	; 0x38
 800af74:	910e      	strgt	r1, [sp, #56]	; 0x38
 800af76:	210e      	movs	r1, #14
 800af78:	9108      	str	r1, [sp, #32]
 800af7a:	e88d 000c 	stmia.w	sp, {r2, r3}
 800af7e:	920d      	str	r2, [sp, #52]	; 0x34
 800af80:	a807      	add	r0, sp, #28
 800af82:	47a8      	blx	r5
 800af84:	9b01      	ldr	r3, [sp, #4]
 800af86:	9a00      	ldr	r2, [sp, #0]
 800af88:	9e02      	ldr	r6, [sp, #8]
 800af8a:	920d      	str	r2, [sp, #52]	; 0x34
 800af8c:	3b01      	subs	r3, #1
 800af8e:	930e      	str	r3, [sp, #56]	; 0x38
 800af90:	2305      	movs	r3, #5
 800af92:	9308      	str	r3, [sp, #32]
 800af94:	970b      	str	r7, [sp, #44]	; 0x2c
 800af96:	960c      	str	r6, [sp, #48]	; 0x30
 800af98:	a807      	add	r0, sp, #28
 800af9a:	47a8      	blx	r5
 800af9c:	a90b      	add	r1, sp, #44	; 0x2c
 800af9e:	aa0d      	add	r2, sp, #52	; 0x34
 800afa0:	4620      	mov	r0, r4
 800afa2:	f7f8 fae9 	bl	8003578 <FRAMEWIN__GetTitleLimits>
 800afa6:	2002      	movs	r0, #2
 800afa8:	f7fe f826 	bl	8008ff8 <GUI_SetTextMode>
 800afac:	9803      	ldr	r0, [sp, #12]
 800afae:	f7fe f807 	bl	8008fc0 <GUI_SetFont>
 800afb2:	2312      	movs	r3, #18
 800afb4:	9308      	str	r3, [sp, #32]
 800afb6:	a807      	add	r0, sp, #28
 800afb8:	47a8      	blx	r5
 800afba:	f7fa fb3f 	bl	800563c <WM__GetNextIVR>
 800afbe:	e7b8      	b.n	800af32 <_Paint+0x6e>
 800afc0:	b011      	add	sp, #68	; 0x44
 800afc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800afc6 <_cbTimer>:
 800afc6:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800afc8:	4604      	mov	r4, r0
 800afca:	2100      	movs	r1, #0
 800afcc:	4668      	mov	r0, sp
 800afce:	2210      	movs	r2, #16
 800afd0:	f002 f9fa 	bl	800d3c8 <memset>
 800afd4:	6860      	ldr	r0, [r4, #4]
 800afd6:	b150      	cbz	r0, 800afee <_cbTimer+0x28>
 800afd8:	f7fe fc2a 	bl	8009830 <GUI_ALLOC_h2p>
 800afdc:	f240 1313 	movw	r3, #275	; 0x113
 800afe0:	6840      	ldr	r0, [r0, #4]
 800afe2:	9300      	str	r3, [sp, #0]
 800afe4:	4669      	mov	r1, sp
 800afe6:	6863      	ldr	r3, [r4, #4]
 800afe8:	9303      	str	r3, [sp, #12]
 800afea:	f7fa f824 	bl	8005036 <WM_SendMessage>
 800afee:	b004      	add	sp, #16
 800aff0:	bd10      	pop	{r4, pc}

0800aff2 <WM_DeleteTimer>:
 800aff2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aff4:	4605      	mov	r5, r0
 800aff6:	b168      	cbz	r0, 800b014 <WM_DeleteTimer+0x22>
 800aff8:	f7fe fc24 	bl	8009844 <GUI_ALLOC_LockH>
 800affc:	ac02      	add	r4, sp, #8
 800affe:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b002:	6800      	ldr	r0, [r0, #0]
 800b004:	f7fc fed0 	bl	8007da8 <GUI_TIMER_Delete>
 800b008:	4620      	mov	r0, r4
 800b00a:	f7fe fc29 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b00e:	4628      	mov	r0, r5
 800b010:	f7fe fc4a 	bl	80098a8 <GUI_ALLOC_Free>
 800b014:	b003      	add	sp, #12
 800b016:	bd30      	pop	{r4, r5, pc}

0800b018 <WM__DeleteAssocTimer>:
 800b018:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b01a:	4605      	mov	r5, r0
 800b01c:	a801      	add	r0, sp, #4
 800b01e:	f7fc fe41 	bl	8007ca4 <GUI_TIMER__GetFirstTimer>
 800b022:	4604      	mov	r4, r0
 800b024:	b1dc      	cbz	r4, 800b05e <WM__DeleteAssocTimer+0x46>
 800b026:	4620      	mov	r0, r4
 800b028:	2101      	movs	r1, #1
 800b02a:	f7fc ff18 	bl	8007e5e <GUI_TIMER_GetFlag>
 800b02e:	9b01      	ldr	r3, [sp, #4]
 800b030:	b183      	cbz	r3, 800b054 <WM__DeleteAssocTimer+0x3c>
 800b032:	b178      	cbz	r0, 800b054 <WM__DeleteAssocTimer+0x3c>
 800b034:	4618      	mov	r0, r3
 800b036:	f7fe fbfb 	bl	8009830 <GUI_ALLOC_h2p>
 800b03a:	6843      	ldr	r3, [r0, #4]
 800b03c:	42ab      	cmp	r3, r5
 800b03e:	d109      	bne.n	800b054 <WM__DeleteAssocTimer+0x3c>
 800b040:	4620      	mov	r0, r4
 800b042:	a901      	add	r1, sp, #4
 800b044:	9e01      	ldr	r6, [sp, #4]
 800b046:	f7fc fe45 	bl	8007cd4 <GUI_TIMER__GetNextTimerLin>
 800b04a:	4604      	mov	r4, r0
 800b04c:	4630      	mov	r0, r6
 800b04e:	f7ff ffd0 	bl	800aff2 <WM_DeleteTimer>
 800b052:	e7e7      	b.n	800b024 <WM__DeleteAssocTimer+0xc>
 800b054:	4620      	mov	r0, r4
 800b056:	a901      	add	r1, sp, #4
 800b058:	f7fc fe3c 	bl	8007cd4 <GUI_TIMER__GetNextTimerLin>
 800b05c:	e7e1      	b.n	800b022 <WM__DeleteAssocTimer+0xa>
 800b05e:	b002      	add	sp, #8
 800b060:	bd70      	pop	{r4, r5, r6, pc}
	...

0800b064 <WM_CreateTimer>:
 800b064:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b068:	4680      	mov	r8, r0
 800b06a:	200c      	movs	r0, #12
 800b06c:	460f      	mov	r7, r1
 800b06e:	4616      	mov	r6, r2
 800b070:	f7fe fdda 	bl	8009c28 <GUI_ALLOC_AllocZero>
 800b074:	4604      	mov	r4, r0
 800b076:	b1f0      	cbz	r0, 800b0b6 <WM_CreateTimer+0x52>
 800b078:	f7fc ff06 	bl	8007e88 <GUI_GetTime>
 800b07c:	4622      	mov	r2, r4
 800b07e:	1981      	adds	r1, r0, r6
 800b080:	2301      	movs	r3, #1
 800b082:	480f      	ldr	r0, [pc, #60]	; (800b0c0 <WM_CreateTimer+0x5c>)
 800b084:	f7fc fe42 	bl	8007d0c <GUI_TIMER_Create>
 800b088:	4605      	mov	r5, r0
 800b08a:	4620      	mov	r0, r4
 800b08c:	b185      	cbz	r5, 800b0b0 <WM_CreateTimer+0x4c>
 800b08e:	f7fe fbd9 	bl	8009844 <GUI_ALLOC_LockH>
 800b092:	4603      	mov	r3, r0
 800b094:	a802      	add	r0, sp, #8
 800b096:	f8c3 8004 	str.w	r8, [r3, #4]
 800b09a:	f840 3d04 	str.w	r3, [r0, #-4]!
 800b09e:	609f      	str	r7, [r3, #8]
 800b0a0:	601d      	str	r5, [r3, #0]
 800b0a2:	f7fe fbdd 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b0a6:	4628      	mov	r0, r5
 800b0a8:	4631      	mov	r1, r6
 800b0aa:	f7fc feb1 	bl	8007e10 <GUI_TIMER_SetPeriod>
 800b0ae:	e002      	b.n	800b0b6 <WM_CreateTimer+0x52>
 800b0b0:	f7fe fbfa 	bl	80098a8 <GUI_ALLOC_Free>
 800b0b4:	462c      	mov	r4, r5
 800b0b6:	4620      	mov	r0, r4
 800b0b8:	b002      	add	sp, #8
 800b0ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b0be:	bf00      	nop
 800b0c0:	0800afc7 	.word	0x0800afc7

0800b0c4 <WM_RestartTimer>:
 800b0c4:	b513      	push	{r0, r1, r4, lr}
 800b0c6:	460c      	mov	r4, r1
 800b0c8:	b180      	cbz	r0, 800b0ec <WM_RestartTimer+0x28>
 800b0ca:	f7fe fbbb 	bl	8009844 <GUI_ALLOC_LockH>
 800b0ce:	9001      	str	r0, [sp, #4]
 800b0d0:	b11c      	cbz	r4, 800b0da <WM_RestartTimer+0x16>
 800b0d2:	6800      	ldr	r0, [r0, #0]
 800b0d4:	4621      	mov	r1, r4
 800b0d6:	f7fc fe9b 	bl	8007e10 <GUI_TIMER_SetPeriod>
 800b0da:	ac02      	add	r4, sp, #8
 800b0dc:	f854 3d04 	ldr.w	r3, [r4, #-4]!
 800b0e0:	6818      	ldr	r0, [r3, #0]
 800b0e2:	f7fc fea3 	bl	8007e2c <GUI_TIMER_Restart>
 800b0e6:	4620      	mov	r0, r4
 800b0e8:	f7fe fbba 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b0ec:	b002      	add	sp, #8
 800b0ee:	bd10      	pop	{r4, pc}

0800b0f0 <_Convert16>:
 800b0f0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b0f4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800b0f8:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800b0fc:	4605      	mov	r5, r0
 800b0fe:	460e      	mov	r6, r1
 800b100:	4690      	mov	r8, r2
 800b102:	461f      	mov	r7, r3
 800b104:	4614      	mov	r4, r2
 800b106:	4689      	mov	r9, r1
 800b108:	f835 0b02 	ldrh.w	r0, [r5], #2
 800b10c:	47d8      	blx	fp
 800b10e:	47d0      	blx	sl
 800b110:	3c01      	subs	r4, #1
 800b112:	f849 0b04 	str.w	r0, [r9], #4
 800b116:	d1f7      	bne.n	800b108 <_Convert16+0x18>
 800b118:	2f1f      	cmp	r7, #31
 800b11a:	d806      	bhi.n	800b12a <_Convert16+0x3a>
 800b11c:	4630      	mov	r0, r6
 800b11e:	4641      	mov	r1, r8
 800b120:	463a      	mov	r2, r7
 800b122:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b126:	f001 b98d 	b.w	800c444 <GUI__CompactPixelIndices>
 800b12a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b12e <_Convert8>:
 800b12e:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b132:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800b136:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800b13a:	4605      	mov	r5, r0
 800b13c:	460e      	mov	r6, r1
 800b13e:	4690      	mov	r8, r2
 800b140:	461f      	mov	r7, r3
 800b142:	4689      	mov	r9, r1
 800b144:	4604      	mov	r4, r0
 800b146:	f814 0b01 	ldrb.w	r0, [r4], #1
 800b14a:	47d8      	blx	fp
 800b14c:	47d0      	blx	sl
 800b14e:	1b2b      	subs	r3, r5, r4
 800b150:	4443      	add	r3, r8
 800b152:	f849 0b04 	str.w	r0, [r9], #4
 800b156:	2b00      	cmp	r3, #0
 800b158:	d1f5      	bne.n	800b146 <_Convert8+0x18>
 800b15a:	2f1f      	cmp	r7, #31
 800b15c:	d806      	bhi.n	800b16c <_Convert8+0x3e>
 800b15e:	4630      	mov	r0, r6
 800b160:	4641      	mov	r1, r8
 800b162:	463a      	mov	r2, r7
 800b164:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b168:	f001 b96c 	b.w	800c444 <GUI__CompactPixelIndices>
 800b16c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b170 <GUI_MEMDEV__WriteToActiveOpaque>:
 800b170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b174:	b09d      	sub	sp, #116	; 0x74
 800b176:	4606      	mov	r6, r0
 800b178:	910f      	str	r1, [sp, #60]	; 0x3c
 800b17a:	920d      	str	r2, [sp, #52]	; 0x34
 800b17c:	2800      	cmp	r0, #0
 800b17e:	f000 8386 	beq.w	800b88e <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800b182:	f7fe fb5f 	bl	8009844 <GUI_ALLOC_LockH>
 800b186:	ab1c      	add	r3, sp, #112	; 0x70
 800b188:	6944      	ldr	r4, [r0, #20]
 800b18a:	f843 0d1c 	str.w	r0, [r3, #-28]!
 800b18e:	4618      	mov	r0, r3
 800b190:	f7fe fb66 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b194:	4630      	mov	r0, r6
 800b196:	f7fb fc69 	bl	8006a6c <GUI_MEMDEV_GetBitsPerPixel>
 800b19a:	2808      	cmp	r0, #8
 800b19c:	4601      	mov	r1, r0
 800b19e:	dd02      	ble.n	800b1a6 <GUI_MEMDEV__WriteToActiveOpaque+0x36>
 800b1a0:	2c00      	cmp	r4, #0
 800b1a2:	f000 81c3 	beq.w	800b52c <GUI_MEMDEV__WriteToActiveOpaque+0x3bc>
 800b1a6:	2201      	movs	r2, #1
 800b1a8:	f04f 0800 	mov.w	r8, #0
 800b1ac:	4630      	mov	r0, r6
 800b1ae:	921b      	str	r2, [sp, #108]	; 0x6c
 800b1b0:	920b      	str	r2, [sp, #44]	; 0x2c
 800b1b2:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 800b1b6:	f7fe fb45 	bl	8009844 <GUI_ALLOC_LockH>
 800b1ba:	6803      	ldr	r3, [r0, #0]
 800b1bc:	f8df a60c 	ldr.w	sl, [pc, #1548]	; 800b7cc <GUI_MEMDEV__WriteToActiveOpaque+0x65c>
 800b1c0:	691b      	ldr	r3, [r3, #16]
 800b1c2:	f9b0 100a 	ldrsh.w	r1, [r0, #10]
 800b1c6:	685b      	ldr	r3, [r3, #4]
 800b1c8:	930e      	str	r3, [sp, #56]	; 0x38
 800b1ca:	f10d 0b70 	add.w	fp, sp, #112	; 0x70
 800b1ce:	f8da 3000 	ldr.w	r3, [sl]
 800b1d2:	f84b 0d14 	str.w	r0, [fp, #-20]!
 800b1d6:	6904      	ldr	r4, [r0, #16]
 800b1d8:	6945      	ldr	r5, [r0, #20]
 800b1da:	f8d0 900c 	ldr.w	r9, [r0, #12]
 800b1de:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 800b1e2:	7c58      	ldrb	r0, [r3, #17]
 800b1e4:	9112      	str	r1, [sp, #72]	; 0x48
 800b1e6:	f7fb fd99 	bl	8006d1c <GUI_GetBitsPerPixelEx>
 800b1ea:	f8da 3000 	ldr.w	r3, [sl]
 800b1ee:	9010      	str	r0, [sp, #64]	; 0x40
 800b1f0:	7c58      	ldrb	r0, [r3, #17]
 800b1f2:	f7fb fd9f 	bl	8006d34 <GUI_GetpfIndex2ColorEx>
 800b1f6:	4603      	mov	r3, r0
 800b1f8:	4658      	mov	r0, fp
 800b1fa:	9309      	str	r3, [sp, #36]	; 0x24
 800b1fc:	f7fe fb30 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b200:	2c08      	cmp	r4, #8
 800b202:	4651      	mov	r1, sl
 800b204:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b206:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b208:	d904      	bls.n	800b214 <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 800b20a:	2c10      	cmp	r4, #16
 800b20c:	bf8c      	ite	hi
 800b20e:	2204      	movhi	r2, #4
 800b210:	2202      	movls	r2, #2
 800b212:	e005      	b.n	800b220 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 800b214:	2c01      	cmp	r4, #1
 800b216:	d103      	bne.n	800b220 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 800b218:	9411      	str	r4, [sp, #68]	; 0x44
 800b21a:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 800b21e:	e000      	b.n	800b222 <GUI_MEMDEV__WriteToActiveOpaque+0xb2>
 800b220:	9211      	str	r2, [sp, #68]	; 0x44
 800b222:	980e      	ldr	r0, [sp, #56]	; 0x38
 800b224:	4298      	cmp	r0, r3
 800b226:	f000 80e2 	beq.w	800b3ee <GUI_MEMDEV__WriteToActiveOpaque+0x27e>
 800b22a:	680b      	ldr	r3, [r1, #0]
 800b22c:	7c58      	ldrb	r0, [r3, #17]
 800b22e:	f7fb fd89 	bl	8006d44 <GUI_GetpfColor2IndexEx>
 800b232:	9013      	str	r0, [sp, #76]	; 0x4c
 800b234:	00b8      	lsls	r0, r7, #2
 800b236:	f7fe fcc9 	bl	8009bcc <GUI_ALLOC_AllocNoInit>
 800b23a:	900c      	str	r0, [sp, #48]	; 0x30
 800b23c:	2800      	cmp	r0, #0
 800b23e:	f000 8326 	beq.w	800b88e <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800b242:	4630      	mov	r0, r6
 800b244:	f7fa fdaa 	bl	8005d9c <GUI_MEMDEV_GetDataPtr>
 800b248:	4606      	mov	r6, r0
 800b24a:	2d00      	cmp	r5, #0
 800b24c:	f000 80be 	beq.w	800b3cc <GUI_MEMDEV__WriteToActiveOpaque+0x25c>
 800b250:	4628      	mov	r0, r5
 800b252:	f7fe faf7 	bl	8009844 <GUI_ALLOC_LockH>
 800b256:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 800b25a:	9018      	str	r0, [sp, #96]	; 0x60
 800b25c:	f04f 0a00 	mov.w	sl, #0
 800b260:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800b262:	4592      	cmp	sl, r2
 800b264:	f280 80ae 	bge.w	800b3c4 <GUI_MEMDEV__WriteToActiveOpaque+0x254>
 800b268:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b26a:	2300      	movs	r3, #0
 800b26c:	9319      	str	r3, [sp, #100]	; 0x64
 800b26e:	6883      	ldr	r3, [r0, #8]
 800b270:	a919      	add	r1, sp, #100	; 0x64
 800b272:	695b      	ldr	r3, [r3, #20]
 800b274:	4652      	mov	r2, sl
 800b276:	4798      	blx	r3
 800b278:	42b8      	cmp	r0, r7
 800b27a:	4605      	mov	r5, r0
 800b27c:	d12f      	bne.n	800b2de <GUI_MEMDEV__WriteToActiveOpaque+0x16e>
 800b27e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800b280:	f7fe fae0 	bl	8009844 <GUI_ALLOC_LockH>
 800b284:	2c08      	cmp	r4, #8
 800b286:	4601      	mov	r1, r0
 800b288:	9016      	str	r0, [sp, #88]	; 0x58
 800b28a:	d909      	bls.n	800b2a0 <GUI_MEMDEV__WriteToActiveOpaque+0x130>
 800b28c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b28e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b290:	9200      	str	r2, [sp, #0]
 800b292:	9301      	str	r3, [sp, #4]
 800b294:	4630      	mov	r0, r6
 800b296:	463a      	mov	r2, r7
 800b298:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b29a:	f7ff ff29 	bl	800b0f0 <_Convert16>
 800b29e:	e008      	b.n	800b2b2 <GUI_MEMDEV__WriteToActiveOpaque+0x142>
 800b2a0:	980e      	ldr	r0, [sp, #56]	; 0x38
 800b2a2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800b2a4:	9000      	str	r0, [sp, #0]
 800b2a6:	9201      	str	r2, [sp, #4]
 800b2a8:	4630      	mov	r0, r6
 800b2aa:	463a      	mov	r2, r7
 800b2ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b2ae:	f7ff ff3e 	bl	800b12e <_Convert8>
 800b2b2:	2301      	movs	r3, #1
 800b2b4:	9810      	ldr	r0, [sp, #64]	; 0x40
 800b2b6:	9002      	str	r0, [sp, #8]
 800b2b8:	ad1c      	add	r5, sp, #112	; 0x70
 800b2ba:	2200      	movs	r2, #0
 800b2bc:	9300      	str	r3, [sp, #0]
 800b2be:	9301      	str	r3, [sp, #4]
 800b2c0:	9203      	str	r2, [sp, #12]
 800b2c2:	f855 2d18 	ldr.w	r2, [r5, #-24]!
 800b2c6:	9204      	str	r2, [sp, #16]
 800b2c8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800b2ca:	f8cd 8014 	str.w	r8, [sp, #20]
 800b2ce:	4659      	mov	r1, fp
 800b2d0:	463a      	mov	r2, r7
 800b2d2:	f7fb ff35 	bl	8007140 <LCD_DrawBitmap>
 800b2d6:	4628      	mov	r0, r5
 800b2d8:	f7fe fac2 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b2dc:	e060      	b.n	800b3a0 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 800b2de:	2c01      	cmp	r4, #1
 800b2e0:	d15c      	bne.n	800b39c <GUI_MEMDEV__WriteToActiveOpaque+0x22c>
 800b2e2:	2d00      	cmp	r5, #0
 800b2e4:	d05c      	beq.n	800b3a0 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 800b2e6:	9819      	ldr	r0, [sp, #100]	; 0x64
 800b2e8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800b2ea:	f8cd 900c 	str.w	r9, [sp, #12]
 800b2ee:	2208      	movs	r2, #8
 800b2f0:	fb90 f2f2 	sdiv	r2, r0, r2
 800b2f4:	4432      	add	r2, r6
 800b2f6:	2301      	movs	r3, #1
 800b2f8:	9204      	str	r2, [sp, #16]
 800b2fa:	f000 0207 	and.w	r2, r0, #7
 800b2fe:	9300      	str	r3, [sp, #0]
 800b300:	4408      	add	r0, r1
 800b302:	9301      	str	r3, [sp, #4]
 800b304:	9302      	str	r3, [sp, #8]
 800b306:	9206      	str	r2, [sp, #24]
 800b308:	4659      	mov	r1, fp
 800b30a:	462a      	mov	r2, r5
 800b30c:	f8cd 8014 	str.w	r8, [sp, #20]
 800b310:	f7fb fe3a 	bl	8006f88 <LCD__DrawBitmap_1bpp>
 800b314:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b316:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b318:	441d      	add	r5, r3
 800b31a:	6883      	ldr	r3, [r0, #8]
 800b31c:	9519      	str	r5, [sp, #100]	; 0x64
 800b31e:	695b      	ldr	r3, [r3, #20]
 800b320:	a919      	add	r1, sp, #100	; 0x64
 800b322:	4652      	mov	r2, sl
 800b324:	4798      	blx	r3
 800b326:	4605      	mov	r5, r0
 800b328:	e7db      	b.n	800b2e2 <GUI_MEMDEV__WriteToActiveOpaque+0x172>
 800b32a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800b32c:	f7fe fa8a 	bl	8009844 <GUI_ALLOC_LockH>
 800b330:	2c08      	cmp	r4, #8
 800b332:	4601      	mov	r1, r0
 800b334:	9016      	str	r0, [sp, #88]	; 0x58
 800b336:	9819      	ldr	r0, [sp, #100]	; 0x64
 800b338:	d938      	bls.n	800b3ac <GUI_MEMDEV__WriteToActiveOpaque+0x23c>
 800b33a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b33c:	9200      	str	r2, [sp, #0]
 800b33e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800b340:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b342:	9301      	str	r3, [sp, #4]
 800b344:	fb00 6002 	mla	r0, r0, r2, r6
 800b348:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b34a:	462a      	mov	r2, r5
 800b34c:	f7ff fed0 	bl	800b0f0 <_Convert16>
 800b350:	2301      	movs	r3, #1
 800b352:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 800b356:	9810      	ldr	r0, [sp, #64]	; 0x40
 800b358:	9300      	str	r3, [sp, #0]
 800b35a:	2200      	movs	r2, #0
 800b35c:	9301      	str	r3, [sp, #4]
 800b35e:	9002      	str	r0, [sp, #8]
 800b360:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800b362:	9203      	str	r2, [sp, #12]
 800b364:	9819      	ldr	r0, [sp, #100]	; 0x64
 800b366:	f85c 2d18 	ldr.w	r2, [ip, #-24]!
 800b36a:	9204      	str	r2, [sp, #16]
 800b36c:	4408      	add	r0, r1
 800b36e:	462a      	mov	r2, r5
 800b370:	4659      	mov	r1, fp
 800b372:	f8cd 8014 	str.w	r8, [sp, #20]
 800b376:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 800b37a:	f7fb fee1 	bl	8007140 <LCD_DrawBitmap>
 800b37e:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 800b382:	4660      	mov	r0, ip
 800b384:	f7fe fa6c 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b388:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b38a:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b38c:	441d      	add	r5, r3
 800b38e:	6883      	ldr	r3, [r0, #8]
 800b390:	9519      	str	r5, [sp, #100]	; 0x64
 800b392:	695b      	ldr	r3, [r3, #20]
 800b394:	a919      	add	r1, sp, #100	; 0x64
 800b396:	4652      	mov	r2, sl
 800b398:	4798      	blx	r3
 800b39a:	4605      	mov	r5, r0
 800b39c:	2d00      	cmp	r5, #0
 800b39e:	d1c4      	bne.n	800b32a <GUI_MEMDEV__WriteToActiveOpaque+0x1ba>
 800b3a0:	444e      	add	r6, r9
 800b3a2:	f10a 0a01 	add.w	sl, sl, #1
 800b3a6:	f10b 0b01 	add.w	fp, fp, #1
 800b3aa:	e759      	b.n	800b260 <GUI_MEMDEV__WriteToActiveOpaque+0xf0>
 800b3ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b3ae:	9300      	str	r3, [sp, #0]
 800b3b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b3b2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800b3b4:	9201      	str	r2, [sp, #4]
 800b3b6:	fb00 6003 	mla	r0, r0, r3, r6
 800b3ba:	462a      	mov	r2, r5
 800b3bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b3be:	f7ff feb6 	bl	800b12e <_Convert8>
 800b3c2:	e7c5      	b.n	800b350 <GUI_MEMDEV__WriteToActiveOpaque+0x1e0>
 800b3c4:	a818      	add	r0, sp, #96	; 0x60
 800b3c6:	f7fe fa4b 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b3ca:	e00e      	b.n	800b3ea <GUI_MEMDEV__WriteToActiveOpaque+0x27a>
 800b3cc:	2301      	movs	r3, #1
 800b3ce:	9300      	str	r3, [sp, #0]
 800b3d0:	9301      	str	r3, [sp, #4]
 800b3d2:	9004      	str	r0, [sp, #16]
 800b3d4:	9402      	str	r4, [sp, #8]
 800b3d6:	f8cd 900c 	str.w	r9, [sp, #12]
 800b3da:	f8cd 8014 	str.w	r8, [sp, #20]
 800b3de:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800b3e0:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b3e2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b3e4:	463a      	mov	r2, r7
 800b3e6:	f7fb feab 	bl	8007140 <LCD_DrawBitmap>
 800b3ea:	980c      	ldr	r0, [sp, #48]	; 0x30
 800b3ec:	e24d      	b.n	800b88a <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 800b3ee:	4630      	mov	r0, r6
 800b3f0:	f7fa fcd4 	bl	8005d9c <GUI_MEMDEV_GetDataPtr>
 800b3f4:	4606      	mov	r6, r0
 800b3f6:	2d00      	cmp	r5, #0
 800b3f8:	f000 808a 	beq.w	800b510 <GUI_MEMDEV__WriteToActiveOpaque+0x3a0>
 800b3fc:	4628      	mov	r0, r5
 800b3fe:	f7fe fa21 	bl	8009844 <GUI_ALLOC_LockH>
 800b402:	2500      	movs	r5, #0
 800b404:	9018      	str	r0, [sp, #96]	; 0x60
 800b406:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b408:	429d      	cmp	r5, r3
 800b40a:	da7d      	bge.n	800b508 <GUI_MEMDEV__WriteToActiveOpaque+0x398>
 800b40c:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b40e:	2300      	movs	r3, #0
 800b410:	9319      	str	r3, [sp, #100]	; 0x64
 800b412:	6883      	ldr	r3, [r0, #8]
 800b414:	a919      	add	r1, sp, #100	; 0x64
 800b416:	695b      	ldr	r3, [r3, #20]
 800b418:	462a      	mov	r2, r5
 800b41a:	4798      	blx	r3
 800b41c:	42b8      	cmp	r0, r7
 800b41e:	4682      	mov	sl, r0
 800b420:	d124      	bne.n	800b46c <GUI_MEMDEV__WriteToActiveOpaque+0x2fc>
 800b422:	46aa      	mov	sl, r5
 800b424:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b426:	6883      	ldr	r3, [r0, #8]
 800b428:	f10a 0b01 	add.w	fp, sl, #1
 800b42c:	695b      	ldr	r3, [r3, #20]
 800b42e:	a919      	add	r1, sp, #100	; 0x64
 800b430:	465a      	mov	r2, fp
 800b432:	4798      	blx	r3
 800b434:	42b8      	cmp	r0, r7
 800b436:	d101      	bne.n	800b43c <GUI_MEMDEV__WriteToActiveOpaque+0x2cc>
 800b438:	46da      	mov	sl, fp
 800b43a:	e7f3      	b.n	800b424 <GUI_MEMDEV__WriteToActiveOpaque+0x2b4>
 800b43c:	ebc5 0b0a 	rsb	fp, r5, sl
 800b440:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b442:	9604      	str	r6, [sp, #16]
 800b444:	2301      	movs	r3, #1
 800b446:	f10b 0b01 	add.w	fp, fp, #1
 800b44a:	9300      	str	r3, [sp, #0]
 800b44c:	9301      	str	r3, [sp, #4]
 800b44e:	4429      	add	r1, r5
 800b450:	9402      	str	r4, [sp, #8]
 800b452:	f8cd 900c 	str.w	r9, [sp, #12]
 800b456:	f8cd 8014 	str.w	r8, [sp, #20]
 800b45a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800b45c:	463a      	mov	r2, r7
 800b45e:	465b      	mov	r3, fp
 800b460:	f7fb fe6e 	bl	8007140 <LCD_DrawBitmap>
 800b464:	fb09 660b 	mla	r6, r9, fp, r6
 800b468:	4655      	mov	r5, sl
 800b46a:	e04b      	b.n	800b504 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 800b46c:	2c01      	cmp	r4, #1
 800b46e:	d127      	bne.n	800b4c0 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 800b470:	f1ba 0f00 	cmp.w	sl, #0
 800b474:	d022      	beq.n	800b4bc <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 800b476:	9819      	ldr	r0, [sp, #100]	; 0x64
 800b478:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800b47a:	f8cd 900c 	str.w	r9, [sp, #12]
 800b47e:	2208      	movs	r2, #8
 800b480:	fb90 f2f2 	sdiv	r2, r0, r2
 800b484:	4432      	add	r2, r6
 800b486:	9204      	str	r2, [sp, #16]
 800b488:	f000 0207 	and.w	r2, r0, #7
 800b48c:	4408      	add	r0, r1
 800b48e:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b490:	9206      	str	r2, [sp, #24]
 800b492:	2301      	movs	r3, #1
 800b494:	4652      	mov	r2, sl
 800b496:	9300      	str	r3, [sp, #0]
 800b498:	9301      	str	r3, [sp, #4]
 800b49a:	9302      	str	r3, [sp, #8]
 800b49c:	4429      	add	r1, r5
 800b49e:	f8cd 8014 	str.w	r8, [sp, #20]
 800b4a2:	f7fb fd71 	bl	8006f88 <LCD__DrawBitmap_1bpp>
 800b4a6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b4a8:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b4aa:	4453      	add	r3, sl
 800b4ac:	9319      	str	r3, [sp, #100]	; 0x64
 800b4ae:	6883      	ldr	r3, [r0, #8]
 800b4b0:	a919      	add	r1, sp, #100	; 0x64
 800b4b2:	695b      	ldr	r3, [r3, #20]
 800b4b4:	462a      	mov	r2, r5
 800b4b6:	4798      	blx	r3
 800b4b8:	4682      	mov	sl, r0
 800b4ba:	e7d9      	b.n	800b470 <GUI_MEMDEV__WriteToActiveOpaque+0x300>
 800b4bc:	444e      	add	r6, r9
 800b4be:	e021      	b.n	800b504 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 800b4c0:	f1ba 0f00 	cmp.w	sl, #0
 800b4c4:	d0fa      	beq.n	800b4bc <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 800b4c6:	9819      	ldr	r0, [sp, #100]	; 0x64
 800b4c8:	9911      	ldr	r1, [sp, #68]	; 0x44
 800b4ca:	9402      	str	r4, [sp, #8]
 800b4cc:	fb00 6201 	mla	r2, r0, r1, r6
 800b4d0:	9204      	str	r2, [sp, #16]
 800b4d2:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b4d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800b4d6:	f8cd 900c 	str.w	r9, [sp, #12]
 800b4da:	2301      	movs	r3, #1
 800b4dc:	4410      	add	r0, r2
 800b4de:	9300      	str	r3, [sp, #0]
 800b4e0:	4652      	mov	r2, sl
 800b4e2:	9301      	str	r3, [sp, #4]
 800b4e4:	4429      	add	r1, r5
 800b4e6:	f8cd 8014 	str.w	r8, [sp, #20]
 800b4ea:	f7fb fe29 	bl	8007140 <LCD_DrawBitmap>
 800b4ee:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b4f0:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b4f2:	4453      	add	r3, sl
 800b4f4:	9319      	str	r3, [sp, #100]	; 0x64
 800b4f6:	6883      	ldr	r3, [r0, #8]
 800b4f8:	a919      	add	r1, sp, #100	; 0x64
 800b4fa:	695b      	ldr	r3, [r3, #20]
 800b4fc:	462a      	mov	r2, r5
 800b4fe:	4798      	blx	r3
 800b500:	4682      	mov	sl, r0
 800b502:	e7dd      	b.n	800b4c0 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 800b504:	3501      	adds	r5, #1
 800b506:	e77e      	b.n	800b406 <GUI_MEMDEV__WriteToActiveOpaque+0x296>
 800b508:	a818      	add	r0, sp, #96	; 0x60
 800b50a:	f7fe f9a9 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b50e:	e1be      	b.n	800b88e <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800b510:	2301      	movs	r3, #1
 800b512:	9300      	str	r3, [sp, #0]
 800b514:	9301      	str	r3, [sp, #4]
 800b516:	9004      	str	r0, [sp, #16]
 800b518:	9402      	str	r4, [sp, #8]
 800b51a:	f8cd 900c 	str.w	r9, [sp, #12]
 800b51e:	f8cd 8014 	str.w	r8, [sp, #20]
 800b522:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800b524:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b526:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b528:	463a      	mov	r2, r7
 800b52a:	e041      	b.n	800b5b0 <GUI_MEMDEV__WriteToActiveOpaque+0x440>
 800b52c:	4630      	mov	r0, r6
 800b52e:	910a      	str	r1, [sp, #40]	; 0x28
 800b530:	f7fe f988 	bl	8009844 <GUI_ALLOC_LockH>
 800b534:	4682      	mov	sl, r0
 800b536:	a81c      	add	r0, sp, #112	; 0x70
 800b538:	f8ba 200a 	ldrh.w	r2, [sl, #10]
 800b53c:	f840 ad10 	str.w	sl, [r0, #-16]!
 800b540:	f8da 4000 	ldr.w	r4, [sl]
 800b544:	9210      	str	r2, [sp, #64]	; 0x40
 800b546:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800b54a:	f8ba 7008 	ldrh.w	r7, [sl, #8]
 800b54e:	4c9e      	ldr	r4, [pc, #632]	; (800b7c8 <GUI_MEMDEV__WriteToActiveOpaque+0x658>)
 800b550:	b213      	sxth	r3, r2
 800b552:	f8da 200c 	ldr.w	r2, [sl, #12]
 800b556:	920b      	str	r2, [sp, #44]	; 0x2c
 800b558:	9309      	str	r3, [sp, #36]	; 0x24
 800b55a:	f7fe f981 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b55e:	f8d9 0004 	ldr.w	r0, [r9, #4]
 800b562:	900e      	str	r0, [sp, #56]	; 0x38
 800b564:	4899      	ldr	r0, [pc, #612]	; (800b7cc <GUI_MEMDEV__WriteToActiveOpaque+0x65c>)
 800b566:	6800      	ldr	r0, [r0, #0]
 800b568:	7c40      	ldrb	r0, [r0, #17]
 800b56a:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
 800b56e:	6925      	ldr	r5, [r4, #16]
 800b570:	f8d5 8000 	ldr.w	r8, [r5]
 800b574:	f7fb fbd2 	bl	8006d1c <GUI_GetBitsPerPixelEx>
 800b578:	2808      	cmp	r0, #8
 800b57a:	fa0f fb87 	sxth.w	fp, r7
 800b57e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800b580:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b582:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b584:	d904      	bls.n	800b590 <GUI_MEMDEV__WriteToActiveOpaque+0x420>
 800b586:	2810      	cmp	r0, #16
 800b588:	bf8c      	ite	hi
 800b58a:	2404      	movhi	r4, #4
 800b58c:	2402      	movls	r4, #2
 800b58e:	e000      	b.n	800b592 <GUI_MEMDEV__WriteToActiveOpaque+0x422>
 800b590:	2401      	movs	r4, #1
 800b592:	45a9      	cmp	r9, r5
 800b594:	d10f      	bne.n	800b5b6 <GUI_MEMDEV__WriteToActiveOpaque+0x446>
 800b596:	2001      	movs	r0, #1
 800b598:	9203      	str	r2, [sp, #12]
 800b59a:	f10a 0218 	add.w	r2, sl, #24
 800b59e:	9000      	str	r0, [sp, #0]
 800b5a0:	9001      	str	r0, [sp, #4]
 800b5a2:	9102      	str	r1, [sp, #8]
 800b5a4:	9204      	str	r2, [sp, #16]
 800b5a6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800b5a8:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b5aa:	2200      	movs	r2, #0
 800b5ac:	9205      	str	r2, [sp, #20]
 800b5ae:	465a      	mov	r2, fp
 800b5b0:	f7fb fdc6 	bl	8007140 <LCD_DrawBitmap>
 800b5b4:	e16b      	b.n	800b88e <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800b5b6:	2920      	cmp	r1, #32
 800b5b8:	f040 808e 	bne.w	800b6d8 <GUI_MEMDEV__WriteToActiveOpaque+0x568>
 800b5bc:	fb0b f004 	mul.w	r0, fp, r4
 800b5c0:	f7fe fb04 	bl	8009bcc <GUI_ALLOC_AllocNoInit>
 800b5c4:	900e      	str	r0, [sp, #56]	; 0x38
 800b5c6:	2800      	cmp	r0, #0
 800b5c8:	f000 8161 	beq.w	800b88e <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800b5cc:	f7fe f93a 	bl	8009844 <GUI_ALLOC_LockH>
 800b5d0:	901a      	str	r0, [sp, #104]	; 0x68
 800b5d2:	4630      	mov	r0, r6
 800b5d4:	f7fe f936 	bl	8009844 <GUI_ALLOC_LockH>
 800b5d8:	9018      	str	r0, [sp, #96]	; 0x60
 800b5da:	692b      	ldr	r3, [r5, #16]
 800b5dc:	f100 0a18 	add.w	sl, r0, #24
 800b5e0:	ea4f 068b 	mov.w	r6, fp, lsl #2
 800b5e4:	ea4f 09c4 	mov.w	r9, r4, lsl #3
 800b5e8:	2b00      	cmp	r3, #0
 800b5ea:	d02f      	beq.n	800b64c <GUI_MEMDEV__WriteToActiveOpaque+0x4dc>
 800b5ec:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 800b5f0:	2c02      	cmp	r4, #2
 800b5f2:	d003      	beq.n	800b5fc <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 800b5f4:	2c04      	cmp	r4, #4
 800b5f6:	d001      	beq.n	800b5fc <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 800b5f8:	2c01      	cmp	r4, #1
 800b5fa:	d106      	bne.n	800b60a <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 800b5fc:	4650      	mov	r0, sl
 800b5fe:	692f      	ldr	r7, [r5, #16]
 800b600:	991a      	ldr	r1, [sp, #104]	; 0x68
 800b602:	465a      	mov	r2, fp
 800b604:	4623      	mov	r3, r4
 800b606:	47b8      	blx	r7
 800b608:	44b2      	add	sl, r6
 800b60a:	2301      	movs	r3, #1
 800b60c:	2200      	movs	r2, #0
 800b60e:	991a      	ldr	r1, [sp, #104]	; 0x68
 800b610:	9300      	str	r3, [sp, #0]
 800b612:	9301      	str	r3, [sp, #4]
 800b614:	9203      	str	r2, [sp, #12]
 800b616:	9104      	str	r1, [sp, #16]
 800b618:	9205      	str	r2, [sp, #20]
 800b61a:	4641      	mov	r1, r8
 800b61c:	465a      	mov	r2, fp
 800b61e:	f8cd 9008 	str.w	r9, [sp, #8]
 800b622:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800b624:	f7fb fd8c 	bl	8007140 <LCD_DrawBitmap>
 800b628:	9910      	ldr	r1, [sp, #64]	; 0x40
 800b62a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b62c:	f108 0701 	add.w	r7, r8, #1
 800b630:	fa02 f381 	sxtah	r3, r2, r1
 800b634:	42bb      	cmp	r3, r7
 800b636:	d107      	bne.n	800b648 <GUI_MEMDEV__WriteToActiveOpaque+0x4d8>
 800b638:	a818      	add	r0, sp, #96	; 0x60
 800b63a:	f7fe f911 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b63e:	a81a      	add	r0, sp, #104	; 0x68
 800b640:	f7fe f90e 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b644:	980e      	ldr	r0, [sp, #56]	; 0x38
 800b646:	e120      	b.n	800b88a <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 800b648:	46b8      	mov	r8, r7
 800b64a:	e7d1      	b.n	800b5f0 <GUI_MEMDEV__WriteToActiveOpaque+0x480>
 800b64c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800b64e:	2c02      	cmp	r4, #2
 800b650:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800b652:	d00e      	beq.n	800b672 <GUI_MEMDEV__WriteToActiveOpaque+0x502>
 800b654:	2c04      	cmp	r4, #4
 800b656:	d018      	beq.n	800b68a <GUI_MEMDEV__WriteToActiveOpaque+0x51a>
 800b658:	2c01      	cmp	r4, #1
 800b65a:	d125      	bne.n	800b6a8 <GUI_MEMDEV__WriteToActiveOpaque+0x538>
 800b65c:	2300      	movs	r3, #0
 800b65e:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 800b662:	9309      	str	r3, [sp, #36]	; 0x24
 800b664:	47c0      	blx	r8
 800b666:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b668:	54f8      	strb	r0, [r7, r3]
 800b66a:	3301      	adds	r3, #1
 800b66c:	459b      	cmp	fp, r3
 800b66e:	d1f6      	bne.n	800b65e <GUI_MEMDEV__WriteToActiveOpaque+0x4ee>
 800b670:	e019      	b.n	800b6a6 <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 800b672:	2300      	movs	r3, #0
 800b674:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 800b678:	9309      	str	r3, [sp, #36]	; 0x24
 800b67a:	47c0      	blx	r8
 800b67c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b67e:	f827 0013 	strh.w	r0, [r7, r3, lsl #1]
 800b682:	3301      	adds	r3, #1
 800b684:	459b      	cmp	fp, r3
 800b686:	d1f5      	bne.n	800b674 <GUI_MEMDEV__WriteToActiveOpaque+0x504>
 800b688:	e00d      	b.n	800b6a6 <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 800b68a:	465a      	mov	r2, fp
 800b68c:	2300      	movs	r3, #0
 800b68e:	f85a 0003 	ldr.w	r0, [sl, r3]
 800b692:	920b      	str	r2, [sp, #44]	; 0x2c
 800b694:	9309      	str	r3, [sp, #36]	; 0x24
 800b696:	47c0      	blx	r8
 800b698:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b69a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b69c:	3a01      	subs	r2, #1
 800b69e:	50f8      	str	r0, [r7, r3]
 800b6a0:	f103 0304 	add.w	r3, r3, #4
 800b6a4:	d1f3      	bne.n	800b68e <GUI_MEMDEV__WriteToActiveOpaque+0x51e>
 800b6a6:	44b2      	add	sl, r6
 800b6a8:	2301      	movs	r3, #1
 800b6aa:	2200      	movs	r2, #0
 800b6ac:	991a      	ldr	r1, [sp, #104]	; 0x68
 800b6ae:	9300      	str	r3, [sp, #0]
 800b6b0:	9301      	str	r3, [sp, #4]
 800b6b2:	9203      	str	r2, [sp, #12]
 800b6b4:	9104      	str	r1, [sp, #16]
 800b6b6:	9205      	str	r2, [sp, #20]
 800b6b8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800b6ba:	f8cd 9008 	str.w	r9, [sp, #8]
 800b6be:	4629      	mov	r1, r5
 800b6c0:	465a      	mov	r2, fp
 800b6c2:	f7fb fd3d 	bl	8007140 <LCD_DrawBitmap>
 800b6c6:	9810      	ldr	r0, [sp, #64]	; 0x40
 800b6c8:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b6ca:	1c6f      	adds	r7, r5, #1
 800b6cc:	fa01 f380 	sxtah	r3, r1, r0
 800b6d0:	42bb      	cmp	r3, r7
 800b6d2:	d0b1      	beq.n	800b638 <GUI_MEMDEV__WriteToActiveOpaque+0x4c8>
 800b6d4:	463d      	mov	r5, r7
 800b6d6:	e7ba      	b.n	800b64e <GUI_MEMDEV__WriteToActiveOpaque+0x4de>
 800b6d8:	2910      	cmp	r1, #16
 800b6da:	f040 80d8 	bne.w	800b88e <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800b6de:	fa0f fa87 	sxth.w	sl, r7
 800b6e2:	fb0a f004 	mul.w	r0, sl, r4
 800b6e6:	f7fe fa71 	bl	8009bcc <GUI_ALLOC_AllocNoInit>
 800b6ea:	9012      	str	r0, [sp, #72]	; 0x48
 800b6ec:	2800      	cmp	r0, #0
 800b6ee:	f000 80ce 	beq.w	800b88e <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800b6f2:	f7fe f8a7 	bl	8009844 <GUI_ALLOC_LockH>
 800b6f6:	901a      	str	r0, [sp, #104]	; 0x68
 800b6f8:	4630      	mov	r0, r6
 800b6fa:	f7fe f8a3 	bl	8009844 <GUI_ALLOC_LockH>
 800b6fe:	9018      	str	r0, [sp, #96]	; 0x60
 800b700:	692b      	ldr	r3, [r5, #16]
 800b702:	f100 0618 	add.w	r6, r0, #24
 800b706:	b113      	cbz	r3, 800b70e <GUI_MEMDEV__WriteToActiveOpaque+0x59e>
 800b708:	f8d9 3014 	ldr.w	r3, [r9, #20]
 800b70c:	b92b      	cbnz	r3, 800b71a <GUI_MEMDEV__WriteToActiveOpaque+0x5aa>
 800b70e:	00e2      	lsls	r2, r4, #3
 800b710:	b23f      	sxth	r7, r7
 800b712:	9211      	str	r2, [sp, #68]	; 0x44
 800b714:	007f      	lsls	r7, r7, #1
 800b716:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800b718:	e088      	b.n	800b82c <GUI_MEMDEV__WriteToActiveOpaque+0x6bc>
 800b71a:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 800b71e:	0080      	lsls	r0, r0, #2
 800b720:	f7fe fa54 	bl	8009bcc <GUI_ALLOC_AllocNoInit>
 800b724:	9011      	str	r0, [sp, #68]	; 0x44
 800b726:	b118      	cbz	r0, 800b730 <GUI_MEMDEV__WriteToActiveOpaque+0x5c0>
 800b728:	f7fe f88c 	bl	8009844 <GUI_ALLOC_LockH>
 800b72c:	9019      	str	r0, [sp, #100]	; 0x64
 800b72e:	e001      	b.n	800b734 <GUI_MEMDEV__WriteToActiveOpaque+0x5c4>
 800b730:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b732:	9319      	str	r3, [sp, #100]	; 0x64
 800b734:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b736:	2b00      	cmp	r3, #0
 800b738:	f000 80a0 	beq.w	800b87c <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800b73c:	b23f      	sxth	r7, r7
 800b73e:	007f      	lsls	r7, r7, #1
 800b740:	970e      	str	r7, [sp, #56]	; 0x38
 800b742:	00e7      	lsls	r7, r4, #3
 800b744:	9713      	str	r7, [sp, #76]	; 0x4c
 800b746:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800b748:	970c      	str	r7, [sp, #48]	; 0x30
 800b74a:	2c02      	cmp	r4, #2
 800b74c:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800b750:	d004      	beq.n	800b75c <GUI_MEMDEV__WriteToActiveOpaque+0x5ec>
 800b752:	2c04      	cmp	r4, #4
 800b754:	d007      	beq.n	800b766 <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 800b756:	2c01      	cmp	r4, #1
 800b758:	d114      	bne.n	800b784 <GUI_MEMDEV__WriteToActiveOpaque+0x614>
 800b75a:	e004      	b.n	800b766 <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 800b75c:	4630      	mov	r0, r6
 800b75e:	9919      	ldr	r1, [sp, #100]	; 0x64
 800b760:	4652      	mov	r2, sl
 800b762:	4623      	mov	r3, r4
 800b764:	e003      	b.n	800b76e <GUI_MEMDEV__WriteToActiveOpaque+0x5fe>
 800b766:	9919      	ldr	r1, [sp, #100]	; 0x64
 800b768:	4630      	mov	r0, r6
 800b76a:	4652      	mov	r2, sl
 800b76c:	2302      	movs	r3, #2
 800b76e:	f8d9 7014 	ldr.w	r7, [r9, #20]
 800b772:	47b8      	blx	r7
 800b774:	692f      	ldr	r7, [r5, #16]
 800b776:	9819      	ldr	r0, [sp, #100]	; 0x64
 800b778:	4641      	mov	r1, r8
 800b77a:	4652      	mov	r2, sl
 800b77c:	4623      	mov	r3, r4
 800b77e:	47b8      	blx	r7
 800b780:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800b782:	443e      	add	r6, r7
 800b784:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800b786:	991a      	ldr	r1, [sp, #104]	; 0x68
 800b788:	9104      	str	r1, [sp, #16]
 800b78a:	2301      	movs	r3, #1
 800b78c:	2200      	movs	r2, #0
 800b78e:	f107 0801 	add.w	r8, r7, #1
 800b792:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 800b794:	9300      	str	r3, [sp, #0]
 800b796:	9301      	str	r3, [sp, #4]
 800b798:	9702      	str	r7, [sp, #8]
 800b79a:	9203      	str	r2, [sp, #12]
 800b79c:	9205      	str	r2, [sp, #20]
 800b79e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800b7a0:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b7a2:	465a      	mov	r2, fp
 800b7a4:	f7fb fccc 	bl	8007140 <LCD_DrawBitmap>
 800b7a8:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800b7aa:	980d      	ldr	r0, [sp, #52]	; 0x34
 800b7ac:	fa00 f387 	sxtah	r3, r0, r7
 800b7b0:	4543      	cmp	r3, r8
 800b7b2:	d002      	beq.n	800b7ba <GUI_MEMDEV__WriteToActiveOpaque+0x64a>
 800b7b4:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800b7b8:	e7c7      	b.n	800b74a <GUI_MEMDEV__WriteToActiveOpaque+0x5da>
 800b7ba:	a819      	add	r0, sp, #100	; 0x64
 800b7bc:	f7fe f850 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b7c0:	9811      	ldr	r0, [sp, #68]	; 0x44
 800b7c2:	f7fe f871 	bl	80098a8 <GUI_ALLOC_Free>
 800b7c6:	e059      	b.n	800b87c <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800b7c8:	200004d8 	.word	0x200004d8
 800b7cc:	200000b0 	.word	0x200000b0
 800b7d0:	2c04      	cmp	r4, #4
 800b7d2:	d041      	beq.n	800b858 <GUI_MEMDEV__WriteToActiveOpaque+0x6e8>
 800b7d4:	2c01      	cmp	r4, #1
 800b7d6:	d111      	bne.n	800b7fc <GUI_MEMDEV__WriteToActiveOpaque+0x68c>
 800b7d8:	464a      	mov	r2, r9
 800b7da:	4631      	mov	r1, r6
 800b7dc:	f831 0b02 	ldrh.w	r0, [r1], #2
 800b7e0:	910a      	str	r1, [sp, #40]	; 0x28
 800b7e2:	920b      	str	r2, [sp, #44]	; 0x2c
 800b7e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b7e6:	4798      	blx	r3
 800b7e8:	47c0      	blx	r8
 800b7ea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b7ec:	f802 0b01 	strb.w	r0, [r2], #1
 800b7f0:	eb09 000a 	add.w	r0, r9, sl
 800b7f4:	4282      	cmp	r2, r0
 800b7f6:	990a      	ldr	r1, [sp, #40]	; 0x28
 800b7f8:	d1f0      	bne.n	800b7dc <GUI_MEMDEV__WriteToActiveOpaque+0x66c>
 800b7fa:	443e      	add	r6, r7
 800b7fc:	2301      	movs	r3, #1
 800b7fe:	9811      	ldr	r0, [sp, #68]	; 0x44
 800b800:	991a      	ldr	r1, [sp, #104]	; 0x68
 800b802:	9300      	str	r3, [sp, #0]
 800b804:	2200      	movs	r2, #0
 800b806:	9301      	str	r3, [sp, #4]
 800b808:	9002      	str	r0, [sp, #8]
 800b80a:	9203      	str	r2, [sp, #12]
 800b80c:	9104      	str	r1, [sp, #16]
 800b80e:	9205      	str	r2, [sp, #20]
 800b810:	4629      	mov	r1, r5
 800b812:	465a      	mov	r2, fp
 800b814:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800b816:	f7fb fc93 	bl	8007140 <LCD_DrawBitmap>
 800b81a:	9910      	ldr	r1, [sp, #64]	; 0x40
 800b81c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b81e:	f105 0901 	add.w	r9, r5, #1
 800b822:	fa02 f381 	sxtah	r3, r2, r1
 800b826:	454b      	cmp	r3, r9
 800b828:	d028      	beq.n	800b87c <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800b82a:	464d      	mov	r5, r9
 800b82c:	2c02      	cmp	r4, #2
 800b82e:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
 800b832:	d1cd      	bne.n	800b7d0 <GUI_MEMDEV__WriteToActiveOpaque+0x660>
 800b834:	464b      	mov	r3, r9
 800b836:	4631      	mov	r1, r6
 800b838:	46d9      	mov	r9, fp
 800b83a:	f831 0b02 	ldrh.w	r0, [r1], #2
 800b83e:	910a      	str	r1, [sp, #40]	; 0x28
 800b840:	9309      	str	r3, [sp, #36]	; 0x24
 800b842:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b844:	4790      	blx	r2
 800b846:	47c0      	blx	r8
 800b848:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b84a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800b84c:	f823 0b02 	strh.w	r0, [r3], #2
 800b850:	f1b9 0901 	subs.w	r9, r9, #1
 800b854:	d1f1      	bne.n	800b83a <GUI_MEMDEV__WriteToActiveOpaque+0x6ca>
 800b856:	e7d0      	b.n	800b7fa <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 800b858:	464b      	mov	r3, r9
 800b85a:	4631      	mov	r1, r6
 800b85c:	46d9      	mov	r9, fp
 800b85e:	f831 0b02 	ldrh.w	r0, [r1], #2
 800b862:	910a      	str	r1, [sp, #40]	; 0x28
 800b864:	9309      	str	r3, [sp, #36]	; 0x24
 800b866:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b868:	4790      	blx	r2
 800b86a:	47c0      	blx	r8
 800b86c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b86e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800b870:	f843 0b04 	str.w	r0, [r3], #4
 800b874:	f1b9 0901 	subs.w	r9, r9, #1
 800b878:	d1f1      	bne.n	800b85e <GUI_MEMDEV__WriteToActiveOpaque+0x6ee>
 800b87a:	e7be      	b.n	800b7fa <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 800b87c:	a818      	add	r0, sp, #96	; 0x60
 800b87e:	f7fd ffef 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b882:	a81a      	add	r0, sp, #104	; 0x68
 800b884:	f7fd ffec 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b888:	9812      	ldr	r0, [sp, #72]	; 0x48
 800b88a:	f7fe f80d 	bl	80098a8 <GUI_ALLOC_Free>
 800b88e:	b01d      	add	sp, #116	; 0x74
 800b890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b894 <GUI_MEMDEV__WriteToActiveAlpha>:
 800b894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b898:	4d5f      	ldr	r5, [pc, #380]	; (800ba18 <GUI_MEMDEV__WriteToActiveAlpha+0x184>)
 800b89a:	4f60      	ldr	r7, [pc, #384]	; (800ba1c <GUI_MEMDEV__WriteToActiveAlpha+0x188>)
 800b89c:	682b      	ldr	r3, [r5, #0]
 800b89e:	7c5b      	ldrb	r3, [r3, #17]
 800b8a0:	b091      	sub	sp, #68	; 0x44
 800b8a2:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 800b8a6:	900d      	str	r0, [sp, #52]	; 0x34
 800b8a8:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800b8ac:	460e      	mov	r6, r1
 800b8ae:	4614      	mov	r4, r2
 800b8b0:	f7fd ffc8 	bl	8009844 <GUI_ALLOC_LockH>
 800b8b4:	4602      	mov	r2, r0
 800b8b6:	a810      	add	r0, sp, #64	; 0x40
 800b8b8:	6813      	ldr	r3, [r2, #0]
 800b8ba:	f840 2d08 	str.w	r2, [r0, #-8]!
 800b8be:	691b      	ldr	r3, [r3, #16]
 800b8c0:	f8b2 a008 	ldrh.w	sl, [r2, #8]
 800b8c4:	685b      	ldr	r3, [r3, #4]
 800b8c6:	f8b2 900a 	ldrh.w	r9, [r2, #10]
 800b8ca:	9309      	str	r3, [sp, #36]	; 0x24
 800b8cc:	f7fd ffc8 	bl	8009860 <GUI_ALLOC_UnlockH>
 800b8d0:	682b      	ldr	r3, [r5, #0]
 800b8d2:	7c5b      	ldrb	r3, [r3, #17]
 800b8d4:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 800b8d8:	68c3      	ldr	r3, [r0, #12]
 800b8da:	2108      	movs	r1, #8
 800b8dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b8de:	4798      	blx	r3
 800b8e0:	2817      	cmp	r0, #23
 800b8e2:	bf88      	it	hi
 800b8e4:	2020      	movhi	r0, #32
 800b8e6:	9008      	str	r0, [sp, #32]
 800b8e8:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800b8ec:	f8d8 2000 	ldr.w	r2, [r8]
 800b8f0:	910a      	str	r1, [sp, #40]	; 0x28
 800b8f2:	2000      	movs	r0, #0
 800b8f4:	920b      	str	r2, [sp, #44]	; 0x2c
 800b8f6:	f7fc f8c3 	bl	8007a80 <GUI__AllocAlphaBuffer>
 800b8fa:	2800      	cmp	r0, #0
 800b8fc:	f040 8089 	bne.w	800ba12 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800b900:	682a      	ldr	r2, [r5, #0]
 800b902:	fa0f f78a 	sxth.w	r7, sl
 800b906:	19f5      	adds	r5, r6, r7
 800b908:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
 800b90c:	3d01      	subs	r5, #1
 800b90e:	1aed      	subs	r5, r5, r3
 800b910:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 800b914:	2d00      	cmp	r5, #0
 800b916:	bfcc      	ite	gt
 800b918:	ebc5 0507 	rsbgt	r5, r5, r7
 800b91c:	463d      	movle	r5, r7
 800b91e:	42b3      	cmp	r3, r6
 800b920:	bfc3      	ittte	gt
 800b922:	ebc6 0103 	rsbgt	r1, r6, r3
 800b926:	ebc1 0505 	rsbgt	r5, r1, r5
 800b92a:	461e      	movgt	r6, r3
 800b92c:	2100      	movle	r1, #0
 800b92e:	2d00      	cmp	r5, #0
 800b930:	dd6f      	ble.n	800ba12 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800b932:	fa0f f389 	sxth.w	r3, r9
 800b936:	18e0      	adds	r0, r4, r3
 800b938:	f9b2 c00e 	ldrsh.w	ip, [r2, #14]
 800b93c:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 800b940:	3801      	subs	r0, #1
 800b942:	ebcc 0000 	rsb	r0, ip, r0
 800b946:	2800      	cmp	r0, #0
 800b948:	bfc8      	it	gt
 800b94a:	ebc0 0303 	rsbgt	r3, r0, r3
 800b94e:	4294      	cmp	r4, r2
 800b950:	bfbd      	ittte	lt
 800b952:	ebc4 0b02 	rsblt	fp, r4, r2
 800b956:	ebcb 0303 	rsblt	r3, fp, r3
 800b95a:	4614      	movlt	r4, r2
 800b95c:	f04f 0b00 	movge.w	fp, #0
 800b960:	2b00      	cmp	r3, #0
 800b962:	dd56      	ble.n	800ba12 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800b964:	fb07 1b0b 	mla	fp, r7, fp, r1
 800b968:	18e3      	adds	r3, r4, r3
 800b96a:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800b96e:	930c      	str	r3, [sp, #48]	; 0x30
 800b970:	980d      	ldr	r0, [sp, #52]	; 0x34
 800b972:	f7fa fa13 	bl	8005d9c <GUI_MEMDEV_GetDataPtr>
 800b976:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b978:	9300      	str	r3, [sp, #0]
 800b97a:	ab0f      	add	r3, sp, #60	; 0x3c
 800b97c:	eb00 020b 	add.w	r2, r0, fp
 800b980:	9301      	str	r3, [sp, #4]
 800b982:	4630      	mov	r0, r6
 800b984:	4621      	mov	r1, r4
 800b986:	462b      	mov	r3, r5
 800b988:	f7fb ff90 	bl	80078ac <GUI__DoAlphaBlending>
 800b98c:	4681      	mov	r9, r0
 800b98e:	2800      	cmp	r0, #0
 800b990:	d03f      	beq.n	800ba12 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800b992:	4b23      	ldr	r3, [pc, #140]	; (800ba20 <GUI_MEMDEV__WriteToActiveAlpha+0x18c>)
 800b994:	990a      	ldr	r1, [sp, #40]	; 0x28
 800b996:	4299      	cmp	r1, r3
 800b998:	d01e      	beq.n	800b9d8 <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800b99a:	4629      	mov	r1, r5
 800b99c:	9a08      	ldr	r2, [sp, #32]
 800b99e:	4643      	mov	r3, r8
 800b9a0:	f000 feda 	bl	800c758 <GUI__CompactPixelIndicesEx>
 800b9a4:	b9c0      	cbnz	r0, 800b9d8 <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800b9a6:	f8d8 c010 	ldr.w	ip, [r8, #16]
 800b9aa:	f1bc 0f00 	cmp.w	ip, #0
 800b9ae:	d006      	beq.n	800b9be <GUI_MEMDEV__WriteToActiveAlpha+0x12a>
 800b9b0:	4648      	mov	r0, r9
 800b9b2:	4649      	mov	r1, r9
 800b9b4:	fa0f f28a 	sxth.w	r2, sl
 800b9b8:	2304      	movs	r3, #4
 800b9ba:	47e0      	blx	ip
 800b9bc:	e00c      	b.n	800b9d8 <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800b9be:	464a      	mov	r2, r9
 800b9c0:	463b      	mov	r3, r7
 800b9c2:	6810      	ldr	r0, [r2, #0]
 800b9c4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b9c6:	9206      	str	r2, [sp, #24]
 800b9c8:	9307      	str	r3, [sp, #28]
 800b9ca:	4788      	blx	r1
 800b9cc:	9b07      	ldr	r3, [sp, #28]
 800b9ce:	9a06      	ldr	r2, [sp, #24]
 800b9d0:	3b01      	subs	r3, #1
 800b9d2:	f842 0b04 	str.w	r0, [r2], #4
 800b9d6:	d1f4      	bne.n	800b9c2 <GUI_MEMDEV__WriteToActiveAlpha+0x12e>
 800b9d8:	9a08      	ldr	r2, [sp, #32]
 800b9da:	9202      	str	r2, [sp, #8]
 800b9dc:	2301      	movs	r3, #1
 800b9de:	2200      	movs	r2, #0
 800b9e0:	f104 0c01 	add.w	ip, r4, #1
 800b9e4:	9300      	str	r3, [sp, #0]
 800b9e6:	9301      	str	r3, [sp, #4]
 800b9e8:	9203      	str	r2, [sp, #12]
 800b9ea:	9205      	str	r2, [sp, #20]
 800b9ec:	f8cd 9010 	str.w	r9, [sp, #16]
 800b9f0:	4630      	mov	r0, r6
 800b9f2:	4621      	mov	r1, r4
 800b9f4:	462a      	mov	r2, r5
 800b9f6:	f8cd c01c 	str.w	ip, [sp, #28]
 800b9fa:	f7fb fba1 	bl	8007140 <LCD_DrawBitmap>
 800b9fe:	2304      	movs	r3, #4
 800ba00:	fb1a bb03 	smlabb	fp, sl, r3, fp
 800ba04:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800ba08:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ba0a:	459c      	cmp	ip, r3
 800ba0c:	d001      	beq.n	800ba12 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800ba0e:	4664      	mov	r4, ip
 800ba10:	e7ae      	b.n	800b970 <GUI_MEMDEV__WriteToActiveAlpha+0xdc>
 800ba12:	b011      	add	sp, #68	; 0x44
 800ba14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba18:	200000b0 	.word	0x200000b0
 800ba1c:	200004d8 	.word	0x200004d8
 800ba20:	08009d3b 	.word	0x08009d3b

0800ba24 <GUI_MEMDEV_WriteAt>:
 800ba24:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ba26:	460c      	mov	r4, r1
 800ba28:	4615      	mov	r5, r2
 800ba2a:	4606      	mov	r6, r0
 800ba2c:	b330      	cbz	r0, 800ba7c <GUI_MEMDEV_WriteAt+0x58>
 800ba2e:	f7fd ff09 	bl	8009844 <GUI_ALLOC_LockH>
 800ba32:	4a13      	ldr	r2, [pc, #76]	; (800ba80 <GUI_MEMDEV_WriteAt+0x5c>)
 800ba34:	8943      	ldrh	r3, [r0, #10]
 800ba36:	9001      	str	r0, [sp, #4]
 800ba38:	4294      	cmp	r4, r2
 800ba3a:	8902      	ldrh	r2, [r0, #8]
 800ba3c:	bf04      	itt	eq
 800ba3e:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 800ba42:	f9b0 5006 	ldrsheq.w	r5, [r0, #6]
 800ba46:	f8ad 4008 	strh.w	r4, [sp, #8]
 800ba4a:	3a01      	subs	r2, #1
 800ba4c:	3b01      	subs	r3, #1
 800ba4e:	4422      	add	r2, r4
 800ba50:	442b      	add	r3, r5
 800ba52:	a801      	add	r0, sp, #4
 800ba54:	f8ad 200c 	strh.w	r2, [sp, #12]
 800ba58:	f8ad 500a 	strh.w	r5, [sp, #10]
 800ba5c:	f8ad 300e 	strh.w	r3, [sp, #14]
 800ba60:	f7fd fefe 	bl	8009860 <GUI_ALLOC_UnlockH>
 800ba64:	a802      	add	r0, sp, #8
 800ba66:	f7f9 feab 	bl	80057c0 <WM__InitIVRSearch>
 800ba6a:	b138      	cbz	r0, 800ba7c <GUI_MEMDEV_WriteAt+0x58>
 800ba6c:	4630      	mov	r0, r6
 800ba6e:	4621      	mov	r1, r4
 800ba70:	462a      	mov	r2, r5
 800ba72:	f7fa ff5d 	bl	8006930 <GUI_MEMDEV__WriteToActiveAt>
 800ba76:	f7f9 fde1 	bl	800563c <WM__GetNextIVR>
 800ba7a:	e7f6      	b.n	800ba6a <GUI_MEMDEV_WriteAt+0x46>
 800ba7c:	b004      	add	sp, #16
 800ba7e:	bd70      	pop	{r4, r5, r6, pc}
 800ba80:	fffff001 	.word	0xfffff001

0800ba84 <GUI_MEMDEV_Write>:
 800ba84:	4901      	ldr	r1, [pc, #4]	; (800ba8c <GUI_MEMDEV_Write+0x8>)
 800ba86:	460a      	mov	r2, r1
 800ba88:	f7ff bfcc 	b.w	800ba24 <GUI_MEMDEV_WriteAt>
 800ba8c:	fffff001 	.word	0xfffff001

0800ba90 <GUI_USAGE_BM_AddPixel>:
 800ba90:	4603      	mov	r3, r0
 800ba92:	b510      	push	{r4, lr}
 800ba94:	f933 4b14 	ldrsh.w	r4, [r3], #20
 800ba98:	1b09      	subs	r1, r1, r4
 800ba9a:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800ba9e:	6900      	ldr	r0, [r0, #16]
 800baa0:	1b12      	subs	r2, r2, r4
 800baa2:	fb00 3302 	mla	r3, r0, r2, r3
 800baa6:	10c8      	asrs	r0, r1, #3
 800baa8:	2280      	movs	r2, #128	; 0x80
 800baaa:	f001 0107 	and.w	r1, r1, #7
 800baae:	fa42 f101 	asr.w	r1, r2, r1
 800bab2:	5c1a      	ldrb	r2, [r3, r0]
 800bab4:	4311      	orrs	r1, r2
 800bab6:	5419      	strb	r1, [r3, r0]
 800bab8:	bd10      	pop	{r4, pc}

0800baba <GUI_USAGE_BM_GetNextDirty>:
 800baba:	b570      	push	{r4, r5, r6, lr}
 800babc:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800bac0:	680b      	ldr	r3, [r1, #0]
 800bac2:	8886      	ldrh	r6, [r0, #4]
 800bac4:	42a2      	cmp	r2, r4
 800bac6:	da41      	bge.n	800bb4c <GUI_USAGE_BM_GetNextDirty+0x92>
 800bac8:	b236      	sxth	r6, r6
 800baca:	42b3      	cmp	r3, r6
 800bacc:	6904      	ldr	r4, [r0, #16]
 800bace:	da3d      	bge.n	800bb4c <GUI_USAGE_BM_GetNextDirty+0x92>
 800bad0:	3014      	adds	r0, #20
 800bad2:	fb04 0202 	mla	r2, r4, r2, r0
 800bad6:	10dd      	asrs	r5, r3, #3
 800bad8:	1e70      	subs	r0, r6, #1
 800bada:	1954      	adds	r4, r2, r5
 800badc:	ebc5 00e0 	rsb	r0, r5, r0, asr #3
 800bae0:	5d55      	ldrb	r5, [r2, r5]
 800bae2:	f003 0207 	and.w	r2, r3, #7
 800bae6:	fa05 f202 	lsl.w	r2, r5, r2
 800baea:	3401      	adds	r4, #1
 800baec:	b2d2      	uxtb	r2, r2
 800baee:	b93a      	cbnz	r2, 800bb00 <GUI_USAGE_BM_GetNextDirty+0x46>
 800baf0:	b368      	cbz	r0, 800bb4e <GUI_USAGE_BM_GetNextDirty+0x94>
 800baf2:	3308      	adds	r3, #8
 800baf4:	f814 2b01 	ldrb.w	r2, [r4], #1
 800baf8:	3801      	subs	r0, #1
 800bafa:	f023 0307 	bic.w	r3, r3, #7
 800bafe:	e7f6      	b.n	800baee <GUI_USAGE_BM_GetNextDirty+0x34>
 800bb00:	0615      	lsls	r5, r2, #24
 800bb02:	d403      	bmi.n	800bb0c <GUI_USAGE_BM_GetNextDirty+0x52>
 800bb04:	0052      	lsls	r2, r2, #1
 800bb06:	b2d2      	uxtb	r2, r2
 800bb08:	3301      	adds	r3, #1
 800bb0a:	e7f9      	b.n	800bb00 <GUI_USAGE_BM_GetNextDirty+0x46>
 800bb0c:	2aff      	cmp	r2, #255	; 0xff
 800bb0e:	461d      	mov	r5, r3
 800bb10:	d005      	beq.n	800bb1e <GUI_USAGE_BM_GetNextDirty+0x64>
 800bb12:	0656      	lsls	r6, r2, #25
 800bb14:	d504      	bpl.n	800bb20 <GUI_USAGE_BM_GetNextDirty+0x66>
 800bb16:	0052      	lsls	r2, r2, #1
 800bb18:	b2d2      	uxtb	r2, r2
 800bb1a:	3301      	adds	r3, #1
 800bb1c:	e7f9      	b.n	800bb12 <GUI_USAGE_BM_GetNextDirty+0x58>
 800bb1e:	3307      	adds	r3, #7
 800bb20:	f003 0207 	and.w	r2, r3, #7
 800bb24:	2a07      	cmp	r2, #7
 800bb26:	d10d      	bne.n	800bb44 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800bb28:	3801      	subs	r0, #1
 800bb2a:	d40b      	bmi.n	800bb44 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800bb2c:	f814 2b01 	ldrb.w	r2, [r4], #1
 800bb30:	2aff      	cmp	r2, #255	; 0xff
 800bb32:	d101      	bne.n	800bb38 <GUI_USAGE_BM_GetNextDirty+0x7e>
 800bb34:	3308      	adds	r3, #8
 800bb36:	e7f7      	b.n	800bb28 <GUI_USAGE_BM_GetNextDirty+0x6e>
 800bb38:	0610      	lsls	r0, r2, #24
 800bb3a:	d503      	bpl.n	800bb44 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800bb3c:	0052      	lsls	r2, r2, #1
 800bb3e:	b2d2      	uxtb	r2, r2
 800bb40:	3301      	adds	r3, #1
 800bb42:	e7f9      	b.n	800bb38 <GUI_USAGE_BM_GetNextDirty+0x7e>
 800bb44:	1b58      	subs	r0, r3, r5
 800bb46:	600d      	str	r5, [r1, #0]
 800bb48:	3001      	adds	r0, #1
 800bb4a:	bd70      	pop	{r4, r5, r6, pc}
 800bb4c:	2000      	movs	r0, #0
 800bb4e:	bd70      	pop	{r4, r5, r6, pc}

0800bb50 <_GUI_USAGE_BM_Delete>:
 800bb50:	f7fd beaa 	b.w	80098a8 <GUI_ALLOC_Free>

0800bb54 <GUI_USAGE_BM_Clear>:
 800bb54:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800bb58:	6902      	ldr	r2, [r0, #16]
 800bb5a:	2100      	movs	r1, #0
 800bb5c:	3014      	adds	r0, #20
 800bb5e:	435a      	muls	r2, r3
 800bb60:	f001 bc32 	b.w	800d3c8 <memset>

0800bb64 <GUI_USAGE_BM_AddHLine>:
 800bb64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bb66:	f9b0 4000 	ldrsh.w	r4, [r0]
 800bb6a:	1b09      	subs	r1, r1, r4
 800bb6c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800bb70:	42a1      	cmp	r1, r4
 800bb72:	da2f      	bge.n	800bbd4 <GUI_USAGE_BM_AddHLine+0x70>
 800bb74:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 800bb78:	440b      	add	r3, r1
 800bb7a:	f100 0414 	add.w	r4, r0, #20
 800bb7e:	3b01      	subs	r3, #1
 800bb80:	6900      	ldr	r0, [r0, #16]
 800bb82:	1b52      	subs	r2, r2, r5
 800bb84:	43de      	mvns	r6, r3
 800bb86:	fb00 4202 	mla	r2, r0, r2, r4
 800bb8a:	f001 0707 	and.w	r7, r1, #7
 800bb8e:	10cc      	asrs	r4, r1, #3
 800bb90:	f006 0607 	and.w	r6, r6, #7
 800bb94:	21ff      	movs	r1, #255	; 0xff
 800bb96:	fa41 f707 	asr.w	r7, r1, r7
 800bb9a:	fa01 f606 	lsl.w	r6, r1, r6
 800bb9e:	ebd4 03e3 	rsbs	r3, r4, r3, asr #3
 800bba2:	eb02 0504 	add.w	r5, r2, r4
 800bba6:	b2ff      	uxtb	r7, r7
 800bba8:	b2f6      	uxtb	r6, r6
 800bbaa:	5d10      	ldrb	r0, [r2, r4]
 800bbac:	d103      	bne.n	800bbb6 <GUI_USAGE_BM_AddHLine+0x52>
 800bbae:	403e      	ands	r6, r7
 800bbb0:	4330      	orrs	r0, r6
 800bbb2:	5510      	strb	r0, [r2, r4]
 800bbb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bbb6:	4338      	orrs	r0, r7
 800bbb8:	5510      	strb	r0, [r2, r4]
 800bbba:	1e5c      	subs	r4, r3, #1
 800bbbc:	2c00      	cmp	r4, #0
 800bbbe:	f105 0501 	add.w	r5, r5, #1
 800bbc2:	dd04      	ble.n	800bbce <GUI_USAGE_BM_AddHLine+0x6a>
 800bbc4:	4628      	mov	r0, r5
 800bbc6:	4622      	mov	r2, r4
 800bbc8:	f001 fbfe 	bl	800d3c8 <memset>
 800bbcc:	4425      	add	r5, r4
 800bbce:	782b      	ldrb	r3, [r5, #0]
 800bbd0:	431e      	orrs	r6, r3
 800bbd2:	702e      	strb	r6, [r5, #0]
 800bbd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800bbd8 <GUI_USAGE_BM_Create>:
 800bbd8:	e92d 4fd3 	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, sl, fp, lr}
 800bbdc:	f102 060f 	add.w	r6, r2, #15
 800bbe0:	1136      	asrs	r6, r6, #4
 800bbe2:	0076      	lsls	r6, r6, #1
 800bbe4:	4682      	mov	sl, r0
 800bbe6:	fb06 f003 	mul.w	r0, r6, r3
 800bbea:	3014      	adds	r0, #20
 800bbec:	4689      	mov	r9, r1
 800bbee:	4690      	mov	r8, r2
 800bbf0:	461f      	mov	r7, r3
 800bbf2:	f7fe f819 	bl	8009c28 <GUI_ALLOC_AllocZero>
 800bbf6:	4683      	mov	fp, r0
 800bbf8:	b198      	cbz	r0, 800bc22 <GUI_USAGE_BM_Create+0x4a>
 800bbfa:	f7fd fe23 	bl	8009844 <GUI_ALLOC_LockH>
 800bbfe:	4604      	mov	r4, r0
 800bc00:	4b0a      	ldr	r3, [pc, #40]	; (800bc2c <GUI_USAGE_BM_Create+0x54>)
 800bc02:	60a3      	str	r3, [r4, #8]
 800bc04:	a802      	add	r0, sp, #8
 800bc06:	2301      	movs	r3, #1
 800bc08:	f840 4d04 	str.w	r4, [r0, #-4]!
 800bc0c:	f8a4 8004 	strh.w	r8, [r4, #4]
 800bc10:	f8a4 a000 	strh.w	sl, [r4]
 800bc14:	f8a4 9002 	strh.w	r9, [r4, #2]
 800bc18:	80e7      	strh	r7, [r4, #6]
 800bc1a:	81a3      	strh	r3, [r4, #12]
 800bc1c:	6126      	str	r6, [r4, #16]
 800bc1e:	f7fd fe1f 	bl	8009860 <GUI_ALLOC_UnlockH>
 800bc22:	4658      	mov	r0, fp
 800bc24:	b002      	add	sp, #8
 800bc26:	e8bd 8fd0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
 800bc2a:	bf00      	nop
 800bc2c:	0800f6e8 	.word	0x0800f6e8

0800bc30 <GUI_USAGE_DecUseCnt>:
 800bc30:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bc32:	4605      	mov	r5, r0
 800bc34:	f7fd fe06 	bl	8009844 <GUI_ALLOC_LockH>
 800bc38:	4602      	mov	r2, r0
 800bc3a:	a802      	add	r0, sp, #8
 800bc3c:	8994      	ldrh	r4, [r2, #12]
 800bc3e:	f840 2d04 	str.w	r2, [r0, #-4]!
 800bc42:	3c01      	subs	r4, #1
 800bc44:	b2a4      	uxth	r4, r4
 800bc46:	8194      	strh	r4, [r2, #12]
 800bc48:	f7fd fe0a 	bl	8009860 <GUI_ALLOC_UnlockH>
 800bc4c:	b914      	cbnz	r4, 800bc54 <GUI_USAGE_DecUseCnt+0x24>
 800bc4e:	4628      	mov	r0, r5
 800bc50:	f7fd fe2a 	bl	80098a8 <GUI_ALLOC_Free>
 800bc54:	b003      	add	sp, #12
 800bc56:	bd30      	pop	{r4, r5, pc}

0800bc58 <GUI_USAGE_AddRect>:
 800bc58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800bc5c:	4605      	mov	r5, r0
 800bc5e:	4688      	mov	r8, r1
 800bc60:	4617      	mov	r7, r2
 800bc62:	4699      	mov	r9, r3
 800bc64:	68a8      	ldr	r0, [r5, #8]
 800bc66:	464b      	mov	r3, r9
 800bc68:	6846      	ldr	r6, [r0, #4]
 800bc6a:	4641      	mov	r1, r8
 800bc6c:	4628      	mov	r0, r5
 800bc6e:	1c54      	adds	r4, r2, #1
 800bc70:	47b0      	blx	r6
 800bc72:	9b08      	ldr	r3, [sp, #32]
 800bc74:	443b      	add	r3, r7
 800bc76:	42a3      	cmp	r3, r4
 800bc78:	d001      	beq.n	800bc7e <GUI_USAGE_AddRect+0x26>
 800bc7a:	4622      	mov	r2, r4
 800bc7c:	e7f2      	b.n	800bc64 <GUI_USAGE_AddRect+0xc>
 800bc7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0800bc84 <GUI_MEMDEV_ReduceYSize>:
 800bc84:	b513      	push	{r0, r1, r4, lr}
 800bc86:	460c      	mov	r4, r1
 800bc88:	b918      	cbnz	r0, 800bc92 <GUI_MEMDEV_ReduceYSize+0xe>
 800bc8a:	4b08      	ldr	r3, [pc, #32]	; (800bcac <GUI_MEMDEV_ReduceYSize+0x28>)
 800bc8c:	681b      	ldr	r3, [r3, #0]
 800bc8e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800bc90:	b150      	cbz	r0, 800bca8 <GUI_MEMDEV_ReduceYSize+0x24>
 800bc92:	f7fd fdd7 	bl	8009844 <GUI_ALLOC_LockH>
 800bc96:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800bc9a:	9001      	str	r0, [sp, #4]
 800bc9c:	429c      	cmp	r4, r3
 800bc9e:	bfb8      	it	lt
 800bca0:	8144      	strhlt	r4, [r0, #10]
 800bca2:	a801      	add	r0, sp, #4
 800bca4:	f7fd fddc 	bl	8009860 <GUI_ALLOC_UnlockH>
 800bca8:	b002      	add	sp, #8
 800bcaa:	bd10      	pop	{r4, pc}
 800bcac:	200000b0 	.word	0x200000b0

0800bcb0 <GUI_MEMDEV_Clear>:
 800bcb0:	b513      	push	{r0, r1, r4, lr}
 800bcb2:	b918      	cbnz	r0, 800bcbc <GUI_MEMDEV_Clear+0xc>
 800bcb4:	4b0d      	ldr	r3, [pc, #52]	; (800bcec <GUI_MEMDEV_Clear+0x3c>)
 800bcb6:	681b      	ldr	r3, [r3, #0]
 800bcb8:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800bcba:	b1a8      	cbz	r0, 800bce8 <GUI_MEMDEV_Clear+0x38>
 800bcbc:	f7fd fdc2 	bl	8009844 <GUI_ALLOC_LockH>
 800bcc0:	ab02      	add	r3, sp, #8
 800bcc2:	6944      	ldr	r4, [r0, #20]
 800bcc4:	f843 0d08 	str.w	r0, [r3, #-8]!
 800bcc8:	4668      	mov	r0, sp
 800bcca:	f7fd fdc9 	bl	8009860 <GUI_ALLOC_UnlockH>
 800bcce:	b15c      	cbz	r4, 800bce8 <GUI_MEMDEV_Clear+0x38>
 800bcd0:	4620      	mov	r0, r4
 800bcd2:	f7fd fdb7 	bl	8009844 <GUI_ALLOC_LockH>
 800bcd6:	ac02      	add	r4, sp, #8
 800bcd8:	6883      	ldr	r3, [r0, #8]
 800bcda:	f844 0d04 	str.w	r0, [r4, #-4]!
 800bcde:	689b      	ldr	r3, [r3, #8]
 800bce0:	4798      	blx	r3
 800bce2:	4620      	mov	r0, r4
 800bce4:	f7fd fdbc 	bl	8009860 <GUI_ALLOC_UnlockH>
 800bce8:	b002      	add	sp, #8
 800bcea:	bd10      	pop	{r4, pc}
 800bcec:	200000b0 	.word	0x200000b0

0800bcf0 <LCD_SelectLCD>:
 800bcf0:	b510      	push	{r4, lr}
 800bcf2:	4b0d      	ldr	r3, [pc, #52]	; (800bd28 <LCD_SelectLCD+0x38>)
 800bcf4:	681a      	ldr	r2, [r3, #0]
 800bcf6:	7c51      	ldrb	r1, [r2, #17]
 800bcf8:	4a0c      	ldr	r2, [pc, #48]	; (800bd2c <LCD_SelectLCD+0x3c>)
 800bcfa:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 800bcfe:	461c      	mov	r4, r3
 800bd00:	b140      	cbz	r0, 800bd14 <LCD_SelectLCD+0x24>
 800bd02:	68c3      	ldr	r3, [r0, #12]
 800bd04:	b113      	cbz	r3, 800bd0c <LCD_SelectLCD+0x1c>
 800bd06:	681b      	ldr	r3, [r3, #0]
 800bd08:	2b04      	cmp	r3, #4
 800bd0a:	d001      	beq.n	800bd10 <LCD_SelectLCD+0x20>
 800bd0c:	6800      	ldr	r0, [r0, #0]
 800bd0e:	e7f7      	b.n	800bd00 <LCD_SelectLCD+0x10>
 800bd10:	f7fc ff52 	bl	8008bb8 <GUI_DEVICE_Unlink>
 800bd14:	6823      	ldr	r3, [r4, #0]
 800bd16:	2200      	movs	r2, #0
 800bd18:	661a      	str	r2, [r3, #96]	; 0x60
 800bd1a:	f103 0208 	add.w	r2, r3, #8
 800bd1e:	615a      	str	r2, [r3, #20]
 800bd20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bd24:	f7fb bb18 	b.w	8007358 <LCD_SetClipRectMax>
 800bd28:	200000b0 	.word	0x200000b0
 800bd2c:	200004d8 	.word	0x200004d8

0800bd30 <LCD_ReadRectEx>:
 800bd30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd34:	b087      	sub	sp, #28
 800bd36:	4617      	mov	r7, r2
 800bd38:	9304      	str	r3, [sp, #16]
 800bd3a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800bd3c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800bd3e:	68da      	ldr	r2, [r3, #12]
 800bd40:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800bd42:	f8d2 8014 	ldr.w	r8, [r2, #20]
 800bd46:	4606      	mov	r6, r0
 800bd48:	460d      	mov	r5, r1
 800bd4a:	b973      	cbnz	r3, 800bd6a <LCD_ReadRectEx+0x3a>
 800bd4c:	4b71      	ldr	r3, [pc, #452]	; (800bf14 <LCD_ReadRectEx+0x1e4>)
 800bd4e:	681b      	ldr	r3, [r3, #0]
 800bd50:	7c58      	ldrb	r0, [r3, #17]
 800bd52:	f7fa ffe3 	bl	8006d1c <GUI_GetBitsPerPixelEx>
 800bd56:	2808      	cmp	r0, #8
 800bd58:	4682      	mov	sl, r0
 800bd5a:	dd15      	ble.n	800bd88 <LCD_ReadRectEx+0x58>
 800bd5c:	2810      	cmp	r0, #16
 800bd5e:	bfcc      	ite	gt
 800bd60:	f04f 0904 	movgt.w	r9, #4
 800bd64:	f04f 0902 	movle.w	r9, #2
 800bd68:	e010      	b.n	800bd8c <LCD_ReadRectEx+0x5c>
 800bd6a:	a811      	add	r0, sp, #68	; 0x44
 800bd6c:	2101      	movs	r1, #1
 800bd6e:	4798      	blx	r3
 800bd70:	4684      	mov	ip, r0
 800bd72:	2800      	cmp	r0, #0
 800bd74:	d0ea      	beq.n	800bd4c <LCD_ReadRectEx+0x1c>
 800bd76:	9b04      	ldr	r3, [sp, #16]
 800bd78:	9811      	ldr	r0, [sp, #68]	; 0x44
 800bd7a:	e88d 0018 	stmia.w	sp, {r3, r4}
 800bd7e:	4631      	mov	r1, r6
 800bd80:	462a      	mov	r2, r5
 800bd82:	463b      	mov	r3, r7
 800bd84:	47e0      	blx	ip
 800bd86:	e0c1      	b.n	800bf0c <LCD_ReadRectEx+0x1dc>
 800bd88:	f04f 0901 	mov.w	r9, #1
 800bd8c:	f04f 0b00 	mov.w	fp, #0
 800bd90:	9b04      	ldr	r3, [sp, #16]
 800bd92:	429d      	cmp	r5, r3
 800bd94:	f300 80ba 	bgt.w	800bf0c <LCD_ReadRectEx+0x1dc>
 800bd98:	f1b9 0f02 	cmp.w	r9, #2
 800bd9c:	d009      	beq.n	800bdb2 <LCD_ReadRectEx+0x82>
 800bd9e:	f1b9 0f04 	cmp.w	r9, #4
 800bda2:	d004      	beq.n	800bdae <LCD_ReadRectEx+0x7e>
 800bda4:	f1b9 0f01 	cmp.w	r9, #1
 800bda8:	f040 80ae 	bne.w	800bf08 <LCD_ReadRectEx+0x1d8>
 800bdac:	e003      	b.n	800bdb6 <LCD_ReadRectEx+0x86>
 800bdae:	46b4      	mov	ip, r6
 800bdb0:	e09b      	b.n	800beea <LCD_ReadRectEx+0x1ba>
 800bdb2:	46b4      	mov	ip, r6
 800bdb4:	e08a      	b.n	800becc <LCD_ReadRectEx+0x19c>
 800bdb6:	f10a 32ff 	add.w	r2, sl, #4294967295
 800bdba:	2a07      	cmp	r2, #7
 800bdbc:	f200 80a4 	bhi.w	800bf08 <LCD_ReadRectEx+0x1d8>
 800bdc0:	e8df f002 	tbb	[pc, r2]
 800bdc4:	0606080a 	.word	0x0606080a
 800bdc8:	04040404 	.word	0x04040404
 800bdcc:	46b4      	mov	ip, r6
 800bdce:	e066      	b.n	800be9e <LCD_ReadRectEx+0x16e>
 800bdd0:	46b4      	mov	ip, r6
 800bdd2:	e047      	b.n	800be64 <LCD_ReadRectEx+0x134>
 800bdd4:	46b4      	mov	ip, r6
 800bdd6:	e022      	b.n	800be1e <LCD_ReadRectEx+0xee>
 800bdd8:	46b4      	mov	ip, r6
 800bdda:	45bc      	cmp	ip, r7
 800bddc:	f300 8094 	bgt.w	800bf08 <LCD_ReadRectEx+0x1d8>
 800bde0:	4661      	mov	r1, ip
 800bde2:	462a      	mov	r2, r5
 800bde4:	f8cd c00c 	str.w	ip, [sp, #12]
 800bde8:	9811      	ldr	r0, [sp, #68]	; 0x44
 800bdea:	47c0      	blx	r8
 800bdec:	f1cb 0207 	rsb	r2, fp, #7
 800bdf0:	fa00 f202 	lsl.w	r2, r0, r2
 800bdf4:	f64f 717f 	movw	r1, #65407	; 0xff7f
 800bdf8:	7820      	ldrb	r0, [r4, #0]
 800bdfa:	fa41 f10b 	asr.w	r1, r1, fp
 800bdfe:	4001      	ands	r1, r0
 800be00:	430a      	orrs	r2, r1
 800be02:	7022      	strb	r2, [r4, #0]
 800be04:	f10b 0301 	add.w	r3, fp, #1
 800be08:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800be0c:	f023 0207 	bic.w	r2, r3, #7
 800be10:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 800be14:	fa43 fb02 	asr.w	fp, r3, r2
 800be18:	f10c 0c01 	add.w	ip, ip, #1
 800be1c:	e7dd      	b.n	800bdda <LCD_ReadRectEx+0xaa>
 800be1e:	45bc      	cmp	ip, r7
 800be20:	dc72      	bgt.n	800bf08 <LCD_ReadRectEx+0x1d8>
 800be22:	4661      	mov	r1, ip
 800be24:	462a      	mov	r2, r5
 800be26:	f8cd c00c 	str.w	ip, [sp, #12]
 800be2a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800be2c:	47c0      	blx	r8
 800be2e:	ea4f 024b 	mov.w	r2, fp, lsl #1
 800be32:	f1c2 0106 	rsb	r1, r2, #6
 800be36:	fa00 f101 	lsl.w	r1, r0, r1
 800be3a:	f64f 703f 	movw	r0, #65343	; 0xff3f
 800be3e:	fa40 f202 	asr.w	r2, r0, r2
 800be42:	7820      	ldrb	r0, [r4, #0]
 800be44:	4002      	ands	r2, r0
 800be46:	4311      	orrs	r1, r2
 800be48:	7021      	strb	r1, [r4, #0]
 800be4a:	f10b 0301 	add.w	r3, fp, #1
 800be4e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800be52:	f023 0203 	bic.w	r2, r3, #3
 800be56:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 800be5a:	fa43 fb02 	asr.w	fp, r3, r2
 800be5e:	f10c 0c01 	add.w	ip, ip, #1
 800be62:	e7dc      	b.n	800be1e <LCD_ReadRectEx+0xee>
 800be64:	45bc      	cmp	ip, r7
 800be66:	dc4f      	bgt.n	800bf08 <LCD_ReadRectEx+0x1d8>
 800be68:	4661      	mov	r1, ip
 800be6a:	462a      	mov	r2, r5
 800be6c:	f8cd c00c 	str.w	ip, [sp, #12]
 800be70:	9811      	ldr	r0, [sp, #68]	; 0x44
 800be72:	47c0      	blx	r8
 800be74:	ea4f 028b 	mov.w	r2, fp, lsl #2
 800be78:	f1c2 0104 	rsb	r1, r2, #4
 800be7c:	fa00 f101 	lsl.w	r1, r0, r1
 800be80:	200f      	movs	r0, #15
 800be82:	fa00 f202 	lsl.w	r2, r0, r2
 800be86:	7820      	ldrb	r0, [r4, #0]
 800be88:	4002      	ands	r2, r0
 800be8a:	4311      	orrs	r1, r2
 800be8c:	7021      	strb	r1, [r4, #0]
 800be8e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800be92:	445c      	add	r4, fp
 800be94:	f10c 0c01 	add.w	ip, ip, #1
 800be98:	f08b 0b01 	eor.w	fp, fp, #1
 800be9c:	e7e2      	b.n	800be64 <LCD_ReadRectEx+0x134>
 800be9e:	4273      	negs	r3, r6
 800bea0:	1ba2      	subs	r2, r4, r6
 800bea2:	45bc      	cmp	ip, r7
 800bea4:	9305      	str	r3, [sp, #20]
 800bea6:	4462      	add	r2, ip
 800bea8:	dc0e      	bgt.n	800bec8 <LCD_ReadRectEx+0x198>
 800beaa:	4661      	mov	r1, ip
 800beac:	462a      	mov	r2, r5
 800beae:	f8cd c00c 	str.w	ip, [sp, #12]
 800beb2:	9811      	ldr	r0, [sp, #68]	; 0x44
 800beb4:	47c0      	blx	r8
 800beb6:	9a05      	ldr	r2, [sp, #20]
 800beb8:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800bebc:	4422      	add	r2, r4
 800bebe:	f802 000c 	strb.w	r0, [r2, ip]
 800bec2:	f10c 0c01 	add.w	ip, ip, #1
 800bec6:	e7ea      	b.n	800be9e <LCD_ReadRectEx+0x16e>
 800bec8:	4614      	mov	r4, r2
 800beca:	e01d      	b.n	800bf08 <LCD_ReadRectEx+0x1d8>
 800becc:	45bc      	cmp	ip, r7
 800bece:	dc1b      	bgt.n	800bf08 <LCD_ReadRectEx+0x1d8>
 800bed0:	4661      	mov	r1, ip
 800bed2:	f8cd c00c 	str.w	ip, [sp, #12]
 800bed6:	9811      	ldr	r0, [sp, #68]	; 0x44
 800bed8:	462a      	mov	r2, r5
 800beda:	47c0      	blx	r8
 800bedc:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800bee0:	f824 0b02 	strh.w	r0, [r4], #2
 800bee4:	f10c 0c01 	add.w	ip, ip, #1
 800bee8:	e7f0      	b.n	800becc <LCD_ReadRectEx+0x19c>
 800beea:	45bc      	cmp	ip, r7
 800beec:	dc0c      	bgt.n	800bf08 <LCD_ReadRectEx+0x1d8>
 800beee:	4661      	mov	r1, ip
 800bef0:	f8cd c00c 	str.w	ip, [sp, #12]
 800bef4:	9811      	ldr	r0, [sp, #68]	; 0x44
 800bef6:	462a      	mov	r2, r5
 800bef8:	47c0      	blx	r8
 800befa:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800befe:	f844 0b04 	str.w	r0, [r4], #4
 800bf02:	f10c 0c01 	add.w	ip, ip, #1
 800bf06:	e7f0      	b.n	800beea <LCD_ReadRectEx+0x1ba>
 800bf08:	3501      	adds	r5, #1
 800bf0a:	e741      	b.n	800bd90 <LCD_ReadRectEx+0x60>
 800bf0c:	b007      	add	sp, #28
 800bf0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bf12:	bf00      	nop
 800bf14:	200000b0 	.word	0x200000b0

0800bf18 <GUI_ReadRectEx>:
 800bf18:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bf1a:	4d16      	ldr	r5, [pc, #88]	; (800bf74 <GUI_ReadRectEx+0x5c>)
 800bf1c:	9e05      	ldr	r6, [sp, #20]
 800bf1e:	682d      	ldr	r5, [r5, #0]
 800bf20:	9c06      	ldr	r4, [sp, #24]
 800bf22:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 800bf26:	42b8      	cmp	r0, r7
 800bf28:	bfb8      	it	lt
 800bf2a:	4638      	movlt	r0, r7
 800bf2c:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 800bf30:	42ba      	cmp	r2, r7
 800bf32:	bfa8      	it	ge
 800bf34:	463a      	movge	r2, r7
 800bf36:	4282      	cmp	r2, r0
 800bf38:	db1b      	blt.n	800bf72 <GUI_ReadRectEx+0x5a>
 800bf3a:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800bf3e:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 800bf42:	42b9      	cmp	r1, r7
 800bf44:	bfb8      	it	lt
 800bf46:	4639      	movlt	r1, r7
 800bf48:	42ab      	cmp	r3, r5
 800bf4a:	bfa8      	it	ge
 800bf4c:	462b      	movge	r3, r5
 800bf4e:	428b      	cmp	r3, r1
 800bf50:	db0f      	blt.n	800bf72 <GUI_ReadRectEx+0x5a>
 800bf52:	68e5      	ldr	r5, [r4, #12]
 800bf54:	682d      	ldr	r5, [r5, #0]
 800bf56:	f035 0704 	bics.w	r7, r5, #4
 800bf5a:	d105      	bne.n	800bf68 <GUI_ReadRectEx+0x50>
 800bf5c:	9605      	str	r6, [sp, #20]
 800bf5e:	9406      	str	r4, [sp, #24]
 800bf60:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800bf64:	f7ff bee4 	b.w	800bd30 <LCD_ReadRectEx>
 800bf68:	6825      	ldr	r5, [r4, #0]
 800bf6a:	2d00      	cmp	r5, #0
 800bf6c:	d0f6      	beq.n	800bf5c <GUI_ReadRectEx+0x44>
 800bf6e:	462c      	mov	r4, r5
 800bf70:	e7ef      	b.n	800bf52 <GUI_ReadRectEx+0x3a>
 800bf72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bf74:	200000b0 	.word	0x200000b0

0800bf78 <LCD_GetBkColorIndex>:
 800bf78:	4b02      	ldr	r3, [pc, #8]	; (800bf84 <LCD_GetBkColorIndex+0xc>)
 800bf7a:	681b      	ldr	r3, [r3, #0]
 800bf7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bf7e:	6818      	ldr	r0, [r3, #0]
 800bf80:	4770      	bx	lr
 800bf82:	bf00      	nop
 800bf84:	200000b0 	.word	0x200000b0

0800bf88 <LCD_GetColorIndex>:
 800bf88:	4b02      	ldr	r3, [pc, #8]	; (800bf94 <LCD_GetColorIndex+0xc>)
 800bf8a:	681b      	ldr	r3, [r3, #0]
 800bf8c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bf8e:	6818      	ldr	r0, [r3, #0]
 800bf90:	4770      	bx	lr
 800bf92:	bf00      	nop
 800bf94:	200000b0 	.word	0x200000b0

0800bf98 <LCD_AA_SetAndMask>:
 800bf98:	4b02      	ldr	r3, [pc, #8]	; (800bfa4 <LCD_AA_SetAndMask+0xc>)
 800bf9a:	681a      	ldr	r2, [r3, #0]
 800bf9c:	6018      	str	r0, [r3, #0]
 800bf9e:	4610      	mov	r0, r2
 800bfa0:	4770      	bx	lr
 800bfa2:	bf00      	nop
 800bfa4:	2000017c 	.word	0x2000017c

0800bfa8 <_GetWordWrap>:
 800bfa8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800bfac:	2500      	movs	r5, #0
 800bfae:	9001      	str	r0, [sp, #4]
 800bfb0:	4689      	mov	r9, r1
 800bfb2:	4690      	mov	r8, r2
 800bfb4:	46aa      	mov	sl, r5
 800bfb6:	462e      	mov	r6, r5
 800bfb8:	462c      	mov	r4, r5
 800bfba:	462f      	mov	r7, r5
 800bfbc:	a801      	add	r0, sp, #4
 800bfbe:	f7fb fd83 	bl	8007ac8 <GUI_UC__GetCharCodeInc>
 800bfc2:	2d00      	cmp	r5, #0
 800bfc4:	bf08      	it	eq
 800bfc6:	4605      	moveq	r5, r0
 800bfc8:	b108      	cbz	r0, 800bfce <_GetWordWrap+0x26>
 800bfca:	280a      	cmp	r0, #10
 800bfcc:	d10b      	bne.n	800bfe6 <_GetWordWrap+0x3e>
 800bfce:	4626      	mov	r6, r4
 800bfd0:	2e00      	cmp	r6, #0
 800bfd2:	bf18      	it	ne
 800bfd4:	4634      	movne	r4, r6
 800bfd6:	f1b8 0f00 	cmp.w	r8, #0
 800bfda:	d025      	beq.n	800c028 <_GetWordWrap+0x80>
 800bfdc:	ebca 0707 	rsb	r7, sl, r7
 800bfe0:	f8c8 7000 	str.w	r7, [r8]
 800bfe4:	e020      	b.n	800c028 <_GetWordWrap+0x80>
 800bfe6:	2820      	cmp	r0, #32
 800bfe8:	d01c      	beq.n	800c024 <_GetWordWrap+0x7c>
 800bfea:	2d20      	cmp	r5, #32
 800bfec:	d00e      	beq.n	800c00c <_GetWordWrap+0x64>
 800bfee:	4b10      	ldr	r3, [pc, #64]	; (800c030 <_GetWordWrap+0x88>)
 800bff0:	6819      	ldr	r1, [r3, #0]
 800bff2:	4b10      	ldr	r3, [pc, #64]	; (800c034 <_GetWordWrap+0x8c>)
 800bff4:	681a      	ldr	r2, [r3, #0]
 800bff6:	2300      	movs	r3, #0
 800bff8:	4293      	cmp	r3, r2
 800bffa:	da09      	bge.n	800c010 <_GetWordWrap+0x68>
 800bffc:	f831 e013 	ldrh.w	lr, [r1, r3, lsl #1]
 800c000:	4586      	cmp	lr, r0
 800c002:	d101      	bne.n	800c008 <_GetWordWrap+0x60>
 800c004:	1c66      	adds	r6, r4, #1
 800c006:	e003      	b.n	800c010 <_GetWordWrap+0x68>
 800c008:	3301      	adds	r3, #1
 800c00a:	e7f5      	b.n	800bff8 <_GetWordWrap+0x50>
 800c00c:	4626      	mov	r6, r4
 800c00e:	2500      	movs	r5, #0
 800c010:	f7fd fb20 	bl	8009654 <GUI_GetCharDistX>
 800c014:	4407      	add	r7, r0
 800c016:	454f      	cmp	r7, r9
 800c018:	4682      	mov	sl, r0
 800c01a:	dd01      	ble.n	800c020 <_GetWordWrap+0x78>
 800c01c:	2c00      	cmp	r4, #0
 800c01e:	d1d7      	bne.n	800bfd0 <_GetWordWrap+0x28>
 800c020:	3401      	adds	r4, #1
 800c022:	e7cb      	b.n	800bfbc <_GetWordWrap+0x14>
 800c024:	4626      	mov	r6, r4
 800c026:	e7f3      	b.n	800c010 <_GetWordWrap+0x68>
 800c028:	4620      	mov	r0, r4
 800c02a:	b002      	add	sp, #8
 800c02c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c030:	20000400 	.word	0x20000400
 800c034:	20000404 	.word	0x20000404

0800c038 <_GetCharWrap>:
 800c038:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c03a:	2400      	movs	r4, #0
 800c03c:	9001      	str	r0, [sp, #4]
 800c03e:	460e      	mov	r6, r1
 800c040:	4625      	mov	r5, r4
 800c042:	a801      	add	r0, sp, #4
 800c044:	f7fb fd40 	bl	8007ac8 <GUI_UC__GetCharCodeInc>
 800c048:	4607      	mov	r7, r0
 800c04a:	b148      	cbz	r0, 800c060 <_GetCharWrap+0x28>
 800c04c:	f7fd fb02 	bl	8009654 <GUI_GetCharDistX>
 800c050:	4405      	add	r5, r0
 800c052:	b10c      	cbz	r4, 800c058 <_GetCharWrap+0x20>
 800c054:	42b5      	cmp	r5, r6
 800c056:	dc03      	bgt.n	800c060 <_GetCharWrap+0x28>
 800c058:	2f0a      	cmp	r7, #10
 800c05a:	d001      	beq.n	800c060 <_GetCharWrap+0x28>
 800c05c:	3401      	adds	r4, #1
 800c05e:	e7f0      	b.n	800c042 <_GetCharWrap+0xa>
 800c060:	4620      	mov	r0, r4
 800c062:	b003      	add	sp, #12
 800c064:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800c068 <_WrapGetNumCharsDisp>:
 800c068:	2a01      	cmp	r2, #1
 800c06a:	b510      	push	{r4, lr}
 800c06c:	d005      	beq.n	800c07a <_WrapGetNumCharsDisp+0x12>
 800c06e:	2a02      	cmp	r2, #2
 800c070:	d108      	bne.n	800c084 <_WrapGetNumCharsDisp+0x1c>
 800c072:	4b07      	ldr	r3, [pc, #28]	; (800c090 <_WrapGetNumCharsDisp+0x28>)
 800c074:	681b      	ldr	r3, [r3, #0]
 800c076:	4798      	blx	r3
 800c078:	bd10      	pop	{r4, pc}
 800c07a:	4a06      	ldr	r2, [pc, #24]	; (800c094 <_WrapGetNumCharsDisp+0x2c>)
 800c07c:	6814      	ldr	r4, [r2, #0]
 800c07e:	461a      	mov	r2, r3
 800c080:	47a0      	blx	r4
 800c082:	bd10      	pop	{r4, pc}
 800c084:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800c088:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c08c:	f7fd ba10 	b.w	80094b0 <GUI__GetLineNumChars>
 800c090:	20000180 	.word	0x20000180
 800c094:	20000184 	.word	0x20000184

0800c098 <GUI__WrapGetNumCharsDisp>:
 800c098:	2300      	movs	r3, #0
 800c09a:	f7ff bfe5 	b.w	800c068 <_WrapGetNumCharsDisp>

0800c09e <GUI__WrapGetNumCharsToNextLine>:
 800c09e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c0a0:	b085      	sub	sp, #20
 800c0a2:	ab03      	add	r3, sp, #12
 800c0a4:	4617      	mov	r7, r2
 800c0a6:	460e      	mov	r6, r1
 800c0a8:	9001      	str	r0, [sp, #4]
 800c0aa:	f7ff ffdd 	bl	800c068 <_WrapGetNumCharsDisp>
 800c0ae:	9d01      	ldr	r5, [sp, #4]
 800c0b0:	4604      	mov	r4, r0
 800c0b2:	4621      	mov	r1, r4
 800c0b4:	4628      	mov	r0, r5
 800c0b6:	f7fb fd1b 	bl	8007af0 <GUI_UC__NumChars2NumBytes>
 800c0ba:	4428      	add	r0, r5
 800c0bc:	ad04      	add	r5, sp, #16
 800c0be:	f845 0d0c 	str.w	r0, [r5, #-12]!
 800c0c2:	4628      	mov	r0, r5
 800c0c4:	f7fb fd00 	bl	8007ac8 <GUI_UC__GetCharCodeInc>
 800c0c8:	280a      	cmp	r0, #10
 800c0ca:	d101      	bne.n	800c0d0 <GUI__WrapGetNumCharsToNextLine+0x32>
 800c0cc:	3401      	adds	r4, #1
 800c0ce:	e012      	b.n	800c0f6 <GUI__WrapGetNumCharsToNextLine+0x58>
 800c0d0:	2f01      	cmp	r7, #1
 800c0d2:	d110      	bne.n	800c0f6 <GUI__WrapGetNumCharsToNextLine+0x58>
 800c0d4:	2820      	cmp	r0, #32
 800c0d6:	d10e      	bne.n	800c0f6 <GUI__WrapGetNumCharsToNextLine+0x58>
 800c0d8:	f7fd fabc 	bl	8009654 <GUI_GetCharDistX>
 800c0dc:	4607      	mov	r7, r0
 800c0de:	9b03      	ldr	r3, [sp, #12]
 800c0e0:	429e      	cmp	r6, r3
 800c0e2:	db08      	blt.n	800c0f6 <GUI__WrapGetNumCharsToNextLine+0x58>
 800c0e4:	443b      	add	r3, r7
 800c0e6:	4628      	mov	r0, r5
 800c0e8:	9303      	str	r3, [sp, #12]
 800c0ea:	f7fb fced 	bl	8007ac8 <GUI_UC__GetCharCodeInc>
 800c0ee:	2820      	cmp	r0, #32
 800c0f0:	f104 0401 	add.w	r4, r4, #1
 800c0f4:	d0f3      	beq.n	800c0de <GUI__WrapGetNumCharsToNextLine+0x40>
 800c0f6:	4620      	mov	r0, r4
 800c0f8:	b005      	add	sp, #20
 800c0fa:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c0fc <GUI__WrapGetNumBytesToNextLine>:
 800c0fc:	b510      	push	{r4, lr}
 800c0fe:	4604      	mov	r4, r0
 800c100:	f7ff ffcd 	bl	800c09e <GUI__WrapGetNumCharsToNextLine>
 800c104:	4601      	mov	r1, r0
 800c106:	4620      	mov	r0, r4
 800c108:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c10c:	f7fb bcf0 	b.w	8007af0 <GUI_UC__NumChars2NumBytes>

0800c110 <GUI__ExpandPixelIndicesEx>:
 800c110:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c114:	1e0c      	subs	r4, r1, #0
 800c116:	4605      	mov	r5, r0
 800c118:	f340 80b3 	ble.w	800c282 <GUI__ExpandPixelIndicesEx+0x172>
 800c11c:	2a08      	cmp	r2, #8
 800c11e:	685f      	ldr	r7, [r3, #4]
 800c120:	dd04      	ble.n	800c12c <GUI__ExpandPixelIndicesEx+0x1c>
 800c122:	2a10      	cmp	r2, #16
 800c124:	f340 8098 	ble.w	800c258 <GUI__ExpandPixelIndicesEx+0x148>
 800c128:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c12c:	3a01      	subs	r2, #1
 800c12e:	2a07      	cmp	r2, #7
 800c130:	f200 80a7 	bhi.w	800c282 <GUI__ExpandPixelIndicesEx+0x172>
 800c134:	e8df f002 	tbb	[pc, r2]
 800c138:	58a52d04 	.word	0x58a52d04
 800c13c:	83a5a5a5 	.word	0x83a5a5a5
 800c140:	1e66      	subs	r6, r4, #1
 800c142:	10f2      	asrs	r2, r6, #3
 800c144:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800c148:	3b01      	subs	r3, #1
 800c14a:	eb05 0802 	add.w	r8, r5, r2
 800c14e:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800c152:	f006 0607 	and.w	r6, r6, #7
 800c156:	f815 a002 	ldrb.w	sl, [r5, r2]
 800c15a:	2580      	movs	r5, #128	; 0x80
 800c15c:	4135      	asrs	r5, r6
 800c15e:	f108 38ff 	add.w	r8, r8, #4294967295
 800c162:	b2ed      	uxtb	r5, r5
 800c164:	f1c6 0307 	rsb	r3, r6, #7
 800c168:	ea0a 0005 	and.w	r0, sl, r5
 800c16c:	4118      	asrs	r0, r3
 800c16e:	47b8      	blx	r7
 800c170:	f849 0904 	str.w	r0, [r9], #-4
 800c174:	b936      	cbnz	r6, 800c184 <GUI__ExpandPixelIndicesEx+0x74>
 800c176:	f898 a000 	ldrb.w	sl, [r8]
 800c17a:	2501      	movs	r5, #1
 800c17c:	f108 38ff 	add.w	r8, r8, #4294967295
 800c180:	2607      	movs	r6, #7
 800c182:	e002      	b.n	800c18a <GUI__ExpandPixelIndicesEx+0x7a>
 800c184:	006d      	lsls	r5, r5, #1
 800c186:	3e01      	subs	r6, #1
 800c188:	b2ed      	uxtb	r5, r5
 800c18a:	3c01      	subs	r4, #1
 800c18c:	d1ea      	bne.n	800c164 <GUI__ExpandPixelIndicesEx+0x54>
 800c18e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c192:	1e66      	subs	r6, r4, #1
 800c194:	10b2      	asrs	r2, r6, #2
 800c196:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800c19a:	3b01      	subs	r3, #1
 800c19c:	f006 0603 	and.w	r6, r6, #3
 800c1a0:	eb05 0802 	add.w	r8, r5, r2
 800c1a4:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800c1a8:	f815 a002 	ldrb.w	sl, [r5, r2]
 800c1ac:	0073      	lsls	r3, r6, #1
 800c1ae:	25c0      	movs	r5, #192	; 0xc0
 800c1b0:	411d      	asrs	r5, r3
 800c1b2:	f108 38ff 	add.w	r8, r8, #4294967295
 800c1b6:	b2ed      	uxtb	r5, r5
 800c1b8:	0073      	lsls	r3, r6, #1
 800c1ba:	f1c3 0306 	rsb	r3, r3, #6
 800c1be:	ea0a 0005 	and.w	r0, sl, r5
 800c1c2:	4118      	asrs	r0, r3
 800c1c4:	47b8      	blx	r7
 800c1c6:	f849 0904 	str.w	r0, [r9], #-4
 800c1ca:	b936      	cbnz	r6, 800c1da <GUI__ExpandPixelIndicesEx+0xca>
 800c1cc:	2503      	movs	r5, #3
 800c1ce:	f898 a000 	ldrb.w	sl, [r8]
 800c1d2:	462e      	mov	r6, r5
 800c1d4:	f108 38ff 	add.w	r8, r8, #4294967295
 800c1d8:	e002      	b.n	800c1e0 <GUI__ExpandPixelIndicesEx+0xd0>
 800c1da:	00ad      	lsls	r5, r5, #2
 800c1dc:	3e01      	subs	r6, #1
 800c1de:	b2ed      	uxtb	r5, r5
 800c1e0:	3c01      	subs	r4, #1
 800c1e2:	d1e9      	bne.n	800c1b8 <GUI__ExpandPixelIndicesEx+0xa8>
 800c1e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c1e8:	1e66      	subs	r6, r4, #1
 800c1ea:	1072      	asrs	r2, r6, #1
 800c1ec:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800c1f0:	3b01      	subs	r3, #1
 800c1f2:	f006 0601 	and.w	r6, r6, #1
 800c1f6:	eb05 0802 	add.w	r8, r5, r2
 800c1fa:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800c1fe:	f815 a002 	ldrb.w	sl, [r5, r2]
 800c202:	00b3      	lsls	r3, r6, #2
 800c204:	25f0      	movs	r5, #240	; 0xf0
 800c206:	411d      	asrs	r5, r3
 800c208:	f108 38ff 	add.w	r8, r8, #4294967295
 800c20c:	b2ed      	uxtb	r5, r5
 800c20e:	00b3      	lsls	r3, r6, #2
 800c210:	f1c3 0304 	rsb	r3, r3, #4
 800c214:	ea0a 0005 	and.w	r0, sl, r5
 800c218:	4118      	asrs	r0, r3
 800c21a:	47b8      	blx	r7
 800c21c:	f849 0904 	str.w	r0, [r9], #-4
 800c220:	b936      	cbnz	r6, 800c230 <GUI__ExpandPixelIndicesEx+0x120>
 800c222:	f898 a000 	ldrb.w	sl, [r8]
 800c226:	250f      	movs	r5, #15
 800c228:	f108 38ff 	add.w	r8, r8, #4294967295
 800c22c:	2601      	movs	r6, #1
 800c22e:	e002      	b.n	800c236 <GUI__ExpandPixelIndicesEx+0x126>
 800c230:	012d      	lsls	r5, r5, #4
 800c232:	b2ed      	uxtb	r5, r5
 800c234:	2600      	movs	r6, #0
 800c236:	3c01      	subs	r4, #1
 800c238:	d1e9      	bne.n	800c20e <GUI__ExpandPixelIndicesEx+0xfe>
 800c23a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c23e:	192e      	adds	r6, r5, r4
 800c240:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 800c244:	1b34      	subs	r4, r6, r4
 800c246:	f816 0d01 	ldrb.w	r0, [r6, #-1]!
 800c24a:	47b8      	blx	r7
 800c24c:	42a6      	cmp	r6, r4
 800c24e:	f845 0d04 	str.w	r0, [r5, #-4]!
 800c252:	d1f8      	bne.n	800c246 <GUI__ExpandPixelIndicesEx+0x136>
 800c254:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c258:	695e      	ldr	r6, [r3, #20]
 800c25a:	b12e      	cbz	r6, 800c268 <GUI__ExpandPixelIndicesEx+0x158>
 800c25c:	4629      	mov	r1, r5
 800c25e:	4622      	mov	r2, r4
 800c260:	2302      	movs	r3, #2
 800c262:	47b0      	blx	r6
 800c264:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c268:	0064      	lsls	r4, r4, #1
 800c26a:	4425      	add	r5, r4
 800c26c:	192e      	adds	r6, r5, r4
 800c26e:	1b2c      	subs	r4, r5, r4
 800c270:	f835 0d02 	ldrh.w	r0, [r5, #-2]!
 800c274:	47b8      	blx	r7
 800c276:	42a5      	cmp	r5, r4
 800c278:	f846 0d04 	str.w	r0, [r6, #-4]!
 800c27c:	d1f8      	bne.n	800c270 <GUI__ExpandPixelIndicesEx+0x160>
 800c27e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c282:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800c286 <_GetTwinArcPara>:
 800c286:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c28a:	fb01 f901 	mul.w	r9, r1, r1
 800c28e:	1e47      	subs	r7, r0, #1
 800c290:	4604      	mov	r4, r0
 800c292:	4340      	muls	r0, r0
 800c294:	ebc9 0000 	rsb	r0, r9, r0
 800c298:	460d      	mov	r5, r1
 800c29a:	4692      	mov	sl, r2
 800c29c:	4698      	mov	r8, r3
 800c29e:	9e08      	ldr	r6, [sp, #32]
 800c2a0:	f7fb f951 	bl	8007546 <GUI__sqrt32>
 800c2a4:	42bd      	cmp	r5, r7
 800c2a6:	f8ca 0000 	str.w	r0, [sl]
 800c2aa:	da10      	bge.n	800c2ce <_GetTwinArcPara+0x48>
 800c2ac:	fb07 f007 	mul.w	r0, r7, r7
 800c2b0:	ebc9 0000 	rsb	r0, r9, r0
 800c2b4:	f7fb f947 	bl	8007546 <GUI__sqrt32>
 800c2b8:	3c02      	subs	r4, #2
 800c2ba:	42a5      	cmp	r5, r4
 800c2bc:	f8c8 0000 	str.w	r0, [r8]
 800c2c0:	da03      	bge.n	800c2ca <_GetTwinArcPara+0x44>
 800c2c2:	3801      	subs	r0, #1
 800c2c4:	6030      	str	r0, [r6, #0]
 800c2c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c2ca:	2300      	movs	r3, #0
 800c2cc:	e002      	b.n	800c2d4 <_GetTwinArcPara+0x4e>
 800c2ce:	2300      	movs	r3, #0
 800c2d0:	f8c8 3000 	str.w	r3, [r8]
 800c2d4:	6033      	str	r3, [r6, #0]
 800c2d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800c2dc <GUI__DrawTwinArc2>:
 800c2dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2e0:	461c      	mov	r4, r3
 800c2e2:	4b57      	ldr	r3, [pc, #348]	; (800c440 <GUI__DrawTwinArc2+0x164>)
 800c2e4:	681b      	ldr	r3, [r3, #0]
 800c2e6:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 800c2e8:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800c2ea:	b08b      	sub	sp, #44	; 0x2c
 800c2ec:	4415      	add	r5, r2
 800c2ee:	1e63      	subs	r3, r4, #1
 800c2f0:	19c6      	adds	r6, r0, r7
 800c2f2:	442b      	add	r3, r5
 800c2f4:	440f      	add	r7, r1
 800c2f6:	a808      	add	r0, sp, #32
 800c2f8:	f8ad 6020 	strh.w	r6, [sp, #32]
 800c2fc:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800c300:	f8ad 5022 	strh.w	r5, [sp, #34]	; 0x22
 800c304:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800c308:	f7f9 fa5a 	bl	80057c0 <WM__InitIVRSearch>
 800c30c:	2800      	cmp	r0, #0
 800c30e:	f000 8094 	beq.w	800c43a <GUI__DrawTwinArc2+0x15e>
 800c312:	2c00      	cmp	r4, #0
 800c314:	dc02      	bgt.n	800c31c <GUI__DrawTwinArc2+0x40>
 800c316:	f7f9 f991 	bl	800563c <WM__GetNextIVR>
 800c31a:	e7f7      	b.n	800c30c <GUI__DrawTwinArc2+0x30>
 800c31c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800c31e:	f7fc fe4a 	bl	8008fb6 <GUI_SetColor>
 800c322:	f104 38ff 	add.w	r8, r4, #4294967295
 800c326:	4641      	mov	r1, r8
 800c328:	f118 38ff 	adds.w	r8, r8, #4294967295
 800c32c:	d324      	bcc.n	800c378 <GUI__DrawTwinArc2+0x9c>
 800c32e:	ab07      	add	r3, sp, #28
 800c330:	9300      	str	r3, [sp, #0]
 800c332:	4620      	mov	r0, r4
 800c334:	aa05      	add	r2, sp, #20
 800c336:	ab06      	add	r3, sp, #24
 800c338:	f7ff ffa5 	bl	800c286 <_GetTwinArcPara>
 800c33c:	f104 39ff 	add.w	r9, r4, #4294967295
 800c340:	f8dd a018 	ldr.w	sl, [sp, #24]
 800c344:	9905      	ldr	r1, [sp, #20]
 800c346:	1930      	adds	r0, r6, r4
 800c348:	44a9      	add	r9, r5
 800c34a:	ebc8 0909 	rsb	r9, r8, r9
 800c34e:	ebc4 0b07 	rsb	fp, r4, r7
 800c352:	ebca 0200 	rsb	r2, sl, r0
 800c356:	eb0b 0301 	add.w	r3, fp, r1
 800c35a:	1a40      	subs	r0, r0, r1
 800c35c:	3a01      	subs	r2, #1
 800c35e:	4649      	mov	r1, r9
 800c360:	9302      	str	r3, [sp, #8]
 800c362:	f7fa fd99 	bl	8006e98 <LCD_DrawHLine>
 800c366:	9b02      	ldr	r3, [sp, #8]
 800c368:	eb0b 000a 	add.w	r0, fp, sl
 800c36c:	3001      	adds	r0, #1
 800c36e:	4649      	mov	r1, r9
 800c370:	461a      	mov	r2, r3
 800c372:	f7fa fd91 	bl	8006e98 <LCD_DrawHLine>
 800c376:	e7d6      	b.n	800c326 <GUI__DrawTwinArc2+0x4a>
 800c378:	2c01      	cmp	r4, #1
 800c37a:	d0cc      	beq.n	800c316 <GUI__DrawTwinArc2+0x3a>
 800c37c:	9815      	ldr	r0, [sp, #84]	; 0x54
 800c37e:	f7fc fe1a 	bl	8008fb6 <GUI_SetColor>
 800c382:	f1a4 0902 	sub.w	r9, r4, #2
 800c386:	eb05 0b04 	add.w	fp, r5, r4
 800c38a:	f105 0802 	add.w	r8, r5, #2
 800c38e:	f1b9 0f00 	cmp.w	r9, #0
 800c392:	d027      	beq.n	800c3e4 <GUI__DrawTwinArc2+0x108>
 800c394:	ab07      	add	r3, sp, #28
 800c396:	4649      	mov	r1, r9
 800c398:	9300      	str	r3, [sp, #0]
 800c39a:	4620      	mov	r0, r4
 800c39c:	aa05      	add	r2, sp, #20
 800c39e:	ab06      	add	r3, sp, #24
 800c3a0:	f7ff ff71 	bl	800c286 <_GetTwinArcPara>
 800c3a4:	f8dd a01c 	ldr.w	sl, [sp, #28]
 800c3a8:	9906      	ldr	r1, [sp, #24]
 800c3aa:	1930      	adds	r0, r6, r4
 800c3ac:	1b3b      	subs	r3, r7, r4
 800c3ae:	ebca 0200 	rsb	r2, sl, r0
 800c3b2:	eb03 0c01 	add.w	ip, r3, r1
 800c3b6:	1a40      	subs	r0, r0, r1
 800c3b8:	3a01      	subs	r2, #1
 800c3ba:	4641      	mov	r1, r8
 800c3bc:	9302      	str	r3, [sp, #8]
 800c3be:	f8cd c00c 	str.w	ip, [sp, #12]
 800c3c2:	f7fa fd69 	bl	8006e98 <LCD_DrawHLine>
 800c3c6:	9b02      	ldr	r3, [sp, #8]
 800c3c8:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800c3cc:	eb03 000a 	add.w	r0, r3, sl
 800c3d0:	4641      	mov	r1, r8
 800c3d2:	3001      	adds	r0, #1
 800c3d4:	4662      	mov	r2, ip
 800c3d6:	f7fa fd5f 	bl	8006e98 <LCD_DrawHLine>
 800c3da:	f109 39ff 	add.w	r9, r9, #4294967295
 800c3de:	f108 0801 	add.w	r8, r8, #1
 800c3e2:	e7d4      	b.n	800c38e <GUI__DrawTwinArc2+0xb2>
 800c3e4:	2c02      	cmp	r4, #2
 800c3e6:	d096      	beq.n	800c316 <GUI__DrawTwinArc2+0x3a>
 800c3e8:	9816      	ldr	r0, [sp, #88]	; 0x58
 800c3ea:	f7fc fde4 	bl	8008fb6 <GUI_SetColor>
 800c3ee:	f1c4 0303 	rsb	r3, r4, #3
 800c3f2:	f1a4 0803 	sub.w	r8, r4, #3
 800c3f6:	449b      	add	fp, r3
 800c3f8:	f1b8 0f00 	cmp.w	r8, #0
 800c3fc:	d08b      	beq.n	800c316 <GUI__DrawTwinArc2+0x3a>
 800c3fe:	ab07      	add	r3, sp, #28
 800c400:	4641      	mov	r1, r8
 800c402:	9300      	str	r3, [sp, #0]
 800c404:	4620      	mov	r0, r4
 800c406:	ab06      	add	r3, sp, #24
 800c408:	aa05      	add	r2, sp, #20
 800c40a:	f7ff ff3c 	bl	800c286 <_GetTwinArcPara>
 800c40e:	9807      	ldr	r0, [sp, #28]
 800c410:	1932      	adds	r2, r6, r4
 800c412:	ebc4 0907 	rsb	r9, r4, r7
 800c416:	4659      	mov	r1, fp
 800c418:	eb09 0a00 	add.w	sl, r9, r0
 800c41c:	1a10      	subs	r0, r2, r0
 800c41e:	3a01      	subs	r2, #1
 800c420:	f7fa fd3a 	bl	8006e98 <LCD_DrawHLine>
 800c424:	4659      	mov	r1, fp
 800c426:	f109 0001 	add.w	r0, r9, #1
 800c42a:	4652      	mov	r2, sl
 800c42c:	f7fa fd34 	bl	8006e98 <LCD_DrawHLine>
 800c430:	f108 38ff 	add.w	r8, r8, #4294967295
 800c434:	f10b 0b01 	add.w	fp, fp, #1
 800c438:	e7de      	b.n	800c3f8 <GUI__DrawTwinArc2+0x11c>
 800c43a:	b00b      	add	sp, #44	; 0x2c
 800c43c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c440:	200000b0 	.word	0x200000b0

0800c444 <GUI__CompactPixelIndices>:
 800c444:	2a08      	cmp	r2, #8
 800c446:	b510      	push	{r4, lr}
 800c448:	dd0e      	ble.n	800c468 <GUI__CompactPixelIndices+0x24>
 800c44a:	2a10      	cmp	r2, #16
 800c44c:	dc0a      	bgt.n	800c464 <GUI__CompactPixelIndices+0x20>
 800c44e:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800c452:	4603      	mov	r3, r0
 800c454:	f850 2b04 	ldr.w	r2, [r0], #4
 800c458:	f823 2b02 	strh.w	r2, [r3], #2
 800c45c:	428b      	cmp	r3, r1
 800c45e:	d1f9      	bne.n	800c454 <GUI__CompactPixelIndices+0x10>
 800c460:	2001      	movs	r0, #1
 800c462:	bd10      	pop	{r4, pc}
 800c464:	2000      	movs	r0, #0
 800c466:	bd10      	pop	{r4, pc}
 800c468:	2a02      	cmp	r2, #2
 800c46a:	d06d      	beq.n	800c548 <GUI__CompactPixelIndices+0x104>
 800c46c:	2a04      	cmp	r2, #4
 800c46e:	d054      	beq.n	800c51a <GUI__CompactPixelIndices+0xd6>
 800c470:	2a01      	cmp	r2, #1
 800c472:	f040 8095 	bne.w	800c5a0 <GUI__CompactPixelIndices+0x15c>
 800c476:	4604      	mov	r4, r0
 800c478:	6803      	ldr	r3, [r0, #0]
 800c47a:	2901      	cmp	r1, #1
 800c47c:	ea4f 13c3 	mov.w	r3, r3, lsl #7
 800c480:	b2db      	uxtb	r3, r3
 800c482:	d047      	beq.n	800c514 <GUI__CompactPixelIndices+0xd0>
 800c484:	6842      	ldr	r2, [r0, #4]
 800c486:	2902      	cmp	r1, #2
 800c488:	f002 0201 	and.w	r2, r2, #1
 800c48c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c490:	d102      	bne.n	800c498 <GUI__CompactPixelIndices+0x54>
 800c492:	f100 0208 	add.w	r2, r0, #8
 800c496:	e03e      	b.n	800c516 <GUI__CompactPixelIndices+0xd2>
 800c498:	6882      	ldr	r2, [r0, #8]
 800c49a:	2903      	cmp	r1, #3
 800c49c:	f002 0201 	and.w	r2, r2, #1
 800c4a0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800c4a4:	d102      	bne.n	800c4ac <GUI__CompactPixelIndices+0x68>
 800c4a6:	f100 020c 	add.w	r2, r0, #12
 800c4aa:	e034      	b.n	800c516 <GUI__CompactPixelIndices+0xd2>
 800c4ac:	68c2      	ldr	r2, [r0, #12]
 800c4ae:	2904      	cmp	r1, #4
 800c4b0:	f002 0201 	and.w	r2, r2, #1
 800c4b4:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 800c4b8:	d102      	bne.n	800c4c0 <GUI__CompactPixelIndices+0x7c>
 800c4ba:	f100 0210 	add.w	r2, r0, #16
 800c4be:	e02a      	b.n	800c516 <GUI__CompactPixelIndices+0xd2>
 800c4c0:	6902      	ldr	r2, [r0, #16]
 800c4c2:	2905      	cmp	r1, #5
 800c4c4:	f002 0201 	and.w	r2, r2, #1
 800c4c8:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800c4cc:	d102      	bne.n	800c4d4 <GUI__CompactPixelIndices+0x90>
 800c4ce:	f100 0214 	add.w	r2, r0, #20
 800c4d2:	e020      	b.n	800c516 <GUI__CompactPixelIndices+0xd2>
 800c4d4:	6942      	ldr	r2, [r0, #20]
 800c4d6:	2906      	cmp	r1, #6
 800c4d8:	f002 0201 	and.w	r2, r2, #1
 800c4dc:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 800c4e0:	d102      	bne.n	800c4e8 <GUI__CompactPixelIndices+0xa4>
 800c4e2:	f100 0218 	add.w	r2, r0, #24
 800c4e6:	e016      	b.n	800c516 <GUI__CompactPixelIndices+0xd2>
 800c4e8:	6982      	ldr	r2, [r0, #24]
 800c4ea:	3907      	subs	r1, #7
 800c4ec:	f002 0201 	and.w	r2, r2, #1
 800c4f0:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 800c4f4:	d102      	bne.n	800c4fc <GUI__CompactPixelIndices+0xb8>
 800c4f6:	f100 021c 	add.w	r2, r0, #28
 800c4fa:	e005      	b.n	800c508 <GUI__CompactPixelIndices+0xc4>
 800c4fc:	f100 0220 	add.w	r2, r0, #32
 800c500:	69c0      	ldr	r0, [r0, #28]
 800c502:	f000 0001 	and.w	r0, r0, #1
 800c506:	4303      	orrs	r3, r0
 800c508:	f804 3b01 	strb.w	r3, [r4], #1
 800c50c:	2900      	cmp	r1, #0
 800c50e:	d0a7      	beq.n	800c460 <GUI__CompactPixelIndices+0x1c>
 800c510:	4610      	mov	r0, r2
 800c512:	e7b1      	b.n	800c478 <GUI__CompactPixelIndices+0x34>
 800c514:	1d02      	adds	r2, r0, #4
 800c516:	2100      	movs	r1, #0
 800c518:	e7f6      	b.n	800c508 <GUI__CompactPixelIndices+0xc4>
 800c51a:	4602      	mov	r2, r0
 800c51c:	6803      	ldr	r3, [r0, #0]
 800c51e:	2901      	cmp	r1, #1
 800c520:	ea4f 1303 	mov.w	r3, r3, lsl #4
 800c524:	b2db      	uxtb	r3, r3
 800c526:	d102      	bne.n	800c52e <GUI__CompactPixelIndices+0xea>
 800c528:	1d04      	adds	r4, r0, #4
 800c52a:	2100      	movs	r1, #0
 800c52c:	e006      	b.n	800c53c <GUI__CompactPixelIndices+0xf8>
 800c52e:	f100 0408 	add.w	r4, r0, #8
 800c532:	6840      	ldr	r0, [r0, #4]
 800c534:	f000 000f 	and.w	r0, r0, #15
 800c538:	4303      	orrs	r3, r0
 800c53a:	3902      	subs	r1, #2
 800c53c:	f802 3b01 	strb.w	r3, [r2], #1
 800c540:	2900      	cmp	r1, #0
 800c542:	d08d      	beq.n	800c460 <GUI__CompactPixelIndices+0x1c>
 800c544:	4620      	mov	r0, r4
 800c546:	e7e9      	b.n	800c51c <GUI__CompactPixelIndices+0xd8>
 800c548:	4604      	mov	r4, r0
 800c54a:	6803      	ldr	r3, [r0, #0]
 800c54c:	2901      	cmp	r1, #1
 800c54e:	ea4f 1383 	mov.w	r3, r3, lsl #6
 800c552:	b2db      	uxtb	r3, r3
 800c554:	d021      	beq.n	800c59a <GUI__CompactPixelIndices+0x156>
 800c556:	6842      	ldr	r2, [r0, #4]
 800c558:	2902      	cmp	r1, #2
 800c55a:	f002 0203 	and.w	r2, r2, #3
 800c55e:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 800c562:	d102      	bne.n	800c56a <GUI__CompactPixelIndices+0x126>
 800c564:	f100 0208 	add.w	r2, r0, #8
 800c568:	e018      	b.n	800c59c <GUI__CompactPixelIndices+0x158>
 800c56a:	6882      	ldr	r2, [r0, #8]
 800c56c:	2903      	cmp	r1, #3
 800c56e:	f002 0203 	and.w	r2, r2, #3
 800c572:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 800c576:	d102      	bne.n	800c57e <GUI__CompactPixelIndices+0x13a>
 800c578:	f100 020c 	add.w	r2, r0, #12
 800c57c:	e00e      	b.n	800c59c <GUI__CompactPixelIndices+0x158>
 800c57e:	f100 0210 	add.w	r2, r0, #16
 800c582:	68c0      	ldr	r0, [r0, #12]
 800c584:	f000 0003 	and.w	r0, r0, #3
 800c588:	4303      	orrs	r3, r0
 800c58a:	3904      	subs	r1, #4
 800c58c:	f804 3b01 	strb.w	r3, [r4], #1
 800c590:	2900      	cmp	r1, #0
 800c592:	f43f af65 	beq.w	800c460 <GUI__CompactPixelIndices+0x1c>
 800c596:	4610      	mov	r0, r2
 800c598:	e7d7      	b.n	800c54a <GUI__CompactPixelIndices+0x106>
 800c59a:	1d02      	adds	r2, r0, #4
 800c59c:	2100      	movs	r1, #0
 800c59e:	e7f5      	b.n	800c58c <GUI__CompactPixelIndices+0x148>
 800c5a0:	2300      	movs	r3, #0
 800c5a2:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 800c5a6:	54c2      	strb	r2, [r0, r3]
 800c5a8:	3301      	adds	r3, #1
 800c5aa:	428b      	cmp	r3, r1
 800c5ac:	d1f9      	bne.n	800c5a2 <GUI__CompactPixelIndices+0x15e>
 800c5ae:	e757      	b.n	800c460 <GUI__CompactPixelIndices+0x1c>

0800c5b0 <GUI__ConvertColor2Index>:
 800c5b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c5b4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800c5b8:	681e      	ldr	r6, [r3, #0]
 800c5ba:	f1b8 0f00 	cmp.w	r8, #0
 800c5be:	bf08      	it	eq
 800c5c0:	4680      	moveq	r8, r0
 800c5c2:	2a08      	cmp	r2, #8
 800c5c4:	4604      	mov	r4, r0
 800c5c6:	460d      	mov	r5, r1
 800c5c8:	dd05      	ble.n	800c5d6 <GUI__ConvertColor2Index+0x26>
 800c5ca:	2a10      	cmp	r2, #16
 800c5cc:	f340 80b6 	ble.w	800c73c <GUI__ConvertColor2Index+0x18c>
 800c5d0:	2000      	movs	r0, #0
 800c5d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c5d6:	3a01      	subs	r2, #1
 800c5d8:	2a07      	cmp	r2, #7
 800c5da:	f200 80a4 	bhi.w	800c726 <GUI__ConvertColor2Index+0x176>
 800c5de:	e8df f002 	tbb	[pc, r2]
 800c5e2:	6111      	.short	0x6111
 800c5e4:	a2a287a2 	.word	0xa2a287a2
 800c5e8:	92a2      	.short	0x92a2
 800c5ea:	69e0      	ldr	r0, [r4, #28]
 800c5ec:	47b0      	blx	r6
 800c5ee:	4338      	orrs	r0, r7
 800c5f0:	f104 0920 	add.w	r9, r4, #32
 800c5f4:	b2c7      	uxtb	r7, r0
 800c5f6:	3d08      	subs	r5, #8
 800c5f8:	f808 7b01 	strb.w	r7, [r8], #1
 800c5fc:	2d00      	cmp	r5, #0
 800c5fe:	f000 8092 	beq.w	800c726 <GUI__ConvertColor2Index+0x176>
 800c602:	464c      	mov	r4, r9
 800c604:	6820      	ldr	r0, [r4, #0]
 800c606:	47b0      	blx	r6
 800c608:	2d01      	cmp	r5, #1
 800c60a:	ea4f 10c0 	mov.w	r0, r0, lsl #7
 800c60e:	b2c7      	uxtb	r7, r0
 800c610:	f000 808c 	beq.w	800c72c <GUI__ConvertColor2Index+0x17c>
 800c614:	6860      	ldr	r0, [r4, #4]
 800c616:	47b0      	blx	r6
 800c618:	2d02      	cmp	r5, #2
 800c61a:	ea47 1080 	orr.w	r0, r7, r0, lsl #6
 800c61e:	b2c7      	uxtb	r7, r0
 800c620:	d102      	bne.n	800c628 <GUI__ConvertColor2Index+0x78>
 800c622:	f104 0908 	add.w	r9, r4, #8
 800c626:	e083      	b.n	800c730 <GUI__ConvertColor2Index+0x180>
 800c628:	68a0      	ldr	r0, [r4, #8]
 800c62a:	47b0      	blx	r6
 800c62c:	2d03      	cmp	r5, #3
 800c62e:	ea47 1040 	orr.w	r0, r7, r0, lsl #5
 800c632:	b2c7      	uxtb	r7, r0
 800c634:	d102      	bne.n	800c63c <GUI__ConvertColor2Index+0x8c>
 800c636:	f104 090c 	add.w	r9, r4, #12
 800c63a:	e079      	b.n	800c730 <GUI__ConvertColor2Index+0x180>
 800c63c:	68e0      	ldr	r0, [r4, #12]
 800c63e:	47b0      	blx	r6
 800c640:	2d04      	cmp	r5, #4
 800c642:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 800c646:	b2c7      	uxtb	r7, r0
 800c648:	d102      	bne.n	800c650 <GUI__ConvertColor2Index+0xa0>
 800c64a:	f104 0910 	add.w	r9, r4, #16
 800c64e:	e06f      	b.n	800c730 <GUI__ConvertColor2Index+0x180>
 800c650:	6920      	ldr	r0, [r4, #16]
 800c652:	47b0      	blx	r6
 800c654:	2d05      	cmp	r5, #5
 800c656:	ea47 00c0 	orr.w	r0, r7, r0, lsl #3
 800c65a:	b2c7      	uxtb	r7, r0
 800c65c:	d102      	bne.n	800c664 <GUI__ConvertColor2Index+0xb4>
 800c65e:	f104 0914 	add.w	r9, r4, #20
 800c662:	e065      	b.n	800c730 <GUI__ConvertColor2Index+0x180>
 800c664:	6960      	ldr	r0, [r4, #20]
 800c666:	47b0      	blx	r6
 800c668:	2d06      	cmp	r5, #6
 800c66a:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 800c66e:	b2c7      	uxtb	r7, r0
 800c670:	d102      	bne.n	800c678 <GUI__ConvertColor2Index+0xc8>
 800c672:	f104 0918 	add.w	r9, r4, #24
 800c676:	e05b      	b.n	800c730 <GUI__ConvertColor2Index+0x180>
 800c678:	69a0      	ldr	r0, [r4, #24]
 800c67a:	47b0      	blx	r6
 800c67c:	2d07      	cmp	r5, #7
 800c67e:	ea47 0040 	orr.w	r0, r7, r0, lsl #1
 800c682:	b2c7      	uxtb	r7, r0
 800c684:	d1b1      	bne.n	800c5ea <GUI__ConvertColor2Index+0x3a>
 800c686:	f104 091c 	add.w	r9, r4, #28
 800c68a:	e051      	b.n	800c730 <GUI__ConvertColor2Index+0x180>
 800c68c:	68e0      	ldr	r0, [r4, #12]
 800c68e:	47b0      	blx	r6
 800c690:	4338      	orrs	r0, r7
 800c692:	f104 0910 	add.w	r9, r4, #16
 800c696:	b2c7      	uxtb	r7, r0
 800c698:	3d04      	subs	r5, #4
 800c69a:	f808 7b01 	strb.w	r7, [r8], #1
 800c69e:	2d00      	cmp	r5, #0
 800c6a0:	d041      	beq.n	800c726 <GUI__ConvertColor2Index+0x176>
 800c6a2:	464c      	mov	r4, r9
 800c6a4:	6820      	ldr	r0, [r4, #0]
 800c6a6:	47b0      	blx	r6
 800c6a8:	2d01      	cmp	r5, #1
 800c6aa:	ea4f 1080 	mov.w	r0, r0, lsl #6
 800c6ae:	b2c7      	uxtb	r7, r0
 800c6b0:	d040      	beq.n	800c734 <GUI__ConvertColor2Index+0x184>
 800c6b2:	6860      	ldr	r0, [r4, #4]
 800c6b4:	47b0      	blx	r6
 800c6b6:	2d02      	cmp	r5, #2
 800c6b8:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 800c6bc:	b2c7      	uxtb	r7, r0
 800c6be:	d102      	bne.n	800c6c6 <GUI__ConvertColor2Index+0x116>
 800c6c0:	f104 0908 	add.w	r9, r4, #8
 800c6c4:	e038      	b.n	800c738 <GUI__ConvertColor2Index+0x188>
 800c6c6:	68a0      	ldr	r0, [r4, #8]
 800c6c8:	47b0      	blx	r6
 800c6ca:	2d03      	cmp	r5, #3
 800c6cc:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 800c6d0:	b2c7      	uxtb	r7, r0
 800c6d2:	d1db      	bne.n	800c68c <GUI__ConvertColor2Index+0xdc>
 800c6d4:	f104 090c 	add.w	r9, r4, #12
 800c6d8:	e02e      	b.n	800c738 <GUI__ConvertColor2Index+0x188>
 800c6da:	6860      	ldr	r0, [r4, #4]
 800c6dc:	47b0      	blx	r6
 800c6de:	4338      	orrs	r0, r7
 800c6e0:	f104 0908 	add.w	r9, r4, #8
 800c6e4:	b2c7      	uxtb	r7, r0
 800c6e6:	3d02      	subs	r5, #2
 800c6e8:	f808 7b01 	strb.w	r7, [r8], #1
 800c6ec:	b1dd      	cbz	r5, 800c726 <GUI__ConvertColor2Index+0x176>
 800c6ee:	464c      	mov	r4, r9
 800c6f0:	6820      	ldr	r0, [r4, #0]
 800c6f2:	47b0      	blx	r6
 800c6f4:	2d01      	cmp	r5, #1
 800c6f6:	ea4f 1000 	mov.w	r0, r0, lsl #4
 800c6fa:	b2c7      	uxtb	r7, r0
 800c6fc:	d1ed      	bne.n	800c6da <GUI__ConvertColor2Index+0x12a>
 800c6fe:	f104 0904 	add.w	r9, r4, #4
 800c702:	2500      	movs	r5, #0
 800c704:	e7f0      	b.n	800c6e8 <GUI__ConvertColor2Index+0x138>
 800c706:	691f      	ldr	r7, [r3, #16]
 800c708:	b12f      	cbz	r7, 800c716 <GUI__ConvertColor2Index+0x166>
 800c70a:	4620      	mov	r0, r4
 800c70c:	4641      	mov	r1, r8
 800c70e:	462a      	mov	r2, r5
 800c710:	2301      	movs	r3, #1
 800c712:	47b8      	blx	r7
 800c714:	e007      	b.n	800c726 <GUI__ConvertColor2Index+0x176>
 800c716:	f854 0027 	ldr.w	r0, [r4, r7, lsl #2]
 800c71a:	47b0      	blx	r6
 800c71c:	f808 0007 	strb.w	r0, [r8, r7]
 800c720:	3701      	adds	r7, #1
 800c722:	42bd      	cmp	r5, r7
 800c724:	d1f7      	bne.n	800c716 <GUI__ConvertColor2Index+0x166>
 800c726:	2001      	movs	r0, #1
 800c728:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c72c:	f104 0904 	add.w	r9, r4, #4
 800c730:	2500      	movs	r5, #0
 800c732:	e761      	b.n	800c5f8 <GUI__ConvertColor2Index+0x48>
 800c734:	f104 0904 	add.w	r9, r4, #4
 800c738:	2500      	movs	r5, #0
 800c73a:	e7ae      	b.n	800c69a <GUI__ConvertColor2Index+0xea>
 800c73c:	691f      	ldr	r7, [r3, #16]
 800c73e:	b11f      	cbz	r7, 800c748 <GUI__ConvertColor2Index+0x198>
 800c740:	4641      	mov	r1, r8
 800c742:	462a      	mov	r2, r5
 800c744:	2302      	movs	r3, #2
 800c746:	e7e4      	b.n	800c712 <GUI__ConvertColor2Index+0x162>
 800c748:	f854 0b04 	ldr.w	r0, [r4], #4
 800c74c:	47b0      	blx	r6
 800c74e:	3d01      	subs	r5, #1
 800c750:	f828 0b02 	strh.w	r0, [r8], #2
 800c754:	d1f8      	bne.n	800c748 <GUI__ConvertColor2Index+0x198>
 800c756:	e7e6      	b.n	800c726 <GUI__ConvertColor2Index+0x176>

0800c758 <GUI__CompactPixelIndicesEx>:
 800c758:	b513      	push	{r0, r1, r4, lr}
 800c75a:	2400      	movs	r4, #0
 800c75c:	9400      	str	r4, [sp, #0]
 800c75e:	f7ff ff27 	bl	800c5b0 <GUI__ConvertColor2Index>
 800c762:	b002      	add	sp, #8
 800c764:	bd10      	pop	{r4, pc}
	...

0800c768 <_Add>:
 800c768:	4a0f      	ldr	r2, [pc, #60]	; (800c7a8 <_Add+0x40>)
 800c76a:	6813      	ldr	r3, [r2, #0]
 800c76c:	2b0b      	cmp	r3, #11
 800c76e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c770:	4617      	mov	r7, r2
 800c772:	dc18      	bgt.n	800c7a6 <_Add+0x3e>
 800c774:	2b00      	cmp	r3, #0
 800c776:	4c0d      	ldr	r4, [pc, #52]	; (800c7ac <_Add+0x44>)
 800c778:	dc01      	bgt.n	800c77e <_Add+0x16>
 800c77a:	2200      	movs	r2, #0
 800c77c:	e00f      	b.n	800c79e <_Add+0x36>
 800c77e:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 800c782:	461a      	mov	r2, r3
 800c784:	f831 6d02 	ldrh.w	r6, [r1, #-2]!
 800c788:	fa0f fc86 	sxth.w	ip, r6
 800c78c:	4584      	cmp	ip, r0
 800c78e:	f102 35ff 	add.w	r5, r2, #4294967295
 800c792:	db04      	blt.n	800c79e <_Add+0x36>
 800c794:	804e      	strh	r6, [r1, #2]
 800c796:	2d00      	cmp	r5, #0
 800c798:	d0ef      	beq.n	800c77a <_Add+0x12>
 800c79a:	462a      	mov	r2, r5
 800c79c:	e7f2      	b.n	800c784 <_Add+0x1c>
 800c79e:	3301      	adds	r3, #1
 800c7a0:	f824 0012 	strh.w	r0, [r4, r2, lsl #1]
 800c7a4:	603b      	str	r3, [r7, #0]
 800c7a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c7a8:	20000408 	.word	0x20000408
 800c7ac:	2000040c 	.word	0x2000040c

0800c7b0 <GL_FillPolygon>:
 800c7b0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7b4:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 800c970 <GL_FillPolygon+0x1c0>
 800c7b8:	9101      	str	r1, [sp, #4]
 800c7ba:	4692      	mov	sl, r2
 800c7bc:	4606      	mov	r6, r0
 800c7be:	f643 74ff 	movw	r4, #16383	; 0x3fff
 800c7c2:	2200      	movs	r2, #0
 800c7c4:	9901      	ldr	r1, [sp, #4]
 800c7c6:	428a      	cmp	r2, r1
 800c7c8:	da0b      	bge.n	800c7e2 <GL_FillPolygon+0x32>
 800c7ca:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 800c7ce:	3201      	adds	r2, #1
 800c7d0:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800c7d4:	428c      	cmp	r4, r1
 800c7d6:	bfa8      	it	ge
 800c7d8:	460c      	movge	r4, r1
 800c7da:	4589      	cmp	r9, r1
 800c7dc:	bfb8      	it	lt
 800c7de:	4689      	movlt	r9, r1
 800c7e0:	e7f0      	b.n	800c7c4 <GL_FillPolygon+0x14>
 800c7e2:	4960      	ldr	r1, [pc, #384]	; (800c964 <GL_FillPolygon+0x1b4>)
 800c7e4:	680a      	ldr	r2, [r1, #0]
 800c7e6:	6952      	ldr	r2, [r2, #20]
 800c7e8:	468b      	mov	fp, r1
 800c7ea:	b15a      	cbz	r2, 800c804 <GL_FillPolygon+0x54>
 800c7ec:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 800c7f0:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800c7f4:	1ac9      	subs	r1, r1, r3
 800c7f6:	1ad2      	subs	r2, r2, r3
 800c7f8:	4589      	cmp	r9, r1
 800c7fa:	bfa8      	it	ge
 800c7fc:	4689      	movge	r9, r1
 800c7fe:	4294      	cmp	r4, r2
 800c800:	bfb8      	it	lt
 800c802:	4614      	movlt	r4, r2
 800c804:	eb04 0803 	add.w	r8, r4, r3
 800c808:	454c      	cmp	r4, r9
 800c80a:	f300 80a7 	bgt.w	800c95c <GL_FillPolygon+0x1ac>
 800c80e:	4b56      	ldr	r3, [pc, #344]	; (800c968 <GL_FillPolygon+0x1b8>)
 800c810:	2700      	movs	r7, #0
 800c812:	601f      	str	r7, [r3, #0]
 800c814:	4635      	mov	r5, r6
 800c816:	9901      	ldr	r1, [sp, #4]
 800c818:	428f      	cmp	r7, r1
 800c81a:	da55      	bge.n	800c8c8 <GL_FillPolygon+0x118>
 800c81c:	9b01      	ldr	r3, [sp, #4]
 800c81e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c822:	1e59      	subs	r1, r3, #1
 800c824:	428f      	cmp	r7, r1
 800c826:	bfb4      	ite	lt
 800c828:	f107 0c01 	addlt.w	ip, r7, #1
 800c82c:	f04f 0c00 	movge.w	ip, #0
 800c830:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800c834:	eb06 030c 	add.w	r3, r6, ip
 800c838:	42a2      	cmp	r2, r4
 800c83a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c83e:	d136      	bne.n	800c8ae <GL_FillPolygon+0xfe>
 800c840:	42a3      	cmp	r3, r4
 800c842:	d002      	beq.n	800c84a <GL_FillPolygon+0x9a>
 800c844:	463a      	mov	r2, r7
 800c846:	2000      	movs	r0, #0
 800c848:	e01b      	b.n	800c882 <GL_FillPolygon+0xd2>
 800c84a:	f9b5 e000 	ldrsh.w	lr, [r5]
 800c84e:	f936 200c 	ldrsh.w	r2, [r6, ip]
 800c852:	f8db 3000 	ldr.w	r3, [fp]
 800c856:	44d6      	add	lr, sl
 800c858:	4452      	add	r2, sl
 800c85a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c85c:	4596      	cmp	lr, r2
 800c85e:	681b      	ldr	r3, [r3, #0]
 800c860:	da02      	bge.n	800c868 <GL_FillPolygon+0xb8>
 800c862:	4670      	mov	r0, lr
 800c864:	4641      	mov	r1, r8
 800c866:	e020      	b.n	800c8aa <GL_FillPolygon+0xfa>
 800c868:	4610      	mov	r0, r2
 800c86a:	4641      	mov	r1, r8
 800c86c:	4672      	mov	r2, lr
 800c86e:	e01c      	b.n	800c8aa <GL_FillPolygon+0xfa>
 800c870:	b152      	cbz	r2, 800c888 <GL_FillPolygon+0xd8>
 800c872:	3a01      	subs	r2, #1
 800c874:	eb06 0c82 	add.w	ip, r6, r2, lsl #2
 800c878:	f9bc c002 	ldrsh.w	ip, [ip, #2]
 800c87c:	45a4      	cmp	ip, r4
 800c87e:	d105      	bne.n	800c88c <GL_FillPolygon+0xdc>
 800c880:	3001      	adds	r0, #1
 800c882:	4288      	cmp	r0, r1
 800c884:	dbf4      	blt.n	800c870 <GL_FillPolygon+0xc0>
 800c886:	e01c      	b.n	800c8c2 <GL_FillPolygon+0x112>
 800c888:	460a      	mov	r2, r1
 800c88a:	e7f3      	b.n	800c874 <GL_FillPolygon+0xc4>
 800c88c:	ebc4 0c0c 	rsb	ip, r4, ip
 800c890:	1b1b      	subs	r3, r3, r4
 800c892:	ea9c 0f03 	teq	ip, r3
 800c896:	f9b5 0000 	ldrsh.w	r0, [r5]
 800c89a:	d44d      	bmi.n	800c938 <GL_FillPolygon+0x188>
 800c89c:	f8db 3000 	ldr.w	r3, [fp]
 800c8a0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c8a2:	4450      	add	r0, sl
 800c8a4:	681b      	ldr	r3, [r3, #0]
 800c8a6:	4641      	mov	r1, r8
 800c8a8:	4602      	mov	r2, r0
 800c8aa:	4798      	blx	r3
 800c8ac:	e009      	b.n	800c8c2 <GL_FillPolygon+0x112>
 800c8ae:	42a3      	cmp	r3, r4
 800c8b0:	d007      	beq.n	800c8c2 <GL_FillPolygon+0x112>
 800c8b2:	db44      	blt.n	800c93e <GL_FillPolygon+0x18e>
 800c8b4:	42a2      	cmp	r2, r4
 800c8b6:	dd27      	ble.n	800c908 <GL_FillPolygon+0x158>
 800c8b8:	42a3      	cmp	r3, r4
 800c8ba:	dd42      	ble.n	800c942 <GL_FillPolygon+0x192>
 800c8bc:	e001      	b.n	800c8c2 <GL_FillPolygon+0x112>
 800c8be:	42a3      	cmp	r3, r4
 800c8c0:	dd49      	ble.n	800c956 <GL_FillPolygon+0x1a6>
 800c8c2:	3701      	adds	r7, #1
 800c8c4:	3504      	adds	r5, #4
 800c8c6:	e7a6      	b.n	800c816 <GL_FillPolygon+0x66>
 800c8c8:	2500      	movs	r5, #0
 800c8ca:	4628      	mov	r0, r5
 800c8cc:	462f      	mov	r7, r5
 800c8ce:	4b26      	ldr	r3, [pc, #152]	; (800c968 <GL_FillPolygon+0x1b8>)
 800c8d0:	681b      	ldr	r3, [r3, #0]
 800c8d2:	429f      	cmp	r7, r3
 800c8d4:	da14      	bge.n	800c900 <GL_FillPolygon+0x150>
 800c8d6:	4b25      	ldr	r3, [pc, #148]	; (800c96c <GL_FillPolygon+0x1bc>)
 800c8d8:	f933 3017 	ldrsh.w	r3, [r3, r7, lsl #1]
 800c8dc:	b15d      	cbz	r5, 800c8f6 <GL_FillPolygon+0x146>
 800c8de:	f8db 2000 	ldr.w	r2, [fp]
 800c8e2:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800c8e4:	4450      	add	r0, sl
 800c8e6:	f8d2 c000 	ldr.w	ip, [r2]
 800c8ea:	9300      	str	r3, [sp, #0]
 800c8ec:	eb0a 0203 	add.w	r2, sl, r3
 800c8f0:	4641      	mov	r1, r8
 800c8f2:	47e0      	blx	ip
 800c8f4:	9b00      	ldr	r3, [sp, #0]
 800c8f6:	f085 0501 	eor.w	r5, r5, #1
 800c8fa:	3701      	adds	r7, #1
 800c8fc:	4618      	mov	r0, r3
 800c8fe:	e7e6      	b.n	800c8ce <GL_FillPolygon+0x11e>
 800c900:	3401      	adds	r4, #1
 800c902:	f108 0801 	add.w	r8, r8, #1
 800c906:	e77f      	b.n	800c808 <GL_FillPolygon+0x58>
 800c908:	429a      	cmp	r2, r3
 800c90a:	dcd8      	bgt.n	800c8be <GL_FillPolygon+0x10e>
 800c90c:	f9b5 1000 	ldrsh.w	r1, [r5]
 800c910:	f936 000c 	ldrsh.w	r0, [r6, ip]
 800c914:	ebc2 0e04 	rsb	lr, r2, r4
 800c918:	1a40      	subs	r0, r0, r1
 800c91a:	fb0e f000 	mul.w	r0, lr, r0
 800c91e:	2800      	cmp	r0, #0
 800c920:	ebc2 0303 	rsb	r3, r2, r3
 800c924:	bfdb      	ittet	le
 800c926:	105a      	asrle	r2, r3, #1
 800c928:	f1c2 0201 	rsble	r2, r2, #1
 800c92c:	eb00 0063 	addgt.w	r0, r0, r3, asr #1
 800c930:	1880      	addle	r0, r0, r2
 800c932:	fb90 f0f3 	sdiv	r0, r0, r3
 800c936:	4408      	add	r0, r1
 800c938:	f7ff ff16 	bl	800c768 <_Add>
 800c93c:	e7c1      	b.n	800c8c2 <GL_FillPolygon+0x112>
 800c93e:	42a2      	cmp	r2, r4
 800c940:	dbbf      	blt.n	800c8c2 <GL_FillPolygon+0x112>
 800c942:	429a      	cmp	r2, r3
 800c944:	ddbd      	ble.n	800c8c2 <GL_FillPolygon+0x112>
 800c946:	4696      	mov	lr, r2
 800c948:	f936 100c 	ldrsh.w	r1, [r6, ip]
 800c94c:	f9b5 0000 	ldrsh.w	r0, [r5]
 800c950:	461a      	mov	r2, r3
 800c952:	4673      	mov	r3, lr
 800c954:	e7de      	b.n	800c914 <GL_FillPolygon+0x164>
 800c956:	42a2      	cmp	r2, r4
 800c958:	daf5      	bge.n	800c946 <GL_FillPolygon+0x196>
 800c95a:	e7b2      	b.n	800c8c2 <GL_FillPolygon+0x112>
 800c95c:	b003      	add	sp, #12
 800c95e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c962:	bf00      	nop
 800c964:	200000b0 	.word	0x200000b0
 800c968:	20000408 	.word	0x20000408
 800c96c:	2000040c 	.word	0x2000040c
 800c970:	ffffc001 	.word	0xffffc001

0800c974 <_DrawGradient>:
 800c974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c978:	b08f      	sub	sp, #60	; 0x3c
 800c97a:	4688      	mov	r8, r1
 800c97c:	4614      	mov	r4, r2
 800c97e:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c980:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800c982:	f8dd a060 	ldr.w	sl, [sp, #96]	; 0x60
 800c986:	f8dd b064 	ldr.w	fp, [sp, #100]	; 0x64
 800c98a:	9104      	str	r1, [sp, #16]
 800c98c:	4605      	mov	r5, r0
 800c98e:	461e      	mov	r6, r3
 800c990:	9203      	str	r2, [sp, #12]
 800c992:	f7fc fa3c 	bl	8008e0e <GUI_GetColor>
 800c996:	45da      	cmp	sl, fp
 800c998:	9009      	str	r0, [sp, #36]	; 0x24
 800c99a:	d109      	bne.n	800c9b0 <_DrawGradient+0x3c>
 800c99c:	4650      	mov	r0, sl
 800c99e:	f7fa fd4b 	bl	8007438 <LCD_SetColor>
 800c9a2:	9b03      	ldr	r3, [sp, #12]
 800c9a4:	b113      	cbz	r3, 800c9ac <_DrawGradient+0x38>
 800c9a6:	4628      	mov	r0, r5
 800c9a8:	4641      	mov	r1, r8
 800c9aa:	e09d      	b.n	800cae8 <_DrawGradient+0x174>
 800c9ac:	4640      	mov	r0, r8
 800c9ae:	e0a1      	b.n	800caf4 <_DrawGradient+0x180>
 800c9b0:	ebb6 0708 	subs.w	r7, r6, r8
 800c9b4:	f000 80b2 	beq.w	800cb1c <_DrawGradient+0x1a8>
 800c9b8:	fa5f f28a 	uxtb.w	r2, sl
 800c9bc:	fa5f f38b 	uxtb.w	r3, fp
 800c9c0:	1a9b      	subs	r3, r3, r2
 800c9c2:	930a      	str	r3, [sp, #40]	; 0x28
 800c9c4:	2302      	movs	r3, #2
 800c9c6:	fb97 f3f3 	sdiv	r3, r7, r3
 800c9ca:	fb02 3207 	mla	r2, r2, r7, r3
 800c9ce:	f3cb 2107 	ubfx	r1, fp, #8, #8
 800c9d2:	9205      	str	r2, [sp, #20]
 800c9d4:	f3ca 2207 	ubfx	r2, sl, #8, #8
 800c9d8:	1a89      	subs	r1, r1, r2
 800c9da:	fb02 3207 	mla	r2, r2, r7, r3
 800c9de:	910b      	str	r1, [sp, #44]	; 0x2c
 800c9e0:	9206      	str	r2, [sp, #24]
 800c9e2:	f3cb 4107 	ubfx	r1, fp, #16, #8
 800c9e6:	f3ca 4207 	ubfx	r2, sl, #16, #8
 800c9ea:	ea4f 6a1a 	mov.w	sl, sl, lsr #24
 800c9ee:	1a89      	subs	r1, r1, r2
 800c9f0:	ebca 6b1b 	rsb	fp, sl, fp, lsr #24
 800c9f4:	fb02 3207 	mla	r2, r2, r7, r3
 800c9f8:	fb0a 3a07 	mla	sl, sl, r7, r3
 800c9fc:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c9fe:	910c      	str	r1, [sp, #48]	; 0x30
 800ca00:	9207      	str	r2, [sp, #28]
 800ca02:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
 800ca06:	f8cd a020 	str.w	sl, [sp, #32]
 800ca0a:	f108 33ff 	add.w	r3, r8, #4294967295
 800ca0e:	f04f 0901 	mov.w	r9, #1
 800ca12:	f103 0a01 	add.w	sl, r3, #1
 800ca16:	45b2      	cmp	sl, r6
 800ca18:	dc5b      	bgt.n	800cad2 <_DrawGradient+0x15e>
 800ca1a:	f8dd c014 	ldr.w	ip, [sp, #20]
 800ca1e:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
 800ca22:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800ca24:	fb9c fcf7 	sdiv	ip, ip, r7
 800ca28:	f8cd c004 	str.w	ip, [sp, #4]
 800ca2c:	f8dd c014 	ldr.w	ip, [sp, #20]
 800ca30:	44f4      	add	ip, lr
 800ca32:	f8cd c014 	str.w	ip, [sp, #20]
 800ca36:	f8dd e02c 	ldr.w	lr, [sp, #44]	; 0x2c
 800ca3a:	f8dd c018 	ldr.w	ip, [sp, #24]
 800ca3e:	fb9c f1f7 	sdiv	r1, ip, r7
 800ca42:	44f4      	add	ip, lr
 800ca44:	f8cd c018 	str.w	ip, [sp, #24]
 800ca48:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 800ca4c:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800ca50:	fb9c fbf7 	sdiv	fp, ip, r7
 800ca54:	44f4      	add	ip, lr
 800ca56:	f8cd c01c 	str.w	ip, [sp, #28]
 800ca5a:	f8dd c020 	ldr.w	ip, [sp, #32]
 800ca5e:	fb9c fef7 	sdiv	lr, ip, r7
 800ca62:	4494      	add	ip, r2
 800ca64:	f8cd c020 	str.w	ip, [sp, #32]
 800ca68:	f8dd c004 	ldr.w	ip, [sp, #4]
 800ca6c:	ea4f 4b0b 	mov.w	fp, fp, lsl #16
 800ca70:	ea4b 6b0e 	orr.w	fp, fp, lr, lsl #24
 800ca74:	ea4c 2201 	orr.w	r2, ip, r1, lsl #8
 800ca78:	45c2      	cmp	sl, r8
 800ca7a:	ea4b 0b02 	orr.w	fp, fp, r2
 800ca7e:	dd25      	ble.n	800cacc <_DrawGradient+0x158>
 800ca80:	4583      	cmp	fp, r0
 800ca82:	d102      	bne.n	800ca8a <_DrawGradient+0x116>
 800ca84:	f109 0901 	add.w	r9, r9, #1
 800ca88:	e020      	b.n	800cacc <_DrawGradient+0x158>
 800ca8a:	9302      	str	r3, [sp, #8]
 800ca8c:	f7fa fcd4 	bl	8007438 <LCD_SetColor>
 800ca90:	f1b9 0f01 	cmp.w	r9, #1
 800ca94:	9b02      	ldr	r3, [sp, #8]
 800ca96:	d00f      	beq.n	800cab8 <_DrawGradient+0x144>
 800ca98:	9a03      	ldr	r2, [sp, #12]
 800ca9a:	ebc9 010a 	rsb	r1, r9, sl
 800ca9e:	b112      	cbz	r2, 800caa6 <_DrawGradient+0x132>
 800caa0:	4628      	mov	r0, r5
 800caa2:	4622      	mov	r2, r4
 800caa4:	e003      	b.n	800caae <_DrawGradient+0x13a>
 800caa6:	4608      	mov	r0, r1
 800caa8:	461a      	mov	r2, r3
 800caaa:	4629      	mov	r1, r5
 800caac:	4623      	mov	r3, r4
 800caae:	f7fa fa3f 	bl	8006f30 <LCD_FillRect>
 800cab2:	f04f 0901 	mov.w	r9, #1
 800cab6:	e009      	b.n	800cacc <_DrawGradient+0x158>
 800cab8:	9903      	ldr	r1, [sp, #12]
 800caba:	b111      	cbz	r1, 800cac2 <_DrawGradient+0x14e>
 800cabc:	4628      	mov	r0, r5
 800cabe:	4619      	mov	r1, r3
 800cac0:	e001      	b.n	800cac6 <_DrawGradient+0x152>
 800cac2:	4618      	mov	r0, r3
 800cac4:	4629      	mov	r1, r5
 800cac6:	4622      	mov	r2, r4
 800cac8:	9b04      	ldr	r3, [sp, #16]
 800caca:	4798      	blx	r3
 800cacc:	4653      	mov	r3, sl
 800cace:	4658      	mov	r0, fp
 800cad0:	e79f      	b.n	800ca12 <_DrawGradient+0x9e>
 800cad2:	f7fa fcb1 	bl	8007438 <LCD_SetColor>
 800cad6:	f1b9 0f01 	cmp.w	r9, #1
 800cada:	d00f      	beq.n	800cafc <_DrawGradient+0x188>
 800cadc:	9a03      	ldr	r2, [sp, #12]
 800cade:	ebc9 0106 	rsb	r1, r9, r6
 800cae2:	b132      	cbz	r2, 800caf2 <_DrawGradient+0x17e>
 800cae4:	4628      	mov	r0, r5
 800cae6:	3101      	adds	r1, #1
 800cae8:	4622      	mov	r2, r4
 800caea:	4633      	mov	r3, r6
 800caec:	f7fa fa20 	bl	8006f30 <LCD_FillRect>
 800caf0:	e00e      	b.n	800cb10 <_DrawGradient+0x19c>
 800caf2:	1c48      	adds	r0, r1, #1
 800caf4:	4629      	mov	r1, r5
 800caf6:	4632      	mov	r2, r6
 800caf8:	4623      	mov	r3, r4
 800cafa:	e7f7      	b.n	800caec <_DrawGradient+0x178>
 800cafc:	9b03      	ldr	r3, [sp, #12]
 800cafe:	b113      	cbz	r3, 800cb06 <_DrawGradient+0x192>
 800cb00:	4628      	mov	r0, r5
 800cb02:	4631      	mov	r1, r6
 800cb04:	e001      	b.n	800cb0a <_DrawGradient+0x196>
 800cb06:	4630      	mov	r0, r6
 800cb08:	4629      	mov	r1, r5
 800cb0a:	4622      	mov	r2, r4
 800cb0c:	9b04      	ldr	r3, [sp, #16]
 800cb0e:	4798      	blx	r3
 800cb10:	9809      	ldr	r0, [sp, #36]	; 0x24
 800cb12:	b00f      	add	sp, #60	; 0x3c
 800cb14:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb18:	f7fa bc8e 	b.w	8007438 <LCD_SetColor>
 800cb1c:	b00f      	add	sp, #60	; 0x3c
 800cb1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800cb24 <GUI_DrawGradientV>:
 800cb24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cb28:	4c15      	ldr	r4, [pc, #84]	; (800cb80 <GUI_DrawGradientV+0x5c>)
 800cb2a:	6824      	ldr	r4, [r4, #0]
 800cb2c:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800cb2e:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800cb30:	b087      	sub	sp, #28
 800cb32:	eb00 0905 	add.w	r9, r0, r5
 800cb36:	eb01 0804 	add.w	r8, r1, r4
 800cb3a:	4415      	add	r5, r2
 800cb3c:	441c      	add	r4, r3
 800cb3e:	a804      	add	r0, sp, #16
 800cb40:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800cb42:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800cb44:	f8ad 9010 	strh.w	r9, [sp, #16]
 800cb48:	f8ad 5014 	strh.w	r5, [sp, #20]
 800cb4c:	f8ad 8012 	strh.w	r8, [sp, #18]
 800cb50:	f8ad 4016 	strh.w	r4, [sp, #22]
 800cb54:	f7f8 fe34 	bl	80057c0 <WM__InitIVRSearch>
 800cb58:	b170      	cbz	r0, 800cb78 <GUI_DrawGradientV+0x54>
 800cb5a:	4b0a      	ldr	r3, [pc, #40]	; (800cb84 <GUI_DrawGradientV+0x60>)
 800cb5c:	9302      	str	r3, [sp, #8]
 800cb5e:	2301      	movs	r3, #1
 800cb60:	9303      	str	r3, [sp, #12]
 800cb62:	4648      	mov	r0, r9
 800cb64:	4641      	mov	r1, r8
 800cb66:	462a      	mov	r2, r5
 800cb68:	4623      	mov	r3, r4
 800cb6a:	9700      	str	r7, [sp, #0]
 800cb6c:	9601      	str	r6, [sp, #4]
 800cb6e:	f7ff ff01 	bl	800c974 <_DrawGradient>
 800cb72:	f7f8 fd63 	bl	800563c <WM__GetNextIVR>
 800cb76:	e7ef      	b.n	800cb58 <GUI_DrawGradientV+0x34>
 800cb78:	b007      	add	sp, #28
 800cb7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cb7e:	bf00      	nop
 800cb80:	200000b0 	.word	0x200000b0
 800cb84:	08006e99 	.word	0x08006e99

0800cb88 <GUI_DrawGradientH>:
 800cb88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cb8c:	4c15      	ldr	r4, [pc, #84]	; (800cbe4 <GUI_DrawGradientH+0x5c>)
 800cb8e:	6825      	ldr	r5, [r4, #0]
 800cb90:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 800cb92:	6d2d      	ldr	r5, [r5, #80]	; 0x50
 800cb94:	b087      	sub	sp, #28
 800cb96:	eb00 0804 	add.w	r8, r0, r4
 800cb9a:	eb01 0905 	add.w	r9, r1, r5
 800cb9e:	4414      	add	r4, r2
 800cba0:	441d      	add	r5, r3
 800cba2:	a804      	add	r0, sp, #16
 800cba4:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800cba6:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800cba8:	f8ad 8010 	strh.w	r8, [sp, #16]
 800cbac:	f8ad 4014 	strh.w	r4, [sp, #20]
 800cbb0:	f8ad 9012 	strh.w	r9, [sp, #18]
 800cbb4:	f8ad 5016 	strh.w	r5, [sp, #22]
 800cbb8:	f7f8 fe02 	bl	80057c0 <WM__InitIVRSearch>
 800cbbc:	b170      	cbz	r0, 800cbdc <GUI_DrawGradientH+0x54>
 800cbbe:	4b0a      	ldr	r3, [pc, #40]	; (800cbe8 <GUI_DrawGradientH+0x60>)
 800cbc0:	9302      	str	r3, [sp, #8]
 800cbc2:	2300      	movs	r3, #0
 800cbc4:	9303      	str	r3, [sp, #12]
 800cbc6:	4648      	mov	r0, r9
 800cbc8:	4641      	mov	r1, r8
 800cbca:	462a      	mov	r2, r5
 800cbcc:	4623      	mov	r3, r4
 800cbce:	9700      	str	r7, [sp, #0]
 800cbd0:	9601      	str	r6, [sp, #4]
 800cbd2:	f7ff fecf 	bl	800c974 <_DrawGradient>
 800cbd6:	f7f8 fd31 	bl	800563c <WM__GetNextIVR>
 800cbda:	e7ef      	b.n	800cbbc <GUI_DrawGradientH+0x34>
 800cbdc:	b007      	add	sp, #28
 800cbde:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cbe2:	bf00      	nop
 800cbe4:	200000b0 	.word	0x200000b0
 800cbe8:	08006ee5 	.word	0x08006ee5

0800cbec <_DrawDownRect>:
 800cbec:	b510      	push	{r4, lr}
 800cbee:	b09c      	sub	sp, #112	; 0x70
 800cbf0:	4604      	mov	r4, r0
 800cbf2:	4668      	mov	r0, sp
 800cbf4:	f7fc f9c0 	bl	8008f78 <GUI_SaveContext_W>
 800cbf8:	4b09      	ldr	r3, [pc, #36]	; (800cc20 <_DrawDownRect+0x34>)
 800cbfa:	6818      	ldr	r0, [r3, #0]
 800cbfc:	f7fa fc1c 	bl	8007438 <LCD_SetColor>
 800cc00:	f9b4 0000 	ldrsh.w	r0, [r4]
 800cc04:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800cc08:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800cc0c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800cc10:	f7fd f850 	bl	8009cb4 <GUI_DrawRect>
 800cc14:	4668      	mov	r0, sp
 800cc16:	f7fc f9b9 	bl	8008f8c <GUI_RestoreContext>
 800cc1a:	b01c      	add	sp, #112	; 0x70
 800cc1c:	bd10      	pop	{r4, pc}
 800cc1e:	bf00      	nop
 800cc20:	20000424 	.word	0x20000424

0800cc24 <_DrawUpRect>:
 800cc24:	b510      	push	{r4, lr}
 800cc26:	b09c      	sub	sp, #112	; 0x70
 800cc28:	4604      	mov	r4, r0
 800cc2a:	4668      	mov	r0, sp
 800cc2c:	f7fc f9a4 	bl	8008f78 <GUI_SaveContext_W>
 800cc30:	4b09      	ldr	r3, [pc, #36]	; (800cc58 <_DrawUpRect+0x34>)
 800cc32:	6818      	ldr	r0, [r3, #0]
 800cc34:	f7fa fc00 	bl	8007438 <LCD_SetColor>
 800cc38:	f9b4 0000 	ldrsh.w	r0, [r4]
 800cc3c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800cc40:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800cc44:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800cc48:	f7fd f834 	bl	8009cb4 <GUI_DrawRect>
 800cc4c:	4668      	mov	r0, sp
 800cc4e:	f7fc f99d 	bl	8008f8c <GUI_RestoreContext>
 800cc52:	b01c      	add	sp, #112	; 0x70
 800cc54:	bd10      	pop	{r4, pc}
 800cc56:	bf00      	nop
 800cc58:	20000424 	.word	0x20000424

0800cc5c <_DrawDown>:
 800cc5c:	b507      	push	{r0, r1, r2, lr}
 800cc5e:	4668      	mov	r0, sp
 800cc60:	f7f7 fad2 	bl	8004208 <WM_GetClientRect>
 800cc64:	4668      	mov	r0, sp
 800cc66:	f7ff ffc1 	bl	800cbec <_DrawDownRect>
 800cc6a:	b003      	add	sp, #12
 800cc6c:	f85d fb04 	ldr.w	pc, [sp], #4

0800cc70 <_DrawUp>:
 800cc70:	b507      	push	{r0, r1, r2, lr}
 800cc72:	4668      	mov	r0, sp
 800cc74:	f7f7 fac8 	bl	8004208 <WM_GetClientRect>
 800cc78:	4668      	mov	r0, sp
 800cc7a:	f7ff ffd3 	bl	800cc24 <_DrawUpRect>
 800cc7e:	b003      	add	sp, #12
 800cc80:	f85d fb04 	ldr.w	pc, [sp], #4

0800cc84 <_GetArrowPara>:
 800cc84:	b510      	push	{r4, lr}
 800cc86:	b121      	cbz	r1, 800cc92 <_GetArrowPara+0xe>
 800cc88:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800cc8c:	f9b0 1000 	ldrsh.w	r1, [r0]
 800cc90:	e003      	b.n	800cc9a <_GetArrowPara+0x16>
 800cc92:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800cc96:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800cc9a:	1a61      	subs	r1, r4, r1
 800cc9c:	3101      	adds	r1, #1
 800cc9e:	1f0c      	subs	r4, r1, #4
 800cca0:	2003      	movs	r0, #3
 800cca2:	fb94 f0f0 	sdiv	r0, r4, r0
 800cca6:	6010      	str	r0, [r2, #0]
 800cca8:	1a08      	subs	r0, r1, r0
 800ccaa:	eba1 0160 	sub.w	r1, r1, r0, asr #1
 800ccae:	3901      	subs	r1, #1
 800ccb0:	6019      	str	r1, [r3, #0]
 800ccb2:	bd10      	pop	{r4, pc}

0800ccb4 <_DrawGraspH>:
 800ccb4:	b570      	push	{r4, r5, r6, lr}
 800ccb6:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ccba:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800ccbe:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 800ccc2:	441e      	add	r6, r3
 800ccc4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800ccc8:	6a88      	ldr	r0, [r1, #40]	; 0x28
 800ccca:	1b5c      	subs	r4, r3, r5
 800cccc:	3403      	adds	r4, #3
 800ccce:	10a4      	asrs	r4, r4, #2
 800ccd0:	4425      	add	r5, r4
 800ccd2:	1076      	asrs	r6, r6, #1
 800ccd4:	1b1c      	subs	r4, r3, r4
 800ccd6:	f7fc f96e 	bl	8008fb6 <GUI_SetColor>
 800ccda:	4630      	mov	r0, r6
 800ccdc:	4629      	mov	r1, r5
 800ccde:	4622      	mov	r2, r4
 800cce0:	f7fb fbc8 	bl	8008474 <GUI_DrawVLine>
 800cce4:	1cb0      	adds	r0, r6, #2
 800cce6:	4629      	mov	r1, r5
 800cce8:	4622      	mov	r2, r4
 800ccea:	f7fb fbc3 	bl	8008474 <GUI_DrawVLine>
 800ccee:	1d30      	adds	r0, r6, #4
 800ccf0:	4629      	mov	r1, r5
 800ccf2:	4622      	mov	r2, r4
 800ccf4:	f7fb fbbe 	bl	8008474 <GUI_DrawVLine>
 800ccf8:	1eb0      	subs	r0, r6, #2
 800ccfa:	4629      	mov	r1, r5
 800ccfc:	4622      	mov	r2, r4
 800ccfe:	f7fb fbb9 	bl	8008474 <GUI_DrawVLine>
 800cd02:	1f30      	subs	r0, r6, #4
 800cd04:	4629      	mov	r1, r5
 800cd06:	4622      	mov	r2, r4
 800cd08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd0c:	f7fb bbb2 	b.w	8008474 <GUI_DrawVLine>

0800cd10 <_DrawGraspV>:
 800cd10:	b570      	push	{r4, r5, r6, lr}
 800cd12:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800cd16:	f9b0 6006 	ldrsh.w	r6, [r0, #6]
 800cd1a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800cd1e:	441e      	add	r6, r3
 800cd20:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cd24:	6a88      	ldr	r0, [r1, #40]	; 0x28
 800cd26:	1b5c      	subs	r4, r3, r5
 800cd28:	3403      	adds	r4, #3
 800cd2a:	10a4      	asrs	r4, r4, #2
 800cd2c:	4425      	add	r5, r4
 800cd2e:	1076      	asrs	r6, r6, #1
 800cd30:	1b1c      	subs	r4, r3, r4
 800cd32:	f7fc f940 	bl	8008fb6 <GUI_SetColor>
 800cd36:	4630      	mov	r0, r6
 800cd38:	4629      	mov	r1, r5
 800cd3a:	4622      	mov	r2, r4
 800cd3c:	f7fb fb40 	bl	80083c0 <GUI_DrawHLine>
 800cd40:	1cb0      	adds	r0, r6, #2
 800cd42:	4629      	mov	r1, r5
 800cd44:	4622      	mov	r2, r4
 800cd46:	f7fb fb3b 	bl	80083c0 <GUI_DrawHLine>
 800cd4a:	1d30      	adds	r0, r6, #4
 800cd4c:	4629      	mov	r1, r5
 800cd4e:	4622      	mov	r2, r4
 800cd50:	f7fb fb36 	bl	80083c0 <GUI_DrawHLine>
 800cd54:	1eb0      	subs	r0, r6, #2
 800cd56:	4629      	mov	r1, r5
 800cd58:	4622      	mov	r2, r4
 800cd5a:	f7fb fb31 	bl	80083c0 <GUI_DrawHLine>
 800cd5e:	1f30      	subs	r0, r6, #4
 800cd60:	4629      	mov	r1, r5
 800cd62:	4622      	mov	r2, r4
 800cd64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd68:	f7fb bb2a 	b.w	80083c0 <GUI_DrawHLine>

0800cd6c <_DrawFrame>:
 800cd6c:	b538      	push	{r3, r4, r5, lr}
 800cd6e:	4604      	mov	r4, r0
 800cd70:	6808      	ldr	r0, [r1, #0]
 800cd72:	460d      	mov	r5, r1
 800cd74:	f7fc f91f 	bl	8008fb6 <GUI_SetColor>
 800cd78:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cd7c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800cd80:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 800cd84:	3101      	adds	r1, #1
 800cd86:	3a01      	subs	r2, #1
 800cd88:	f7fb fb1a 	bl	80083c0 <GUI_DrawHLine>
 800cd8c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cd90:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800cd94:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 800cd98:	3101      	adds	r1, #1
 800cd9a:	3a01      	subs	r2, #1
 800cd9c:	f7fb fb10 	bl	80083c0 <GUI_DrawHLine>
 800cda0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800cda4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800cda8:	f9b4 0000 	ldrsh.w	r0, [r4]
 800cdac:	3101      	adds	r1, #1
 800cdae:	3a01      	subs	r2, #1
 800cdb0:	f7fb fb60 	bl	8008474 <GUI_DrawVLine>
 800cdb4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800cdb8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800cdbc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800cdc0:	3101      	adds	r1, #1
 800cdc2:	3a01      	subs	r2, #1
 800cdc4:	f7fb fb56 	bl	8008474 <GUI_DrawVLine>
 800cdc8:	6868      	ldr	r0, [r5, #4]
 800cdca:	f7fc f8f4 	bl	8008fb6 <GUI_SetColor>
 800cdce:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 800cdd2:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cdd6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800cdda:	3001      	adds	r0, #1
 800cddc:	3101      	adds	r1, #1
 800cdde:	3a01      	subs	r2, #1
 800cde0:	f7fb faee 	bl	80083c0 <GUI_DrawHLine>
 800cde4:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 800cde8:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cdec:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800cdf0:	3801      	subs	r0, #1
 800cdf2:	3101      	adds	r1, #1
 800cdf4:	3a01      	subs	r2, #1
 800cdf6:	f7fb fae3 	bl	80083c0 <GUI_DrawHLine>
 800cdfa:	f9b4 0000 	ldrsh.w	r0, [r4]
 800cdfe:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ce02:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ce06:	3001      	adds	r0, #1
 800ce08:	3102      	adds	r1, #2
 800ce0a:	3a02      	subs	r2, #2
 800ce0c:	f7fb fb32 	bl	8008474 <GUI_DrawVLine>
 800ce10:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800ce14:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ce18:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ce1c:	3102      	adds	r1, #2
 800ce1e:	3a02      	subs	r2, #2
 800ce20:	3801      	subs	r0, #1
 800ce22:	f7fb fb27 	bl	8008474 <GUI_DrawVLine>
 800ce26:	68a8      	ldr	r0, [r5, #8]
 800ce28:	f7fc f8c5 	bl	8008fb6 <GUI_SetColor>
 800ce2c:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ce30:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ce34:	f7fb fae8 	bl	8008408 <GUI_DrawPixel>
 800ce38:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ce3c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800ce40:	f7fb fae2 	bl	8008408 <GUI_DrawPixel>
 800ce44:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800ce48:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ce4c:	f7fb fadc 	bl	8008408 <GUI_DrawPixel>
 800ce50:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800ce54:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800ce58:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ce5c:	f7fb bad4 	b.w	8008408 <GUI_DrawPixel>

0800ce60 <_DrawBackgroundH>:
 800ce60:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ce62:	4604      	mov	r4, r0
 800ce64:	460d      	mov	r5, r1
 800ce66:	f7ff ff81 	bl	800cd6c <_DrawFrame>
 800ce6a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ce6e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800ce72:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ce76:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800ce7a:	68ee      	ldr	r6, [r5, #12]
 800ce7c:	9600      	str	r6, [sp, #0]
 800ce7e:	440b      	add	r3, r1
 800ce80:	692e      	ldr	r6, [r5, #16]
 800ce82:	9601      	str	r6, [sp, #4]
 800ce84:	3002      	adds	r0, #2
 800ce86:	3102      	adds	r1, #2
 800ce88:	3a02      	subs	r2, #2
 800ce8a:	105b      	asrs	r3, r3, #1
 800ce8c:	f7ff fe4a 	bl	800cb24 <GUI_DrawGradientV>
 800ce90:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800ce94:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ce98:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ce9c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800cea0:	696c      	ldr	r4, [r5, #20]
 800cea2:	9400      	str	r4, [sp, #0]
 800cea4:	4419      	add	r1, r3
 800cea6:	69ac      	ldr	r4, [r5, #24]
 800cea8:	9401      	str	r4, [sp, #4]
 800ceaa:	1049      	asrs	r1, r1, #1
 800ceac:	3002      	adds	r0, #2
 800ceae:	3101      	adds	r1, #1
 800ceb0:	3a02      	subs	r2, #2
 800ceb2:	3b02      	subs	r3, #2
 800ceb4:	f7ff fe36 	bl	800cb24 <GUI_DrawGradientV>
 800ceb8:	b002      	add	sp, #8
 800ceba:	bd70      	pop	{r4, r5, r6, pc}

0800cebc <_DrawBackgroundV>:
 800cebc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cebe:	4604      	mov	r4, r0
 800cec0:	460d      	mov	r5, r1
 800cec2:	f7ff ff53 	bl	800cd6c <_DrawFrame>
 800cec6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ceca:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800cece:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ced2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800ced6:	68ee      	ldr	r6, [r5, #12]
 800ced8:	9600      	str	r6, [sp, #0]
 800ceda:	4402      	add	r2, r0
 800cedc:	692e      	ldr	r6, [r5, #16]
 800cede:	9601      	str	r6, [sp, #4]
 800cee0:	3002      	adds	r0, #2
 800cee2:	3102      	adds	r1, #2
 800cee4:	1052      	asrs	r2, r2, #1
 800cee6:	3b02      	subs	r3, #2
 800cee8:	f7ff fe4e 	bl	800cb88 <GUI_DrawGradientH>
 800ceec:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800cef0:	f9b4 0000 	ldrsh.w	r0, [r4]
 800cef4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800cef8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800cefc:	696c      	ldr	r4, [r5, #20]
 800cefe:	9400      	str	r4, [sp, #0]
 800cf00:	4410      	add	r0, r2
 800cf02:	69ac      	ldr	r4, [r5, #24]
 800cf04:	9401      	str	r4, [sp, #4]
 800cf06:	1040      	asrs	r0, r0, #1
 800cf08:	3001      	adds	r0, #1
 800cf0a:	3102      	adds	r1, #2
 800cf0c:	3a02      	subs	r2, #2
 800cf0e:	3b02      	subs	r3, #2
 800cf10:	f7ff fe3a 	bl	800cb88 <GUI_DrawGradientH>
 800cf14:	b002      	add	sp, #8
 800cf16:	bd70      	pop	{r4, r5, r6, pc}

0800cf18 <SCROLLBAR_DrawSkinFlex>:
 800cf18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cf1c:	4604      	mov	r4, r0
 800cf1e:	b08b      	sub	sp, #44	; 0x2c
 800cf20:	6800      	ldr	r0, [r0, #0]
 800cf22:	f7fc fc8f 	bl	8009844 <GUI_ALLOC_LockH>
 800cf26:	4607      	mov	r7, r0
 800cf28:	a80a      	add	r0, sp, #40	; 0x28
 800cf2a:	ae06      	add	r6, sp, #24
 800cf2c:	f840 7d1c 	str.w	r7, [r0, #-28]!
 800cf30:	f7fc fc96 	bl	8009860 <GUI_ALLOC_UnlockH>
 800cf34:	6923      	ldr	r3, [r4, #16]
 800cf36:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cf3a:	6963      	ldr	r3, [r4, #20]
 800cf3c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cf40:	69a3      	ldr	r3, [r4, #24]
 800cf42:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cf46:	69e3      	ldr	r3, [r4, #28]
 800cf48:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cf4c:	6a25      	ldr	r5, [r4, #32]
 800cf4e:	e896 0003 	ldmia.w	r6, {r0, r1}
 800cf52:	682b      	ldr	r3, [r5, #0]
 800cf54:	f10d 0820 	add.w	r8, sp, #32
 800cf58:	e888 0003 	stmia.w	r8, {r0, r1}
 800cf5c:	b153      	cbz	r3, 800cf74 <SCROLLBAR_DrawSkinFlex+0x5c>
 800cf5e:	4638      	mov	r0, r7
 800cf60:	4631      	mov	r1, r6
 800cf62:	4632      	mov	r2, r6
 800cf64:	f7fc ff33 	bl	8009dce <WIDGET__RotateRect90>
 800cf68:	f8df 913c 	ldr.w	r9, [pc, #316]	; 800d0a8 <SCROLLBAR_DrawSkinFlex+0x190>
 800cf6c:	f8df c13c 	ldr.w	ip, [pc, #316]	; 800d0ac <SCROLLBAR_DrawSkinFlex+0x194>
 800cf70:	4b49      	ldr	r3, [pc, #292]	; (800d098 <SCROLLBAR_DrawSkinFlex+0x180>)
 800cf72:	e004      	b.n	800cf7e <SCROLLBAR_DrawSkinFlex+0x66>
 800cf74:	f8df 9138 	ldr.w	r9, [pc, #312]	; 800d0b0 <SCROLLBAR_DrawSkinFlex+0x198>
 800cf78:	f8df c138 	ldr.w	ip, [pc, #312]	; 800d0b4 <SCROLLBAR_DrawSkinFlex+0x19c>
 800cf7c:	4b47      	ldr	r3, [pc, #284]	; (800d09c <SCROLLBAR_DrawSkinFlex+0x184>)
 800cf7e:	6862      	ldr	r2, [r4, #4]
 800cf80:	3a08      	subs	r2, #8
 800cf82:	2a11      	cmp	r2, #17
 800cf84:	f200 8083 	bhi.w	800d08e <SCROLLBAR_DrawSkinFlex+0x176>
 800cf88:	e8df f002 	tbb	[pc, r2]
 800cf8c:	81815f13 	.word	0x81815f13
 800cf90:	81818134 	.word	0x81818134
 800cf94:	43813434 	.word	0x43813434
 800cf98:	81818181 	.word	0x81818181
 800cf9c:	0981      	.short	0x0981
 800cf9e:	682b      	ldr	r3, [r5, #0]
 800cfa0:	b113      	cbz	r3, 800cfa8 <SCROLLBAR_DrawSkinFlex+0x90>
 800cfa2:	69a0      	ldr	r0, [r4, #24]
 800cfa4:	6923      	ldr	r3, [r4, #16]
 800cfa6:	e001      	b.n	800cfac <SCROLLBAR_DrawSkinFlex+0x94>
 800cfa8:	69e0      	ldr	r0, [r4, #28]
 800cfaa:	6963      	ldr	r3, [r4, #20]
 800cfac:	1ac0      	subs	r0, r0, r3
 800cfae:	3001      	adds	r0, #1
 800cfb0:	e06e      	b.n	800d090 <SCROLLBAR_DrawSkinFlex+0x178>
 800cfb2:	686a      	ldr	r2, [r5, #4]
 800cfb4:	493a      	ldr	r1, [pc, #232]	; (800d0a0 <SCROLLBAR_DrawSkinFlex+0x188>)
 800cfb6:	4c3b      	ldr	r4, [pc, #236]	; (800d0a4 <SCROLLBAR_DrawSkinFlex+0x18c>)
 800cfb8:	2a02      	cmp	r2, #2
 800cfba:	bf08      	it	eq
 800cfbc:	460c      	moveq	r4, r1
 800cfbe:	4630      	mov	r0, r6
 800cfc0:	4621      	mov	r1, r4
 800cfc2:	4798      	blx	r3
 800cfc4:	6829      	ldr	r1, [r5, #0]
 800cfc6:	aa04      	add	r2, sp, #16
 800cfc8:	ab05      	add	r3, sp, #20
 800cfca:	4640      	mov	r0, r8
 800cfcc:	f7ff fe5a 	bl	800cc84 <_GetArrowPara>
 800cfd0:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800cfd2:	f7fb fff0 	bl	8008fb6 <GUI_SetColor>
 800cfd6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800cfda:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 800cfde:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 800cfe2:	1ad2      	subs	r2, r2, r3
 800cfe4:	f04f 33ff 	mov.w	r3, #4294967295
 800cfe8:	9300      	str	r3, [sp, #0]
 800cfea:	9b05      	ldr	r3, [sp, #20]
 800cfec:	3201      	adds	r2, #1
 800cfee:	4638      	mov	r0, r7
 800cff0:	4419      	add	r1, r3
 800cff2:	e048      	b.n	800d086 <SCROLLBAR_DrawSkinFlex+0x16e>
 800cff4:	4c2b      	ldr	r4, [pc, #172]	; (800d0a4 <SCROLLBAR_DrawSkinFlex+0x18c>)
 800cff6:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800cffa:	69e5      	ldr	r5, [r4, #28]
 800cffc:	9500      	str	r5, [sp, #0]
 800cffe:	6a24      	ldr	r4, [r4, #32]
 800d000:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800d004:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 800d008:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d00c:	9401      	str	r4, [sp, #4]
 800d00e:	47e0      	blx	ip
 800d010:	e03d      	b.n	800d08e <SCROLLBAR_DrawSkinFlex+0x176>
 800d012:	686a      	ldr	r2, [r5, #4]
 800d014:	4922      	ldr	r1, [pc, #136]	; (800d0a0 <SCROLLBAR_DrawSkinFlex+0x188>)
 800d016:	4c23      	ldr	r4, [pc, #140]	; (800d0a4 <SCROLLBAR_DrawSkinFlex+0x18c>)
 800d018:	2a03      	cmp	r2, #3
 800d01a:	bf08      	it	eq
 800d01c:	460c      	moveq	r4, r1
 800d01e:	4630      	mov	r0, r6
 800d020:	4621      	mov	r1, r4
 800d022:	4798      	blx	r3
 800d024:	682b      	ldr	r3, [r5, #0]
 800d026:	b123      	cbz	r3, 800d032 <SCROLLBAR_DrawSkinFlex+0x11a>
 800d028:	f9bd 201e 	ldrsh.w	r2, [sp, #30]
 800d02c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800d030:	e003      	b.n	800d03a <SCROLLBAR_DrawSkinFlex+0x122>
 800d032:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 800d036:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d03a:	1ad3      	subs	r3, r2, r3
 800d03c:	3301      	adds	r3, #1
 800d03e:	2b0e      	cmp	r3, #14
 800d040:	dd25      	ble.n	800d08e <SCROLLBAR_DrawSkinFlex+0x176>
 800d042:	4630      	mov	r0, r6
 800d044:	4621      	mov	r1, r4
 800d046:	47c8      	blx	r9
 800d048:	e021      	b.n	800d08e <SCROLLBAR_DrawSkinFlex+0x176>
 800d04a:	686a      	ldr	r2, [r5, #4]
 800d04c:	4914      	ldr	r1, [pc, #80]	; (800d0a0 <SCROLLBAR_DrawSkinFlex+0x188>)
 800d04e:	4c15      	ldr	r4, [pc, #84]	; (800d0a4 <SCROLLBAR_DrawSkinFlex+0x18c>)
 800d050:	2a01      	cmp	r2, #1
 800d052:	bf08      	it	eq
 800d054:	460c      	moveq	r4, r1
 800d056:	4630      	mov	r0, r6
 800d058:	4621      	mov	r1, r4
 800d05a:	4798      	blx	r3
 800d05c:	6829      	ldr	r1, [r5, #0]
 800d05e:	aa04      	add	r2, sp, #16
 800d060:	ab05      	add	r3, sp, #20
 800d062:	4640      	mov	r0, r8
 800d064:	f7ff fe0e 	bl	800cc84 <_GetArrowPara>
 800d068:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800d06a:	f7fb ffa4 	bl	8008fb6 <GUI_SetColor>
 800d06e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d072:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 800d076:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	; 0x24
 800d07a:	1ad2      	subs	r2, r2, r3
 800d07c:	2301      	movs	r3, #1
 800d07e:	9300      	str	r3, [sp, #0]
 800d080:	9b05      	ldr	r3, [sp, #20]
 800d082:	4638      	mov	r0, r7
 800d084:	1ac9      	subs	r1, r1, r3
 800d086:	1052      	asrs	r2, r2, #1
 800d088:	9b04      	ldr	r3, [sp, #16]
 800d08a:	f7fc ffd1 	bl	800a030 <WIDGET__DrawTriangle>
 800d08e:	2000      	movs	r0, #0
 800d090:	b00b      	add	sp, #44	; 0x2c
 800d092:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d096:	bf00      	nop
 800d098:	0800cebd 	.word	0x0800cebd
 800d09c:	0800ce61 	.word	0x0800ce61
 800d0a0:	20000188 	.word	0x20000188
 800d0a4:	200001b4 	.word	0x200001b4
 800d0a8:	0800cd11 	.word	0x0800cd11
 800d0ac:	0800cb89 	.word	0x0800cb89
 800d0b0:	0800ccb5 	.word	0x0800ccb5
 800d0b4:	0800cb25 	.word	0x0800cb25

0800d0b8 <_Create>:
 800d0b8:	b530      	push	{r4, r5, lr}
 800d0ba:	b08d      	sub	sp, #52	; 0x34
 800d0bc:	4605      	mov	r5, r0
 800d0be:	f7fc fbc1 	bl	8009844 <GUI_ALLOC_LockH>
 800d0c2:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800d0c4:	6c04      	ldr	r4, [r0, #64]	; 0x40
 800d0c6:	9000      	str	r0, [sp, #0]
 800d0c8:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d0cc:	9301      	str	r3, [sp, #4]
 800d0ce:	4b07      	ldr	r3, [pc, #28]	; (800d0ec <_Create+0x34>)
 800d0d0:	6483      	str	r3, [r0, #72]	; 0x48
 800d0d2:	4668      	mov	r0, sp
 800d0d4:	f7fc fbc4 	bl	8009860 <GUI_ALLOC_UnlockH>
 800d0d8:	2300      	movs	r3, #0
 800d0da:	9304      	str	r3, [sp, #16]
 800d0dc:	ab01      	add	r3, sp, #4
 800d0de:	9503      	str	r5, [sp, #12]
 800d0e0:	930b      	str	r3, [sp, #44]	; 0x2c
 800d0e2:	a803      	add	r0, sp, #12
 800d0e4:	47a0      	blx	r4
 800d0e6:	b00d      	add	sp, #52	; 0x34
 800d0e8:	bd30      	pop	{r4, r5, pc}
 800d0ea:	bf00      	nop
 800d0ec:	0800d0f1 	.word	0x0800d0f1

0800d0f0 <_CalcPositions>:
 800d0f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d0f4:	b090      	sub	sp, #64	; 0x40
 800d0f6:	4605      	mov	r5, r0
 800d0f8:	460c      	mov	r4, r1
 800d0fa:	f7fc fba3 	bl	8009844 <GUI_ALLOC_LockH>
 800d0fe:	4603      	mov	r3, r0
 800d100:	9000      	str	r0, [sp, #0]
 800d102:	c803      	ldmia	r0, {r0, r1}
 800d104:	ae03      	add	r6, sp, #12
 800d106:	e886 0003 	stmia.w	r6, {r0, r1}
 800d10a:	8e58      	ldrh	r0, [r3, #50]	; 0x32
 800d10c:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800d110:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 800d114:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800d118:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 800d11c:	920e      	str	r2, [sp, #56]	; 0x38
 800d11e:	f000 0008 	and.w	r0, r0, #8
 800d122:	2800      	cmp	r0, #0
 800d124:	bf0c      	ite	eq
 800d126:	4608      	moveq	r0, r1
 800d128:	4610      	movne	r0, r2
 800d12a:	61a0      	str	r0, [r4, #24]
 800d12c:	bf0c      	ite	eq
 800d12e:	2000      	moveq	r0, #0
 800d130:	2001      	movne	r0, #1
 800d132:	aa01      	add	r2, sp, #4
 800d134:	9001      	str	r0, [sp, #4]
 800d136:	2019      	movs	r0, #25
 800d138:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d13a:	9008      	str	r0, [sp, #32]
 800d13c:	9507      	str	r5, [sp, #28]
 800d13e:	920f      	str	r2, [sp, #60]	; 0x3c
 800d140:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800d144:	970c      	str	r7, [sp, #48]	; 0x30
 800d146:	910d      	str	r1, [sp, #52]	; 0x34
 800d148:	a807      	add	r0, sp, #28
 800d14a:	4798      	blx	r3
 800d14c:	9b00      	ldr	r3, [sp, #0]
 800d14e:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 800d152:	2aff      	cmp	r2, #255	; 0xff
 800d154:	4605      	mov	r5, r0
 800d156:	d111      	bne.n	800d17c <_CalcPositions+0x8c>
 800d158:	6998      	ldr	r0, [r3, #24]
 800d15a:	f7f7 f97d 	bl	8004458 <WM_GetScrollbarV>
 800d15e:	b168      	cbz	r0, 800d17c <_CalcPositions+0x8c>
 800d160:	a905      	add	r1, sp, #20
 800d162:	f7f7 f992 	bl	800448a <WM_GetWindowRectEx>
 800d166:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800d16a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d16e:	429a      	cmp	r2, r3
 800d170:	d104      	bne.n	800d17c <_CalcPositions+0x8c>
 800d172:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800d176:	3b01      	subs	r3, #1
 800d178:	f8ad 3010 	strh.w	r3, [sp, #16]
 800d17c:	9b00      	ldr	r3, [sp, #0]
 800d17e:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 800d182:	2afe      	cmp	r2, #254	; 0xfe
 800d184:	d111      	bne.n	800d1aa <_CalcPositions+0xba>
 800d186:	6998      	ldr	r0, [r3, #24]
 800d188:	f7f7 f961 	bl	800444e <WM_GetScrollbarH>
 800d18c:	b168      	cbz	r0, 800d1aa <_CalcPositions+0xba>
 800d18e:	a905      	add	r1, sp, #20
 800d190:	f7f7 f97b 	bl	800448a <WM_GetWindowRectEx>
 800d194:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800d198:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800d19c:	429a      	cmp	r2, r3
 800d19e:	d104      	bne.n	800d1aa <_CalcPositions+0xba>
 800d1a0:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d1a4:	3b01      	subs	r3, #1
 800d1a6:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d1aa:	427a      	negs	r2, r7
 800d1ac:	4630      	mov	r0, r6
 800d1ae:	f1c8 0100 	rsb	r1, r8, #0
 800d1b2:	f7fb fe78 	bl	8008ea6 <GUI_MoveRect>
 800d1b6:	9800      	ldr	r0, [sp, #0]
 800d1b8:	4631      	mov	r1, r6
 800d1ba:	f7fc ff92 	bl	800a0e2 <SCROLLBAR__Rect2VRect>
 800d1be:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800d1c2:	f9bd a010 	ldrsh.w	sl, [sp, #16]
 800d1c6:	9b00      	ldr	r3, [sp, #0]
 800d1c8:	ebc2 0a0a 	rsb	sl, r2, sl
 800d1cc:	f8d3 904c 	ldr.w	r9, [r3, #76]	; 0x4c
 800d1d0:	6d58      	ldr	r0, [r3, #84]	; 0x54
 800d1d2:	f10a 0601 	add.w	r6, sl, #1
 800d1d6:	eba6 0645 	sub.w	r6, r6, r5, lsl #1
 800d1da:	4649      	mov	r1, r9
 800d1dc:	4370      	muls	r0, r6
 800d1de:	f7fa f933 	bl	8007448 <GUI__DivideRound32>
 800d1e2:	4b17      	ldr	r3, [pc, #92]	; (800d240 <_CalcPositions+0x150>)
 800d1e4:	f8c4 a014 	str.w	sl, [r4, #20]
 800d1e8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d1ec:	1c5a      	adds	r2, r3, #1
 800d1ee:	4282      	cmp	r2, r0
 800d1f0:	bfa8      	it	ge
 800d1f2:	1c98      	addge	r0, r3, #2
 800d1f4:	42b0      	cmp	r0, r6
 800d1f6:	bfb4      	ite	lt
 800d1f8:	4607      	movlt	r7, r0
 800d1fa:	4637      	movge	r7, r6
 800d1fc:	ebc7 0806 	rsb	r8, r7, r6
 800d200:	442e      	add	r6, r5
 800d202:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d206:	6126      	str	r6, [r4, #16]
 800d208:	ae10      	add	r6, sp, #64	; 0x40
 800d20a:	6023      	str	r3, [r4, #0]
 800d20c:	1e6b      	subs	r3, r5, #1
 800d20e:	6063      	str	r3, [r4, #4]
 800d210:	f856 3d40 	ldr.w	r3, [r6, #-64]!
 800d214:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800d216:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800d218:	fb00 f008 	mul.w	r0, r0, r8
 800d21c:	ebc1 0109 	rsb	r1, r1, r9
 800d220:	f7fa f912 	bl	8007448 <GUI__DivideRound32>
 800d224:	4428      	add	r0, r5
 800d226:	19c5      	adds	r5, r0, r7
 800d228:	3d01      	subs	r5, #1
 800d22a:	60a0      	str	r0, [r4, #8]
 800d22c:	60e5      	str	r5, [r4, #12]
 800d22e:	f8c4 801c 	str.w	r8, [r4, #28]
 800d232:	6227      	str	r7, [r4, #32]
 800d234:	4668      	mov	r0, sp
 800d236:	f7fc fb13 	bl	8009860 <GUI_ALLOC_UnlockH>
 800d23a:	b010      	add	sp, #64	; 0x40
 800d23c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d240:	200000da 	.word	0x200000da

0800d244 <_Paint>:
 800d244:	b570      	push	{r4, r5, r6, lr}
 800d246:	b098      	sub	sp, #96	; 0x60
 800d248:	4606      	mov	r6, r0
 800d24a:	f7fc fafb 	bl	8009844 <GUI_ALLOC_LockH>
 800d24e:	6d83      	ldr	r3, [r0, #88]	; 0x58
 800d250:	9305      	str	r3, [sp, #20]
 800d252:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800d254:	6c04      	ldr	r4, [r0, #64]	; 0x40
 800d256:	9001      	str	r0, [sp, #4]
 800d258:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d25c:	a906      	add	r1, sp, #24
 800d25e:	4605      	mov	r5, r0
 800d260:	4630      	mov	r0, r6
 800d262:	9304      	str	r3, [sp, #16]
 800d264:	f7ff ff44 	bl	800d0f0 <_CalcPositions>
 800d268:	a801      	add	r0, sp, #4
 800d26a:	f7fc faf9 	bl	8009860 <GUI_ALLOC_UnlockH>
 800d26e:	a902      	add	r1, sp, #8
 800d270:	4628      	mov	r0, r5
 800d272:	f7fc fdbe 	bl	8009df2 <WIDGET__GetClientRect>
 800d276:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800d27a:	9314      	str	r3, [sp, #80]	; 0x50
 800d27c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d280:	9316      	str	r3, [sp, #88]	; 0x58
 800d282:	ab04      	add	r3, sp, #16
 800d284:	9317      	str	r3, [sp, #92]	; 0x5c
 800d286:	2308      	movs	r3, #8
 800d288:	9310      	str	r3, [sp, #64]	; 0x40
 800d28a:	9b06      	ldr	r3, [sp, #24]
 800d28c:	9313      	str	r3, [sp, #76]	; 0x4c
 800d28e:	9b07      	ldr	r3, [sp, #28]
 800d290:	9315      	str	r3, [sp, #84]	; 0x54
 800d292:	960f      	str	r6, [sp, #60]	; 0x3c
 800d294:	a80f      	add	r0, sp, #60	; 0x3c
 800d296:	47a0      	blx	r4
 800d298:	2310      	movs	r3, #16
 800d29a:	9310      	str	r3, [sp, #64]	; 0x40
 800d29c:	9b07      	ldr	r3, [sp, #28]
 800d29e:	3301      	adds	r3, #1
 800d2a0:	9313      	str	r3, [sp, #76]	; 0x4c
 800d2a2:	9b08      	ldr	r3, [sp, #32]
 800d2a4:	3b01      	subs	r3, #1
 800d2a6:	9315      	str	r3, [sp, #84]	; 0x54
 800d2a8:	a80f      	add	r0, sp, #60	; 0x3c
 800d2aa:	47a0      	blx	r4
 800d2ac:	2311      	movs	r3, #17
 800d2ae:	9310      	str	r3, [sp, #64]	; 0x40
 800d2b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d2b2:	3301      	adds	r3, #1
 800d2b4:	9313      	str	r3, [sp, #76]	; 0x4c
 800d2b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d2b8:	3b01      	subs	r3, #1
 800d2ba:	9315      	str	r3, [sp, #84]	; 0x54
 800d2bc:	a80f      	add	r0, sp, #60	; 0x3c
 800d2be:	47a0      	blx	r4
 800d2c0:	2313      	movs	r3, #19
 800d2c2:	9310      	str	r3, [sp, #64]	; 0x40
 800d2c4:	9b08      	ldr	r3, [sp, #32]
 800d2c6:	9313      	str	r3, [sp, #76]	; 0x4c
 800d2c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d2ca:	9315      	str	r3, [sp, #84]	; 0x54
 800d2cc:	a80f      	add	r0, sp, #60	; 0x3c
 800d2ce:	47a0      	blx	r4
 800d2d0:	2309      	movs	r3, #9
 800d2d2:	9310      	str	r3, [sp, #64]	; 0x40
 800d2d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d2d6:	9313      	str	r3, [sp, #76]	; 0x4c
 800d2d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d2da:	9315      	str	r3, [sp, #84]	; 0x54
 800d2dc:	a80f      	add	r0, sp, #60	; 0x3c
 800d2de:	47a0      	blx	r4
 800d2e0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d2e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d2e4:	429a      	cmp	r2, r3
 800d2e6:	d006      	beq.n	800d2f6 <_Paint+0xb2>
 800d2e8:	210c      	movs	r1, #12
 800d2ea:	3201      	adds	r2, #1
 800d2ec:	9110      	str	r1, [sp, #64]	; 0x40
 800d2ee:	9213      	str	r2, [sp, #76]	; 0x4c
 800d2f0:	9315      	str	r3, [sp, #84]	; 0x54
 800d2f2:	a80f      	add	r0, sp, #60	; 0x3c
 800d2f4:	47a0      	blx	r4
 800d2f6:	b018      	add	sp, #96	; 0x60
 800d2f8:	bd70      	pop	{r4, r5, r6, pc}
	...

0800d2fc <__libc_init_array>:
 800d2fc:	b570      	push	{r4, r5, r6, lr}
 800d2fe:	4d0d      	ldr	r5, [pc, #52]	; (800d334 <__libc_init_array+0x38>)
 800d300:	4c0d      	ldr	r4, [pc, #52]	; (800d338 <__libc_init_array+0x3c>)
 800d302:	1b64      	subs	r4, r4, r5
 800d304:	10a4      	asrs	r4, r4, #2
 800d306:	2600      	movs	r6, #0
 800d308:	42a6      	cmp	r6, r4
 800d30a:	d109      	bne.n	800d320 <__libc_init_array+0x24>
 800d30c:	4d0b      	ldr	r5, [pc, #44]	; (800d33c <__libc_init_array+0x40>)
 800d30e:	4c0c      	ldr	r4, [pc, #48]	; (800d340 <__libc_init_array+0x44>)
 800d310:	f000 f8ac 	bl	800d46c <_init>
 800d314:	1b64      	subs	r4, r4, r5
 800d316:	10a4      	asrs	r4, r4, #2
 800d318:	2600      	movs	r6, #0
 800d31a:	42a6      	cmp	r6, r4
 800d31c:	d105      	bne.n	800d32a <__libc_init_array+0x2e>
 800d31e:	bd70      	pop	{r4, r5, r6, pc}
 800d320:	f855 3b04 	ldr.w	r3, [r5], #4
 800d324:	4798      	blx	r3
 800d326:	3601      	adds	r6, #1
 800d328:	e7ee      	b.n	800d308 <__libc_init_array+0xc>
 800d32a:	f855 3b04 	ldr.w	r3, [r5], #4
 800d32e:	4798      	blx	r3
 800d330:	3601      	adds	r6, #1
 800d332:	e7f2      	b.n	800d31a <__libc_init_array+0x1e>
 800d334:	0800ff50 	.word	0x0800ff50
 800d338:	0800ff50 	.word	0x0800ff50
 800d33c:	0800ff50 	.word	0x0800ff50
 800d340:	0800ff54 	.word	0x0800ff54

0800d344 <__itoa>:
 800d344:	1e93      	subs	r3, r2, #2
 800d346:	2b22      	cmp	r3, #34	; 0x22
 800d348:	b510      	push	{r4, lr}
 800d34a:	460c      	mov	r4, r1
 800d34c:	d904      	bls.n	800d358 <__itoa+0x14>
 800d34e:	2300      	movs	r3, #0
 800d350:	700b      	strb	r3, [r1, #0]
 800d352:	461c      	mov	r4, r3
 800d354:	4620      	mov	r0, r4
 800d356:	bd10      	pop	{r4, pc}
 800d358:	2a0a      	cmp	r2, #10
 800d35a:	d109      	bne.n	800d370 <__itoa+0x2c>
 800d35c:	2800      	cmp	r0, #0
 800d35e:	da07      	bge.n	800d370 <__itoa+0x2c>
 800d360:	232d      	movs	r3, #45	; 0x2d
 800d362:	700b      	strb	r3, [r1, #0]
 800d364:	4240      	negs	r0, r0
 800d366:	2101      	movs	r1, #1
 800d368:	4421      	add	r1, r4
 800d36a:	f000 f83d 	bl	800d3e8 <__utoa>
 800d36e:	e7f1      	b.n	800d354 <__itoa+0x10>
 800d370:	2100      	movs	r1, #0
 800d372:	e7f9      	b.n	800d368 <__itoa+0x24>

0800d374 <itoa>:
 800d374:	f7ff bfe6 	b.w	800d344 <__itoa>

0800d378 <memcpy>:
 800d378:	440a      	add	r2, r1
 800d37a:	4291      	cmp	r1, r2
 800d37c:	f100 33ff 	add.w	r3, r0, #4294967295
 800d380:	d100      	bne.n	800d384 <memcpy+0xc>
 800d382:	4770      	bx	lr
 800d384:	b510      	push	{r4, lr}
 800d386:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d38a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800d38e:	4291      	cmp	r1, r2
 800d390:	d1f9      	bne.n	800d386 <memcpy+0xe>
 800d392:	bd10      	pop	{r4, pc}

0800d394 <memmove>:
 800d394:	4288      	cmp	r0, r1
 800d396:	b510      	push	{r4, lr}
 800d398:	eb01 0402 	add.w	r4, r1, r2
 800d39c:	d902      	bls.n	800d3a4 <memmove+0x10>
 800d39e:	4284      	cmp	r4, r0
 800d3a0:	4623      	mov	r3, r4
 800d3a2:	d807      	bhi.n	800d3b4 <memmove+0x20>
 800d3a4:	1e43      	subs	r3, r0, #1
 800d3a6:	42a1      	cmp	r1, r4
 800d3a8:	d008      	beq.n	800d3bc <memmove+0x28>
 800d3aa:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d3ae:	f803 2f01 	strb.w	r2, [r3, #1]!
 800d3b2:	e7f8      	b.n	800d3a6 <memmove+0x12>
 800d3b4:	4402      	add	r2, r0
 800d3b6:	4601      	mov	r1, r0
 800d3b8:	428a      	cmp	r2, r1
 800d3ba:	d100      	bne.n	800d3be <memmove+0x2a>
 800d3bc:	bd10      	pop	{r4, pc}
 800d3be:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800d3c2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800d3c6:	e7f7      	b.n	800d3b8 <memmove+0x24>

0800d3c8 <memset>:
 800d3c8:	4402      	add	r2, r0
 800d3ca:	4603      	mov	r3, r0
 800d3cc:	4293      	cmp	r3, r2
 800d3ce:	d100      	bne.n	800d3d2 <memset+0xa>
 800d3d0:	4770      	bx	lr
 800d3d2:	f803 1b01 	strb.w	r1, [r3], #1
 800d3d6:	e7f9      	b.n	800d3cc <memset+0x4>

0800d3d8 <strcpy>:
 800d3d8:	4603      	mov	r3, r0
 800d3da:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d3de:	f803 2b01 	strb.w	r2, [r3], #1
 800d3e2:	2a00      	cmp	r2, #0
 800d3e4:	d1f9      	bne.n	800d3da <strcpy+0x2>
 800d3e6:	4770      	bx	lr

0800d3e8 <__utoa>:
 800d3e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d3ea:	4c1f      	ldr	r4, [pc, #124]	; (800d468 <__utoa+0x80>)
 800d3ec:	b08b      	sub	sp, #44	; 0x2c
 800d3ee:	4605      	mov	r5, r0
 800d3f0:	460b      	mov	r3, r1
 800d3f2:	466e      	mov	r6, sp
 800d3f4:	f104 0c20 	add.w	ip, r4, #32
 800d3f8:	6820      	ldr	r0, [r4, #0]
 800d3fa:	6861      	ldr	r1, [r4, #4]
 800d3fc:	4637      	mov	r7, r6
 800d3fe:	c703      	stmia	r7!, {r0, r1}
 800d400:	3408      	adds	r4, #8
 800d402:	4564      	cmp	r4, ip
 800d404:	463e      	mov	r6, r7
 800d406:	d1f7      	bne.n	800d3f8 <__utoa+0x10>
 800d408:	7921      	ldrb	r1, [r4, #4]
 800d40a:	7139      	strb	r1, [r7, #4]
 800d40c:	1e91      	subs	r1, r2, #2
 800d40e:	6820      	ldr	r0, [r4, #0]
 800d410:	6038      	str	r0, [r7, #0]
 800d412:	2922      	cmp	r1, #34	; 0x22
 800d414:	f04f 0100 	mov.w	r1, #0
 800d418:	d904      	bls.n	800d424 <__utoa+0x3c>
 800d41a:	7019      	strb	r1, [r3, #0]
 800d41c:	460b      	mov	r3, r1
 800d41e:	4618      	mov	r0, r3
 800d420:	b00b      	add	sp, #44	; 0x2c
 800d422:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d424:	1e58      	subs	r0, r3, #1
 800d426:	4684      	mov	ip, r0
 800d428:	fbb5 f7f2 	udiv	r7, r5, r2
 800d42c:	fb02 5617 	mls	r6, r2, r7, r5
 800d430:	3628      	adds	r6, #40	; 0x28
 800d432:	446e      	add	r6, sp
 800d434:	460c      	mov	r4, r1
 800d436:	f816 6c28 	ldrb.w	r6, [r6, #-40]
 800d43a:	f80c 6f01 	strb.w	r6, [ip, #1]!
 800d43e:	462e      	mov	r6, r5
 800d440:	42b2      	cmp	r2, r6
 800d442:	f101 0101 	add.w	r1, r1, #1
 800d446:	463d      	mov	r5, r7
 800d448:	d9ee      	bls.n	800d428 <__utoa+0x40>
 800d44a:	2200      	movs	r2, #0
 800d44c:	545a      	strb	r2, [r3, r1]
 800d44e:	1919      	adds	r1, r3, r4
 800d450:	1aa5      	subs	r5, r4, r2
 800d452:	42aa      	cmp	r2, r5
 800d454:	dae3      	bge.n	800d41e <__utoa+0x36>
 800d456:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 800d45a:	780e      	ldrb	r6, [r1, #0]
 800d45c:	7006      	strb	r6, [r0, #0]
 800d45e:	3201      	adds	r2, #1
 800d460:	f801 5901 	strb.w	r5, [r1], #-1
 800d464:	e7f4      	b.n	800d450 <__utoa+0x68>
 800d466:	bf00      	nop
 800d468:	0800ff20 	.word	0x0800ff20

0800d46c <_init>:
 800d46c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d46e:	bf00      	nop
 800d470:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800d472:	bc08      	pop	{r3}
 800d474:	469e      	mov	lr, r3
 800d476:	4770      	bx	lr

0800d478 <_fini>:
 800d478:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d47a:	bf00      	nop
 800d47c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800d47e:	bc08      	pop	{r3}
 800d480:	469e      	mov	lr, r3
 800d482:	4770      	bx	lr
