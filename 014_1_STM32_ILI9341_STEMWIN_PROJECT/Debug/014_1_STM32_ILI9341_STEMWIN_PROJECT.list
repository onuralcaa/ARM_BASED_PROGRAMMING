
014_1_STM32_ILI9341_STEMWIN_PROJECT.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00010020  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002e5c  080101a8  080101a8  000201a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08013004  08013004  000301f8  2**0
                  CONTENTS
  4 .ARM          00000008  08013004  08013004  00023004  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0801300c  0801300c  000301f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0801300c  0801300c  0002300c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08013010  08013010  00023010  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001f8  20000000  08013014  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000301f8  2**0
                  CONTENTS
 10 .bss          00002c30  200001f8  200001f8  000301f8  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20002e28  20002e28  000301f8  2**0
                  ALLOC
 12 .ARM.attributes 0000002e  00000000  00000000  000301f8  2**0
                  CONTENTS, READONLY
 13 .debug_info   000099db  00000000  00000000  00030226  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001bbc  00000000  00000000  00039c01  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000007c8  00000000  00000000  0003b7c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000006e0  00000000  00000000  0003bf88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00023be1  00000000  00000000  0003c668  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00009120  00000000  00000000  00060249  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000d73a3  00000000  00000000  00069369  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      000000d2  00000000  00000000  0014070c  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001ebc  00000000  00000000  001407e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	200001f8 	.word	0x200001f8
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08010190 	.word	0x08010190

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	200001fc 	.word	0x200001fc
 80001c4:	08010190 	.word	0x08010190

080001c8 <strlen>:
 80001c8:	4603      	mov	r3, r0
 80001ca:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001ce:	2a00      	cmp	r2, #0
 80001d0:	d1fb      	bne.n	80001ca <strlen+0x2>
 80001d2:	1a18      	subs	r0, r3, r0
 80001d4:	3801      	subs	r0, #1
 80001d6:	4770      	bx	lr

080001d8 <__aeabi_uldivmod>:
 80001d8:	b953      	cbnz	r3, 80001f0 <__aeabi_uldivmod+0x18>
 80001da:	b94a      	cbnz	r2, 80001f0 <__aeabi_uldivmod+0x18>
 80001dc:	2900      	cmp	r1, #0
 80001de:	bf08      	it	eq
 80001e0:	2800      	cmpeq	r0, #0
 80001e2:	bf1c      	itt	ne
 80001e4:	f04f 31ff 	movne.w	r1, #4294967295
 80001e8:	f04f 30ff 	movne.w	r0, #4294967295
 80001ec:	f000 b974 	b.w	80004d8 <__aeabi_idiv0>
 80001f0:	f1ad 0c08 	sub.w	ip, sp, #8
 80001f4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001f8:	f000 f806 	bl	8000208 <__udivmoddi4>
 80001fc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000200:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000204:	b004      	add	sp, #16
 8000206:	4770      	bx	lr

08000208 <__udivmoddi4>:
 8000208:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800020c:	9d08      	ldr	r5, [sp, #32]
 800020e:	4604      	mov	r4, r0
 8000210:	468e      	mov	lr, r1
 8000212:	2b00      	cmp	r3, #0
 8000214:	d14d      	bne.n	80002b2 <__udivmoddi4+0xaa>
 8000216:	428a      	cmp	r2, r1
 8000218:	4694      	mov	ip, r2
 800021a:	d969      	bls.n	80002f0 <__udivmoddi4+0xe8>
 800021c:	fab2 f282 	clz	r2, r2
 8000220:	b152      	cbz	r2, 8000238 <__udivmoddi4+0x30>
 8000222:	fa01 f302 	lsl.w	r3, r1, r2
 8000226:	f1c2 0120 	rsb	r1, r2, #32
 800022a:	fa20 f101 	lsr.w	r1, r0, r1
 800022e:	fa0c fc02 	lsl.w	ip, ip, r2
 8000232:	ea41 0e03 	orr.w	lr, r1, r3
 8000236:	4094      	lsls	r4, r2
 8000238:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800023c:	0c21      	lsrs	r1, r4, #16
 800023e:	fbbe f6f8 	udiv	r6, lr, r8
 8000242:	fa1f f78c 	uxth.w	r7, ip
 8000246:	fb08 e316 	mls	r3, r8, r6, lr
 800024a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800024e:	fb06 f107 	mul.w	r1, r6, r7
 8000252:	4299      	cmp	r1, r3
 8000254:	d90a      	bls.n	800026c <__udivmoddi4+0x64>
 8000256:	eb1c 0303 	adds.w	r3, ip, r3
 800025a:	f106 30ff 	add.w	r0, r6, #4294967295
 800025e:	f080 811f 	bcs.w	80004a0 <__udivmoddi4+0x298>
 8000262:	4299      	cmp	r1, r3
 8000264:	f240 811c 	bls.w	80004a0 <__udivmoddi4+0x298>
 8000268:	3e02      	subs	r6, #2
 800026a:	4463      	add	r3, ip
 800026c:	1a5b      	subs	r3, r3, r1
 800026e:	b2a4      	uxth	r4, r4
 8000270:	fbb3 f0f8 	udiv	r0, r3, r8
 8000274:	fb08 3310 	mls	r3, r8, r0, r3
 8000278:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800027c:	fb00 f707 	mul.w	r7, r0, r7
 8000280:	42a7      	cmp	r7, r4
 8000282:	d90a      	bls.n	800029a <__udivmoddi4+0x92>
 8000284:	eb1c 0404 	adds.w	r4, ip, r4
 8000288:	f100 33ff 	add.w	r3, r0, #4294967295
 800028c:	f080 810a 	bcs.w	80004a4 <__udivmoddi4+0x29c>
 8000290:	42a7      	cmp	r7, r4
 8000292:	f240 8107 	bls.w	80004a4 <__udivmoddi4+0x29c>
 8000296:	4464      	add	r4, ip
 8000298:	3802      	subs	r0, #2
 800029a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800029e:	1be4      	subs	r4, r4, r7
 80002a0:	2600      	movs	r6, #0
 80002a2:	b11d      	cbz	r5, 80002ac <__udivmoddi4+0xa4>
 80002a4:	40d4      	lsrs	r4, r2
 80002a6:	2300      	movs	r3, #0
 80002a8:	e9c5 4300 	strd	r4, r3, [r5]
 80002ac:	4631      	mov	r1, r6
 80002ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002b2:	428b      	cmp	r3, r1
 80002b4:	d909      	bls.n	80002ca <__udivmoddi4+0xc2>
 80002b6:	2d00      	cmp	r5, #0
 80002b8:	f000 80ef 	beq.w	800049a <__udivmoddi4+0x292>
 80002bc:	2600      	movs	r6, #0
 80002be:	e9c5 0100 	strd	r0, r1, [r5]
 80002c2:	4630      	mov	r0, r6
 80002c4:	4631      	mov	r1, r6
 80002c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002ca:	fab3 f683 	clz	r6, r3
 80002ce:	2e00      	cmp	r6, #0
 80002d0:	d14a      	bne.n	8000368 <__udivmoddi4+0x160>
 80002d2:	428b      	cmp	r3, r1
 80002d4:	d302      	bcc.n	80002dc <__udivmoddi4+0xd4>
 80002d6:	4282      	cmp	r2, r0
 80002d8:	f200 80f9 	bhi.w	80004ce <__udivmoddi4+0x2c6>
 80002dc:	1a84      	subs	r4, r0, r2
 80002de:	eb61 0303 	sbc.w	r3, r1, r3
 80002e2:	2001      	movs	r0, #1
 80002e4:	469e      	mov	lr, r3
 80002e6:	2d00      	cmp	r5, #0
 80002e8:	d0e0      	beq.n	80002ac <__udivmoddi4+0xa4>
 80002ea:	e9c5 4e00 	strd	r4, lr, [r5]
 80002ee:	e7dd      	b.n	80002ac <__udivmoddi4+0xa4>
 80002f0:	b902      	cbnz	r2, 80002f4 <__udivmoddi4+0xec>
 80002f2:	deff      	udf	#255	; 0xff
 80002f4:	fab2 f282 	clz	r2, r2
 80002f8:	2a00      	cmp	r2, #0
 80002fa:	f040 8092 	bne.w	8000422 <__udivmoddi4+0x21a>
 80002fe:	eba1 010c 	sub.w	r1, r1, ip
 8000302:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000306:	fa1f fe8c 	uxth.w	lr, ip
 800030a:	2601      	movs	r6, #1
 800030c:	0c20      	lsrs	r0, r4, #16
 800030e:	fbb1 f3f7 	udiv	r3, r1, r7
 8000312:	fb07 1113 	mls	r1, r7, r3, r1
 8000316:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 800031a:	fb0e f003 	mul.w	r0, lr, r3
 800031e:	4288      	cmp	r0, r1
 8000320:	d908      	bls.n	8000334 <__udivmoddi4+0x12c>
 8000322:	eb1c 0101 	adds.w	r1, ip, r1
 8000326:	f103 38ff 	add.w	r8, r3, #4294967295
 800032a:	d202      	bcs.n	8000332 <__udivmoddi4+0x12a>
 800032c:	4288      	cmp	r0, r1
 800032e:	f200 80cb 	bhi.w	80004c8 <__udivmoddi4+0x2c0>
 8000332:	4643      	mov	r3, r8
 8000334:	1a09      	subs	r1, r1, r0
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb1 f0f7 	udiv	r0, r1, r7
 800033c:	fb07 1110 	mls	r1, r7, r0, r1
 8000340:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000344:	fb0e fe00 	mul.w	lr, lr, r0
 8000348:	45a6      	cmp	lr, r4
 800034a:	d908      	bls.n	800035e <__udivmoddi4+0x156>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 31ff 	add.w	r1, r0, #4294967295
 8000354:	d202      	bcs.n	800035c <__udivmoddi4+0x154>
 8000356:	45a6      	cmp	lr, r4
 8000358:	f200 80bb 	bhi.w	80004d2 <__udivmoddi4+0x2ca>
 800035c:	4608      	mov	r0, r1
 800035e:	eba4 040e 	sub.w	r4, r4, lr
 8000362:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000366:	e79c      	b.n	80002a2 <__udivmoddi4+0x9a>
 8000368:	f1c6 0720 	rsb	r7, r6, #32
 800036c:	40b3      	lsls	r3, r6
 800036e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000372:	ea4c 0c03 	orr.w	ip, ip, r3
 8000376:	fa20 f407 	lsr.w	r4, r0, r7
 800037a:	fa01 f306 	lsl.w	r3, r1, r6
 800037e:	431c      	orrs	r4, r3
 8000380:	40f9      	lsrs	r1, r7
 8000382:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000386:	fa00 f306 	lsl.w	r3, r0, r6
 800038a:	fbb1 f8f9 	udiv	r8, r1, r9
 800038e:	0c20      	lsrs	r0, r4, #16
 8000390:	fa1f fe8c 	uxth.w	lr, ip
 8000394:	fb09 1118 	mls	r1, r9, r8, r1
 8000398:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 800039c:	fb08 f00e 	mul.w	r0, r8, lr
 80003a0:	4288      	cmp	r0, r1
 80003a2:	fa02 f206 	lsl.w	r2, r2, r6
 80003a6:	d90b      	bls.n	80003c0 <__udivmoddi4+0x1b8>
 80003a8:	eb1c 0101 	adds.w	r1, ip, r1
 80003ac:	f108 3aff 	add.w	sl, r8, #4294967295
 80003b0:	f080 8088 	bcs.w	80004c4 <__udivmoddi4+0x2bc>
 80003b4:	4288      	cmp	r0, r1
 80003b6:	f240 8085 	bls.w	80004c4 <__udivmoddi4+0x2bc>
 80003ba:	f1a8 0802 	sub.w	r8, r8, #2
 80003be:	4461      	add	r1, ip
 80003c0:	1a09      	subs	r1, r1, r0
 80003c2:	b2a4      	uxth	r4, r4
 80003c4:	fbb1 f0f9 	udiv	r0, r1, r9
 80003c8:	fb09 1110 	mls	r1, r9, r0, r1
 80003cc:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80003d0:	fb00 fe0e 	mul.w	lr, r0, lr
 80003d4:	458e      	cmp	lr, r1
 80003d6:	d908      	bls.n	80003ea <__udivmoddi4+0x1e2>
 80003d8:	eb1c 0101 	adds.w	r1, ip, r1
 80003dc:	f100 34ff 	add.w	r4, r0, #4294967295
 80003e0:	d26c      	bcs.n	80004bc <__udivmoddi4+0x2b4>
 80003e2:	458e      	cmp	lr, r1
 80003e4:	d96a      	bls.n	80004bc <__udivmoddi4+0x2b4>
 80003e6:	3802      	subs	r0, #2
 80003e8:	4461      	add	r1, ip
 80003ea:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80003ee:	fba0 9402 	umull	r9, r4, r0, r2
 80003f2:	eba1 010e 	sub.w	r1, r1, lr
 80003f6:	42a1      	cmp	r1, r4
 80003f8:	46c8      	mov	r8, r9
 80003fa:	46a6      	mov	lr, r4
 80003fc:	d356      	bcc.n	80004ac <__udivmoddi4+0x2a4>
 80003fe:	d053      	beq.n	80004a8 <__udivmoddi4+0x2a0>
 8000400:	b15d      	cbz	r5, 800041a <__udivmoddi4+0x212>
 8000402:	ebb3 0208 	subs.w	r2, r3, r8
 8000406:	eb61 010e 	sbc.w	r1, r1, lr
 800040a:	fa01 f707 	lsl.w	r7, r1, r7
 800040e:	fa22 f306 	lsr.w	r3, r2, r6
 8000412:	40f1      	lsrs	r1, r6
 8000414:	431f      	orrs	r7, r3
 8000416:	e9c5 7100 	strd	r7, r1, [r5]
 800041a:	2600      	movs	r6, #0
 800041c:	4631      	mov	r1, r6
 800041e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000422:	f1c2 0320 	rsb	r3, r2, #32
 8000426:	40d8      	lsrs	r0, r3
 8000428:	fa0c fc02 	lsl.w	ip, ip, r2
 800042c:	fa21 f303 	lsr.w	r3, r1, r3
 8000430:	4091      	lsls	r1, r2
 8000432:	4301      	orrs	r1, r0
 8000434:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000438:	fa1f fe8c 	uxth.w	lr, ip
 800043c:	fbb3 f0f7 	udiv	r0, r3, r7
 8000440:	fb07 3610 	mls	r6, r7, r0, r3
 8000444:	0c0b      	lsrs	r3, r1, #16
 8000446:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 800044a:	fb00 f60e 	mul.w	r6, r0, lr
 800044e:	429e      	cmp	r6, r3
 8000450:	fa04 f402 	lsl.w	r4, r4, r2
 8000454:	d908      	bls.n	8000468 <__udivmoddi4+0x260>
 8000456:	eb1c 0303 	adds.w	r3, ip, r3
 800045a:	f100 38ff 	add.w	r8, r0, #4294967295
 800045e:	d22f      	bcs.n	80004c0 <__udivmoddi4+0x2b8>
 8000460:	429e      	cmp	r6, r3
 8000462:	d92d      	bls.n	80004c0 <__udivmoddi4+0x2b8>
 8000464:	3802      	subs	r0, #2
 8000466:	4463      	add	r3, ip
 8000468:	1b9b      	subs	r3, r3, r6
 800046a:	b289      	uxth	r1, r1
 800046c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000470:	fb07 3316 	mls	r3, r7, r6, r3
 8000474:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000478:	fb06 f30e 	mul.w	r3, r6, lr
 800047c:	428b      	cmp	r3, r1
 800047e:	d908      	bls.n	8000492 <__udivmoddi4+0x28a>
 8000480:	eb1c 0101 	adds.w	r1, ip, r1
 8000484:	f106 38ff 	add.w	r8, r6, #4294967295
 8000488:	d216      	bcs.n	80004b8 <__udivmoddi4+0x2b0>
 800048a:	428b      	cmp	r3, r1
 800048c:	d914      	bls.n	80004b8 <__udivmoddi4+0x2b0>
 800048e:	3e02      	subs	r6, #2
 8000490:	4461      	add	r1, ip
 8000492:	1ac9      	subs	r1, r1, r3
 8000494:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000498:	e738      	b.n	800030c <__udivmoddi4+0x104>
 800049a:	462e      	mov	r6, r5
 800049c:	4628      	mov	r0, r5
 800049e:	e705      	b.n	80002ac <__udivmoddi4+0xa4>
 80004a0:	4606      	mov	r6, r0
 80004a2:	e6e3      	b.n	800026c <__udivmoddi4+0x64>
 80004a4:	4618      	mov	r0, r3
 80004a6:	e6f8      	b.n	800029a <__udivmoddi4+0x92>
 80004a8:	454b      	cmp	r3, r9
 80004aa:	d2a9      	bcs.n	8000400 <__udivmoddi4+0x1f8>
 80004ac:	ebb9 0802 	subs.w	r8, r9, r2
 80004b0:	eb64 0e0c 	sbc.w	lr, r4, ip
 80004b4:	3801      	subs	r0, #1
 80004b6:	e7a3      	b.n	8000400 <__udivmoddi4+0x1f8>
 80004b8:	4646      	mov	r6, r8
 80004ba:	e7ea      	b.n	8000492 <__udivmoddi4+0x28a>
 80004bc:	4620      	mov	r0, r4
 80004be:	e794      	b.n	80003ea <__udivmoddi4+0x1e2>
 80004c0:	4640      	mov	r0, r8
 80004c2:	e7d1      	b.n	8000468 <__udivmoddi4+0x260>
 80004c4:	46d0      	mov	r8, sl
 80004c6:	e77b      	b.n	80003c0 <__udivmoddi4+0x1b8>
 80004c8:	3b02      	subs	r3, #2
 80004ca:	4461      	add	r1, ip
 80004cc:	e732      	b.n	8000334 <__udivmoddi4+0x12c>
 80004ce:	4630      	mov	r0, r6
 80004d0:	e709      	b.n	80002e6 <__udivmoddi4+0xde>
 80004d2:	4464      	add	r4, ip
 80004d4:	3802      	subs	r0, #2
 80004d6:	e742      	b.n	800035e <__udivmoddi4+0x156>

080004d8 <__aeabi_idiv0>:
 80004d8:	4770      	bx	lr
 80004da:	bf00      	nop

080004dc <GUI_X_Config>:
*
* Purpose:
*   Called during the initialization process in order to set up the
*   available memory for the GUI.
*/
void GUI_X_Config(void) {
 80004dc:	b580      	push	{r7, lr}
 80004de:	af00      	add	r7, sp, #0
  //
  static U32 aMemory[GUI_NUMBYTES / 4];
  //
  // Assign memory to emWin
  //
  GUI_ALLOC_AssignMemory(aMemory, GUI_NUMBYTES);
 80004e0:	f44f 5120 	mov.w	r1, #10240	; 0x2800
 80004e4:	4803      	ldr	r0, [pc, #12]	; (80004f4 <GUI_X_Config+0x18>)
 80004e6:	f00b f9e9 	bl	800b8bc <GUI_ALLOC_AssignMemory>
  //
  // Set default font
  //
  GUI_SetDefaultFont(GUI_FONT_6X8);
 80004ea:	4803      	ldr	r0, [pc, #12]	; (80004f8 <GUI_X_Config+0x1c>)
 80004ec:	f00a fb14 	bl	800ab18 <GUI_SetDefaultFont>
}
 80004f0:	bf00      	nop
 80004f2:	bd80      	pop	{r7, pc}
 80004f4:	20000214 	.word	0x20000214
 80004f8:	08010364 	.word	0x08010364

080004fc <GUI_X_GetTime>:
  Some timing dependent routines require a GetTime
  and delay function. Default time unit (tick), normally is
  1 ms.
*/

GUI_TIMER_TIME GUI_X_GetTime(void) { 
 80004fc:	b480      	push	{r7}
 80004fe:	af00      	add	r7, sp, #0
  return OS_TimeMS; 
 8000500:	4b03      	ldr	r3, [pc, #12]	; (8000510 <GUI_X_GetTime+0x14>)
 8000502:	681b      	ldr	r3, [r3, #0]
}
 8000504:	4618      	mov	r0, r3
 8000506:	46bd      	mov	sp, r7
 8000508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800050c:	4770      	bx	lr
 800050e:	bf00      	nop
 8000510:	20002a14 	.word	0x20002a14

08000514 <GUI_X_Init>:
*     GUI_X_Init() is called from GUI_Init is a possibility to init
*     some hardware which needs to be up and running before the GUI.
*     If not required, leave this routine blank.
*/

void GUI_X_Init(void) {}
 8000514:	b480      	push	{r7}
 8000516:	af00      	add	r7, sp, #0
 8000518:	bf00      	nop
 800051a:	46bd      	mov	sp, r7
 800051c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000520:	4770      	bx	lr
	...

08000524 <LcdWriteReg>:
*
* Function description:
*   Sets display register
*/
static void LcdWriteReg(U8 Data)
{
 8000524:	b580      	push	{r7, lr}
 8000526:	b082      	sub	sp, #8
 8000528:	af00      	add	r7, sp, #0
 800052a:	4603      	mov	r3, r0
 800052c:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_RESET);
 800052e:	2200      	movs	r2, #0
 8000530:	2102      	movs	r1, #2
 8000532:	480b      	ldr	r0, [pc, #44]	; (8000560 <LcdWriteReg+0x3c>)
 8000534:	f001 fc8c 	bl	8001e50 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_DC_Pin,  GPIO_PIN_RESET);
 8000538:	2200      	movs	r2, #0
 800053a:	2104      	movs	r1, #4
 800053c:	4808      	ldr	r0, [pc, #32]	; (8000560 <LcdWriteReg+0x3c>)
 800053e:	f001 fc87 	bl	8001e50 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1, &Data, 1, 1);
 8000542:	1df9      	adds	r1, r7, #7
 8000544:	2301      	movs	r3, #1
 8000546:	2201      	movs	r2, #1
 8000548:	4806      	ldr	r0, [pc, #24]	; (8000564 <LcdWriteReg+0x40>)
 800054a:	f002 f988 	bl	800285e <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_SET);
 800054e:	2201      	movs	r2, #1
 8000550:	2102      	movs	r1, #2
 8000552:	4803      	ldr	r0, [pc, #12]	; (8000560 <LcdWriteReg+0x3c>)
 8000554:	f001 fc7c 	bl	8001e50 <HAL_GPIO_WritePin>
}
 8000558:	bf00      	nop
 800055a:	3708      	adds	r7, #8
 800055c:	46bd      	mov	sp, r7
 800055e:	bd80      	pop	{r7, pc}
 8000560:	40020800 	.word	0x40020800
 8000564:	20002a60 	.word	0x20002a60

08000568 <LcdReadReg>:
*       LcdWriteReg
*
* Function description:
*   Sets display register
*/
static U8 LcdReadReg(void) {
 8000568:	b480      	push	{r7}
 800056a:	af00      	add	r7, sp, #0
  // ... TBD by user
	return 0;
 800056c:	2300      	movs	r3, #0
}
 800056e:	4618      	mov	r0, r3
 8000570:	46bd      	mov	sp, r7
 8000572:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000576:	4770      	bx	lr

08000578 <LcdWriteData>:
*
* Function description:
*   Writes a value to a display register
*/
static void LcdWriteData(U8 Data)
{
 8000578:	b580      	push	{r7, lr}
 800057a:	b082      	sub	sp, #8
 800057c:	af00      	add	r7, sp, #0
 800057e:	4603      	mov	r3, r0
 8000580:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_RESET);
 8000582:	2200      	movs	r2, #0
 8000584:	2102      	movs	r1, #2
 8000586:	480b      	ldr	r0, [pc, #44]	; (80005b4 <LcdWriteData+0x3c>)
 8000588:	f001 fc62 	bl	8001e50 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_DC_Pin,  GPIO_PIN_SET);
 800058c:	2201      	movs	r2, #1
 800058e:	2104      	movs	r1, #4
 8000590:	4808      	ldr	r0, [pc, #32]	; (80005b4 <LcdWriteData+0x3c>)
 8000592:	f001 fc5d 	bl	8001e50 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1, &Data, 1, 1);
 8000596:	1df9      	adds	r1, r7, #7
 8000598:	2301      	movs	r3, #1
 800059a:	2201      	movs	r2, #1
 800059c:	4806      	ldr	r0, [pc, #24]	; (80005b8 <LcdWriteData+0x40>)
 800059e:	f002 f95e 	bl	800285e <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_SET);
 80005a2:	2201      	movs	r2, #1
 80005a4:	2102      	movs	r1, #2
 80005a6:	4803      	ldr	r0, [pc, #12]	; (80005b4 <LcdWriteData+0x3c>)
 80005a8:	f001 fc52 	bl	8001e50 <HAL_GPIO_WritePin>
}
 80005ac:	bf00      	nop
 80005ae:	3708      	adds	r7, #8
 80005b0:	46bd      	mov	sp, r7
 80005b2:	bd80      	pop	{r7, pc}
 80005b4:	40020800 	.word	0x40020800
 80005b8:	20002a60 	.word	0x20002a60

080005bc <LcdWriteDataMultiple>:
*       LcdWriteDataMultiple
*
* Function description:
*   Writes multiple values to a display register.
*/
static void LcdWriteDataMultiple(U8 * pData, int NumItems) {
 80005bc:	b580      	push	{r7, lr}
 80005be:	b082      	sub	sp, #8
 80005c0:	af00      	add	r7, sp, #0
 80005c2:	6078      	str	r0, [r7, #4]
 80005c4:	6039      	str	r1, [r7, #0]

	while (NumItems--)
 80005c6:	e011      	b.n	80005ec <LcdWriteDataMultiple+0x30>
	{
		HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_RESET);
 80005c8:	2200      	movs	r2, #0
 80005ca:	2102      	movs	r1, #2
 80005cc:	480c      	ldr	r0, [pc, #48]	; (8000600 <LcdWriteDataMultiple+0x44>)
 80005ce:	f001 fc3f 	bl	8001e50 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOC, LCD_DC_Pin,  GPIO_PIN_SET);
 80005d2:	2201      	movs	r2, #1
 80005d4:	2104      	movs	r1, #4
 80005d6:	480a      	ldr	r0, [pc, #40]	; (8000600 <LcdWriteDataMultiple+0x44>)
 80005d8:	f001 fc3a 	bl	8001e50 <HAL_GPIO_WritePin>
		HAL_SPI_Transmit(&hspi1, pData++, 1, 1);
 80005dc:	6879      	ldr	r1, [r7, #4]
 80005de:	1c4b      	adds	r3, r1, #1
 80005e0:	607b      	str	r3, [r7, #4]
 80005e2:	2301      	movs	r3, #1
 80005e4:	2201      	movs	r2, #1
 80005e6:	4807      	ldr	r0, [pc, #28]	; (8000604 <LcdWriteDataMultiple+0x48>)
 80005e8:	f002 f939 	bl	800285e <HAL_SPI_Transmit>
	while (NumItems--)
 80005ec:	683b      	ldr	r3, [r7, #0]
 80005ee:	1e5a      	subs	r2, r3, #1
 80005f0:	603a      	str	r2, [r7, #0]
 80005f2:	2b00      	cmp	r3, #0
 80005f4:	d1e8      	bne.n	80005c8 <LcdWriteDataMultiple+0xc>
  }
}
 80005f6:	bf00      	nop
 80005f8:	bf00      	nop
 80005fa:	3708      	adds	r7, #8
 80005fc:	46bd      	mov	sp, r7
 80005fe:	bd80      	pop	{r7, pc}
 8000600:	40020800 	.word	0x40020800
 8000604:	20002a60 	.word	0x20002a60

08000608 <LcdReadDataMultiple>:
*       LcdReadDataMultiple
*
* Function description:
*   Reads multiple values from a display register.
*/
static void LcdReadDataMultiple(U8 * pData, int NumItems) {
 8000608:	b480      	push	{r7}
 800060a:	b083      	sub	sp, #12
 800060c:	af00      	add	r7, sp, #0
 800060e:	6078      	str	r0, [r7, #4]
 8000610:	6039      	str	r1, [r7, #0]
  while (NumItems--) {
 8000612:	bf00      	nop
 8000614:	683b      	ldr	r3, [r7, #0]
 8000616:	1e5a      	subs	r2, r3, #1
 8000618:	603a      	str	r2, [r7, #0]
 800061a:	2b00      	cmp	r3, #0
 800061c:	d1fa      	bne.n	8000614 <LcdReadDataMultiple+0xc>
    // ... TBD by user
  }
}
 800061e:	bf00      	nop
 8000620:	bf00      	nop
 8000622:	370c      	adds	r7, #12
 8000624:	46bd      	mov	sp, r7
 8000626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800062a:	4770      	bx	lr

0800062c <LcdInit>:

void LcdInit(void) {
 800062c:	b580      	push	{r7, lr}
 800062e:	b082      	sub	sp, #8
 8000630:	af00      	add	r7, sp, #0

	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_SET);
 8000632:	2201      	movs	r2, #1
 8000634:	2102      	movs	r1, #2
 8000636:	489a      	ldr	r0, [pc, #616]	; (80008a0 <LcdInit+0x274>)
 8000638:	f001 fc0a 	bl	8001e50 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_DC_Pin,  GPIO_PIN_SET);
 800063c:	2201      	movs	r2, #1
 800063e:	2104      	movs	r1, #4
 8000640:	4897      	ldr	r0, [pc, #604]	; (80008a0 <LcdInit+0x274>)
 8000642:	f001 fc05 	bl	8001e50 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_RST_Pin, GPIO_PIN_RESET);
 8000646:	2200      	movs	r2, #0
 8000648:	2108      	movs	r1, #8
 800064a:	4895      	ldr	r0, [pc, #596]	; (80008a0 <LcdInit+0x274>)
 800064c:	f001 fc00 	bl	8001e50 <HAL_GPIO_WritePin>
	HAL_Delay(2);//Reset delay
 8000650:	2002      	movs	r0, #2
 8000652:	f000 fd57 	bl	8001104 <HAL_Delay>
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_RESET);
 8000656:	2200      	movs	r2, #0
 8000658:	2102      	movs	r1, #2
 800065a:	4891      	ldr	r0, [pc, #580]	; (80008a0 <LcdInit+0x274>)
 800065c:	f001 fbf8 	bl	8001e50 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_DC_Pin,  GPIO_PIN_RESET);
 8000660:	2200      	movs	r2, #0
 8000662:	2104      	movs	r1, #4
 8000664:	488e      	ldr	r0, [pc, #568]	; (80008a0 <LcdInit+0x274>)
 8000666:	f001 fbf3 	bl	8001e50 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, LCD_RST_Pin, GPIO_PIN_SET);
 800066a:	2201      	movs	r2, #1
 800066c:	2108      	movs	r1, #8
 800066e:	488c      	ldr	r0, [pc, #560]	; (80008a0 <LcdInit+0x274>)
 8000670:	f001 fbee 	bl	8001e50 <HAL_GPIO_WritePin>
	for(uint8_t i=0; i<3; i++)  {
 8000674:	2300      	movs	r3, #0
 8000676:	71fb      	strb	r3, [r7, #7]
 8000678:	e005      	b.n	8000686 <LcdInit+0x5a>
		LcdWriteReg(0x00);
 800067a:	2000      	movs	r0, #0
 800067c:	f7ff ff52 	bl	8000524 <LcdWriteReg>
	for(uint8_t i=0; i<3; i++)  {
 8000680:	79fb      	ldrb	r3, [r7, #7]
 8000682:	3301      	adds	r3, #1
 8000684:	71fb      	strb	r3, [r7, #7]
 8000686:	79fb      	ldrb	r3, [r7, #7]
 8000688:	2b02      	cmp	r3, #2
 800068a:	d9f6      	bls.n	800067a <LcdInit+0x4e>
	} // Three extra 0x00s
	HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin,  GPIO_PIN_SET);
 800068c:	2201      	movs	r2, #1
 800068e:	2102      	movs	r1, #2
 8000690:	4883      	ldr	r0, [pc, #524]	; (80008a0 <LcdInit+0x274>)
 8000692:	f001 fbdd 	bl	8001e50 <HAL_GPIO_WritePin>

//ILI9341 initialization sequence

	LcdWriteReg(0x01);//soft reset
 8000696:	2001      	movs	r0, #1
 8000698:	f7ff ff44 	bl	8000524 <LcdWriteReg>
	HAL_Delay(1000);
 800069c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80006a0:	f000 fd30 	bl	8001104 <HAL_Delay>
	//power control A
	LcdWriteReg(0xCB);
 80006a4:	20cb      	movs	r0, #203	; 0xcb
 80006a6:	f7ff ff3d 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x39);
 80006aa:	2039      	movs	r0, #57	; 0x39
 80006ac:	f7ff ff64 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x2C);
 80006b0:	202c      	movs	r0, #44	; 0x2c
 80006b2:	f7ff ff61 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x00);
 80006b6:	2000      	movs	r0, #0
 80006b8:	f7ff ff5e 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x34);
 80006bc:	2034      	movs	r0, #52	; 0x34
 80006be:	f7ff ff5b 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x02);
 80006c2:	2002      	movs	r0, #2
 80006c4:	f7ff ff58 	bl	8000578 <LcdWriteData>

	//power control B
	LcdWriteReg(0xCF);
 80006c8:	20cf      	movs	r0, #207	; 0xcf
 80006ca:	f7ff ff2b 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x00);
 80006ce:	2000      	movs	r0, #0
 80006d0:	f7ff ff52 	bl	8000578 <LcdWriteData>
	LcdWriteData(0xC1);
 80006d4:	20c1      	movs	r0, #193	; 0xc1
 80006d6:	f7ff ff4f 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x30);
 80006da:	2030      	movs	r0, #48	; 0x30
 80006dc:	f7ff ff4c 	bl	8000578 <LcdWriteData>

	//driver timing control A
	LcdWriteReg(0xE8);
 80006e0:	20e8      	movs	r0, #232	; 0xe8
 80006e2:	f7ff ff1f 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x85);
 80006e6:	2085      	movs	r0, #133	; 0x85
 80006e8:	f7ff ff46 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x00);
 80006ec:	2000      	movs	r0, #0
 80006ee:	f7ff ff43 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x78);
 80006f2:	2078      	movs	r0, #120	; 0x78
 80006f4:	f7ff ff40 	bl	8000578 <LcdWriteData>

	//driver timing control B
	LcdWriteReg(0xEA);
 80006f8:	20ea      	movs	r0, #234	; 0xea
 80006fa:	f7ff ff13 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x00);
 80006fe:	2000      	movs	r0, #0
 8000700:	f7ff ff3a 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x00);
 8000704:	2000      	movs	r0, #0
 8000706:	f7ff ff37 	bl	8000578 <LcdWriteData>

	//power on sequence control
	LcdWriteReg(0xED);
 800070a:	20ed      	movs	r0, #237	; 0xed
 800070c:	f7ff ff0a 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x64);
 8000710:	2064      	movs	r0, #100	; 0x64
 8000712:	f7ff ff31 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x03);
 8000716:	2003      	movs	r0, #3
 8000718:	f7ff ff2e 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x12);
 800071c:	2012      	movs	r0, #18
 800071e:	f7ff ff2b 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x81);
 8000722:	2081      	movs	r0, #129	; 0x81
 8000724:	f7ff ff28 	bl	8000578 <LcdWriteData>

	//pump ratio control
	LcdWriteReg(0xF7);
 8000728:	20f7      	movs	r0, #247	; 0xf7
 800072a:	f7ff fefb 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x20);
 800072e:	2020      	movs	r0, #32
 8000730:	f7ff ff22 	bl	8000578 <LcdWriteData>

	//power control,VRH[5:0]
	LcdWriteReg(0xC0);
 8000734:	20c0      	movs	r0, #192	; 0xc0
 8000736:	f7ff fef5 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x23);
 800073a:	2023      	movs	r0, #35	; 0x23
 800073c:	f7ff ff1c 	bl	8000578 <LcdWriteData>

	//Power control,SAP[2:0];BT[3:0]
	LcdWriteReg(0xC1);
 8000740:	20c1      	movs	r0, #193	; 0xc1
 8000742:	f7ff feef 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x10);
 8000746:	2010      	movs	r0, #16
 8000748:	f7ff ff16 	bl	8000578 <LcdWriteData>

	//vcm control
	LcdWriteReg(0xC5);
 800074c:	20c5      	movs	r0, #197	; 0xc5
 800074e:	f7ff fee9 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x3E);
 8000752:	203e      	movs	r0, #62	; 0x3e
 8000754:	f7ff ff10 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x28);
 8000758:	2028      	movs	r0, #40	; 0x28
 800075a:	f7ff ff0d 	bl	8000578 <LcdWriteData>

	//vcm control 2
	LcdWriteReg(0xC7);
 800075e:	20c7      	movs	r0, #199	; 0xc7
 8000760:	f7ff fee0 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x86);
 8000764:	2086      	movs	r0, #134	; 0x86
 8000766:	f7ff ff07 	bl	8000578 <LcdWriteData>

	//memory access control
	LcdWriteReg(0x36);
 800076a:	2036      	movs	r0, #54	; 0x36
 800076c:	f7ff feda 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x48);
 8000770:	2048      	movs	r0, #72	; 0x48
 8000772:	f7ff ff01 	bl	8000578 <LcdWriteData>

	//pixel format
	LcdWriteReg(0x3A);
 8000776:	203a      	movs	r0, #58	; 0x3a
 8000778:	f7ff fed4 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x55);
 800077c:	2055      	movs	r0, #85	; 0x55
 800077e:	f7ff fefb 	bl	8000578 <LcdWriteData>

	//frameration control,normal mode full colours
	LcdWriteReg(0xB1);
 8000782:	20b1      	movs	r0, #177	; 0xb1
 8000784:	f7ff fece 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x00);
 8000788:	2000      	movs	r0, #0
 800078a:	f7ff fef5 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x18);
 800078e:	2018      	movs	r0, #24
 8000790:	f7ff fef2 	bl	8000578 <LcdWriteData>

	//display function control
	LcdWriteReg(0xB6);
 8000794:	20b6      	movs	r0, #182	; 0xb6
 8000796:	f7ff fec5 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x08);
 800079a:	2008      	movs	r0, #8
 800079c:	f7ff feec 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x82);
 80007a0:	2082      	movs	r0, #130	; 0x82
 80007a2:	f7ff fee9 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x27);
 80007a6:	2027      	movs	r0, #39	; 0x27
 80007a8:	f7ff fee6 	bl	8000578 <LcdWriteData>

	//3gamma function disable
	LcdWriteReg(0xF2);
 80007ac:	20f2      	movs	r0, #242	; 0xf2
 80007ae:	f7ff feb9 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x00);
 80007b2:	2000      	movs	r0, #0
 80007b4:	f7ff fee0 	bl	8000578 <LcdWriteData>

	//gamma curve selected
	LcdWriteReg(0x26);
 80007b8:	2026      	movs	r0, #38	; 0x26
 80007ba:	f7ff feb3 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x01);
 80007be:	2001      	movs	r0, #1
 80007c0:	f7ff feda 	bl	8000578 <LcdWriteData>

	//set positive gamma correction
	LcdWriteReg(0xE0);
 80007c4:	20e0      	movs	r0, #224	; 0xe0
 80007c6:	f7ff fead 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x0F);
 80007ca:	200f      	movs	r0, #15
 80007cc:	f7ff fed4 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x31);
 80007d0:	2031      	movs	r0, #49	; 0x31
 80007d2:	f7ff fed1 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x2B);
 80007d6:	202b      	movs	r0, #43	; 0x2b
 80007d8:	f7ff fece 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x0C);
 80007dc:	200c      	movs	r0, #12
 80007de:	f7ff fecb 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x0E);
 80007e2:	200e      	movs	r0, #14
 80007e4:	f7ff fec8 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x08);
 80007e8:	2008      	movs	r0, #8
 80007ea:	f7ff fec5 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x4E);
 80007ee:	204e      	movs	r0, #78	; 0x4e
 80007f0:	f7ff fec2 	bl	8000578 <LcdWriteData>
	LcdWriteData(0xF1);
 80007f4:	20f1      	movs	r0, #241	; 0xf1
 80007f6:	f7ff febf 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x37);
 80007fa:	2037      	movs	r0, #55	; 0x37
 80007fc:	f7ff febc 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x07);
 8000800:	2007      	movs	r0, #7
 8000802:	f7ff feb9 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x10);
 8000806:	2010      	movs	r0, #16
 8000808:	f7ff feb6 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x03);
 800080c:	2003      	movs	r0, #3
 800080e:	f7ff feb3 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x0E);
 8000812:	200e      	movs	r0, #14
 8000814:	f7ff feb0 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x09);
 8000818:	2009      	movs	r0, #9
 800081a:	f7ff fead 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x00);
 800081e:	2000      	movs	r0, #0
 8000820:	f7ff feaa 	bl	8000578 <LcdWriteData>

	//set negative gamma correction
	LcdWriteReg(0xE1);
 8000824:	20e1      	movs	r0, #225	; 0xe1
 8000826:	f7ff fe7d 	bl	8000524 <LcdWriteReg>
	LcdWriteData(0x00);
 800082a:	2000      	movs	r0, #0
 800082c:	f7ff fea4 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x0E);
 8000830:	200e      	movs	r0, #14
 8000832:	f7ff fea1 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x14);
 8000836:	2014      	movs	r0, #20
 8000838:	f7ff fe9e 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x03);
 800083c:	2003      	movs	r0, #3
 800083e:	f7ff fe9b 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x11);
 8000842:	2011      	movs	r0, #17
 8000844:	f7ff fe98 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x07);
 8000848:	2007      	movs	r0, #7
 800084a:	f7ff fe95 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x31);
 800084e:	2031      	movs	r0, #49	; 0x31
 8000850:	f7ff fe92 	bl	8000578 <LcdWriteData>
	LcdWriteData(0xC1);
 8000854:	20c1      	movs	r0, #193	; 0xc1
 8000856:	f7ff fe8f 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x48);
 800085a:	2048      	movs	r0, #72	; 0x48
 800085c:	f7ff fe8c 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x08);
 8000860:	2008      	movs	r0, #8
 8000862:	f7ff fe89 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x0F);
 8000866:	200f      	movs	r0, #15
 8000868:	f7ff fe86 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x0C);
 800086c:	200c      	movs	r0, #12
 800086e:	f7ff fe83 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x31);
 8000872:	2031      	movs	r0, #49	; 0x31
 8000874:	f7ff fe80 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x36);
 8000878:	2036      	movs	r0, #54	; 0x36
 800087a:	f7ff fe7d 	bl	8000578 <LcdWriteData>
	LcdWriteData(0x0F);
 800087e:	200f      	movs	r0, #15
 8000880:	f7ff fe7a 	bl	8000578 <LcdWriteData>

	//exit sleep
	LcdWriteReg(0x11);
 8000884:	2011      	movs	r0, #17
 8000886:	f7ff fe4d 	bl	8000524 <LcdWriteReg>
	HAL_Delay(120);
 800088a:	2078      	movs	r0, #120	; 0x78
 800088c:	f000 fc3a 	bl	8001104 <HAL_Delay>
	//display on
	LcdWriteReg(0x29);
 8000890:	2029      	movs	r0, #41	; 0x29
 8000892:	f7ff fe47 	bl	8000524 <LcdWriteReg>
}
 8000896:	bf00      	nop
 8000898:	3708      	adds	r7, #8
 800089a:	46bd      	mov	sp, r7
 800089c:	bd80      	pop	{r7, pc}
 800089e:	bf00      	nop
 80008a0:	40020800 	.word	0x40020800

080008a4 <LCD_X_Config>:
* Function description:
*   Called during the initialization process in order to set up the
*   display driver configuration.
*
*/
void LCD_X_Config(void) {
 80008a4:	b580      	push	{r7, lr}
 80008a6:	b0a0      	sub	sp, #128	; 0x80
 80008a8:	af00      	add	r7, sp, #0
  GUI_DEVICE * pDevice;
  CONFIG_FLEXCOLOR Config = {0};
 80008aa:	f107 0368 	add.w	r3, r7, #104	; 0x68
 80008ae:	2200      	movs	r2, #0
 80008b0:	601a      	str	r2, [r3, #0]
 80008b2:	605a      	str	r2, [r3, #4]
 80008b4:	609a      	str	r2, [r3, #8]
 80008b6:	60da      	str	r2, [r3, #12]
 80008b8:	611a      	str	r2, [r3, #16]
  GUI_PORT_API PortAPI = {0};
 80008ba:	463b      	mov	r3, r7
 80008bc:	2268      	movs	r2, #104	; 0x68
 80008be:	2100      	movs	r1, #0
 80008c0:	4618      	mov	r0, r3
 80008c2:	f00f fc13 	bl	80100ec <memset>
  //
  // Set display driver and color conversion
  //
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);//16bit color flexcolor driver
 80008c6:	2300      	movs	r3, #0
 80008c8:	2200      	movs	r2, #0
 80008ca:	4916      	ldr	r1, [pc, #88]	; (8000924 <LCD_X_Config+0x80>)
 80008cc:	4816      	ldr	r0, [pc, #88]	; (8000928 <LCD_X_Config+0x84>)
 80008ce:	f00a f8a5 	bl	800aa1c <GUI_DEVICE_CreateAndLink>
 80008d2:	67f8      	str	r0, [r7, #124]	; 0x7c
  //
  // Display driver configuration, required for Lin-driver
  //
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 80008d4:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80008d8:	21f0      	movs	r1, #240	; 0xf0
 80008da:	2000      	movs	r0, #0
 80008dc:	f007 ffc0 	bl	8008860 <LCD_SetSizeEx>
  LCD_SetVSizeEx(0, VXSIZE_PHYS, VYSIZE_PHYS);
 80008e0:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80008e4:	21f0      	movs	r1, #240	; 0xf0
 80008e6:	2000      	movs	r0, #0
 80008e8:	f007 ffa2 	bl	8008830 <LCD_SetVSizeEx>
  //
  // Orientation
  //
  Config.Orientation = GUI_SWAP_XY;
 80008ec:	2304      	movs	r3, #4
 80008ee:	673b      	str	r3, [r7, #112]	; 0x70
  GUIDRV_FlexColor_Config(pDevice, &Config);
 80008f0:	f107 0368 	add.w	r3, r7, #104	; 0x68
 80008f4:	4619      	mov	r1, r3
 80008f6:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 80008f8:	f007 ff39 	bl	800876e <GUIDRV_FlexColor_Config>
  //
  // Set controller and operation mode
  //
  PortAPI.pfWrite8_A0  = LcdWriteReg;
 80008fc:	4b0b      	ldr	r3, [pc, #44]	; (800092c <LCD_X_Config+0x88>)
 80008fe:	603b      	str	r3, [r7, #0]
  PortAPI.pfWrite8_A1  = LcdWriteData;
 8000900:	4b0b      	ldr	r3, [pc, #44]	; (8000930 <LCD_X_Config+0x8c>)
 8000902:	607b      	str	r3, [r7, #4]
  PortAPI.pfWriteM8_A1  = LcdWriteDataMultiple;
 8000904:	4b0b      	ldr	r3, [pc, #44]	; (8000934 <LCD_X_Config+0x90>)
 8000906:	60fb      	str	r3, [r7, #12]
  PortAPI.pfRead8_A1  = LcdReadReg;
 8000908:	4b0b      	ldr	r3, [pc, #44]	; (8000938 <LCD_X_Config+0x94>)
 800090a:	617b      	str	r3, [r7, #20]
  PortAPI.pfReadM8_A1 = LcdReadDataMultiple;
 800090c:	4b0b      	ldr	r3, [pc, #44]	; (800093c <LCD_X_Config+0x98>)
 800090e:	61fb      	str	r3, [r7, #28]

  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66709, GUIDRV_FLEXCOLOR_M16C0B8);//ILI9341, 16bit color, 8 bit bus, no cache
 8000910:	4639      	mov	r1, r7
 8000912:	4b0b      	ldr	r3, [pc, #44]	; (8000940 <LCD_X_Config+0x9c>)
 8000914:	4a0b      	ldr	r2, [pc, #44]	; (8000944 <LCD_X_Config+0xa0>)
 8000916:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 8000918:	f007 ff47 	bl	80087aa <GUIDRV_FlexColor_SetFunc>
}
 800091c:	bf00      	nop
 800091e:	3780      	adds	r7, #128	; 0x80
 8000920:	46bd      	mov	sp, r7
 8000922:	bd80      	pop	{r7, pc}
 8000924:	0801245c 	.word	0x0801245c
 8000928:	080122a8 	.word	0x080122a8
 800092c:	08000525 	.word	0x08000525
 8000930:	08000579 	.word	0x08000579
 8000934:	080005bd 	.word	0x080005bd
 8000938:	08000569 	.word	0x08000569
 800093c:	08000609 	.word	0x08000609
 8000940:	08008131 	.word	0x08008131
 8000944:	08007a2d 	.word	0x08007a2d

08000948 <LCD_X_DisplayDriver>:
* Return Value:
*   < -1 - Error
*     -1 - Command not handled
*      0 - Ok
*/
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
 8000948:	b580      	push	{r7, lr}
 800094a:	b086      	sub	sp, #24
 800094c:	af00      	add	r7, sp, #0
 800094e:	60f8      	str	r0, [r7, #12]
 8000950:	60b9      	str	r1, [r7, #8]
 8000952:	607a      	str	r2, [r7, #4]
  int r;
  (void) LayerIndex;
  (void) pData;
  
  switch (Cmd) {
 8000954:	68bb      	ldr	r3, [r7, #8]
 8000956:	2b01      	cmp	r3, #1
 8000958:	d103      	bne.n	8000962 <LCD_X_DisplayDriver+0x1a>
  case LCD_X_INITCONTROLLER: {
	LcdInit();	//ili9341 init code
 800095a:	f7ff fe67 	bl	800062c <LcdInit>
    return 0;
 800095e:	2300      	movs	r3, #0
 8000960:	e003      	b.n	800096a <LCD_X_DisplayDriver+0x22>
  }
  default:
    r = -1;
 8000962:	f04f 33ff 	mov.w	r3, #4294967295
 8000966:	617b      	str	r3, [r7, #20]
  }
  return r;
 8000968:	697b      	ldr	r3, [r7, #20]
}
 800096a:	4618      	mov	r0, r3
 800096c:	3718      	adds	r7, #24
 800096e:	46bd      	mov	sp, r7
 8000970:	bd80      	pop	{r7, pc}
	...

08000974 <_cbDialog>:

/*********************************************************************
*
*       _cbDialog
*/
static void _cbDialog(WM_MESSAGE * pMsg) {
 8000974:	b580      	push	{r7, lr}
 8000976:	b084      	sub	sp, #16
 8000978:	af00      	add	r7, sp, #0
 800097a:	6078      	str	r0, [r7, #4]
  WM_HWIN hItem;
  // USER START (Optionally insert additional variables)
  // USER END

  switch (pMsg->MsgId) {
 800097c:	687b      	ldr	r3, [r7, #4]
 800097e:	681b      	ldr	r3, [r3, #0]
 8000980:	2b1d      	cmp	r3, #29
 8000982:	d118      	bne.n	80009b6 <_cbDialog+0x42>
  case WM_INIT_DIALOG:
    //
    // Initialization of 'ADC Value:'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_0);
 8000984:	687b      	ldr	r3, [r7, #4]
 8000986:	685b      	ldr	r3, [r3, #4]
 8000988:	f640 0102 	movw	r1, #2050	; 0x802
 800098c:	4618      	mov	r0, r3
 800098e:	f004 f90f 	bl	8004bb0 <WM_GetDialogItem>
 8000992:	60f8      	str	r0, [r7, #12]
    TEXT_SetFont(hItem, GUI_FONT_13_1);
 8000994:	490c      	ldr	r1, [pc, #48]	; (80009c8 <_cbDialog+0x54>)
 8000996:	68f8      	ldr	r0, [r7, #12]
 8000998:	f002 fa2d 	bl	8002df6 <TEXT_SetFont>
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
 800099c:	687b      	ldr	r3, [r7, #4]
 800099e:	685b      	ldr	r3, [r3, #4]
 80009a0:	f640 0103 	movw	r1, #2051	; 0x803
 80009a4:	4618      	mov	r0, r3
 80009a6:	f004 f903 	bl	8004bb0 <WM_GetDialogItem>
 80009aa:	60f8      	str	r0, [r7, #12]
    TEXT_SetFont(hItem, GUI_FONT_20_ASCII);
 80009ac:	4907      	ldr	r1, [pc, #28]	; (80009cc <_cbDialog+0x58>)
 80009ae:	68f8      	ldr	r0, [r7, #12]
 80009b0:	f002 fa21 	bl	8002df6 <TEXT_SetFont>
    // USER START (Optionally insert additional code for further widget initialization)
    // USER END
    break;
 80009b4:	e003      	b.n	80009be <_cbDialog+0x4a>
  // USER START (Optionally insert additional message handling)
  // USER END
  default:
    WM_DefaultProc(pMsg);
 80009b6:	6878      	ldr	r0, [r7, #4]
 80009b8:	f005 fd6c 	bl	8006494 <WM_DefaultProc>
    break;
 80009bc:	bf00      	nop
  }
}
 80009be:	bf00      	nop
 80009c0:	3710      	adds	r7, #16
 80009c2:	46bd      	mov	sp, r7
 80009c4:	bd80      	pop	{r7, pc}
 80009c6:	bf00      	nop
 80009c8:	08011b8c 	.word	0x08011b8c
 80009cc:	08011348 	.word	0x08011348

080009d0 <MainLCDTask>:
*/
/*********************************************************************
*
*       CreateSTemWin_Demo
*/
WM_HWIN MainLCDTask(void) {
 80009d0:	b580      	push	{r7, lr}
 80009d2:	b090      	sub	sp, #64	; 0x40
 80009d4:	af02      	add	r7, sp, #8
  char i=0,x=0;
 80009d6:	2300      	movs	r3, #0
 80009d8:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 80009dc:	2300      	movs	r3, #0
 80009de:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  WM_HWIN hGraph;
  PROGBAR_Handle   	hPbar;
  TEXT_Handle	   	hText1,hText2;
  GRAPH_DATA_Handle hData;

  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), _cbDialog, WM_HBKWIN, 0, 0);
 80009e2:	f004 f87f 	bl	8004ae4 <WM_GetDesktopWindow>
 80009e6:	4603      	mov	r3, r0
 80009e8:	2200      	movs	r2, #0
 80009ea:	9201      	str	r2, [sp, #4]
 80009ec:	2200      	movs	r2, #0
 80009ee:	9200      	str	r2, [sp, #0]
 80009f0:	4a4c      	ldr	r2, [pc, #304]	; (8000b24 <MainLCDTask+0x154>)
 80009f2:	2106      	movs	r1, #6
 80009f4:	484c      	ldr	r0, [pc, #304]	; (8000b28 <MainLCDTask+0x158>)
 80009f6:	f003 fcd5 	bl	80043a4 <GUI_CreateDialogBox>
 80009fa:	62f8      	str	r0, [r7, #44]	; 0x2c

  hPbar = WM_GetDialogItem(hWin, ID_PROGBAR_0);
 80009fc:	f640 0104 	movw	r1, #2052	; 0x804
 8000a00:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000a02:	f004 f8d5 	bl	8004bb0 <WM_GetDialogItem>
 8000a06:	62b8      	str	r0, [r7, #40]	; 0x28

  hText1 = WM_GetDialogItem(hWin, ID_TEXT_1);
 8000a08:	f640 0103 	movw	r1, #2051	; 0x803
 8000a0c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000a0e:	f004 f8cf 	bl	8004bb0 <WM_GetDialogItem>
 8000a12:	6278      	str	r0, [r7, #36]	; 0x24

  hText2 = WM_GetDialogItem(hWin, ID_TEXT_2);
 8000a14:	f640 0105 	movw	r1, #2053	; 0x805
 8000a18:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000a1a:	f004 f8c9 	bl	8004bb0 <WM_GetDialogItem>
 8000a1e:	6238      	str	r0, [r7, #32]

  hGraph = WM_GetDialogItem(hWin, ID_GRAPH_0);
 8000a20:	f640 0101 	movw	r1, #2049	; 0x801
 8000a24:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000a26:	f004 f8c3 	bl	8004bb0 <WM_GetDialogItem>
 8000a2a:	61f8      	str	r0, [r7, #28]


  hData = GRAPH_DATA_YT_Create(GUI_RED, 200, NULL, 0);
 8000a2c:	2300      	movs	r3, #0
 8000a2e:	2200      	movs	r2, #0
 8000a30:	21c8      	movs	r1, #200	; 0xc8
 8000a32:	483e      	ldr	r0, [pc, #248]	; (8000b2c <MainLCDTask+0x15c>)
 8000a34:	f002 fcae 	bl	8003394 <GRAPH_DATA_YT_Create>
 8000a38:	61b8      	str	r0, [r7, #24]
  GRAPH_DATA_YT_SetAlign(hData, GRAPH_ALIGN_LEFT);
 8000a3a:	2101      	movs	r1, #1
 8000a3c:	69b8      	ldr	r0, [r7, #24]
 8000a3e:	f002 fd00 	bl	8003442 <GRAPH_DATA_YT_SetAlign>
  GRAPH_AttachData(hGraph, hData);
 8000a42:	69b9      	ldr	r1, [r7, #24]
 8000a44:	69f8      	ldr	r0, [r7, #28]
 8000a46:	f003 f8ca 	bl	8003bde <GRAPH_AttachData>

  GRAPH_SetGridVis(hGraph, 1);
 8000a4a:	2101      	movs	r1, #1
 8000a4c:	69f8      	ldr	r0, [r7, #28]
 8000a4e:	f003 f8e8 	bl	8003c22 <GRAPH_SetGridVis>
  GRAPH_SetBorder(hGraph, 30, 0, 0, 0);
 8000a52:	2300      	movs	r3, #0
 8000a54:	9300      	str	r3, [sp, #0]
 8000a56:	2300      	movs	r3, #0
 8000a58:	2200      	movs	r2, #0
 8000a5a:	211e      	movs	r1, #30
 8000a5c:	69f8      	ldr	r0, [r7, #28]
 8000a5e:	f003 f8f8 	bl	8003c52 <GRAPH_SetBorder>

  while(1)
  {
	 PROGBAR_SetValue(hPbar, i++);
 8000a62:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8000a66:	1c5a      	adds	r2, r3, #1
 8000a68:	f887 2037 	strb.w	r2, [r7, #55]	; 0x37
 8000a6c:	4619      	mov	r1, r3
 8000a6e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8000a70:	f002 fb2d 	bl	80030ce <PROGBAR_SetValue>
     if(i>100) i = 0;
 8000a74:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8000a78:	2b64      	cmp	r3, #100	; 0x64
 8000a7a:	d902      	bls.n	8000a82 <MainLCDTask+0xb2>
 8000a7c:	2300      	movs	r3, #0
 8000a7e:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

     HAL_ADC_Start(&hadc1);
 8000a82:	482b      	ldr	r0, [pc, #172]	; (8000b30 <MainLCDTask+0x160>)
 8000a84:	f000 fba6 	bl	80011d4 <HAL_ADC_Start>
     HAL_ADC_PollForConversion(&hadc1, 50);
 8000a88:	2132      	movs	r1, #50	; 0x32
 8000a8a:	4829      	ldr	r0, [pc, #164]	; (8000b30 <MainLCDTask+0x160>)
 8000a8c:	f000 fca7 	bl	80013de <HAL_ADC_PollForConversion>
     ADC_Value = HAL_ADC_GetValue(&hadc1);
 8000a90:	4827      	ldr	r0, [pc, #156]	; (8000b30 <MainLCDTask+0x160>)
 8000a92:	f000 fd2f 	bl	80014f4 <HAL_ADC_GetValue>
 8000a96:	4603      	mov	r3, r0
 8000a98:	617b      	str	r3, [r7, #20]
     HAL_ADC_Stop(&hadc1);
 8000a9a:	4825      	ldr	r0, [pc, #148]	; (8000b30 <MainLCDTask+0x160>)
 8000a9c:	f000 fc6c 	bl	8001378 <HAL_ADC_Stop>
     itoa(ADC_Value,str,10);
 8000aa0:	463b      	mov	r3, r7
 8000aa2:	220a      	movs	r2, #10
 8000aa4:	4619      	mov	r1, r3
 8000aa6:	6978      	ldr	r0, [r7, #20]
 8000aa8:	f00f faf6 	bl	8010098 <itoa>
     TEXT_SetText(hText1, str);
 8000aac:	463b      	mov	r3, r7
 8000aae:	4619      	mov	r1, r3
 8000ab0:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000ab2:	f002 f9b3 	bl	8002e1c <TEXT_SetText>

     itoa(StopTime,str,10);
 8000ab6:	463b      	mov	r3, r7
 8000ab8:	220a      	movs	r2, #10
 8000aba:	4619      	mov	r1, r3
 8000abc:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8000abe:	f00f faeb 	bl	8010098 <itoa>
     TEXT_SetText(hText2, str);
 8000ac2:	463b      	mov	r3, r7
 8000ac4:	4619      	mov	r1, r3
 8000ac6:	6a38      	ldr	r0, [r7, #32]
 8000ac8:	f002 f9a8 	bl	8002e1c <TEXT_SetText>

     x++;
 8000acc:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8000ad0:	3301      	adds	r3, #1
 8000ad2:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
     if(x>200)
 8000ad6:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8000ada:	2bc8      	cmp	r3, #200	; 0xc8
 8000adc:	d905      	bls.n	8000aea <MainLCDTask+0x11a>
     {
    	 x=0;
 8000ade:	2300      	movs	r3, #0
 8000ae0:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
    	 GRAPH_DATA_YT_Clear(hData);
 8000ae4:	69b8      	ldr	r0, [r7, #24]
 8000ae6:	f002 fcc0 	bl	800346a <GRAPH_DATA_YT_Clear>
     }

     GRAPH_DATA_YT_AddValue(hData, ADC_Value/20);
 8000aea:	697b      	ldr	r3, [r7, #20]
 8000aec:	4a11      	ldr	r2, [pc, #68]	; (8000b34 <MainLCDTask+0x164>)
 8000aee:	fb82 1203 	smull	r1, r2, r2, r3
 8000af2:	10d2      	asrs	r2, r2, #3
 8000af4:	17db      	asrs	r3, r3, #31
 8000af6:	1ad3      	subs	r3, r2, r3
 8000af8:	b21b      	sxth	r3, r3
 8000afa:	4619      	mov	r1, r3
 8000afc:	69b8      	ldr	r0, [r7, #24]
 8000afe:	f002 fc85 	bl	800340c <GRAPH_DATA_YT_AddValue>


	 HAL_Delay(100);
 8000b02:	2064      	movs	r0, #100	; 0x64
 8000b04:	f000 fafe 	bl	8001104 <HAL_Delay>

	 StartTime = HAL_GetTick();
 8000b08:	f000 faf0 	bl	80010ec <HAL_GetTick>
 8000b0c:	4603      	mov	r3, r0
 8000b0e:	613b      	str	r3, [r7, #16]
	 GUI_Exec();
 8000b10:	f00a f9f6 	bl	800af00 <GUI_Exec>
	 StopTime = HAL_GetTick() - StartTime;
 8000b14:	f000 faea 	bl	80010ec <HAL_GetTick>
 8000b18:	4602      	mov	r2, r0
 8000b1a:	693b      	ldr	r3, [r7, #16]
 8000b1c:	1ad3      	subs	r3, r2, r3
 8000b1e:	633b      	str	r3, [r7, #48]	; 0x30
  {
 8000b20:	e79f      	b.n	8000a62 <MainLCDTask+0x92>
 8000b22:	bf00      	nop
 8000b24:	08000975 	.word	0x08000975
 8000b28:	08010224 	.word	0x08010224
 8000b2c:	ffff0000 	.word	0xffff0000
 8000b30:	20002a18 	.word	0x20002a18
 8000b34:	66666667 	.word	0x66666667

08000b38 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000b38:	b580      	push	{r7, lr}
 8000b3a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000b3c:	f000 fa70 	bl	8001020 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000b40:	f000 f80c 	bl	8000b5c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000b44:	f000 f8fc 	bl	8000d40 <MX_GPIO_Init>
  MX_ADC1_Init();
 8000b48:	f000 f872 	bl	8000c30 <MX_ADC1_Init>
  MX_SPI1_Init();
 8000b4c:	f000 f8c2 	bl	8000cd4 <MX_SPI1_Init>
  /* USER CODE BEGIN 2 */

  GUI_Init();
 8000b50:	f00a f854 	bl	800abfc <GUI_Init>

  MainLCDTask();
 8000b54:	f7ff ff3c 	bl	80009d0 <MainLCDTask>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000b58:	e7fe      	b.n	8000b58 <main+0x20>
	...

08000b5c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000b5c:	b580      	push	{r7, lr}
 8000b5e:	b094      	sub	sp, #80	; 0x50
 8000b60:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000b62:	f107 0320 	add.w	r3, r7, #32
 8000b66:	2230      	movs	r2, #48	; 0x30
 8000b68:	2100      	movs	r1, #0
 8000b6a:	4618      	mov	r0, r3
 8000b6c:	f00f fabe 	bl	80100ec <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000b70:	f107 030c 	add.w	r3, r7, #12
 8000b74:	2200      	movs	r2, #0
 8000b76:	601a      	str	r2, [r3, #0]
 8000b78:	605a      	str	r2, [r3, #4]
 8000b7a:	609a      	str	r2, [r3, #8]
 8000b7c:	60da      	str	r2, [r3, #12]
 8000b7e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000b80:	2300      	movs	r3, #0
 8000b82:	60bb      	str	r3, [r7, #8]
 8000b84:	4b28      	ldr	r3, [pc, #160]	; (8000c28 <SystemClock_Config+0xcc>)
 8000b86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000b88:	4a27      	ldr	r2, [pc, #156]	; (8000c28 <SystemClock_Config+0xcc>)
 8000b8a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000b8e:	6413      	str	r3, [r2, #64]	; 0x40
 8000b90:	4b25      	ldr	r3, [pc, #148]	; (8000c28 <SystemClock_Config+0xcc>)
 8000b92:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000b94:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000b98:	60bb      	str	r3, [r7, #8]
 8000b9a:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000b9c:	2300      	movs	r3, #0
 8000b9e:	607b      	str	r3, [r7, #4]
 8000ba0:	4b22      	ldr	r3, [pc, #136]	; (8000c2c <SystemClock_Config+0xd0>)
 8000ba2:	681b      	ldr	r3, [r3, #0]
 8000ba4:	4a21      	ldr	r2, [pc, #132]	; (8000c2c <SystemClock_Config+0xd0>)
 8000ba6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000baa:	6013      	str	r3, [r2, #0]
 8000bac:	4b1f      	ldr	r3, [pc, #124]	; (8000c2c <SystemClock_Config+0xd0>)
 8000bae:	681b      	ldr	r3, [r3, #0]
 8000bb0:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000bb4:	607b      	str	r3, [r7, #4]
 8000bb6:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000bb8:	2301      	movs	r3, #1
 8000bba:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000bbc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000bc0:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000bc2:	2302      	movs	r3, #2
 8000bc4:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000bc6:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000bca:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000bcc:	2304      	movs	r3, #4
 8000bce:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8000bd0:	23a8      	movs	r3, #168	; 0xa8
 8000bd2:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000bd4:	2302      	movs	r3, #2
 8000bd6:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8000bd8:	2304      	movs	r3, #4
 8000bda:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000bdc:	f107 0320 	add.w	r3, r7, #32
 8000be0:	4618      	mov	r0, r3
 8000be2:	f001 f94f 	bl	8001e84 <HAL_RCC_OscConfig>
 8000be6:	4603      	mov	r3, r0
 8000be8:	2b00      	cmp	r3, #0
 8000bea:	d001      	beq.n	8000bf0 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8000bec:	f000 f8f8 	bl	8000de0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000bf0:	230f      	movs	r3, #15
 8000bf2:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000bf4:	2302      	movs	r3, #2
 8000bf6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000bf8:	2300      	movs	r3, #0
 8000bfa:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000bfc:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000c00:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000c02:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000c06:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000c08:	f107 030c 	add.w	r3, r7, #12
 8000c0c:	2105      	movs	r1, #5
 8000c0e:	4618      	mov	r0, r3
 8000c10:	f001 fbb0 	bl	8002374 <HAL_RCC_ClockConfig>
 8000c14:	4603      	mov	r3, r0
 8000c16:	2b00      	cmp	r3, #0
 8000c18:	d001      	beq.n	8000c1e <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8000c1a:	f000 f8e1 	bl	8000de0 <Error_Handler>
  }
}
 8000c1e:	bf00      	nop
 8000c20:	3750      	adds	r7, #80	; 0x50
 8000c22:	46bd      	mov	sp, r7
 8000c24:	bd80      	pop	{r7, pc}
 8000c26:	bf00      	nop
 8000c28:	40023800 	.word	0x40023800
 8000c2c:	40007000 	.word	0x40007000

08000c30 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000c30:	b580      	push	{r7, lr}
 8000c32:	b084      	sub	sp, #16
 8000c34:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000c36:	463b      	mov	r3, r7
 8000c38:	2200      	movs	r2, #0
 8000c3a:	601a      	str	r2, [r3, #0]
 8000c3c:	605a      	str	r2, [r3, #4]
 8000c3e:	609a      	str	r2, [r3, #8]
 8000c40:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8000c42:	4b21      	ldr	r3, [pc, #132]	; (8000cc8 <MX_ADC1_Init+0x98>)
 8000c44:	4a21      	ldr	r2, [pc, #132]	; (8000ccc <MX_ADC1_Init+0x9c>)
 8000c46:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8000c48:	4b1f      	ldr	r3, [pc, #124]	; (8000cc8 <MX_ADC1_Init+0x98>)
 8000c4a:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8000c4e:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000c50:	4b1d      	ldr	r3, [pc, #116]	; (8000cc8 <MX_ADC1_Init+0x98>)
 8000c52:	2200      	movs	r2, #0
 8000c54:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8000c56:	4b1c      	ldr	r3, [pc, #112]	; (8000cc8 <MX_ADC1_Init+0x98>)
 8000c58:	2200      	movs	r2, #0
 8000c5a:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000c5c:	4b1a      	ldr	r3, [pc, #104]	; (8000cc8 <MX_ADC1_Init+0x98>)
 8000c5e:	2200      	movs	r2, #0
 8000c60:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000c62:	4b19      	ldr	r3, [pc, #100]	; (8000cc8 <MX_ADC1_Init+0x98>)
 8000c64:	2200      	movs	r2, #0
 8000c66:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000c6a:	4b17      	ldr	r3, [pc, #92]	; (8000cc8 <MX_ADC1_Init+0x98>)
 8000c6c:	2200      	movs	r2, #0
 8000c6e:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000c70:	4b15      	ldr	r3, [pc, #84]	; (8000cc8 <MX_ADC1_Init+0x98>)
 8000c72:	4a17      	ldr	r2, [pc, #92]	; (8000cd0 <MX_ADC1_Init+0xa0>)
 8000c74:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000c76:	4b14      	ldr	r3, [pc, #80]	; (8000cc8 <MX_ADC1_Init+0x98>)
 8000c78:	2200      	movs	r2, #0
 8000c7a:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8000c7c:	4b12      	ldr	r3, [pc, #72]	; (8000cc8 <MX_ADC1_Init+0x98>)
 8000c7e:	2201      	movs	r2, #1
 8000c80:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8000c82:	4b11      	ldr	r3, [pc, #68]	; (8000cc8 <MX_ADC1_Init+0x98>)
 8000c84:	2200      	movs	r2, #0
 8000c86:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000c8a:	4b0f      	ldr	r3, [pc, #60]	; (8000cc8 <MX_ADC1_Init+0x98>)
 8000c8c:	2201      	movs	r2, #1
 8000c8e:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000c90:	480d      	ldr	r0, [pc, #52]	; (8000cc8 <MX_ADC1_Init+0x98>)
 8000c92:	f000 fa5b 	bl	800114c <HAL_ADC_Init>
 8000c96:	4603      	mov	r3, r0
 8000c98:	2b00      	cmp	r3, #0
 8000c9a:	d001      	beq.n	8000ca0 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8000c9c:	f000 f8a0 	bl	8000de0 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000ca0:	2300      	movs	r3, #0
 8000ca2:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8000ca4:	2301      	movs	r3, #1
 8000ca6:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000ca8:	2300      	movs	r3, #0
 8000caa:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000cac:	463b      	mov	r3, r7
 8000cae:	4619      	mov	r1, r3
 8000cb0:	4805      	ldr	r0, [pc, #20]	; (8000cc8 <MX_ADC1_Init+0x98>)
 8000cb2:	f000 fc2d 	bl	8001510 <HAL_ADC_ConfigChannel>
 8000cb6:	4603      	mov	r3, r0
 8000cb8:	2b00      	cmp	r3, #0
 8000cba:	d001      	beq.n	8000cc0 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8000cbc:	f000 f890 	bl	8000de0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000cc0:	bf00      	nop
 8000cc2:	3710      	adds	r7, #16
 8000cc4:	46bd      	mov	sp, r7
 8000cc6:	bd80      	pop	{r7, pc}
 8000cc8:	20002a18 	.word	0x20002a18
 8000ccc:	40012000 	.word	0x40012000
 8000cd0:	0f000001 	.word	0x0f000001

08000cd4 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000cd4:	b580      	push	{r7, lr}
 8000cd6:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000cd8:	4b17      	ldr	r3, [pc, #92]	; (8000d38 <MX_SPI1_Init+0x64>)
 8000cda:	4a18      	ldr	r2, [pc, #96]	; (8000d3c <MX_SPI1_Init+0x68>)
 8000cdc:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8000cde:	4b16      	ldr	r3, [pc, #88]	; (8000d38 <MX_SPI1_Init+0x64>)
 8000ce0:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000ce4:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000ce6:	4b14      	ldr	r3, [pc, #80]	; (8000d38 <MX_SPI1_Init+0x64>)
 8000ce8:	2200      	movs	r2, #0
 8000cea:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8000cec:	4b12      	ldr	r3, [pc, #72]	; (8000d38 <MX_SPI1_Init+0x64>)
 8000cee:	2200      	movs	r2, #0
 8000cf0:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000cf2:	4b11      	ldr	r3, [pc, #68]	; (8000d38 <MX_SPI1_Init+0x64>)
 8000cf4:	2200      	movs	r2, #0
 8000cf6:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000cf8:	4b0f      	ldr	r3, [pc, #60]	; (8000d38 <MX_SPI1_Init+0x64>)
 8000cfa:	2200      	movs	r2, #0
 8000cfc:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8000cfe:	4b0e      	ldr	r3, [pc, #56]	; (8000d38 <MX_SPI1_Init+0x64>)
 8000d00:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000d04:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000d06:	4b0c      	ldr	r3, [pc, #48]	; (8000d38 <MX_SPI1_Init+0x64>)
 8000d08:	2200      	movs	r2, #0
 8000d0a:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000d0c:	4b0a      	ldr	r3, [pc, #40]	; (8000d38 <MX_SPI1_Init+0x64>)
 8000d0e:	2200      	movs	r2, #0
 8000d10:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8000d12:	4b09      	ldr	r3, [pc, #36]	; (8000d38 <MX_SPI1_Init+0x64>)
 8000d14:	2200      	movs	r2, #0
 8000d16:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000d18:	4b07      	ldr	r3, [pc, #28]	; (8000d38 <MX_SPI1_Init+0x64>)
 8000d1a:	2200      	movs	r2, #0
 8000d1c:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 8000d1e:	4b06      	ldr	r3, [pc, #24]	; (8000d38 <MX_SPI1_Init+0x64>)
 8000d20:	220a      	movs	r2, #10
 8000d22:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8000d24:	4804      	ldr	r0, [pc, #16]	; (8000d38 <MX_SPI1_Init+0x64>)
 8000d26:	f001 fd11 	bl	800274c <HAL_SPI_Init>
 8000d2a:	4603      	mov	r3, r0
 8000d2c:	2b00      	cmp	r3, #0
 8000d2e:	d001      	beq.n	8000d34 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8000d30:	f000 f856 	bl	8000de0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8000d34:	bf00      	nop
 8000d36:	bd80      	pop	{r7, pc}
 8000d38:	20002a60 	.word	0x20002a60
 8000d3c:	40013000 	.word	0x40013000

08000d40 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000d40:	b580      	push	{r7, lr}
 8000d42:	b088      	sub	sp, #32
 8000d44:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d46:	f107 030c 	add.w	r3, r7, #12
 8000d4a:	2200      	movs	r2, #0
 8000d4c:	601a      	str	r2, [r3, #0]
 8000d4e:	605a      	str	r2, [r3, #4]
 8000d50:	609a      	str	r2, [r3, #8]
 8000d52:	60da      	str	r2, [r3, #12]
 8000d54:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000d56:	2300      	movs	r3, #0
 8000d58:	60bb      	str	r3, [r7, #8]
 8000d5a:	4b1f      	ldr	r3, [pc, #124]	; (8000dd8 <MX_GPIO_Init+0x98>)
 8000d5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d5e:	4a1e      	ldr	r2, [pc, #120]	; (8000dd8 <MX_GPIO_Init+0x98>)
 8000d60:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000d64:	6313      	str	r3, [r2, #48]	; 0x30
 8000d66:	4b1c      	ldr	r3, [pc, #112]	; (8000dd8 <MX_GPIO_Init+0x98>)
 8000d68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d6a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000d6e:	60bb      	str	r3, [r7, #8]
 8000d70:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000d72:	2300      	movs	r3, #0
 8000d74:	607b      	str	r3, [r7, #4]
 8000d76:	4b18      	ldr	r3, [pc, #96]	; (8000dd8 <MX_GPIO_Init+0x98>)
 8000d78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d7a:	4a17      	ldr	r2, [pc, #92]	; (8000dd8 <MX_GPIO_Init+0x98>)
 8000d7c:	f043 0304 	orr.w	r3, r3, #4
 8000d80:	6313      	str	r3, [r2, #48]	; 0x30
 8000d82:	4b15      	ldr	r3, [pc, #84]	; (8000dd8 <MX_GPIO_Init+0x98>)
 8000d84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d86:	f003 0304 	and.w	r3, r3, #4
 8000d8a:	607b      	str	r3, [r7, #4]
 8000d8c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000d8e:	2300      	movs	r3, #0
 8000d90:	603b      	str	r3, [r7, #0]
 8000d92:	4b11      	ldr	r3, [pc, #68]	; (8000dd8 <MX_GPIO_Init+0x98>)
 8000d94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d96:	4a10      	ldr	r2, [pc, #64]	; (8000dd8 <MX_GPIO_Init+0x98>)
 8000d98:	f043 0301 	orr.w	r3, r3, #1
 8000d9c:	6313      	str	r3, [r2, #48]	; 0x30
 8000d9e:	4b0e      	ldr	r3, [pc, #56]	; (8000dd8 <MX_GPIO_Init+0x98>)
 8000da0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000da2:	f003 0301 	and.w	r3, r3, #1
 8000da6:	603b      	str	r3, [r7, #0]
 8000da8:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LCD_CS_Pin|LCD_DC_Pin|LCD_RST_Pin, GPIO_PIN_RESET);
 8000daa:	2200      	movs	r2, #0
 8000dac:	210e      	movs	r1, #14
 8000dae:	480b      	ldr	r0, [pc, #44]	; (8000ddc <MX_GPIO_Init+0x9c>)
 8000db0:	f001 f84e 	bl	8001e50 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : LCD_CS_Pin LCD_DC_Pin LCD_RST_Pin */
  GPIO_InitStruct.Pin = LCD_CS_Pin|LCD_DC_Pin|LCD_RST_Pin;
 8000db4:	230e      	movs	r3, #14
 8000db6:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000db8:	2301      	movs	r3, #1
 8000dba:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000dbc:	2300      	movs	r3, #0
 8000dbe:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000dc0:	2300      	movs	r3, #0
 8000dc2:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000dc4:	f107 030c 	add.w	r3, r7, #12
 8000dc8:	4619      	mov	r1, r3
 8000dca:	4804      	ldr	r0, [pc, #16]	; (8000ddc <MX_GPIO_Init+0x9c>)
 8000dcc:	f000 fea4 	bl	8001b18 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000dd0:	bf00      	nop
 8000dd2:	3720      	adds	r7, #32
 8000dd4:	46bd      	mov	sp, r7
 8000dd6:	bd80      	pop	{r7, pc}
 8000dd8:	40023800 	.word	0x40023800
 8000ddc:	40020800 	.word	0x40020800

08000de0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000de0:	b480      	push	{r7}
 8000de2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000de4:	b672      	cpsid	i
}
 8000de6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000de8:	e7fe      	b.n	8000de8 <Error_Handler+0x8>
	...

08000dec <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000dec:	b480      	push	{r7}
 8000dee:	b083      	sub	sp, #12
 8000df0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000df2:	2300      	movs	r3, #0
 8000df4:	607b      	str	r3, [r7, #4]
 8000df6:	4b10      	ldr	r3, [pc, #64]	; (8000e38 <HAL_MspInit+0x4c>)
 8000df8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000dfa:	4a0f      	ldr	r2, [pc, #60]	; (8000e38 <HAL_MspInit+0x4c>)
 8000dfc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000e00:	6453      	str	r3, [r2, #68]	; 0x44
 8000e02:	4b0d      	ldr	r3, [pc, #52]	; (8000e38 <HAL_MspInit+0x4c>)
 8000e04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000e06:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000e0a:	607b      	str	r3, [r7, #4]
 8000e0c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000e0e:	2300      	movs	r3, #0
 8000e10:	603b      	str	r3, [r7, #0]
 8000e12:	4b09      	ldr	r3, [pc, #36]	; (8000e38 <HAL_MspInit+0x4c>)
 8000e14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000e16:	4a08      	ldr	r2, [pc, #32]	; (8000e38 <HAL_MspInit+0x4c>)
 8000e18:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000e1c:	6413      	str	r3, [r2, #64]	; 0x40
 8000e1e:	4b06      	ldr	r3, [pc, #24]	; (8000e38 <HAL_MspInit+0x4c>)
 8000e20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000e22:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000e26:	603b      	str	r3, [r7, #0]
 8000e28:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000e2a:	bf00      	nop
 8000e2c:	370c      	adds	r7, #12
 8000e2e:	46bd      	mov	sp, r7
 8000e30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e34:	4770      	bx	lr
 8000e36:	bf00      	nop
 8000e38:	40023800 	.word	0x40023800

08000e3c <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8000e3c:	b580      	push	{r7, lr}
 8000e3e:	b08a      	sub	sp, #40	; 0x28
 8000e40:	af00      	add	r7, sp, #0
 8000e42:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e44:	f107 0314 	add.w	r3, r7, #20
 8000e48:	2200      	movs	r2, #0
 8000e4a:	601a      	str	r2, [r3, #0]
 8000e4c:	605a      	str	r2, [r3, #4]
 8000e4e:	609a      	str	r2, [r3, #8]
 8000e50:	60da      	str	r2, [r3, #12]
 8000e52:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8000e54:	687b      	ldr	r3, [r7, #4]
 8000e56:	681b      	ldr	r3, [r3, #0]
 8000e58:	4a17      	ldr	r2, [pc, #92]	; (8000eb8 <HAL_ADC_MspInit+0x7c>)
 8000e5a:	4293      	cmp	r3, r2
 8000e5c:	d127      	bne.n	8000eae <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8000e5e:	2300      	movs	r3, #0
 8000e60:	613b      	str	r3, [r7, #16]
 8000e62:	4b16      	ldr	r3, [pc, #88]	; (8000ebc <HAL_ADC_MspInit+0x80>)
 8000e64:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000e66:	4a15      	ldr	r2, [pc, #84]	; (8000ebc <HAL_ADC_MspInit+0x80>)
 8000e68:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000e6c:	6453      	str	r3, [r2, #68]	; 0x44
 8000e6e:	4b13      	ldr	r3, [pc, #76]	; (8000ebc <HAL_ADC_MspInit+0x80>)
 8000e70:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000e72:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000e76:	613b      	str	r3, [r7, #16]
 8000e78:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000e7a:	2300      	movs	r3, #0
 8000e7c:	60fb      	str	r3, [r7, #12]
 8000e7e:	4b0f      	ldr	r3, [pc, #60]	; (8000ebc <HAL_ADC_MspInit+0x80>)
 8000e80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e82:	4a0e      	ldr	r2, [pc, #56]	; (8000ebc <HAL_ADC_MspInit+0x80>)
 8000e84:	f043 0301 	orr.w	r3, r3, #1
 8000e88:	6313      	str	r3, [r2, #48]	; 0x30
 8000e8a:	4b0c      	ldr	r3, [pc, #48]	; (8000ebc <HAL_ADC_MspInit+0x80>)
 8000e8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e8e:	f003 0301 	and.w	r3, r3, #1
 8000e92:	60fb      	str	r3, [r7, #12]
 8000e94:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA0-WKUP     ------> ADC1_IN0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000e96:	2301      	movs	r3, #1
 8000e98:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000e9a:	2303      	movs	r3, #3
 8000e9c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e9e:	2300      	movs	r3, #0
 8000ea0:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000ea2:	f107 0314 	add.w	r3, r7, #20
 8000ea6:	4619      	mov	r1, r3
 8000ea8:	4805      	ldr	r0, [pc, #20]	; (8000ec0 <HAL_ADC_MspInit+0x84>)
 8000eaa:	f000 fe35 	bl	8001b18 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8000eae:	bf00      	nop
 8000eb0:	3728      	adds	r7, #40	; 0x28
 8000eb2:	46bd      	mov	sp, r7
 8000eb4:	bd80      	pop	{r7, pc}
 8000eb6:	bf00      	nop
 8000eb8:	40012000 	.word	0x40012000
 8000ebc:	40023800 	.word	0x40023800
 8000ec0:	40020000 	.word	0x40020000

08000ec4 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8000ec4:	b580      	push	{r7, lr}
 8000ec6:	b08a      	sub	sp, #40	; 0x28
 8000ec8:	af00      	add	r7, sp, #0
 8000eca:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000ecc:	f107 0314 	add.w	r3, r7, #20
 8000ed0:	2200      	movs	r2, #0
 8000ed2:	601a      	str	r2, [r3, #0]
 8000ed4:	605a      	str	r2, [r3, #4]
 8000ed6:	609a      	str	r2, [r3, #8]
 8000ed8:	60da      	str	r2, [r3, #12]
 8000eda:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 8000edc:	687b      	ldr	r3, [r7, #4]
 8000ede:	681b      	ldr	r3, [r3, #0]
 8000ee0:	4a19      	ldr	r2, [pc, #100]	; (8000f48 <HAL_SPI_MspInit+0x84>)
 8000ee2:	4293      	cmp	r3, r2
 8000ee4:	d12b      	bne.n	8000f3e <HAL_SPI_MspInit+0x7a>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8000ee6:	2300      	movs	r3, #0
 8000ee8:	613b      	str	r3, [r7, #16]
 8000eea:	4b18      	ldr	r3, [pc, #96]	; (8000f4c <HAL_SPI_MspInit+0x88>)
 8000eec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000eee:	4a17      	ldr	r2, [pc, #92]	; (8000f4c <HAL_SPI_MspInit+0x88>)
 8000ef0:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000ef4:	6453      	str	r3, [r2, #68]	; 0x44
 8000ef6:	4b15      	ldr	r3, [pc, #84]	; (8000f4c <HAL_SPI_MspInit+0x88>)
 8000ef8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000efa:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000efe:	613b      	str	r3, [r7, #16]
 8000f00:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000f02:	2300      	movs	r3, #0
 8000f04:	60fb      	str	r3, [r7, #12]
 8000f06:	4b11      	ldr	r3, [pc, #68]	; (8000f4c <HAL_SPI_MspInit+0x88>)
 8000f08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f0a:	4a10      	ldr	r2, [pc, #64]	; (8000f4c <HAL_SPI_MspInit+0x88>)
 8000f0c:	f043 0301 	orr.w	r3, r3, #1
 8000f10:	6313      	str	r3, [r2, #48]	; 0x30
 8000f12:	4b0e      	ldr	r3, [pc, #56]	; (8000f4c <HAL_SPI_MspInit+0x88>)
 8000f14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f16:	f003 0301 	and.w	r3, r3, #1
 8000f1a:	60fb      	str	r3, [r7, #12]
 8000f1c:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8000f1e:	23e0      	movs	r3, #224	; 0xe0
 8000f20:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f22:	2302      	movs	r3, #2
 8000f24:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f26:	2300      	movs	r3, #0
 8000f28:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f2a:	2303      	movs	r3, #3
 8000f2c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8000f2e:	2305      	movs	r3, #5
 8000f30:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f32:	f107 0314 	add.w	r3, r7, #20
 8000f36:	4619      	mov	r1, r3
 8000f38:	4805      	ldr	r0, [pc, #20]	; (8000f50 <HAL_SPI_MspInit+0x8c>)
 8000f3a:	f000 fded 	bl	8001b18 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 8000f3e:	bf00      	nop
 8000f40:	3728      	adds	r7, #40	; 0x28
 8000f42:	46bd      	mov	sp, r7
 8000f44:	bd80      	pop	{r7, pc}
 8000f46:	bf00      	nop
 8000f48:	40013000 	.word	0x40013000
 8000f4c:	40023800 	.word	0x40023800
 8000f50:	40020000 	.word	0x40020000

08000f54 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000f54:	b480      	push	{r7}
 8000f56:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000f58:	e7fe      	b.n	8000f58 <NMI_Handler+0x4>

08000f5a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000f5a:	b480      	push	{r7}
 8000f5c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000f5e:	e7fe      	b.n	8000f5e <HardFault_Handler+0x4>

08000f60 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000f60:	b480      	push	{r7}
 8000f62:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000f64:	e7fe      	b.n	8000f64 <MemManage_Handler+0x4>

08000f66 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000f66:	b480      	push	{r7}
 8000f68:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000f6a:	e7fe      	b.n	8000f6a <BusFault_Handler+0x4>

08000f6c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000f6c:	b480      	push	{r7}
 8000f6e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000f70:	e7fe      	b.n	8000f70 <UsageFault_Handler+0x4>

08000f72 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000f72:	b480      	push	{r7}
 8000f74:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000f76:	bf00      	nop
 8000f78:	46bd      	mov	sp, r7
 8000f7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f7e:	4770      	bx	lr

08000f80 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000f80:	b480      	push	{r7}
 8000f82:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000f84:	bf00      	nop
 8000f86:	46bd      	mov	sp, r7
 8000f88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f8c:	4770      	bx	lr

08000f8e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000f8e:	b480      	push	{r7}
 8000f90:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000f92:	bf00      	nop
 8000f94:	46bd      	mov	sp, r7
 8000f96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f9a:	4770      	bx	lr

08000f9c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000f9c:	b580      	push	{r7, lr}
 8000f9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000fa0:	f000 f890 	bl	80010c4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000fa4:	bf00      	nop
 8000fa6:	bd80      	pop	{r7, pc}

08000fa8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000fa8:	b480      	push	{r7}
 8000faa:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000fac:	4b06      	ldr	r3, [pc, #24]	; (8000fc8 <SystemInit+0x20>)
 8000fae:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000fb2:	4a05      	ldr	r2, [pc, #20]	; (8000fc8 <SystemInit+0x20>)
 8000fb4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000fb8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000fbc:	bf00      	nop
 8000fbe:	46bd      	mov	sp, r7
 8000fc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fc4:	4770      	bx	lr
 8000fc6:	bf00      	nop
 8000fc8:	e000ed00 	.word	0xe000ed00

08000fcc <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000fcc:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001004 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000fd0:	480d      	ldr	r0, [pc, #52]	; (8001008 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8000fd2:	490e      	ldr	r1, [pc, #56]	; (800100c <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8000fd4:	4a0e      	ldr	r2, [pc, #56]	; (8001010 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8000fd6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000fd8:	e002      	b.n	8000fe0 <LoopCopyDataInit>

08000fda <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000fda:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000fdc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000fde:	3304      	adds	r3, #4

08000fe0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000fe0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000fe2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000fe4:	d3f9      	bcc.n	8000fda <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000fe6:	4a0b      	ldr	r2, [pc, #44]	; (8001014 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8000fe8:	4c0b      	ldr	r4, [pc, #44]	; (8001018 <LoopFillZerobss+0x26>)
  movs r3, #0
 8000fea:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000fec:	e001      	b.n	8000ff2 <LoopFillZerobss>

08000fee <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000fee:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000ff0:	3204      	adds	r2, #4

08000ff2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000ff2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000ff4:	d3fb      	bcc.n	8000fee <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8000ff6:	f7ff ffd7 	bl	8000fa8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ffa:	f00f f811 	bl	8010020 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000ffe:	f7ff fd9b 	bl	8000b38 <main>
  bx  lr    
 8001002:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8001004:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001008:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800100c:	200001f8 	.word	0x200001f8
  ldr r2, =_sidata
 8001010:	08013014 	.word	0x08013014
  ldr r2, =_sbss
 8001014:	200001f8 	.word	0x200001f8
  ldr r4, =_ebss
 8001018:	20002e28 	.word	0x20002e28

0800101c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800101c:	e7fe      	b.n	800101c <ADC_IRQHandler>
	...

08001020 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001020:	b580      	push	{r7, lr}
 8001022:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8001024:	4b0e      	ldr	r3, [pc, #56]	; (8001060 <HAL_Init+0x40>)
 8001026:	681b      	ldr	r3, [r3, #0]
 8001028:	4a0d      	ldr	r2, [pc, #52]	; (8001060 <HAL_Init+0x40>)
 800102a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800102e:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8001030:	4b0b      	ldr	r3, [pc, #44]	; (8001060 <HAL_Init+0x40>)
 8001032:	681b      	ldr	r3, [r3, #0]
 8001034:	4a0a      	ldr	r2, [pc, #40]	; (8001060 <HAL_Init+0x40>)
 8001036:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800103a:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800103c:	4b08      	ldr	r3, [pc, #32]	; (8001060 <HAL_Init+0x40>)
 800103e:	681b      	ldr	r3, [r3, #0]
 8001040:	4a07      	ldr	r2, [pc, #28]	; (8001060 <HAL_Init+0x40>)
 8001042:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001046:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001048:	2003      	movs	r0, #3
 800104a:	f000 fd31 	bl	8001ab0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800104e:	200f      	movs	r0, #15
 8001050:	f000 f808 	bl	8001064 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8001054:	f7ff feca 	bl	8000dec <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8001058:	2300      	movs	r3, #0
}
 800105a:	4618      	mov	r0, r3
 800105c:	bd80      	pop	{r7, pc}
 800105e:	bf00      	nop
 8001060:	40023c00 	.word	0x40023c00

08001064 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001064:	b580      	push	{r7, lr}
 8001066:	b082      	sub	sp, #8
 8001068:	af00      	add	r7, sp, #0
 800106a:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800106c:	4b12      	ldr	r3, [pc, #72]	; (80010b8 <HAL_InitTick+0x54>)
 800106e:	681a      	ldr	r2, [r3, #0]
 8001070:	4b12      	ldr	r3, [pc, #72]	; (80010bc <HAL_InitTick+0x58>)
 8001072:	781b      	ldrb	r3, [r3, #0]
 8001074:	4619      	mov	r1, r3
 8001076:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800107a:	fbb3 f3f1 	udiv	r3, r3, r1
 800107e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001082:	4618      	mov	r0, r3
 8001084:	f000 fd3b 	bl	8001afe <HAL_SYSTICK_Config>
 8001088:	4603      	mov	r3, r0
 800108a:	2b00      	cmp	r3, #0
 800108c:	d001      	beq.n	8001092 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 800108e:	2301      	movs	r3, #1
 8001090:	e00e      	b.n	80010b0 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001092:	687b      	ldr	r3, [r7, #4]
 8001094:	2b0f      	cmp	r3, #15
 8001096:	d80a      	bhi.n	80010ae <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001098:	2200      	movs	r2, #0
 800109a:	6879      	ldr	r1, [r7, #4]
 800109c:	f04f 30ff 	mov.w	r0, #4294967295
 80010a0:	f000 fd11 	bl	8001ac6 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80010a4:	4a06      	ldr	r2, [pc, #24]	; (80010c0 <HAL_InitTick+0x5c>)
 80010a6:	687b      	ldr	r3, [r7, #4]
 80010a8:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80010aa:	2300      	movs	r3, #0
 80010ac:	e000      	b.n	80010b0 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 80010ae:	2301      	movs	r3, #1
}
 80010b0:	4618      	mov	r0, r3
 80010b2:	3708      	adds	r7, #8
 80010b4:	46bd      	mov	sp, r7
 80010b6:	bd80      	pop	{r7, pc}
 80010b8:	20000000 	.word	0x20000000
 80010bc:	20000008 	.word	0x20000008
 80010c0:	20000004 	.word	0x20000004

080010c4 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80010c4:	b480      	push	{r7}
 80010c6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80010c8:	4b06      	ldr	r3, [pc, #24]	; (80010e4 <HAL_IncTick+0x20>)
 80010ca:	781b      	ldrb	r3, [r3, #0]
 80010cc:	461a      	mov	r2, r3
 80010ce:	4b06      	ldr	r3, [pc, #24]	; (80010e8 <HAL_IncTick+0x24>)
 80010d0:	681b      	ldr	r3, [r3, #0]
 80010d2:	4413      	add	r3, r2
 80010d4:	4a04      	ldr	r2, [pc, #16]	; (80010e8 <HAL_IncTick+0x24>)
 80010d6:	6013      	str	r3, [r2, #0]
}
 80010d8:	bf00      	nop
 80010da:	46bd      	mov	sp, r7
 80010dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e0:	4770      	bx	lr
 80010e2:	bf00      	nop
 80010e4:	20000008 	.word	0x20000008
 80010e8:	20002ab8 	.word	0x20002ab8

080010ec <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80010ec:	b480      	push	{r7}
 80010ee:	af00      	add	r7, sp, #0
  return uwTick;
 80010f0:	4b03      	ldr	r3, [pc, #12]	; (8001100 <HAL_GetTick+0x14>)
 80010f2:	681b      	ldr	r3, [r3, #0]
}
 80010f4:	4618      	mov	r0, r3
 80010f6:	46bd      	mov	sp, r7
 80010f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010fc:	4770      	bx	lr
 80010fe:	bf00      	nop
 8001100:	20002ab8 	.word	0x20002ab8

08001104 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001104:	b580      	push	{r7, lr}
 8001106:	b084      	sub	sp, #16
 8001108:	af00      	add	r7, sp, #0
 800110a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 800110c:	f7ff ffee 	bl	80010ec <HAL_GetTick>
 8001110:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8001112:	687b      	ldr	r3, [r7, #4]
 8001114:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8001116:	68fb      	ldr	r3, [r7, #12]
 8001118:	f1b3 3fff 	cmp.w	r3, #4294967295
 800111c:	d005      	beq.n	800112a <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 800111e:	4b0a      	ldr	r3, [pc, #40]	; (8001148 <HAL_Delay+0x44>)
 8001120:	781b      	ldrb	r3, [r3, #0]
 8001122:	461a      	mov	r2, r3
 8001124:	68fb      	ldr	r3, [r7, #12]
 8001126:	4413      	add	r3, r2
 8001128:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 800112a:	bf00      	nop
 800112c:	f7ff ffde 	bl	80010ec <HAL_GetTick>
 8001130:	4602      	mov	r2, r0
 8001132:	68bb      	ldr	r3, [r7, #8]
 8001134:	1ad3      	subs	r3, r2, r3
 8001136:	68fa      	ldr	r2, [r7, #12]
 8001138:	429a      	cmp	r2, r3
 800113a:	d8f7      	bhi.n	800112c <HAL_Delay+0x28>
  {
  }
}
 800113c:	bf00      	nop
 800113e:	bf00      	nop
 8001140:	3710      	adds	r7, #16
 8001142:	46bd      	mov	sp, r7
 8001144:	bd80      	pop	{r7, pc}
 8001146:	bf00      	nop
 8001148:	20000008 	.word	0x20000008

0800114c <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 800114c:	b580      	push	{r7, lr}
 800114e:	b084      	sub	sp, #16
 8001150:	af00      	add	r7, sp, #0
 8001152:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8001154:	2300      	movs	r3, #0
 8001156:	73fb      	strb	r3, [r7, #15]
  
  /* Check ADC handle */
  if(hadc == NULL)
 8001158:	687b      	ldr	r3, [r7, #4]
 800115a:	2b00      	cmp	r3, #0
 800115c:	d101      	bne.n	8001162 <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 800115e:	2301      	movs	r3, #1
 8001160:	e033      	b.n	80011ca <HAL_ADC_Init+0x7e>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001166:	2b00      	cmp	r3, #0
 8001168:	d109      	bne.n	800117e <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 800116a:	6878      	ldr	r0, [r7, #4]
 800116c:	f7ff fe66 	bl	8000e3c <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8001170:	687b      	ldr	r3, [r7, #4]
 8001172:	2200      	movs	r2, #0
 8001174:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8001176:	687b      	ldr	r3, [r7, #4]
 8001178:	2200      	movs	r2, #0
 800117a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 800117e:	687b      	ldr	r3, [r7, #4]
 8001180:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001182:	f003 0310 	and.w	r3, r3, #16
 8001186:	2b00      	cmp	r3, #0
 8001188:	d118      	bne.n	80011bc <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 800118a:	687b      	ldr	r3, [r7, #4]
 800118c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800118e:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8001192:	f023 0302 	bic.w	r3, r3, #2
 8001196:	f043 0202 	orr.w	r2, r3, #2
 800119a:	687b      	ldr	r3, [r7, #4]
 800119c:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);
    
    /* Set ADC parameters */
    ADC_Init(hadc);
 800119e:	6878      	ldr	r0, [r7, #4]
 80011a0:	f000 fad8 	bl	8001754 <ADC_Init>
    
    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 80011a4:	687b      	ldr	r3, [r7, #4]
 80011a6:	2200      	movs	r2, #0
 80011a8:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 80011aa:	687b      	ldr	r3, [r7, #4]
 80011ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011ae:	f023 0303 	bic.w	r3, r3, #3
 80011b2:	f043 0201 	orr.w	r2, r3, #1
 80011b6:	687b      	ldr	r3, [r7, #4]
 80011b8:	641a      	str	r2, [r3, #64]	; 0x40
 80011ba:	e001      	b.n	80011c0 <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 80011bc:	2301      	movs	r3, #1
 80011be:	73fb      	strb	r3, [r7, #15]
  }
  
  /* Release Lock */
  __HAL_UNLOCK(hadc);
 80011c0:	687b      	ldr	r3, [r7, #4]
 80011c2:	2200      	movs	r2, #0
 80011c4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Return function status */
  return tmp_hal_status;
 80011c8:	7bfb      	ldrb	r3, [r7, #15]
}
 80011ca:	4618      	mov	r0, r3
 80011cc:	3710      	adds	r7, #16
 80011ce:	46bd      	mov	sp, r7
 80011d0:	bd80      	pop	{r7, pc}
	...

080011d4 <HAL_ADC_Start>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
{
 80011d4:	b480      	push	{r7}
 80011d6:	b085      	sub	sp, #20
 80011d8:	af00      	add	r7, sp, #0
 80011da:	6078      	str	r0, [r7, #4]
  __IO uint32_t counter = 0U;
 80011dc:	2300      	movs	r3, #0
 80011de:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
  
  /* Process locked */
  __HAL_LOCK(hadc);
 80011e0:	687b      	ldr	r3, [r7, #4]
 80011e2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80011e6:	2b01      	cmp	r3, #1
 80011e8:	d101      	bne.n	80011ee <HAL_ADC_Start+0x1a>
 80011ea:	2302      	movs	r3, #2
 80011ec:	e0b2      	b.n	8001354 <HAL_ADC_Start+0x180>
 80011ee:	687b      	ldr	r3, [r7, #4]
 80011f0:	2201      	movs	r2, #1
 80011f2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during 
  Tstab time the ADC's stabilization */
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 80011f6:	687b      	ldr	r3, [r7, #4]
 80011f8:	681b      	ldr	r3, [r3, #0]
 80011fa:	689b      	ldr	r3, [r3, #8]
 80011fc:	f003 0301 	and.w	r3, r3, #1
 8001200:	2b01      	cmp	r3, #1
 8001202:	d018      	beq.n	8001236 <HAL_ADC_Start+0x62>
  {  
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8001204:	687b      	ldr	r3, [r7, #4]
 8001206:	681b      	ldr	r3, [r3, #0]
 8001208:	689a      	ldr	r2, [r3, #8]
 800120a:	687b      	ldr	r3, [r7, #4]
 800120c:	681b      	ldr	r3, [r3, #0]
 800120e:	f042 0201 	orr.w	r2, r2, #1
 8001212:	609a      	str	r2, [r3, #8]
    
    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8001214:	4b52      	ldr	r3, [pc, #328]	; (8001360 <HAL_ADC_Start+0x18c>)
 8001216:	681b      	ldr	r3, [r3, #0]
 8001218:	4a52      	ldr	r2, [pc, #328]	; (8001364 <HAL_ADC_Start+0x190>)
 800121a:	fba2 2303 	umull	r2, r3, r2, r3
 800121e:	0c9a      	lsrs	r2, r3, #18
 8001220:	4613      	mov	r3, r2
 8001222:	005b      	lsls	r3, r3, #1
 8001224:	4413      	add	r3, r2
 8001226:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8001228:	e002      	b.n	8001230 <HAL_ADC_Start+0x5c>
    {
      counter--;
 800122a:	68bb      	ldr	r3, [r7, #8]
 800122c:	3b01      	subs	r3, #1
 800122e:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8001230:	68bb      	ldr	r3, [r7, #8]
 8001232:	2b00      	cmp	r3, #0
 8001234:	d1f9      	bne.n	800122a <HAL_ADC_Start+0x56>
    }
  }
  
  /* Start conversion if ADC is effectively enabled */
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8001236:	687b      	ldr	r3, [r7, #4]
 8001238:	681b      	ldr	r3, [r3, #0]
 800123a:	689b      	ldr	r3, [r3, #8]
 800123c:	f003 0301 	and.w	r3, r3, #1
 8001240:	2b01      	cmp	r3, #1
 8001242:	d17a      	bne.n	800133a <HAL_ADC_Start+0x166>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8001244:	687b      	ldr	r3, [r7, #4]
 8001246:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001248:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800124c:	f023 0301 	bic.w	r3, r3, #1
 8001250:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8001254:	687b      	ldr	r3, [r7, #4]
 8001256:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);
    
    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8001258:	687b      	ldr	r3, [r7, #4]
 800125a:	681b      	ldr	r3, [r3, #0]
 800125c:	685b      	ldr	r3, [r3, #4]
 800125e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001262:	2b00      	cmp	r3, #0
 8001264:	d007      	beq.n	8001276 <HAL_ADC_Start+0xa2>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8001266:	687b      	ldr	r3, [r7, #4]
 8001268:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800126a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800126e:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8001272:	687b      	ldr	r3, [r7, #4]
 8001274:	641a      	str	r2, [r3, #64]	; 0x40
    }
    
    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8001276:	687b      	ldr	r3, [r7, #4]
 8001278:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800127a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800127e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001282:	d106      	bne.n	8001292 <HAL_ADC_Start+0xbe>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8001284:	687b      	ldr	r3, [r7, #4]
 8001286:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001288:	f023 0206 	bic.w	r2, r3, #6
 800128c:	687b      	ldr	r3, [r7, #4]
 800128e:	645a      	str	r2, [r3, #68]	; 0x44
 8001290:	e002      	b.n	8001298 <HAL_ADC_Start+0xc4>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8001292:	687b      	ldr	r3, [r7, #4]
 8001294:	2200      	movs	r2, #0
 8001296:	645a      	str	r2, [r3, #68]	; 0x44
    } 

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8001298:	687b      	ldr	r3, [r7, #4]
 800129a:	2200      	movs	r2, #0
 800129c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 80012a0:	4b31      	ldr	r3, [pc, #196]	; (8001368 <HAL_ADC_Start+0x194>)
 80012a2:	60fb      	str	r3, [r7, #12]

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 80012a4:	687b      	ldr	r3, [r7, #4]
 80012a6:	681b      	ldr	r3, [r3, #0]
 80012a8:	f06f 0222 	mvn.w	r2, #34	; 0x22
 80012ac:	601a      	str	r2, [r3, #0]
    
    /* Check if Multimode enabled */
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 80012ae:	68fb      	ldr	r3, [r7, #12]
 80012b0:	685b      	ldr	r3, [r3, #4]
 80012b2:	f003 031f 	and.w	r3, r3, #31
 80012b6:	2b00      	cmp	r3, #0
 80012b8:	d12a      	bne.n	8001310 <HAL_ADC_Start+0x13c>
    {
#if defined(ADC2) && defined(ADC3)
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 80012ba:	687b      	ldr	r3, [r7, #4]
 80012bc:	681b      	ldr	r3, [r3, #0]
 80012be:	4a2b      	ldr	r2, [pc, #172]	; (800136c <HAL_ADC_Start+0x198>)
 80012c0:	4293      	cmp	r3, r2
 80012c2:	d015      	beq.n	80012f0 <HAL_ADC_Start+0x11c>
 80012c4:	687b      	ldr	r3, [r7, #4]
 80012c6:	681b      	ldr	r3, [r3, #0]
 80012c8:	4a29      	ldr	r2, [pc, #164]	; (8001370 <HAL_ADC_Start+0x19c>)
 80012ca:	4293      	cmp	r3, r2
 80012cc:	d105      	bne.n	80012da <HAL_ADC_Start+0x106>
 80012ce:	4b26      	ldr	r3, [pc, #152]	; (8001368 <HAL_ADC_Start+0x194>)
 80012d0:	685b      	ldr	r3, [r3, #4]
 80012d2:	f003 031f 	and.w	r3, r3, #31
 80012d6:	2b00      	cmp	r3, #0
 80012d8:	d00a      	beq.n	80012f0 <HAL_ADC_Start+0x11c>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 80012da:	687b      	ldr	r3, [r7, #4]
 80012dc:	681b      	ldr	r3, [r3, #0]
 80012de:	4a25      	ldr	r2, [pc, #148]	; (8001374 <HAL_ADC_Start+0x1a0>)
 80012e0:	4293      	cmp	r3, r2
 80012e2:	d136      	bne.n	8001352 <HAL_ADC_Start+0x17e>
 80012e4:	4b20      	ldr	r3, [pc, #128]	; (8001368 <HAL_ADC_Start+0x194>)
 80012e6:	685b      	ldr	r3, [r3, #4]
 80012e8:	f003 0310 	and.w	r3, r3, #16
 80012ec:	2b00      	cmp	r3, #0
 80012ee:	d130      	bne.n	8001352 <HAL_ADC_Start+0x17e>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 80012f0:	687b      	ldr	r3, [r7, #4]
 80012f2:	681b      	ldr	r3, [r3, #0]
 80012f4:	689b      	ldr	r3, [r3, #8]
 80012f6:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80012fa:	2b00      	cmp	r3, #0
 80012fc:	d129      	bne.n	8001352 <HAL_ADC_Start+0x17e>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 80012fe:	687b      	ldr	r3, [r7, #4]
 8001300:	681b      	ldr	r3, [r3, #0]
 8001302:	689a      	ldr	r2, [r3, #8]
 8001304:	687b      	ldr	r3, [r7, #4]
 8001306:	681b      	ldr	r3, [r3, #0]
 8001308:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800130c:	609a      	str	r2, [r3, #8]
 800130e:	e020      	b.n	8001352 <HAL_ADC_Start+0x17e>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8001310:	687b      	ldr	r3, [r7, #4]
 8001312:	681b      	ldr	r3, [r3, #0]
 8001314:	4a15      	ldr	r2, [pc, #84]	; (800136c <HAL_ADC_Start+0x198>)
 8001316:	4293      	cmp	r3, r2
 8001318:	d11b      	bne.n	8001352 <HAL_ADC_Start+0x17e>
 800131a:	687b      	ldr	r3, [r7, #4]
 800131c:	681b      	ldr	r3, [r3, #0]
 800131e:	689b      	ldr	r3, [r3, #8]
 8001320:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001324:	2b00      	cmp	r3, #0
 8001326:	d114      	bne.n	8001352 <HAL_ADC_Start+0x17e>
      {
        /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8001328:	687b      	ldr	r3, [r7, #4]
 800132a:	681b      	ldr	r3, [r3, #0]
 800132c:	689a      	ldr	r2, [r3, #8]
 800132e:	687b      	ldr	r3, [r7, #4]
 8001330:	681b      	ldr	r3, [r3, #0]
 8001332:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8001336:	609a      	str	r2, [r3, #8]
 8001338:	e00b      	b.n	8001352 <HAL_ADC_Start+0x17e>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 800133a:	687b      	ldr	r3, [r7, #4]
 800133c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800133e:	f043 0210 	orr.w	r2, r3, #16
 8001342:	687b      	ldr	r3, [r7, #4]
 8001344:	641a      	str	r2, [r3, #64]	; 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8001346:	687b      	ldr	r3, [r7, #4]
 8001348:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800134a:	f043 0201 	orr.w	r2, r3, #1
 800134e:	687b      	ldr	r3, [r7, #4]
 8001350:	645a      	str	r2, [r3, #68]	; 0x44
  }
  
  /* Return function status */
  return HAL_OK;
 8001352:	2300      	movs	r3, #0
}
 8001354:	4618      	mov	r0, r3
 8001356:	3714      	adds	r7, #20
 8001358:	46bd      	mov	sp, r7
 800135a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800135e:	4770      	bx	lr
 8001360:	20000000 	.word	0x20000000
 8001364:	431bde83 	.word	0x431bde83
 8001368:	40012300 	.word	0x40012300
 800136c:	40012000 	.word	0x40012000
 8001370:	40012100 	.word	0x40012100
 8001374:	40012200 	.word	0x40012200

08001378 <HAL_ADC_Stop>:
  *         the configuration information for the specified ADC.
  *
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
{
 8001378:	b480      	push	{r7}
 800137a:	b083      	sub	sp, #12
 800137c:	af00      	add	r7, sp, #0
 800137e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8001380:	687b      	ldr	r3, [r7, #4]
 8001382:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001386:	2b01      	cmp	r3, #1
 8001388:	d101      	bne.n	800138e <HAL_ADC_Stop+0x16>
 800138a:	2302      	movs	r3, #2
 800138c:	e021      	b.n	80013d2 <HAL_ADC_Stop+0x5a>
 800138e:	687b      	ldr	r3, [r7, #4]
 8001390:	2201      	movs	r2, #1
 8001392:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Stop potential conversion on going, on regular and injected groups */
  /* Disable ADC peripheral */
  __HAL_ADC_DISABLE(hadc);
 8001396:	687b      	ldr	r3, [r7, #4]
 8001398:	681b      	ldr	r3, [r3, #0]
 800139a:	689a      	ldr	r2, [r3, #8]
 800139c:	687b      	ldr	r3, [r7, #4]
 800139e:	681b      	ldr	r3, [r3, #0]
 80013a0:	f022 0201 	bic.w	r2, r2, #1
 80013a4:	609a      	str	r2, [r3, #8]
  
  /* Check if ADC is effectively disabled */
  if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 80013a6:	687b      	ldr	r3, [r7, #4]
 80013a8:	681b      	ldr	r3, [r3, #0]
 80013aa:	689b      	ldr	r3, [r3, #8]
 80013ac:	f003 0301 	and.w	r3, r3, #1
 80013b0:	2b00      	cmp	r3, #0
 80013b2:	d109      	bne.n	80013c8 <HAL_ADC_Stop+0x50>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 80013b4:	687b      	ldr	r3, [r7, #4]
 80013b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013b8:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 80013bc:	f023 0301 	bic.w	r3, r3, #1
 80013c0:	f043 0201 	orr.w	r2, r3, #1
 80013c4:	687b      	ldr	r3, [r7, #4]
 80013c6:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_READY);
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80013c8:	687b      	ldr	r3, [r7, #4]
 80013ca:	2200      	movs	r2, #0
 80013cc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 80013d0:	2300      	movs	r3, #0
}
 80013d2:	4618      	mov	r0, r3
 80013d4:	370c      	adds	r7, #12
 80013d6:	46bd      	mov	sp, r7
 80013d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013dc:	4770      	bx	lr

080013de <HAL_ADC_PollForConversion>:
  *         the configuration information for the specified ADC.
  * @param  Timeout Timeout value in millisecond.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
{
 80013de:	b580      	push	{r7, lr}
 80013e0:	b084      	sub	sp, #16
 80013e2:	af00      	add	r7, sp, #0
 80013e4:	6078      	str	r0, [r7, #4]
 80013e6:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0U;
 80013e8:	2300      	movs	r3, #0
 80013ea:	60fb      	str	r3, [r7, #12]
  /* each conversion:                                                       */
  /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
  /* several ranks and polling for end of each conversion.                  */
  /* For code simplicity sake, this particular case is generalized to       */
  /* ADC configured in DMA mode and polling for end of each conversion.     */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80013ec:	687b      	ldr	r3, [r7, #4]
 80013ee:	681b      	ldr	r3, [r3, #0]
 80013f0:	689b      	ldr	r3, [r3, #8]
 80013f2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80013f6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80013fa:	d113      	bne.n	8001424 <HAL_ADC_PollForConversion+0x46>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 80013fc:	687b      	ldr	r3, [r7, #4]
 80013fe:	681b      	ldr	r3, [r3, #0]
 8001400:	689b      	ldr	r3, [r3, #8]
 8001402:	f403 7380 	and.w	r3, r3, #256	; 0x100
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8001406:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800140a:	d10b      	bne.n	8001424 <HAL_ADC_PollForConversion+0x46>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 800140c:	687b      	ldr	r3, [r7, #4]
 800140e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001410:	f043 0220 	orr.w	r2, r3, #32
 8001414:	687b      	ldr	r3, [r7, #4]
 8001416:	641a      	str	r2, [r3, #64]	; 0x40
    
    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8001418:	687b      	ldr	r3, [r7, #4]
 800141a:	2200      	movs	r2, #0
 800141c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
    return HAL_ERROR;
 8001420:	2301      	movs	r3, #1
 8001422:	e063      	b.n	80014ec <HAL_ADC_PollForConversion+0x10e>
  }

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8001424:	f7ff fe62 	bl	80010ec <HAL_GetTick>
 8001428:	60f8      	str	r0, [r7, #12]

  /* Check End of conversion flag */
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 800142a:	e021      	b.n	8001470 <HAL_ADC_PollForConversion+0x92>
  {
    /* Check if timeout is disabled (set to infinite wait) */
    if(Timeout != HAL_MAX_DELAY)
 800142c:	683b      	ldr	r3, [r7, #0]
 800142e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001432:	d01d      	beq.n	8001470 <HAL_ADC_PollForConversion+0x92>
    {
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8001434:	683b      	ldr	r3, [r7, #0]
 8001436:	2b00      	cmp	r3, #0
 8001438:	d007      	beq.n	800144a <HAL_ADC_PollForConversion+0x6c>
 800143a:	f7ff fe57 	bl	80010ec <HAL_GetTick>
 800143e:	4602      	mov	r2, r0
 8001440:	68fb      	ldr	r3, [r7, #12]
 8001442:	1ad3      	subs	r3, r2, r3
 8001444:	683a      	ldr	r2, [r7, #0]
 8001446:	429a      	cmp	r2, r3
 8001448:	d212      	bcs.n	8001470 <HAL_ADC_PollForConversion+0x92>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 800144a:	687b      	ldr	r3, [r7, #4]
 800144c:	681b      	ldr	r3, [r3, #0]
 800144e:	681b      	ldr	r3, [r3, #0]
 8001450:	f003 0302 	and.w	r3, r3, #2
 8001454:	2b02      	cmp	r3, #2
 8001456:	d00b      	beq.n	8001470 <HAL_ADC_PollForConversion+0x92>
        {
          /* Update ADC state machine to timeout */
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8001458:	687b      	ldr	r3, [r7, #4]
 800145a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800145c:	f043 0204 	orr.w	r2, r3, #4
 8001460:	687b      	ldr	r3, [r7, #4]
 8001462:	641a      	str	r2, [r3, #64]	; 0x40
          
          /* Process unlocked */
          __HAL_UNLOCK(hadc);
 8001464:	687b      	ldr	r3, [r7, #4]
 8001466:	2200      	movs	r2, #0
 8001468:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
          
          return HAL_TIMEOUT;
 800146c:	2303      	movs	r3, #3
 800146e:	e03d      	b.n	80014ec <HAL_ADC_PollForConversion+0x10e>
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8001470:	687b      	ldr	r3, [r7, #4]
 8001472:	681b      	ldr	r3, [r3, #0]
 8001474:	681b      	ldr	r3, [r3, #0]
 8001476:	f003 0302 	and.w	r3, r3, #2
 800147a:	2b02      	cmp	r3, #2
 800147c:	d1d6      	bne.n	800142c <HAL_ADC_PollForConversion+0x4e>
      }
    }
  }
  
  /* Clear regular group conversion flag */
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 800147e:	687b      	ldr	r3, [r7, #4]
 8001480:	681b      	ldr	r3, [r3, #0]
 8001482:	f06f 0212 	mvn.w	r2, #18
 8001486:	601a      	str	r2, [r3, #0]
  
  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8001488:	687b      	ldr	r3, [r7, #4]
 800148a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800148c:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8001490:	687b      	ldr	r3, [r7, #4]
 8001492:	641a      	str	r2, [r3, #64]	; 0x40
  /* by external trigger, continuous mode or scan sequence on going.          */
  /* Note: On STM32F4, there is no independent flag of end of sequence.       */
  /*       The test of scan sequence on going is done either with scan        */
  /*       sequence disabled or with end of conversion flag set to            */
  /*       of end of sequence.                                                */
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8001494:	687b      	ldr	r3, [r7, #4]
 8001496:	681b      	ldr	r3, [r3, #0]
 8001498:	689b      	ldr	r3, [r3, #8]
 800149a:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800149e:	2b00      	cmp	r3, #0
 80014a0:	d123      	bne.n	80014ea <HAL_ADC_PollForConversion+0x10c>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 80014a2:	687b      	ldr	r3, [r7, #4]
 80014a4:	7e1b      	ldrb	r3, [r3, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80014a6:	2b00      	cmp	r3, #0
 80014a8:	d11f      	bne.n	80014ea <HAL_ADC_PollForConversion+0x10c>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 80014aa:	687b      	ldr	r3, [r7, #4]
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80014b0:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	d006      	beq.n	80014c6 <HAL_ADC_PollForConversion+0xe8>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 80014b8:	687b      	ldr	r3, [r7, #4]
 80014ba:	681b      	ldr	r3, [r3, #0]
 80014bc:	689b      	ldr	r3, [r3, #8]
 80014be:	f403 6380 	and.w	r3, r3, #1024	; 0x400
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 80014c2:	2b00      	cmp	r3, #0
 80014c4:	d111      	bne.n	80014ea <HAL_ADC_PollForConversion+0x10c>
  {
    /* Set ADC state */
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 80014c6:	687b      	ldr	r3, [r7, #4]
 80014c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80014ca:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80014ce:	687b      	ldr	r3, [r7, #4]
 80014d0:	641a      	str	r2, [r3, #64]	; 0x40
    
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 80014d2:	687b      	ldr	r3, [r7, #4]
 80014d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80014d6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80014da:	2b00      	cmp	r3, #0
 80014dc:	d105      	bne.n	80014ea <HAL_ADC_PollForConversion+0x10c>
    { 
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 80014de:	687b      	ldr	r3, [r7, #4]
 80014e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80014e2:	f043 0201 	orr.w	r2, r3, #1
 80014e6:	687b      	ldr	r3, [r7, #4]
 80014e8:	641a      	str	r2, [r3, #64]	; 0x40
    }
  }
  
  /* Return ADC state */
  return HAL_OK;
 80014ea:	2300      	movs	r3, #0
}
 80014ec:	4618      	mov	r0, r3
 80014ee:	3710      	adds	r7, #16
 80014f0:	46bd      	mov	sp, r7
 80014f2:	bd80      	pop	{r7, pc}

080014f4 <HAL_ADC_GetValue>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval Converted value
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
{       
 80014f4:	b480      	push	{r7}
 80014f6:	b083      	sub	sp, #12
 80014f8:	af00      	add	r7, sp, #0
 80014fa:	6078      	str	r0, [r7, #4]
  /* Return the selected ADC converted value */ 
  return hadc->Instance->DR;
 80014fc:	687b      	ldr	r3, [r7, #4]
 80014fe:	681b      	ldr	r3, [r3, #0]
 8001500:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 8001502:	4618      	mov	r0, r3
 8001504:	370c      	adds	r7, #12
 8001506:	46bd      	mov	sp, r7
 8001508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800150c:	4770      	bx	lr
	...

08001510 <HAL_ADC_ConfigChannel>:
  *         the configuration information for the specified ADC.
  * @param  sConfig ADC configuration structure. 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 8001510:	b480      	push	{r7}
 8001512:	b085      	sub	sp, #20
 8001514:	af00      	add	r7, sp, #0
 8001516:	6078      	str	r0, [r7, #4]
 8001518:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 800151a:	2300      	movs	r3, #0
 800151c:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 800151e:	687b      	ldr	r3, [r7, #4]
 8001520:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001524:	2b01      	cmp	r3, #1
 8001526:	d101      	bne.n	800152c <HAL_ADC_ConfigChannel+0x1c>
 8001528:	2302      	movs	r3, #2
 800152a:	e105      	b.n	8001738 <HAL_ADC_ConfigChannel+0x228>
 800152c:	687b      	ldr	r3, [r7, #4]
 800152e:	2201      	movs	r2, #1
 8001530:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 8001534:	683b      	ldr	r3, [r7, #0]
 8001536:	681b      	ldr	r3, [r3, #0]
 8001538:	2b09      	cmp	r3, #9
 800153a:	d925      	bls.n	8001588 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800153c:	687b      	ldr	r3, [r7, #4]
 800153e:	681b      	ldr	r3, [r3, #0]
 8001540:	68d9      	ldr	r1, [r3, #12]
 8001542:	683b      	ldr	r3, [r7, #0]
 8001544:	681b      	ldr	r3, [r3, #0]
 8001546:	b29b      	uxth	r3, r3
 8001548:	461a      	mov	r2, r3
 800154a:	4613      	mov	r3, r2
 800154c:	005b      	lsls	r3, r3, #1
 800154e:	4413      	add	r3, r2
 8001550:	3b1e      	subs	r3, #30
 8001552:	2207      	movs	r2, #7
 8001554:	fa02 f303 	lsl.w	r3, r2, r3
 8001558:	43da      	mvns	r2, r3
 800155a:	687b      	ldr	r3, [r7, #4]
 800155c:	681b      	ldr	r3, [r3, #0]
 800155e:	400a      	ands	r2, r1
 8001560:	60da      	str	r2, [r3, #12]
    
    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8001562:	687b      	ldr	r3, [r7, #4]
 8001564:	681b      	ldr	r3, [r3, #0]
 8001566:	68d9      	ldr	r1, [r3, #12]
 8001568:	683b      	ldr	r3, [r7, #0]
 800156a:	689a      	ldr	r2, [r3, #8]
 800156c:	683b      	ldr	r3, [r7, #0]
 800156e:	681b      	ldr	r3, [r3, #0]
 8001570:	b29b      	uxth	r3, r3
 8001572:	4618      	mov	r0, r3
 8001574:	4603      	mov	r3, r0
 8001576:	005b      	lsls	r3, r3, #1
 8001578:	4403      	add	r3, r0
 800157a:	3b1e      	subs	r3, #30
 800157c:	409a      	lsls	r2, r3
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	681b      	ldr	r3, [r3, #0]
 8001582:	430a      	orrs	r2, r1
 8001584:	60da      	str	r2, [r3, #12]
 8001586:	e022      	b.n	80015ce <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8001588:	687b      	ldr	r3, [r7, #4]
 800158a:	681b      	ldr	r3, [r3, #0]
 800158c:	6919      	ldr	r1, [r3, #16]
 800158e:	683b      	ldr	r3, [r7, #0]
 8001590:	681b      	ldr	r3, [r3, #0]
 8001592:	b29b      	uxth	r3, r3
 8001594:	461a      	mov	r2, r3
 8001596:	4613      	mov	r3, r2
 8001598:	005b      	lsls	r3, r3, #1
 800159a:	4413      	add	r3, r2
 800159c:	2207      	movs	r2, #7
 800159e:	fa02 f303 	lsl.w	r3, r2, r3
 80015a2:	43da      	mvns	r2, r3
 80015a4:	687b      	ldr	r3, [r7, #4]
 80015a6:	681b      	ldr	r3, [r3, #0]
 80015a8:	400a      	ands	r2, r1
 80015aa:	611a      	str	r2, [r3, #16]
    
    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 80015ac:	687b      	ldr	r3, [r7, #4]
 80015ae:	681b      	ldr	r3, [r3, #0]
 80015b0:	6919      	ldr	r1, [r3, #16]
 80015b2:	683b      	ldr	r3, [r7, #0]
 80015b4:	689a      	ldr	r2, [r3, #8]
 80015b6:	683b      	ldr	r3, [r7, #0]
 80015b8:	681b      	ldr	r3, [r3, #0]
 80015ba:	b29b      	uxth	r3, r3
 80015bc:	4618      	mov	r0, r3
 80015be:	4603      	mov	r3, r0
 80015c0:	005b      	lsls	r3, r3, #1
 80015c2:	4403      	add	r3, r0
 80015c4:	409a      	lsls	r2, r3
 80015c6:	687b      	ldr	r3, [r7, #4]
 80015c8:	681b      	ldr	r3, [r3, #0]
 80015ca:	430a      	orrs	r2, r1
 80015cc:	611a      	str	r2, [r3, #16]
  }
  
  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 80015ce:	683b      	ldr	r3, [r7, #0]
 80015d0:	685b      	ldr	r3, [r3, #4]
 80015d2:	2b06      	cmp	r3, #6
 80015d4:	d824      	bhi.n	8001620 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80015d6:	687b      	ldr	r3, [r7, #4]
 80015d8:	681b      	ldr	r3, [r3, #0]
 80015da:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80015dc:	683b      	ldr	r3, [r7, #0]
 80015de:	685a      	ldr	r2, [r3, #4]
 80015e0:	4613      	mov	r3, r2
 80015e2:	009b      	lsls	r3, r3, #2
 80015e4:	4413      	add	r3, r2
 80015e6:	3b05      	subs	r3, #5
 80015e8:	221f      	movs	r2, #31
 80015ea:	fa02 f303 	lsl.w	r3, r2, r3
 80015ee:	43da      	mvns	r2, r3
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	681b      	ldr	r3, [r3, #0]
 80015f4:	400a      	ands	r2, r1
 80015f6:	635a      	str	r2, [r3, #52]	; 0x34
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80015f8:	687b      	ldr	r3, [r7, #4]
 80015fa:	681b      	ldr	r3, [r3, #0]
 80015fc:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80015fe:	683b      	ldr	r3, [r7, #0]
 8001600:	681b      	ldr	r3, [r3, #0]
 8001602:	b29b      	uxth	r3, r3
 8001604:	4618      	mov	r0, r3
 8001606:	683b      	ldr	r3, [r7, #0]
 8001608:	685a      	ldr	r2, [r3, #4]
 800160a:	4613      	mov	r3, r2
 800160c:	009b      	lsls	r3, r3, #2
 800160e:	4413      	add	r3, r2
 8001610:	3b05      	subs	r3, #5
 8001612:	fa00 f203 	lsl.w	r2, r0, r3
 8001616:	687b      	ldr	r3, [r7, #4]
 8001618:	681b      	ldr	r3, [r3, #0]
 800161a:	430a      	orrs	r2, r1
 800161c:	635a      	str	r2, [r3, #52]	; 0x34
 800161e:	e04c      	b.n	80016ba <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 8001620:	683b      	ldr	r3, [r7, #0]
 8001622:	685b      	ldr	r3, [r3, #4]
 8001624:	2b0c      	cmp	r3, #12
 8001626:	d824      	bhi.n	8001672 <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8001628:	687b      	ldr	r3, [r7, #4]
 800162a:	681b      	ldr	r3, [r3, #0]
 800162c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800162e:	683b      	ldr	r3, [r7, #0]
 8001630:	685a      	ldr	r2, [r3, #4]
 8001632:	4613      	mov	r3, r2
 8001634:	009b      	lsls	r3, r3, #2
 8001636:	4413      	add	r3, r2
 8001638:	3b23      	subs	r3, #35	; 0x23
 800163a:	221f      	movs	r2, #31
 800163c:	fa02 f303 	lsl.w	r3, r2, r3
 8001640:	43da      	mvns	r2, r3
 8001642:	687b      	ldr	r3, [r7, #4]
 8001644:	681b      	ldr	r3, [r3, #0]
 8001646:	400a      	ands	r2, r1
 8001648:	631a      	str	r2, [r3, #48]	; 0x30
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800164a:	687b      	ldr	r3, [r7, #4]
 800164c:	681b      	ldr	r3, [r3, #0]
 800164e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001650:	683b      	ldr	r3, [r7, #0]
 8001652:	681b      	ldr	r3, [r3, #0]
 8001654:	b29b      	uxth	r3, r3
 8001656:	4618      	mov	r0, r3
 8001658:	683b      	ldr	r3, [r7, #0]
 800165a:	685a      	ldr	r2, [r3, #4]
 800165c:	4613      	mov	r3, r2
 800165e:	009b      	lsls	r3, r3, #2
 8001660:	4413      	add	r3, r2
 8001662:	3b23      	subs	r3, #35	; 0x23
 8001664:	fa00 f203 	lsl.w	r2, r0, r3
 8001668:	687b      	ldr	r3, [r7, #4]
 800166a:	681b      	ldr	r3, [r3, #0]
 800166c:	430a      	orrs	r2, r1
 800166e:	631a      	str	r2, [r3, #48]	; 0x30
 8001670:	e023      	b.n	80016ba <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8001672:	687b      	ldr	r3, [r7, #4]
 8001674:	681b      	ldr	r3, [r3, #0]
 8001676:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8001678:	683b      	ldr	r3, [r7, #0]
 800167a:	685a      	ldr	r2, [r3, #4]
 800167c:	4613      	mov	r3, r2
 800167e:	009b      	lsls	r3, r3, #2
 8001680:	4413      	add	r3, r2
 8001682:	3b41      	subs	r3, #65	; 0x41
 8001684:	221f      	movs	r2, #31
 8001686:	fa02 f303 	lsl.w	r3, r2, r3
 800168a:	43da      	mvns	r2, r3
 800168c:	687b      	ldr	r3, [r7, #4]
 800168e:	681b      	ldr	r3, [r3, #0]
 8001690:	400a      	ands	r2, r1
 8001692:	62da      	str	r2, [r3, #44]	; 0x2c
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8001694:	687b      	ldr	r3, [r7, #4]
 8001696:	681b      	ldr	r3, [r3, #0]
 8001698:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800169a:	683b      	ldr	r3, [r7, #0]
 800169c:	681b      	ldr	r3, [r3, #0]
 800169e:	b29b      	uxth	r3, r3
 80016a0:	4618      	mov	r0, r3
 80016a2:	683b      	ldr	r3, [r7, #0]
 80016a4:	685a      	ldr	r2, [r3, #4]
 80016a6:	4613      	mov	r3, r2
 80016a8:	009b      	lsls	r3, r3, #2
 80016aa:	4413      	add	r3, r2
 80016ac:	3b41      	subs	r3, #65	; 0x41
 80016ae:	fa00 f203 	lsl.w	r2, r0, r3
 80016b2:	687b      	ldr	r3, [r7, #4]
 80016b4:	681b      	ldr	r3, [r3, #0]
 80016b6:	430a      	orrs	r2, r1
 80016b8:	62da      	str	r2, [r3, #44]	; 0x2c
  }

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 80016ba:	4b22      	ldr	r3, [pc, #136]	; (8001744 <HAL_ADC_ConfigChannel+0x234>)
 80016bc:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 80016be:	687b      	ldr	r3, [r7, #4]
 80016c0:	681b      	ldr	r3, [r3, #0]
 80016c2:	4a21      	ldr	r2, [pc, #132]	; (8001748 <HAL_ADC_ConfigChannel+0x238>)
 80016c4:	4293      	cmp	r3, r2
 80016c6:	d109      	bne.n	80016dc <HAL_ADC_ConfigChannel+0x1cc>
 80016c8:	683b      	ldr	r3, [r7, #0]
 80016ca:	681b      	ldr	r3, [r3, #0]
 80016cc:	2b12      	cmp	r3, #18
 80016ce:	d105      	bne.n	80016dc <HAL_ADC_ConfigChannel+0x1cc>
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 80016d0:	68fb      	ldr	r3, [r7, #12]
 80016d2:	685b      	ldr	r3, [r3, #4]
 80016d4:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 80016d8:	68fb      	ldr	r3, [r7, #12]
 80016da:	605a      	str	r2, [r3, #4]
  }
  
  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or 
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 80016dc:	687b      	ldr	r3, [r7, #4]
 80016de:	681b      	ldr	r3, [r3, #0]
 80016e0:	4a19      	ldr	r2, [pc, #100]	; (8001748 <HAL_ADC_ConfigChannel+0x238>)
 80016e2:	4293      	cmp	r3, r2
 80016e4:	d123      	bne.n	800172e <HAL_ADC_ConfigChannel+0x21e>
 80016e6:	683b      	ldr	r3, [r7, #0]
 80016e8:	681b      	ldr	r3, [r3, #0]
 80016ea:	2b10      	cmp	r3, #16
 80016ec:	d003      	beq.n	80016f6 <HAL_ADC_ConfigChannel+0x1e6>
 80016ee:	683b      	ldr	r3, [r7, #0]
 80016f0:	681b      	ldr	r3, [r3, #0]
 80016f2:	2b11      	cmp	r3, #17
 80016f4:	d11b      	bne.n	800172e <HAL_ADC_ConfigChannel+0x21e>
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 80016f6:	68fb      	ldr	r3, [r7, #12]
 80016f8:	685b      	ldr	r3, [r3, #4]
 80016fa:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 80016fe:	68fb      	ldr	r3, [r7, #12]
 8001700:	605a      	str	r2, [r3, #4]
    
    if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8001702:	683b      	ldr	r3, [r7, #0]
 8001704:	681b      	ldr	r3, [r3, #0]
 8001706:	2b10      	cmp	r3, #16
 8001708:	d111      	bne.n	800172e <HAL_ADC_ConfigChannel+0x21e>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800170a:	4b10      	ldr	r3, [pc, #64]	; (800174c <HAL_ADC_ConfigChannel+0x23c>)
 800170c:	681b      	ldr	r3, [r3, #0]
 800170e:	4a10      	ldr	r2, [pc, #64]	; (8001750 <HAL_ADC_ConfigChannel+0x240>)
 8001710:	fba2 2303 	umull	r2, r3, r2, r3
 8001714:	0c9a      	lsrs	r2, r3, #18
 8001716:	4613      	mov	r3, r2
 8001718:	009b      	lsls	r3, r3, #2
 800171a:	4413      	add	r3, r2
 800171c:	005b      	lsls	r3, r3, #1
 800171e:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 8001720:	e002      	b.n	8001728 <HAL_ADC_ConfigChannel+0x218>
      {
        counter--;
 8001722:	68bb      	ldr	r3, [r7, #8]
 8001724:	3b01      	subs	r3, #1
 8001726:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 8001728:	68bb      	ldr	r3, [r7, #8]
 800172a:	2b00      	cmp	r3, #0
 800172c:	d1f9      	bne.n	8001722 <HAL_ADC_ConfigChannel+0x212>
      }
    }
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 800172e:	687b      	ldr	r3, [r7, #4]
 8001730:	2200      	movs	r2, #0
 8001732:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 8001736:	2300      	movs	r3, #0
}
 8001738:	4618      	mov	r0, r3
 800173a:	3714      	adds	r7, #20
 800173c:	46bd      	mov	sp, r7
 800173e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001742:	4770      	bx	lr
 8001744:	40012300 	.word	0x40012300
 8001748:	40012000 	.word	0x40012000
 800174c:	20000000 	.word	0x20000000
 8001750:	431bde83 	.word	0x431bde83

08001754 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef* hadc)
{
 8001754:	b480      	push	{r7}
 8001756:	b085      	sub	sp, #20
 8001758:	af00      	add	r7, sp, #0
 800175a:	6078      	str	r0, [r7, #4]
  
  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 800175c:	4b79      	ldr	r3, [pc, #484]	; (8001944 <ADC_Init+0x1f0>)
 800175e:	60fb      	str	r3, [r7, #12]
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8001760:	68fb      	ldr	r3, [r7, #12]
 8001762:	685b      	ldr	r3, [r3, #4]
 8001764:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8001768:	68fb      	ldr	r3, [r7, #12]
 800176a:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800176c:	68fb      	ldr	r3, [r7, #12]
 800176e:	685a      	ldr	r2, [r3, #4]
 8001770:	687b      	ldr	r3, [r7, #4]
 8001772:	685b      	ldr	r3, [r3, #4]
 8001774:	431a      	orrs	r2, r3
 8001776:	68fb      	ldr	r3, [r7, #12]
 8001778:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800177a:	687b      	ldr	r3, [r7, #4]
 800177c:	681b      	ldr	r3, [r3, #0]
 800177e:	685a      	ldr	r2, [r3, #4]
 8001780:	687b      	ldr	r3, [r7, #4]
 8001782:	681b      	ldr	r3, [r3, #0]
 8001784:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8001788:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800178a:	687b      	ldr	r3, [r7, #4]
 800178c:	681b      	ldr	r3, [r3, #0]
 800178e:	6859      	ldr	r1, [r3, #4]
 8001790:	687b      	ldr	r3, [r7, #4]
 8001792:	691b      	ldr	r3, [r3, #16]
 8001794:	021a      	lsls	r2, r3, #8
 8001796:	687b      	ldr	r3, [r7, #4]
 8001798:	681b      	ldr	r3, [r3, #0]
 800179a:	430a      	orrs	r2, r1
 800179c:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800179e:	687b      	ldr	r3, [r7, #4]
 80017a0:	681b      	ldr	r3, [r3, #0]
 80017a2:	685a      	ldr	r2, [r3, #4]
 80017a4:	687b      	ldr	r3, [r7, #4]
 80017a6:	681b      	ldr	r3, [r3, #0]
 80017a8:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80017ac:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 80017ae:	687b      	ldr	r3, [r7, #4]
 80017b0:	681b      	ldr	r3, [r3, #0]
 80017b2:	6859      	ldr	r1, [r3, #4]
 80017b4:	687b      	ldr	r3, [r7, #4]
 80017b6:	689a      	ldr	r2, [r3, #8]
 80017b8:	687b      	ldr	r3, [r7, #4]
 80017ba:	681b      	ldr	r3, [r3, #0]
 80017bc:	430a      	orrs	r2, r1
 80017be:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 80017c0:	687b      	ldr	r3, [r7, #4]
 80017c2:	681b      	ldr	r3, [r3, #0]
 80017c4:	689a      	ldr	r2, [r3, #8]
 80017c6:	687b      	ldr	r3, [r7, #4]
 80017c8:	681b      	ldr	r3, [r3, #0]
 80017ca:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80017ce:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80017d0:	687b      	ldr	r3, [r7, #4]
 80017d2:	681b      	ldr	r3, [r3, #0]
 80017d4:	6899      	ldr	r1, [r3, #8]
 80017d6:	687b      	ldr	r3, [r7, #4]
 80017d8:	68da      	ldr	r2, [r3, #12]
 80017da:	687b      	ldr	r3, [r7, #4]
 80017dc:	681b      	ldr	r3, [r3, #0]
 80017de:	430a      	orrs	r2, r1
 80017e0:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 80017e2:	687b      	ldr	r3, [r7, #4]
 80017e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80017e6:	4a58      	ldr	r2, [pc, #352]	; (8001948 <ADC_Init+0x1f4>)
 80017e8:	4293      	cmp	r3, r2
 80017ea:	d022      	beq.n	8001832 <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80017ec:	687b      	ldr	r3, [r7, #4]
 80017ee:	681b      	ldr	r3, [r3, #0]
 80017f0:	689a      	ldr	r2, [r3, #8]
 80017f2:	687b      	ldr	r3, [r7, #4]
 80017f4:	681b      	ldr	r3, [r3, #0]
 80017f6:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80017fa:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 80017fc:	687b      	ldr	r3, [r7, #4]
 80017fe:	681b      	ldr	r3, [r3, #0]
 8001800:	6899      	ldr	r1, [r3, #8]
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001806:	687b      	ldr	r3, [r7, #4]
 8001808:	681b      	ldr	r3, [r3, #0]
 800180a:	430a      	orrs	r2, r1
 800180c:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800180e:	687b      	ldr	r3, [r7, #4]
 8001810:	681b      	ldr	r3, [r3, #0]
 8001812:	689a      	ldr	r2, [r3, #8]
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800181c:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	681b      	ldr	r3, [r3, #0]
 8001822:	6899      	ldr	r1, [r3, #8]
 8001824:	687b      	ldr	r3, [r7, #4]
 8001826:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001828:	687b      	ldr	r3, [r7, #4]
 800182a:	681b      	ldr	r3, [r3, #0]
 800182c:	430a      	orrs	r2, r1
 800182e:	609a      	str	r2, [r3, #8]
 8001830:	e00f      	b.n	8001852 <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8001832:	687b      	ldr	r3, [r7, #4]
 8001834:	681b      	ldr	r3, [r3, #0]
 8001836:	689a      	ldr	r2, [r3, #8]
 8001838:	687b      	ldr	r3, [r7, #4]
 800183a:	681b      	ldr	r3, [r3, #0]
 800183c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8001840:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	681b      	ldr	r3, [r3, #0]
 8001846:	689a      	ldr	r2, [r3, #8]
 8001848:	687b      	ldr	r3, [r7, #4]
 800184a:	681b      	ldr	r3, [r3, #0]
 800184c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8001850:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8001852:	687b      	ldr	r3, [r7, #4]
 8001854:	681b      	ldr	r3, [r3, #0]
 8001856:	689a      	ldr	r2, [r3, #8]
 8001858:	687b      	ldr	r3, [r7, #4]
 800185a:	681b      	ldr	r3, [r3, #0]
 800185c:	f022 0202 	bic.w	r2, r2, #2
 8001860:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8001862:	687b      	ldr	r3, [r7, #4]
 8001864:	681b      	ldr	r3, [r3, #0]
 8001866:	6899      	ldr	r1, [r3, #8]
 8001868:	687b      	ldr	r3, [r7, #4]
 800186a:	7e1b      	ldrb	r3, [r3, #24]
 800186c:	005a      	lsls	r2, r3, #1
 800186e:	687b      	ldr	r3, [r7, #4]
 8001870:	681b      	ldr	r3, [r3, #0]
 8001872:	430a      	orrs	r2, r1
 8001874:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8001876:	687b      	ldr	r3, [r7, #4]
 8001878:	f893 3020 	ldrb.w	r3, [r3, #32]
 800187c:	2b00      	cmp	r3, #0
 800187e:	d01b      	beq.n	80018b8 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8001880:	687b      	ldr	r3, [r7, #4]
 8001882:	681b      	ldr	r3, [r3, #0]
 8001884:	685a      	ldr	r2, [r3, #4]
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	681b      	ldr	r3, [r3, #0]
 800188a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800188e:	605a      	str	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8001890:	687b      	ldr	r3, [r7, #4]
 8001892:	681b      	ldr	r3, [r3, #0]
 8001894:	685a      	ldr	r2, [r3, #4]
 8001896:	687b      	ldr	r3, [r7, #4]
 8001898:	681b      	ldr	r3, [r3, #0]
 800189a:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800189e:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80018a0:	687b      	ldr	r3, [r7, #4]
 80018a2:	681b      	ldr	r3, [r3, #0]
 80018a4:	6859      	ldr	r1, [r3, #4]
 80018a6:	687b      	ldr	r3, [r7, #4]
 80018a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80018aa:	3b01      	subs	r3, #1
 80018ac:	035a      	lsls	r2, r3, #13
 80018ae:	687b      	ldr	r3, [r7, #4]
 80018b0:	681b      	ldr	r3, [r3, #0]
 80018b2:	430a      	orrs	r2, r1
 80018b4:	605a      	str	r2, [r3, #4]
 80018b6:	e007      	b.n	80018c8 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	681b      	ldr	r3, [r3, #0]
 80018bc:	685a      	ldr	r2, [r3, #4]
 80018be:	687b      	ldr	r3, [r7, #4]
 80018c0:	681b      	ldr	r3, [r3, #0]
 80018c2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80018c6:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 80018c8:	687b      	ldr	r3, [r7, #4]
 80018ca:	681b      	ldr	r3, [r3, #0]
 80018cc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80018ce:	687b      	ldr	r3, [r7, #4]
 80018d0:	681b      	ldr	r3, [r3, #0]
 80018d2:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80018d6:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80018d8:	687b      	ldr	r3, [r7, #4]
 80018da:	681b      	ldr	r3, [r3, #0]
 80018dc:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80018de:	687b      	ldr	r3, [r7, #4]
 80018e0:	69db      	ldr	r3, [r3, #28]
 80018e2:	3b01      	subs	r3, #1
 80018e4:	051a      	lsls	r2, r3, #20
 80018e6:	687b      	ldr	r3, [r7, #4]
 80018e8:	681b      	ldr	r3, [r3, #0]
 80018ea:	430a      	orrs	r2, r1
 80018ec:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 80018ee:	687b      	ldr	r3, [r7, #4]
 80018f0:	681b      	ldr	r3, [r3, #0]
 80018f2:	689a      	ldr	r2, [r3, #8]
 80018f4:	687b      	ldr	r3, [r7, #4]
 80018f6:	681b      	ldr	r3, [r3, #0]
 80018f8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80018fc:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 80018fe:	687b      	ldr	r3, [r7, #4]
 8001900:	681b      	ldr	r3, [r3, #0]
 8001902:	6899      	ldr	r1, [r3, #8]
 8001904:	687b      	ldr	r3, [r7, #4]
 8001906:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 800190a:	025a      	lsls	r2, r3, #9
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	681b      	ldr	r3, [r3, #0]
 8001910:	430a      	orrs	r2, r1
 8001912:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8001914:	687b      	ldr	r3, [r7, #4]
 8001916:	681b      	ldr	r3, [r3, #0]
 8001918:	689a      	ldr	r2, [r3, #8]
 800191a:	687b      	ldr	r3, [r7, #4]
 800191c:	681b      	ldr	r3, [r3, #0]
 800191e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8001922:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8001924:	687b      	ldr	r3, [r7, #4]
 8001926:	681b      	ldr	r3, [r3, #0]
 8001928:	6899      	ldr	r1, [r3, #8]
 800192a:	687b      	ldr	r3, [r7, #4]
 800192c:	695b      	ldr	r3, [r3, #20]
 800192e:	029a      	lsls	r2, r3, #10
 8001930:	687b      	ldr	r3, [r7, #4]
 8001932:	681b      	ldr	r3, [r3, #0]
 8001934:	430a      	orrs	r2, r1
 8001936:	609a      	str	r2, [r3, #8]
}
 8001938:	bf00      	nop
 800193a:	3714      	adds	r7, #20
 800193c:	46bd      	mov	sp, r7
 800193e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001942:	4770      	bx	lr
 8001944:	40012300 	.word	0x40012300
 8001948:	0f000001 	.word	0x0f000001

0800194c <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800194c:	b480      	push	{r7}
 800194e:	b085      	sub	sp, #20
 8001950:	af00      	add	r7, sp, #0
 8001952:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8001954:	687b      	ldr	r3, [r7, #4]
 8001956:	f003 0307 	and.w	r3, r3, #7
 800195a:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800195c:	4b0c      	ldr	r3, [pc, #48]	; (8001990 <__NVIC_SetPriorityGrouping+0x44>)
 800195e:	68db      	ldr	r3, [r3, #12]
 8001960:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001962:	68ba      	ldr	r2, [r7, #8]
 8001964:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001968:	4013      	ands	r3, r2
 800196a:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800196c:	68fb      	ldr	r3, [r7, #12]
 800196e:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001970:	68bb      	ldr	r3, [r7, #8]
 8001972:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001974:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001978:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800197c:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800197e:	4a04      	ldr	r2, [pc, #16]	; (8001990 <__NVIC_SetPriorityGrouping+0x44>)
 8001980:	68bb      	ldr	r3, [r7, #8]
 8001982:	60d3      	str	r3, [r2, #12]
}
 8001984:	bf00      	nop
 8001986:	3714      	adds	r7, #20
 8001988:	46bd      	mov	sp, r7
 800198a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800198e:	4770      	bx	lr
 8001990:	e000ed00 	.word	0xe000ed00

08001994 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001994:	b480      	push	{r7}
 8001996:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001998:	4b04      	ldr	r3, [pc, #16]	; (80019ac <__NVIC_GetPriorityGrouping+0x18>)
 800199a:	68db      	ldr	r3, [r3, #12]
 800199c:	0a1b      	lsrs	r3, r3, #8
 800199e:	f003 0307 	and.w	r3, r3, #7
}
 80019a2:	4618      	mov	r0, r3
 80019a4:	46bd      	mov	sp, r7
 80019a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019aa:	4770      	bx	lr
 80019ac:	e000ed00 	.word	0xe000ed00

080019b0 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80019b0:	b480      	push	{r7}
 80019b2:	b083      	sub	sp, #12
 80019b4:	af00      	add	r7, sp, #0
 80019b6:	4603      	mov	r3, r0
 80019b8:	6039      	str	r1, [r7, #0]
 80019ba:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80019bc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019c0:	2b00      	cmp	r3, #0
 80019c2:	db0a      	blt.n	80019da <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80019c4:	683b      	ldr	r3, [r7, #0]
 80019c6:	b2da      	uxtb	r2, r3
 80019c8:	490c      	ldr	r1, [pc, #48]	; (80019fc <__NVIC_SetPriority+0x4c>)
 80019ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019ce:	0112      	lsls	r2, r2, #4
 80019d0:	b2d2      	uxtb	r2, r2
 80019d2:	440b      	add	r3, r1
 80019d4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80019d8:	e00a      	b.n	80019f0 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80019da:	683b      	ldr	r3, [r7, #0]
 80019dc:	b2da      	uxtb	r2, r3
 80019de:	4908      	ldr	r1, [pc, #32]	; (8001a00 <__NVIC_SetPriority+0x50>)
 80019e0:	79fb      	ldrb	r3, [r7, #7]
 80019e2:	f003 030f 	and.w	r3, r3, #15
 80019e6:	3b04      	subs	r3, #4
 80019e8:	0112      	lsls	r2, r2, #4
 80019ea:	b2d2      	uxtb	r2, r2
 80019ec:	440b      	add	r3, r1
 80019ee:	761a      	strb	r2, [r3, #24]
}
 80019f0:	bf00      	nop
 80019f2:	370c      	adds	r7, #12
 80019f4:	46bd      	mov	sp, r7
 80019f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019fa:	4770      	bx	lr
 80019fc:	e000e100 	.word	0xe000e100
 8001a00:	e000ed00 	.word	0xe000ed00

08001a04 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001a04:	b480      	push	{r7}
 8001a06:	b089      	sub	sp, #36	; 0x24
 8001a08:	af00      	add	r7, sp, #0
 8001a0a:	60f8      	str	r0, [r7, #12]
 8001a0c:	60b9      	str	r1, [r7, #8]
 8001a0e:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8001a10:	68fb      	ldr	r3, [r7, #12]
 8001a12:	f003 0307 	and.w	r3, r3, #7
 8001a16:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001a18:	69fb      	ldr	r3, [r7, #28]
 8001a1a:	f1c3 0307 	rsb	r3, r3, #7
 8001a1e:	2b04      	cmp	r3, #4
 8001a20:	bf28      	it	cs
 8001a22:	2304      	movcs	r3, #4
 8001a24:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001a26:	69fb      	ldr	r3, [r7, #28]
 8001a28:	3304      	adds	r3, #4
 8001a2a:	2b06      	cmp	r3, #6
 8001a2c:	d902      	bls.n	8001a34 <NVIC_EncodePriority+0x30>
 8001a2e:	69fb      	ldr	r3, [r7, #28]
 8001a30:	3b03      	subs	r3, #3
 8001a32:	e000      	b.n	8001a36 <NVIC_EncodePriority+0x32>
 8001a34:	2300      	movs	r3, #0
 8001a36:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001a38:	f04f 32ff 	mov.w	r2, #4294967295
 8001a3c:	69bb      	ldr	r3, [r7, #24]
 8001a3e:	fa02 f303 	lsl.w	r3, r2, r3
 8001a42:	43da      	mvns	r2, r3
 8001a44:	68bb      	ldr	r3, [r7, #8]
 8001a46:	401a      	ands	r2, r3
 8001a48:	697b      	ldr	r3, [r7, #20]
 8001a4a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001a4c:	f04f 31ff 	mov.w	r1, #4294967295
 8001a50:	697b      	ldr	r3, [r7, #20]
 8001a52:	fa01 f303 	lsl.w	r3, r1, r3
 8001a56:	43d9      	mvns	r1, r3
 8001a58:	687b      	ldr	r3, [r7, #4]
 8001a5a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001a5c:	4313      	orrs	r3, r2
         );
}
 8001a5e:	4618      	mov	r0, r3
 8001a60:	3724      	adds	r7, #36	; 0x24
 8001a62:	46bd      	mov	sp, r7
 8001a64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a68:	4770      	bx	lr
	...

08001a6c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001a6c:	b580      	push	{r7, lr}
 8001a6e:	b082      	sub	sp, #8
 8001a70:	af00      	add	r7, sp, #0
 8001a72:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001a74:	687b      	ldr	r3, [r7, #4]
 8001a76:	3b01      	subs	r3, #1
 8001a78:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001a7c:	d301      	bcc.n	8001a82 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8001a7e:	2301      	movs	r3, #1
 8001a80:	e00f      	b.n	8001aa2 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001a82:	4a0a      	ldr	r2, [pc, #40]	; (8001aac <SysTick_Config+0x40>)
 8001a84:	687b      	ldr	r3, [r7, #4]
 8001a86:	3b01      	subs	r3, #1
 8001a88:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8001a8a:	210f      	movs	r1, #15
 8001a8c:	f04f 30ff 	mov.w	r0, #4294967295
 8001a90:	f7ff ff8e 	bl	80019b0 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001a94:	4b05      	ldr	r3, [pc, #20]	; (8001aac <SysTick_Config+0x40>)
 8001a96:	2200      	movs	r2, #0
 8001a98:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001a9a:	4b04      	ldr	r3, [pc, #16]	; (8001aac <SysTick_Config+0x40>)
 8001a9c:	2207      	movs	r2, #7
 8001a9e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001aa0:	2300      	movs	r3, #0
}
 8001aa2:	4618      	mov	r0, r3
 8001aa4:	3708      	adds	r7, #8
 8001aa6:	46bd      	mov	sp, r7
 8001aa8:	bd80      	pop	{r7, pc}
 8001aaa:	bf00      	nop
 8001aac:	e000e010 	.word	0xe000e010

08001ab0 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001ab0:	b580      	push	{r7, lr}
 8001ab2:	b082      	sub	sp, #8
 8001ab4:	af00      	add	r7, sp, #0
 8001ab6:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8001ab8:	6878      	ldr	r0, [r7, #4]
 8001aba:	f7ff ff47 	bl	800194c <__NVIC_SetPriorityGrouping>
}
 8001abe:	bf00      	nop
 8001ac0:	3708      	adds	r7, #8
 8001ac2:	46bd      	mov	sp, r7
 8001ac4:	bd80      	pop	{r7, pc}

08001ac6 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001ac6:	b580      	push	{r7, lr}
 8001ac8:	b086      	sub	sp, #24
 8001aca:	af00      	add	r7, sp, #0
 8001acc:	4603      	mov	r3, r0
 8001ace:	60b9      	str	r1, [r7, #8]
 8001ad0:	607a      	str	r2, [r7, #4]
 8001ad2:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8001ad4:	2300      	movs	r3, #0
 8001ad6:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8001ad8:	f7ff ff5c 	bl	8001994 <__NVIC_GetPriorityGrouping>
 8001adc:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8001ade:	687a      	ldr	r2, [r7, #4]
 8001ae0:	68b9      	ldr	r1, [r7, #8]
 8001ae2:	6978      	ldr	r0, [r7, #20]
 8001ae4:	f7ff ff8e 	bl	8001a04 <NVIC_EncodePriority>
 8001ae8:	4602      	mov	r2, r0
 8001aea:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001aee:	4611      	mov	r1, r2
 8001af0:	4618      	mov	r0, r3
 8001af2:	f7ff ff5d 	bl	80019b0 <__NVIC_SetPriority>
}
 8001af6:	bf00      	nop
 8001af8:	3718      	adds	r7, #24
 8001afa:	46bd      	mov	sp, r7
 8001afc:	bd80      	pop	{r7, pc}

08001afe <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8001afe:	b580      	push	{r7, lr}
 8001b00:	b082      	sub	sp, #8
 8001b02:	af00      	add	r7, sp, #0
 8001b04:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8001b06:	6878      	ldr	r0, [r7, #4]
 8001b08:	f7ff ffb0 	bl	8001a6c <SysTick_Config>
 8001b0c:	4603      	mov	r3, r0
}
 8001b0e:	4618      	mov	r0, r3
 8001b10:	3708      	adds	r7, #8
 8001b12:	46bd      	mov	sp, r7
 8001b14:	bd80      	pop	{r7, pc}
	...

08001b18 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001b18:	b480      	push	{r7}
 8001b1a:	b089      	sub	sp, #36	; 0x24
 8001b1c:	af00      	add	r7, sp, #0
 8001b1e:	6078      	str	r0, [r7, #4]
 8001b20:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8001b22:	2300      	movs	r3, #0
 8001b24:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8001b26:	2300      	movs	r3, #0
 8001b28:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8001b2a:	2300      	movs	r3, #0
 8001b2c:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8001b2e:	2300      	movs	r3, #0
 8001b30:	61fb      	str	r3, [r7, #28]
 8001b32:	e16b      	b.n	8001e0c <HAL_GPIO_Init+0x2f4>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8001b34:	2201      	movs	r2, #1
 8001b36:	69fb      	ldr	r3, [r7, #28]
 8001b38:	fa02 f303 	lsl.w	r3, r2, r3
 8001b3c:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8001b3e:	683b      	ldr	r3, [r7, #0]
 8001b40:	681b      	ldr	r3, [r3, #0]
 8001b42:	697a      	ldr	r2, [r7, #20]
 8001b44:	4013      	ands	r3, r2
 8001b46:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8001b48:	693a      	ldr	r2, [r7, #16]
 8001b4a:	697b      	ldr	r3, [r7, #20]
 8001b4c:	429a      	cmp	r2, r3
 8001b4e:	f040 815a 	bne.w	8001e06 <HAL_GPIO_Init+0x2ee>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8001b52:	683b      	ldr	r3, [r7, #0]
 8001b54:	685b      	ldr	r3, [r3, #4]
 8001b56:	f003 0303 	and.w	r3, r3, #3
 8001b5a:	2b01      	cmp	r3, #1
 8001b5c:	d005      	beq.n	8001b6a <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001b5e:	683b      	ldr	r3, [r7, #0]
 8001b60:	685b      	ldr	r3, [r3, #4]
 8001b62:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8001b66:	2b02      	cmp	r3, #2
 8001b68:	d130      	bne.n	8001bcc <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8001b6a:	687b      	ldr	r3, [r7, #4]
 8001b6c:	689b      	ldr	r3, [r3, #8]
 8001b6e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8001b70:	69fb      	ldr	r3, [r7, #28]
 8001b72:	005b      	lsls	r3, r3, #1
 8001b74:	2203      	movs	r2, #3
 8001b76:	fa02 f303 	lsl.w	r3, r2, r3
 8001b7a:	43db      	mvns	r3, r3
 8001b7c:	69ba      	ldr	r2, [r7, #24]
 8001b7e:	4013      	ands	r3, r2
 8001b80:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8001b82:	683b      	ldr	r3, [r7, #0]
 8001b84:	68da      	ldr	r2, [r3, #12]
 8001b86:	69fb      	ldr	r3, [r7, #28]
 8001b88:	005b      	lsls	r3, r3, #1
 8001b8a:	fa02 f303 	lsl.w	r3, r2, r3
 8001b8e:	69ba      	ldr	r2, [r7, #24]
 8001b90:	4313      	orrs	r3, r2
 8001b92:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8001b94:	687b      	ldr	r3, [r7, #4]
 8001b96:	69ba      	ldr	r2, [r7, #24]
 8001b98:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8001b9a:	687b      	ldr	r3, [r7, #4]
 8001b9c:	685b      	ldr	r3, [r3, #4]
 8001b9e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8001ba0:	2201      	movs	r2, #1
 8001ba2:	69fb      	ldr	r3, [r7, #28]
 8001ba4:	fa02 f303 	lsl.w	r3, r2, r3
 8001ba8:	43db      	mvns	r3, r3
 8001baa:	69ba      	ldr	r2, [r7, #24]
 8001bac:	4013      	ands	r3, r2
 8001bae:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8001bb0:	683b      	ldr	r3, [r7, #0]
 8001bb2:	685b      	ldr	r3, [r3, #4]
 8001bb4:	091b      	lsrs	r3, r3, #4
 8001bb6:	f003 0201 	and.w	r2, r3, #1
 8001bba:	69fb      	ldr	r3, [r7, #28]
 8001bbc:	fa02 f303 	lsl.w	r3, r2, r3
 8001bc0:	69ba      	ldr	r2, [r7, #24]
 8001bc2:	4313      	orrs	r3, r2
 8001bc4:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8001bc6:	687b      	ldr	r3, [r7, #4]
 8001bc8:	69ba      	ldr	r2, [r7, #24]
 8001bca:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8001bcc:	683b      	ldr	r3, [r7, #0]
 8001bce:	685b      	ldr	r3, [r3, #4]
 8001bd0:	f003 0303 	and.w	r3, r3, #3
 8001bd4:	2b03      	cmp	r3, #3
 8001bd6:	d017      	beq.n	8001c08 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8001bd8:	687b      	ldr	r3, [r7, #4]
 8001bda:	68db      	ldr	r3, [r3, #12]
 8001bdc:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8001bde:	69fb      	ldr	r3, [r7, #28]
 8001be0:	005b      	lsls	r3, r3, #1
 8001be2:	2203      	movs	r2, #3
 8001be4:	fa02 f303 	lsl.w	r3, r2, r3
 8001be8:	43db      	mvns	r3, r3
 8001bea:	69ba      	ldr	r2, [r7, #24]
 8001bec:	4013      	ands	r3, r2
 8001bee:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001bf0:	683b      	ldr	r3, [r7, #0]
 8001bf2:	689a      	ldr	r2, [r3, #8]
 8001bf4:	69fb      	ldr	r3, [r7, #28]
 8001bf6:	005b      	lsls	r3, r3, #1
 8001bf8:	fa02 f303 	lsl.w	r3, r2, r3
 8001bfc:	69ba      	ldr	r2, [r7, #24]
 8001bfe:	4313      	orrs	r3, r2
 8001c00:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8001c02:	687b      	ldr	r3, [r7, #4]
 8001c04:	69ba      	ldr	r2, [r7, #24]
 8001c06:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001c08:	683b      	ldr	r3, [r7, #0]
 8001c0a:	685b      	ldr	r3, [r3, #4]
 8001c0c:	f003 0303 	and.w	r3, r3, #3
 8001c10:	2b02      	cmp	r3, #2
 8001c12:	d123      	bne.n	8001c5c <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8001c14:	69fb      	ldr	r3, [r7, #28]
 8001c16:	08da      	lsrs	r2, r3, #3
 8001c18:	687b      	ldr	r3, [r7, #4]
 8001c1a:	3208      	adds	r2, #8
 8001c1c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001c20:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8001c22:	69fb      	ldr	r3, [r7, #28]
 8001c24:	f003 0307 	and.w	r3, r3, #7
 8001c28:	009b      	lsls	r3, r3, #2
 8001c2a:	220f      	movs	r2, #15
 8001c2c:	fa02 f303 	lsl.w	r3, r2, r3
 8001c30:	43db      	mvns	r3, r3
 8001c32:	69ba      	ldr	r2, [r7, #24]
 8001c34:	4013      	ands	r3, r2
 8001c36:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8001c38:	683b      	ldr	r3, [r7, #0]
 8001c3a:	691a      	ldr	r2, [r3, #16]
 8001c3c:	69fb      	ldr	r3, [r7, #28]
 8001c3e:	f003 0307 	and.w	r3, r3, #7
 8001c42:	009b      	lsls	r3, r3, #2
 8001c44:	fa02 f303 	lsl.w	r3, r2, r3
 8001c48:	69ba      	ldr	r2, [r7, #24]
 8001c4a:	4313      	orrs	r3, r2
 8001c4c:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8001c4e:	69fb      	ldr	r3, [r7, #28]
 8001c50:	08da      	lsrs	r2, r3, #3
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	3208      	adds	r2, #8
 8001c56:	69b9      	ldr	r1, [r7, #24]
 8001c58:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	681b      	ldr	r3, [r3, #0]
 8001c60:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8001c62:	69fb      	ldr	r3, [r7, #28]
 8001c64:	005b      	lsls	r3, r3, #1
 8001c66:	2203      	movs	r2, #3
 8001c68:	fa02 f303 	lsl.w	r3, r2, r3
 8001c6c:	43db      	mvns	r3, r3
 8001c6e:	69ba      	ldr	r2, [r7, #24]
 8001c70:	4013      	ands	r3, r2
 8001c72:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8001c74:	683b      	ldr	r3, [r7, #0]
 8001c76:	685b      	ldr	r3, [r3, #4]
 8001c78:	f003 0203 	and.w	r2, r3, #3
 8001c7c:	69fb      	ldr	r3, [r7, #28]
 8001c7e:	005b      	lsls	r3, r3, #1
 8001c80:	fa02 f303 	lsl.w	r3, r2, r3
 8001c84:	69ba      	ldr	r2, [r7, #24]
 8001c86:	4313      	orrs	r3, r2
 8001c88:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8001c8a:	687b      	ldr	r3, [r7, #4]
 8001c8c:	69ba      	ldr	r2, [r7, #24]
 8001c8e:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8001c90:	683b      	ldr	r3, [r7, #0]
 8001c92:	685b      	ldr	r3, [r3, #4]
 8001c94:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8001c98:	2b00      	cmp	r3, #0
 8001c9a:	f000 80b4 	beq.w	8001e06 <HAL_GPIO_Init+0x2ee>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001c9e:	2300      	movs	r3, #0
 8001ca0:	60fb      	str	r3, [r7, #12]
 8001ca2:	4b60      	ldr	r3, [pc, #384]	; (8001e24 <HAL_GPIO_Init+0x30c>)
 8001ca4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001ca6:	4a5f      	ldr	r2, [pc, #380]	; (8001e24 <HAL_GPIO_Init+0x30c>)
 8001ca8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001cac:	6453      	str	r3, [r2, #68]	; 0x44
 8001cae:	4b5d      	ldr	r3, [pc, #372]	; (8001e24 <HAL_GPIO_Init+0x30c>)
 8001cb0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001cb2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001cb6:	60fb      	str	r3, [r7, #12]
 8001cb8:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8001cba:	4a5b      	ldr	r2, [pc, #364]	; (8001e28 <HAL_GPIO_Init+0x310>)
 8001cbc:	69fb      	ldr	r3, [r7, #28]
 8001cbe:	089b      	lsrs	r3, r3, #2
 8001cc0:	3302      	adds	r3, #2
 8001cc2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001cc6:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8001cc8:	69fb      	ldr	r3, [r7, #28]
 8001cca:	f003 0303 	and.w	r3, r3, #3
 8001cce:	009b      	lsls	r3, r3, #2
 8001cd0:	220f      	movs	r2, #15
 8001cd2:	fa02 f303 	lsl.w	r3, r2, r3
 8001cd6:	43db      	mvns	r3, r3
 8001cd8:	69ba      	ldr	r2, [r7, #24]
 8001cda:	4013      	ands	r3, r2
 8001cdc:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	4a52      	ldr	r2, [pc, #328]	; (8001e2c <HAL_GPIO_Init+0x314>)
 8001ce2:	4293      	cmp	r3, r2
 8001ce4:	d02b      	beq.n	8001d3e <HAL_GPIO_Init+0x226>
 8001ce6:	687b      	ldr	r3, [r7, #4]
 8001ce8:	4a51      	ldr	r2, [pc, #324]	; (8001e30 <HAL_GPIO_Init+0x318>)
 8001cea:	4293      	cmp	r3, r2
 8001cec:	d025      	beq.n	8001d3a <HAL_GPIO_Init+0x222>
 8001cee:	687b      	ldr	r3, [r7, #4]
 8001cf0:	4a50      	ldr	r2, [pc, #320]	; (8001e34 <HAL_GPIO_Init+0x31c>)
 8001cf2:	4293      	cmp	r3, r2
 8001cf4:	d01f      	beq.n	8001d36 <HAL_GPIO_Init+0x21e>
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	4a4f      	ldr	r2, [pc, #316]	; (8001e38 <HAL_GPIO_Init+0x320>)
 8001cfa:	4293      	cmp	r3, r2
 8001cfc:	d019      	beq.n	8001d32 <HAL_GPIO_Init+0x21a>
 8001cfe:	687b      	ldr	r3, [r7, #4]
 8001d00:	4a4e      	ldr	r2, [pc, #312]	; (8001e3c <HAL_GPIO_Init+0x324>)
 8001d02:	4293      	cmp	r3, r2
 8001d04:	d013      	beq.n	8001d2e <HAL_GPIO_Init+0x216>
 8001d06:	687b      	ldr	r3, [r7, #4]
 8001d08:	4a4d      	ldr	r2, [pc, #308]	; (8001e40 <HAL_GPIO_Init+0x328>)
 8001d0a:	4293      	cmp	r3, r2
 8001d0c:	d00d      	beq.n	8001d2a <HAL_GPIO_Init+0x212>
 8001d0e:	687b      	ldr	r3, [r7, #4]
 8001d10:	4a4c      	ldr	r2, [pc, #304]	; (8001e44 <HAL_GPIO_Init+0x32c>)
 8001d12:	4293      	cmp	r3, r2
 8001d14:	d007      	beq.n	8001d26 <HAL_GPIO_Init+0x20e>
 8001d16:	687b      	ldr	r3, [r7, #4]
 8001d18:	4a4b      	ldr	r2, [pc, #300]	; (8001e48 <HAL_GPIO_Init+0x330>)
 8001d1a:	4293      	cmp	r3, r2
 8001d1c:	d101      	bne.n	8001d22 <HAL_GPIO_Init+0x20a>
 8001d1e:	2307      	movs	r3, #7
 8001d20:	e00e      	b.n	8001d40 <HAL_GPIO_Init+0x228>
 8001d22:	2308      	movs	r3, #8
 8001d24:	e00c      	b.n	8001d40 <HAL_GPIO_Init+0x228>
 8001d26:	2306      	movs	r3, #6
 8001d28:	e00a      	b.n	8001d40 <HAL_GPIO_Init+0x228>
 8001d2a:	2305      	movs	r3, #5
 8001d2c:	e008      	b.n	8001d40 <HAL_GPIO_Init+0x228>
 8001d2e:	2304      	movs	r3, #4
 8001d30:	e006      	b.n	8001d40 <HAL_GPIO_Init+0x228>
 8001d32:	2303      	movs	r3, #3
 8001d34:	e004      	b.n	8001d40 <HAL_GPIO_Init+0x228>
 8001d36:	2302      	movs	r3, #2
 8001d38:	e002      	b.n	8001d40 <HAL_GPIO_Init+0x228>
 8001d3a:	2301      	movs	r3, #1
 8001d3c:	e000      	b.n	8001d40 <HAL_GPIO_Init+0x228>
 8001d3e:	2300      	movs	r3, #0
 8001d40:	69fa      	ldr	r2, [r7, #28]
 8001d42:	f002 0203 	and.w	r2, r2, #3
 8001d46:	0092      	lsls	r2, r2, #2
 8001d48:	4093      	lsls	r3, r2
 8001d4a:	69ba      	ldr	r2, [r7, #24]
 8001d4c:	4313      	orrs	r3, r2
 8001d4e:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8001d50:	4935      	ldr	r1, [pc, #212]	; (8001e28 <HAL_GPIO_Init+0x310>)
 8001d52:	69fb      	ldr	r3, [r7, #28]
 8001d54:	089b      	lsrs	r3, r3, #2
 8001d56:	3302      	adds	r3, #2
 8001d58:	69ba      	ldr	r2, [r7, #24]
 8001d5a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8001d5e:	4b3b      	ldr	r3, [pc, #236]	; (8001e4c <HAL_GPIO_Init+0x334>)
 8001d60:	689b      	ldr	r3, [r3, #8]
 8001d62:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001d64:	693b      	ldr	r3, [r7, #16]
 8001d66:	43db      	mvns	r3, r3
 8001d68:	69ba      	ldr	r2, [r7, #24]
 8001d6a:	4013      	ands	r3, r2
 8001d6c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8001d6e:	683b      	ldr	r3, [r7, #0]
 8001d70:	685b      	ldr	r3, [r3, #4]
 8001d72:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001d76:	2b00      	cmp	r3, #0
 8001d78:	d003      	beq.n	8001d82 <HAL_GPIO_Init+0x26a>
        {
          temp |= iocurrent;
 8001d7a:	69ba      	ldr	r2, [r7, #24]
 8001d7c:	693b      	ldr	r3, [r7, #16]
 8001d7e:	4313      	orrs	r3, r2
 8001d80:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8001d82:	4a32      	ldr	r2, [pc, #200]	; (8001e4c <HAL_GPIO_Init+0x334>)
 8001d84:	69bb      	ldr	r3, [r7, #24]
 8001d86:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8001d88:	4b30      	ldr	r3, [pc, #192]	; (8001e4c <HAL_GPIO_Init+0x334>)
 8001d8a:	68db      	ldr	r3, [r3, #12]
 8001d8c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001d8e:	693b      	ldr	r3, [r7, #16]
 8001d90:	43db      	mvns	r3, r3
 8001d92:	69ba      	ldr	r2, [r7, #24]
 8001d94:	4013      	ands	r3, r2
 8001d96:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8001d98:	683b      	ldr	r3, [r7, #0]
 8001d9a:	685b      	ldr	r3, [r3, #4]
 8001d9c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001da0:	2b00      	cmp	r3, #0
 8001da2:	d003      	beq.n	8001dac <HAL_GPIO_Init+0x294>
        {
          temp |= iocurrent;
 8001da4:	69ba      	ldr	r2, [r7, #24]
 8001da6:	693b      	ldr	r3, [r7, #16]
 8001da8:	4313      	orrs	r3, r2
 8001daa:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8001dac:	4a27      	ldr	r2, [pc, #156]	; (8001e4c <HAL_GPIO_Init+0x334>)
 8001dae:	69bb      	ldr	r3, [r7, #24]
 8001db0:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8001db2:	4b26      	ldr	r3, [pc, #152]	; (8001e4c <HAL_GPIO_Init+0x334>)
 8001db4:	685b      	ldr	r3, [r3, #4]
 8001db6:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001db8:	693b      	ldr	r3, [r7, #16]
 8001dba:	43db      	mvns	r3, r3
 8001dbc:	69ba      	ldr	r2, [r7, #24]
 8001dbe:	4013      	ands	r3, r2
 8001dc0:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8001dc2:	683b      	ldr	r3, [r7, #0]
 8001dc4:	685b      	ldr	r3, [r3, #4]
 8001dc6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001dca:	2b00      	cmp	r3, #0
 8001dcc:	d003      	beq.n	8001dd6 <HAL_GPIO_Init+0x2be>
        {
          temp |= iocurrent;
 8001dce:	69ba      	ldr	r2, [r7, #24]
 8001dd0:	693b      	ldr	r3, [r7, #16]
 8001dd2:	4313      	orrs	r3, r2
 8001dd4:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8001dd6:	4a1d      	ldr	r2, [pc, #116]	; (8001e4c <HAL_GPIO_Init+0x334>)
 8001dd8:	69bb      	ldr	r3, [r7, #24]
 8001dda:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8001ddc:	4b1b      	ldr	r3, [pc, #108]	; (8001e4c <HAL_GPIO_Init+0x334>)
 8001dde:	681b      	ldr	r3, [r3, #0]
 8001de0:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001de2:	693b      	ldr	r3, [r7, #16]
 8001de4:	43db      	mvns	r3, r3
 8001de6:	69ba      	ldr	r2, [r7, #24]
 8001de8:	4013      	ands	r3, r2
 8001dea:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8001dec:	683b      	ldr	r3, [r7, #0]
 8001dee:	685b      	ldr	r3, [r3, #4]
 8001df0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001df4:	2b00      	cmp	r3, #0
 8001df6:	d003      	beq.n	8001e00 <HAL_GPIO_Init+0x2e8>
        {
          temp |= iocurrent;
 8001df8:	69ba      	ldr	r2, [r7, #24]
 8001dfa:	693b      	ldr	r3, [r7, #16]
 8001dfc:	4313      	orrs	r3, r2
 8001dfe:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8001e00:	4a12      	ldr	r2, [pc, #72]	; (8001e4c <HAL_GPIO_Init+0x334>)
 8001e02:	69bb      	ldr	r3, [r7, #24]
 8001e04:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8001e06:	69fb      	ldr	r3, [r7, #28]
 8001e08:	3301      	adds	r3, #1
 8001e0a:	61fb      	str	r3, [r7, #28]
 8001e0c:	69fb      	ldr	r3, [r7, #28]
 8001e0e:	2b0f      	cmp	r3, #15
 8001e10:	f67f ae90 	bls.w	8001b34 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8001e14:	bf00      	nop
 8001e16:	bf00      	nop
 8001e18:	3724      	adds	r7, #36	; 0x24
 8001e1a:	46bd      	mov	sp, r7
 8001e1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e20:	4770      	bx	lr
 8001e22:	bf00      	nop
 8001e24:	40023800 	.word	0x40023800
 8001e28:	40013800 	.word	0x40013800
 8001e2c:	40020000 	.word	0x40020000
 8001e30:	40020400 	.word	0x40020400
 8001e34:	40020800 	.word	0x40020800
 8001e38:	40020c00 	.word	0x40020c00
 8001e3c:	40021000 	.word	0x40021000
 8001e40:	40021400 	.word	0x40021400
 8001e44:	40021800 	.word	0x40021800
 8001e48:	40021c00 	.word	0x40021c00
 8001e4c:	40013c00 	.word	0x40013c00

08001e50 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8001e50:	b480      	push	{r7}
 8001e52:	b083      	sub	sp, #12
 8001e54:	af00      	add	r7, sp, #0
 8001e56:	6078      	str	r0, [r7, #4]
 8001e58:	460b      	mov	r3, r1
 8001e5a:	807b      	strh	r3, [r7, #2]
 8001e5c:	4613      	mov	r3, r2
 8001e5e:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8001e60:	787b      	ldrb	r3, [r7, #1]
 8001e62:	2b00      	cmp	r3, #0
 8001e64:	d003      	beq.n	8001e6e <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8001e66:	887a      	ldrh	r2, [r7, #2]
 8001e68:	687b      	ldr	r3, [r7, #4]
 8001e6a:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8001e6c:	e003      	b.n	8001e76 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8001e6e:	887b      	ldrh	r3, [r7, #2]
 8001e70:	041a      	lsls	r2, r3, #16
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	619a      	str	r2, [r3, #24]
}
 8001e76:	bf00      	nop
 8001e78:	370c      	adds	r7, #12
 8001e7a:	46bd      	mov	sp, r7
 8001e7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e80:	4770      	bx	lr
	...

08001e84 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8001e84:	b580      	push	{r7, lr}
 8001e86:	b086      	sub	sp, #24
 8001e88:	af00      	add	r7, sp, #0
 8001e8a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8001e8c:	687b      	ldr	r3, [r7, #4]
 8001e8e:	2b00      	cmp	r3, #0
 8001e90:	d101      	bne.n	8001e96 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8001e92:	2301      	movs	r3, #1
 8001e94:	e267      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001e96:	687b      	ldr	r3, [r7, #4]
 8001e98:	681b      	ldr	r3, [r3, #0]
 8001e9a:	f003 0301 	and.w	r3, r3, #1
 8001e9e:	2b00      	cmp	r3, #0
 8001ea0:	d075      	beq.n	8001f8e <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8001ea2:	4b88      	ldr	r3, [pc, #544]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001ea4:	689b      	ldr	r3, [r3, #8]
 8001ea6:	f003 030c 	and.w	r3, r3, #12
 8001eaa:	2b04      	cmp	r3, #4
 8001eac:	d00c      	beq.n	8001ec8 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001eae:	4b85      	ldr	r3, [pc, #532]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001eb0:	689b      	ldr	r3, [r3, #8]
 8001eb2:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8001eb6:	2b08      	cmp	r3, #8
 8001eb8:	d112      	bne.n	8001ee0 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001eba:	4b82      	ldr	r3, [pc, #520]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001ebc:	685b      	ldr	r3, [r3, #4]
 8001ebe:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001ec2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8001ec6:	d10b      	bne.n	8001ee0 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001ec8:	4b7e      	ldr	r3, [pc, #504]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001eca:	681b      	ldr	r3, [r3, #0]
 8001ecc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001ed0:	2b00      	cmp	r3, #0
 8001ed2:	d05b      	beq.n	8001f8c <HAL_RCC_OscConfig+0x108>
 8001ed4:	687b      	ldr	r3, [r7, #4]
 8001ed6:	685b      	ldr	r3, [r3, #4]
 8001ed8:	2b00      	cmp	r3, #0
 8001eda:	d157      	bne.n	8001f8c <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8001edc:	2301      	movs	r3, #1
 8001ede:	e242      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	685b      	ldr	r3, [r3, #4]
 8001ee4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001ee8:	d106      	bne.n	8001ef8 <HAL_RCC_OscConfig+0x74>
 8001eea:	4b76      	ldr	r3, [pc, #472]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001eec:	681b      	ldr	r3, [r3, #0]
 8001eee:	4a75      	ldr	r2, [pc, #468]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001ef0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001ef4:	6013      	str	r3, [r2, #0]
 8001ef6:	e01d      	b.n	8001f34 <HAL_RCC_OscConfig+0xb0>
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	685b      	ldr	r3, [r3, #4]
 8001efc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001f00:	d10c      	bne.n	8001f1c <HAL_RCC_OscConfig+0x98>
 8001f02:	4b70      	ldr	r3, [pc, #448]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	4a6f      	ldr	r2, [pc, #444]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001f08:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001f0c:	6013      	str	r3, [r2, #0]
 8001f0e:	4b6d      	ldr	r3, [pc, #436]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001f10:	681b      	ldr	r3, [r3, #0]
 8001f12:	4a6c      	ldr	r2, [pc, #432]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001f14:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001f18:	6013      	str	r3, [r2, #0]
 8001f1a:	e00b      	b.n	8001f34 <HAL_RCC_OscConfig+0xb0>
 8001f1c:	4b69      	ldr	r3, [pc, #420]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001f1e:	681b      	ldr	r3, [r3, #0]
 8001f20:	4a68      	ldr	r2, [pc, #416]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001f22:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001f26:	6013      	str	r3, [r2, #0]
 8001f28:	4b66      	ldr	r3, [pc, #408]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001f2a:	681b      	ldr	r3, [r3, #0]
 8001f2c:	4a65      	ldr	r2, [pc, #404]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001f2e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001f32:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	685b      	ldr	r3, [r3, #4]
 8001f38:	2b00      	cmp	r3, #0
 8001f3a:	d013      	beq.n	8001f64 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001f3c:	f7ff f8d6 	bl	80010ec <HAL_GetTick>
 8001f40:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001f42:	e008      	b.n	8001f56 <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001f44:	f7ff f8d2 	bl	80010ec <HAL_GetTick>
 8001f48:	4602      	mov	r2, r0
 8001f4a:	693b      	ldr	r3, [r7, #16]
 8001f4c:	1ad3      	subs	r3, r2, r3
 8001f4e:	2b64      	cmp	r3, #100	; 0x64
 8001f50:	d901      	bls.n	8001f56 <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8001f52:	2303      	movs	r3, #3
 8001f54:	e207      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001f56:	4b5b      	ldr	r3, [pc, #364]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001f58:	681b      	ldr	r3, [r3, #0]
 8001f5a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f5e:	2b00      	cmp	r3, #0
 8001f60:	d0f0      	beq.n	8001f44 <HAL_RCC_OscConfig+0xc0>
 8001f62:	e014      	b.n	8001f8e <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001f64:	f7ff f8c2 	bl	80010ec <HAL_GetTick>
 8001f68:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001f6a:	e008      	b.n	8001f7e <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001f6c:	f7ff f8be 	bl	80010ec <HAL_GetTick>
 8001f70:	4602      	mov	r2, r0
 8001f72:	693b      	ldr	r3, [r7, #16]
 8001f74:	1ad3      	subs	r3, r2, r3
 8001f76:	2b64      	cmp	r3, #100	; 0x64
 8001f78:	d901      	bls.n	8001f7e <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8001f7a:	2303      	movs	r3, #3
 8001f7c:	e1f3      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001f7e:	4b51      	ldr	r3, [pc, #324]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001f80:	681b      	ldr	r3, [r3, #0]
 8001f82:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f86:	2b00      	cmp	r3, #0
 8001f88:	d1f0      	bne.n	8001f6c <HAL_RCC_OscConfig+0xe8>
 8001f8a:	e000      	b.n	8001f8e <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001f8c:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	681b      	ldr	r3, [r3, #0]
 8001f92:	f003 0302 	and.w	r3, r3, #2
 8001f96:	2b00      	cmp	r3, #0
 8001f98:	d063      	beq.n	8002062 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8001f9a:	4b4a      	ldr	r3, [pc, #296]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001f9c:	689b      	ldr	r3, [r3, #8]
 8001f9e:	f003 030c 	and.w	r3, r3, #12
 8001fa2:	2b00      	cmp	r3, #0
 8001fa4:	d00b      	beq.n	8001fbe <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8001fa6:	4b47      	ldr	r3, [pc, #284]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001fa8:	689b      	ldr	r3, [r3, #8]
 8001faa:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8001fae:	2b08      	cmp	r3, #8
 8001fb0:	d11c      	bne.n	8001fec <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8001fb2:	4b44      	ldr	r3, [pc, #272]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001fb4:	685b      	ldr	r3, [r3, #4]
 8001fb6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001fba:	2b00      	cmp	r3, #0
 8001fbc:	d116      	bne.n	8001fec <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001fbe:	4b41      	ldr	r3, [pc, #260]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001fc0:	681b      	ldr	r3, [r3, #0]
 8001fc2:	f003 0302 	and.w	r3, r3, #2
 8001fc6:	2b00      	cmp	r3, #0
 8001fc8:	d005      	beq.n	8001fd6 <HAL_RCC_OscConfig+0x152>
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	68db      	ldr	r3, [r3, #12]
 8001fce:	2b01      	cmp	r3, #1
 8001fd0:	d001      	beq.n	8001fd6 <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8001fd2:	2301      	movs	r3, #1
 8001fd4:	e1c7      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001fd6:	4b3b      	ldr	r3, [pc, #236]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001fd8:	681b      	ldr	r3, [r3, #0]
 8001fda:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001fde:	687b      	ldr	r3, [r7, #4]
 8001fe0:	691b      	ldr	r3, [r3, #16]
 8001fe2:	00db      	lsls	r3, r3, #3
 8001fe4:	4937      	ldr	r1, [pc, #220]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8001fe6:	4313      	orrs	r3, r2
 8001fe8:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001fea:	e03a      	b.n	8002062 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8001fec:	687b      	ldr	r3, [r7, #4]
 8001fee:	68db      	ldr	r3, [r3, #12]
 8001ff0:	2b00      	cmp	r3, #0
 8001ff2:	d020      	beq.n	8002036 <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8001ff4:	4b34      	ldr	r3, [pc, #208]	; (80020c8 <HAL_RCC_OscConfig+0x244>)
 8001ff6:	2201      	movs	r2, #1
 8001ff8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8001ffa:	f7ff f877 	bl	80010ec <HAL_GetTick>
 8001ffe:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002000:	e008      	b.n	8002014 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002002:	f7ff f873 	bl	80010ec <HAL_GetTick>
 8002006:	4602      	mov	r2, r0
 8002008:	693b      	ldr	r3, [r7, #16]
 800200a:	1ad3      	subs	r3, r2, r3
 800200c:	2b02      	cmp	r3, #2
 800200e:	d901      	bls.n	8002014 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8002010:	2303      	movs	r3, #3
 8002012:	e1a8      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002014:	4b2b      	ldr	r3, [pc, #172]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8002016:	681b      	ldr	r3, [r3, #0]
 8002018:	f003 0302 	and.w	r3, r3, #2
 800201c:	2b00      	cmp	r3, #0
 800201e:	d0f0      	beq.n	8002002 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002020:	4b28      	ldr	r3, [pc, #160]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8002022:	681b      	ldr	r3, [r3, #0]
 8002024:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002028:	687b      	ldr	r3, [r7, #4]
 800202a:	691b      	ldr	r3, [r3, #16]
 800202c:	00db      	lsls	r3, r3, #3
 800202e:	4925      	ldr	r1, [pc, #148]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8002030:	4313      	orrs	r3, r2
 8002032:	600b      	str	r3, [r1, #0]
 8002034:	e015      	b.n	8002062 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8002036:	4b24      	ldr	r3, [pc, #144]	; (80020c8 <HAL_RCC_OscConfig+0x244>)
 8002038:	2200      	movs	r2, #0
 800203a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800203c:	f7ff f856 	bl	80010ec <HAL_GetTick>
 8002040:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002042:	e008      	b.n	8002056 <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002044:	f7ff f852 	bl	80010ec <HAL_GetTick>
 8002048:	4602      	mov	r2, r0
 800204a:	693b      	ldr	r3, [r7, #16]
 800204c:	1ad3      	subs	r3, r2, r3
 800204e:	2b02      	cmp	r3, #2
 8002050:	d901      	bls.n	8002056 <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8002052:	2303      	movs	r3, #3
 8002054:	e187      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002056:	4b1b      	ldr	r3, [pc, #108]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8002058:	681b      	ldr	r3, [r3, #0]
 800205a:	f003 0302 	and.w	r3, r3, #2
 800205e:	2b00      	cmp	r3, #0
 8002060:	d1f0      	bne.n	8002044 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002062:	687b      	ldr	r3, [r7, #4]
 8002064:	681b      	ldr	r3, [r3, #0]
 8002066:	f003 0308 	and.w	r3, r3, #8
 800206a:	2b00      	cmp	r3, #0
 800206c:	d036      	beq.n	80020dc <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800206e:	687b      	ldr	r3, [r7, #4]
 8002070:	695b      	ldr	r3, [r3, #20]
 8002072:	2b00      	cmp	r3, #0
 8002074:	d016      	beq.n	80020a4 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8002076:	4b15      	ldr	r3, [pc, #84]	; (80020cc <HAL_RCC_OscConfig+0x248>)
 8002078:	2201      	movs	r2, #1
 800207a:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800207c:	f7ff f836 	bl	80010ec <HAL_GetTick>
 8002080:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002082:	e008      	b.n	8002096 <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002084:	f7ff f832 	bl	80010ec <HAL_GetTick>
 8002088:	4602      	mov	r2, r0
 800208a:	693b      	ldr	r3, [r7, #16]
 800208c:	1ad3      	subs	r3, r2, r3
 800208e:	2b02      	cmp	r3, #2
 8002090:	d901      	bls.n	8002096 <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8002092:	2303      	movs	r3, #3
 8002094:	e167      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002096:	4b0b      	ldr	r3, [pc, #44]	; (80020c4 <HAL_RCC_OscConfig+0x240>)
 8002098:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800209a:	f003 0302 	and.w	r3, r3, #2
 800209e:	2b00      	cmp	r3, #0
 80020a0:	d0f0      	beq.n	8002084 <HAL_RCC_OscConfig+0x200>
 80020a2:	e01b      	b.n	80020dc <HAL_RCC_OscConfig+0x258>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80020a4:	4b09      	ldr	r3, [pc, #36]	; (80020cc <HAL_RCC_OscConfig+0x248>)
 80020a6:	2200      	movs	r2, #0
 80020a8:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80020aa:	f7ff f81f 	bl	80010ec <HAL_GetTick>
 80020ae:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80020b0:	e00e      	b.n	80020d0 <HAL_RCC_OscConfig+0x24c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80020b2:	f7ff f81b 	bl	80010ec <HAL_GetTick>
 80020b6:	4602      	mov	r2, r0
 80020b8:	693b      	ldr	r3, [r7, #16]
 80020ba:	1ad3      	subs	r3, r2, r3
 80020bc:	2b02      	cmp	r3, #2
 80020be:	d907      	bls.n	80020d0 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 80020c0:	2303      	movs	r3, #3
 80020c2:	e150      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
 80020c4:	40023800 	.word	0x40023800
 80020c8:	42470000 	.word	0x42470000
 80020cc:	42470e80 	.word	0x42470e80
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80020d0:	4b88      	ldr	r3, [pc, #544]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 80020d2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80020d4:	f003 0302 	and.w	r3, r3, #2
 80020d8:	2b00      	cmp	r3, #0
 80020da:	d1ea      	bne.n	80020b2 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	f003 0304 	and.w	r3, r3, #4
 80020e4:	2b00      	cmp	r3, #0
 80020e6:	f000 8097 	beq.w	8002218 <HAL_RCC_OscConfig+0x394>
  {
    FlagStatus       pwrclkchanged = RESET;
 80020ea:	2300      	movs	r3, #0
 80020ec:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80020ee:	4b81      	ldr	r3, [pc, #516]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 80020f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020f2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80020f6:	2b00      	cmp	r3, #0
 80020f8:	d10f      	bne.n	800211a <HAL_RCC_OscConfig+0x296>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80020fa:	2300      	movs	r3, #0
 80020fc:	60bb      	str	r3, [r7, #8]
 80020fe:	4b7d      	ldr	r3, [pc, #500]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 8002100:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002102:	4a7c      	ldr	r2, [pc, #496]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 8002104:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002108:	6413      	str	r3, [r2, #64]	; 0x40
 800210a:	4b7a      	ldr	r3, [pc, #488]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 800210c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800210e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002112:	60bb      	str	r3, [r7, #8]
 8002114:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8002116:	2301      	movs	r3, #1
 8002118:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800211a:	4b77      	ldr	r3, [pc, #476]	; (80022f8 <HAL_RCC_OscConfig+0x474>)
 800211c:	681b      	ldr	r3, [r3, #0]
 800211e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002122:	2b00      	cmp	r3, #0
 8002124:	d118      	bne.n	8002158 <HAL_RCC_OscConfig+0x2d4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8002126:	4b74      	ldr	r3, [pc, #464]	; (80022f8 <HAL_RCC_OscConfig+0x474>)
 8002128:	681b      	ldr	r3, [r3, #0]
 800212a:	4a73      	ldr	r2, [pc, #460]	; (80022f8 <HAL_RCC_OscConfig+0x474>)
 800212c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002130:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8002132:	f7fe ffdb 	bl	80010ec <HAL_GetTick>
 8002136:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002138:	e008      	b.n	800214c <HAL_RCC_OscConfig+0x2c8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800213a:	f7fe ffd7 	bl	80010ec <HAL_GetTick>
 800213e:	4602      	mov	r2, r0
 8002140:	693b      	ldr	r3, [r7, #16]
 8002142:	1ad3      	subs	r3, r2, r3
 8002144:	2b02      	cmp	r3, #2
 8002146:	d901      	bls.n	800214c <HAL_RCC_OscConfig+0x2c8>
        {
          return HAL_TIMEOUT;
 8002148:	2303      	movs	r3, #3
 800214a:	e10c      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800214c:	4b6a      	ldr	r3, [pc, #424]	; (80022f8 <HAL_RCC_OscConfig+0x474>)
 800214e:	681b      	ldr	r3, [r3, #0]
 8002150:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002154:	2b00      	cmp	r3, #0
 8002156:	d0f0      	beq.n	800213a <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	689b      	ldr	r3, [r3, #8]
 800215c:	2b01      	cmp	r3, #1
 800215e:	d106      	bne.n	800216e <HAL_RCC_OscConfig+0x2ea>
 8002160:	4b64      	ldr	r3, [pc, #400]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 8002162:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002164:	4a63      	ldr	r2, [pc, #396]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 8002166:	f043 0301 	orr.w	r3, r3, #1
 800216a:	6713      	str	r3, [r2, #112]	; 0x70
 800216c:	e01c      	b.n	80021a8 <HAL_RCC_OscConfig+0x324>
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	689b      	ldr	r3, [r3, #8]
 8002172:	2b05      	cmp	r3, #5
 8002174:	d10c      	bne.n	8002190 <HAL_RCC_OscConfig+0x30c>
 8002176:	4b5f      	ldr	r3, [pc, #380]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 8002178:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800217a:	4a5e      	ldr	r2, [pc, #376]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 800217c:	f043 0304 	orr.w	r3, r3, #4
 8002180:	6713      	str	r3, [r2, #112]	; 0x70
 8002182:	4b5c      	ldr	r3, [pc, #368]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 8002184:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002186:	4a5b      	ldr	r2, [pc, #364]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 8002188:	f043 0301 	orr.w	r3, r3, #1
 800218c:	6713      	str	r3, [r2, #112]	; 0x70
 800218e:	e00b      	b.n	80021a8 <HAL_RCC_OscConfig+0x324>
 8002190:	4b58      	ldr	r3, [pc, #352]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 8002192:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002194:	4a57      	ldr	r2, [pc, #348]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 8002196:	f023 0301 	bic.w	r3, r3, #1
 800219a:	6713      	str	r3, [r2, #112]	; 0x70
 800219c:	4b55      	ldr	r3, [pc, #340]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 800219e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80021a0:	4a54      	ldr	r2, [pc, #336]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 80021a2:	f023 0304 	bic.w	r3, r3, #4
 80021a6:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	689b      	ldr	r3, [r3, #8]
 80021ac:	2b00      	cmp	r3, #0
 80021ae:	d015      	beq.n	80021dc <HAL_RCC_OscConfig+0x358>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80021b0:	f7fe ff9c 	bl	80010ec <HAL_GetTick>
 80021b4:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80021b6:	e00a      	b.n	80021ce <HAL_RCC_OscConfig+0x34a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80021b8:	f7fe ff98 	bl	80010ec <HAL_GetTick>
 80021bc:	4602      	mov	r2, r0
 80021be:	693b      	ldr	r3, [r7, #16]
 80021c0:	1ad3      	subs	r3, r2, r3
 80021c2:	f241 3288 	movw	r2, #5000	; 0x1388
 80021c6:	4293      	cmp	r3, r2
 80021c8:	d901      	bls.n	80021ce <HAL_RCC_OscConfig+0x34a>
        {
          return HAL_TIMEOUT;
 80021ca:	2303      	movs	r3, #3
 80021cc:	e0cb      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80021ce:	4b49      	ldr	r3, [pc, #292]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 80021d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80021d2:	f003 0302 	and.w	r3, r3, #2
 80021d6:	2b00      	cmp	r3, #0
 80021d8:	d0ee      	beq.n	80021b8 <HAL_RCC_OscConfig+0x334>
 80021da:	e014      	b.n	8002206 <HAL_RCC_OscConfig+0x382>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80021dc:	f7fe ff86 	bl	80010ec <HAL_GetTick>
 80021e0:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80021e2:	e00a      	b.n	80021fa <HAL_RCC_OscConfig+0x376>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80021e4:	f7fe ff82 	bl	80010ec <HAL_GetTick>
 80021e8:	4602      	mov	r2, r0
 80021ea:	693b      	ldr	r3, [r7, #16]
 80021ec:	1ad3      	subs	r3, r2, r3
 80021ee:	f241 3288 	movw	r2, #5000	; 0x1388
 80021f2:	4293      	cmp	r3, r2
 80021f4:	d901      	bls.n	80021fa <HAL_RCC_OscConfig+0x376>
        {
          return HAL_TIMEOUT;
 80021f6:	2303      	movs	r3, #3
 80021f8:	e0b5      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80021fa:	4b3e      	ldr	r3, [pc, #248]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 80021fc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80021fe:	f003 0302 	and.w	r3, r3, #2
 8002202:	2b00      	cmp	r3, #0
 8002204:	d1ee      	bne.n	80021e4 <HAL_RCC_OscConfig+0x360>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8002206:	7dfb      	ldrb	r3, [r7, #23]
 8002208:	2b01      	cmp	r3, #1
 800220a:	d105      	bne.n	8002218 <HAL_RCC_OscConfig+0x394>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 800220c:	4b39      	ldr	r3, [pc, #228]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 800220e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002210:	4a38      	ldr	r2, [pc, #224]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 8002212:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002216:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8002218:	687b      	ldr	r3, [r7, #4]
 800221a:	699b      	ldr	r3, [r3, #24]
 800221c:	2b00      	cmp	r3, #0
 800221e:	f000 80a1 	beq.w	8002364 <HAL_RCC_OscConfig+0x4e0>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8002222:	4b34      	ldr	r3, [pc, #208]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 8002224:	689b      	ldr	r3, [r3, #8]
 8002226:	f003 030c 	and.w	r3, r3, #12
 800222a:	2b08      	cmp	r3, #8
 800222c:	d05c      	beq.n	80022e8 <HAL_RCC_OscConfig+0x464>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800222e:	687b      	ldr	r3, [r7, #4]
 8002230:	699b      	ldr	r3, [r3, #24]
 8002232:	2b02      	cmp	r3, #2
 8002234:	d141      	bne.n	80022ba <HAL_RCC_OscConfig+0x436>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8002236:	4b31      	ldr	r3, [pc, #196]	; (80022fc <HAL_RCC_OscConfig+0x478>)
 8002238:	2200      	movs	r2, #0
 800223a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800223c:	f7fe ff56 	bl	80010ec <HAL_GetTick>
 8002240:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002242:	e008      	b.n	8002256 <HAL_RCC_OscConfig+0x3d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002244:	f7fe ff52 	bl	80010ec <HAL_GetTick>
 8002248:	4602      	mov	r2, r0
 800224a:	693b      	ldr	r3, [r7, #16]
 800224c:	1ad3      	subs	r3, r2, r3
 800224e:	2b02      	cmp	r3, #2
 8002250:	d901      	bls.n	8002256 <HAL_RCC_OscConfig+0x3d2>
          {
            return HAL_TIMEOUT;
 8002252:	2303      	movs	r3, #3
 8002254:	e087      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002256:	4b27      	ldr	r3, [pc, #156]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 8002258:	681b      	ldr	r3, [r3, #0]
 800225a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800225e:	2b00      	cmp	r3, #0
 8002260:	d1f0      	bne.n	8002244 <HAL_RCC_OscConfig+0x3c0>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8002262:	687b      	ldr	r3, [r7, #4]
 8002264:	69da      	ldr	r2, [r3, #28]
 8002266:	687b      	ldr	r3, [r7, #4]
 8002268:	6a1b      	ldr	r3, [r3, #32]
 800226a:	431a      	orrs	r2, r3
 800226c:	687b      	ldr	r3, [r7, #4]
 800226e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002270:	019b      	lsls	r3, r3, #6
 8002272:	431a      	orrs	r2, r3
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002278:	085b      	lsrs	r3, r3, #1
 800227a:	3b01      	subs	r3, #1
 800227c:	041b      	lsls	r3, r3, #16
 800227e:	431a      	orrs	r2, r3
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002284:	061b      	lsls	r3, r3, #24
 8002286:	491b      	ldr	r1, [pc, #108]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 8002288:	4313      	orrs	r3, r2
 800228a:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 800228c:	4b1b      	ldr	r3, [pc, #108]	; (80022fc <HAL_RCC_OscConfig+0x478>)
 800228e:	2201      	movs	r2, #1
 8002290:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002292:	f7fe ff2b 	bl	80010ec <HAL_GetTick>
 8002296:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002298:	e008      	b.n	80022ac <HAL_RCC_OscConfig+0x428>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800229a:	f7fe ff27 	bl	80010ec <HAL_GetTick>
 800229e:	4602      	mov	r2, r0
 80022a0:	693b      	ldr	r3, [r7, #16]
 80022a2:	1ad3      	subs	r3, r2, r3
 80022a4:	2b02      	cmp	r3, #2
 80022a6:	d901      	bls.n	80022ac <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 80022a8:	2303      	movs	r3, #3
 80022aa:	e05c      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80022ac:	4b11      	ldr	r3, [pc, #68]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 80022ae:	681b      	ldr	r3, [r3, #0]
 80022b0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80022b4:	2b00      	cmp	r3, #0
 80022b6:	d0f0      	beq.n	800229a <HAL_RCC_OscConfig+0x416>
 80022b8:	e054      	b.n	8002364 <HAL_RCC_OscConfig+0x4e0>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80022ba:	4b10      	ldr	r3, [pc, #64]	; (80022fc <HAL_RCC_OscConfig+0x478>)
 80022bc:	2200      	movs	r2, #0
 80022be:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80022c0:	f7fe ff14 	bl	80010ec <HAL_GetTick>
 80022c4:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80022c6:	e008      	b.n	80022da <HAL_RCC_OscConfig+0x456>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80022c8:	f7fe ff10 	bl	80010ec <HAL_GetTick>
 80022cc:	4602      	mov	r2, r0
 80022ce:	693b      	ldr	r3, [r7, #16]
 80022d0:	1ad3      	subs	r3, r2, r3
 80022d2:	2b02      	cmp	r3, #2
 80022d4:	d901      	bls.n	80022da <HAL_RCC_OscConfig+0x456>
          {
            return HAL_TIMEOUT;
 80022d6:	2303      	movs	r3, #3
 80022d8:	e045      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80022da:	4b06      	ldr	r3, [pc, #24]	; (80022f4 <HAL_RCC_OscConfig+0x470>)
 80022dc:	681b      	ldr	r3, [r3, #0]
 80022de:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80022e2:	2b00      	cmp	r3, #0
 80022e4:	d1f0      	bne.n	80022c8 <HAL_RCC_OscConfig+0x444>
 80022e6:	e03d      	b.n	8002364 <HAL_RCC_OscConfig+0x4e0>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80022e8:	687b      	ldr	r3, [r7, #4]
 80022ea:	699b      	ldr	r3, [r3, #24]
 80022ec:	2b01      	cmp	r3, #1
 80022ee:	d107      	bne.n	8002300 <HAL_RCC_OscConfig+0x47c>
      {
        return HAL_ERROR;
 80022f0:	2301      	movs	r3, #1
 80022f2:	e038      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
 80022f4:	40023800 	.word	0x40023800
 80022f8:	40007000 	.word	0x40007000
 80022fc:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8002300:	4b1b      	ldr	r3, [pc, #108]	; (8002370 <HAL_RCC_OscConfig+0x4ec>)
 8002302:	685b      	ldr	r3, [r3, #4]
 8002304:	60fb      	str	r3, [r7, #12]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8002306:	687b      	ldr	r3, [r7, #4]
 8002308:	699b      	ldr	r3, [r3, #24]
 800230a:	2b01      	cmp	r3, #1
 800230c:	d028      	beq.n	8002360 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800230e:	68fb      	ldr	r3, [r7, #12]
 8002310:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8002318:	429a      	cmp	r2, r3
 800231a:	d121      	bne.n	8002360 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800231c:	68fb      	ldr	r3, [r7, #12]
 800231e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8002322:	687b      	ldr	r3, [r7, #4]
 8002324:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002326:	429a      	cmp	r2, r3
 8002328:	d11a      	bne.n	8002360 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800232a:	68fa      	ldr	r2, [r7, #12]
 800232c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8002330:	4013      	ands	r3, r2
 8002332:	687a      	ldr	r2, [r7, #4]
 8002334:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8002336:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8002338:	4293      	cmp	r3, r2
 800233a:	d111      	bne.n	8002360 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800233c:	68fb      	ldr	r3, [r7, #12]
 800233e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8002342:	687b      	ldr	r3, [r7, #4]
 8002344:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002346:	085b      	lsrs	r3, r3, #1
 8002348:	3b01      	subs	r3, #1
 800234a:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800234c:	429a      	cmp	r2, r3
 800234e:	d107      	bne.n	8002360 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8002350:	68fb      	ldr	r3, [r7, #12]
 8002352:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800235a:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800235c:	429a      	cmp	r2, r3
 800235e:	d001      	beq.n	8002364 <HAL_RCC_OscConfig+0x4e0>
#endif
        {
          return HAL_ERROR;
 8002360:	2301      	movs	r3, #1
 8002362:	e000      	b.n	8002366 <HAL_RCC_OscConfig+0x4e2>
        }
      }
    }
  }
  return HAL_OK;
 8002364:	2300      	movs	r3, #0
}
 8002366:	4618      	mov	r0, r3
 8002368:	3718      	adds	r7, #24
 800236a:	46bd      	mov	sp, r7
 800236c:	bd80      	pop	{r7, pc}
 800236e:	bf00      	nop
 8002370:	40023800 	.word	0x40023800

08002374 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8002374:	b580      	push	{r7, lr}
 8002376:	b084      	sub	sp, #16
 8002378:	af00      	add	r7, sp, #0
 800237a:	6078      	str	r0, [r7, #4]
 800237c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	2b00      	cmp	r3, #0
 8002382:	d101      	bne.n	8002388 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8002384:	2301      	movs	r3, #1
 8002386:	e0cc      	b.n	8002522 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8002388:	4b68      	ldr	r3, [pc, #416]	; (800252c <HAL_RCC_ClockConfig+0x1b8>)
 800238a:	681b      	ldr	r3, [r3, #0]
 800238c:	f003 0307 	and.w	r3, r3, #7
 8002390:	683a      	ldr	r2, [r7, #0]
 8002392:	429a      	cmp	r2, r3
 8002394:	d90c      	bls.n	80023b0 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002396:	4b65      	ldr	r3, [pc, #404]	; (800252c <HAL_RCC_ClockConfig+0x1b8>)
 8002398:	683a      	ldr	r2, [r7, #0]
 800239a:	b2d2      	uxtb	r2, r2
 800239c:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800239e:	4b63      	ldr	r3, [pc, #396]	; (800252c <HAL_RCC_ClockConfig+0x1b8>)
 80023a0:	681b      	ldr	r3, [r3, #0]
 80023a2:	f003 0307 	and.w	r3, r3, #7
 80023a6:	683a      	ldr	r2, [r7, #0]
 80023a8:	429a      	cmp	r2, r3
 80023aa:	d001      	beq.n	80023b0 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 80023ac:	2301      	movs	r3, #1
 80023ae:	e0b8      	b.n	8002522 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80023b0:	687b      	ldr	r3, [r7, #4]
 80023b2:	681b      	ldr	r3, [r3, #0]
 80023b4:	f003 0302 	and.w	r3, r3, #2
 80023b8:	2b00      	cmp	r3, #0
 80023ba:	d020      	beq.n	80023fe <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	681b      	ldr	r3, [r3, #0]
 80023c0:	f003 0304 	and.w	r3, r3, #4
 80023c4:	2b00      	cmp	r3, #0
 80023c6:	d005      	beq.n	80023d4 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80023c8:	4b59      	ldr	r3, [pc, #356]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 80023ca:	689b      	ldr	r3, [r3, #8]
 80023cc:	4a58      	ldr	r2, [pc, #352]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 80023ce:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80023d2:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	f003 0308 	and.w	r3, r3, #8
 80023dc:	2b00      	cmp	r3, #0
 80023de:	d005      	beq.n	80023ec <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80023e0:	4b53      	ldr	r3, [pc, #332]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 80023e2:	689b      	ldr	r3, [r3, #8]
 80023e4:	4a52      	ldr	r2, [pc, #328]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 80023e6:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80023ea:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80023ec:	4b50      	ldr	r3, [pc, #320]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 80023ee:	689b      	ldr	r3, [r3, #8]
 80023f0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80023f4:	687b      	ldr	r3, [r7, #4]
 80023f6:	689b      	ldr	r3, [r3, #8]
 80023f8:	494d      	ldr	r1, [pc, #308]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 80023fa:	4313      	orrs	r3, r2
 80023fc:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	f003 0301 	and.w	r3, r3, #1
 8002406:	2b00      	cmp	r3, #0
 8002408:	d044      	beq.n	8002494 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800240a:	687b      	ldr	r3, [r7, #4]
 800240c:	685b      	ldr	r3, [r3, #4]
 800240e:	2b01      	cmp	r3, #1
 8002410:	d107      	bne.n	8002422 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002412:	4b47      	ldr	r3, [pc, #284]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800241a:	2b00      	cmp	r3, #0
 800241c:	d119      	bne.n	8002452 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800241e:	2301      	movs	r3, #1
 8002420:	e07f      	b.n	8002522 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8002422:	687b      	ldr	r3, [r7, #4]
 8002424:	685b      	ldr	r3, [r3, #4]
 8002426:	2b02      	cmp	r3, #2
 8002428:	d003      	beq.n	8002432 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800242e:	2b03      	cmp	r3, #3
 8002430:	d107      	bne.n	8002442 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002432:	4b3f      	ldr	r3, [pc, #252]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800243a:	2b00      	cmp	r3, #0
 800243c:	d109      	bne.n	8002452 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800243e:	2301      	movs	r3, #1
 8002440:	e06f      	b.n	8002522 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002442:	4b3b      	ldr	r3, [pc, #236]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 8002444:	681b      	ldr	r3, [r3, #0]
 8002446:	f003 0302 	and.w	r3, r3, #2
 800244a:	2b00      	cmp	r3, #0
 800244c:	d101      	bne.n	8002452 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800244e:	2301      	movs	r3, #1
 8002450:	e067      	b.n	8002522 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8002452:	4b37      	ldr	r3, [pc, #220]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 8002454:	689b      	ldr	r3, [r3, #8]
 8002456:	f023 0203 	bic.w	r2, r3, #3
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	685b      	ldr	r3, [r3, #4]
 800245e:	4934      	ldr	r1, [pc, #208]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 8002460:	4313      	orrs	r3, r2
 8002462:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8002464:	f7fe fe42 	bl	80010ec <HAL_GetTick>
 8002468:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800246a:	e00a      	b.n	8002482 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800246c:	f7fe fe3e 	bl	80010ec <HAL_GetTick>
 8002470:	4602      	mov	r2, r0
 8002472:	68fb      	ldr	r3, [r7, #12]
 8002474:	1ad3      	subs	r3, r2, r3
 8002476:	f241 3288 	movw	r2, #5000	; 0x1388
 800247a:	4293      	cmp	r3, r2
 800247c:	d901      	bls.n	8002482 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 800247e:	2303      	movs	r3, #3
 8002480:	e04f      	b.n	8002522 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8002482:	4b2b      	ldr	r3, [pc, #172]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 8002484:	689b      	ldr	r3, [r3, #8]
 8002486:	f003 020c 	and.w	r2, r3, #12
 800248a:	687b      	ldr	r3, [r7, #4]
 800248c:	685b      	ldr	r3, [r3, #4]
 800248e:	009b      	lsls	r3, r3, #2
 8002490:	429a      	cmp	r2, r3
 8002492:	d1eb      	bne.n	800246c <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8002494:	4b25      	ldr	r3, [pc, #148]	; (800252c <HAL_RCC_ClockConfig+0x1b8>)
 8002496:	681b      	ldr	r3, [r3, #0]
 8002498:	f003 0307 	and.w	r3, r3, #7
 800249c:	683a      	ldr	r2, [r7, #0]
 800249e:	429a      	cmp	r2, r3
 80024a0:	d20c      	bcs.n	80024bc <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80024a2:	4b22      	ldr	r3, [pc, #136]	; (800252c <HAL_RCC_ClockConfig+0x1b8>)
 80024a4:	683a      	ldr	r2, [r7, #0]
 80024a6:	b2d2      	uxtb	r2, r2
 80024a8:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80024aa:	4b20      	ldr	r3, [pc, #128]	; (800252c <HAL_RCC_ClockConfig+0x1b8>)
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	f003 0307 	and.w	r3, r3, #7
 80024b2:	683a      	ldr	r2, [r7, #0]
 80024b4:	429a      	cmp	r2, r3
 80024b6:	d001      	beq.n	80024bc <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 80024b8:	2301      	movs	r3, #1
 80024ba:	e032      	b.n	8002522 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	681b      	ldr	r3, [r3, #0]
 80024c0:	f003 0304 	and.w	r3, r3, #4
 80024c4:	2b00      	cmp	r3, #0
 80024c6:	d008      	beq.n	80024da <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80024c8:	4b19      	ldr	r3, [pc, #100]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 80024ca:	689b      	ldr	r3, [r3, #8]
 80024cc:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	68db      	ldr	r3, [r3, #12]
 80024d4:	4916      	ldr	r1, [pc, #88]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 80024d6:	4313      	orrs	r3, r2
 80024d8:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	681b      	ldr	r3, [r3, #0]
 80024de:	f003 0308 	and.w	r3, r3, #8
 80024e2:	2b00      	cmp	r3, #0
 80024e4:	d009      	beq.n	80024fa <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80024e6:	4b12      	ldr	r3, [pc, #72]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 80024e8:	689b      	ldr	r3, [r3, #8]
 80024ea:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80024ee:	687b      	ldr	r3, [r7, #4]
 80024f0:	691b      	ldr	r3, [r3, #16]
 80024f2:	00db      	lsls	r3, r3, #3
 80024f4:	490e      	ldr	r1, [pc, #56]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 80024f6:	4313      	orrs	r3, r2
 80024f8:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80024fa:	f000 f821 	bl	8002540 <HAL_RCC_GetSysClockFreq>
 80024fe:	4602      	mov	r2, r0
 8002500:	4b0b      	ldr	r3, [pc, #44]	; (8002530 <HAL_RCC_ClockConfig+0x1bc>)
 8002502:	689b      	ldr	r3, [r3, #8]
 8002504:	091b      	lsrs	r3, r3, #4
 8002506:	f003 030f 	and.w	r3, r3, #15
 800250a:	490a      	ldr	r1, [pc, #40]	; (8002534 <HAL_RCC_ClockConfig+0x1c0>)
 800250c:	5ccb      	ldrb	r3, [r1, r3]
 800250e:	fa22 f303 	lsr.w	r3, r2, r3
 8002512:	4a09      	ldr	r2, [pc, #36]	; (8002538 <HAL_RCC_ClockConfig+0x1c4>)
 8002514:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 8002516:	4b09      	ldr	r3, [pc, #36]	; (800253c <HAL_RCC_ClockConfig+0x1c8>)
 8002518:	681b      	ldr	r3, [r3, #0]
 800251a:	4618      	mov	r0, r3
 800251c:	f7fe fda2 	bl	8001064 <HAL_InitTick>

  return HAL_OK;
 8002520:	2300      	movs	r3, #0
}
 8002522:	4618      	mov	r0, r3
 8002524:	3710      	adds	r7, #16
 8002526:	46bd      	mov	sp, r7
 8002528:	bd80      	pop	{r7, pc}
 800252a:	bf00      	nop
 800252c:	40023c00 	.word	0x40023c00
 8002530:	40023800 	.word	0x40023800
 8002534:	080102cc 	.word	0x080102cc
 8002538:	20000000 	.word	0x20000000
 800253c:	20000004 	.word	0x20000004

08002540 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8002540:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002544:	b094      	sub	sp, #80	; 0x50
 8002546:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 8002548:	2300      	movs	r3, #0
 800254a:	647b      	str	r3, [r7, #68]	; 0x44
 800254c:	2300      	movs	r3, #0
 800254e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002550:	2300      	movs	r3, #0
 8002552:	643b      	str	r3, [r7, #64]	; 0x40
  uint32_t sysclockfreq = 0U;
 8002554:	2300      	movs	r3, #0
 8002556:	64bb      	str	r3, [r7, #72]	; 0x48

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8002558:	4b79      	ldr	r3, [pc, #484]	; (8002740 <HAL_RCC_GetSysClockFreq+0x200>)
 800255a:	689b      	ldr	r3, [r3, #8]
 800255c:	f003 030c 	and.w	r3, r3, #12
 8002560:	2b08      	cmp	r3, #8
 8002562:	d00d      	beq.n	8002580 <HAL_RCC_GetSysClockFreq+0x40>
 8002564:	2b08      	cmp	r3, #8
 8002566:	f200 80e1 	bhi.w	800272c <HAL_RCC_GetSysClockFreq+0x1ec>
 800256a:	2b00      	cmp	r3, #0
 800256c:	d002      	beq.n	8002574 <HAL_RCC_GetSysClockFreq+0x34>
 800256e:	2b04      	cmp	r3, #4
 8002570:	d003      	beq.n	800257a <HAL_RCC_GetSysClockFreq+0x3a>
 8002572:	e0db      	b.n	800272c <HAL_RCC_GetSysClockFreq+0x1ec>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8002574:	4b73      	ldr	r3, [pc, #460]	; (8002744 <HAL_RCC_GetSysClockFreq+0x204>)
 8002576:	64bb      	str	r3, [r7, #72]	; 0x48
       break;
 8002578:	e0db      	b.n	8002732 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 800257a:	4b73      	ldr	r3, [pc, #460]	; (8002748 <HAL_RCC_GetSysClockFreq+0x208>)
 800257c:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 800257e:	e0d8      	b.n	8002732 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8002580:	4b6f      	ldr	r3, [pc, #444]	; (8002740 <HAL_RCC_GetSysClockFreq+0x200>)
 8002582:	685b      	ldr	r3, [r3, #4]
 8002584:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002588:	647b      	str	r3, [r7, #68]	; 0x44
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800258a:	4b6d      	ldr	r3, [pc, #436]	; (8002740 <HAL_RCC_GetSysClockFreq+0x200>)
 800258c:	685b      	ldr	r3, [r3, #4]
 800258e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002592:	2b00      	cmp	r3, #0
 8002594:	d063      	beq.n	800265e <HAL_RCC_GetSysClockFreq+0x11e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8002596:	4b6a      	ldr	r3, [pc, #424]	; (8002740 <HAL_RCC_GetSysClockFreq+0x200>)
 8002598:	685b      	ldr	r3, [r3, #4]
 800259a:	099b      	lsrs	r3, r3, #6
 800259c:	2200      	movs	r2, #0
 800259e:	63bb      	str	r3, [r7, #56]	; 0x38
 80025a0:	63fa      	str	r2, [r7, #60]	; 0x3c
 80025a2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80025a4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80025a8:	633b      	str	r3, [r7, #48]	; 0x30
 80025aa:	2300      	movs	r3, #0
 80025ac:	637b      	str	r3, [r7, #52]	; 0x34
 80025ae:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 80025b2:	4622      	mov	r2, r4
 80025b4:	462b      	mov	r3, r5
 80025b6:	f04f 0000 	mov.w	r0, #0
 80025ba:	f04f 0100 	mov.w	r1, #0
 80025be:	0159      	lsls	r1, r3, #5
 80025c0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80025c4:	0150      	lsls	r0, r2, #5
 80025c6:	4602      	mov	r2, r0
 80025c8:	460b      	mov	r3, r1
 80025ca:	4621      	mov	r1, r4
 80025cc:	1a51      	subs	r1, r2, r1
 80025ce:	6139      	str	r1, [r7, #16]
 80025d0:	4629      	mov	r1, r5
 80025d2:	eb63 0301 	sbc.w	r3, r3, r1
 80025d6:	617b      	str	r3, [r7, #20]
 80025d8:	f04f 0200 	mov.w	r2, #0
 80025dc:	f04f 0300 	mov.w	r3, #0
 80025e0:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80025e4:	4659      	mov	r1, fp
 80025e6:	018b      	lsls	r3, r1, #6
 80025e8:	4651      	mov	r1, sl
 80025ea:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80025ee:	4651      	mov	r1, sl
 80025f0:	018a      	lsls	r2, r1, #6
 80025f2:	4651      	mov	r1, sl
 80025f4:	ebb2 0801 	subs.w	r8, r2, r1
 80025f8:	4659      	mov	r1, fp
 80025fa:	eb63 0901 	sbc.w	r9, r3, r1
 80025fe:	f04f 0200 	mov.w	r2, #0
 8002602:	f04f 0300 	mov.w	r3, #0
 8002606:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800260a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800260e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002612:	4690      	mov	r8, r2
 8002614:	4699      	mov	r9, r3
 8002616:	4623      	mov	r3, r4
 8002618:	eb18 0303 	adds.w	r3, r8, r3
 800261c:	60bb      	str	r3, [r7, #8]
 800261e:	462b      	mov	r3, r5
 8002620:	eb49 0303 	adc.w	r3, r9, r3
 8002624:	60fb      	str	r3, [r7, #12]
 8002626:	f04f 0200 	mov.w	r2, #0
 800262a:	f04f 0300 	mov.w	r3, #0
 800262e:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8002632:	4629      	mov	r1, r5
 8002634:	024b      	lsls	r3, r1, #9
 8002636:	4621      	mov	r1, r4
 8002638:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800263c:	4621      	mov	r1, r4
 800263e:	024a      	lsls	r2, r1, #9
 8002640:	4610      	mov	r0, r2
 8002642:	4619      	mov	r1, r3
 8002644:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002646:	2200      	movs	r2, #0
 8002648:	62bb      	str	r3, [r7, #40]	; 0x28
 800264a:	62fa      	str	r2, [r7, #44]	; 0x2c
 800264c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8002650:	f7fd fdc2 	bl	80001d8 <__aeabi_uldivmod>
 8002654:	4602      	mov	r2, r0
 8002656:	460b      	mov	r3, r1
 8002658:	4613      	mov	r3, r2
 800265a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800265c:	e058      	b.n	8002710 <HAL_RCC_GetSysClockFreq+0x1d0>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800265e:	4b38      	ldr	r3, [pc, #224]	; (8002740 <HAL_RCC_GetSysClockFreq+0x200>)
 8002660:	685b      	ldr	r3, [r3, #4]
 8002662:	099b      	lsrs	r3, r3, #6
 8002664:	2200      	movs	r2, #0
 8002666:	4618      	mov	r0, r3
 8002668:	4611      	mov	r1, r2
 800266a:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800266e:	623b      	str	r3, [r7, #32]
 8002670:	2300      	movs	r3, #0
 8002672:	627b      	str	r3, [r7, #36]	; 0x24
 8002674:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8002678:	4642      	mov	r2, r8
 800267a:	464b      	mov	r3, r9
 800267c:	f04f 0000 	mov.w	r0, #0
 8002680:	f04f 0100 	mov.w	r1, #0
 8002684:	0159      	lsls	r1, r3, #5
 8002686:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800268a:	0150      	lsls	r0, r2, #5
 800268c:	4602      	mov	r2, r0
 800268e:	460b      	mov	r3, r1
 8002690:	4641      	mov	r1, r8
 8002692:	ebb2 0a01 	subs.w	sl, r2, r1
 8002696:	4649      	mov	r1, r9
 8002698:	eb63 0b01 	sbc.w	fp, r3, r1
 800269c:	f04f 0200 	mov.w	r2, #0
 80026a0:	f04f 0300 	mov.w	r3, #0
 80026a4:	ea4f 138b 	mov.w	r3, fp, lsl #6
 80026a8:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 80026ac:	ea4f 128a 	mov.w	r2, sl, lsl #6
 80026b0:	ebb2 040a 	subs.w	r4, r2, sl
 80026b4:	eb63 050b 	sbc.w	r5, r3, fp
 80026b8:	f04f 0200 	mov.w	r2, #0
 80026bc:	f04f 0300 	mov.w	r3, #0
 80026c0:	00eb      	lsls	r3, r5, #3
 80026c2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80026c6:	00e2      	lsls	r2, r4, #3
 80026c8:	4614      	mov	r4, r2
 80026ca:	461d      	mov	r5, r3
 80026cc:	4643      	mov	r3, r8
 80026ce:	18e3      	adds	r3, r4, r3
 80026d0:	603b      	str	r3, [r7, #0]
 80026d2:	464b      	mov	r3, r9
 80026d4:	eb45 0303 	adc.w	r3, r5, r3
 80026d8:	607b      	str	r3, [r7, #4]
 80026da:	f04f 0200 	mov.w	r2, #0
 80026de:	f04f 0300 	mov.w	r3, #0
 80026e2:	e9d7 4500 	ldrd	r4, r5, [r7]
 80026e6:	4629      	mov	r1, r5
 80026e8:	028b      	lsls	r3, r1, #10
 80026ea:	4621      	mov	r1, r4
 80026ec:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80026f0:	4621      	mov	r1, r4
 80026f2:	028a      	lsls	r2, r1, #10
 80026f4:	4610      	mov	r0, r2
 80026f6:	4619      	mov	r1, r3
 80026f8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80026fa:	2200      	movs	r2, #0
 80026fc:	61bb      	str	r3, [r7, #24]
 80026fe:	61fa      	str	r2, [r7, #28]
 8002700:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8002704:	f7fd fd68 	bl	80001d8 <__aeabi_uldivmod>
 8002708:	4602      	mov	r2, r0
 800270a:	460b      	mov	r3, r1
 800270c:	4613      	mov	r3, r2
 800270e:	64fb      	str	r3, [r7, #76]	; 0x4c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8002710:	4b0b      	ldr	r3, [pc, #44]	; (8002740 <HAL_RCC_GetSysClockFreq+0x200>)
 8002712:	685b      	ldr	r3, [r3, #4]
 8002714:	0c1b      	lsrs	r3, r3, #16
 8002716:	f003 0303 	and.w	r3, r3, #3
 800271a:	3301      	adds	r3, #1
 800271c:	005b      	lsls	r3, r3, #1
 800271e:	643b      	str	r3, [r7, #64]	; 0x40

      sysclockfreq = pllvco/pllp;
 8002720:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8002722:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002724:	fbb2 f3f3 	udiv	r3, r2, r3
 8002728:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 800272a:	e002      	b.n	8002732 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 800272c:	4b05      	ldr	r3, [pc, #20]	; (8002744 <HAL_RCC_GetSysClockFreq+0x204>)
 800272e:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 8002730:	bf00      	nop
    }
  }
  return sysclockfreq;
 8002732:	6cbb      	ldr	r3, [r7, #72]	; 0x48
}
 8002734:	4618      	mov	r0, r3
 8002736:	3750      	adds	r7, #80	; 0x50
 8002738:	46bd      	mov	sp, r7
 800273a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800273e:	bf00      	nop
 8002740:	40023800 	.word	0x40023800
 8002744:	00f42400 	.word	0x00f42400
 8002748:	007a1200 	.word	0x007a1200

0800274c <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 800274c:	b580      	push	{r7, lr}
 800274e:	b082      	sub	sp, #8
 8002750:	af00      	add	r7, sp, #0
 8002752:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	2b00      	cmp	r3, #0
 8002758:	d101      	bne.n	800275e <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 800275a:	2301      	movs	r3, #1
 800275c:	e07b      	b.n	8002856 <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800275e:	687b      	ldr	r3, [r7, #4]
 8002760:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002762:	2b00      	cmp	r3, #0
 8002764:	d108      	bne.n	8002778 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8002766:	687b      	ldr	r3, [r7, #4]
 8002768:	685b      	ldr	r3, [r3, #4]
 800276a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800276e:	d009      	beq.n	8002784 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8002770:	687b      	ldr	r3, [r7, #4]
 8002772:	2200      	movs	r2, #0
 8002774:	61da      	str	r2, [r3, #28]
 8002776:	e005      	b.n	8002784 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	2200      	movs	r2, #0
 800277c:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800277e:	687b      	ldr	r3, [r7, #4]
 8002780:	2200      	movs	r2, #0
 8002782:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002784:	687b      	ldr	r3, [r7, #4]
 8002786:	2200      	movs	r2, #0
 8002788:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 800278a:	687b      	ldr	r3, [r7, #4]
 800278c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8002790:	b2db      	uxtb	r3, r3
 8002792:	2b00      	cmp	r3, #0
 8002794:	d106      	bne.n	80027a4 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8002796:	687b      	ldr	r3, [r7, #4]
 8002798:	2200      	movs	r2, #0
 800279a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 800279e:	6878      	ldr	r0, [r7, #4]
 80027a0:	f7fe fb90 	bl	8000ec4 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 80027a4:	687b      	ldr	r3, [r7, #4]
 80027a6:	2202      	movs	r2, #2
 80027a8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	681a      	ldr	r2, [r3, #0]
 80027b2:	687b      	ldr	r3, [r7, #4]
 80027b4:	681b      	ldr	r3, [r3, #0]
 80027b6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80027ba:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	685b      	ldr	r3, [r3, #4]
 80027c0:	f403 7282 	and.w	r2, r3, #260	; 0x104
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	689b      	ldr	r3, [r3, #8]
 80027c8:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 80027cc:	431a      	orrs	r2, r3
 80027ce:	687b      	ldr	r3, [r7, #4]
 80027d0:	68db      	ldr	r3, [r3, #12]
 80027d2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80027d6:	431a      	orrs	r2, r3
 80027d8:	687b      	ldr	r3, [r7, #4]
 80027da:	691b      	ldr	r3, [r3, #16]
 80027dc:	f003 0302 	and.w	r3, r3, #2
 80027e0:	431a      	orrs	r2, r3
 80027e2:	687b      	ldr	r3, [r7, #4]
 80027e4:	695b      	ldr	r3, [r3, #20]
 80027e6:	f003 0301 	and.w	r3, r3, #1
 80027ea:	431a      	orrs	r2, r3
 80027ec:	687b      	ldr	r3, [r7, #4]
 80027ee:	699b      	ldr	r3, [r3, #24]
 80027f0:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80027f4:	431a      	orrs	r2, r3
 80027f6:	687b      	ldr	r3, [r7, #4]
 80027f8:	69db      	ldr	r3, [r3, #28]
 80027fa:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80027fe:	431a      	orrs	r2, r3
 8002800:	687b      	ldr	r3, [r7, #4]
 8002802:	6a1b      	ldr	r3, [r3, #32]
 8002804:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002808:	ea42 0103 	orr.w	r1, r2, r3
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002810:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8002814:	687b      	ldr	r3, [r7, #4]
 8002816:	681b      	ldr	r3, [r3, #0]
 8002818:	430a      	orrs	r2, r1
 800281a:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	699b      	ldr	r3, [r3, #24]
 8002820:	0c1b      	lsrs	r3, r3, #16
 8002822:	f003 0104 	and.w	r1, r3, #4
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800282a:	f003 0210 	and.w	r2, r3, #16
 800282e:	687b      	ldr	r3, [r7, #4]
 8002830:	681b      	ldr	r3, [r3, #0]
 8002832:	430a      	orrs	r2, r1
 8002834:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8002836:	687b      	ldr	r3, [r7, #4]
 8002838:	681b      	ldr	r3, [r3, #0]
 800283a:	69da      	ldr	r2, [r3, #28]
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002844:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	2200      	movs	r2, #0
 800284a:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800284c:	687b      	ldr	r3, [r7, #4]
 800284e:	2201      	movs	r2, #1
 8002850:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 8002854:	2300      	movs	r3, #0
}
 8002856:	4618      	mov	r0, r3
 8002858:	3708      	adds	r7, #8
 800285a:	46bd      	mov	sp, r7
 800285c:	bd80      	pop	{r7, pc}

0800285e <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800285e:	b580      	push	{r7, lr}
 8002860:	b088      	sub	sp, #32
 8002862:	af00      	add	r7, sp, #0
 8002864:	60f8      	str	r0, [r7, #12]
 8002866:	60b9      	str	r1, [r7, #8]
 8002868:	603b      	str	r3, [r7, #0]
 800286a:	4613      	mov	r3, r2
 800286c:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 800286e:	2300      	movs	r3, #0
 8002870:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8002872:	68fb      	ldr	r3, [r7, #12]
 8002874:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8002878:	2b01      	cmp	r3, #1
 800287a:	d101      	bne.n	8002880 <HAL_SPI_Transmit+0x22>
 800287c:	2302      	movs	r3, #2
 800287e:	e126      	b.n	8002ace <HAL_SPI_Transmit+0x270>
 8002880:	68fb      	ldr	r3, [r7, #12]
 8002882:	2201      	movs	r2, #1
 8002884:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8002888:	f7fe fc30 	bl	80010ec <HAL_GetTick>
 800288c:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 800288e:	88fb      	ldrh	r3, [r7, #6]
 8002890:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 8002892:	68fb      	ldr	r3, [r7, #12]
 8002894:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8002898:	b2db      	uxtb	r3, r3
 800289a:	2b01      	cmp	r3, #1
 800289c:	d002      	beq.n	80028a4 <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 800289e:	2302      	movs	r3, #2
 80028a0:	77fb      	strb	r3, [r7, #31]
    goto error;
 80028a2:	e10b      	b.n	8002abc <HAL_SPI_Transmit+0x25e>
  }

  if ((pData == NULL) || (Size == 0U))
 80028a4:	68bb      	ldr	r3, [r7, #8]
 80028a6:	2b00      	cmp	r3, #0
 80028a8:	d002      	beq.n	80028b0 <HAL_SPI_Transmit+0x52>
 80028aa:	88fb      	ldrh	r3, [r7, #6]
 80028ac:	2b00      	cmp	r3, #0
 80028ae:	d102      	bne.n	80028b6 <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 80028b0:	2301      	movs	r3, #1
 80028b2:	77fb      	strb	r3, [r7, #31]
    goto error;
 80028b4:	e102      	b.n	8002abc <HAL_SPI_Transmit+0x25e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80028b6:	68fb      	ldr	r3, [r7, #12]
 80028b8:	2203      	movs	r2, #3
 80028ba:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80028be:	68fb      	ldr	r3, [r7, #12]
 80028c0:	2200      	movs	r2, #0
 80028c2:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80028c4:	68fb      	ldr	r3, [r7, #12]
 80028c6:	68ba      	ldr	r2, [r7, #8]
 80028c8:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 80028ca:	68fb      	ldr	r3, [r7, #12]
 80028cc:	88fa      	ldrh	r2, [r7, #6]
 80028ce:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 80028d0:	68fb      	ldr	r3, [r7, #12]
 80028d2:	88fa      	ldrh	r2, [r7, #6]
 80028d4:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80028d6:	68fb      	ldr	r3, [r7, #12]
 80028d8:	2200      	movs	r2, #0
 80028da:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 80028dc:	68fb      	ldr	r3, [r7, #12]
 80028de:	2200      	movs	r2, #0
 80028e0:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 80028e2:	68fb      	ldr	r3, [r7, #12]
 80028e4:	2200      	movs	r2, #0
 80028e6:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 80028e8:	68fb      	ldr	r3, [r7, #12]
 80028ea:	2200      	movs	r2, #0
 80028ec:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 80028ee:	68fb      	ldr	r3, [r7, #12]
 80028f0:	2200      	movs	r2, #0
 80028f2:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80028f4:	68fb      	ldr	r3, [r7, #12]
 80028f6:	689b      	ldr	r3, [r3, #8]
 80028f8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80028fc:	d10f      	bne.n	800291e <HAL_SPI_Transmit+0xc0>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 80028fe:	68fb      	ldr	r3, [r7, #12]
 8002900:	681b      	ldr	r3, [r3, #0]
 8002902:	681a      	ldr	r2, [r3, #0]
 8002904:	68fb      	ldr	r3, [r7, #12]
 8002906:	681b      	ldr	r3, [r3, #0]
 8002908:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800290c:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 800290e:	68fb      	ldr	r3, [r7, #12]
 8002910:	681b      	ldr	r3, [r3, #0]
 8002912:	681a      	ldr	r2, [r3, #0]
 8002914:	68fb      	ldr	r3, [r7, #12]
 8002916:	681b      	ldr	r3, [r3, #0]
 8002918:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800291c:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800291e:	68fb      	ldr	r3, [r7, #12]
 8002920:	681b      	ldr	r3, [r3, #0]
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002928:	2b40      	cmp	r3, #64	; 0x40
 800292a:	d007      	beq.n	800293c <HAL_SPI_Transmit+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 800292c:	68fb      	ldr	r3, [r7, #12]
 800292e:	681b      	ldr	r3, [r3, #0]
 8002930:	681a      	ldr	r2, [r3, #0]
 8002932:	68fb      	ldr	r3, [r7, #12]
 8002934:	681b      	ldr	r3, [r3, #0]
 8002936:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800293a:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800293c:	68fb      	ldr	r3, [r7, #12]
 800293e:	68db      	ldr	r3, [r3, #12]
 8002940:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8002944:	d14b      	bne.n	80029de <HAL_SPI_Transmit+0x180>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8002946:	68fb      	ldr	r3, [r7, #12]
 8002948:	685b      	ldr	r3, [r3, #4]
 800294a:	2b00      	cmp	r3, #0
 800294c:	d002      	beq.n	8002954 <HAL_SPI_Transmit+0xf6>
 800294e:	8afb      	ldrh	r3, [r7, #22]
 8002950:	2b01      	cmp	r3, #1
 8002952:	d13e      	bne.n	80029d2 <HAL_SPI_Transmit+0x174>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8002954:	68fb      	ldr	r3, [r7, #12]
 8002956:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002958:	881a      	ldrh	r2, [r3, #0]
 800295a:	68fb      	ldr	r3, [r7, #12]
 800295c:	681b      	ldr	r3, [r3, #0]
 800295e:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8002960:	68fb      	ldr	r3, [r7, #12]
 8002962:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002964:	1c9a      	adds	r2, r3, #2
 8002966:	68fb      	ldr	r3, [r7, #12]
 8002968:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 800296a:	68fb      	ldr	r3, [r7, #12]
 800296c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800296e:	b29b      	uxth	r3, r3
 8002970:	3b01      	subs	r3, #1
 8002972:	b29a      	uxth	r2, r3
 8002974:	68fb      	ldr	r3, [r7, #12]
 8002976:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8002978:	e02b      	b.n	80029d2 <HAL_SPI_Transmit+0x174>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800297a:	68fb      	ldr	r3, [r7, #12]
 800297c:	681b      	ldr	r3, [r3, #0]
 800297e:	689b      	ldr	r3, [r3, #8]
 8002980:	f003 0302 	and.w	r3, r3, #2
 8002984:	2b02      	cmp	r3, #2
 8002986:	d112      	bne.n	80029ae <HAL_SPI_Transmit+0x150>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8002988:	68fb      	ldr	r3, [r7, #12]
 800298a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800298c:	881a      	ldrh	r2, [r3, #0]
 800298e:	68fb      	ldr	r3, [r7, #12]
 8002990:	681b      	ldr	r3, [r3, #0]
 8002992:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8002994:	68fb      	ldr	r3, [r7, #12]
 8002996:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002998:	1c9a      	adds	r2, r3, #2
 800299a:	68fb      	ldr	r3, [r7, #12]
 800299c:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 800299e:	68fb      	ldr	r3, [r7, #12]
 80029a0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80029a2:	b29b      	uxth	r3, r3
 80029a4:	3b01      	subs	r3, #1
 80029a6:	b29a      	uxth	r2, r3
 80029a8:	68fb      	ldr	r3, [r7, #12]
 80029aa:	86da      	strh	r2, [r3, #54]	; 0x36
 80029ac:	e011      	b.n	80029d2 <HAL_SPI_Transmit+0x174>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80029ae:	f7fe fb9d 	bl	80010ec <HAL_GetTick>
 80029b2:	4602      	mov	r2, r0
 80029b4:	69bb      	ldr	r3, [r7, #24]
 80029b6:	1ad3      	subs	r3, r2, r3
 80029b8:	683a      	ldr	r2, [r7, #0]
 80029ba:	429a      	cmp	r2, r3
 80029bc:	d803      	bhi.n	80029c6 <HAL_SPI_Transmit+0x168>
 80029be:	683b      	ldr	r3, [r7, #0]
 80029c0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80029c4:	d102      	bne.n	80029cc <HAL_SPI_Transmit+0x16e>
 80029c6:	683b      	ldr	r3, [r7, #0]
 80029c8:	2b00      	cmp	r3, #0
 80029ca:	d102      	bne.n	80029d2 <HAL_SPI_Transmit+0x174>
        {
          errorcode = HAL_TIMEOUT;
 80029cc:	2303      	movs	r3, #3
 80029ce:	77fb      	strb	r3, [r7, #31]
          goto error;
 80029d0:	e074      	b.n	8002abc <HAL_SPI_Transmit+0x25e>
    while (hspi->TxXferCount > 0U)
 80029d2:	68fb      	ldr	r3, [r7, #12]
 80029d4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80029d6:	b29b      	uxth	r3, r3
 80029d8:	2b00      	cmp	r3, #0
 80029da:	d1ce      	bne.n	800297a <HAL_SPI_Transmit+0x11c>
 80029dc:	e04c      	b.n	8002a78 <HAL_SPI_Transmit+0x21a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80029de:	68fb      	ldr	r3, [r7, #12]
 80029e0:	685b      	ldr	r3, [r3, #4]
 80029e2:	2b00      	cmp	r3, #0
 80029e4:	d002      	beq.n	80029ec <HAL_SPI_Transmit+0x18e>
 80029e6:	8afb      	ldrh	r3, [r7, #22]
 80029e8:	2b01      	cmp	r3, #1
 80029ea:	d140      	bne.n	8002a6e <HAL_SPI_Transmit+0x210>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80029ec:	68fb      	ldr	r3, [r7, #12]
 80029ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029f0:	68fb      	ldr	r3, [r7, #12]
 80029f2:	681b      	ldr	r3, [r3, #0]
 80029f4:	330c      	adds	r3, #12
 80029f6:	7812      	ldrb	r2, [r2, #0]
 80029f8:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80029fa:	68fb      	ldr	r3, [r7, #12]
 80029fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029fe:	1c5a      	adds	r2, r3, #1
 8002a00:	68fb      	ldr	r3, [r7, #12]
 8002a02:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8002a04:	68fb      	ldr	r3, [r7, #12]
 8002a06:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002a08:	b29b      	uxth	r3, r3
 8002a0a:	3b01      	subs	r3, #1
 8002a0c:	b29a      	uxth	r2, r3
 8002a0e:	68fb      	ldr	r3, [r7, #12]
 8002a10:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 8002a12:	e02c      	b.n	8002a6e <HAL_SPI_Transmit+0x210>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8002a14:	68fb      	ldr	r3, [r7, #12]
 8002a16:	681b      	ldr	r3, [r3, #0]
 8002a18:	689b      	ldr	r3, [r3, #8]
 8002a1a:	f003 0302 	and.w	r3, r3, #2
 8002a1e:	2b02      	cmp	r3, #2
 8002a20:	d113      	bne.n	8002a4a <HAL_SPI_Transmit+0x1ec>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8002a22:	68fb      	ldr	r3, [r7, #12]
 8002a24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002a26:	68fb      	ldr	r3, [r7, #12]
 8002a28:	681b      	ldr	r3, [r3, #0]
 8002a2a:	330c      	adds	r3, #12
 8002a2c:	7812      	ldrb	r2, [r2, #0]
 8002a2e:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8002a30:	68fb      	ldr	r3, [r7, #12]
 8002a32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a34:	1c5a      	adds	r2, r3, #1
 8002a36:	68fb      	ldr	r3, [r7, #12]
 8002a38:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8002a3a:	68fb      	ldr	r3, [r7, #12]
 8002a3c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002a3e:	b29b      	uxth	r3, r3
 8002a40:	3b01      	subs	r3, #1
 8002a42:	b29a      	uxth	r2, r3
 8002a44:	68fb      	ldr	r3, [r7, #12]
 8002a46:	86da      	strh	r2, [r3, #54]	; 0x36
 8002a48:	e011      	b.n	8002a6e <HAL_SPI_Transmit+0x210>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8002a4a:	f7fe fb4f 	bl	80010ec <HAL_GetTick>
 8002a4e:	4602      	mov	r2, r0
 8002a50:	69bb      	ldr	r3, [r7, #24]
 8002a52:	1ad3      	subs	r3, r2, r3
 8002a54:	683a      	ldr	r2, [r7, #0]
 8002a56:	429a      	cmp	r2, r3
 8002a58:	d803      	bhi.n	8002a62 <HAL_SPI_Transmit+0x204>
 8002a5a:	683b      	ldr	r3, [r7, #0]
 8002a5c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a60:	d102      	bne.n	8002a68 <HAL_SPI_Transmit+0x20a>
 8002a62:	683b      	ldr	r3, [r7, #0]
 8002a64:	2b00      	cmp	r3, #0
 8002a66:	d102      	bne.n	8002a6e <HAL_SPI_Transmit+0x210>
        {
          errorcode = HAL_TIMEOUT;
 8002a68:	2303      	movs	r3, #3
 8002a6a:	77fb      	strb	r3, [r7, #31]
          goto error;
 8002a6c:	e026      	b.n	8002abc <HAL_SPI_Transmit+0x25e>
    while (hspi->TxXferCount > 0U)
 8002a6e:	68fb      	ldr	r3, [r7, #12]
 8002a70:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8002a72:	b29b      	uxth	r3, r3
 8002a74:	2b00      	cmp	r3, #0
 8002a76:	d1cd      	bne.n	8002a14 <HAL_SPI_Transmit+0x1b6>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8002a78:	69ba      	ldr	r2, [r7, #24]
 8002a7a:	6839      	ldr	r1, [r7, #0]
 8002a7c:	68f8      	ldr	r0, [r7, #12]
 8002a7e:	f000 f8b3 	bl	8002be8 <SPI_EndRxTxTransaction>
 8002a82:	4603      	mov	r3, r0
 8002a84:	2b00      	cmp	r3, #0
 8002a86:	d002      	beq.n	8002a8e <HAL_SPI_Transmit+0x230>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8002a88:	68fb      	ldr	r3, [r7, #12]
 8002a8a:	2220      	movs	r2, #32
 8002a8c:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8002a8e:	68fb      	ldr	r3, [r7, #12]
 8002a90:	689b      	ldr	r3, [r3, #8]
 8002a92:	2b00      	cmp	r3, #0
 8002a94:	d10a      	bne.n	8002aac <HAL_SPI_Transmit+0x24e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8002a96:	2300      	movs	r3, #0
 8002a98:	613b      	str	r3, [r7, #16]
 8002a9a:	68fb      	ldr	r3, [r7, #12]
 8002a9c:	681b      	ldr	r3, [r3, #0]
 8002a9e:	68db      	ldr	r3, [r3, #12]
 8002aa0:	613b      	str	r3, [r7, #16]
 8002aa2:	68fb      	ldr	r3, [r7, #12]
 8002aa4:	681b      	ldr	r3, [r3, #0]
 8002aa6:	689b      	ldr	r3, [r3, #8]
 8002aa8:	613b      	str	r3, [r7, #16]
 8002aaa:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8002aac:	68fb      	ldr	r3, [r7, #12]
 8002aae:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002ab0:	2b00      	cmp	r3, #0
 8002ab2:	d002      	beq.n	8002aba <HAL_SPI_Transmit+0x25c>
  {
    errorcode = HAL_ERROR;
 8002ab4:	2301      	movs	r3, #1
 8002ab6:	77fb      	strb	r3, [r7, #31]
 8002ab8:	e000      	b.n	8002abc <HAL_SPI_Transmit+0x25e>
  }

error:
 8002aba:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 8002abc:	68fb      	ldr	r3, [r7, #12]
 8002abe:	2201      	movs	r2, #1
 8002ac0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8002ac4:	68fb      	ldr	r3, [r7, #12]
 8002ac6:	2200      	movs	r2, #0
 8002ac8:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8002acc:	7ffb      	ldrb	r3, [r7, #31]
}
 8002ace:	4618      	mov	r0, r3
 8002ad0:	3720      	adds	r7, #32
 8002ad2:	46bd      	mov	sp, r7
 8002ad4:	bd80      	pop	{r7, pc}
	...

08002ad8 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8002ad8:	b580      	push	{r7, lr}
 8002ada:	b088      	sub	sp, #32
 8002adc:	af00      	add	r7, sp, #0
 8002ade:	60f8      	str	r0, [r7, #12]
 8002ae0:	60b9      	str	r1, [r7, #8]
 8002ae2:	603b      	str	r3, [r7, #0]
 8002ae4:	4613      	mov	r3, r2
 8002ae6:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8002ae8:	f7fe fb00 	bl	80010ec <HAL_GetTick>
 8002aec:	4602      	mov	r2, r0
 8002aee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002af0:	1a9b      	subs	r3, r3, r2
 8002af2:	683a      	ldr	r2, [r7, #0]
 8002af4:	4413      	add	r3, r2
 8002af6:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8002af8:	f7fe faf8 	bl	80010ec <HAL_GetTick>
 8002afc:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8002afe:	4b39      	ldr	r3, [pc, #228]	; (8002be4 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8002b00:	681b      	ldr	r3, [r3, #0]
 8002b02:	015b      	lsls	r3, r3, #5
 8002b04:	0d1b      	lsrs	r3, r3, #20
 8002b06:	69fa      	ldr	r2, [r7, #28]
 8002b08:	fb02 f303 	mul.w	r3, r2, r3
 8002b0c:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8002b0e:	e054      	b.n	8002bba <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8002b10:	683b      	ldr	r3, [r7, #0]
 8002b12:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002b16:	d050      	beq.n	8002bba <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8002b18:	f7fe fae8 	bl	80010ec <HAL_GetTick>
 8002b1c:	4602      	mov	r2, r0
 8002b1e:	69bb      	ldr	r3, [r7, #24]
 8002b20:	1ad3      	subs	r3, r2, r3
 8002b22:	69fa      	ldr	r2, [r7, #28]
 8002b24:	429a      	cmp	r2, r3
 8002b26:	d902      	bls.n	8002b2e <SPI_WaitFlagStateUntilTimeout+0x56>
 8002b28:	69fb      	ldr	r3, [r7, #28]
 8002b2a:	2b00      	cmp	r3, #0
 8002b2c:	d13d      	bne.n	8002baa <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8002b2e:	68fb      	ldr	r3, [r7, #12]
 8002b30:	681b      	ldr	r3, [r3, #0]
 8002b32:	685a      	ldr	r2, [r3, #4]
 8002b34:	68fb      	ldr	r3, [r7, #12]
 8002b36:	681b      	ldr	r3, [r3, #0]
 8002b38:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8002b3c:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8002b3e:	68fb      	ldr	r3, [r7, #12]
 8002b40:	685b      	ldr	r3, [r3, #4]
 8002b42:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002b46:	d111      	bne.n	8002b6c <SPI_WaitFlagStateUntilTimeout+0x94>
 8002b48:	68fb      	ldr	r3, [r7, #12]
 8002b4a:	689b      	ldr	r3, [r3, #8]
 8002b4c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002b50:	d004      	beq.n	8002b5c <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8002b52:	68fb      	ldr	r3, [r7, #12]
 8002b54:	689b      	ldr	r3, [r3, #8]
 8002b56:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002b5a:	d107      	bne.n	8002b6c <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8002b5c:	68fb      	ldr	r3, [r7, #12]
 8002b5e:	681b      	ldr	r3, [r3, #0]
 8002b60:	681a      	ldr	r2, [r3, #0]
 8002b62:	68fb      	ldr	r3, [r7, #12]
 8002b64:	681b      	ldr	r3, [r3, #0]
 8002b66:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002b6a:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8002b6c:	68fb      	ldr	r3, [r7, #12]
 8002b6e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002b70:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002b74:	d10f      	bne.n	8002b96 <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8002b76:	68fb      	ldr	r3, [r7, #12]
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	681a      	ldr	r2, [r3, #0]
 8002b7c:	68fb      	ldr	r3, [r7, #12]
 8002b7e:	681b      	ldr	r3, [r3, #0]
 8002b80:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002b84:	601a      	str	r2, [r3, #0]
 8002b86:	68fb      	ldr	r3, [r7, #12]
 8002b88:	681b      	ldr	r3, [r3, #0]
 8002b8a:	681a      	ldr	r2, [r3, #0]
 8002b8c:	68fb      	ldr	r3, [r7, #12]
 8002b8e:	681b      	ldr	r3, [r3, #0]
 8002b90:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002b94:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8002b96:	68fb      	ldr	r3, [r7, #12]
 8002b98:	2201      	movs	r2, #1
 8002b9a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8002b9e:	68fb      	ldr	r3, [r7, #12]
 8002ba0:	2200      	movs	r2, #0
 8002ba2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 8002ba6:	2303      	movs	r3, #3
 8002ba8:	e017      	b.n	8002bda <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8002baa:	697b      	ldr	r3, [r7, #20]
 8002bac:	2b00      	cmp	r3, #0
 8002bae:	d101      	bne.n	8002bb4 <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8002bb0:	2300      	movs	r3, #0
 8002bb2:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8002bb4:	697b      	ldr	r3, [r7, #20]
 8002bb6:	3b01      	subs	r3, #1
 8002bb8:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8002bba:	68fb      	ldr	r3, [r7, #12]
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	689a      	ldr	r2, [r3, #8]
 8002bc0:	68bb      	ldr	r3, [r7, #8]
 8002bc2:	4013      	ands	r3, r2
 8002bc4:	68ba      	ldr	r2, [r7, #8]
 8002bc6:	429a      	cmp	r2, r3
 8002bc8:	bf0c      	ite	eq
 8002bca:	2301      	moveq	r3, #1
 8002bcc:	2300      	movne	r3, #0
 8002bce:	b2db      	uxtb	r3, r3
 8002bd0:	461a      	mov	r2, r3
 8002bd2:	79fb      	ldrb	r3, [r7, #7]
 8002bd4:	429a      	cmp	r2, r3
 8002bd6:	d19b      	bne.n	8002b10 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8002bd8:	2300      	movs	r3, #0
}
 8002bda:	4618      	mov	r0, r3
 8002bdc:	3720      	adds	r7, #32
 8002bde:	46bd      	mov	sp, r7
 8002be0:	bd80      	pop	{r7, pc}
 8002be2:	bf00      	nop
 8002be4:	20000000 	.word	0x20000000

08002be8 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8002be8:	b580      	push	{r7, lr}
 8002bea:	b088      	sub	sp, #32
 8002bec:	af02      	add	r7, sp, #8
 8002bee:	60f8      	str	r0, [r7, #12]
 8002bf0:	60b9      	str	r1, [r7, #8]
 8002bf2:	607a      	str	r2, [r7, #4]
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8002bf4:	4b1b      	ldr	r3, [pc, #108]	; (8002c64 <SPI_EndRxTxTransaction+0x7c>)
 8002bf6:	681b      	ldr	r3, [r3, #0]
 8002bf8:	4a1b      	ldr	r2, [pc, #108]	; (8002c68 <SPI_EndRxTxTransaction+0x80>)
 8002bfa:	fba2 2303 	umull	r2, r3, r2, r3
 8002bfe:	0d5b      	lsrs	r3, r3, #21
 8002c00:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8002c04:	fb02 f303 	mul.w	r3, r2, r3
 8002c08:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8002c0a:	68fb      	ldr	r3, [r7, #12]
 8002c0c:	685b      	ldr	r3, [r3, #4]
 8002c0e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8002c12:	d112      	bne.n	8002c3a <SPI_EndRxTxTransaction+0x52>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	9300      	str	r3, [sp, #0]
 8002c18:	68bb      	ldr	r3, [r7, #8]
 8002c1a:	2200      	movs	r2, #0
 8002c1c:	2180      	movs	r1, #128	; 0x80
 8002c1e:	68f8      	ldr	r0, [r7, #12]
 8002c20:	f7ff ff5a 	bl	8002ad8 <SPI_WaitFlagStateUntilTimeout>
 8002c24:	4603      	mov	r3, r0
 8002c26:	2b00      	cmp	r3, #0
 8002c28:	d016      	beq.n	8002c58 <SPI_EndRxTxTransaction+0x70>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8002c2a:	68fb      	ldr	r3, [r7, #12]
 8002c2c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002c2e:	f043 0220 	orr.w	r2, r3, #32
 8002c32:	68fb      	ldr	r3, [r7, #12]
 8002c34:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8002c36:	2303      	movs	r3, #3
 8002c38:	e00f      	b.n	8002c5a <SPI_EndRxTxTransaction+0x72>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8002c3a:	697b      	ldr	r3, [r7, #20]
 8002c3c:	2b00      	cmp	r3, #0
 8002c3e:	d00a      	beq.n	8002c56 <SPI_EndRxTxTransaction+0x6e>
      {
        break;
      }
      count--;
 8002c40:	697b      	ldr	r3, [r7, #20]
 8002c42:	3b01      	subs	r3, #1
 8002c44:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8002c46:	68fb      	ldr	r3, [r7, #12]
 8002c48:	681b      	ldr	r3, [r3, #0]
 8002c4a:	689b      	ldr	r3, [r3, #8]
 8002c4c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002c50:	2b80      	cmp	r3, #128	; 0x80
 8002c52:	d0f2      	beq.n	8002c3a <SPI_EndRxTxTransaction+0x52>
 8002c54:	e000      	b.n	8002c58 <SPI_EndRxTxTransaction+0x70>
        break;
 8002c56:	bf00      	nop
  }

  return HAL_OK;
 8002c58:	2300      	movs	r3, #0
}
 8002c5a:	4618      	mov	r0, r3
 8002c5c:	3718      	adds	r7, #24
 8002c5e:	46bd      	mov	sp, r7
 8002c60:	bd80      	pop	{r7, pc}
 8002c62:	bf00      	nop
 8002c64:	20000000 	.word	0x20000000
 8002c68:	165e9f81 	.word	0x165e9f81

08002c6c <TEXT_Callback>:
 8002c6c:	b530      	push	{r4, r5, lr}
 8002c6e:	6845      	ldr	r5, [r0, #4]
 8002c70:	4604      	mov	r4, r0
 8002c72:	b085      	sub	sp, #20
 8002c74:	4628      	mov	r0, r5
 8002c76:	4621      	mov	r1, r4
 8002c78:	f009 f9c5 	bl	800c006 <WIDGET_HandleActive>
 8002c7c:	2800      	cmp	r0, #0
 8002c7e:	d056      	beq.n	8002d2e <TEXT_Callback+0xc2>
 8002c80:	6823      	ldr	r3, [r4, #0]
 8002c82:	2b0f      	cmp	r3, #15
 8002c84:	d01e      	beq.n	8002cc4 <TEXT_Callback+0x58>
 8002c86:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8002c8a:	d00e      	beq.n	8002caa <TEXT_Callback+0x3e>
 8002c8c:	2b0b      	cmp	r3, #11
 8002c8e:	d14b      	bne.n	8002d28 <TEXT_Callback+0xbc>
 8002c90:	4628      	mov	r0, r5
 8002c92:	f008 fded 	bl	800b870 <GUI_ALLOC_LockH>
 8002c96:	ad04      	add	r5, sp, #16
 8002c98:	f845 0d08 	str.w	r0, [r5, #-8]!
 8002c9c:	3044      	adds	r0, #68	; 0x44
 8002c9e:	f008 ffb7 	bl	800bc10 <GUI_ALLOC_FreePtr>
 8002ca2:	4628      	mov	r0, r5
 8002ca4:	f008 fdf2 	bl	800b88c <GUI_ALLOC_UnlockH>
 8002ca8:	e03e      	b.n	8002d28 <TEXT_Callback+0xbc>
 8002caa:	68e3      	ldr	r3, [r4, #12]
 8002cac:	b12b      	cbz	r3, 8002cba <TEXT_Callback+0x4e>
 8002cae:	7a1b      	ldrb	r3, [r3, #8]
 8002cb0:	2b00      	cmp	r3, #0
 8002cb2:	bf0c      	ite	eq
 8002cb4:	2102      	moveq	r1, #2
 8002cb6:	2101      	movne	r1, #1
 8002cb8:	e000      	b.n	8002cbc <TEXT_Callback+0x50>
 8002cba:	2103      	movs	r1, #3
 8002cbc:	4628      	mov	r0, r5
 8002cbe:	f002 f972 	bl	8004fa6 <WM_NotifyParent>
 8002cc2:	e031      	b.n	8002d28 <TEXT_Callback+0xbc>
 8002cc4:	4628      	mov	r0, r5
 8002cc6:	f008 fdd3 	bl	800b870 <GUI_ALLOC_LockH>
 8002cca:	9000      	str	r0, [sp, #0]
 8002ccc:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8002cce:	f006 fa53 	bl	8009178 <LCD_SetColor>
 8002cd2:	9b00      	ldr	r3, [sp, #0]
 8002cd4:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002cd6:	f008 f96f 	bl	800afb8 <GUI_SetFont>
 8002cda:	4628      	mov	r0, r5
 8002cdc:	f001 fd1e 	bl	800471c <WM_GetHasTrans>
 8002ce0:	b928      	cbnz	r0, 8002cee <TEXT_Callback+0x82>
 8002ce2:	9b00      	ldr	r3, [sp, #0]
 8002ce4:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8002ce6:	f006 fa3f 	bl	8009168 <LCD_SetBkColor>
 8002cea:	f007 ff4d 	bl	800ab88 <GUI_Clear>
 8002cee:	9b00      	ldr	r3, [sp, #0]
 8002cf0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002cf2:	b1ab      	cbz	r3, 8002d20 <TEXT_Callback+0xb4>
 8002cf4:	2002      	movs	r0, #2
 8002cf6:	f008 f995 	bl	800b024 <GUI_SetTextMode>
 8002cfa:	a802      	add	r0, sp, #8
 8002cfc:	f001 fed6 	bl	8004aac <WM_GetClientRect>
 8002d00:	9b00      	ldr	r3, [sp, #0]
 8002d02:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8002d04:	f008 fdb4 	bl	800b870 <GUI_ALLOC_LockH>
 8002d08:	9b00      	ldr	r3, [sp, #0]
 8002d0a:	9001      	str	r0, [sp, #4]
 8002d0c:	f9b3 2048 	ldrsh.w	r2, [r3, #72]	; 0x48
 8002d10:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8002d14:	a902      	add	r1, sp, #8
 8002d16:	f007 fd44 	bl	800a7a2 <GUI_DispStringInRectWrap>
 8002d1a:	a801      	add	r0, sp, #4
 8002d1c:	f008 fdb6 	bl	800b88c <GUI_ALLOC_UnlockH>
 8002d20:	4668      	mov	r0, sp
 8002d22:	f008 fdb3 	bl	800b88c <GUI_ALLOC_UnlockH>
 8002d26:	e002      	b.n	8002d2e <TEXT_Callback+0xc2>
 8002d28:	4620      	mov	r0, r4
 8002d2a:	f003 fbb3 	bl	8006494 <WM_DefaultProc>
 8002d2e:	b005      	add	sp, #20
 8002d30:	bd30      	pop	{r4, r5, pc}
	...

08002d34 <TEXT_CreateUser>:
 8002d34:	b570      	push	{r4, r5, r6, lr}
 8002d36:	b086      	sub	sp, #24
 8002d38:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8002d3a:	9500      	str	r5, [sp, #0]
 8002d3c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8002d3e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8002d40:	f045 0501 	orr.w	r5, r5, #1
 8002d44:	9501      	str	r5, [sp, #4]
 8002d46:	4d1a      	ldr	r5, [pc, #104]	; (8002db0 <TEXT_CreateUser+0x7c>)
 8002d48:	9502      	str	r5, [sp, #8]
 8002d4a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8002d4c:	3520      	adds	r5, #32
 8002d4e:	9503      	str	r5, [sp, #12]
 8002d50:	f002 ffa0 	bl	8005c94 <WM_CreateWindowAsChild>
 8002d54:	4605      	mov	r5, r0
 8002d56:	b340      	cbz	r0, 8002daa <TEXT_CreateUser+0x76>
 8002d58:	b18c      	cbz	r4, 8002d7e <TEXT_CreateUser+0x4a>
 8002d5a:	4620      	mov	r0, r4
 8002d5c:	f7fd fa34 	bl	80001c8 <strlen>
 8002d60:	3001      	adds	r0, #1
 8002d62:	f008 ff7f 	bl	800bc64 <GUI_ALLOC_AllocZero>
 8002d66:	4606      	mov	r6, r0
 8002d68:	b150      	cbz	r0, 8002d80 <TEXT_CreateUser+0x4c>
 8002d6a:	f008 fd81 	bl	800b870 <GUI_ALLOC_LockH>
 8002d6e:	4621      	mov	r1, r4
 8002d70:	9005      	str	r0, [sp, #20]
 8002d72:	f00d f9c3 	bl	80100fc <strcpy>
 8002d76:	a805      	add	r0, sp, #20
 8002d78:	f008 fd88 	bl	800b88c <GUI_ALLOC_UnlockH>
 8002d7c:	e000      	b.n	8002d80 <TEXT_CreateUser+0x4c>
 8002d7e:	4626      	mov	r6, r4
 8002d80:	4628      	mov	r0, r5
 8002d82:	f008 fd75 	bl	800b870 <GUI_ALLOC_LockH>
 8002d86:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002d88:	9005      	str	r0, [sp, #20]
 8002d8a:	2200      	movs	r2, #0
 8002d8c:	f009 f8f6 	bl	800bf7c <WIDGET__Init>
 8002d90:	9c05      	ldr	r4, [sp, #20]
 8002d92:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002d94:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 8002d98:	4b06      	ldr	r3, [pc, #24]	; (8002db4 <TEXT_CreateUser+0x80>)
 8002d9a:	6466      	str	r6, [r4, #68]	; 0x44
 8002d9c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002d9e:	3434      	adds	r4, #52	; 0x34
 8002da0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8002da4:	a805      	add	r0, sp, #20
 8002da6:	f008 fd71 	bl	800b88c <GUI_ALLOC_UnlockH>
 8002daa:	4628      	mov	r0, r5
 8002dac:	b006      	add	sp, #24
 8002dae:	bd70      	pop	{r4, r5, r6, pc}
 8002db0:	08002c6d 	.word	0x08002c6d
 8002db4:	2000000c 	.word	0x2000000c

08002db8 <TEXT_CreateIndirect>:
 8002db8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002dba:	b087      	sub	sp, #28
 8002dbc:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8002dc0:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8002dc4:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8002dc8:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8002dcc:	9100      	str	r1, [sp, #0]
 8002dce:	2102      	movs	r1, #2
 8002dd0:	9101      	str	r1, [sp, #4]
 8002dd2:	8a41      	ldrh	r1, [r0, #18]
 8002dd4:	9102      	str	r1, [sp, #8]
 8002dd6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8002dda:	9103      	str	r1, [sp, #12]
 8002ddc:	6844      	ldr	r4, [r0, #4]
 8002dde:	9404      	str	r4, [sp, #16]
 8002de0:	6984      	ldr	r4, [r0, #24]
 8002de2:	9405      	str	r4, [sp, #20]
 8002de4:	eb0e 0002 	add.w	r0, lr, r2
 8002de8:	18f9      	adds	r1, r7, r3
 8002dea:	4632      	mov	r2, r6
 8002dec:	462b      	mov	r3, r5
 8002dee:	f7ff ffa1 	bl	8002d34 <TEXT_CreateUser>
 8002df2:	b007      	add	sp, #28
 8002df4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002df6 <TEXT_SetFont>:
 8002df6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002df8:	460c      	mov	r4, r1
 8002dfa:	4605      	mov	r5, r0
 8002dfc:	b160      	cbz	r0, 8002e18 <TEXT_SetFont+0x22>
 8002dfe:	f008 fd37 	bl	800b870 <GUI_ALLOC_LockH>
 8002e02:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8002e04:	9001      	str	r0, [sp, #4]
 8002e06:	42a2      	cmp	r2, r4
 8002e08:	d003      	beq.n	8002e12 <TEXT_SetFont+0x1c>
 8002e0a:	6344      	str	r4, [r0, #52]	; 0x34
 8002e0c:	4628      	mov	r0, r5
 8002e0e:	f002 ff13 	bl	8005c38 <WM_InvalidateWindow>
 8002e12:	a801      	add	r0, sp, #4
 8002e14:	f008 fd3a 	bl	800b88c <GUI_ALLOC_UnlockH>
 8002e18:	b003      	add	sp, #12
 8002e1a:	bd30      	pop	{r4, r5, pc}

08002e1c <TEXT_SetText>:
 8002e1c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002e1e:	460c      	mov	r4, r1
 8002e20:	4605      	mov	r5, r0
 8002e22:	b300      	cbz	r0, 8002e66 <TEXT_SetText+0x4a>
 8002e24:	f008 fd24 	bl	800b870 <GUI_ALLOC_LockH>
 8002e28:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8002e2a:	9000      	str	r0, [sp, #0]
 8002e2c:	4668      	mov	r0, sp
 8002e2e:	9301      	str	r3, [sp, #4]
 8002e30:	f008 fd2c 	bl	800b88c <GUI_ALLOC_UnlockH>
 8002e34:	4621      	mov	r1, r4
 8002e36:	a801      	add	r0, sp, #4
 8002e38:	f006 fa9a 	bl	8009370 <GUI__SetText>
 8002e3c:	f1d0 0401 	rsbs	r4, r0, #1
 8002e40:	bf38      	it	cc
 8002e42:	2400      	movcc	r4, #0
 8002e44:	b984      	cbnz	r4, 8002e68 <TEXT_SetText+0x4c>
 8002e46:	4628      	mov	r0, r5
 8002e48:	f008 fd12 	bl	800b870 <GUI_ALLOC_LockH>
 8002e4c:	9a01      	ldr	r2, [sp, #4]
 8002e4e:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8002e50:	9000      	str	r0, [sp, #0]
 8002e52:	4291      	cmp	r1, r2
 8002e54:	bf18      	it	ne
 8002e56:	6442      	strne	r2, [r0, #68]	; 0x44
 8002e58:	4668      	mov	r0, sp
 8002e5a:	f008 fd17 	bl	800b88c <GUI_ALLOC_UnlockH>
 8002e5e:	4628      	mov	r0, r5
 8002e60:	f002 feea 	bl	8005c38 <WM_InvalidateWindow>
 8002e64:	e000      	b.n	8002e68 <TEXT_SetText+0x4c>
 8002e66:	2401      	movs	r4, #1
 8002e68:	4620      	mov	r0, r4
 8002e6a:	b003      	add	sp, #12
 8002e6c:	bd30      	pop	{r4, r5, pc}

08002e6e <PROGBAR_Callback>:
 8002e6e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002e70:	6845      	ldr	r5, [r0, #4]
 8002e72:	4604      	mov	r4, r0
 8002e74:	4621      	mov	r1, r4
 8002e76:	4628      	mov	r0, r5
 8002e78:	f009 f8c5 	bl	800c006 <WIDGET_HandleActive>
 8002e7c:	b310      	cbz	r0, 8002ec4 <PROGBAR_Callback+0x56>
 8002e7e:	6823      	ldr	r3, [r4, #0]
 8002e80:	2b0b      	cmp	r3, #11
 8002e82:	d010      	beq.n	8002ea6 <PROGBAR_Callback+0x38>
 8002e84:	2b0f      	cmp	r3, #15
 8002e86:	d11a      	bne.n	8002ebe <PROGBAR_Callback+0x50>
 8002e88:	4628      	mov	r0, r5
 8002e8a:	f008 fcf1 	bl	800b870 <GUI_ALLOC_LockH>
 8002e8e:	ab02      	add	r3, sp, #8
 8002e90:	f843 0d04 	str.w	r0, [r3, #-4]!
 8002e94:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8002e96:	6814      	ldr	r4, [r2, #0]
 8002e98:	4618      	mov	r0, r3
 8002e9a:	f008 fcf7 	bl	800b88c <GUI_ALLOC_UnlockH>
 8002e9e:	b18c      	cbz	r4, 8002ec4 <PROGBAR_Callback+0x56>
 8002ea0:	4628      	mov	r0, r5
 8002ea2:	47a0      	blx	r4
 8002ea4:	e00e      	b.n	8002ec4 <PROGBAR_Callback+0x56>
 8002ea6:	4628      	mov	r0, r5
 8002ea8:	f008 fce2 	bl	800b870 <GUI_ALLOC_LockH>
 8002eac:	ad02      	add	r5, sp, #8
 8002eae:	f845 0d04 	str.w	r0, [r5, #-4]!
 8002eb2:	3038      	adds	r0, #56	; 0x38
 8002eb4:	f008 feac 	bl	800bc10 <GUI_ALLOC_FreePtr>
 8002eb8:	4628      	mov	r0, r5
 8002eba:	f008 fce7 	bl	800b88c <GUI_ALLOC_UnlockH>
 8002ebe:	4620      	mov	r0, r4
 8002ec0:	f003 fae8 	bl	8006494 <WM_DefaultProc>
 8002ec4:	b003      	add	sp, #12
 8002ec6:	bd30      	pop	{r4, r5, pc}

08002ec8 <_SetValue>:
 8002ec8:	b513      	push	{r0, r1, r4, lr}
 8002eca:	ab02      	add	r3, sp, #8
 8002ecc:	6342      	str	r2, [r0, #52]	; 0x34
 8002ece:	f843 1d04 	str.w	r1, [r3, #-4]!
 8002ed2:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8002ed4:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002ed6:	1a52      	subs	r2, r2, r1
 8002ed8:	2464      	movs	r4, #100	; 0x64
 8002eda:	4362      	muls	r2, r4
 8002edc:	1a40      	subs	r0, r0, r1
 8002ede:	fb92 f0f0 	sdiv	r0, r2, r0
 8002ee2:	4619      	mov	r1, r3
 8002ee4:	f006 fcb0 	bl	8009848 <GUI_AddDecMin>
 8002ee8:	9b01      	ldr	r3, [sp, #4]
 8002eea:	1c5a      	adds	r2, r3, #1
 8002eec:	9201      	str	r2, [sp, #4]
 8002eee:	2225      	movs	r2, #37	; 0x25
 8002ef0:	701a      	strb	r2, [r3, #0]
 8002ef2:	9b01      	ldr	r3, [sp, #4]
 8002ef4:	2200      	movs	r2, #0
 8002ef6:	701a      	strb	r2, [r3, #0]
 8002ef8:	b002      	add	sp, #8
 8002efa:	bd10      	pop	{r4, pc}

08002efc <PROGBAR__GetTextLocked>:
 8002efc:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8002efe:	f008 bcb7 	b.w	800b870 <GUI_ALLOC_LockH>

08002f02 <PROGBAR__GetTextRect>:
 8002f02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002f06:	f9b0 3000 	ldrsh.w	r3, [r0]
 8002f0a:	f9b0 7004 	ldrsh.w	r7, [r0, #4]
 8002f0e:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8002f12:	1aff      	subs	r7, r7, r3
 8002f14:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8002f18:	4604      	mov	r4, r0
 8002f1a:	4610      	mov	r0, r2
 8002f1c:	ebc3 0808 	rsb	r8, r3, r8
 8002f20:	460d      	mov	r5, r1
 8002f22:	f007 fcdd 	bl	800a8e0 <GUI_GetStringDistX>
 8002f26:	4606      	mov	r6, r0
 8002f28:	f007 ff74 	bl	800ae14 <GUI_GetFontSizeY>
 8002f2c:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 8002f30:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8002f32:	f003 0303 	and.w	r3, r3, #3
 8002f36:	2b01      	cmp	r3, #1
 8002f38:	f107 0701 	add.w	r7, r7, #1
 8002f3c:	f108 0801 	add.w	r8, r8, #1
 8002f40:	6812      	ldr	r2, [r2, #0]
 8002f42:	d006      	beq.n	8002f52 <PROGBAR__GetTextRect+0x50>
 8002f44:	2b02      	cmp	r3, #2
 8002f46:	d109      	bne.n	8002f5c <PROGBAR__GetTextRect+0x5a>
 8002f48:	1bbf      	subs	r7, r7, r6
 8002f4a:	fb97 f3f3 	sdiv	r3, r7, r3
 8002f4e:	802b      	strh	r3, [r5, #0]
 8002f50:	e005      	b.n	8002f5e <PROGBAR__GetTextRect+0x5c>
 8002f52:	43d2      	mvns	r2, r2
 8002f54:	4417      	add	r7, r2
 8002f56:	1bbf      	subs	r7, r7, r6
 8002f58:	802f      	strh	r7, [r5, #0]
 8002f5a:	e000      	b.n	8002f5e <PROGBAR__GetTextRect+0x5c>
 8002f5c:	802a      	strh	r2, [r5, #0]
 8002f5e:	8fa2      	ldrh	r2, [r4, #60]	; 0x3c
 8002f60:	882b      	ldrh	r3, [r5, #0]
 8002f62:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8002f64:	441a      	add	r2, r3
 8002f66:	ebc0 0808 	rsb	r8, r0, r8
 8002f6a:	2302      	movs	r3, #2
 8002f6c:	fb98 f3f3 	sdiv	r3, r8, r3
 8002f70:	b292      	uxth	r2, r2
 8002f72:	440b      	add	r3, r1
 8002f74:	b29b      	uxth	r3, r3
 8002f76:	802a      	strh	r2, [r5, #0]
 8002f78:	3801      	subs	r0, #1
 8002f7a:	3a01      	subs	r2, #1
 8002f7c:	806b      	strh	r3, [r5, #2]
 8002f7e:	4416      	add	r6, r2
 8002f80:	4403      	add	r3, r0
 8002f82:	80ae      	strh	r6, [r5, #4]
 8002f84:	80eb      	strh	r3, [r5, #6]
 8002f86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002f8a <PROGBAR__Value2Pos>:
 8002f8a:	b570      	push	{r4, r5, r6, lr}
 8002f8c:	f890 3068 	ldrb.w	r3, [r0, #104]	; 0x68
 8002f90:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8002f92:	f013 0601 	ands.w	r6, r3, #1
 8002f96:	bf15      	itete	ne
 8002f98:	f9b0 3002 	ldrshne.w	r3, [r0, #2]
 8002f9c:	f9b0 3000 	ldrsheq.w	r3, [r0]
 8002fa0:	f9b0 5006 	ldrshne.w	r5, [r0, #6]
 8002fa4:	f9b0 5004 	ldrsheq.w	r5, [r0, #4]
 8002fa8:	6814      	ldr	r4, [r2, #0]
 8002faa:	6c82      	ldr	r2, [r0, #72]	; 0x48
 8002fac:	1aed      	subs	r5, r5, r3
 8002fae:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8002fb0:	3501      	adds	r5, #1
 8002fb2:	4299      	cmp	r1, r3
 8002fb4:	bfb8      	it	lt
 8002fb6:	4619      	movlt	r1, r3
 8002fb8:	4291      	cmp	r1, r2
 8002fba:	bfa8      	it	ge
 8002fbc:	4611      	movge	r1, r2
 8002fbe:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 8002fc2:	b10e      	cbz	r6, 8002fc8 <PROGBAR__Value2Pos+0x3e>
 8002fc4:	1a51      	subs	r1, r2, r1
 8002fc6:	e000      	b.n	8002fca <PROGBAR__Value2Pos+0x40>
 8002fc8:	1ac9      	subs	r1, r1, r3
 8002fca:	4369      	muls	r1, r5
 8002fcc:	1ad3      	subs	r3, r2, r3
 8002fce:	fb91 f0f3 	sdiv	r0, r1, r3
 8002fd2:	4420      	add	r0, r4
 8002fd4:	bd70      	pop	{r4, r5, r6, pc}
	...

08002fd8 <PROGBAR_CreateUser>:
 8002fd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002fdc:	b087      	sub	sp, #28
 8002fde:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8002fe0:	9400      	str	r4, [sp, #0]
 8002fe2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8002fe4:	9401      	str	r4, [sp, #4]
 8002fe6:	4c27      	ldr	r4, [pc, #156]	; (8003084 <PROGBAR_CreateUser+0xac>)
 8002fe8:	9402      	str	r4, [sp, #8]
 8002fea:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8002fec:	3440      	adds	r4, #64	; 0x40
 8002fee:	9403      	str	r4, [sp, #12]
 8002ff0:	f002 fe50 	bl	8005c94 <WM_CreateWindowAsChild>
 8002ff4:	4607      	mov	r7, r0
 8002ff6:	2800      	cmp	r0, #0
 8002ff8:	d040      	beq.n	800307c <PROGBAR_CreateUser+0xa4>
 8002ffa:	2005      	movs	r0, #5
 8002ffc:	f008 fe32 	bl	800bc64 <GUI_ALLOC_AllocZero>
 8003000:	4680      	mov	r8, r0
 8003002:	2800      	cmp	r0, #0
 8003004:	d03a      	beq.n	800307c <PROGBAR_CreateUser+0xa4>
 8003006:	4638      	mov	r0, r7
 8003008:	f008 fc32 	bl	800b870 <GUI_ALLOC_LockH>
 800300c:	2200      	movs	r2, #0
 800300e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8003010:	9004      	str	r0, [sp, #16]
 8003012:	f8df 907c 	ldr.w	r9, [pc, #124]	; 8003090 <PROGBAR_CreateUser+0xb8>
 8003016:	4d1c      	ldr	r5, [pc, #112]	; (8003088 <PROGBAR_CreateUser+0xb0>)
 8003018:	f008 ffb0 	bl	800bf7c <WIDGET__Init>
 800301c:	4638      	mov	r0, r7
 800301e:	491b      	ldr	r1, [pc, #108]	; (800308c <PROGBAR_CreateUser+0xb4>)
 8003020:	f009 f8de 	bl	800c1e0 <WIDGET_SetEffect>
 8003024:	9e04      	ldr	r6, [sp, #16]
 8003026:	f8d9 3000 	ldr.w	r3, [r9]
 800302a:	6673      	str	r3, [r6, #100]	; 0x64
 800302c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800302e:	f106 044c 	add.w	r4, r6, #76	; 0x4c
 8003032:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003034:	e895 0003 	ldmia.w	r5, {r0, r1}
 8003038:	2302      	movs	r3, #2
 800303a:	e884 0003 	stmia.w	r4, {r0, r1}
 800303e:	f8a6 3040 	strh.w	r3, [r6, #64]	; 0x40
 8003042:	2364      	movs	r3, #100	; 0x64
 8003044:	64b3      	str	r3, [r6, #72]	; 0x48
 8003046:	2400      	movs	r4, #0
 8003048:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800304a:	f886 3068 	strb.w	r3, [r6, #104]	; 0x68
 800304e:	6474      	str	r4, [r6, #68]	; 0x44
 8003050:	f8c6 8038 	str.w	r8, [r6, #56]	; 0x38
 8003054:	4640      	mov	r0, r8
 8003056:	f008 fc0b 	bl	800b870 <GUI_ALLOC_LockH>
 800305a:	4622      	mov	r2, r4
 800305c:	4601      	mov	r1, r0
 800305e:	9005      	str	r0, [sp, #20]
 8003060:	9804      	ldr	r0, [sp, #16]
 8003062:	f7ff ff31 	bl	8002ec8 <_SetValue>
 8003066:	a805      	add	r0, sp, #20
 8003068:	f008 fc10 	bl	800b88c <GUI_ALLOC_UnlockH>
 800306c:	a804      	add	r0, sp, #16
 800306e:	f008 fc0d 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003072:	f8d9 3000 	ldr.w	r3, [r9]
 8003076:	4638      	mov	r0, r7
 8003078:	685b      	ldr	r3, [r3, #4]
 800307a:	4798      	blx	r3
 800307c:	4638      	mov	r0, r7
 800307e:	b007      	add	sp, #28
 8003080:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003084:	08002e6f 	.word	0x08002e6f
 8003088:	20000020 	.word	0x20000020
 800308c:	0801248c 	.word	0x0801248c
 8003090:	2000001c 	.word	0x2000001c

08003094 <PROGBAR_CreateIndirect>:
 8003094:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003096:	b087      	sub	sp, #28
 8003098:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 800309c:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 80030a0:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 80030a4:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 80030a8:	9100      	str	r1, [sp, #0]
 80030aa:	2100      	movs	r1, #0
 80030ac:	9101      	str	r1, [sp, #4]
 80030ae:	8a41      	ldrh	r1, [r0, #18]
 80030b0:	9102      	str	r1, [sp, #8]
 80030b2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80030b6:	9103      	str	r1, [sp, #12]
 80030b8:	6984      	ldr	r4, [r0, #24]
 80030ba:	9404      	str	r4, [sp, #16]
 80030bc:	eb0e 0002 	add.w	r0, lr, r2
 80030c0:	18f9      	adds	r1, r7, r3
 80030c2:	4632      	mov	r2, r6
 80030c4:	462b      	mov	r3, r5
 80030c6:	f7ff ff87 	bl	8002fd8 <PROGBAR_CreateUser>
 80030ca:	b007      	add	sp, #28
 80030cc:	bdf0      	pop	{r4, r5, r6, r7, pc}

080030ce <PROGBAR_SetValue>:
 80030ce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80030d2:	460d      	mov	r5, r1
 80030d4:	b087      	sub	sp, #28
 80030d6:	4680      	mov	r8, r0
 80030d8:	2800      	cmp	r0, #0
 80030da:	f000 80a0 	beq.w	800321e <PROGBAR_SetValue+0x150>
 80030de:	f008 fbc7 	bl	800b870 <GUI_ALLOC_LockH>
 80030e2:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80030e4:	6b46      	ldr	r6, [r0, #52]	; 0x34
 80030e6:	429d      	cmp	r5, r3
 80030e8:	bfb8      	it	lt
 80030ea:	461d      	movlt	r5, r3
 80030ec:	6c83      	ldr	r3, [r0, #72]	; 0x48
 80030ee:	af06      	add	r7, sp, #24
 80030f0:	429d      	cmp	r5, r3
 80030f2:	bfa8      	it	ge
 80030f4:	461d      	movge	r5, r3
 80030f6:	42ae      	cmp	r6, r5
 80030f8:	4604      	mov	r4, r0
 80030fa:	f847 0d18 	str.w	r0, [r7, #-24]!
 80030fe:	f000 808b 	beq.w	8003218 <PROGBAR_SetValue+0x14a>
 8003102:	f890 9068 	ldrb.w	r9, [r0, #104]	; 0x68
 8003106:	f019 0f01 	tst.w	r9, #1
 800310a:	d01c      	beq.n	8003146 <PROGBAR_SetValue+0x78>
 800310c:	42b5      	cmp	r5, r6
 800310e:	da07      	bge.n	8003120 <PROGBAR_SetValue+0x52>
 8003110:	4629      	mov	r1, r5
 8003112:	f7ff ff3a 	bl	8002f8a <PROGBAR__Value2Pos>
 8003116:	4631      	mov	r1, r6
 8003118:	f8ad 000e 	strh.w	r0, [sp, #14]
 800311c:	4620      	mov	r0, r4
 800311e:	e006      	b.n	800312e <PROGBAR_SetValue+0x60>
 8003120:	4631      	mov	r1, r6
 8003122:	f7ff ff32 	bl	8002f8a <PROGBAR__Value2Pos>
 8003126:	4629      	mov	r1, r5
 8003128:	f8ad 000e 	strh.w	r0, [sp, #14]
 800312c:	4620      	mov	r0, r4
 800312e:	f7ff ff2c 	bl	8002f8a <PROGBAR__Value2Pos>
 8003132:	2300      	movs	r3, #0
 8003134:	f8ad 3008 	strh.w	r3, [sp, #8]
 8003138:	f640 73ff 	movw	r3, #4095	; 0xfff
 800313c:	f8ad 000a 	strh.w	r0, [sp, #10]
 8003140:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003144:	e063      	b.n	800320e <PROGBAR_SetValue+0x140>
 8003146:	42b5      	cmp	r5, r6
 8003148:	da07      	bge.n	800315a <PROGBAR_SetValue+0x8c>
 800314a:	4629      	mov	r1, r5
 800314c:	f7ff ff1d 	bl	8002f8a <PROGBAR__Value2Pos>
 8003150:	4631      	mov	r1, r6
 8003152:	f8ad 0008 	strh.w	r0, [sp, #8]
 8003156:	4620      	mov	r0, r4
 8003158:	e006      	b.n	8003168 <PROGBAR_SetValue+0x9a>
 800315a:	4631      	mov	r1, r6
 800315c:	f7ff ff15 	bl	8002f8a <PROGBAR__Value2Pos>
 8003160:	4629      	mov	r1, r5
 8003162:	f8ad 0008 	strh.w	r0, [sp, #8]
 8003166:	4620      	mov	r0, r4
 8003168:	f7ff ff0f 	bl	8002f8a <PROGBAR__Value2Pos>
 800316c:	2300      	movs	r3, #0
 800316e:	f8ad 300a 	strh.w	r3, [sp, #10]
 8003172:	f009 0202 	and.w	r2, r9, #2
 8003176:	f640 73ff 	movw	r3, #4095	; 0xfff
 800317a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800317e:	f8ad 000c 	strh.w	r0, [sp, #12]
 8003182:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 8003186:	2a00      	cmp	r2, #0
 8003188:	d141      	bne.n	800320e <PROGBAR_SetValue+0x140>
 800318a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800318c:	9304      	str	r3, [sp, #16]
 800318e:	9305      	str	r3, [sp, #20]
 8003190:	f008 fb9c 	bl	800b8cc <GUI_ALLOC_GetSize>
 8003194:	2804      	cmp	r0, #4
 8003196:	dc0e      	bgt.n	80031b6 <PROGBAR_SetValue+0xe8>
 8003198:	9b00      	ldr	r3, [sp, #0]
 800319a:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800319c:	4668      	mov	r0, sp
 800319e:	f008 fb75 	bl	800b88c <GUI_ALLOC_UnlockH>
 80031a2:	4620      	mov	r0, r4
 80031a4:	2105      	movs	r1, #5
 80031a6:	f008 fd75 	bl	800bc94 <GUI_ALLOC_Realloc>
 80031aa:	4604      	mov	r4, r0
 80031ac:	4640      	mov	r0, r8
 80031ae:	f008 fb5f 	bl	800b870 <GUI_ALLOC_LockH>
 80031b2:	9000      	str	r0, [sp, #0]
 80031b4:	6384      	str	r4, [r0, #56]	; 0x38
 80031b6:	9800      	ldr	r0, [sp, #0]
 80031b8:	f7ff fea0 	bl	8002efc <PROGBAR__GetTextLocked>
 80031bc:	9001      	str	r0, [sp, #4]
 80031be:	b338      	cbz	r0, 8003210 <PROGBAR_SetValue+0x142>
 80031c0:	9b00      	ldr	r3, [sp, #0]
 80031c2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80031c4:	f007 fef8 	bl	800afb8 <GUI_SetFont>
 80031c8:	a904      	add	r1, sp, #16
 80031ca:	4606      	mov	r6, r0
 80031cc:	9a01      	ldr	r2, [sp, #4]
 80031ce:	9800      	ldr	r0, [sp, #0]
 80031d0:	f7ff fe97 	bl	8002f02 <PROGBAR__GetTextRect>
 80031d4:	a802      	add	r0, sp, #8
 80031d6:	aa04      	add	r2, sp, #16
 80031d8:	ac06      	add	r4, sp, #24
 80031da:	4601      	mov	r1, r0
 80031dc:	f007 fe34 	bl	800ae48 <GUI_MergeRect>
 80031e0:	e89d 0003 	ldmia.w	sp, {r0, r1}
 80031e4:	462a      	mov	r2, r5
 80031e6:	f7ff fe6f 	bl	8002ec8 <_SetValue>
 80031ea:	f854 2d14 	ldr.w	r2, [r4, #-20]!
 80031ee:	9800      	ldr	r0, [sp, #0]
 80031f0:	a904      	add	r1, sp, #16
 80031f2:	f7ff fe86 	bl	8002f02 <PROGBAR__GetTextRect>
 80031f6:	a802      	add	r0, sp, #8
 80031f8:	4601      	mov	r1, r0
 80031fa:	aa04      	add	r2, sp, #16
 80031fc:	f007 fe24 	bl	800ae48 <GUI_MergeRect>
 8003200:	4630      	mov	r0, r6
 8003202:	f007 fed9 	bl	800afb8 <GUI_SetFont>
 8003206:	4620      	mov	r0, r4
 8003208:	f008 fb40 	bl	800b88c <GUI_ALLOC_UnlockH>
 800320c:	e000      	b.n	8003210 <PROGBAR_SetValue+0x142>
 800320e:	6365      	str	r5, [r4, #52]	; 0x34
 8003210:	4640      	mov	r0, r8
 8003212:	a902      	add	r1, sp, #8
 8003214:	f002 fcd4 	bl	8005bc0 <WM_InvalidateRect>
 8003218:	4668      	mov	r0, sp
 800321a:	f008 fb37 	bl	800b88c <GUI_ALLOC_UnlockH>
 800321e:	b007      	add	sp, #28
 8003220:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08003224 <_OnDelete>:
 8003224:	b513      	push	{r0, r1, r4, lr}
 8003226:	4604      	mov	r4, r0
 8003228:	f008 fb22 	bl	800b870 <GUI_ALLOC_LockH>
 800322c:	9001      	str	r0, [sp, #4]
 800322e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8003230:	b120      	cbz	r0, 800323c <_OnDelete+0x18>
 8003232:	f008 fb57 	bl	800b8e4 <GUI_ALLOC_Free>
 8003236:	9b01      	ldr	r3, [sp, #4]
 8003238:	2200      	movs	r2, #0
 800323a:	625a      	str	r2, [r3, #36]	; 0x24
 800323c:	a801      	add	r0, sp, #4
 800323e:	f008 fb25 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003242:	4620      	mov	r0, r4
 8003244:	f008 fb4e 	bl	800b8e4 <GUI_ALLOC_Free>
 8003248:	b002      	add	sp, #8
 800324a:	bd10      	pop	{r4, pc}

0800324c <_OnPaint>:
 800324c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003250:	b08b      	sub	sp, #44	; 0x2c
 8003252:	f008 fb0d 	bl	800b870 <GUI_ALLOC_LockH>
 8003256:	9007      	str	r0, [sp, #28]
 8003258:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800325a:	2800      	cmp	r0, #0
 800325c:	d060      	beq.n	8003320 <_OnPaint+0xd4>
 800325e:	f008 fb07 	bl	800b870 <GUI_ALLOC_LockH>
 8003262:	9b07      	ldr	r3, [sp, #28]
 8003264:	9005      	str	r0, [sp, #20]
 8003266:	4606      	mov	r6, r0
 8003268:	6898      	ldr	r0, [r3, #8]
 800326a:	f008 fb01 	bl	800b870 <GUI_ALLOC_LockH>
 800326e:	9b07      	ldr	r3, [sp, #28]
 8003270:	f8d0 8054 	ldr.w	r8, [r0, #84]	; 0x54
 8003274:	6e05      	ldr	r5, [r0, #96]	; 0x60
 8003276:	6d87      	ldr	r7, [r0, #88]	; 0x58
 8003278:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 800327a:	9006      	str	r0, [sp, #24]
 800327c:	a908      	add	r1, sp, #32
 800327e:	6898      	ldr	r0, [r3, #8]
 8003280:	f001 fd60 	bl	8004d44 <WM_GetInsideRectExScrollbar>
 8003284:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8003288:	9a07      	ldr	r2, [sp, #28]
 800328a:	9806      	ldr	r0, [sp, #24]
 800328c:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8003290:	f8d2 9020 	ldr.w	r9, [r2, #32]
 8003294:	441f      	add	r7, r3
 8003296:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800329a:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800329e:	f8bd 7026 	ldrh.w	r7, [sp, #38]	; 0x26
 80032a2:	1b1c      	subs	r4, r3, r4
 80032a4:	1b7f      	subs	r7, r7, r5
 80032a6:	6913      	ldr	r3, [r2, #16]
 80032a8:	f8d0 508c 	ldr.w	r5, [r0, #140]	; 0x8c
 80032ac:	1b5d      	subs	r5, r3, r5
 80032ae:	f892 3028 	ldrb.w	r3, [r2, #40]	; 0x28
 80032b2:	4441      	add	r1, r8
 80032b4:	b289      	uxth	r1, r1
 80032b6:	b2a4      	uxth	r4, r4
 80032b8:	b2bf      	uxth	r7, r7
 80032ba:	2b01      	cmp	r3, #1
 80032bc:	f8ad 1020 	strh.w	r1, [sp, #32]
 80032c0:	f8ad 4024 	strh.w	r4, [sp, #36]	; 0x24
 80032c4:	f8ad 7026 	strh.w	r7, [sp, #38]	; 0x26
 80032c8:	f8d0 8080 	ldr.w	r8, [r0, #128]	; 0x80
 80032cc:	b209      	sxth	r1, r1
 80032ce:	d008      	beq.n	80032e2 <_OnPaint+0x96>
 80032d0:	b224      	sxth	r4, r4
 80032d2:	1b64      	subs	r4, r4, r5
 80032d4:	3401      	adds	r4, #1
 80032d6:	42a1      	cmp	r1, r4
 80032d8:	dd04      	ble.n	80032e4 <_OnPaint+0x98>
 80032da:	1b0c      	subs	r4, r1, r4
 80032dc:	eb06 0644 	add.w	r6, r6, r4, lsl #1
 80032e0:	1b2d      	subs	r5, r5, r4
 80032e2:	460c      	mov	r4, r1
 80032e4:	2d00      	cmp	r5, #0
 80032e6:	dd15      	ble.n	8003314 <_OnPaint+0xc8>
 80032e8:	6990      	ldr	r0, [r2, #24]
 80032ea:	f007 fe60 	bl	800afae <GUI_SetColor>
 80032ee:	f04f 32ff 	mov.w	r2, #4294967295
 80032f2:	2301      	movs	r3, #1
 80032f4:	e88d 000c 	stmia.w	sp, {r2, r3}
 80032f8:	9a07      	ldr	r2, [sp, #28]
 80032fa:	b23f      	sxth	r7, r7
 80032fc:	f892 3029 	ldrb.w	r3, [r2, #41]	; 0x29
 8003300:	9302      	str	r3, [sp, #8]
 8003302:	ebc9 0907 	rsb	r9, r9, r7
 8003306:	4630      	mov	r0, r6
 8003308:	4629      	mov	r1, r5
 800330a:	4622      	mov	r2, r4
 800330c:	eb09 0308 	add.w	r3, r9, r8
 8003310:	f006 ffd6 	bl	800a2c0 <GUI_DrawGraphEx>
 8003314:	a806      	add	r0, sp, #24
 8003316:	f008 fab9 	bl	800b88c <GUI_ALLOC_UnlockH>
 800331a:	a805      	add	r0, sp, #20
 800331c:	f008 fab6 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003320:	a807      	add	r0, sp, #28
 8003322:	f008 fab3 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003326:	b00b      	add	sp, #44	; 0x2c
 8003328:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800332c <_InvalidateNewItem>:
 800332c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800332e:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8003332:	2b01      	cmp	r3, #1
 8003334:	4604      	mov	r4, r0
 8003336:	6880      	ldr	r0, [r0, #8]
 8003338:	d127      	bne.n	800338a <_InvalidateNewItem+0x5e>
 800333a:	a902      	add	r1, sp, #8
 800333c:	f001 fd02 	bl	8004d44 <WM_GetInsideRectExScrollbar>
 8003340:	68a0      	ldr	r0, [r4, #8]
 8003342:	f008 fa95 	bl	800b870 <GUI_ALLOC_LockH>
 8003346:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800334a:	6d83      	ldr	r3, [r0, #88]	; 0x58
 800334c:	9001      	str	r0, [sp, #4]
 800334e:	4413      	add	r3, r2
 8003350:	f8ad 300a 	strh.w	r3, [sp, #10]
 8003354:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8003358:	6e03      	ldr	r3, [r0, #96]	; 0x60
 800335a:	1ad3      	subs	r3, r2, r3
 800335c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8003360:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8003362:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8003366:	4413      	add	r3, r2
 8003368:	6922      	ldr	r2, [r4, #16]
 800336a:	4413      	add	r3, r2
 800336c:	b29b      	uxth	r3, r3
 800336e:	1e9a      	subs	r2, r3, #2
 8003370:	a801      	add	r0, sp, #4
 8003372:	3b01      	subs	r3, #1
 8003374:	f8ad 2008 	strh.w	r2, [sp, #8]
 8003378:	f8ad 300c 	strh.w	r3, [sp, #12]
 800337c:	f008 fa86 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003380:	68a0      	ldr	r0, [r4, #8]
 8003382:	a902      	add	r1, sp, #8
 8003384:	f002 fc1c 	bl	8005bc0 <WM_InvalidateRect>
 8003388:	e001      	b.n	800338e <_InvalidateNewItem+0x62>
 800338a:	f000 fb74 	bl	8003a76 <GRAPH__InvalidateGraph>
 800338e:	b004      	add	sp, #16
 8003390:	bd10      	pop	{r4, pc}
	...

08003394 <GRAPH_DATA_YT_Create>:
 8003394:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003398:	4680      	mov	r8, r0
 800339a:	202c      	movs	r0, #44	; 0x2c
 800339c:	460e      	mov	r6, r1
 800339e:	4617      	mov	r7, r2
 80033a0:	461d      	mov	r5, r3
 80033a2:	f008 fc5f 	bl	800bc64 <GUI_ALLOC_AllocZero>
 80033a6:	4604      	mov	r4, r0
 80033a8:	b320      	cbz	r0, 80033f4 <GRAPH_DATA_YT_Create+0x60>
 80033aa:	0070      	lsls	r0, r6, #1
 80033ac:	f008 fc5a 	bl	800bc64 <GUI_ALLOC_AllocZero>
 80033b0:	4681      	mov	r9, r0
 80033b2:	b160      	cbz	r0, 80033ce <GRAPH_DATA_YT_Create+0x3a>
 80033b4:	b15f      	cbz	r7, 80033ce <GRAPH_DATA_YT_Create+0x3a>
 80033b6:	b155      	cbz	r5, 80033ce <GRAPH_DATA_YT_Create+0x3a>
 80033b8:	f008 fa5a 	bl	800b870 <GUI_ALLOC_LockH>
 80033bc:	4b0f      	ldr	r3, [pc, #60]	; (80033fc <GRAPH_DATA_YT_Create+0x68>)
 80033be:	9001      	str	r0, [sp, #4]
 80033c0:	681b      	ldr	r3, [r3, #0]
 80033c2:	4639      	mov	r1, r7
 80033c4:	006a      	lsls	r2, r5, #1
 80033c6:	4798      	blx	r3
 80033c8:	a801      	add	r0, sp, #4
 80033ca:	f008 fa5f 	bl	800b88c <GUI_ALLOC_UnlockH>
 80033ce:	4620      	mov	r0, r4
 80033d0:	f008 fa4e 	bl	800b870 <GUI_ALLOC_LockH>
 80033d4:	4b0a      	ldr	r3, [pc, #40]	; (8003400 <GRAPH_DATA_YT_Create+0x6c>)
 80033d6:	9001      	str	r0, [sp, #4]
 80033d8:	60c3      	str	r3, [r0, #12]
 80033da:	4b0a      	ldr	r3, [pc, #40]	; (8003404 <GRAPH_DATA_YT_Create+0x70>)
 80033dc:	6003      	str	r3, [r0, #0]
 80033de:	4b0a      	ldr	r3, [pc, #40]	; (8003408 <GRAPH_DATA_YT_Create+0x74>)
 80033e0:	f8c0 9024 	str.w	r9, [r0, #36]	; 0x24
 80033e4:	f8c0 8018 	str.w	r8, [r0, #24]
 80033e8:	6146      	str	r6, [r0, #20]
 80033ea:	6105      	str	r5, [r0, #16]
 80033ec:	6043      	str	r3, [r0, #4]
 80033ee:	a801      	add	r0, sp, #4
 80033f0:	f008 fa4c 	bl	800b88c <GUI_ALLOC_UnlockH>
 80033f4:	4620      	mov	r0, r4
 80033f6:	b003      	add	sp, #12
 80033f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80033fc:	200000a8 	.word	0x200000a8
 8003400:	0800332d 	.word	0x0800332d
 8003404:	0800324d 	.word	0x0800324d
 8003408:	08003225 	.word	0x08003225

0800340c <GRAPH_DATA_YT_AddValue>:
 800340c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800340e:	f8ad 1006 	strh.w	r1, [sp, #6]
 8003412:	f008 fa2d 	bl	800b870 <GUI_ALLOC_LockH>
 8003416:	9002      	str	r0, [sp, #8]
 8003418:	b168      	cbz	r0, 8003436 <GRAPH_DATA_YT_AddValue+0x2a>
 800341a:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800341c:	f008 fa28 	bl	800b870 <GUI_ALLOC_LockH>
 8003420:	f10d 0206 	add.w	r2, sp, #6
 8003424:	4601      	mov	r1, r0
 8003426:	9003      	str	r0, [sp, #12]
 8003428:	2302      	movs	r3, #2
 800342a:	9802      	ldr	r0, [sp, #8]
 800342c:	f000 fb52 	bl	8003ad4 <GRAPH__AddValue>
 8003430:	a803      	add	r0, sp, #12
 8003432:	f008 fa2b 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003436:	a802      	add	r0, sp, #8
 8003438:	f008 fa28 	bl	800b88c <GUI_ALLOC_UnlockH>
 800343c:	b005      	add	sp, #20
 800343e:	f85d fb04 	ldr.w	pc, [sp], #4

08003442 <GRAPH_DATA_YT_SetAlign>:
 8003442:	b513      	push	{r0, r1, r4, lr}
 8003444:	460c      	mov	r4, r1
 8003446:	f008 fa13 	bl	800b870 <GUI_ALLOC_LockH>
 800344a:	9001      	str	r0, [sp, #4]
 800344c:	b140      	cbz	r0, 8003460 <GRAPH_DATA_YT_SetAlign+0x1e>
 800344e:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8003452:	42a3      	cmp	r3, r4
 8003454:	d004      	beq.n	8003460 <GRAPH_DATA_YT_SetAlign+0x1e>
 8003456:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800345a:	6880      	ldr	r0, [r0, #8]
 800345c:	f002 fbec 	bl	8005c38 <WM_InvalidateWindow>
 8003460:	a801      	add	r0, sp, #4
 8003462:	f008 fa13 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003466:	b002      	add	sp, #8
 8003468:	bd10      	pop	{r4, pc}

0800346a <GRAPH_DATA_YT_Clear>:
 800346a:	b513      	push	{r0, r1, r4, lr}
 800346c:	b160      	cbz	r0, 8003488 <GRAPH_DATA_YT_Clear+0x1e>
 800346e:	f008 f9ff 	bl	800b870 <GUI_ALLOC_LockH>
 8003472:	ac02      	add	r4, sp, #8
 8003474:	2300      	movs	r3, #0
 8003476:	f844 0d04 	str.w	r0, [r4, #-4]!
 800347a:	6103      	str	r3, [r0, #16]
 800347c:	6880      	ldr	r0, [r0, #8]
 800347e:	f002 fbdb 	bl	8005c38 <WM_InvalidateWindow>
 8003482:	4620      	mov	r0, r4
 8003484:	f008 fa02 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003488:	b002      	add	sp, #8
 800348a:	bd10      	pop	{r4, pc}

0800348c <_ManageScrollbars>:
 800348c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800348e:	b08b      	sub	sp, #44	; 0x2c
 8003490:	a902      	add	r1, sp, #8
 8003492:	4604      	mov	r4, r0
 8003494:	f001 fc56 	bl	8004d44 <WM_GetInsideRectExScrollbar>
 8003498:	4620      	mov	r0, r4
 800349a:	f008 f9e9 	bl	800b870 <GUI_ALLOC_LockH>
 800349e:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80034a2:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80034a6:	9001      	str	r0, [sp, #4]
 80034a8:	1ab6      	subs	r6, r6, r2
 80034aa:	6d82      	ldr	r2, [r0, #88]	; 0x58
 80034ac:	6d45      	ldr	r5, [r0, #84]	; 0x54
 80034ae:	6dc7      	ldr	r7, [r0, #92]	; 0x5c
 80034b0:	1ab6      	subs	r6, r6, r2
 80034b2:	6e02      	ldr	r2, [r0, #96]	; 0x60
 80034b4:	1ab6      	subs	r6, r6, r2
 80034b6:	f8b0 2078 	ldrh.w	r2, [r0, #120]	; 0x78
 80034ba:	0751      	lsls	r1, r2, #29
 80034bc:	d407      	bmi.n	80034ce <_ManageScrollbars+0x42>
 80034be:	6f41      	ldr	r1, [r0, #116]	; 0x74
 80034c0:	42b1      	cmp	r1, r6
 80034c2:	4620      	mov	r0, r4
 80034c4:	bfd4      	ite	le
 80034c6:	2100      	movle	r1, #0
 80034c8:	2101      	movgt	r1, #1
 80034ca:	f001 f963 	bl	8004794 <WM_SetScrollbarV>
 80034ce:	9b01      	ldr	r3, [sp, #4]
 80034d0:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 80034d4:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 80034d6:	67da      	str	r2, [r3, #124]	; 0x7c
 80034d8:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80034dc:	f8c3 6084 	str.w	r6, [r3, #132]	; 0x84
 80034e0:	1a8a      	subs	r2, r1, r2
 80034e2:	1b55      	subs	r5, r2, r5
 80034e4:	f8b3 2078 	ldrh.w	r2, [r3, #120]	; 0x78
 80034e8:	0792      	lsls	r2, r2, #30
 80034ea:	ebc7 0505 	rsb	r5, r7, r5
 80034ee:	d407      	bmi.n	8003500 <_ManageScrollbars+0x74>
 80034f0:	6f19      	ldr	r1, [r3, #112]	; 0x70
 80034f2:	42a9      	cmp	r1, r5
 80034f4:	4620      	mov	r0, r4
 80034f6:	bfd4      	ite	le
 80034f8:	2100      	movle	r1, #0
 80034fa:	2101      	movgt	r1, #1
 80034fc:	f001 f948 	bl	8004790 <WM_SetScrollbarH>
 8003500:	9801      	ldr	r0, [sp, #4]
 8003502:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8003504:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 8003508:	f8c0 5090 	str.w	r5, [r0, #144]	; 0x90
 800350c:	307c      	adds	r0, #124	; 0x7c
 800350e:	f001 faf5 	bl	8004afc <WM_CheckScrollBounds>
 8003512:	9801      	ldr	r0, [sp, #4]
 8003514:	3088      	adds	r0, #136	; 0x88
 8003516:	f001 faf1 	bl	8004afc <WM_CheckScrollBounds>
 800351a:	9b01      	ldr	r3, [sp, #4]
 800351c:	f103 027c 	add.w	r2, r3, #124	; 0x7c
 8003520:	ca07      	ldmia	r2, {r0, r1, r2}
 8003522:	3388      	adds	r3, #136	; 0x88
 8003524:	ae07      	add	r6, sp, #28
 8003526:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 800352a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800352e:	ad04      	add	r5, sp, #16
 8003530:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8003534:	a801      	add	r0, sp, #4
 8003536:	f008 f9a9 	bl	800b88c <GUI_ALLOC_UnlockH>
 800353a:	4620      	mov	r0, r4
 800353c:	4631      	mov	r1, r6
 800353e:	462a      	mov	r2, r5
 8003540:	f008 fe01 	bl	800c146 <WIDGET__SetScrollState>
 8003544:	b00b      	add	sp, #44	; 0x2c
 8003546:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003548 <_OnScrollValueChanged>:
 8003548:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800354a:	460c      	mov	r4, r1
 800354c:	4606      	mov	r6, r0
 800354e:	f008 f98f 	bl	800b870 <GUI_ALLOC_LockH>
 8003552:	9001      	str	r0, [sp, #4]
 8003554:	4620      	mov	r0, r4
 8003556:	f009 f935 	bl	800c7c4 <SCROLLBAR_GetValue>
 800355a:	4605      	mov	r5, r0
 800355c:	4620      	mov	r0, r4
 800355e:	f001 faf5 	bl	8004b4c <WM_GetId>
 8003562:	9b01      	ldr	r3, [sp, #4]
 8003564:	28fe      	cmp	r0, #254	; 0xfe
 8003566:	bf0c      	ite	eq
 8003568:	f8c3 5080 	streq.w	r5, [r3, #128]	; 0x80
 800356c:	f8c3 508c 	strne.w	r5, [r3, #140]	; 0x8c
 8003570:	4630      	mov	r0, r6
 8003572:	f002 fb61 	bl	8005c38 <WM_InvalidateWindow>
 8003576:	a801      	add	r0, sp, #4
 8003578:	f008 f988 	bl	800b88c <GUI_ALLOC_UnlockH>
 800357c:	b002      	add	sp, #8
 800357e:	bd70      	pop	{r4, r5, r6, pc}

08003580 <GRAPH_Callback>:
 8003580:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003584:	6844      	ldr	r4, [r0, #4]
 8003586:	6806      	ldr	r6, [r0, #0]
 8003588:	4605      	mov	r5, r0
 800358a:	b097      	sub	sp, #92	; 0x5c
 800358c:	4620      	mov	r0, r4
 800358e:	4629      	mov	r1, r5
 8003590:	f008 fd39 	bl	800c006 <WIDGET_HandleActive>
 8003594:	f5b6 7f40 	cmp.w	r6, #768	; 0x300
 8003598:	4607      	mov	r7, r0
 800359a:	d102      	bne.n	80035a2 <GRAPH_Callback+0x22>
 800359c:	4620      	mov	r0, r4
 800359e:	f7ff ff75 	bl	800348c <_ManageScrollbars>
 80035a2:	2f00      	cmp	r7, #0
 80035a4:	f000 8264 	beq.w	8003a70 <GRAPH_Callback+0x4f0>
 80035a8:	682b      	ldr	r3, [r5, #0]
 80035aa:	2b0b      	cmp	r3, #11
 80035ac:	f000 8200 	beq.w	80039b0 <GRAPH_Callback+0x430>
 80035b0:	dc06      	bgt.n	80035c0 <GRAPH_Callback+0x40>
 80035b2:	2b05      	cmp	r3, #5
 80035b4:	f040 8259 	bne.w	8003a6a <GRAPH_Callback+0x4ea>
 80035b8:	4620      	mov	r0, r4
 80035ba:	f7ff ff67 	bl	800348c <_ManageScrollbars>
 80035be:	e254      	b.n	8003a6a <GRAPH_Callback+0x4ea>
 80035c0:	2b0f      	cmp	r3, #15
 80035c2:	d003      	beq.n	80035cc <GRAPH_Callback+0x4c>
 80035c4:	2b26      	cmp	r3, #38	; 0x26
 80035c6:	f000 823d 	beq.w	8003a44 <GRAPH_Callback+0x4c4>
 80035ca:	e24e      	b.n	8003a6a <GRAPH_Callback+0x4ea>
 80035cc:	68ed      	ldr	r5, [r5, #12]
 80035ce:	9502      	str	r5, [sp, #8]
 80035d0:	4620      	mov	r0, r4
 80035d2:	f008 f94d 	bl	800b870 <GUI_ALLOC_LockH>
 80035d6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80035d8:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 80035da:	681b      	ldr	r3, [r3, #0]
 80035dc:	f8d0 9054 	ldr.w	r9, [r0, #84]	; 0x54
 80035e0:	f8d0 b058 	ldr.w	fp, [r0, #88]	; 0x58
 80035e4:	f8d0 a060 	ldr.w	sl, [r0, #96]	; 0x60
 80035e8:	900d      	str	r0, [sp, #52]	; 0x34
 80035ea:	ad0e      	add	r5, sp, #56	; 0x38
 80035ec:	4628      	mov	r0, r5
 80035ee:	9303      	str	r3, [sp, #12]
 80035f0:	9101      	str	r1, [sp, #4]
 80035f2:	f001 fa5b 	bl	8004aac <WM_GetClientRect>
 80035f6:	980d      	ldr	r0, [sp, #52]	; 0x34
 80035f8:	4629      	mov	r1, r5
 80035fa:	f008 fdd5 	bl	800c1a8 <WIDGET__EFFECT_DrawDownRect>
 80035fe:	e895 0003 	ldmia.w	r5, {r0, r1}
 8003602:	ab12      	add	r3, sp, #72	; 0x48
 8003604:	e883 0003 	stmia.w	r3, {r0, r1}
 8003608:	9803      	ldr	r0, [sp, #12]
 800360a:	f8bd 104a 	ldrh.w	r1, [sp, #74]	; 0x4a
 800360e:	b282      	uxth	r2, r0
 8003610:	4459      	add	r1, fp
 8003612:	f8bd 004e 	ldrh.w	r0, [sp, #78]	; 0x4e
 8003616:	4411      	add	r1, r2
 8003618:	f8ad 104a 	strh.w	r1, [sp, #74]	; 0x4a
 800361c:	eb02 010a 	add.w	r1, r2, sl
 8003620:	1a41      	subs	r1, r0, r1
 8003622:	f8ad 104e 	strh.w	r1, [sp, #78]	; 0x4e
 8003626:	f8bd 1048 	ldrh.w	r1, [sp, #72]	; 0x48
 800362a:	4411      	add	r1, r2
 800362c:	4449      	add	r1, r9
 800362e:	f8ad 1048 	strh.w	r1, [sp, #72]	; 0x48
 8003632:	9901      	ldr	r1, [sp, #4]
 8003634:	440a      	add	r2, r1
 8003636:	f8bd 104c 	ldrh.w	r1, [sp, #76]	; 0x4c
 800363a:	1a8a      	subs	r2, r1, r2
 800363c:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
 8003640:	e893 0003 	ldmia.w	r3, {r0, r1}
 8003644:	aa10      	add	r2, sp, #64	; 0x40
 8003646:	e882 0003 	stmia.w	r2, {r0, r1}
 800364a:	4610      	mov	r0, r2
 800364c:	f001 fd34 	bl	80050b8 <WM_SetUserClipRect>
 8003650:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003652:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8003654:	f007 fca9 	bl	800afaa <GUI_SetBkColor>
 8003658:	f007 fa96 	bl	800ab88 <GUI_Clear>
 800365c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800365e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003662:	b113      	cbz	r3, 800366a <GRAPH_Callback+0xea>
 8003664:	4620      	mov	r0, r4
 8003666:	2100      	movs	r1, #0
 8003668:	4798      	blx	r3
 800366a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800366c:	f895 306c 	ldrb.w	r3, [r5, #108]	; 0x6c
 8003670:	2b00      	cmp	r3, #0
 8003672:	f000 808d 	beq.w	8003790 <GRAPH_Callback+0x210>
 8003676:	4620      	mov	r0, r4
 8003678:	a914      	add	r1, sp, #80	; 0x50
 800367a:	f001 fb63 	bl	8004d44 <WM_GetInsideRectExScrollbar>
 800367e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8003680:	f8bd 0056 	ldrh.w	r0, [sp, #86]	; 0x56
 8003684:	681b      	ldr	r3, [r3, #0]
 8003686:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800368a:	f8bd 1052 	ldrh.w	r1, [sp, #82]	; 0x52
 800368e:	9304      	str	r3, [sp, #16]
 8003690:	9007      	str	r0, [sp, #28]
 8003692:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8003696:	6c28      	ldr	r0, [r5, #64]	; 0x40
 8003698:	9205      	str	r2, [sp, #20]
 800369a:	9306      	str	r3, [sp, #24]
 800369c:	9108      	str	r1, [sp, #32]
 800369e:	6c6e      	ldr	r6, [r5, #68]	; 0x44
 80036a0:	6caf      	ldr	r7, [r5, #72]	; 0x48
 80036a2:	f007 fc84 	bl	800afae <GUI_SetColor>
 80036a6:	f007 fbb7 	bl	800ae18 <GUI_GetLineStyle>
 80036aa:	9009      	str	r0, [sp, #36]	; 0x24
 80036ac:	b916      	cbnz	r6, 80036b4 <GRAPH_Callback+0x134>
 80036ae:	2f00      	cmp	r7, #0
 80036b0:	d14b      	bne.n	800374a <GRAPH_Callback+0x1ca>
 80036b2:	e046      	b.n	8003742 <GRAPH_Callback+0x1c2>
 80036b4:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80036b6:	eb06 0c03 	add.w	ip, r6, r3
 80036ba:	f8b5 3078 	ldrh.w	r3, [r5, #120]	; 0x78
 80036be:	07db      	lsls	r3, r3, #31
 80036c0:	bf54      	ite	pl
 80036c2:	f8d5 308c 	ldrpl.w	r3, [r5, #140]	; 0x8c
 80036c6:	2300      	movmi	r3, #0
 80036c8:	eb0c 0803 	add.w	r8, ip, r3
 80036cc:	45b0      	cmp	r8, r6
 80036ce:	db02      	blt.n	80036d6 <GRAPH_Callback+0x156>
 80036d0:	ebc6 0808 	rsb	r8, r6, r8
 80036d4:	e7fa      	b.n	80036cc <GRAPH_Callback+0x14c>
 80036d6:	f895 007a 	ldrb.w	r0, [r5, #122]	; 0x7a
 80036da:	f007 fc77 	bl	800afcc <GUI_SetLineStyle>
 80036de:	9805      	ldr	r0, [sp, #20]
 80036e0:	9a01      	ldr	r2, [sp, #4]
 80036e2:	b203      	sxth	r3, r0
 80036e4:	9806      	ldr	r0, [sp, #24]
 80036e6:	444a      	add	r2, r9
 80036e8:	b201      	sxth	r1, r0
 80036ea:	f1c2 0201 	rsb	r2, r2, #1
 80036ee:	1a5b      	subs	r3, r3, r1
 80036f0:	4413      	add	r3, r2
 80036f2:	4598      	cmp	r8, r3
 80036f4:	dadb      	bge.n	80036ae <GRAPH_Callback+0x12e>
 80036f6:	9804      	ldr	r0, [sp, #16]
 80036f8:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 80036fc:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8003700:	f895 207a 	ldrb.w	r2, [r5, #122]	; 0x7a
 8003704:	4448      	add	r0, r9
 8003706:	4440      	add	r0, r8
 8003708:	4459      	add	r1, fp
 800370a:	ebca 0303 	rsb	r3, sl, r3
 800370e:	b11a      	cbz	r2, 8003718 <GRAPH_Callback+0x198>
 8003710:	4602      	mov	r2, r0
 8003712:	f006 fd0d 	bl	800a130 <GUI_DrawLine>
 8003716:	e002      	b.n	800371e <GRAPH_Callback+0x19e>
 8003718:	461a      	mov	r2, r3
 800371a:	f006 fd81 	bl	800a220 <GUI_DrawVLine>
 800371e:	44b0      	add	r8, r6
 8003720:	e7dd      	b.n	80036de <GRAPH_Callback+0x15e>
 8003722:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 8003726:	f007 fc51 	bl	800afcc <GUI_SetLineStyle>
 800372a:	9907      	ldr	r1, [sp, #28]
 800372c:	9808      	ldr	r0, [sp, #32]
 800372e:	b20b      	sxth	r3, r1
 8003730:	eb0b 020a 	add.w	r2, fp, sl
 8003734:	b201      	sxth	r1, r0
 8003736:	f1c2 0201 	rsb	r2, r2, #1
 800373a:	1a5b      	subs	r3, r3, r1
 800373c:	4413      	add	r3, r2
 800373e:	429e      	cmp	r6, r3
 8003740:	db0c      	blt.n	800375c <GRAPH_Callback+0x1dc>
 8003742:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003744:	f007 fc42 	bl	800afcc <GUI_SetLineStyle>
 8003748:	e022      	b.n	8003790 <GRAPH_Callback+0x210>
 800374a:	6d2e      	ldr	r6, [r5, #80]	; 0x50
 800374c:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
 8003750:	443e      	add	r6, r7
 8003752:	1af6      	subs	r6, r6, r3
 8003754:	42be      	cmp	r6, r7
 8003756:	dbe4      	blt.n	8003722 <GRAPH_Callback+0x1a2>
 8003758:	1bf6      	subs	r6, r6, r7
 800375a:	e7fb      	b.n	8003754 <GRAPH_Callback+0x1d4>
 800375c:	9801      	ldr	r0, [sp, #4]
 800375e:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8003762:	f9bd 1056 	ldrsh.w	r1, [sp, #86]	; 0x56
 8003766:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800376a:	1a12      	subs	r2, r2, r0
 800376c:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 8003770:	ebca 0101 	rsb	r1, sl, r1
 8003774:	1b89      	subs	r1, r1, r6
 8003776:	444b      	add	r3, r9
 8003778:	b120      	cbz	r0, 8003784 <GRAPH_Callback+0x204>
 800377a:	4618      	mov	r0, r3
 800377c:	460b      	mov	r3, r1
 800377e:	f006 fcd7 	bl	800a130 <GUI_DrawLine>
 8003782:	e003      	b.n	800378c <GRAPH_Callback+0x20c>
 8003784:	4608      	mov	r0, r1
 8003786:	4619      	mov	r1, r3
 8003788:	f006 fcf0 	bl	800a16c <GUI_DrawHLine>
 800378c:	443e      	add	r6, r7
 800378e:	e7cc      	b.n	800372a <GRAPH_Callback+0x1aa>
 8003790:	9a03      	ldr	r2, [sp, #12]
 8003792:	a812      	add	r0, sp, #72	; 0x48
 8003794:	a90e      	add	r1, sp, #56	; 0x38
 8003796:	f005 fd96 	bl	80092c6 <GUI__ReduceRect>
 800379a:	a812      	add	r0, sp, #72	; 0x48
 800379c:	f001 fc8c 	bl	80050b8 <WM_SetUserClipRect>
 80037a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80037a2:	f893 203b 	ldrb.w	r2, [r3, #59]	; 0x3b
 80037a6:	2aff      	cmp	r2, #255	; 0xff
 80037a8:	f000 80a3 	beq.w	80038f2 <GRAPH_Callback+0x372>
 80037ac:	f1b9 0f00 	cmp.w	r9, #0
 80037b0:	d108      	bne.n	80037c4 <GRAPH_Callback+0x244>
 80037b2:	f1bb 0f00 	cmp.w	fp, #0
 80037b6:	d105      	bne.n	80037c4 <GRAPH_Callback+0x244>
 80037b8:	9901      	ldr	r1, [sp, #4]
 80037ba:	b919      	cbnz	r1, 80037c4 <GRAPH_Callback+0x244>
 80037bc:	f1ba 0f00 	cmp.w	sl, #0
 80037c0:	f000 8097 	beq.w	80038f2 <GRAPH_Callback+0x372>
 80037c4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80037c6:	a914      	add	r1, sp, #80	; 0x50
 80037c8:	4620      	mov	r0, r4
 80037ca:	6815      	ldr	r5, [r2, #0]
 80037cc:	9300      	str	r3, [sp, #0]
 80037ce:	f001 fab9 	bl	8004d44 <WM_GetInsideRectExScrollbar>
 80037d2:	f001 fa33 	bl	8004c3c <WM_GetOrgX>
 80037d6:	9004      	str	r0, [sp, #16]
 80037d8:	f001 fa38 	bl	8004c4c <WM_GetOrgY>
 80037dc:	f9bd 2052 	ldrsh.w	r2, [sp, #82]	; 0x52
 80037e0:	9b00      	ldr	r3, [sp, #0]
 80037e2:	f9bd 6054 	ldrsh.w	r6, [sp, #84]	; 0x54
 80037e6:	9005      	str	r0, [sp, #20]
 80037e8:	445a      	add	r2, fp
 80037ea:	9203      	str	r2, [sp, #12]
 80037ec:	9a01      	ldr	r2, [sp, #4]
 80037ee:	6b98      	ldr	r0, [r3, #56]	; 0x38
 80037f0:	f9bd 7050 	ldrsh.w	r7, [sp, #80]	; 0x50
 80037f4:	f9bd 8056 	ldrsh.w	r8, [sp, #86]	; 0x56
 80037f8:	1ab6      	subs	r6, r6, r2
 80037fa:	f007 fbd6 	bl	800afaa <GUI_SetBkColor>
 80037fe:	9b00      	ldr	r3, [sp, #0]
 8003800:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8003802:	444f      	add	r7, r9
 8003804:	ebca 0808 	rsb	r8, sl, r8
 8003808:	f007 fbd1 	bl	800afae <GUI_SetColor>
 800380c:	f1b9 0f00 	cmp.w	r9, #0
 8003810:	d01b      	beq.n	800384a <GRAPH_Callback+0x2ca>
 8003812:	9802      	ldr	r0, [sp, #8]
 8003814:	9904      	ldr	r1, [sp, #16]
 8003816:	f9b0 3000 	ldrsh.w	r3, [r0]
 800381a:	f109 32ff 	add.w	r2, r9, #4294967295
 800381e:	442a      	add	r2, r5
 8003820:	1a5b      	subs	r3, r3, r1
 8003822:	4293      	cmp	r3, r2
 8003824:	dc11      	bgt.n	800384a <GRAPH_Callback+0x2ca>
 8003826:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 800382a:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 800382e:	ebca 0303 	rsb	r3, sl, r3
 8003832:	eb05 010b 	add.w	r1, r5, fp
 8003836:	3301      	adds	r3, #1
 8003838:	f007 f974 	bl	800ab24 <GUI_ClearRect>
 800383c:	9a03      	ldr	r2, [sp, #12]
 800383e:	1e78      	subs	r0, r7, #1
 8003840:	1e51      	subs	r1, r2, #1
 8003842:	f108 0201 	add.w	r2, r8, #1
 8003846:	f006 fceb 	bl	800a220 <GUI_DrawVLine>
 800384a:	f1bb 0f00 	cmp.w	fp, #0
 800384e:	d017      	beq.n	8003880 <GRAPH_Callback+0x300>
 8003850:	9802      	ldr	r0, [sp, #8]
 8003852:	9905      	ldr	r1, [sp, #20]
 8003854:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8003858:	f10b 33ff 	add.w	r3, fp, #4294967295
 800385c:	442b      	add	r3, r5
 800385e:	1a52      	subs	r2, r2, r1
 8003860:	429a      	cmp	r2, r3
 8003862:	dc0d      	bgt.n	8003880 <GRAPH_Callback+0x300>
 8003864:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 8003868:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 800386c:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8003870:	f007 f958 	bl	800ab24 <GUI_ClearRect>
 8003874:	9a03      	ldr	r2, [sp, #12]
 8003876:	1e79      	subs	r1, r7, #1
 8003878:	1e50      	subs	r0, r2, #1
 800387a:	1c72      	adds	r2, r6, #1
 800387c:	f006 fc76 	bl	800a16c <GUI_DrawHLine>
 8003880:	9b01      	ldr	r3, [sp, #4]
 8003882:	b1d3      	cbz	r3, 80038ba <GRAPH_Callback+0x33a>
 8003884:	9902      	ldr	r1, [sp, #8]
 8003886:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 800388a:	1ad0      	subs	r0, r2, r3
 800388c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8003890:	9904      	ldr	r1, [sp, #16]
 8003892:	3001      	adds	r0, #1
 8003894:	1a5b      	subs	r3, r3, r1
 8003896:	4283      	cmp	r3, r0
 8003898:	db0f      	blt.n	80038ba <GRAPH_Callback+0x33a>
 800389a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 800389e:	ebca 0303 	rsb	r3, sl, r3
 80038a2:	eb05 010b 	add.w	r1, r5, fp
 80038a6:	3301      	adds	r3, #1
 80038a8:	f007 f93c 	bl	800ab24 <GUI_ClearRect>
 80038ac:	9a03      	ldr	r2, [sp, #12]
 80038ae:	1c70      	adds	r0, r6, #1
 80038b0:	1e51      	subs	r1, r2, #1
 80038b2:	f108 0201 	add.w	r2, r8, #1
 80038b6:	f006 fcb3 	bl	800a220 <GUI_DrawVLine>
 80038ba:	f1ba 0f00 	cmp.w	sl, #0
 80038be:	d018      	beq.n	80038f2 <GRAPH_Callback+0x372>
 80038c0:	9802      	ldr	r0, [sp, #8]
 80038c2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80038c6:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80038ca:	9805      	ldr	r0, [sp, #20]
 80038cc:	ebca 0103 	rsb	r1, sl, r3
 80038d0:	3101      	adds	r1, #1
 80038d2:	ebc0 0a02 	rsb	sl, r0, r2
 80038d6:	458a      	cmp	sl, r1
 80038d8:	db0b      	blt.n	80038f2 <GRAPH_Callback+0x372>
 80038da:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 80038de:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80038e2:	f007 f91f 	bl	800ab24 <GUI_ClearRect>
 80038e6:	f108 0001 	add.w	r0, r8, #1
 80038ea:	1e79      	subs	r1, r7, #1
 80038ec:	1c72      	adds	r2, r6, #1
 80038ee:	f006 fc3d 	bl	800a16c <GUI_DrawHLine>
 80038f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80038f4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80038f8:	b113      	cbz	r3, 8003900 <GRAPH_Callback+0x380>
 80038fa:	4620      	mov	r0, r4
 80038fc:	2101      	movs	r1, #1
 80038fe:	4798      	blx	r3
 8003900:	a810      	add	r0, sp, #64	; 0x40
 8003902:	f001 fbd9 	bl	80050b8 <WM_SetUserClipRect>
 8003906:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003908:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800390a:	f009 f8eb 	bl	800cae4 <GUI_ARRAY_GetNumItems>
 800390e:	2500      	movs	r5, #0
 8003910:	4607      	mov	r7, r0
 8003912:	42bd      	cmp	r5, r7
 8003914:	d01a      	beq.n	800394c <GRAPH_Callback+0x3cc>
 8003916:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003918:	4629      	mov	r1, r5
 800391a:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800391c:	f009 f964 	bl	800cbe8 <GUI_ARRAY_GethItem>
 8003920:	f007 ffa6 	bl	800b870 <GUI_ALLOC_LockH>
 8003924:	9014      	str	r0, [sp, #80]	; 0x50
 8003926:	b178      	cbz	r0, 8003948 <GRAPH_Callback+0x3c8>
 8003928:	6806      	ldr	r6, [r0, #0]
 800392a:	4630      	mov	r0, r6
 800392c:	f007 ffa0 	bl	800b870 <GUI_ALLOC_LockH>
 8003930:	900c      	str	r0, [sp, #48]	; 0x30
 8003932:	b130      	cbz	r0, 8003942 <GRAPH_Callback+0x3c2>
 8003934:	6803      	ldr	r3, [r0, #0]
 8003936:	9902      	ldr	r1, [sp, #8]
 8003938:	4630      	mov	r0, r6
 800393a:	4798      	blx	r3
 800393c:	a80c      	add	r0, sp, #48	; 0x30
 800393e:	f007 ffa5 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003942:	a814      	add	r0, sp, #80	; 0x50
 8003944:	f007 ffa2 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003948:	3501      	adds	r5, #1
 800394a:	e7e2      	b.n	8003912 <GRAPH_Callback+0x392>
 800394c:	a812      	add	r0, sp, #72	; 0x48
 800394e:	f001 fbb3 	bl	80050b8 <WM_SetUserClipRect>
 8003952:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003954:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8003956:	f009 f8c5 	bl	800cae4 <GUI_ARRAY_GetNumItems>
 800395a:	2500      	movs	r5, #0
 800395c:	4607      	mov	r7, r0
 800395e:	42bd      	cmp	r5, r7
 8003960:	d01a      	beq.n	8003998 <GRAPH_Callback+0x418>
 8003962:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003964:	4629      	mov	r1, r5
 8003966:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8003968:	f009 f93e 	bl	800cbe8 <GUI_ARRAY_GethItem>
 800396c:	f007 ff80 	bl	800b870 <GUI_ALLOC_LockH>
 8003970:	9014      	str	r0, [sp, #80]	; 0x50
 8003972:	b178      	cbz	r0, 8003994 <GRAPH_Callback+0x414>
 8003974:	6806      	ldr	r6, [r0, #0]
 8003976:	4630      	mov	r0, r6
 8003978:	f007 ff7a 	bl	800b870 <GUI_ALLOC_LockH>
 800397c:	900b      	str	r0, [sp, #44]	; 0x2c
 800397e:	b130      	cbz	r0, 800398e <GRAPH_Callback+0x40e>
 8003980:	6803      	ldr	r3, [r0, #0]
 8003982:	9902      	ldr	r1, [sp, #8]
 8003984:	4630      	mov	r0, r6
 8003986:	4798      	blx	r3
 8003988:	a80b      	add	r0, sp, #44	; 0x2c
 800398a:	f007 ff7f 	bl	800b88c <GUI_ALLOC_UnlockH>
 800398e:	a814      	add	r0, sp, #80	; 0x50
 8003990:	f007 ff7c 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003994:	3501      	adds	r5, #1
 8003996:	e7e2      	b.n	800395e <GRAPH_Callback+0x3de>
 8003998:	2000      	movs	r0, #0
 800399a:	f001 fb8d 	bl	80050b8 <WM_SetUserClipRect>
 800399e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80039a0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80039a4:	b113      	cbz	r3, 80039ac <GRAPH_Callback+0x42c>
 80039a6:	4620      	mov	r0, r4
 80039a8:	2102      	movs	r1, #2
 80039aa:	4798      	blx	r3
 80039ac:	a80d      	add	r0, sp, #52	; 0x34
 80039ae:	e046      	b.n	8003a3e <GRAPH_Callback+0x4be>
 80039b0:	4620      	mov	r0, r4
 80039b2:	f007 ff5d 	bl	800b870 <GUI_ALLOC_LockH>
 80039b6:	9012      	str	r0, [sp, #72]	; 0x48
 80039b8:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80039ba:	f009 f893 	bl	800cae4 <GUI_ARRAY_GetNumItems>
 80039be:	2400      	movs	r4, #0
 80039c0:	4606      	mov	r6, r0
 80039c2:	42b4      	cmp	r4, r6
 80039c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80039c6:	da18      	bge.n	80039fa <GRAPH_Callback+0x47a>
 80039c8:	6e58      	ldr	r0, [r3, #100]	; 0x64
 80039ca:	4621      	mov	r1, r4
 80039cc:	f009 f90c 	bl	800cbe8 <GUI_ARRAY_GethItem>
 80039d0:	f007 ff4e 	bl	800b870 <GUI_ALLOC_LockH>
 80039d4:	9014      	str	r0, [sp, #80]	; 0x50
 80039d6:	b170      	cbz	r0, 80039f6 <GRAPH_Callback+0x476>
 80039d8:	6805      	ldr	r5, [r0, #0]
 80039da:	4628      	mov	r0, r5
 80039dc:	f007 ff48 	bl	800b870 <GUI_ALLOC_LockH>
 80039e0:	9010      	str	r0, [sp, #64]	; 0x40
 80039e2:	b128      	cbz	r0, 80039f0 <GRAPH_Callback+0x470>
 80039e4:	6847      	ldr	r7, [r0, #4]
 80039e6:	a810      	add	r0, sp, #64	; 0x40
 80039e8:	f007 ff50 	bl	800b88c <GUI_ALLOC_UnlockH>
 80039ec:	4628      	mov	r0, r5
 80039ee:	47b8      	blx	r7
 80039f0:	a814      	add	r0, sp, #80	; 0x50
 80039f2:	f007 ff4b 	bl	800b88c <GUI_ALLOC_UnlockH>
 80039f6:	3401      	adds	r4, #1
 80039f8:	e7e3      	b.n	80039c2 <GRAPH_Callback+0x442>
 80039fa:	6e98      	ldr	r0, [r3, #104]	; 0x68
 80039fc:	f009 f872 	bl	800cae4 <GUI_ARRAY_GetNumItems>
 8003a00:	2400      	movs	r4, #0
 8003a02:	4605      	mov	r5, r0
 8003a04:	42ac      	cmp	r4, r5
 8003a06:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003a08:	da0f      	bge.n	8003a2a <GRAPH_Callback+0x4aa>
 8003a0a:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8003a0c:	4621      	mov	r1, r4
 8003a0e:	f009 f8eb 	bl	800cbe8 <GUI_ARRAY_GethItem>
 8003a12:	f007 ff2d 	bl	800b870 <GUI_ALLOC_LockH>
 8003a16:	9014      	str	r0, [sp, #80]	; 0x50
 8003a18:	b128      	cbz	r0, 8003a26 <GRAPH_Callback+0x4a6>
 8003a1a:	6800      	ldr	r0, [r0, #0]
 8003a1c:	f007 ff62 	bl	800b8e4 <GUI_ALLOC_Free>
 8003a20:	a814      	add	r0, sp, #80	; 0x50
 8003a22:	f007 ff33 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003a26:	3401      	adds	r4, #1
 8003a28:	e7ec      	b.n	8003a04 <GRAPH_Callback+0x484>
 8003a2a:	ac16      	add	r4, sp, #88	; 0x58
 8003a2c:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8003a2e:	f009 f8b2 	bl	800cb96 <GUI_ARRAY_Delete>
 8003a32:	f854 3d10 	ldr.w	r3, [r4, #-16]!
 8003a36:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8003a38:	f009 f8ad 	bl	800cb96 <GUI_ARRAY_Delete>
 8003a3c:	4620      	mov	r0, r4
 8003a3e:	f007 ff25 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003a42:	e015      	b.n	8003a70 <GRAPH_Callback+0x4f0>
 8003a44:	68eb      	ldr	r3, [r5, #12]
 8003a46:	2b05      	cmp	r3, #5
 8003a48:	d10f      	bne.n	8003a6a <GRAPH_Callback+0x4ea>
 8003a4a:	4620      	mov	r0, r4
 8003a4c:	68ae      	ldr	r6, [r5, #8]
 8003a4e:	f001 f955 	bl	8004cfc <WM_GetScrollbarV>
 8003a52:	4286      	cmp	r6, r0
 8003a54:	d005      	beq.n	8003a62 <GRAPH_Callback+0x4e2>
 8003a56:	4620      	mov	r0, r4
 8003a58:	68ae      	ldr	r6, [r5, #8]
 8003a5a:	f001 f94a 	bl	8004cf2 <WM_GetScrollbarH>
 8003a5e:	4286      	cmp	r6, r0
 8003a60:	d103      	bne.n	8003a6a <GRAPH_Callback+0x4ea>
 8003a62:	6868      	ldr	r0, [r5, #4]
 8003a64:	68a9      	ldr	r1, [r5, #8]
 8003a66:	f7ff fd6f 	bl	8003548 <_OnScrollValueChanged>
 8003a6a:	4628      	mov	r0, r5
 8003a6c:	f002 fd12 	bl	8006494 <WM_DefaultProc>
 8003a70:	b017      	add	sp, #92	; 0x5c
 8003a72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003a76 <GRAPH__InvalidateGraph>:
 8003a76:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8003a7a:	4604      	mov	r4, r0
 8003a7c:	f007 fef8 	bl	800b870 <GUI_ALLOC_LockH>
 8003a80:	4603      	mov	r3, r0
 8003a82:	a804      	add	r0, sp, #16
 8003a84:	f8d3 8054 	ldr.w	r8, [r3, #84]	; 0x54
 8003a88:	f840 3d0c 	str.w	r3, [r0, #-12]!
 8003a8c:	6d9f      	ldr	r7, [r3, #88]	; 0x58
 8003a8e:	6dde      	ldr	r6, [r3, #92]	; 0x5c
 8003a90:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 8003a92:	f007 fefb 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003a96:	4620      	mov	r0, r4
 8003a98:	a902      	add	r1, sp, #8
 8003a9a:	f001 f953 	bl	8004d44 <WM_GetInsideRectExScrollbar>
 8003a9e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8003aa2:	4498      	add	r8, r3
 8003aa4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8003aa8:	f8ad 8008 	strh.w	r8, [sp, #8]
 8003aac:	441f      	add	r7, r3
 8003aae:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8003ab2:	f8ad 700a 	strh.w	r7, [sp, #10]
 8003ab6:	1b9e      	subs	r6, r3, r6
 8003ab8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8003abc:	f8ad 600c 	strh.w	r6, [sp, #12]
 8003ac0:	1b5d      	subs	r5, r3, r5
 8003ac2:	4620      	mov	r0, r4
 8003ac4:	a902      	add	r1, sp, #8
 8003ac6:	f8ad 500e 	strh.w	r5, [sp, #14]
 8003aca:	f002 f879 	bl	8005bc0 <WM_InvalidateRect>
 8003ace:	b004      	add	sp, #16
 8003ad0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003ad4 <GRAPH__AddValue>:
 8003ad4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003ad6:	461d      	mov	r5, r3
 8003ad8:	6883      	ldr	r3, [r0, #8]
 8003ada:	4604      	mov	r4, r0
 8003adc:	460e      	mov	r6, r1
 8003ade:	4617      	mov	r7, r2
 8003ae0:	b323      	cbz	r3, 8003b2c <GRAPH__AddValue+0x58>
 8003ae2:	6900      	ldr	r0, [r0, #16]
 8003ae4:	6963      	ldr	r3, [r4, #20]
 8003ae6:	4298      	cmp	r0, r3
 8003ae8:	d10e      	bne.n	8003b08 <GRAPH__AddValue+0x34>
 8003aea:	1e42      	subs	r2, r0, #1
 8003aec:	436a      	muls	r2, r5
 8003aee:	4608      	mov	r0, r1
 8003af0:	4429      	add	r1, r5
 8003af2:	f00c fae1 	bl	80100b8 <memmove>
 8003af6:	6920      	ldr	r0, [r4, #16]
 8003af8:	3801      	subs	r0, #1
 8003afa:	fb00 6005 	mla	r0, r0, r5, r6
 8003afe:	4639      	mov	r1, r7
 8003b00:	462a      	mov	r2, r5
 8003b02:	f00c fad9 	bl	80100b8 <memmove>
 8003b06:	e00c      	b.n	8003b22 <GRAPH__AddValue+0x4e>
 8003b08:	1c43      	adds	r3, r0, #1
 8003b0a:	6123      	str	r3, [r4, #16]
 8003b0c:	fb00 1005 	mla	r0, r0, r5, r1
 8003b10:	4611      	mov	r1, r2
 8003b12:	462a      	mov	r2, r5
 8003b14:	f00c fad0 	bl	80100b8 <memmove>
 8003b18:	68e3      	ldr	r3, [r4, #12]
 8003b1a:	b113      	cbz	r3, 8003b22 <GRAPH__AddValue+0x4e>
 8003b1c:	4620      	mov	r0, r4
 8003b1e:	4798      	blx	r3
 8003b20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003b22:	68a0      	ldr	r0, [r4, #8]
 8003b24:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003b28:	f7ff bfa5 	b.w	8003a76 <GRAPH__InvalidateGraph>
 8003b2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003b30 <GRAPH_CreateUser>:
 8003b30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003b32:	b087      	sub	sp, #28
 8003b34:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8003b36:	9400      	str	r4, [sp, #0]
 8003b38:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8003b3a:	9401      	str	r4, [sp, #4]
 8003b3c:	4c17      	ldr	r4, [pc, #92]	; (8003b9c <GRAPH_CreateUser+0x6c>)
 8003b3e:	9402      	str	r4, [sp, #8]
 8003b40:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8003b42:	346c      	adds	r4, #108	; 0x6c
 8003b44:	9403      	str	r4, [sp, #12]
 8003b46:	f002 f8a5 	bl	8005c94 <WM_CreateWindowAsChild>
 8003b4a:	4606      	mov	r6, r0
 8003b4c:	b318      	cbz	r0, 8003b96 <GRAPH_CreateUser+0x66>
 8003b4e:	f009 f85e 	bl	800cc0e <GUI_ARRAY_Create>
 8003b52:	4605      	mov	r5, r0
 8003b54:	f009 f85b 	bl	800cc0e <GUI_ARRAY_Create>
 8003b58:	4604      	mov	r4, r0
 8003b5a:	4630      	mov	r0, r6
 8003b5c:	f007 fe88 	bl	800b870 <GUI_ALLOC_LockH>
 8003b60:	6645      	str	r5, [r0, #100]	; 0x64
 8003b62:	4d0f      	ldr	r5, [pc, #60]	; (8003ba0 <GRAPH_CreateUser+0x70>)
 8003b64:	6684      	str	r4, [r0, #104]	; 0x68
 8003b66:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003b68:	9005      	str	r0, [sp, #20]
 8003b6a:	2200      	movs	r2, #0
 8003b6c:	f008 fa06 	bl	800bf7c <WIDGET__Init>
 8003b70:	af06      	add	r7, sp, #24
 8003b72:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003b74:	f857 ed04 	ldr.w	lr, [r7, #-4]!
 8003b78:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 8003b7c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003b7e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003b80:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003b82:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8003b86:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8003b8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003b8c:	f8ae 3078 	strh.w	r3, [lr, #120]	; 0x78
 8003b90:	4638      	mov	r0, r7
 8003b92:	f007 fe7b 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003b96:	4630      	mov	r0, r6
 8003b98:	b007      	add	sp, #28
 8003b9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003b9c:	08003581 	.word	0x08003581
 8003ba0:	20000038 	.word	0x20000038

08003ba4 <GRAPH_CreateIndirect>:
 8003ba4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003ba6:	b087      	sub	sp, #28
 8003ba8:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8003bac:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8003bb0:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8003bb4:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8003bb8:	9100      	str	r1, [sp, #0]
 8003bba:	2100      	movs	r1, #0
 8003bbc:	9101      	str	r1, [sp, #4]
 8003bbe:	8a41      	ldrh	r1, [r0, #18]
 8003bc0:	9102      	str	r1, [sp, #8]
 8003bc2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8003bc6:	9103      	str	r1, [sp, #12]
 8003bc8:	6984      	ldr	r4, [r0, #24]
 8003bca:	9404      	str	r4, [sp, #16]
 8003bcc:	eb0e 0002 	add.w	r0, lr, r2
 8003bd0:	18f9      	adds	r1, r7, r3
 8003bd2:	4632      	mov	r2, r6
 8003bd4:	462b      	mov	r3, r5
 8003bd6:	f7ff ffab 	bl	8003b30 <GRAPH_CreateUser>
 8003bda:	b007      	add	sp, #28
 8003bdc:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003bde <GRAPH_AttachData>:
 8003bde:	b530      	push	{r4, r5, lr}
 8003be0:	b085      	sub	sp, #20
 8003be2:	4604      	mov	r4, r0
 8003be4:	9101      	str	r1, [sp, #4]
 8003be6:	b1d0      	cbz	r0, 8003c1e <GRAPH_AttachData+0x40>
 8003be8:	f007 fe42 	bl	800b870 <GUI_ALLOC_LockH>
 8003bec:	ab04      	add	r3, sp, #16
 8003bee:	6e45      	ldr	r5, [r0, #100]	; 0x64
 8003bf0:	f843 0d04 	str.w	r0, [r3, #-4]!
 8003bf4:	4618      	mov	r0, r3
 8003bf6:	f007 fe49 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003bfa:	9801      	ldr	r0, [sp, #4]
 8003bfc:	f007 fe38 	bl	800b870 <GUI_ALLOC_LockH>
 8003c00:	4602      	mov	r2, r0
 8003c02:	a804      	add	r0, sp, #16
 8003c04:	6094      	str	r4, [r2, #8]
 8003c06:	f840 2d08 	str.w	r2, [r0, #-8]!
 8003c0a:	f007 fe3f 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003c0e:	4628      	mov	r0, r5
 8003c10:	a901      	add	r1, sp, #4
 8003c12:	2204      	movs	r2, #4
 8003c14:	f008 ff75 	bl	800cb02 <GUI_ARRAY_AddItem>
 8003c18:	4620      	mov	r0, r4
 8003c1a:	f002 f80d 	bl	8005c38 <WM_InvalidateWindow>
 8003c1e:	b005      	add	sp, #20
 8003c20:	bd30      	pop	{r4, r5, pc}

08003c22 <GRAPH_SetGridVis>:
 8003c22:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003c24:	460e      	mov	r6, r1
 8003c26:	4605      	mov	r5, r0
 8003c28:	b178      	cbz	r0, 8003c4a <GRAPH_SetGridVis+0x28>
 8003c2a:	f007 fe21 	bl	800b870 <GUI_ALLOC_LockH>
 8003c2e:	f890 406c 	ldrb.w	r4, [r0, #108]	; 0x6c
 8003c32:	9001      	str	r0, [sp, #4]
 8003c34:	42b4      	cmp	r4, r6
 8003c36:	d004      	beq.n	8003c42 <GRAPH_SetGridVis+0x20>
 8003c38:	f880 606c 	strb.w	r6, [r0, #108]	; 0x6c
 8003c3c:	4628      	mov	r0, r5
 8003c3e:	f001 fffb 	bl	8005c38 <WM_InvalidateWindow>
 8003c42:	a801      	add	r0, sp, #4
 8003c44:	f007 fe22 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003c48:	e000      	b.n	8003c4c <GRAPH_SetGridVis+0x2a>
 8003c4a:	4604      	mov	r4, r0
 8003c4c:	4620      	mov	r0, r4
 8003c4e:	b002      	add	sp, #8
 8003c50:	bd70      	pop	{r4, r5, r6, pc}

08003c52 <GRAPH_SetBorder>:
 8003c52:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8003c56:	460f      	mov	r7, r1
 8003c58:	4690      	mov	r8, r2
 8003c5a:	461d      	mov	r5, r3
 8003c5c:	4606      	mov	r6, r0
 8003c5e:	b198      	cbz	r0, 8003c88 <GRAPH_SetBorder+0x36>
 8003c60:	f007 fe06 	bl	800b870 <GUI_ALLOC_LockH>
 8003c64:	4604      	mov	r4, r0
 8003c66:	a802      	add	r0, sp, #8
 8003c68:	9b08      	ldr	r3, [sp, #32]
 8003c6a:	6623      	str	r3, [r4, #96]	; 0x60
 8003c6c:	f840 4d04 	str.w	r4, [r0, #-4]!
 8003c70:	6567      	str	r7, [r4, #84]	; 0x54
 8003c72:	f8c4 8058 	str.w	r8, [r4, #88]	; 0x58
 8003c76:	65e5      	str	r5, [r4, #92]	; 0x5c
 8003c78:	f007 fe08 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003c7c:	4630      	mov	r0, r6
 8003c7e:	f7ff fc05 	bl	800348c <_ManageScrollbars>
 8003c82:	4630      	mov	r0, r6
 8003c84:	f001 ffd8 	bl	8005c38 <WM_InvalidateWindow>
 8003c88:	b002      	add	sp, #8
 8003c8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003c8e <FRAMEWIN__GetBorderSize>:
 8003c8e:	b570      	push	{r4, r5, r6, lr}
 8003c90:	b08a      	sub	sp, #40	; 0x28
 8003c92:	4605      	mov	r5, r0
 8003c94:	460c      	mov	r4, r1
 8003c96:	f007 fdeb 	bl	800b870 <GUI_ALLOC_LockH>
 8003c9a:	ab0a      	add	r3, sp, #40	; 0x28
 8003c9c:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8003c9e:	f843 0d28 	str.w	r0, [r3, #-40]!
 8003ca2:	4668      	mov	r0, sp
 8003ca4:	6896      	ldr	r6, [r2, #8]
 8003ca6:	f007 fdf1 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003caa:	9501      	str	r5, [sp, #4]
 8003cac:	2c03      	cmp	r4, #3
 8003cae:	d80b      	bhi.n	8003cc8 <FRAMEWIN__GetBorderSize+0x3a>
 8003cb0:	e8df f004 	tbb	[pc, r4]
 8003cb4:	08060402 	.word	0x08060402
 8003cb8:	2318      	movs	r3, #24
 8003cba:	e004      	b.n	8003cc6 <FRAMEWIN__GetBorderSize+0x38>
 8003cbc:	2316      	movs	r3, #22
 8003cbe:	e002      	b.n	8003cc6 <FRAMEWIN__GetBorderSize+0x38>
 8003cc0:	2315      	movs	r3, #21
 8003cc2:	e000      	b.n	8003cc6 <FRAMEWIN__GetBorderSize+0x38>
 8003cc4:	2317      	movs	r3, #23
 8003cc6:	9302      	str	r3, [sp, #8]
 8003cc8:	6873      	ldr	r3, [r6, #4]
 8003cca:	a801      	add	r0, sp, #4
 8003ccc:	4798      	blx	r3
 8003cce:	b00a      	add	sp, #40	; 0x28
 8003cd0:	bd70      	pop	{r4, r5, r6, pc}

08003cd2 <_SetActive>:
 8003cd2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003cd4:	4604      	mov	r4, r0
 8003cd6:	460d      	mov	r5, r1
 8003cd8:	f007 fdca 	bl	800b870 <GUI_ALLOC_LockH>
 8003cdc:	9001      	str	r0, [sp, #4]
 8003cde:	f8b0 207c 	ldrh.w	r2, [r0, #124]	; 0x7c
 8003ce2:	b125      	cbz	r5, 8003cee <_SetActive+0x1c>
 8003ce4:	0711      	lsls	r1, r2, #28
 8003ce6:	d40b      	bmi.n	8003d00 <_SetActive+0x2e>
 8003ce8:	f042 0208 	orr.w	r2, r2, #8
 8003cec:	e003      	b.n	8003cf6 <_SetActive+0x24>
 8003cee:	0713      	lsls	r3, r2, #28
 8003cf0:	d506      	bpl.n	8003d00 <_SetActive+0x2e>
 8003cf2:	f022 0208 	bic.w	r2, r2, #8
 8003cf6:	f8a0 207c 	strh.w	r2, [r0, #124]	; 0x7c
 8003cfa:	4620      	mov	r0, r4
 8003cfc:	f001 ff9c 	bl	8005c38 <WM_InvalidateWindow>
 8003d00:	a801      	add	r0, sp, #4
 8003d02:	f007 fdc3 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003d06:	b003      	add	sp, #12
 8003d08:	bd30      	pop	{r4, r5, pc}

08003d0a <FRAMEWIN__cbClient>:
 8003d0a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003d0e:	6845      	ldr	r5, [r0, #4]
 8003d10:	b087      	sub	sp, #28
 8003d12:	4604      	mov	r4, r0
 8003d14:	4628      	mov	r0, r5
 8003d16:	f000 ffa1 	bl	8004c5c <WM_GetParent>
 8003d1a:	4681      	mov	r9, r0
 8003d1c:	f007 fda8 	bl	800b870 <GUI_ALLOC_LockH>
 8003d20:	4603      	mov	r3, r0
 8003d22:	a806      	add	r0, sp, #24
 8003d24:	6e5f      	ldr	r7, [r3, #100]	; 0x64
 8003d26:	f840 3d14 	str.w	r3, [r0, #-20]!
 8003d2a:	6c9e      	ldr	r6, [r3, #72]	; 0x48
 8003d2c:	f8d3 8080 	ldr.w	r8, [r3, #128]	; 0x80
 8003d30:	f007 fdac 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003d34:	6823      	ldr	r3, [r4, #0]
 8003d36:	2b17      	cmp	r3, #23
 8003d38:	d053      	beq.n	8003de2 <FRAMEWIN__cbClient+0xd8>
 8003d3a:	dc09      	bgt.n	8003d50 <FRAMEWIN__cbClient+0x46>
 8003d3c:	2b0f      	cmp	r3, #15
 8003d3e:	d014      	beq.n	8003d6a <FRAMEWIN__cbClient+0x60>
 8003d40:	dc02      	bgt.n	8003d48 <FRAMEWIN__cbClient+0x3e>
 8003d42:	2b0e      	cmp	r3, #14
 8003d44:	d034      	beq.n	8003db0 <FRAMEWIN__cbClient+0xa6>
 8003d46:	e046      	b.n	8003dd6 <FRAMEWIN__cbClient+0xcc>
 8003d48:	3b14      	subs	r3, #20
 8003d4a:	2b01      	cmp	r3, #1
 8003d4c:	d949      	bls.n	8003de2 <FRAMEWIN__cbClient+0xd8>
 8003d4e:	e042      	b.n	8003dd6 <FRAMEWIN__cbClient+0xcc>
 8003d50:	2b1f      	cmp	r3, #31
 8003d52:	d028      	beq.n	8003da6 <FRAMEWIN__cbClient+0x9c>
 8003d54:	dc02      	bgt.n	8003d5c <FRAMEWIN__cbClient+0x52>
 8003d56:	2b1e      	cmp	r3, #30
 8003d58:	d01a      	beq.n	8003d90 <FRAMEWIN__cbClient+0x86>
 8003d5a:	e03c      	b.n	8003dd6 <FRAMEWIN__cbClient+0xcc>
 8003d5c:	2b22      	cmp	r3, #34	; 0x22
 8003d5e:	d038      	beq.n	8003dd2 <FRAMEWIN__cbClient+0xc8>
 8003d60:	2b31      	cmp	r3, #49	; 0x31
 8003d62:	d138      	bne.n	8003dd6 <FRAMEWIN__cbClient+0xcc>
 8003d64:	2300      	movs	r3, #0
 8003d66:	60e3      	str	r3, [r4, #12]
 8003d68:	e03e      	b.n	8003de8 <FRAMEWIN__cbClient+0xde>
 8003d6a:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8003d6e:	429e      	cmp	r6, r3
 8003d70:	d004      	beq.n	8003d7c <FRAMEWIN__cbClient+0x72>
 8003d72:	4630      	mov	r0, r6
 8003d74:	f005 f9f8 	bl	8009168 <LCD_SetBkColor>
 8003d78:	f006 ff06 	bl	800ab88 <GUI_Clear>
 8003d7c:	2f00      	cmp	r7, #0
 8003d7e:	d033      	beq.n	8003de8 <FRAMEWIN__cbClient+0xde>
 8003d80:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8003d84:	ae02      	add	r6, sp, #8
 8003d86:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8003d8a:	9503      	str	r5, [sp, #12]
 8003d8c:	4630      	mov	r0, r6
 8003d8e:	e026      	b.n	8003dde <FRAMEWIN__cbClient+0xd4>
 8003d90:	68e3      	ldr	r3, [r4, #12]
 8003d92:	b34b      	cbz	r3, 8003de8 <FRAMEWIN__cbClient+0xde>
 8003d94:	f1b8 0f00 	cmp.w	r8, #0
 8003d98:	d017      	beq.n	8003dca <FRAMEWIN__cbClient+0xc0>
 8003d9a:	45a8      	cmp	r8, r5
 8003d9c:	d015      	beq.n	8003dca <FRAMEWIN__cbClient+0xc0>
 8003d9e:	4640      	mov	r0, r8
 8003da0:	f001 f90c 	bl	8004fbc <WM_SetFocus>
 8003da4:	e020      	b.n	8003de8 <FRAMEWIN__cbClient+0xde>
 8003da6:	4648      	mov	r0, r9
 8003da8:	4621      	mov	r1, r4
 8003daa:	f008 f92c 	bl	800c006 <WIDGET_HandleActive>
 8003dae:	e01b      	b.n	8003de8 <FRAMEWIN__cbClient+0xde>
 8003db0:	68e3      	ldr	r3, [r4, #12]
 8003db2:	685a      	ldr	r2, [r3, #4]
 8003db4:	2a00      	cmp	r2, #0
 8003db6:	dd0e      	ble.n	8003dd6 <FRAMEWIN__cbClient+0xcc>
 8003db8:	681b      	ldr	r3, [r3, #0]
 8003dba:	2b09      	cmp	r3, #9
 8003dbc:	d005      	beq.n	8003dca <FRAMEWIN__cbClient+0xc0>
 8003dbe:	2b0a      	cmp	r3, #10
 8003dc0:	d109      	bne.n	8003dd6 <FRAMEWIN__cbClient+0xcc>
 8003dc2:	4628      	mov	r0, r5
 8003dc4:	f000 fcf7 	bl	80047b6 <WM_SetFocusOnPrevChild>
 8003dc8:	e00e      	b.n	8003de8 <FRAMEWIN__cbClient+0xde>
 8003dca:	4628      	mov	r0, r5
 8003dcc:	f000 fd22 	bl	8004814 <WM_SetFocusOnNextChild>
 8003dd0:	e00a      	b.n	8003de8 <FRAMEWIN__cbClient+0xde>
 8003dd2:	60e6      	str	r6, [r4, #12]
 8003dd4:	e008      	b.n	8003de8 <FRAMEWIN__cbClient+0xde>
 8003dd6:	b127      	cbz	r7, 8003de2 <FRAMEWIN__cbClient+0xd8>
 8003dd8:	f8c4 9004 	str.w	r9, [r4, #4]
 8003ddc:	4620      	mov	r0, r4
 8003dde:	47b8      	blx	r7
 8003de0:	e002      	b.n	8003de8 <FRAMEWIN__cbClient+0xde>
 8003de2:	4620      	mov	r0, r4
 8003de4:	f002 fb56 	bl	8006494 <WM_DefaultProc>
 8003de8:	b007      	add	sp, #28
 8003dea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08003dee <FRAMEWIN__CalcTitleHeight>:
 8003dee:	b508      	push	{r3, lr}
 8003df0:	4603      	mov	r3, r0
 8003df2:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 8003df4:	f000 0020 	and.w	r0, r0, #32
 8003df8:	b280      	uxth	r0, r0
 8003dfa:	b130      	cbz	r0, 8003e0a <FRAMEWIN__CalcTitleHeight+0x1c>
 8003dfc:	f9b3 0054 	ldrsh.w	r0, [r3, #84]	; 0x54
 8003e00:	b918      	cbnz	r0, 8003e0a <FRAMEWIN__CalcTitleHeight+0x1c>
 8003e02:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8003e04:	f007 f81c 	bl	800ae40 <GUI_GetYSizeOfFont>
 8003e08:	3002      	adds	r0, #2
 8003e0a:	bd08      	pop	{r3, pc}

08003e0c <FRAMEWIN__GetTitleLimits>:
 8003e0c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8003e10:	4607      	mov	r7, r0
 8003e12:	460d      	mov	r5, r1
 8003e14:	4616      	mov	r6, r2
 8003e16:	f007 fd2b 	bl	800b870 <GUI_ALLOC_LockH>
 8003e1a:	4603      	mov	r3, r0
 8003e1c:	a802      	add	r0, sp, #8
 8003e1e:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8003e20:	f840 3d08 	str.w	r3, [r0, #-8]!
 8003e24:	f8d2 a008 	ldr.w	sl, [r2, #8]
 8003e28:	f8b3 8000 	ldrh.w	r8, [r3]
 8003e2c:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003e30:	4668      	mov	r0, sp
 8003e32:	f007 fd2b 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003e36:	f8da 3000 	ldr.w	r3, [sl]
 8003e3a:	4638      	mov	r0, r7
 8003e3c:	2100      	movs	r1, #0
 8003e3e:	4798      	blx	r3
 8003e40:	4682      	mov	sl, r0
 8003e42:	4638      	mov	r0, r7
 8003e44:	f000 fe69 	bl	8004b1a <WM_GetFirstChild>
 8003e48:	4604      	mov	r4, r0
 8003e4a:	b340      	cbz	r0, 8003e9e <FRAMEWIN__GetTitleLimits+0x92>
 8003e4c:	4620      	mov	r0, r4
 8003e4e:	f007 fd0f 	bl	800b870 <GUI_ALLOC_LockH>
 8003e52:	4603      	mov	r3, r0
 8003e54:	fa0f f289 	sxth.w	r2, r9
 8003e58:	f9b3 7002 	ldrsh.w	r7, [r3, #2]
 8003e5c:	9001      	str	r0, [sp, #4]
 8003e5e:	1aba      	subs	r2, r7, r2
 8003e60:	4552      	cmp	r2, sl
 8003e62:	8800      	ldrh	r0, [r0, #0]
 8003e64:	8899      	ldrh	r1, [r3, #4]
 8003e66:	d113      	bne.n	8003e90 <FRAMEWIN__GetTitleLimits+0x84>
 8003e68:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003e6a:	061b      	lsls	r3, r3, #24
 8003e6c:	fa0f f288 	sxth.w	r2, r8
 8003e70:	d507      	bpl.n	8003e82 <FRAMEWIN__GetTitleLimits+0x76>
 8003e72:	b203      	sxth	r3, r0
 8003e74:	1a9a      	subs	r2, r3, r2
 8003e76:	6833      	ldr	r3, [r6, #0]
 8003e78:	429a      	cmp	r2, r3
 8003e7a:	dc09      	bgt.n	8003e90 <FRAMEWIN__GetTitleLimits+0x84>
 8003e7c:	3a01      	subs	r2, #1
 8003e7e:	6032      	str	r2, [r6, #0]
 8003e80:	e006      	b.n	8003e90 <FRAMEWIN__GetTitleLimits+0x84>
 8003e82:	b20b      	sxth	r3, r1
 8003e84:	1a9b      	subs	r3, r3, r2
 8003e86:	682a      	ldr	r2, [r5, #0]
 8003e88:	4293      	cmp	r3, r2
 8003e8a:	bfa4      	itt	ge
 8003e8c:	3301      	addge	r3, #1
 8003e8e:	602b      	strge	r3, [r5, #0]
 8003e90:	a801      	add	r0, sp, #4
 8003e92:	f007 fcfb 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003e96:	4620      	mov	r0, r4
 8003e98:	f000 feb7 	bl	8004c0a <WM_GetNextSibling>
 8003e9c:	e7d4      	b.n	8003e48 <FRAMEWIN__GetTitleLimits+0x3c>
 8003e9e:	b002      	add	sp, #8
 8003ea0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08003ea4 <FRAMEWIN__CalcPositions>:
 8003ea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ea8:	b087      	sub	sp, #28
 8003eaa:	4604      	mov	r4, r0
 8003eac:	460f      	mov	r7, r1
 8003eae:	f007 fcdf 	bl	800b870 <GUI_ALLOC_LockH>
 8003eb2:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8003eb4:	9003      	str	r0, [sp, #12]
 8003eb6:	6895      	ldr	r5, [r2, #8]
 8003eb8:	2101      	movs	r1, #1
 8003eba:	682a      	ldr	r2, [r5, #0]
 8003ebc:	4620      	mov	r0, r4
 8003ebe:	4790      	blx	r2
 8003ec0:	682a      	ldr	r2, [r5, #0]
 8003ec2:	2103      	movs	r1, #3
 8003ec4:	4683      	mov	fp, r0
 8003ec6:	4620      	mov	r0, r4
 8003ec8:	4790      	blx	r2
 8003eca:	682a      	ldr	r2, [r5, #0]
 8003ecc:	2102      	movs	r1, #2
 8003ece:	4681      	mov	r9, r0
 8003ed0:	4620      	mov	r0, r4
 8003ed2:	4790      	blx	r2
 8003ed4:	682a      	ldr	r2, [r5, #0]
 8003ed6:	9001      	str	r0, [sp, #4]
 8003ed8:	2100      	movs	r1, #0
 8003eda:	4620      	mov	r0, r4
 8003edc:	4790      	blx	r2
 8003ede:	4605      	mov	r5, r0
 8003ee0:	9803      	ldr	r0, [sp, #12]
 8003ee2:	f001 f94b 	bl	800517c <WM__GetWindowSizeX>
 8003ee6:	4682      	mov	sl, r0
 8003ee8:	9803      	ldr	r0, [sp, #12]
 8003eea:	f001 f94e 	bl	800518a <WM__GetWindowSizeY>
 8003eee:	4680      	mov	r8, r0
 8003ef0:	9803      	ldr	r0, [sp, #12]
 8003ef2:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 8003ef4:	f006 0620 	and.w	r6, r6, #32
 8003ef8:	b2b6      	uxth	r6, r6
 8003efa:	b10e      	cbz	r6, 8003f00 <FRAMEWIN__CalcPositions+0x5c>
 8003efc:	f9b0 6058 	ldrsh.w	r6, [r0, #88]	; 0x58
 8003f00:	f7ff ff75 	bl	8003dee <FRAMEWIN__CalcTitleHeight>
 8003f04:	9903      	ldr	r1, [sp, #12]
 8003f06:	4602      	mov	r2, r0
 8003f08:	6ec8      	ldr	r0, [r1, #108]	; 0x6c
 8003f0a:	b118      	cbz	r0, 8003f14 <FRAMEWIN__CalcPositions+0x70>
 8003f0c:	9200      	str	r2, [sp, #0]
 8003f0e:	f001 f958 	bl	80051c2 <WM_GetWindowSizeY>
 8003f12:	9a00      	ldr	r2, [sp, #0]
 8003f14:	803a      	strh	r2, [r7, #0]
 8003f16:	b292      	uxth	r2, r2
 8003f18:	b2a9      	uxth	r1, r5
 8003f1a:	4416      	add	r6, r2
 8003f1c:	440e      	add	r6, r1
 8003f1e:	8078      	strh	r0, [r7, #2]
 8003f20:	4430      	add	r0, r6
 8003f22:	80f8      	strh	r0, [r7, #6]
 8003f24:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003f28:	9801      	ldr	r0, [sp, #4]
 8003f2a:	81fd      	strh	r5, [r7, #14]
 8003f2c:	3901      	subs	r1, #1
 8003f2e:	ebc9 090a 	rsb	r9, r9, sl
 8003f32:	f108 38ff 	add.w	r8, r8, #4294967295
 8003f36:	ebc0 0308 	rsb	r3, r0, r8
 8003f3a:	440a      	add	r2, r1
 8003f3c:	fa1f fb8b 	uxth.w	fp, fp
 8003f40:	fa1f f989 	uxth.w	r9, r9
 8003f44:	817b      	strh	r3, [r7, #10]
 8003f46:	827a      	strh	r2, [r7, #18]
 8003f48:	f8a7 b004 	strh.w	fp, [r7, #4]
 8003f4c:	f8a7 9008 	strh.w	r9, [r7, #8]
 8003f50:	f8a7 b00c 	strh.w	fp, [r7, #12]
 8003f54:	f8a7 9010 	strh.w	r9, [r7, #16]
 8003f58:	a803      	add	r0, sp, #12
 8003f5a:	f007 fc97 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003f5e:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8003f62:	9204      	str	r2, [sp, #16]
 8003f64:	f9b7 2010 	ldrsh.w	r2, [r7, #16]
 8003f68:	9205      	str	r2, [sp, #20]
 8003f6a:	4620      	mov	r0, r4
 8003f6c:	aa05      	add	r2, sp, #20
 8003f6e:	a904      	add	r1, sp, #16
 8003f70:	f7ff ff4c 	bl	8003e0c <FRAMEWIN__GetTitleLimits>
 8003f74:	9a04      	ldr	r2, [sp, #16]
 8003f76:	81ba      	strh	r2, [r7, #12]
 8003f78:	9a05      	ldr	r2, [sp, #20]
 8003f7a:	823a      	strh	r2, [r7, #16]
 8003f7c:	b007      	add	sp, #28
 8003f7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003f82 <FRAMEWIN_SetText>:
 8003f82:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003f84:	460d      	mov	r5, r1
 8003f86:	4604      	mov	r4, r0
 8003f88:	b1c0      	cbz	r0, 8003fbc <FRAMEWIN_SetText+0x3a>
 8003f8a:	f007 fc71 	bl	800b870 <GUI_ALLOC_LockH>
 8003f8e:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8003f90:	9000      	str	r0, [sp, #0]
 8003f92:	4668      	mov	r0, sp
 8003f94:	9301      	str	r3, [sp, #4]
 8003f96:	f007 fc79 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003f9a:	a801      	add	r0, sp, #4
 8003f9c:	4629      	mov	r1, r5
 8003f9e:	f005 f9e7 	bl	8009370 <GUI__SetText>
 8003fa2:	b158      	cbz	r0, 8003fbc <FRAMEWIN_SetText+0x3a>
 8003fa4:	4620      	mov	r0, r4
 8003fa6:	f007 fc63 	bl	800b870 <GUI_ALLOC_LockH>
 8003faa:	9b01      	ldr	r3, [sp, #4]
 8003fac:	9000      	str	r0, [sp, #0]
 8003fae:	6703      	str	r3, [r0, #112]	; 0x70
 8003fb0:	4668      	mov	r0, sp
 8003fb2:	f007 fc6b 	bl	800b88c <GUI_ALLOC_UnlockH>
 8003fb6:	4620      	mov	r0, r4
 8003fb8:	f001 fe3e 	bl	8005c38 <WM_InvalidateWindow>
 8003fbc:	b003      	add	sp, #12
 8003fbe:	bd30      	pop	{r4, r5, pc}

08003fc0 <FRAMEWIN_CreateUser>:
 8003fc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003fc4:	b08b      	sub	sp, #44	; 0x2c
 8003fc6:	f8dd 904c 	ldr.w	r9, [sp, #76]	; 0x4c
 8003fca:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8003fcc:	9400      	str	r4, [sp, #0]
 8003fce:	f449 5480 	orr.w	r4, r9, #4096	; 0x1000
 8003fd2:	9401      	str	r4, [sp, #4]
 8003fd4:	4c33      	ldr	r4, [pc, #204]	; (80040a4 <FRAMEWIN_CreateUser+0xe4>)
 8003fd6:	9402      	str	r4, [sp, #8]
 8003fd8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8003fda:	3460      	adds	r4, #96	; 0x60
 8003fdc:	9403      	str	r4, [sp, #12]
 8003fde:	f001 fe59 	bl	8005c94 <WM_CreateWindowAsChild>
 8003fe2:	4606      	mov	r6, r0
 8003fe4:	2800      	cmp	r0, #0
 8003fe6:	d058      	beq.n	800409a <FRAMEWIN_CreateUser+0xda>
 8003fe8:	f007 fc42 	bl	800b870 <GUI_ALLOC_LockH>
 8003fec:	4d2e      	ldr	r5, [pc, #184]	; (80040a8 <FRAMEWIN_CreateUser+0xe8>)
 8003fee:	9915      	ldr	r1, [sp, #84]	; 0x54
 8003ff0:	9004      	str	r0, [sp, #16]
 8003ff2:	2230      	movs	r2, #48	; 0x30
 8003ff4:	f007 ffc2 	bl	800bf7c <WIDGET__Init>
 8003ff8:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8003ffc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003ffe:	f858 7d18 	ldr.w	r7, [r8, #-24]!
 8004002:	f107 0434 	add.w	r4, r7, #52	; 0x34
 8004006:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004008:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800400a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800400c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8004010:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004012:	4d26      	ldr	r5, [pc, #152]	; (80040ac <FRAMEWIN_CreateUser+0xec>)
 8004014:	e884 0003 	stmia.w	r4, {r0, r1}
 8004018:	667b      	str	r3, [r7, #100]	; 0x64
 800401a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800401c:	f8a7 307c 	strh.w	r3, [r7, #124]	; 0x7c
 8004020:	2400      	movs	r4, #0
 8004022:	682b      	ldr	r3, [r5, #0]
 8004024:	65fb      	str	r3, [r7, #92]	; 0x5c
 8004026:	f8c7 4080 	str.w	r4, [r7, #128]	; 0x80
 800402a:	66fc      	str	r4, [r7, #108]	; 0x6c
 800402c:	f8c7 4088 	str.w	r4, [r7, #136]	; 0x88
 8004030:	4640      	mov	r0, r8
 8004032:	f007 fc2b 	bl	800b88c <GUI_ALLOC_UnlockH>
 8004036:	4630      	mov	r0, r6
 8004038:	a905      	add	r1, sp, #20
 800403a:	f7ff ff33 	bl	8003ea4 <FRAMEWIN__CalcPositions>
 800403e:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 8004042:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 8004046:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 800404a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800404e:	9403      	str	r4, [sp, #12]
 8004050:	f241 7782 	movw	r7, #6018	; 0x1782
 8004054:	1a5b      	subs	r3, r3, r1
 8004056:	1a12      	subs	r2, r2, r0
 8004058:	9701      	str	r7, [sp, #4]
 800405a:	4f15      	ldr	r7, [pc, #84]	; (80040b0 <FRAMEWIN_CreateUser+0xf0>)
 800405c:	9600      	str	r6, [sp, #0]
 800405e:	3201      	adds	r2, #1
 8004060:	3301      	adds	r3, #1
 8004062:	9702      	str	r7, [sp, #8]
 8004064:	f001 fe16 	bl	8005c94 <WM_CreateWindowAsChild>
 8004068:	682b      	ldr	r3, [r5, #0]
 800406a:	4604      	mov	r4, r0
 800406c:	685b      	ldr	r3, [r3, #4]
 800406e:	4630      	mov	r0, r6
 8004070:	4798      	blx	r3
 8004072:	4630      	mov	r0, r6
 8004074:	f007 fbfc 	bl	800b870 <GUI_ALLOC_LockH>
 8004078:	9004      	str	r0, [sp, #16]
 800407a:	6684      	str	r4, [r0, #104]	; 0x68
 800407c:	4640      	mov	r0, r8
 800407e:	f007 fc05 	bl	800b88c <GUI_ALLOC_UnlockH>
 8004082:	f242 0304 	movw	r3, #8196	; 0x2004
 8004086:	ea09 0303 	and.w	r3, r9, r3
 800408a:	b913      	cbnz	r3, 8004092 <FRAMEWIN_CreateUser+0xd2>
 800408c:	4630      	mov	r0, r6
 800408e:	f000 fcfd 	bl	8004a8c <WM_DisableMemdev>
 8004092:	4630      	mov	r0, r6
 8004094:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004096:	f7ff ff74 	bl	8003f82 <FRAMEWIN_SetText>
 800409a:	4630      	mov	r0, r6
 800409c:	b00b      	add	sp, #44	; 0x2c
 800409e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80040a2:	bf00      	nop
 80040a4:	080040ff 	.word	0x080040ff
 80040a8:	20000068 	.word	0x20000068
 80040ac:	20000090 	.word	0x20000090
 80040b0:	08003d0b 	.word	0x08003d0b

080040b4 <FRAMEWIN_CreateIndirect>:
 80040b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80040b6:	b089      	sub	sp, #36	; 0x24
 80040b8:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 80040bc:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 80040c0:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 80040c4:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 80040c8:	9100      	str	r1, [sp, #0]
 80040ca:	2100      	movs	r1, #0
 80040cc:	9101      	str	r1, [sp, #4]
 80040ce:	8a41      	ldrh	r1, [r0, #18]
 80040d0:	9102      	str	r1, [sp, #8]
 80040d2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80040d6:	9103      	str	r1, [sp, #12]
 80040d8:	6844      	ldr	r4, [r0, #4]
 80040da:	9404      	str	r4, [sp, #16]
 80040dc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80040de:	9405      	str	r4, [sp, #20]
 80040e0:	6984      	ldr	r4, [r0, #24]
 80040e2:	9406      	str	r4, [sp, #24]
 80040e4:	eb0e 0002 	add.w	r0, lr, r2
 80040e8:	18f9      	adds	r1, r7, r3
 80040ea:	4632      	mov	r2, r6
 80040ec:	462b      	mov	r3, r5
 80040ee:	f7ff ff67 	bl	8003fc0 <FRAMEWIN_CreateUser>
 80040f2:	b009      	add	sp, #36	; 0x24
 80040f4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080040f6 <FRAMEWIN_SetActive>:
 80040f6:	b108      	cbz	r0, 80040fc <FRAMEWIN_SetActive+0x6>
 80040f8:	f7ff bdeb 	b.w	8003cd2 <_SetActive>
 80040fc:	4770      	bx	lr

080040fe <FRAMEWIN_Callback>:
 80040fe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004102:	6844      	ldr	r4, [r0, #4]
 8004104:	b086      	sub	sp, #24
 8004106:	4605      	mov	r5, r0
 8004108:	4620      	mov	r0, r4
 800410a:	f007 fbb1 	bl	800b870 <GUI_ALLOC_LockH>
 800410e:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 8004110:	9000      	str	r0, [sp, #0]
 8004112:	f8d0 7088 	ldr.w	r7, [r0, #136]	; 0x88
 8004116:	f8d0 6080 	ldr.w	r6, [r0, #128]	; 0x80
 800411a:	f8d0 8068 	ldr.w	r8, [r0, #104]	; 0x68
 800411e:	f8b0 907c 	ldrh.w	r9, [r0, #124]	; 0x7c
 8004122:	b113      	cbz	r3, 800412a <FRAMEWIN_Callback+0x2c>
 8004124:	f8d3 a000 	ldr.w	sl, [r3]
 8004128:	e000      	b.n	800412c <FRAMEWIN_Callback+0x2e>
 800412a:	469a      	mov	sl, r3
 800412c:	4668      	mov	r0, sp
 800412e:	f007 fbad 	bl	800b88c <GUI_ALLOC_UnlockH>
 8004132:	b13f      	cbz	r7, 8004144 <FRAMEWIN_Callback+0x46>
 8004134:	687b      	ldr	r3, [r7, #4]
 8004136:	4628      	mov	r0, r5
 8004138:	4798      	blx	r3
 800413a:	2800      	cmp	r0, #0
 800413c:	f040 811d 	bne.w	800437a <FRAMEWIN_Callback+0x27c>
 8004140:	683f      	ldr	r7, [r7, #0]
 8004142:	e7f6      	b.n	8004132 <FRAMEWIN_Callback+0x34>
 8004144:	682b      	ldr	r3, [r5, #0]
 8004146:	2b17      	cmp	r3, #23
 8004148:	f000 808a 	beq.w	8004260 <FRAMEWIN_Callback+0x162>
 800414c:	dc18      	bgt.n	8004180 <FRAMEWIN_Callback+0x82>
 800414e:	2b0f      	cmp	r3, #15
 8004150:	d043      	beq.n	80041da <FRAMEWIN_Callback+0xdc>
 8004152:	dc06      	bgt.n	8004162 <FRAMEWIN_Callback+0x64>
 8004154:	2b0b      	cmp	r3, #11
 8004156:	f000 80fe 	beq.w	8004356 <FRAMEWIN_Callback+0x258>
 800415a:	2b0d      	cmp	r3, #13
 800415c:	f000 80c0 	beq.w	80042e0 <FRAMEWIN_Callback+0x1e2>
 8004160:	e103      	b.n	800436a <FRAMEWIN_Callback+0x26c>
 8004162:	2b11      	cmp	r3, #17
 8004164:	d01b      	beq.n	800419e <FRAMEWIN_Callback+0xa0>
 8004166:	2b14      	cmp	r3, #20
 8004168:	f040 80ff 	bne.w	800436a <FRAMEWIN_Callback+0x26c>
 800416c:	4620      	mov	r0, r4
 800416e:	a901      	add	r1, sp, #4
 8004170:	f7ff fe98 	bl	8003ea4 <FRAMEWIN__CalcPositions>
 8004174:	ab02      	add	r3, sp, #8
 8004176:	cb03      	ldmia	r3!, {r0, r1}
 8004178:	68ea      	ldr	r2, [r5, #12]
 800417a:	6010      	str	r0, [r2, #0]
 800417c:	6051      	str	r1, [r2, #4]
 800417e:	e0fc      	b.n	800437a <FRAMEWIN_Callback+0x27c>
 8004180:	2b26      	cmp	r3, #38	; 0x26
 8004182:	d070      	beq.n	8004266 <FRAMEWIN_Callback+0x168>
 8004184:	dc05      	bgt.n	8004192 <FRAMEWIN_Callback+0x94>
 8004186:	2b1e      	cmp	r3, #30
 8004188:	d07b      	beq.n	8004282 <FRAMEWIN_Callback+0x184>
 800418a:	2b20      	cmp	r3, #32
 800418c:	f000 80b6 	beq.w	80042fc <FRAMEWIN_Callback+0x1fe>
 8004190:	e0eb      	b.n	800436a <FRAMEWIN_Callback+0x26c>
 8004192:	2b2a      	cmp	r3, #42	; 0x2a
 8004194:	d013      	beq.n	80041be <FRAMEWIN_Callback+0xc0>
 8004196:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800419a:	d025      	beq.n	80041e8 <FRAMEWIN_Callback+0xea>
 800419c:	e0e5      	b.n	800436a <FRAMEWIN_Callback+0x26c>
 800419e:	4620      	mov	r0, r4
 80041a0:	68ee      	ldr	r6, [r5, #12]
 80041a2:	f007 fb65 	bl	800b870 <GUI_ALLOC_LockH>
 80041a6:	9001      	str	r0, [sp, #4]
 80041a8:	8933      	ldrh	r3, [r6, #8]
 80041aa:	2b01      	cmp	r3, #1
 80041ac:	d105      	bne.n	80041ba <FRAMEWIN_Callback+0xbc>
 80041ae:	f8b0 307c 	ldrh.w	r3, [r0, #124]	; 0x7c
 80041b2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80041b6:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 80041ba:	a801      	add	r0, sp, #4
 80041bc:	e0d3      	b.n	8004366 <FRAMEWIN_Callback+0x268>
 80041be:	4620      	mov	r0, r4
 80041c0:	f007 fb56 	bl	800b870 <GUI_ALLOC_LockH>
 80041c4:	68eb      	ldr	r3, [r5, #12]
 80041c6:	9000      	str	r0, [sp, #0]
 80041c8:	b113      	cbz	r3, 80041d0 <FRAMEWIN_Callback+0xd2>
 80041ca:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
 80041ce:	e002      	b.n	80041d6 <FRAMEWIN_Callback+0xd8>
 80041d0:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80041d4:	60eb      	str	r3, [r5, #12]
 80041d6:	4668      	mov	r0, sp
 80041d8:	e03f      	b.n	800425a <FRAMEWIN_Callback+0x15c>
 80041da:	f1ba 0f00 	cmp.w	sl, #0
 80041de:	f000 80c4 	beq.w	800436a <FRAMEWIN_Callback+0x26c>
 80041e2:	4620      	mov	r0, r4
 80041e4:	47d0      	blx	sl
 80041e6:	e0c0      	b.n	800436a <FRAMEWIN_Callback+0x26c>
 80041e8:	4620      	mov	r0, r4
 80041ea:	f8d5 800c 	ldr.w	r8, [r5, #12]
 80041ee:	f007 fb3f 	bl	800b870 <GUI_ALLOC_LockH>
 80041f2:	ae06      	add	r6, sp, #24
 80041f4:	f8b0 707c 	ldrh.w	r7, [r0, #124]	; 0x7c
 80041f8:	f846 0d14 	str.w	r0, [r6, #-20]!
 80041fc:	4630      	mov	r0, r6
 80041fe:	f007 fb45 	bl	800b88c <GUI_ALLOC_UnlockH>
 8004202:	68eb      	ldr	r3, [r5, #12]
 8004204:	2b00      	cmp	r3, #0
 8004206:	f000 80b8 	beq.w	800437a <FRAMEWIN_Callback+0x27c>
 800420a:	f898 3008 	ldrb.w	r3, [r8, #8]
 800420e:	b1cb      	cbz	r3, 8004244 <FRAMEWIN_Callback+0x146>
 8004210:	073b      	lsls	r3, r7, #28
 8004212:	d402      	bmi.n	800421a <FRAMEWIN_Callback+0x11c>
 8004214:	4620      	mov	r0, r4
 8004216:	f000 fed1 	bl	8004fbc <WM_SetFocus>
 800421a:	4620      	mov	r0, r4
 800421c:	f000 ffe8 	bl	80051f0 <WM_BringToTop>
 8004220:	f407 7388 	and.w	r3, r7, #272	; 0x110
 8004224:	f5b3 7f88 	cmp.w	r3, #272	; 0x110
 8004228:	f040 80a7 	bne.w	800437a <FRAMEWIN_Callback+0x27c>
 800422c:	f007 0780 	and.w	r7, r7, #128	; 0x80
 8004230:	b2bb      	uxth	r3, r7
 8004232:	2b00      	cmp	r3, #0
 8004234:	f040 80a1 	bne.w	800437a <FRAMEWIN_Callback+0x27c>
 8004238:	4620      	mov	r0, r4
 800423a:	4641      	mov	r1, r8
 800423c:	2205      	movs	r2, #5
 800423e:	f000 fb17 	bl	8004870 <WM_SetCaptureMove>
 8004242:	e09a      	b.n	800437a <FRAMEWIN_Callback+0x27c>
 8004244:	4620      	mov	r0, r4
 8004246:	f007 fb13 	bl	800b870 <GUI_ALLOC_LockH>
 800424a:	f8b0 307c 	ldrh.w	r3, [r0, #124]	; 0x7c
 800424e:	9001      	str	r0, [sp, #4]
 8004250:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004254:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 8004258:	4630      	mov	r0, r6
 800425a:	f007 fb17 	bl	800b88c <GUI_ALLOC_UnlockH>
 800425e:	e08c      	b.n	800437a <FRAMEWIN_Callback+0x27c>
 8004260:	f8c5 800c 	str.w	r8, [r5, #12]
 8004264:	e089      	b.n	800437a <FRAMEWIN_Callback+0x27c>
 8004266:	68eb      	ldr	r3, [r5, #12]
 8004268:	2b02      	cmp	r3, #2
 800426a:	f040 8086 	bne.w	800437a <FRAMEWIN_Callback+0x27c>
 800426e:	a906      	add	r1, sp, #24
 8004270:	9304      	str	r3, [sp, #16]
 8004272:	2327      	movs	r3, #39	; 0x27
 8004274:	f841 3d14 	str.w	r3, [r1, #-20]!
 8004278:	68a8      	ldr	r0, [r5, #8]
 800427a:	9403      	str	r4, [sp, #12]
 800427c:	f000 f968 	bl	8004550 <WM__SendMessage>
 8004280:	e07b      	b.n	800437a <FRAMEWIN_Callback+0x27c>
 8004282:	f8d5 900c 	ldr.w	r9, [r5, #12]
 8004286:	f1b9 0f01 	cmp.w	r9, #1
 800428a:	d124      	bne.n	80042d6 <FRAMEWIN_Callback+0x1d8>
 800428c:	4630      	mov	r0, r6
 800428e:	f000 fde2 	bl	8004e56 <WM_IsWindow>
 8004292:	b158      	cbz	r0, 80042ac <FRAMEWIN_Callback+0x1ae>
 8004294:	4630      	mov	r0, r6
 8004296:	f000 fe91 	bl	8004fbc <WM_SetFocus>
 800429a:	4630      	mov	r0, r6
 800429c:	f000 fdb4 	bl	8004e08 <WM_HasFocus>
 80042a0:	b188      	cbz	r0, 80042c6 <FRAMEWIN_Callback+0x1c8>
 80042a2:	4630      	mov	r0, r6
 80042a4:	4649      	mov	r1, r9
 80042a6:	f007 fe83 	bl	800bfb0 <WIDGET_OrState>
 80042aa:	e00c      	b.n	80042c6 <FRAMEWIN_Callback+0x1c8>
 80042ac:	4640      	mov	r0, r8
 80042ae:	f000 fab1 	bl	8004814 <WM_SetFocusOnNextChild>
 80042b2:	4606      	mov	r6, r0
 80042b4:	4620      	mov	r0, r4
 80042b6:	f007 fadb 	bl	800b870 <GUI_ALLOC_LockH>
 80042ba:	9000      	str	r0, [sp, #0]
 80042bc:	f8c0 6080 	str.w	r6, [r0, #128]	; 0x80
 80042c0:	4668      	mov	r0, sp
 80042c2:	f007 fae3 	bl	800b88c <GUI_ALLOC_UnlockH>
 80042c6:	4620      	mov	r0, r4
 80042c8:	2101      	movs	r1, #1
 80042ca:	f7ff ff14 	bl	80040f6 <FRAMEWIN_SetActive>
 80042ce:	2e00      	cmp	r6, #0
 80042d0:	d153      	bne.n	800437a <FRAMEWIN_Callback+0x27c>
 80042d2:	60ee      	str	r6, [r5, #12]
 80042d4:	e051      	b.n	800437a <FRAMEWIN_Callback+0x27c>
 80042d6:	4620      	mov	r0, r4
 80042d8:	4639      	mov	r1, r7
 80042da:	f7ff ff0c 	bl	80040f6 <FRAMEWIN_SetActive>
 80042de:	e04c      	b.n	800437a <FRAMEWIN_Callback+0x27c>
 80042e0:	f019 0f08 	tst.w	r9, #8
 80042e4:	d141      	bne.n	800436a <FRAMEWIN_Callback+0x26c>
 80042e6:	68eb      	ldr	r3, [r5, #12]
 80042e8:	68db      	ldr	r3, [r3, #12]
 80042ea:	2b00      	cmp	r3, #0
 80042ec:	d03d      	beq.n	800436a <FRAMEWIN_Callback+0x26c>
 80042ee:	7a1b      	ldrb	r3, [r3, #8]
 80042f0:	2b00      	cmp	r3, #0
 80042f2:	d03a      	beq.n	800436a <FRAMEWIN_Callback+0x26c>
 80042f4:	4620      	mov	r0, r4
 80042f6:	f000 fe61 	bl	8004fbc <WM_SetFocus>
 80042fa:	e036      	b.n	800436a <FRAMEWIN_Callback+0x26c>
 80042fc:	68ee      	ldr	r6, [r5, #12]
 80042fe:	2e00      	cmp	r6, #0
 8004300:	d033      	beq.n	800436a <FRAMEWIN_Callback+0x26c>
 8004302:	6870      	ldr	r0, [r6, #4]
 8004304:	4621      	mov	r1, r4
 8004306:	f000 f8ed 	bl	80044e4 <WM__IsAncestorOrSelf>
 800430a:	b180      	cbz	r0, 800432e <FRAMEWIN_Callback+0x230>
 800430c:	4620      	mov	r0, r4
 800430e:	2101      	movs	r1, #1
 8004310:	f7ff fcdf 	bl	8003cd2 <_SetActive>
 8004314:	6870      	ldr	r0, [r6, #4]
 8004316:	4621      	mov	r1, r4
 8004318:	f000 f8d3 	bl	80044c2 <WM__IsAncestor>
 800431c:	b328      	cbz	r0, 800436a <FRAMEWIN_Callback+0x26c>
 800431e:	4620      	mov	r0, r4
 8004320:	f007 faa6 	bl	800b870 <GUI_ALLOC_LockH>
 8004324:	ab06      	add	r3, sp, #24
 8004326:	6872      	ldr	r2, [r6, #4]
 8004328:	f843 0d14 	str.w	r0, [r3, #-20]!
 800432c:	e00f      	b.n	800434e <FRAMEWIN_Callback+0x250>
 800432e:	4620      	mov	r0, r4
 8004330:	4639      	mov	r1, r7
 8004332:	f7ff fcce 	bl	8003cd2 <_SetActive>
 8004336:	6830      	ldr	r0, [r6, #0]
 8004338:	4621      	mov	r1, r4
 800433a:	f000 f8c2 	bl	80044c2 <WM__IsAncestor>
 800433e:	b1a0      	cbz	r0, 800436a <FRAMEWIN_Callback+0x26c>
 8004340:	4620      	mov	r0, r4
 8004342:	f007 fa95 	bl	800b870 <GUI_ALLOC_LockH>
 8004346:	ab06      	add	r3, sp, #24
 8004348:	6832      	ldr	r2, [r6, #0]
 800434a:	f843 0d14 	str.w	r0, [r3, #-20]!
 800434e:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8004352:	4618      	mov	r0, r3
 8004354:	e007      	b.n	8004366 <FRAMEWIN_Callback+0x268>
 8004356:	4620      	mov	r0, r4
 8004358:	f007 fa8a 	bl	800b870 <GUI_ALLOC_LockH>
 800435c:	9000      	str	r0, [sp, #0]
 800435e:	3070      	adds	r0, #112	; 0x70
 8004360:	f007 fc56 	bl	800bc10 <GUI_ALLOC_FreePtr>
 8004364:	4668      	mov	r0, sp
 8004366:	f007 fa91 	bl	800b88c <GUI_ALLOC_UnlockH>
 800436a:	4620      	mov	r0, r4
 800436c:	4629      	mov	r1, r5
 800436e:	f007 fe4a 	bl	800c006 <WIDGET_HandleActive>
 8004372:	b110      	cbz	r0, 800437a <FRAMEWIN_Callback+0x27c>
 8004374:	4628      	mov	r0, r5
 8004376:	f002 f88d 	bl	8006494 <WM_DefaultProc>
 800437a:	b006      	add	sp, #24
 800437c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08004380 <FRAMEWIN_GetActive>:
 8004380:	b513      	push	{r0, r1, r4, lr}
 8004382:	4604      	mov	r4, r0
 8004384:	b158      	cbz	r0, 800439e <FRAMEWIN_GetActive+0x1e>
 8004386:	f007 fa73 	bl	800b870 <GUI_ALLOC_LockH>
 800438a:	ab02      	add	r3, sp, #8
 800438c:	f8b0 407c 	ldrh.w	r4, [r0, #124]	; 0x7c
 8004390:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004394:	4618      	mov	r0, r3
 8004396:	f3c4 04c0 	ubfx	r4, r4, #3, #1
 800439a:	f007 fa77 	bl	800b88c <GUI_ALLOC_UnlockH>
 800439e:	4620      	mov	r0, r4
 80043a0:	b002      	add	sp, #8
 80043a2:	bd10      	pop	{r4, pc}

080043a4 <GUI_CreateDialogBox>:
 80043a4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80043a8:	4606      	mov	r6, r0
 80043aa:	4688      	mov	r8, r1
 80043ac:	4614      	mov	r4, r2
 80043ae:	461d      	mov	r5, r3
 80043b0:	b913      	cbnz	r3, 80043b8 <GUI_CreateDialogBox+0x14>
 80043b2:	f000 fb97 	bl	8004ae4 <WM_GetDesktopWindow>
 80043b6:	4605      	mov	r5, r0
 80043b8:	9400      	str	r4, [sp, #0]
 80043ba:	4630      	mov	r0, r6
 80043bc:	6834      	ldr	r4, [r6, #0]
 80043be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80043c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80043c2:	4629      	mov	r1, r5
 80043c4:	47a0      	blx	r4
 80043c6:	4604      	mov	r4, r0
 80043c8:	2800      	cmp	r0, #0
 80043ca:	d039      	beq.n	8004440 <GUI_CreateDialogBox+0x9c>
 80043cc:	f000 fb7c 	bl	8004ac8 <WM_GetClientWindow>
 80043d0:	8a71      	ldrh	r1, [r6, #18]
 80043d2:	4607      	mov	r7, r0
 80043d4:	4620      	mov	r0, r4
 80043d6:	f007 fdeb 	bl	800bfb0 <WIDGET_OrState>
 80043da:	4620      	mov	r0, r4
 80043dc:	f000 fe8b 	bl	80050f6 <WM_ShowWindow>
 80043e0:	4638      	mov	r0, r7
 80043e2:	f108 38ff 	add.w	r8, r8, #4294967295
 80043e6:	f000 fe86 	bl	80050f6 <WM_ShowWindow>
 80043ea:	f1b8 0f00 	cmp.w	r8, #0
 80043ee:	dd0f      	ble.n	8004410 <GUI_CreateDialogBox+0x6c>
 80043f0:	f856 cf1c 	ldr.w	ip, [r6, #28]!
 80043f4:	2200      	movs	r2, #0
 80043f6:	9200      	str	r2, [sp, #0]
 80043f8:	4630      	mov	r0, r6
 80043fa:	4639      	mov	r1, r7
 80043fc:	4613      	mov	r3, r2
 80043fe:	47e0      	blx	ip
 8004400:	4681      	mov	r9, r0
 8004402:	2800      	cmp	r0, #0
 8004404:	d1ed      	bne.n	80043e2 <GUI_CreateDialogBox+0x3e>
 8004406:	4620      	mov	r0, r4
 8004408:	f001 fcee 	bl	8005de8 <WM_DeleteWindow>
 800440c:	4648      	mov	r0, r9
 800440e:	e018      	b.n	8004442 <GUI_CreateDialogBox+0x9e>
 8004410:	4638      	mov	r0, r7
 8004412:	211d      	movs	r1, #29
 8004414:	f000 fdb7 	bl	8004f86 <WM_SendMessageNoPara>
 8004418:	1c6b      	adds	r3, r5, #1
 800441a:	d011      	beq.n	8004440 <GUI_CreateDialogBox+0x9c>
 800441c:	f000 fb8c 	bl	8004b38 <WM_GetFocusedWindow>
 8004420:	b150      	cbz	r0, 8004438 <GUI_CreateDialogBox+0x94>
 8004422:	f007 fa1b 	bl	800b85c <GUI_ALLOC_h2p>
 8004426:	6980      	ldr	r0, [r0, #24]
 8004428:	42a0      	cmp	r0, r4
 800442a:	d00a      	beq.n	8004442 <GUI_CreateDialogBox+0x9e>
 800442c:	2800      	cmp	r0, #0
 800442e:	d1f8      	bne.n	8004422 <GUI_CreateDialogBox+0x7e>
 8004430:	4620      	mov	r0, r4
 8004432:	f000 f9ef 	bl	8004814 <WM_SetFocusOnNextChild>
 8004436:	e003      	b.n	8004440 <GUI_CreateDialogBox+0x9c>
 8004438:	42a5      	cmp	r5, r4
 800443a:	d1f9      	bne.n	8004430 <GUI_CreateDialogBox+0x8c>
 800443c:	4628      	mov	r0, r5
 800443e:	e000      	b.n	8004442 <GUI_CreateDialogBox+0x9e>
 8004440:	4620      	mov	r0, r4
 8004442:	b003      	add	sp, #12
 8004444:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08004448 <WM__ForEachDesc>:
 8004448:	b570      	push	{r4, r5, r6, lr}
 800444a:	460d      	mov	r5, r1
 800444c:	4616      	mov	r6, r2
 800444e:	f007 fa05 	bl	800b85c <GUI_ALLOC_h2p>
 8004452:	69c4      	ldr	r4, [r0, #28]
 8004454:	b164      	cbz	r4, 8004470 <WM__ForEachDesc+0x28>
 8004456:	4620      	mov	r0, r4
 8004458:	4631      	mov	r1, r6
 800445a:	47a8      	blx	r5
 800445c:	4620      	mov	r0, r4
 800445e:	4629      	mov	r1, r5
 8004460:	4632      	mov	r2, r6
 8004462:	f7ff fff1 	bl	8004448 <WM__ForEachDesc>
 8004466:	4620      	mov	r0, r4
 8004468:	f007 f9f8 	bl	800b85c <GUI_ALLOC_h2p>
 800446c:	6a04      	ldr	r4, [r0, #32]
 800446e:	e7f1      	b.n	8004454 <WM__ForEachDesc+0xc>
 8004470:	bd70      	pop	{r4, r5, r6, pc}

08004472 <WM__GetFirstSibling>:
 8004472:	b508      	push	{r3, lr}
 8004474:	f000 fbf2 	bl	8004c5c <WM_GetParent>
 8004478:	b118      	cbz	r0, 8004482 <WM__GetFirstSibling+0x10>
 800447a:	f007 f9ef 	bl	800b85c <GUI_ALLOC_h2p>
 800447e:	69c0      	ldr	r0, [r0, #28]
 8004480:	bd08      	pop	{r3, pc}
 8004482:	bd08      	pop	{r3, pc}

08004484 <WM__GetLastSibling>:
 8004484:	b510      	push	{r4, lr}
 8004486:	4604      	mov	r4, r0
 8004488:	b130      	cbz	r0, 8004498 <WM__GetLastSibling+0x14>
 800448a:	4620      	mov	r0, r4
 800448c:	f007 f9e6 	bl	800b85c <GUI_ALLOC_h2p>
 8004490:	6a03      	ldr	r3, [r0, #32]
 8004492:	b10b      	cbz	r3, 8004498 <WM__GetLastSibling+0x14>
 8004494:	461c      	mov	r4, r3
 8004496:	e7f8      	b.n	800448a <WM__GetLastSibling+0x6>
 8004498:	4620      	mov	r0, r4
 800449a:	bd10      	pop	{r4, pc}

0800449c <WM__GetPrevSibling>:
 800449c:	b538      	push	{r3, r4, r5, lr}
 800449e:	4605      	mov	r5, r0
 80044a0:	f7ff ffe7 	bl	8004472 <WM__GetFirstSibling>
 80044a4:	4604      	mov	r4, r0
 80044a6:	b154      	cbz	r4, 80044be <WM__GetPrevSibling+0x22>
 80044a8:	42ac      	cmp	r4, r5
 80044aa:	d007      	beq.n	80044bc <WM__GetPrevSibling+0x20>
 80044ac:	4620      	mov	r0, r4
 80044ae:	f007 f9d5 	bl	800b85c <GUI_ALLOC_h2p>
 80044b2:	6a03      	ldr	r3, [r0, #32]
 80044b4:	42ab      	cmp	r3, r5
 80044b6:	d002      	beq.n	80044be <WM__GetPrevSibling+0x22>
 80044b8:	461c      	mov	r4, r3
 80044ba:	e7f4      	b.n	80044a6 <WM__GetPrevSibling+0xa>
 80044bc:	2400      	movs	r4, #0
 80044be:	4620      	mov	r0, r4
 80044c0:	bd38      	pop	{r3, r4, r5, pc}

080044c2 <WM__IsAncestor>:
 80044c2:	b510      	push	{r4, lr}
 80044c4:	460c      	mov	r4, r1
 80044c6:	b908      	cbnz	r0, 80044cc <WM__IsAncestor+0xa>
 80044c8:	2000      	movs	r0, #0
 80044ca:	bd10      	pop	{r4, pc}
 80044cc:	2900      	cmp	r1, #0
 80044ce:	d0fb      	beq.n	80044c8 <WM__IsAncestor+0x6>
 80044d0:	f007 f9c4 	bl	800b85c <GUI_ALLOC_h2p>
 80044d4:	6980      	ldr	r0, [r0, #24]
 80044d6:	42a0      	cmp	r0, r4
 80044d8:	d002      	beq.n	80044e0 <WM__IsAncestor+0x1e>
 80044da:	2800      	cmp	r0, #0
 80044dc:	d1f8      	bne.n	80044d0 <WM__IsAncestor+0xe>
 80044de:	e7f3      	b.n	80044c8 <WM__IsAncestor+0x6>
 80044e0:	2001      	movs	r0, #1
 80044e2:	bd10      	pop	{r4, pc}

080044e4 <WM__IsAncestorOrSelf>:
 80044e4:	4288      	cmp	r0, r1
 80044e6:	d001      	beq.n	80044ec <WM__IsAncestorOrSelf+0x8>
 80044e8:	f7ff bfeb 	b.w	80044c2 <WM__IsAncestor>
 80044ec:	2001      	movs	r0, #1
 80044ee:	4770      	bx	lr

080044f0 <WM__IsChild>:
 80044f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80044f2:	460d      	mov	r5, r1
 80044f4:	4604      	mov	r4, r0
 80044f6:	b160      	cbz	r0, 8004512 <WM__IsChild+0x22>
 80044f8:	f007 f9ba 	bl	800b870 <GUI_ALLOC_LockH>
 80044fc:	9001      	str	r0, [sp, #4]
 80044fe:	b120      	cbz	r0, 800450a <WM__IsChild+0x1a>
 8004500:	6984      	ldr	r4, [r0, #24]
 8004502:	1b63      	subs	r3, r4, r5
 8004504:	425c      	negs	r4, r3
 8004506:	415c      	adcs	r4, r3
 8004508:	e000      	b.n	800450c <WM__IsChild+0x1c>
 800450a:	4604      	mov	r4, r0
 800450c:	a801      	add	r0, sp, #4
 800450e:	f007 f9bd 	bl	800b88c <GUI_ALLOC_UnlockH>
 8004512:	4620      	mov	r0, r4
 8004514:	b003      	add	sp, #12
 8004516:	bd30      	pop	{r4, r5, pc}

08004518 <WM__GetFocusedChild>:
 8004518:	b538      	push	{r3, r4, r5, lr}
 800451a:	4d06      	ldr	r5, [pc, #24]	; (8004534 <WM__GetFocusedChild+0x1c>)
 800451c:	4c06      	ldr	r4, [pc, #24]	; (8004538 <WM__GetFocusedChild+0x20>)
 800451e:	682b      	ldr	r3, [r5, #0]
 8004520:	4601      	mov	r1, r0
 8004522:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8004526:	f7ff ffe3 	bl	80044f0 <WM__IsChild>
 800452a:	b110      	cbz	r0, 8004532 <WM__GetFocusedChild+0x1a>
 800452c:	682b      	ldr	r3, [r5, #0]
 800452e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8004532:	bd38      	pop	{r3, r4, r5, pc}
 8004534:	20002c9c 	.word	0x20002c9c
 8004538:	20002c8c 	.word	0x20002c8c

0800453c <WM__Screen2Client>:
 800453c:	f9b0 3000 	ldrsh.w	r3, [r0]
 8004540:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8004544:	4608      	mov	r0, r1
 8004546:	4252      	negs	r2, r2
 8004548:	4259      	negs	r1, r3
 800454a:	f006 bca8 	b.w	800ae9e <GUI_MoveRect>
	...

08004550 <WM__SendMessage>:
 8004550:	b570      	push	{r4, r5, r6, lr}
 8004552:	4c0d      	ldr	r4, [pc, #52]	; (8004588 <WM__SendMessage+0x38>)
 8004554:	6823      	ldr	r3, [r4, #0]
 8004556:	2b13      	cmp	r3, #19
 8004558:	4606      	mov	r6, r0
 800455a:	460d      	mov	r5, r1
 800455c:	dc12      	bgt.n	8004584 <WM__SendMessage+0x34>
 800455e:	f007 f97d 	bl	800b85c <GUI_ALLOC_h2p>
 8004562:	6903      	ldr	r3, [r0, #16]
 8004564:	606e      	str	r6, [r5, #4]
 8004566:	b143      	cbz	r3, 800457a <WM__SendMessage+0x2a>
 8004568:	6822      	ldr	r2, [r4, #0]
 800456a:	4628      	mov	r0, r5
 800456c:	3201      	adds	r2, #1
 800456e:	6022      	str	r2, [r4, #0]
 8004570:	4798      	blx	r3
 8004572:	6823      	ldr	r3, [r4, #0]
 8004574:	3b01      	subs	r3, #1
 8004576:	6023      	str	r3, [r4, #0]
 8004578:	bd70      	pop	{r4, r5, r6, pc}
 800457a:	4628      	mov	r0, r5
 800457c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004580:	f001 bf88 	b.w	8006494 <WM_DefaultProc>
 8004584:	bd70      	pop	{r4, r5, r6, pc}
 8004586:	bf00      	nop
 8004588:	20002abc 	.word	0x20002abc

0800458c <WM__SendMessageNoPara>:
 800458c:	b530      	push	{r4, r5, lr}
 800458e:	b085      	sub	sp, #20
 8004590:	4604      	mov	r4, r0
 8004592:	2210      	movs	r2, #16
 8004594:	460d      	mov	r5, r1
 8004596:	4668      	mov	r0, sp
 8004598:	2100      	movs	r1, #0
 800459a:	f00b fda7 	bl	80100ec <memset>
 800459e:	4620      	mov	r0, r4
 80045a0:	f007 f95c 	bl	800b85c <GUI_ALLOC_h2p>
 80045a4:	6903      	ldr	r3, [r0, #16]
 80045a6:	b11b      	cbz	r3, 80045b0 <WM__SendMessageNoPara+0x24>
 80045a8:	9401      	str	r4, [sp, #4]
 80045aa:	9500      	str	r5, [sp, #0]
 80045ac:	4668      	mov	r0, sp
 80045ae:	4798      	blx	r3
 80045b0:	b005      	add	sp, #20
 80045b2:	bd30      	pop	{r4, r5, pc}

080045b4 <WM__UpdateChildPositions>:
 80045b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80045b8:	b087      	sub	sp, #28
 80045ba:	69c4      	ldr	r4, [r0, #28]
 80045bc:	9303      	str	r3, [sp, #12]
 80045be:	468a      	mov	sl, r1
 80045c0:	4693      	mov	fp, r2
 80045c2:	2c00      	cmp	r4, #0
 80045c4:	d06d      	beq.n	80046a2 <WM__UpdateChildPositions+0xee>
 80045c6:	4620      	mov	r0, r4
 80045c8:	f007 f952 	bl	800b870 <GUI_ALLOC_LockH>
 80045cc:	6a81      	ldr	r1, [r0, #40]	; 0x28
 80045ce:	9005      	str	r0, [sp, #20]
 80045d0:	f401 7320 	and.w	r3, r1, #640	; 0x280
 80045d4:	2b80      	cmp	r3, #128	; 0x80
 80045d6:	f8b0 8000 	ldrh.w	r8, [r0]
 80045da:	8842      	ldrh	r2, [r0, #2]
 80045dc:	8886      	ldrh	r6, [r0, #4]
 80045de:	88c5      	ldrh	r5, [r0, #6]
 80045e0:	d008      	beq.n	80045f4 <WM__UpdateChildPositions+0x40>
 80045e2:	f5b3 7f20 	cmp.w	r3, #640	; 0x280
 80045e6:	d108      	bne.n	80045fa <WM__UpdateChildPositions+0x46>
 80045e8:	eb08 090a 	add.w	r9, r8, sl
 80045ec:	fa1f f989 	uxth.w	r9, r9
 80045f0:	9b03      	ldr	r3, [sp, #12]
 80045f2:	e008      	b.n	8004606 <WM__UpdateChildPositions+0x52>
 80045f4:	9803      	ldr	r0, [sp, #12]
 80045f6:	b283      	uxth	r3, r0
 80045f8:	e001      	b.n	80045fe <WM__UpdateChildPositions+0x4a>
 80045fa:	fa1f f38a 	uxth.w	r3, sl
 80045fe:	eb03 0908 	add.w	r9, r3, r8
 8004602:	fa1f f989 	uxth.w	r9, r9
 8004606:	f401 61a0 	and.w	r1, r1, #1280	; 0x500
 800460a:	4433      	add	r3, r6
 800460c:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8004610:	b29b      	uxth	r3, r3
 8004612:	d008      	beq.n	8004626 <WM__UpdateChildPositions+0x72>
 8004614:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 8004618:	d108      	bne.n	800462c <WM__UpdateChildPositions+0x78>
 800461a:	eb02 0c0b 	add.w	ip, r2, fp
 800461e:	fa1f fc8c 	uxth.w	ip, ip
 8004622:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8004624:	e008      	b.n	8004638 <WM__UpdateChildPositions+0x84>
 8004626:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004628:	b28f      	uxth	r7, r1
 800462a:	e001      	b.n	8004630 <WM__UpdateChildPositions+0x7c>
 800462c:	fa1f f78b 	uxth.w	r7, fp
 8004630:	eb07 0c02 	add.w	ip, r7, r2
 8004634:	fa1f fc8c 	uxth.w	ip, ip
 8004638:	fa0f f989 	sxth.w	r9, r9
 800463c:	fa0f f888 	sxth.w	r8, r8
 8004640:	b212      	sxth	r2, r2
 8004642:	442f      	add	r7, r5
 8004644:	fa0f fc8c 	sxth.w	ip, ip
 8004648:	ebb9 0108 	subs.w	r1, r9, r8
 800464c:	9202      	str	r2, [sp, #8]
 800464e:	b2bf      	uxth	r7, r7
 8004650:	ebc2 020c 	rsb	r2, r2, ip
 8004654:	d100      	bne.n	8004658 <WM__UpdateChildPositions+0xa4>
 8004656:	b142      	cbz	r2, 800466a <WM__UpdateChildPositions+0xb6>
 8004658:	4620      	mov	r0, r4
 800465a:	9301      	str	r3, [sp, #4]
 800465c:	f8cd c000 	str.w	ip, [sp]
 8004660:	f000 fa12 	bl	8004a88 <WM_MoveWindow>
 8004664:	f8dd c000 	ldr.w	ip, [sp]
 8004668:	9b01      	ldr	r3, [sp, #4]
 800466a:	b21b      	sxth	r3, r3
 800466c:	ebc9 0903 	rsb	r9, r9, r3
 8004670:	b236      	sxth	r6, r6
 8004672:	9b02      	ldr	r3, [sp, #8]
 8004674:	ebc6 0808 	rsb	r8, r6, r8
 8004678:	b23f      	sxth	r7, r7
 800467a:	b22d      	sxth	r5, r5
 800467c:	ebcc 0c07 	rsb	ip, ip, r7
 8004680:	1b5d      	subs	r5, r3, r5
 8004682:	eb19 0108 	adds.w	r1, r9, r8
 8004686:	eb0c 0205 	add.w	r2, ip, r5
 800468a:	d100      	bne.n	800468e <WM__UpdateChildPositions+0xda>
 800468c:	b112      	cbz	r2, 8004694 <WM__UpdateChildPositions+0xe0>
 800468e:	4620      	mov	r0, r4
 8004690:	f000 fbfe 	bl	8004e90 <WM_ResizeWindow>
 8004694:	a806      	add	r0, sp, #24
 8004696:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800469a:	6a1c      	ldr	r4, [r3, #32]
 800469c:	f007 f8f6 	bl	800b88c <GUI_ALLOC_UnlockH>
 80046a0:	e78f      	b.n	80045c2 <WM__UpdateChildPositions+0xe>
 80046a2:	b007      	add	sp, #28
 80046a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080046a8 <WM__AddCriticalHandle>:
 80046a8:	4b02      	ldr	r3, [pc, #8]	; (80046b4 <WM__AddCriticalHandle+0xc>)
 80046aa:	681a      	ldr	r2, [r3, #0]
 80046ac:	6002      	str	r2, [r0, #0]
 80046ae:	6018      	str	r0, [r3, #0]
 80046b0:	4770      	bx	lr
 80046b2:	bf00      	nop
 80046b4:	20002cb8 	.word	0x20002cb8

080046b8 <WM__GetClientRectEx>:
 80046b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80046ba:	460d      	mov	r5, r1
 80046bc:	b158      	cbz	r0, 80046d6 <WM__GetClientRectEx+0x1e>
 80046be:	b151      	cbz	r1, 80046d6 <WM__GetClientRectEx+0x1e>
 80046c0:	f007 f8d6 	bl	800b870 <GUI_ALLOC_LockH>
 80046c4:	ac02      	add	r4, sp, #8
 80046c6:	4629      	mov	r1, r5
 80046c8:	f844 0d04 	str.w	r0, [r4, #-4]!
 80046cc:	f001 f96a 	bl	80059a4 <WM__GetClientRectWin>
 80046d0:	4620      	mov	r0, r4
 80046d2:	f007 f8db 	bl	800b88c <GUI_ALLOC_UnlockH>
 80046d6:	b003      	add	sp, #12
 80046d8:	bd30      	pop	{r4, r5, pc}
	...

080046dc <WM_SetHasTrans>:
 80046dc:	b513      	push	{r0, r1, r4, lr}
 80046de:	4604      	mov	r4, r0
 80046e0:	b1b8      	cbz	r0, 8004712 <WM_SetHasTrans+0x36>
 80046e2:	f007 f8c5 	bl	800b870 <GUI_ALLOC_LockH>
 80046e6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80046e8:	9001      	str	r0, [sp, #4]
 80046ea:	07db      	lsls	r3, r3, #31
 80046ec:	d40e      	bmi.n	800470c <WM_SetHasTrans+0x30>
 80046ee:	4620      	mov	r0, r4
 80046f0:	f000 fd16 	bl	8005120 <WM_ValidateWindow>
 80046f4:	9b01      	ldr	r3, [sp, #4]
 80046f6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80046f8:	f042 0201 	orr.w	r2, r2, #1
 80046fc:	629a      	str	r2, [r3, #40]	; 0x28
 80046fe:	4b06      	ldr	r3, [pc, #24]	; (8004718 <WM_SetHasTrans+0x3c>)
 8004700:	681a      	ldr	r2, [r3, #0]
 8004702:	4620      	mov	r0, r4
 8004704:	3201      	adds	r2, #1
 8004706:	601a      	str	r2, [r3, #0]
 8004708:	f001 fa96 	bl	8005c38 <WM_InvalidateWindow>
 800470c:	a801      	add	r0, sp, #4
 800470e:	f007 f8bd 	bl	800b88c <GUI_ALLOC_UnlockH>
 8004712:	b002      	add	sp, #8
 8004714:	bd10      	pop	{r4, pc}
 8004716:	bf00      	nop
 8004718:	20002ccc 	.word	0x20002ccc

0800471c <WM_GetHasTrans>:
 800471c:	b508      	push	{r3, lr}
 800471e:	b128      	cbz	r0, 800472c <WM_GetHasTrans+0x10>
 8004720:	f007 f89c 	bl	800b85c <GUI_ALLOC_h2p>
 8004724:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004726:	f000 0001 	and.w	r0, r0, #1
 800472a:	bd08      	pop	{r3, pc}
 800472c:	bd08      	pop	{r3, pc}

0800472e <_SetScrollbar>:
 800472e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004730:	460d      	mov	r5, r1
 8004732:	4611      	mov	r1, r2
 8004734:	4606      	mov	r6, r0
 8004736:	461f      	mov	r7, r3
 8004738:	f000 fa3a 	bl	8004bb0 <WM_GetDialogItem>
 800473c:	4604      	mov	r4, r0
 800473e:	b1a5      	cbz	r5, 800476a <_SetScrollbar+0x3c>
 8004740:	b920      	cbnz	r0, 800474c <_SetScrollbar+0x1e>
 8004742:	4630      	mov	r0, r6
 8004744:	4639      	mov	r1, r7
 8004746:	f007 fe0f 	bl	800c368 <SCROLLBAR_CreateAttached>
 800474a:	e014      	b.n	8004776 <_SetScrollbar+0x48>
 800474c:	f007 f890 	bl	800b870 <GUI_ALLOC_LockH>
 8004750:	ab02      	add	r3, sp, #8
 8004752:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8004754:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004758:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800475c:	f042 0202 	orr.w	r2, r2, #2
 8004760:	6282      	str	r2, [r0, #40]	; 0x28
 8004762:	4618      	mov	r0, r3
 8004764:	f007 f892 	bl	800b88c <GUI_ALLOC_UnlockH>
 8004768:	e005      	b.n	8004776 <_SetScrollbar+0x48>
 800476a:	b120      	cbz	r0, 8004776 <_SetScrollbar+0x48>
 800476c:	f000 fcf0 	bl	8005150 <WM_HideWindow>
 8004770:	4620      	mov	r0, r4
 8004772:	f001 fe33 	bl	80063dc <WM__DeleteSecure>
 8004776:	1c20      	adds	r0, r4, #0
 8004778:	bf18      	it	ne
 800477a:	2001      	movne	r0, #1
 800477c:	b003      	add	sp, #12
 800477e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004780 <WM__SetScrollbarV>:
 8004780:	22fe      	movs	r2, #254	; 0xfe
 8004782:	2308      	movs	r3, #8
 8004784:	f7ff bfd3 	b.w	800472e <_SetScrollbar>

08004788 <WM__SetScrollbarH>:
 8004788:	22ff      	movs	r2, #255	; 0xff
 800478a:	2300      	movs	r3, #0
 800478c:	f7ff bfcf 	b.w	800472e <_SetScrollbar>

08004790 <WM_SetScrollbarH>:
 8004790:	f7ff bffa 	b.w	8004788 <WM__SetScrollbarH>

08004794 <WM_SetScrollbarV>:
 8004794:	f7ff bff4 	b.w	8004780 <WM__SetScrollbarV>

08004798 <_GetPrevChild>:
 8004798:	b510      	push	{r4, lr}
 800479a:	4604      	mov	r4, r0
 800479c:	b918      	cbnz	r0, 80047a6 <_GetPrevChild+0xe>
 800479e:	4620      	mov	r0, r4
 80047a0:	f7ff fe70 	bl	8004484 <WM__GetLastSibling>
 80047a4:	e003      	b.n	80047ae <_GetPrevChild+0x16>
 80047a6:	f7ff fe79 	bl	800449c <WM__GetPrevSibling>
 80047aa:	2800      	cmp	r0, #0
 80047ac:	d0f7      	beq.n	800479e <_GetPrevChild+0x6>
 80047ae:	42a0      	cmp	r0, r4
 80047b0:	bf08      	it	eq
 80047b2:	2000      	moveq	r0, #0
 80047b4:	bd10      	pop	{r4, pc}

080047b6 <WM_SetFocusOnPrevChild>:
 80047b6:	b538      	push	{r3, r4, r5, lr}
 80047b8:	4604      	mov	r4, r0
 80047ba:	b1b0      	cbz	r0, 80047ea <WM_SetFocusOnPrevChild+0x34>
 80047bc:	f7ff feac 	bl	8004518 <WM__GetFocusedChild>
 80047c0:	f7ff ffea 	bl	8004798 <_GetPrevChild>
 80047c4:	4605      	mov	r5, r0
 80047c6:	4604      	mov	r4, r0
 80047c8:	4620      	mov	r0, r4
 80047ca:	f000 fb2b 	bl	8004e24 <WM_IsFocusable>
 80047ce:	b930      	cbnz	r0, 80047de <WM_SetFocusOnPrevChild+0x28>
 80047d0:	b12c      	cbz	r4, 80047de <WM_SetFocusOnPrevChild+0x28>
 80047d2:	4620      	mov	r0, r4
 80047d4:	f7ff ffe0 	bl	8004798 <_GetPrevChild>
 80047d8:	42a8      	cmp	r0, r5
 80047da:	4604      	mov	r4, r0
 80047dc:	d1f4      	bne.n	80047c8 <WM_SetFocusOnPrevChild+0x12>
 80047de:	4620      	mov	r0, r4
 80047e0:	f000 fbec 	bl	8004fbc <WM_SetFocus>
 80047e4:	2800      	cmp	r0, #0
 80047e6:	bf18      	it	ne
 80047e8:	2400      	movne	r4, #0
 80047ea:	4620      	mov	r0, r4
 80047ec:	bd38      	pop	{r3, r4, r5, pc}

080047ee <_GetNextChild>:
 80047ee:	b538      	push	{r3, r4, r5, lr}
 80047f0:	4605      	mov	r5, r0
 80047f2:	460c      	mov	r4, r1
 80047f4:	b921      	cbnz	r1, 8004800 <_GetNextChild+0x12>
 80047f6:	4628      	mov	r0, r5
 80047f8:	f007 f830 	bl	800b85c <GUI_ALLOC_h2p>
 80047fc:	69c0      	ldr	r0, [r0, #28]
 80047fe:	e005      	b.n	800480c <_GetNextChild+0x1e>
 8004800:	4608      	mov	r0, r1
 8004802:	f007 f82b 	bl	800b85c <GUI_ALLOC_h2p>
 8004806:	6a00      	ldr	r0, [r0, #32]
 8004808:	2800      	cmp	r0, #0
 800480a:	d0f4      	beq.n	80047f6 <_GetNextChild+0x8>
 800480c:	42a0      	cmp	r0, r4
 800480e:	bf08      	it	eq
 8004810:	2000      	moveq	r0, #0
 8004812:	bd38      	pop	{r3, r4, r5, pc}

08004814 <WM_SetFocusOnNextChild>:
 8004814:	b570      	push	{r4, r5, r6, lr}
 8004816:	4605      	mov	r5, r0
 8004818:	b328      	cbz	r0, 8004866 <WM_SetFocusOnNextChild+0x52>
 800481a:	f7ff fe7d 	bl	8004518 <WM__GetFocusedChild>
 800481e:	4601      	mov	r1, r0
 8004820:	4628      	mov	r0, r5
 8004822:	f7ff ffe4 	bl	80047ee <_GetNextChild>
 8004826:	4606      	mov	r6, r0
 8004828:	4604      	mov	r4, r0
 800482a:	4620      	mov	r0, r4
 800482c:	f000 fafa 	bl	8004e24 <WM_IsFocusable>
 8004830:	b938      	cbnz	r0, 8004842 <WM_SetFocusOnNextChild+0x2e>
 8004832:	b13c      	cbz	r4, 8004844 <WM_SetFocusOnNextChild+0x30>
 8004834:	4621      	mov	r1, r4
 8004836:	4628      	mov	r0, r5
 8004838:	f7ff ffd9 	bl	80047ee <_GetNextChild>
 800483c:	42b0      	cmp	r0, r6
 800483e:	4604      	mov	r4, r0
 8004840:	d1f3      	bne.n	800482a <WM_SetFocusOnNextChild+0x16>
 8004842:	b90c      	cbnz	r4, 8004848 <WM_SetFocusOnNextChild+0x34>
 8004844:	2400      	movs	r4, #0
 8004846:	e00f      	b.n	8004868 <WM_SetFocusOnNextChild+0x54>
 8004848:	4d08      	ldr	r5, [pc, #32]	; (800486c <WM_SetFocusOnNextChild+0x58>)
 800484a:	4620      	mov	r0, r4
 800484c:	682e      	ldr	r6, [r5, #0]
 800484e:	f001 f8b5 	bl	80059bc <WM__GetTopLevelLayer>
 8004852:	1c43      	adds	r3, r0, #1
 8004854:	d008      	beq.n	8004868 <WM_SetFocusOnNextChild+0x54>
 8004856:	6028      	str	r0, [r5, #0]
 8004858:	4620      	mov	r0, r4
 800485a:	f000 fbaf 	bl	8004fbc <WM_SetFocus>
 800485e:	602e      	str	r6, [r5, #0]
 8004860:	2800      	cmp	r0, #0
 8004862:	d1ef      	bne.n	8004844 <WM_SetFocusOnNextChild+0x30>
 8004864:	e000      	b.n	8004868 <WM_SetFocusOnNextChild+0x54>
 8004866:	4604      	mov	r4, r0
 8004868:	4620      	mov	r0, r4
 800486a:	bd70      	pop	{r4, r5, r6, pc}
 800486c:	20002c9c 	.word	0x20002c9c

08004870 <WM_SetCaptureMove>:
 8004870:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004874:	b085      	sub	sp, #20
 8004876:	4604      	mov	r4, r0
 8004878:	460d      	mov	r5, r1
 800487a:	4691      	mov	r9, r2
 800487c:	4698      	mov	r8, r3
 800487e:	f000 fab5 	bl	8004dec <WM_HasCaptured>
 8004882:	4e21      	ldr	r6, [pc, #132]	; (8004908 <WM_SetCaptureMove+0x98>)
 8004884:	b940      	cbnz	r0, 8004898 <WM_SetCaptureMove+0x28>
 8004886:	4620      	mov	r0, r4
 8004888:	2101      	movs	r1, #1
 800488a:	f000 f859 	bl	8004940 <WM_SetCapture>
 800488e:	682b      	ldr	r3, [r5, #0]
 8004890:	8033      	strh	r3, [r6, #0]
 8004892:	686b      	ldr	r3, [r5, #4]
 8004894:	8073      	strh	r3, [r6, #2]
 8004896:	e034      	b.n	8004902 <WM_SetCaptureMove+0x92>
 8004898:	682b      	ldr	r3, [r5, #0]
 800489a:	f9b6 7000 	ldrsh.w	r7, [r6]
 800489e:	686d      	ldr	r5, [r5, #4]
 80048a0:	1bdf      	subs	r7, r3, r7
 80048a2:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80048a6:	4620      	mov	r0, r4
 80048a8:	1aed      	subs	r5, r5, r3
 80048aa:	f1b9 0f00 	cmp.w	r9, #0
 80048ae:	d102      	bne.n	80048b6 <WM_SetCaptureMove+0x46>
 80048b0:	f1b8 0f00 	cmp.w	r8, #0
 80048b4:	d021      	beq.n	80048fa <WM_SetCaptureMove+0x8a>
 80048b6:	4669      	mov	r1, sp
 80048b8:	f000 fa39 	bl	8004d2e <WM_GetWindowRectEx>
 80048bc:	f1b8 0f00 	cmp.w	r8, #0
 80048c0:	d005      	beq.n	80048ce <WM_SetCaptureMove+0x5e>
 80048c2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80048c6:	3b01      	subs	r3, #1
 80048c8:	4498      	add	r8, r3
 80048ca:	f8ad 8006 	strh.w	r8, [sp, #6]
 80048ce:	4620      	mov	r0, r4
 80048d0:	f000 f9c4 	bl	8004c5c <WM_GetParent>
 80048d4:	a902      	add	r1, sp, #8
 80048d6:	f000 fa2a 	bl	8004d2e <WM_GetWindowRectEx>
 80048da:	4668      	mov	r0, sp
 80048dc:	4639      	mov	r1, r7
 80048de:	462a      	mov	r2, r5
 80048e0:	f006 fadd 	bl	800ae9e <GUI_MoveRect>
 80048e4:	a802      	add	r0, sp, #8
 80048e6:	4601      	mov	r1, r0
 80048e8:	464a      	mov	r2, r9
 80048ea:	f004 fcec 	bl	80092c6 <GUI__ReduceRect>
 80048ee:	4668      	mov	r0, sp
 80048f0:	a902      	add	r1, sp, #8
 80048f2:	f006 fb1f 	bl	800af34 <GUI_RectsIntersect>
 80048f6:	b120      	cbz	r0, 8004902 <WM_SetCaptureMove+0x92>
 80048f8:	4620      	mov	r0, r4
 80048fa:	4639      	mov	r1, r7
 80048fc:	462a      	mov	r2, r5
 80048fe:	f000 f8c3 	bl	8004a88 <WM_MoveWindow>
 8004902:	b005      	add	sp, #20
 8004904:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004908:	20002ac0 	.word	0x20002ac0

0800490c <WM__ReleaseCapture>:
 800490c:	b530      	push	{r4, r5, lr}
 800490e:	4d0a      	ldr	r5, [pc, #40]	; (8004938 <WM__ReleaseCapture+0x2c>)
 8004910:	4c0a      	ldr	r4, [pc, #40]	; (800493c <WM__ReleaseCapture+0x30>)
 8004912:	682b      	ldr	r3, [r5, #0]
 8004914:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8004918:	b085      	sub	sp, #20
 800491a:	b150      	cbz	r0, 8004932 <WM__ReleaseCapture+0x26>
 800491c:	a904      	add	r1, sp, #16
 800491e:	2318      	movs	r3, #24
 8004920:	f841 3d10 	str.w	r3, [r1, #-16]!
 8004924:	4669      	mov	r1, sp
 8004926:	f7ff fe13 	bl	8004550 <WM__SendMessage>
 800492a:	682b      	ldr	r3, [r5, #0]
 800492c:	2200      	movs	r2, #0
 800492e:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 8004932:	b005      	add	sp, #20
 8004934:	bd30      	pop	{r4, r5, pc}
 8004936:	bf00      	nop
 8004938:	20002c9c 	.word	0x20002c9c
 800493c:	20002cc0 	.word	0x20002cc0

08004940 <WM_SetCapture>:
 8004940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004942:	4b09      	ldr	r3, [pc, #36]	; (8004968 <WM_SetCapture+0x28>)
 8004944:	4a09      	ldr	r2, [pc, #36]	; (800496c <WM_SetCapture+0x2c>)
 8004946:	4604      	mov	r4, r0
 8004948:	6818      	ldr	r0, [r3, #0]
 800494a:	460f      	mov	r7, r1
 800494c:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
 8004950:	42a1      	cmp	r1, r4
 8004952:	4615      	mov	r5, r2
 8004954:	461e      	mov	r6, r3
 8004956:	d001      	beq.n	800495c <WM_SetCapture+0x1c>
 8004958:	f7ff ffd8 	bl	800490c <WM__ReleaseCapture>
 800495c:	6833      	ldr	r3, [r6, #0]
 800495e:	f845 4023 	str.w	r4, [r5, r3, lsl #2]
 8004962:	4b03      	ldr	r3, [pc, #12]	; (8004970 <WM_SetCapture+0x30>)
 8004964:	701f      	strb	r7, [r3, #0]
 8004966:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004968:	20002c9c 	.word	0x20002c9c
 800496c:	20002cc0 	.word	0x20002cc0
 8004970:	20002ca0 	.word	0x20002ca0

08004974 <_MoveDescendents>:
 8004974:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004978:	b088      	sub	sp, #32
 800497a:	4606      	mov	r6, r0
 800497c:	460c      	mov	r4, r1
 800497e:	4615      	mov	r5, r2
 8004980:	a804      	add	r0, sp, #16
 8004982:	2100      	movs	r1, #0
 8004984:	2210      	movs	r2, #16
 8004986:	f00b fbb1 	bl	80100ec <memset>
 800498a:	b336      	cbz	r6, 80049da <_MoveDescendents+0x66>
 800498c:	4630      	mov	r0, r6
 800498e:	f006 ff6f 	bl	800b870 <GUI_ALLOC_LockH>
 8004992:	4621      	mov	r1, r4
 8004994:	462a      	mov	r2, r5
 8004996:	9001      	str	r0, [sp, #4]
 8004998:	f006 fa81 	bl	800ae9e <GUI_MoveRect>
 800499c:	9801      	ldr	r0, [sp, #4]
 800499e:	4621      	mov	r1, r4
 80049a0:	3008      	adds	r0, #8
 80049a2:	462a      	mov	r2, r5
 80049a4:	f006 fa7b 	bl	800ae9e <GUI_MoveRect>
 80049a8:	a808      	add	r0, sp, #32
 80049aa:	f850 2d1c 	ldr.w	r2, [r0, #-28]!
 80049ae:	f8d2 801c 	ldr.w	r8, [r2, #28]
 80049b2:	6a17      	ldr	r7, [r2, #32]
 80049b4:	f006 ff6a 	bl	800b88c <GUI_ALLOC_UnlockH>
 80049b8:	4640      	mov	r0, r8
 80049ba:	4621      	mov	r1, r4
 80049bc:	462a      	mov	r2, r5
 80049be:	f7ff ffd9 	bl	8004974 <_MoveDescendents>
 80049c2:	2303      	movs	r3, #3
 80049c4:	9304      	str	r3, [sp, #16]
 80049c6:	4630      	mov	r0, r6
 80049c8:	ab02      	add	r3, sp, #8
 80049ca:	a904      	add	r1, sp, #16
 80049cc:	9307      	str	r3, [sp, #28]
 80049ce:	9402      	str	r4, [sp, #8]
 80049d0:	9503      	str	r5, [sp, #12]
 80049d2:	463e      	mov	r6, r7
 80049d4:	f7ff fdbc 	bl	8004550 <WM__SendMessage>
 80049d8:	e7d7      	b.n	800498a <_MoveDescendents+0x16>
 80049da:	b008      	add	sp, #32
 80049dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080049e0 <WM__MoveWindow>:
 80049e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80049e4:	b08b      	sub	sp, #44	; 0x2c
 80049e6:	4606      	mov	r6, r0
 80049e8:	460d      	mov	r5, r1
 80049ea:	4614      	mov	r4, r2
 80049ec:	a806      	add	r0, sp, #24
 80049ee:	2100      	movs	r1, #0
 80049f0:	2210      	movs	r2, #16
 80049f2:	f00b fb7b 	bl	80100ec <memset>
 80049f6:	2e00      	cmp	r6, #0
 80049f8:	d043      	beq.n	8004a82 <WM__MoveWindow+0xa2>
 80049fa:	b90d      	cbnz	r5, 8004a00 <WM__MoveWindow+0x20>
 80049fc:	2c00      	cmp	r4, #0
 80049fe:	d040      	beq.n	8004a82 <WM__MoveWindow+0xa2>
 8004a00:	4630      	mov	r0, r6
 8004a02:	f006 ff35 	bl	800b870 <GUI_ALLOC_LockH>
 8004a06:	4603      	mov	r3, r0
 8004a08:	9001      	str	r0, [sp, #4]
 8004a0a:	c803      	ldmia	r0, {r0, r1}
 8004a0c:	f10d 0808 	add.w	r8, sp, #8
 8004a10:	e888 0003 	stmia.w	r8, {r0, r1}
 8004a14:	4622      	mov	r2, r4
 8004a16:	4618      	mov	r0, r3
 8004a18:	4629      	mov	r1, r5
 8004a1a:	f006 fa40 	bl	800ae9e <GUI_MoveRect>
 8004a1e:	9801      	ldr	r0, [sp, #4]
 8004a20:	af0a      	add	r7, sp, #40	; 0x28
 8004a22:	4629      	mov	r1, r5
 8004a24:	4622      	mov	r2, r4
 8004a26:	3008      	adds	r0, #8
 8004a28:	f006 fa39 	bl	800ae9e <GUI_MoveRect>
 8004a2c:	f857 3d24 	ldr.w	r3, [r7, #-36]!
 8004a30:	f8d3 901c 	ldr.w	r9, [r3, #28]
 8004a34:	4638      	mov	r0, r7
 8004a36:	f006 ff29 	bl	800b88c <GUI_ALLOC_UnlockH>
 8004a3a:	4622      	mov	r2, r4
 8004a3c:	4648      	mov	r0, r9
 8004a3e:	4629      	mov	r1, r5
 8004a40:	f7ff ff98 	bl	8004974 <_MoveDescendents>
 8004a44:	4630      	mov	r0, r6
 8004a46:	f006 ff13 	bl	800b870 <GUI_ALLOC_LockH>
 8004a4a:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8004a4c:	9001      	str	r0, [sp, #4]
 8004a4e:	0792      	lsls	r2, r2, #30
 8004a50:	d50a      	bpl.n	8004a68 <WM__MoveWindow+0x88>
 8004a52:	6981      	ldr	r1, [r0, #24]
 8004a54:	b141      	cbz	r1, 8004a68 <WM__MoveWindow+0x88>
 8004a56:	6a02      	ldr	r2, [r0, #32]
 8004a58:	f001 f885 	bl	8005b66 <WM__InvalidateParent>
 8004a5c:	9b01      	ldr	r3, [sp, #4]
 8004a5e:	4640      	mov	r0, r8
 8004a60:	6999      	ldr	r1, [r3, #24]
 8004a62:	6a1a      	ldr	r2, [r3, #32]
 8004a64:	f001 f87f 	bl	8005b66 <WM__InvalidateParent>
 8004a68:	4638      	mov	r0, r7
 8004a6a:	f006 ff0f 	bl	800b88c <GUI_ALLOC_UnlockH>
 8004a6e:	2303      	movs	r3, #3
 8004a70:	9306      	str	r3, [sp, #24]
 8004a72:	4630      	mov	r0, r6
 8004a74:	ab04      	add	r3, sp, #16
 8004a76:	a906      	add	r1, sp, #24
 8004a78:	9309      	str	r3, [sp, #36]	; 0x24
 8004a7a:	9504      	str	r5, [sp, #16]
 8004a7c:	9405      	str	r4, [sp, #20]
 8004a7e:	f7ff fd67 	bl	8004550 <WM__SendMessage>
 8004a82:	b00b      	add	sp, #44	; 0x2c
 8004a84:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08004a88 <WM_MoveWindow>:
 8004a88:	f7ff bfaa 	b.w	80049e0 <WM__MoveWindow>

08004a8c <WM_DisableMemdev>:
 8004a8c:	b508      	push	{r3, lr}
 8004a8e:	b138      	cbz	r0, 8004aa0 <WM_DisableMemdev+0x14>
 8004a90:	f006 fee4 	bl	800b85c <GUI_ALLOC_h2p>
 8004a94:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004a96:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004a9a:	f023 0304 	bic.w	r3, r3, #4
 8004a9e:	6283      	str	r3, [r0, #40]	; 0x28
 8004aa0:	bd08      	pop	{r3, pc}

08004aa2 <WM_ForEachDesc>:
 8004aa2:	f7ff bcd1 	b.w	8004448 <WM__ForEachDesc>

08004aa6 <WM_GetClientRectEx>:
 8004aa6:	f7ff be07 	b.w	80046b8 <WM__GetClientRectEx>
	...

08004aac <WM_GetClientRect>:
 8004aac:	4b04      	ldr	r3, [pc, #16]	; (8004ac0 <WM_GetClientRect+0x14>)
 8004aae:	4601      	mov	r1, r0
 8004ab0:	6818      	ldr	r0, [r3, #0]
 8004ab2:	b910      	cbnz	r0, 8004aba <WM_GetClientRect+0xe>
 8004ab4:	4b03      	ldr	r3, [pc, #12]	; (8004ac4 <WM_GetClientRect+0x18>)
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8004aba:	f7ff bdfd 	b.w	80046b8 <WM__GetClientRectEx>
 8004abe:	bf00      	nop
 8004ac0:	20002c78 	.word	0x20002c78
 8004ac4:	200000b8 	.word	0x200000b8

08004ac8 <WM_GetClientWindow>:
 8004ac8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004aca:	2300      	movs	r3, #0
 8004acc:	a904      	add	r1, sp, #16
 8004ace:	9303      	str	r3, [sp, #12]
 8004ad0:	2317      	movs	r3, #23
 8004ad2:	f841 3d10 	str.w	r3, [r1, #-16]!
 8004ad6:	4669      	mov	r1, sp
 8004ad8:	f000 ff55 	bl	8005986 <WM_SendMessage>
 8004adc:	9803      	ldr	r0, [sp, #12]
 8004ade:	b005      	add	sp, #20
 8004ae0:	f85d fb04 	ldr.w	pc, [sp], #4

08004ae4 <WM_GetDesktopWindow>:
 8004ae4:	4b03      	ldr	r3, [pc, #12]	; (8004af4 <WM_GetDesktopWindow+0x10>)
 8004ae6:	681b      	ldr	r3, [r3, #0]
 8004ae8:	7c5a      	ldrb	r2, [r3, #17]
 8004aea:	4b03      	ldr	r3, [pc, #12]	; (8004af8 <WM_GetDesktopWindow+0x14>)
 8004aec:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8004af0:	4770      	bx	lr
 8004af2:	bf00      	nop
 8004af4:	200000b8 	.word	0x200000b8
 8004af8:	20002c7c 	.word	0x20002c7c

08004afc <WM_CheckScrollBounds>:
 8004afc:	6802      	ldr	r2, [r0, #0]
 8004afe:	6883      	ldr	r3, [r0, #8]
 8004b00:	1ad3      	subs	r3, r2, r3
 8004b02:	6842      	ldr	r2, [r0, #4]
 8004b04:	2a00      	cmp	r2, #0
 8004b06:	bfbc      	itt	lt
 8004b08:	2200      	movlt	r2, #0
 8004b0a:	6042      	strlt	r2, [r0, #4]
 8004b0c:	6842      	ldr	r2, [r0, #4]
 8004b0e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8004b12:	429a      	cmp	r2, r3
 8004b14:	bfc8      	it	gt
 8004b16:	6043      	strgt	r3, [r0, #4]
 8004b18:	4770      	bx	lr

08004b1a <WM_GetFirstChild>:
 8004b1a:	b508      	push	{r3, lr}
 8004b1c:	4603      	mov	r3, r0
 8004b1e:	b110      	cbz	r0, 8004b26 <WM_GetFirstChild+0xc>
 8004b20:	f006 fe9c 	bl	800b85c <GUI_ALLOC_h2p>
 8004b24:	69c3      	ldr	r3, [r0, #28]
 8004b26:	4618      	mov	r0, r3
 8004b28:	bd08      	pop	{r3, pc}

08004b2a <WM_GetFlags>:
 8004b2a:	b508      	push	{r3, lr}
 8004b2c:	b118      	cbz	r0, 8004b36 <WM_GetFlags+0xc>
 8004b2e:	f006 fe95 	bl	800b85c <GUI_ALLOC_h2p>
 8004b32:	8d00      	ldrh	r0, [r0, #40]	; 0x28
 8004b34:	bd08      	pop	{r3, pc}
 8004b36:	bd08      	pop	{r3, pc}

08004b38 <WM_GetFocusedWindow>:
 8004b38:	4b02      	ldr	r3, [pc, #8]	; (8004b44 <WM_GetFocusedWindow+0xc>)
 8004b3a:	681a      	ldr	r2, [r3, #0]
 8004b3c:	4b02      	ldr	r3, [pc, #8]	; (8004b48 <WM_GetFocusedWindow+0x10>)
 8004b3e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8004b42:	4770      	bx	lr
 8004b44:	20002c9c 	.word	0x20002c9c
 8004b48:	20002c8c 	.word	0x20002c8c

08004b4c <WM_GetId>:
 8004b4c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004b4e:	4604      	mov	r4, r0
 8004b50:	2210      	movs	r2, #16
 8004b52:	4668      	mov	r0, sp
 8004b54:	2100      	movs	r1, #0
 8004b56:	f00b fac9 	bl	80100ec <memset>
 8004b5a:	2315      	movs	r3, #21
 8004b5c:	4620      	mov	r0, r4
 8004b5e:	4669      	mov	r1, sp
 8004b60:	9300      	str	r3, [sp, #0]
 8004b62:	f000 ff10 	bl	8005986 <WM_SendMessage>
 8004b66:	9803      	ldr	r0, [sp, #12]
 8004b68:	b004      	add	sp, #16
 8004b6a:	bd10      	pop	{r4, pc}

08004b6c <_GetDialogItem>:
 8004b6c:	b570      	push	{r4, r5, r6, lr}
 8004b6e:	4606      	mov	r6, r0
 8004b70:	460d      	mov	r5, r1
 8004b72:	f006 fe73 	bl	800b85c <GUI_ALLOC_h2p>
 8004b76:	69c4      	ldr	r4, [r0, #28]
 8004b78:	b14c      	cbz	r4, 8004b8e <_GetDialogItem+0x22>
 8004b7a:	4620      	mov	r0, r4
 8004b7c:	f7ff ffe6 	bl	8004b4c <WM_GetId>
 8004b80:	42a8      	cmp	r0, r5
 8004b82:	4620      	mov	r0, r4
 8004b84:	d013      	beq.n	8004bae <_GetDialogItem+0x42>
 8004b86:	f006 fe69 	bl	800b85c <GUI_ALLOC_h2p>
 8004b8a:	6a04      	ldr	r4, [r0, #32]
 8004b8c:	e7f4      	b.n	8004b78 <_GetDialogItem+0xc>
 8004b8e:	4630      	mov	r0, r6
 8004b90:	f006 fe64 	bl	800b85c <GUI_ALLOC_h2p>
 8004b94:	69c4      	ldr	r4, [r0, #28]
 8004b96:	4620      	mov	r0, r4
 8004b98:	b144      	cbz	r4, 8004bac <_GetDialogItem+0x40>
 8004b9a:	4629      	mov	r1, r5
 8004b9c:	f7ff ffe6 	bl	8004b6c <_GetDialogItem>
 8004ba0:	b928      	cbnz	r0, 8004bae <_GetDialogItem+0x42>
 8004ba2:	4620      	mov	r0, r4
 8004ba4:	f006 fe5a 	bl	800b85c <GUI_ALLOC_h2p>
 8004ba8:	6a04      	ldr	r4, [r0, #32]
 8004baa:	e7f4      	b.n	8004b96 <_GetDialogItem+0x2a>
 8004bac:	bd70      	pop	{r4, r5, r6, pc}
 8004bae:	bd70      	pop	{r4, r5, r6, pc}

08004bb0 <WM_GetDialogItem>:
 8004bb0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004bb2:	460d      	mov	r5, r1
 8004bb4:	4604      	mov	r4, r0
 8004bb6:	b1c8      	cbz	r0, 8004bec <WM_GetDialogItem+0x3c>
 8004bb8:	f006 fe5a 	bl	800b870 <GUI_ALLOC_LockH>
 8004bbc:	ab02      	add	r3, sp, #8
 8004bbe:	69c4      	ldr	r4, [r0, #28]
 8004bc0:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004bc4:	4618      	mov	r0, r3
 8004bc6:	f006 fe61 	bl	800b88c <GUI_ALLOC_UnlockH>
 8004bca:	b17c      	cbz	r4, 8004bec <WM_GetDialogItem+0x3c>
 8004bcc:	4620      	mov	r0, r4
 8004bce:	f7ff ffbd 	bl	8004b4c <WM_GetId>
 8004bd2:	42a8      	cmp	r0, r5
 8004bd4:	d00a      	beq.n	8004bec <WM_GetDialogItem+0x3c>
 8004bd6:	4620      	mov	r0, r4
 8004bd8:	4629      	mov	r1, r5
 8004bda:	f7ff ffc7 	bl	8004b6c <_GetDialogItem>
 8004bde:	b920      	cbnz	r0, 8004bea <WM_GetDialogItem+0x3a>
 8004be0:	4620      	mov	r0, r4
 8004be2:	f006 fe3b 	bl	800b85c <GUI_ALLOC_h2p>
 8004be6:	6a04      	ldr	r4, [r0, #32]
 8004be8:	e7ef      	b.n	8004bca <WM_GetDialogItem+0x1a>
 8004bea:	4604      	mov	r4, r0
 8004bec:	4620      	mov	r0, r4
 8004bee:	b003      	add	sp, #12
 8004bf0:	bd30      	pop	{r4, r5, pc}

08004bf2 <WM_GetInsideRectEx>:
 8004bf2:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004bf4:	9103      	str	r1, [sp, #12]
 8004bf6:	a904      	add	r1, sp, #16
 8004bf8:	2314      	movs	r3, #20
 8004bfa:	f841 3d10 	str.w	r3, [r1, #-16]!
 8004bfe:	4669      	mov	r1, sp
 8004c00:	f000 fec1 	bl	8005986 <WM_SendMessage>
 8004c04:	b005      	add	sp, #20
 8004c06:	f85d fb04 	ldr.w	pc, [sp], #4

08004c0a <WM_GetNextSibling>:
 8004c0a:	b508      	push	{r3, lr}
 8004c0c:	4603      	mov	r3, r0
 8004c0e:	b110      	cbz	r0, 8004c16 <WM_GetNextSibling+0xc>
 8004c10:	f006 fe24 	bl	800b85c <GUI_ALLOC_h2p>
 8004c14:	6a03      	ldr	r3, [r0, #32]
 8004c16:	4618      	mov	r0, r3
 8004c18:	bd08      	pop	{r3, pc}

08004c1a <WM_GetWindowOrgX>:
 8004c1a:	b508      	push	{r3, lr}
 8004c1c:	b120      	cbz	r0, 8004c28 <WM_GetWindowOrgX+0xe>
 8004c1e:	f006 fe1d 	bl	800b85c <GUI_ALLOC_h2p>
 8004c22:	f9b0 0000 	ldrsh.w	r0, [r0]
 8004c26:	bd08      	pop	{r3, pc}
 8004c28:	bd08      	pop	{r3, pc}

08004c2a <WM_GetWindowOrgY>:
 8004c2a:	b508      	push	{r3, lr}
 8004c2c:	b120      	cbz	r0, 8004c38 <WM_GetWindowOrgY+0xe>
 8004c2e:	f006 fe15 	bl	800b85c <GUI_ALLOC_h2p>
 8004c32:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 8004c36:	bd08      	pop	{r3, pc}
 8004c38:	bd08      	pop	{r3, pc}
	...

08004c3c <WM_GetOrgX>:
 8004c3c:	4b02      	ldr	r3, [pc, #8]	; (8004c48 <WM_GetOrgX+0xc>)
 8004c3e:	681b      	ldr	r3, [r3, #0]
 8004c40:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8004c42:	f7ff bfea 	b.w	8004c1a <WM_GetWindowOrgX>
 8004c46:	bf00      	nop
 8004c48:	200000b8 	.word	0x200000b8

08004c4c <WM_GetOrgY>:
 8004c4c:	4b02      	ldr	r3, [pc, #8]	; (8004c58 <WM_GetOrgY+0xc>)
 8004c4e:	681b      	ldr	r3, [r3, #0]
 8004c50:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8004c52:	f7ff bfea 	b.w	8004c2a <WM_GetWindowOrgY>
 8004c56:	bf00      	nop
 8004c58:	200000b8 	.word	0x200000b8

08004c5c <WM_GetParent>:
 8004c5c:	b508      	push	{r3, lr}
 8004c5e:	4603      	mov	r3, r0
 8004c60:	b110      	cbz	r0, 8004c68 <WM_GetParent+0xc>
 8004c62:	f006 fdfb 	bl	800b85c <GUI_ALLOC_h2p>
 8004c66:	6983      	ldr	r3, [r0, #24]
 8004c68:	4618      	mov	r0, r3
 8004c6a:	bd08      	pop	{r3, pc}

08004c6c <WM_BringToBottom>:
 8004c6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004c70:	4604      	mov	r4, r0
 8004c72:	b087      	sub	sp, #28
 8004c74:	2800      	cmp	r0, #0
 8004c76:	d039      	beq.n	8004cec <WM_BringToBottom+0x80>
 8004c78:	f006 fdfa 	bl	800b870 <GUI_ALLOC_LockH>
 8004c7c:	4603      	mov	r3, r0
 8004c7e:	9001      	str	r0, [sp, #4]
 8004c80:	c803      	ldmia	r0, {r0, r1}
 8004c82:	ad04      	add	r5, sp, #16
 8004c84:	e885 0003 	stmia.w	r5, {r0, r1}
 8004c88:	a801      	add	r0, sp, #4
 8004c8a:	6a1e      	ldr	r6, [r3, #32]
 8004c8c:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
 8004c90:	f006 fdfc 	bl	800b88c <GUI_ALLOC_UnlockH>
 8004c94:	4620      	mov	r0, r4
 8004c96:	f7ff fc01 	bl	800449c <WM__GetPrevSibling>
 8004c9a:	4607      	mov	r7, r0
 8004c9c:	b330      	cbz	r0, 8004cec <WM_BringToBottom+0x80>
 8004c9e:	4620      	mov	r0, r4
 8004ca0:	f7ff ffdc 	bl	8004c5c <WM_GetParent>
 8004ca4:	f019 0f02 	tst.w	r9, #2
 8004ca8:	4680      	mov	r8, r0
 8004caa:	d004      	beq.n	8004cb6 <WM_BringToBottom+0x4a>
 8004cac:	4628      	mov	r0, r5
 8004cae:	4641      	mov	r1, r8
 8004cb0:	4632      	mov	r2, r6
 8004cb2:	f000 ff6d 	bl	8005b90 <WM__InvalidateRectEx>
 8004cb6:	4620      	mov	r0, r4
 8004cb8:	f006 fdda 	bl	800b870 <GUI_ALLOC_LockH>
 8004cbc:	9001      	str	r0, [sp, #4]
 8004cbe:	4640      	mov	r0, r8
 8004cc0:	f006 fdd6 	bl	800b870 <GUI_ALLOC_LockH>
 8004cc4:	9003      	str	r0, [sp, #12]
 8004cc6:	4638      	mov	r0, r7
 8004cc8:	f006 fdd2 	bl	800b870 <GUI_ALLOC_LockH>
 8004ccc:	9b03      	ldr	r3, [sp, #12]
 8004cce:	9a01      	ldr	r2, [sp, #4]
 8004cd0:	69d9      	ldr	r1, [r3, #28]
 8004cd2:	6206      	str	r6, [r0, #32]
 8004cd4:	9002      	str	r0, [sp, #8]
 8004cd6:	6211      	str	r1, [r2, #32]
 8004cd8:	a801      	add	r0, sp, #4
 8004cda:	61dc      	str	r4, [r3, #28]
 8004cdc:	f006 fdd6 	bl	800b88c <GUI_ALLOC_UnlockH>
 8004ce0:	a803      	add	r0, sp, #12
 8004ce2:	f006 fdd3 	bl	800b88c <GUI_ALLOC_UnlockH>
 8004ce6:	a802      	add	r0, sp, #8
 8004ce8:	f006 fdd0 	bl	800b88c <GUI_ALLOC_UnlockH>
 8004cec:	b007      	add	sp, #28
 8004cee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08004cf2 <WM_GetScrollbarH>:
 8004cf2:	b110      	cbz	r0, 8004cfa <WM_GetScrollbarH+0x8>
 8004cf4:	21ff      	movs	r1, #255	; 0xff
 8004cf6:	f7ff bf39 	b.w	8004b6c <_GetDialogItem>
 8004cfa:	4770      	bx	lr

08004cfc <WM_GetScrollbarV>:
 8004cfc:	b110      	cbz	r0, 8004d04 <WM_GetScrollbarV+0x8>
 8004cfe:	21fe      	movs	r1, #254	; 0xfe
 8004d00:	f7ff bf34 	b.w	8004b6c <_GetDialogItem>
 8004d04:	4770      	bx	lr

08004d06 <WM_GetScrollPartner>:
 8004d06:	b538      	push	{r3, r4, r5, lr}
 8004d08:	4605      	mov	r5, r0
 8004d0a:	f7ff ff1f 	bl	8004b4c <WM_GetId>
 8004d0e:	28ff      	cmp	r0, #255	; 0xff
 8004d10:	4604      	mov	r4, r0
 8004d12:	d003      	beq.n	8004d1c <WM_GetScrollPartner+0x16>
 8004d14:	28fe      	cmp	r0, #254	; 0xfe
 8004d16:	bf08      	it	eq
 8004d18:	24ff      	moveq	r4, #255	; 0xff
 8004d1a:	e000      	b.n	8004d1e <WM_GetScrollPartner+0x18>
 8004d1c:	24fe      	movs	r4, #254	; 0xfe
 8004d1e:	4628      	mov	r0, r5
 8004d20:	f7ff ff9c 	bl	8004c5c <WM_GetParent>
 8004d24:	4621      	mov	r1, r4
 8004d26:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004d2a:	f7ff bf41 	b.w	8004bb0 <WM_GetDialogItem>

08004d2e <WM_GetWindowRectEx>:
 8004d2e:	b510      	push	{r4, lr}
 8004d30:	460c      	mov	r4, r1
 8004d32:	b130      	cbz	r0, 8004d42 <WM_GetWindowRectEx+0x14>
 8004d34:	b129      	cbz	r1, 8004d42 <WM_GetWindowRectEx+0x14>
 8004d36:	f006 fd91 	bl	800b85c <GUI_ALLOC_h2p>
 8004d3a:	4603      	mov	r3, r0
 8004d3c:	cb03      	ldmia	r3!, {r0, r1}
 8004d3e:	6020      	str	r0, [r4, #0]
 8004d40:	6061      	str	r1, [r4, #4]
 8004d42:	bd10      	pop	{r4, pc}

08004d44 <WM_GetInsideRectExScrollbar>:
 8004d44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004d46:	460c      	mov	r4, r1
 8004d48:	b087      	sub	sp, #28
 8004d4a:	4606      	mov	r6, r0
 8004d4c:	2800      	cmp	r0, #0
 8004d4e:	d04b      	beq.n	8004de8 <WM_GetInsideRectExScrollbar+0xa4>
 8004d50:	2900      	cmp	r1, #0
 8004d52:	d049      	beq.n	8004de8 <WM_GetInsideRectExScrollbar+0xa4>
 8004d54:	21ff      	movs	r1, #255	; 0xff
 8004d56:	f7ff ff2b 	bl	8004bb0 <WM_GetDialogItem>
 8004d5a:	21fe      	movs	r1, #254	; 0xfe
 8004d5c:	4605      	mov	r5, r0
 8004d5e:	4630      	mov	r0, r6
 8004d60:	f7ff ff26 	bl	8004bb0 <WM_GetDialogItem>
 8004d64:	4669      	mov	r1, sp
 8004d66:	4607      	mov	r7, r0
 8004d68:	4630      	mov	r0, r6
 8004d6a:	f7ff ffe0 	bl	8004d2e <WM_GetWindowRectEx>
 8004d6e:	4630      	mov	r0, r6
 8004d70:	a902      	add	r1, sp, #8
 8004d72:	f7ff ff3e 	bl	8004bf2 <WM_GetInsideRectEx>
 8004d76:	b1c7      	cbz	r7, 8004daa <WM_GetInsideRectExScrollbar+0x66>
 8004d78:	4638      	mov	r0, r7
 8004d7a:	a904      	add	r1, sp, #16
 8004d7c:	f7ff ffd7 	bl	8004d2e <WM_GetWindowRectEx>
 8004d80:	f9bd 1000 	ldrsh.w	r1, [sp]
 8004d84:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 8004d88:	a804      	add	r0, sp, #16
 8004d8a:	4249      	negs	r1, r1
 8004d8c:	4252      	negs	r2, r2
 8004d8e:	f006 f886 	bl	800ae9e <GUI_MoveRect>
 8004d92:	4638      	mov	r0, r7
 8004d94:	f7ff fec9 	bl	8004b2a <WM_GetFlags>
 8004d98:	f000 0082 	and.w	r0, r0, #130	; 0x82
 8004d9c:	2882      	cmp	r0, #130	; 0x82
 8004d9e:	d104      	bne.n	8004daa <WM_GetInsideRectExScrollbar+0x66>
 8004da0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8004da4:	3b01      	subs	r3, #1
 8004da6:	f8ad 300c 	strh.w	r3, [sp, #12]
 8004daa:	b1cd      	cbz	r5, 8004de0 <WM_GetInsideRectExScrollbar+0x9c>
 8004dac:	4628      	mov	r0, r5
 8004dae:	a904      	add	r1, sp, #16
 8004db0:	f7ff ffbd 	bl	8004d2e <WM_GetWindowRectEx>
 8004db4:	f9bd 1000 	ldrsh.w	r1, [sp]
 8004db8:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 8004dbc:	a804      	add	r0, sp, #16
 8004dbe:	4249      	negs	r1, r1
 8004dc0:	4252      	negs	r2, r2
 8004dc2:	f006 f86c 	bl	800ae9e <GUI_MoveRect>
 8004dc6:	4628      	mov	r0, r5
 8004dc8:	f7ff feaf 	bl	8004b2a <WM_GetFlags>
 8004dcc:	f400 7081 	and.w	r0, r0, #258	; 0x102
 8004dd0:	f5b0 7f81 	cmp.w	r0, #258	; 0x102
 8004dd4:	d104      	bne.n	8004de0 <WM_GetInsideRectExScrollbar+0x9c>
 8004dd6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8004dda:	3b01      	subs	r3, #1
 8004ddc:	f8ad 300e 	strh.w	r3, [sp, #14]
 8004de0:	ab02      	add	r3, sp, #8
 8004de2:	cb03      	ldmia	r3!, {r0, r1}
 8004de4:	6020      	str	r0, [r4, #0]
 8004de6:	6061      	str	r1, [r4, #4]
 8004de8:	b007      	add	sp, #28
 8004dea:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004dec <WM_HasCaptured>:
 8004dec:	4b04      	ldr	r3, [pc, #16]	; (8004e00 <WM_HasCaptured+0x14>)
 8004dee:	681a      	ldr	r2, [r3, #0]
 8004df0:	4b04      	ldr	r3, [pc, #16]	; (8004e04 <WM_HasCaptured+0x18>)
 8004df2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004df6:	1ac3      	subs	r3, r0, r3
 8004df8:	4258      	negs	r0, r3
 8004dfa:	4158      	adcs	r0, r3
 8004dfc:	4770      	bx	lr
 8004dfe:	bf00      	nop
 8004e00:	20002c9c 	.word	0x20002c9c
 8004e04:	20002cc0 	.word	0x20002cc0

08004e08 <WM_HasFocus>:
 8004e08:	4b04      	ldr	r3, [pc, #16]	; (8004e1c <WM_HasFocus+0x14>)
 8004e0a:	681a      	ldr	r2, [r3, #0]
 8004e0c:	4b04      	ldr	r3, [pc, #16]	; (8004e20 <WM_HasFocus+0x18>)
 8004e0e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004e12:	1ac3      	subs	r3, r0, r3
 8004e14:	4258      	negs	r0, r3
 8004e16:	4158      	adcs	r0, r3
 8004e18:	4770      	bx	lr
 8004e1a:	bf00      	nop
 8004e1c:	20002c9c 	.word	0x20002c9c
 8004e20:	20002c8c 	.word	0x20002c8c

08004e24 <WM_IsFocusable>:
 8004e24:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004e26:	4604      	mov	r4, r0
 8004e28:	b908      	cbnz	r0, 8004e2e <WM_IsFocusable+0xa>
 8004e2a:	2000      	movs	r0, #0
 8004e2c:	e011      	b.n	8004e52 <WM_IsFocusable+0x2e>
 8004e2e:	f006 fd15 	bl	800b85c <GUI_ALLOC_h2p>
 8004e32:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004e34:	079a      	lsls	r2, r3, #30
 8004e36:	d5f8      	bpl.n	8004e2a <WM_IsFocusable+0x6>
 8004e38:	f013 0310 	ands.w	r3, r3, #16
 8004e3c:	d1f5      	bne.n	8004e2a <WM_IsFocusable+0x6>
 8004e3e:	a904      	add	r1, sp, #16
 8004e40:	9303      	str	r3, [sp, #12]
 8004e42:	231f      	movs	r3, #31
 8004e44:	f841 3d10 	str.w	r3, [r1, #-16]!
 8004e48:	4620      	mov	r0, r4
 8004e4a:	4669      	mov	r1, sp
 8004e4c:	f000 fd9b 	bl	8005986 <WM_SendMessage>
 8004e50:	9803      	ldr	r0, [sp, #12]
 8004e52:	b004      	add	sp, #16
 8004e54:	bd10      	pop	{r4, pc}

08004e56 <WM_IsWindow>:
 8004e56:	f000 bd4d 	b.w	80058f4 <WM__IsWindow>
	...

08004e5c <WM_OnKey>:
 8004e5c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8004e5e:	4a0a      	ldr	r2, [pc, #40]	; (8004e88 <WM_OnKey+0x2c>)
 8004e60:	4603      	mov	r3, r0
 8004e62:	6810      	ldr	r0, [r2, #0]
 8004e64:	4a09      	ldr	r2, [pc, #36]	; (8004e8c <WM_OnKey+0x30>)
 8004e66:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8004e6a:	b148      	cbz	r0, 8004e80 <WM_OnKey+0x24>
 8004e6c:	9300      	str	r3, [sp, #0]
 8004e6e:	230e      	movs	r3, #14
 8004e70:	9101      	str	r1, [sp, #4]
 8004e72:	9302      	str	r3, [sp, #8]
 8004e74:	a902      	add	r1, sp, #8
 8004e76:	ab00      	add	r3, sp, #0
 8004e78:	9305      	str	r3, [sp, #20]
 8004e7a:	f7ff fb69 	bl	8004550 <WM__SendMessage>
 8004e7e:	2001      	movs	r0, #1
 8004e80:	b007      	add	sp, #28
 8004e82:	f85d fb04 	ldr.w	pc, [sp], #4
 8004e86:	bf00      	nop
 8004e88:	20002c9c 	.word	0x20002c9c
 8004e8c:	20002c8c 	.word	0x20002c8c

08004e90 <WM_ResizeWindow>:
 8004e90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e94:	ea51 0302 	orrs.w	r3, r1, r2
 8004e98:	b08a      	sub	sp, #40	; 0x28
 8004e9a:	4680      	mov	r8, r0
 8004e9c:	460e      	mov	r6, r1
 8004e9e:	4617      	mov	r7, r2
 8004ea0:	d06e      	beq.n	8004f80 <WM_ResizeWindow+0xf0>
 8004ea2:	2800      	cmp	r0, #0
 8004ea4:	d06c      	beq.n	8004f80 <WM_ResizeWindow+0xf0>
 8004ea6:	f006 fce3 	bl	800b870 <GUI_ALLOC_LockH>
 8004eaa:	4603      	mov	r3, r0
 8004eac:	9003      	str	r0, [sp, #12]
 8004eae:	c803      	ldmia	r0, {r0, r1}
 8004eb0:	ad04      	add	r5, sp, #16
 8004eb2:	ac06      	add	r4, sp, #24
 8004eb4:	e885 0003 	stmia.w	r5, {r0, r1}
 8004eb8:	e884 0003 	stmia.w	r4, {r0, r1}
 8004ebc:	b17e      	cbz	r6, 8004ede <WM_ResizeWindow+0x4e>
 8004ebe:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004ec0:	f402 7220 	and.w	r2, r2, #640	; 0x280
 8004ec4:	2a80      	cmp	r2, #128	; 0x80
 8004ec6:	d105      	bne.n	8004ed4 <WM_ResizeWindow+0x44>
 8004ec8:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 8004ecc:	1b96      	subs	r6, r2, r6
 8004ece:	f8ad 6018 	strh.w	r6, [sp, #24]
 8004ed2:	e004      	b.n	8004ede <WM_ResizeWindow+0x4e>
 8004ed4:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 8004ed8:	4416      	add	r6, r2
 8004eda:	f8ad 601c 	strh.w	r6, [sp, #28]
 8004ede:	b187      	cbz	r7, 8004f02 <WM_ResizeWindow+0x72>
 8004ee0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004ee2:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 8004ee6:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8004eea:	d105      	bne.n	8004ef8 <WM_ResizeWindow+0x68>
 8004eec:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8004ef0:	1bd7      	subs	r7, r2, r7
 8004ef2:	f8ad 701a 	strh.w	r7, [sp, #26]
 8004ef6:	e004      	b.n	8004f02 <WM_ResizeWindow+0x72>
 8004ef8:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8004efc:	4417      	add	r7, r2
 8004efe:	f8ad 701e 	strh.w	r7, [sp, #30]
 8004f02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004f04:	03da      	lsls	r2, r3, #15
 8004f06:	d502      	bpl.n	8004f0e <WM_ResizeWindow+0x7e>
 8004f08:	4640      	mov	r0, r8
 8004f0a:	f000 fd03 	bl	8005914 <WM__InvalidateDrawAndDescs>
 8004f0e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8004f12:	9b03      	ldr	r3, [sp, #12]
 8004f14:	e883 0003 	stmia.w	r3, {r0, r1}
 8004f18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004f1a:	079b      	lsls	r3, r3, #30
 8004f1c:	d50a      	bpl.n	8004f34 <WM_ResizeWindow+0xa4>
 8004f1e:	a808      	add	r0, sp, #32
 8004f20:	4629      	mov	r1, r5
 8004f22:	4622      	mov	r2, r4
 8004f24:	f005 ff90 	bl	800ae48 <GUI_MergeRect>
 8004f28:	9b03      	ldr	r3, [sp, #12]
 8004f2a:	a808      	add	r0, sp, #32
 8004f2c:	6999      	ldr	r1, [r3, #24]
 8004f2e:	6a1a      	ldr	r2, [r3, #32]
 8004f30:	f000 fe2e 	bl	8005b90 <WM__InvalidateRectEx>
 8004f34:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8004f38:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8004f3c:	f9bd 701e 	ldrsh.w	r7, [sp, #30]
 8004f40:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8004f44:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 8004f48:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 8004f4c:	f9bd 501a 	ldrsh.w	r5, [sp, #26]
 8004f50:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8004f54:	1ae3      	subs	r3, r4, r3
 8004f56:	1a38      	subs	r0, r7, r0
 8004f58:	ac0a      	add	r4, sp, #40	; 0x28
 8004f5a:	1aaa      	subs	r2, r5, r2
 8004f5c:	9000      	str	r0, [sp, #0]
 8004f5e:	1a71      	subs	r1, r6, r1
 8004f60:	9803      	ldr	r0, [sp, #12]
 8004f62:	f7ff fb27 	bl	80045b4 <WM__UpdateChildPositions>
 8004f66:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 8004f6a:	f101 0008 	add.w	r0, r1, #8
 8004f6e:	f004 f92c 	bl	80091ca <GUI__IntersectRect>
 8004f72:	4640      	mov	r0, r8
 8004f74:	2105      	movs	r1, #5
 8004f76:	f000 fd0a 	bl	800598e <WM__SendMsgNoData>
 8004f7a:	4620      	mov	r0, r4
 8004f7c:	f006 fc86 	bl	800b88c <GUI_ALLOC_UnlockH>
 8004f80:	b00a      	add	sp, #40	; 0x28
 8004f82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004f86 <WM_SendMessageNoPara>:
 8004f86:	f7ff bb01 	b.w	800458c <WM__SendMessageNoPara>

08004f8a <WM_SendToParent>:
 8004f8a:	b538      	push	{r3, r4, r5, lr}
 8004f8c:	4605      	mov	r5, r0
 8004f8e:	460c      	mov	r4, r1
 8004f90:	b141      	cbz	r1, 8004fa4 <WM_SendToParent+0x1a>
 8004f92:	f7ff fe63 	bl	8004c5c <WM_GetParent>
 8004f96:	b128      	cbz	r0, 8004fa4 <WM_SendToParent+0x1a>
 8004f98:	60a5      	str	r5, [r4, #8]
 8004f9a:	4621      	mov	r1, r4
 8004f9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004fa0:	f7ff bad6 	b.w	8004550 <WM__SendMessage>
 8004fa4:	bd38      	pop	{r3, r4, r5, pc}

08004fa6 <WM_NotifyParent>:
 8004fa6:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004fa8:	2326      	movs	r3, #38	; 0x26
 8004faa:	9103      	str	r1, [sp, #12]
 8004fac:	4669      	mov	r1, sp
 8004fae:	9300      	str	r3, [sp, #0]
 8004fb0:	f7ff ffeb 	bl	8004f8a <WM_SendToParent>
 8004fb4:	b005      	add	sp, #20
 8004fb6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08004fbc <WM_SetFocus>:
 8004fbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004fbe:	b087      	sub	sp, #28
 8004fc0:	4604      	mov	r4, r0
 8004fc2:	2100      	movs	r1, #0
 8004fc4:	a802      	add	r0, sp, #8
 8004fc6:	2210      	movs	r2, #16
 8004fc8:	f00b f890 	bl	80100ec <memset>
 8004fcc:	2c00      	cmp	r4, #0
 8004fce:	d03a      	beq.n	8005046 <WM_SetFocus+0x8a>
 8004fd0:	4b1f      	ldr	r3, [pc, #124]	; (8005050 <WM_SetFocus+0x94>)
 8004fd2:	4a20      	ldr	r2, [pc, #128]	; (8005054 <WM_SetFocus+0x98>)
 8004fd4:	6819      	ldr	r1, [r3, #0]
 8004fd6:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 8004fda:	4284      	cmp	r4, r0
 8004fdc:	4616      	mov	r6, r2
 8004fde:	461f      	mov	r7, r3
 8004fe0:	d031      	beq.n	8005046 <WM_SetFocus+0x8a>
 8004fe2:	231e      	movs	r3, #30
 8004fe4:	e88d 0011 	stmia.w	sp, {r0, r4}
 8004fe8:	9302      	str	r3, [sp, #8]
 8004fea:	b110      	cbz	r0, 8004ff2 <WM_SetFocus+0x36>
 8004fec:	a902      	add	r1, sp, #8
 8004fee:	f7ff faaf 	bl	8004550 <WM__SendMessage>
 8004ff2:	2301      	movs	r3, #1
 8004ff4:	4620      	mov	r0, r4
 8004ff6:	a902      	add	r1, sp, #8
 8004ff8:	9305      	str	r3, [sp, #20]
 8004ffa:	f7ff faa9 	bl	8004550 <WM__SendMessage>
 8004ffe:	9d05      	ldr	r5, [sp, #20]
 8005000:	bb15      	cbnz	r5, 8005048 <WM_SetFocus+0x8c>
 8005002:	683b      	ldr	r3, [r7, #0]
 8005004:	f846 4023 	str.w	r4, [r6, r3, lsl #2]
 8005008:	4620      	mov	r0, r4
 800500a:	f7ff fe27 	bl	8004c5c <WM_GetParent>
 800500e:	4604      	mov	r4, r0
 8005010:	b138      	cbz	r0, 8005022 <WM_SetFocus+0x66>
 8005012:	2320      	movs	r3, #32
 8005014:	9302      	str	r3, [sp, #8]
 8005016:	a902      	add	r1, sp, #8
 8005018:	ab00      	add	r3, sp, #0
 800501a:	9305      	str	r3, [sp, #20]
 800501c:	f7ff fa98 	bl	8004550 <WM__SendMessage>
 8005020:	e7f2      	b.n	8005008 <WM_SetFocus+0x4c>
 8005022:	9c00      	ldr	r4, [sp, #0]
 8005024:	4620      	mov	r0, r4
 8005026:	f000 fc65 	bl	80058f4 <WM__IsWindow>
 800502a:	b168      	cbz	r0, 8005048 <WM_SetFocus+0x8c>
 800502c:	4620      	mov	r0, r4
 800502e:	f7ff fe15 	bl	8004c5c <WM_GetParent>
 8005032:	4604      	mov	r4, r0
 8005034:	b140      	cbz	r0, 8005048 <WM_SetFocus+0x8c>
 8005036:	2320      	movs	r3, #32
 8005038:	9302      	str	r3, [sp, #8]
 800503a:	a902      	add	r1, sp, #8
 800503c:	ab00      	add	r3, sp, #0
 800503e:	9305      	str	r3, [sp, #20]
 8005040:	f7ff fa86 	bl	8004550 <WM__SendMessage>
 8005044:	e7f2      	b.n	800502c <WM_SetFocus+0x70>
 8005046:	2501      	movs	r5, #1
 8005048:	4628      	mov	r0, r5
 800504a:	b007      	add	sp, #28
 800504c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800504e:	bf00      	nop
 8005050:	20002c9c 	.word	0x20002c9c
 8005054:	20002c8c 	.word	0x20002c8c

08005058 <WM_SetScrollState>:
 8005058:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800505a:	b130      	cbz	r0, 800506a <WM_SetScrollState+0x12>
 800505c:	b129      	cbz	r1, 800506a <WM_SetScrollState+0x12>
 800505e:	2324      	movs	r3, #36	; 0x24
 8005060:	9103      	str	r1, [sp, #12]
 8005062:	4669      	mov	r1, sp
 8005064:	9300      	str	r3, [sp, #0]
 8005066:	f000 fc8e 	bl	8005986 <WM_SendMessage>
 800506a:	b005      	add	sp, #20
 800506c:	f85d fb04 	ldr.w	pc, [sp], #4

08005070 <WM_SetSize>:
 8005070:	e92d 41e7 	stmdb	sp!, {r0, r1, r2, r5, r6, r7, r8, lr}
 8005074:	460e      	mov	r6, r1
 8005076:	4690      	mov	r8, r2
 8005078:	4607      	mov	r7, r0
 800507a:	b1d0      	cbz	r0, 80050b2 <WM_SetSize+0x42>
 800507c:	f006 fbf8 	bl	800b870 <GUI_ALLOC_LockH>
 8005080:	4603      	mov	r3, r0
 8005082:	a802      	add	r0, sp, #8
 8005084:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8005088:	f9b3 2000 	ldrsh.w	r2, [r3]
 800508c:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 8005090:	f840 3d04 	str.w	r3, [r0, #-4]!
 8005094:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8005098:	1a8a      	subs	r2, r1, r2
 800509a:	1aed      	subs	r5, r5, r3
 800509c:	43d2      	mvns	r2, r2
 800509e:	43ed      	mvns	r5, r5
 80050a0:	4416      	add	r6, r2
 80050a2:	4445      	add	r5, r8
 80050a4:	f006 fbf2 	bl	800b88c <GUI_ALLOC_UnlockH>
 80050a8:	4638      	mov	r0, r7
 80050aa:	4631      	mov	r1, r6
 80050ac:	462a      	mov	r2, r5
 80050ae:	f7ff feef 	bl	8004e90 <WM_ResizeWindow>
 80050b2:	b003      	add	sp, #12
 80050b4:	e8bd 81e0 	ldmia.w	sp!, {r5, r6, r7, r8, pc}

080050b8 <WM_SetUserClipRect>:
 80050b8:	4b04      	ldr	r3, [pc, #16]	; (80050cc <WM_SetUserClipRect+0x14>)
 80050ba:	b510      	push	{r4, lr}
 80050bc:	681b      	ldr	r3, [r3, #0]
 80050be:	6c5c      	ldr	r4, [r3, #68]	; 0x44
 80050c0:	6458      	str	r0, [r3, #68]	; 0x44
 80050c2:	f000 fbf3 	bl	80058ac <WM__ActivateClipRect>
 80050c6:	4620      	mov	r0, r4
 80050c8:	bd10      	pop	{r4, pc}
 80050ca:	bf00      	nop
 80050cc:	200000b8 	.word	0x200000b8

080050d0 <WM_InvalidateWindowAndDescs>:
 80050d0:	b510      	push	{r4, lr}
 80050d2:	4604      	mov	r4, r0
 80050d4:	b170      	cbz	r0, 80050f4 <WM_InvalidateWindowAndDescs+0x24>
 80050d6:	f000 fdaf 	bl	8005c38 <WM_InvalidateWindow>
 80050da:	4620      	mov	r0, r4
 80050dc:	f7ff fd1d 	bl	8004b1a <WM_GetFirstChild>
 80050e0:	4604      	mov	r4, r0
 80050e2:	b13c      	cbz	r4, 80050f4 <WM_InvalidateWindowAndDescs+0x24>
 80050e4:	4620      	mov	r0, r4
 80050e6:	f7ff fff3 	bl	80050d0 <WM_InvalidateWindowAndDescs>
 80050ea:	4620      	mov	r0, r4
 80050ec:	f006 fbb6 	bl	800b85c <GUI_ALLOC_h2p>
 80050f0:	6a04      	ldr	r4, [r0, #32]
 80050f2:	e7f6      	b.n	80050e2 <WM_InvalidateWindowAndDescs+0x12>
 80050f4:	bd10      	pop	{r4, pc}

080050f6 <WM_ShowWindow>:
 80050f6:	b513      	push	{r0, r1, r4, lr}
 80050f8:	4604      	mov	r4, r0
 80050fa:	b170      	cbz	r0, 800511a <WM_ShowWindow+0x24>
 80050fc:	f006 fbb8 	bl	800b870 <GUI_ALLOC_LockH>
 8005100:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005102:	9001      	str	r0, [sp, #4]
 8005104:	0793      	lsls	r3, r2, #30
 8005106:	d405      	bmi.n	8005114 <WM_ShowWindow+0x1e>
 8005108:	f042 0202 	orr.w	r2, r2, #2
 800510c:	6282      	str	r2, [r0, #40]	; 0x28
 800510e:	4620      	mov	r0, r4
 8005110:	f7ff ffde 	bl	80050d0 <WM_InvalidateWindowAndDescs>
 8005114:	a801      	add	r0, sp, #4
 8005116:	f006 fbb9 	bl	800b88c <GUI_ALLOC_UnlockH>
 800511a:	b002      	add	sp, #8
 800511c:	bd10      	pop	{r4, pc}
	...

08005120 <WM_ValidateWindow>:
 8005120:	b507      	push	{r0, r1, r2, lr}
 8005122:	b178      	cbz	r0, 8005144 <WM_ValidateWindow+0x24>
 8005124:	f006 fba4 	bl	800b870 <GUI_ALLOC_LockH>
 8005128:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800512a:	9001      	str	r0, [sp, #4]
 800512c:	069a      	lsls	r2, r3, #26
 800512e:	d506      	bpl.n	800513e <WM_ValidateWindow+0x1e>
 8005130:	f023 0320 	bic.w	r3, r3, #32
 8005134:	6283      	str	r3, [r0, #40]	; 0x28
 8005136:	4b05      	ldr	r3, [pc, #20]	; (800514c <WM_ValidateWindow+0x2c>)
 8005138:	881a      	ldrh	r2, [r3, #0]
 800513a:	3a01      	subs	r2, #1
 800513c:	801a      	strh	r2, [r3, #0]
 800513e:	a801      	add	r0, sp, #4
 8005140:	f006 fba4 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005144:	b003      	add	sp, #12
 8005146:	f85d fb04 	ldr.w	pc, [sp], #4
 800514a:	bf00      	nop
 800514c:	20002c94 	.word	0x20002c94

08005150 <WM_HideWindow>:
 8005150:	b513      	push	{r0, r1, r4, lr}
 8005152:	b188      	cbz	r0, 8005178 <WM_HideWindow+0x28>
 8005154:	f006 fb8c 	bl	800b870 <GUI_ALLOC_LockH>
 8005158:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800515a:	ac02      	add	r4, sp, #8
 800515c:	0791      	lsls	r1, r2, #30
 800515e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8005162:	d506      	bpl.n	8005172 <WM_HideWindow+0x22>
 8005164:	f022 0202 	bic.w	r2, r2, #2
 8005168:	6282      	str	r2, [r0, #40]	; 0x28
 800516a:	6981      	ldr	r1, [r0, #24]
 800516c:	6a02      	ldr	r2, [r0, #32]
 800516e:	f000 fd0f 	bl	8005b90 <WM__InvalidateRectEx>
 8005172:	4620      	mov	r0, r4
 8005174:	f006 fb8a 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005178:	b002      	add	sp, #8
 800517a:	bd10      	pop	{r4, pc}

0800517c <WM__GetWindowSizeX>:
 800517c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8005180:	f9b0 3000 	ldrsh.w	r3, [r0]
 8005184:	1ad0      	subs	r0, r2, r3
 8005186:	3001      	adds	r0, #1
 8005188:	4770      	bx	lr

0800518a <WM__GetWindowSizeY>:
 800518a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800518e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8005192:	1ad0      	subs	r0, r2, r3
 8005194:	3001      	adds	r0, #1
 8005196:	4770      	bx	lr

08005198 <WM_GetWindowSizeX>:
 8005198:	b513      	push	{r0, r1, r4, lr}
 800519a:	b908      	cbnz	r0, 80051a0 <WM_GetWindowSizeX+0x8>
 800519c:	f000 fef0 	bl	8005f80 <WM_GetActiveWindow>
 80051a0:	f006 fb66 	bl	800b870 <GUI_ALLOC_LockH>
 80051a4:	ab02      	add	r3, sp, #8
 80051a6:	f9b0 2000 	ldrsh.w	r2, [r0]
 80051aa:	f843 0d04 	str.w	r0, [r3, #-4]!
 80051ae:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80051b2:	4618      	mov	r0, r3
 80051b4:	1aa4      	subs	r4, r4, r2
 80051b6:	f006 fb69 	bl	800b88c <GUI_ALLOC_UnlockH>
 80051ba:	3401      	adds	r4, #1
 80051bc:	4620      	mov	r0, r4
 80051be:	b002      	add	sp, #8
 80051c0:	bd10      	pop	{r4, pc}

080051c2 <WM_GetWindowSizeY>:
 80051c2:	b513      	push	{r0, r1, r4, lr}
 80051c4:	b908      	cbnz	r0, 80051ca <WM_GetWindowSizeY+0x8>
 80051c6:	f000 fedb 	bl	8005f80 <WM_GetActiveWindow>
 80051ca:	f006 fb51 	bl	800b870 <GUI_ALLOC_LockH>
 80051ce:	ab02      	add	r3, sp, #8
 80051d0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80051d4:	f843 0d04 	str.w	r0, [r3, #-4]!
 80051d8:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 80051dc:	4618      	mov	r0, r3
 80051de:	1aa4      	subs	r4, r4, r2
 80051e0:	f006 fb54 	bl	800b88c <GUI_ALLOC_UnlockH>
 80051e4:	3401      	adds	r4, #1
 80051e6:	4620      	mov	r0, r4
 80051e8:	b002      	add	sp, #8
 80051ea:	bd10      	pop	{r4, pc}

080051ec <_cbInvalidateOne>:
 80051ec:	f000 bd24 	b.w	8005c38 <WM_InvalidateWindow>

080051f0 <WM_BringToTop>:
 80051f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80051f2:	4605      	mov	r5, r0
 80051f4:	2800      	cmp	r0, #0
 80051f6:	d032      	beq.n	800525e <WM_BringToTop+0x6e>
 80051f8:	f006 fb3a 	bl	800b870 <GUI_ALLOC_LockH>
 80051fc:	ac02      	add	r4, sp, #8
 80051fe:	4603      	mov	r3, r0
 8005200:	f844 0d08 	str.w	r0, [r4, #-8]!
 8005204:	6a00      	ldr	r0, [r0, #32]
 8005206:	b908      	cbnz	r0, 800520c <WM_BringToTop+0x1c>
 8005208:	4668      	mov	r0, sp
 800520a:	e00e      	b.n	800522a <WM_BringToTop+0x3a>
 800520c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800520e:	071a      	lsls	r2, r3, #28
 8005210:	d411      	bmi.n	8005236 <WM_BringToTop+0x46>
 8005212:	f006 fb2d 	bl	800b870 <GUI_ALLOC_LockH>
 8005216:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005218:	ae02      	add	r6, sp, #8
 800521a:	071b      	lsls	r3, r3, #28
 800521c:	f846 0d04 	str.w	r0, [r6, #-4]!
 8005220:	d506      	bpl.n	8005230 <WM_BringToTop+0x40>
 8005222:	4668      	mov	r0, sp
 8005224:	f006 fb32 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005228:	4630      	mov	r0, r6
 800522a:	f006 fb2f 	bl	800b88c <GUI_ALLOC_UnlockH>
 800522e:	e016      	b.n	800525e <WM_BringToTop+0x6e>
 8005230:	4630      	mov	r0, r6
 8005232:	f006 fb2b 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005236:	9b00      	ldr	r3, [sp, #0]
 8005238:	4668      	mov	r0, sp
 800523a:	699e      	ldr	r6, [r3, #24]
 800523c:	f006 fb26 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005240:	4628      	mov	r0, r5
 8005242:	f000 fae5 	bl	8005810 <WM__RemoveWindowFromList>
 8005246:	4631      	mov	r1, r6
 8005248:	4628      	mov	r0, r5
 800524a:	f000 fa8f 	bl	800576c <WM__InsertWindowIntoList>
 800524e:	4628      	mov	r0, r5
 8005250:	f000 fcf2 	bl	8005c38 <WM_InvalidateWindow>
 8005254:	4628      	mov	r0, r5
 8005256:	4903      	ldr	r1, [pc, #12]	; (8005264 <WM_BringToTop+0x74>)
 8005258:	2200      	movs	r2, #0
 800525a:	f7ff fc22 	bl	8004aa2 <WM_ForEachDesc>
 800525e:	b002      	add	sp, #8
 8005260:	bd70      	pop	{r4, r5, r6, pc}
 8005262:	bf00      	nop
 8005264:	080051ed 	.word	0x080051ed

08005268 <_OnExit>:
 8005268:	b538      	push	{r3, r4, r5, lr}
 800526a:	4b19      	ldr	r3, [pc, #100]	; (80052d0 <_OnExit+0x68>)
 800526c:	4d19      	ldr	r5, [pc, #100]	; (80052d4 <_OnExit+0x6c>)
 800526e:	4a1a      	ldr	r2, [pc, #104]	; (80052d8 <_OnExit+0x70>)
 8005270:	481a      	ldr	r0, [pc, #104]	; (80052dc <_OnExit+0x74>)
 8005272:	2400      	movs	r4, #0
 8005274:	701c      	strb	r4, [r3, #0]
 8005276:	4b1a      	ldr	r3, [pc, #104]	; (80052e0 <_OnExit+0x78>)
 8005278:	6014      	str	r4, [r2, #0]
 800527a:	601c      	str	r4, [r3, #0]
 800527c:	4b19      	ldr	r3, [pc, #100]	; (80052e4 <_OnExit+0x7c>)
 800527e:	6054      	str	r4, [r2, #4]
 8005280:	601c      	str	r4, [r3, #0]
 8005282:	4b19      	ldr	r3, [pc, #100]	; (80052e8 <_OnExit+0x80>)
 8005284:	601c      	str	r4, [r3, #0]
 8005286:	605c      	str	r4, [r3, #4]
 8005288:	4b18      	ldr	r3, [pc, #96]	; (80052ec <_OnExit+0x84>)
 800528a:	601c      	str	r4, [r3, #0]
 800528c:	4b18      	ldr	r3, [pc, #96]	; (80052f0 <_OnExit+0x88>)
 800528e:	601c      	str	r4, [r3, #0]
 8005290:	4b18      	ldr	r3, [pc, #96]	; (80052f4 <_OnExit+0x8c>)
 8005292:	601c      	str	r4, [r3, #0]
 8005294:	4b18      	ldr	r3, [pc, #96]	; (80052f8 <_OnExit+0x90>)
 8005296:	601c      	str	r4, [r3, #0]
 8005298:	4b18      	ldr	r3, [pc, #96]	; (80052fc <_OnExit+0x94>)
 800529a:	4621      	mov	r1, r4
 800529c:	601c      	str	r4, [r3, #0]
 800529e:	2218      	movs	r2, #24
 80052a0:	682b      	ldr	r3, [r5, #0]
 80052a2:	4798      	blx	r3
 80052a4:	4b16      	ldr	r3, [pc, #88]	; (8005300 <_OnExit+0x98>)
 80052a6:	4817      	ldr	r0, [pc, #92]	; (8005304 <_OnExit+0x9c>)
 80052a8:	601c      	str	r4, [r3, #0]
 80052aa:	4b17      	ldr	r3, [pc, #92]	; (8005308 <_OnExit+0xa0>)
 80052ac:	4621      	mov	r1, r4
 80052ae:	601c      	str	r4, [r3, #0]
 80052b0:	605c      	str	r4, [r3, #4]
 80052b2:	2210      	movs	r2, #16
 80052b4:	682b      	ldr	r3, [r5, #0]
 80052b6:	4798      	blx	r3
 80052b8:	682b      	ldr	r3, [r5, #0]
 80052ba:	4814      	ldr	r0, [pc, #80]	; (800530c <_OnExit+0xa4>)
 80052bc:	4621      	mov	r1, r4
 80052be:	2210      	movs	r2, #16
 80052c0:	4798      	blx	r3
 80052c2:	682b      	ldr	r3, [r5, #0]
 80052c4:	4812      	ldr	r0, [pc, #72]	; (8005310 <_OnExit+0xa8>)
 80052c6:	4621      	mov	r1, r4
 80052c8:	2210      	movs	r2, #16
 80052ca:	4798      	blx	r3
 80052cc:	bd38      	pop	{r3, r4, r5, pc}
 80052ce:	bf00      	nop
 80052d0:	20002aec 	.word	0x20002aec
 80052d4:	200000a4 	.word	0x200000a4
 80052d8:	20002c8c 	.word	0x20002c8c
 80052dc:	20002ad0 	.word	0x20002ad0
 80052e0:	20002acc 	.word	0x20002acc
 80052e4:	20002cb8 	.word	0x20002cb8
 80052e8:	20002cc0 	.word	0x20002cc0
 80052ec:	20002ccc 	.word	0x20002ccc
 80052f0:	20002c78 	.word	0x20002c78
 80052f4:	20002cac 	.word	0x20002cac
 80052f8:	20002cbc 	.word	0x20002cbc
 80052fc:	20002ae8 	.word	0x20002ae8
 8005300:	20002c88 	.word	0x20002c88
 8005304:	20002e14 	.word	0x20002e14
 8005308:	20002c7c 	.word	0x20002c7c
 800530c:	20002e04 	.word	0x20002e04
 8005310:	20002df4 	.word	0x20002df4

08005314 <_Paint1>:
 8005314:	b510      	push	{r4, lr}
 8005316:	4604      	mov	r4, r0
 8005318:	f006 faa0 	bl	800b85c <GUI_ALLOC_h2p>
 800531c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800531e:	4a04      	ldr	r2, [pc, #16]	; (8005330 <_Paint1+0x1c>)
 8005320:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8005324:	4b03      	ldr	r3, [pc, #12]	; (8005334 <_Paint1+0x20>)
 8005326:	4620      	mov	r0, r4
 8005328:	bf08      	it	eq
 800532a:	4613      	moveq	r3, r2
 800532c:	4798      	blx	r3
 800532e:	bd10      	pop	{r4, pc}
 8005330:	08006221 	.word	0x08006221
 8005334:	080067ad 	.word	0x080067ad

08005338 <_Findy1>:
 8005338:	b5f0      	push	{r4, r5, r6, r7, lr}
 800533a:	4605      	mov	r5, r0
 800533c:	b085      	sub	sp, #20
 800533e:	460c      	mov	r4, r1
 8005340:	4616      	mov	r6, r2
 8005342:	2d00      	cmp	r5, #0
 8005344:	d04c      	beq.n	80053e0 <_Findy1+0xa8>
 8005346:	4628      	mov	r0, r5
 8005348:	f006 fa92 	bl	800b870 <GUI_ALLOC_LockH>
 800534c:	6a87      	ldr	r7, [r0, #40]	; 0x28
 800534e:	9001      	str	r0, [sp, #4]
 8005350:	07bb      	lsls	r3, r7, #30
 8005352:	4601      	mov	r1, r0
 8005354:	d53d      	bpl.n	80053d2 <_Findy1+0x9a>
 8005356:	ad02      	add	r5, sp, #8
 8005358:	b126      	cbz	r6, 8005364 <_Findy1+0x2c>
 800535a:	4628      	mov	r0, r5
 800535c:	4632      	mov	r2, r6
 800535e:	f003 ff52 	bl	8009206 <GUI__IntersectRects>
 8005362:	e002      	b.n	800536a <_Findy1+0x32>
 8005364:	c803      	ldmia	r0, {r0, r1}
 8005366:	e885 0003 	stmia.w	r5, {r0, r1}
 800536a:	4620      	mov	r0, r4
 800536c:	4629      	mov	r1, r5
 800536e:	f005 fde1 	bl	800af34 <GUI_RectsIntersect>
 8005372:	b370      	cbz	r0, 80053d2 <_Findy1+0x9a>
 8005374:	f017 0f01 	tst.w	r7, #1
 8005378:	9b01      	ldr	r3, [sp, #4]
 800537a:	d11e      	bne.n	80053ba <_Findy1+0x82>
 800537c:	b13e      	cbz	r6, 800538e <_Findy1+0x56>
 800537e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8005382:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8005386:	429a      	cmp	r2, r3
 8005388:	bfa8      	it	ge
 800538a:	4613      	movge	r3, r2
 800538c:	e001      	b.n	8005392 <_Findy1+0x5a>
 800538e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8005392:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8005396:	4293      	cmp	r3, r2
 8005398:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800539c:	dd06      	ble.n	80053ac <_Findy1+0x74>
 800539e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80053a2:	b219      	sxth	r1, r3
 80053a4:	428a      	cmp	r2, r1
 80053a6:	db14      	blt.n	80053d2 <_Findy1+0x9a>
 80053a8:	3b01      	subs	r3, #1
 80053aa:	e004      	b.n	80053b6 <_Findy1+0x7e>
 80053ac:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80053b0:	b219      	sxth	r1, r3
 80053b2:	428a      	cmp	r2, r1
 80053b4:	dd0d      	ble.n	80053d2 <_Findy1+0x9a>
 80053b6:	80e3      	strh	r3, [r4, #6]
 80053b8:	e00b      	b.n	80053d2 <_Findy1+0x9a>
 80053ba:	69df      	ldr	r7, [r3, #28]
 80053bc:	b14f      	cbz	r7, 80053d2 <_Findy1+0x9a>
 80053be:	4638      	mov	r0, r7
 80053c0:	4621      	mov	r1, r4
 80053c2:	462a      	mov	r2, r5
 80053c4:	f7ff ffb8 	bl	8005338 <_Findy1>
 80053c8:	4638      	mov	r0, r7
 80053ca:	f006 fa47 	bl	800b85c <GUI_ALLOC_h2p>
 80053ce:	6a07      	ldr	r7, [r0, #32]
 80053d0:	e7f4      	b.n	80053bc <_Findy1+0x84>
 80053d2:	a804      	add	r0, sp, #16
 80053d4:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 80053d8:	6a1d      	ldr	r5, [r3, #32]
 80053da:	f006 fa57 	bl	800b88c <GUI_ALLOC_UnlockH>
 80053de:	e7b0      	b.n	8005342 <_Findy1+0xa>
 80053e0:	b005      	add	sp, #20
 80053e2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080053e4 <_Findx0>:
 80053e4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80053e8:	4604      	mov	r4, r0
 80053ea:	460f      	mov	r7, r1
 80053ec:	4690      	mov	r8, r2
 80053ee:	2500      	movs	r5, #0
 80053f0:	2c00      	cmp	r4, #0
 80053f2:	d037      	beq.n	8005464 <_Findx0+0x80>
 80053f4:	4620      	mov	r0, r4
 80053f6:	f006 fa3b 	bl	800b870 <GUI_ALLOC_LockH>
 80053fa:	6a86      	ldr	r6, [r0, #40]	; 0x28
 80053fc:	9001      	str	r0, [sp, #4]
 80053fe:	07b2      	lsls	r2, r6, #30
 8005400:	4601      	mov	r1, r0
 8005402:	d528      	bpl.n	8005456 <_Findx0+0x72>
 8005404:	ac02      	add	r4, sp, #8
 8005406:	f1b8 0f00 	cmp.w	r8, #0
 800540a:	d004      	beq.n	8005416 <_Findx0+0x32>
 800540c:	4620      	mov	r0, r4
 800540e:	4642      	mov	r2, r8
 8005410:	f003 fef9 	bl	8009206 <GUI__IntersectRects>
 8005414:	e002      	b.n	800541c <_Findx0+0x38>
 8005416:	c803      	ldmia	r0, {r0, r1}
 8005418:	e884 0003 	stmia.w	r4, {r0, r1}
 800541c:	4638      	mov	r0, r7
 800541e:	4621      	mov	r1, r4
 8005420:	f005 fd88 	bl	800af34 <GUI_RectsIntersect>
 8005424:	b1b8      	cbz	r0, 8005456 <_Findx0+0x72>
 8005426:	07f3      	lsls	r3, r6, #31
 8005428:	d405      	bmi.n	8005436 <_Findx0+0x52>
 800542a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800542e:	3301      	adds	r3, #1
 8005430:	803b      	strh	r3, [r7, #0]
 8005432:	2501      	movs	r5, #1
 8005434:	e00f      	b.n	8005456 <_Findx0+0x72>
 8005436:	9b01      	ldr	r3, [sp, #4]
 8005438:	69de      	ldr	r6, [r3, #28]
 800543a:	b166      	cbz	r6, 8005456 <_Findx0+0x72>
 800543c:	4630      	mov	r0, r6
 800543e:	4639      	mov	r1, r7
 8005440:	4622      	mov	r2, r4
 8005442:	f7ff ffcf 	bl	80053e4 <_Findx0>
 8005446:	2800      	cmp	r0, #0
 8005448:	4630      	mov	r0, r6
 800544a:	bf18      	it	ne
 800544c:	2501      	movne	r5, #1
 800544e:	f006 fa05 	bl	800b85c <GUI_ALLOC_h2p>
 8005452:	6a06      	ldr	r6, [r0, #32]
 8005454:	e7f1      	b.n	800543a <_Findx0+0x56>
 8005456:	a804      	add	r0, sp, #16
 8005458:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 800545c:	6a1c      	ldr	r4, [r3, #32]
 800545e:	f006 fa15 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005462:	e7c5      	b.n	80053f0 <_Findx0+0xc>
 8005464:	4628      	mov	r0, r5
 8005466:	b004      	add	sp, #16
 8005468:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800546c <_Findx1>:
 800546c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800546e:	4604      	mov	r4, r0
 8005470:	b085      	sub	sp, #20
 8005472:	460e      	mov	r6, r1
 8005474:	4617      	mov	r7, r2
 8005476:	2c00      	cmp	r4, #0
 8005478:	d031      	beq.n	80054de <_Findx1+0x72>
 800547a:	4620      	mov	r0, r4
 800547c:	f006 f9f8 	bl	800b870 <GUI_ALLOC_LockH>
 8005480:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8005482:	9001      	str	r0, [sp, #4]
 8005484:	07aa      	lsls	r2, r5, #30
 8005486:	4601      	mov	r1, r0
 8005488:	d522      	bpl.n	80054d0 <_Findx1+0x64>
 800548a:	ac02      	add	r4, sp, #8
 800548c:	b127      	cbz	r7, 8005498 <_Findx1+0x2c>
 800548e:	4620      	mov	r0, r4
 8005490:	463a      	mov	r2, r7
 8005492:	f003 feb8 	bl	8009206 <GUI__IntersectRects>
 8005496:	e002      	b.n	800549e <_Findx1+0x32>
 8005498:	c803      	ldmia	r0, {r0, r1}
 800549a:	e884 0003 	stmia.w	r4, {r0, r1}
 800549e:	4630      	mov	r0, r6
 80054a0:	4621      	mov	r1, r4
 80054a2:	f005 fd47 	bl	800af34 <GUI_RectsIntersect>
 80054a6:	b198      	cbz	r0, 80054d0 <_Findx1+0x64>
 80054a8:	07eb      	lsls	r3, r5, #31
 80054aa:	d404      	bmi.n	80054b6 <_Findx1+0x4a>
 80054ac:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80054b0:	3b01      	subs	r3, #1
 80054b2:	80b3      	strh	r3, [r6, #4]
 80054b4:	e00c      	b.n	80054d0 <_Findx1+0x64>
 80054b6:	9b01      	ldr	r3, [sp, #4]
 80054b8:	69dd      	ldr	r5, [r3, #28]
 80054ba:	b14d      	cbz	r5, 80054d0 <_Findx1+0x64>
 80054bc:	4628      	mov	r0, r5
 80054be:	4631      	mov	r1, r6
 80054c0:	4622      	mov	r2, r4
 80054c2:	f7ff ffd3 	bl	800546c <_Findx1>
 80054c6:	4628      	mov	r0, r5
 80054c8:	f006 f9c8 	bl	800b85c <GUI_ALLOC_h2p>
 80054cc:	6a05      	ldr	r5, [r0, #32]
 80054ce:	e7f4      	b.n	80054ba <_Findx1+0x4e>
 80054d0:	a804      	add	r0, sp, #16
 80054d2:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 80054d6:	6a1c      	ldr	r4, [r3, #32]
 80054d8:	f006 f9d8 	bl	800b88c <GUI_ALLOC_UnlockH>
 80054dc:	e7cb      	b.n	8005476 <_Findx1+0xa>
 80054de:	b005      	add	sp, #20
 80054e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080054e4 <_Paint1Trans>:
 80054e4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80054e8:	4d21      	ldr	r5, [pc, #132]	; (8005570 <_Paint1Trans+0x8c>)
 80054ea:	682b      	ldr	r3, [r5, #0]
 80054ec:	4606      	mov	r6, r0
 80054ee:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80054f0:	f006 f9be 	bl	800b870 <GUI_ALLOC_LockH>
 80054f4:	9000      	str	r0, [sp, #0]
 80054f6:	4630      	mov	r0, r6
 80054f8:	f006 f9ba 	bl	800b870 <GUI_ALLOC_LockH>
 80054fc:	ac02      	add	r4, sp, #8
 80054fe:	4601      	mov	r1, r0
 8005500:	9001      	str	r0, [sp, #4]
 8005502:	f854 0d08 	ldr.w	r0, [r4, #-8]!
 8005506:	3008      	adds	r0, #8
 8005508:	f005 fd14 	bl	800af34 <GUI_RectsIntersect>
 800550c:	4607      	mov	r7, r0
 800550e:	b328      	cbz	r0, 800555c <_Paint1Trans+0x78>
 8005510:	9901      	ldr	r1, [sp, #4]
 8005512:	9a00      	ldr	r2, [sp, #0]
 8005514:	682b      	ldr	r3, [r5, #0]
 8005516:	4c17      	ldr	r4, [pc, #92]	; (8005574 <_Paint1Trans+0x90>)
 8005518:	6d1f      	ldr	r7, [r3, #80]	; 0x50
 800551a:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 800551e:	f101 0008 	add.w	r0, r1, #8
 8005522:	3208      	adds	r2, #8
 8005524:	f003 fe6f 	bl	8009206 <GUI__IntersectRects>
 8005528:	4668      	mov	r0, sp
 800552a:	f006 f9af 	bl	800b88c <GUI_ALLOC_UnlockH>
 800552e:	9a01      	ldr	r2, [sp, #4]
 8005530:	682b      	ldr	r3, [r5, #0]
 8005532:	f9b2 1000 	ldrsh.w	r1, [r2]
 8005536:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800553a:	64d9      	str	r1, [r3, #76]	; 0x4c
 800553c:	651a      	str	r2, [r3, #80]	; 0x50
 800553e:	a801      	add	r0, sp, #4
 8005540:	6026      	str	r6, [r4, #0]
 8005542:	f006 f9a3 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005546:	4630      	mov	r0, r6
 8005548:	f7ff fee4 	bl	8005314 <_Paint1>
 800554c:	2300      	movs	r3, #0
 800554e:	6023      	str	r3, [r4, #0]
 8005550:	682b      	ldr	r3, [r5, #0]
 8005552:	651f      	str	r7, [r3, #80]	; 0x50
 8005554:	f8c3 804c 	str.w	r8, [r3, #76]	; 0x4c
 8005558:	2701      	movs	r7, #1
 800555a:	e005      	b.n	8005568 <_Paint1Trans+0x84>
 800555c:	4668      	mov	r0, sp
 800555e:	f006 f995 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005562:	a801      	add	r0, sp, #4
 8005564:	f006 f992 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005568:	4638      	mov	r0, r7
 800556a:	b002      	add	sp, #8
 800556c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005570:	200000b8 	.word	0x200000b8
 8005574:	20002c78 	.word	0x20002c78

08005578 <_PaintTransChildren>:
 8005578:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800557c:	4606      	mov	r6, r0
 800557e:	f006 f977 	bl	800b870 <GUI_ALLOC_LockH>
 8005582:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005584:	9001      	str	r0, [sp, #4]
 8005586:	079b      	lsls	r3, r3, #30
 8005588:	d405      	bmi.n	8005596 <_PaintTransChildren+0x1e>
 800558a:	a801      	add	r0, sp, #4
 800558c:	f006 f97e 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005590:	b002      	add	sp, #8
 8005592:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005596:	69c4      	ldr	r4, [r0, #28]
 8005598:	2c00      	cmp	r4, #0
 800559a:	d0f6      	beq.n	800558a <_PaintTransChildren+0x12>
 800559c:	4620      	mov	r0, r4
 800559e:	f006 f967 	bl	800b870 <GUI_ALLOC_LockH>
 80055a2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80055a4:	ad02      	add	r5, sp, #8
 80055a6:	f003 0303 	and.w	r3, r3, #3
 80055aa:	2b03      	cmp	r3, #3
 80055ac:	f845 0d08 	str.w	r0, [r5, #-8]!
 80055b0:	d137      	bne.n	8005622 <_PaintTransChildren+0xaa>
 80055b2:	9901      	ldr	r1, [sp, #4]
 80055b4:	3108      	adds	r1, #8
 80055b6:	f005 fcbd 	bl	800af34 <GUI_RectsIntersect>
 80055ba:	2800      	cmp	r0, #0
 80055bc:	d031      	beq.n	8005622 <_PaintTransChildren+0xaa>
 80055be:	a802      	add	r0, sp, #8
 80055c0:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 80055c4:	f8b3 9008 	ldrh.w	r9, [r3, #8]
 80055c8:	f8b3 800a 	ldrh.w	r8, [r3, #10]
 80055cc:	899f      	ldrh	r7, [r3, #12]
 80055ce:	f8b3 a00e 	ldrh.w	sl, [r3, #14]
 80055d2:	f006 f95b 	bl	800b88c <GUI_ALLOC_UnlockH>
 80055d6:	4668      	mov	r0, sp
 80055d8:	f006 f958 	bl	800b88c <GUI_ALLOC_UnlockH>
 80055dc:	4620      	mov	r0, r4
 80055de:	f7ff ff81 	bl	80054e4 <_Paint1Trans>
 80055e2:	b170      	cbz	r0, 8005602 <_PaintTransChildren+0x8a>
 80055e4:	4620      	mov	r0, r4
 80055e6:	f006 f939 	bl	800b85c <GUI_ALLOC_h2p>
 80055ea:	9000      	str	r0, [sp, #0]
 80055ec:	4620      	mov	r0, r4
 80055ee:	f7ff ffc3 	bl	8005578 <_PaintTransChildren>
 80055f2:	4620      	mov	r0, r4
 80055f4:	f006 f932 	bl	800b85c <GUI_ALLOC_h2p>
 80055f8:	9000      	str	r0, [sp, #0]
 80055fa:	4630      	mov	r0, r6
 80055fc:	f006 f92e 	bl	800b85c <GUI_ALLOC_h2p>
 8005600:	9001      	str	r0, [sp, #4]
 8005602:	4630      	mov	r0, r6
 8005604:	f006 f934 	bl	800b870 <GUI_ALLOC_LockH>
 8005608:	9001      	str	r0, [sp, #4]
 800560a:	4620      	mov	r0, r4
 800560c:	f006 f930 	bl	800b870 <GUI_ALLOC_LockH>
 8005610:	9b01      	ldr	r3, [sp, #4]
 8005612:	9000      	str	r0, [sp, #0]
 8005614:	f8a3 9008 	strh.w	r9, [r3, #8]
 8005618:	f8a3 800a 	strh.w	r8, [r3, #10]
 800561c:	819f      	strh	r7, [r3, #12]
 800561e:	f8a3 a00e 	strh.w	sl, [r3, #14]
 8005622:	9b00      	ldr	r3, [sp, #0]
 8005624:	4668      	mov	r0, sp
 8005626:	6a1c      	ldr	r4, [r3, #32]
 8005628:	f006 f930 	bl	800b88c <GUI_ALLOC_UnlockH>
 800562c:	e7b4      	b.n	8005598 <_PaintTransChildren+0x20>
	...

08005630 <WM__PaintWinAndOverlays>:
 8005630:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005632:	4604      	mov	r4, r0
 8005634:	f006 f91c 	bl	800b870 <GUI_ALLOC_LockH>
 8005638:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800563a:	9001      	str	r0, [sp, #4]
 800563c:	f640 0301 	movw	r3, #2049	; 0x801
 8005640:	4013      	ands	r3, r2
 8005642:	2b01      	cmp	r3, #1
 8005644:	d005      	beq.n	8005652 <WM__PaintWinAndOverlays+0x22>
 8005646:	a801      	add	r0, sp, #4
 8005648:	f006 f920 	bl	800b88c <GUI_ALLOC_UnlockH>
 800564c:	4620      	mov	r0, r4
 800564e:	f7ff fe61 	bl	8005314 <_Paint1>
 8005652:	4b14      	ldr	r3, [pc, #80]	; (80056a4 <WM__PaintWinAndOverlays+0x74>)
 8005654:	681b      	ldr	r3, [r3, #0]
 8005656:	b313      	cbz	r3, 800569e <WM__PaintWinAndOverlays+0x6e>
 8005658:	4620      	mov	r0, r4
 800565a:	f7ff ff8d 	bl	8005578 <_PaintTransChildren>
 800565e:	4620      	mov	r0, r4
 8005660:	f006 f8fc 	bl	800b85c <GUI_ALLOC_h2p>
 8005664:	6985      	ldr	r5, [r0, #24]
 8005666:	6a04      	ldr	r4, [r0, #32]
 8005668:	b1cd      	cbz	r5, 800569e <WM__PaintWinAndOverlays+0x6e>
 800566a:	b194      	cbz	r4, 8005692 <WM__PaintWinAndOverlays+0x62>
 800566c:	4620      	mov	r0, r4
 800566e:	f006 f8f5 	bl	800b85c <GUI_ALLOC_h2p>
 8005672:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005674:	f003 0303 	and.w	r3, r3, #3
 8005678:	2b03      	cmp	r3, #3
 800567a:	d102      	bne.n	8005682 <WM__PaintWinAndOverlays+0x52>
 800567c:	4620      	mov	r0, r4
 800567e:	f7ff ff31 	bl	80054e4 <_Paint1Trans>
 8005682:	4620      	mov	r0, r4
 8005684:	f7ff ff78 	bl	8005578 <_PaintTransChildren>
 8005688:	4620      	mov	r0, r4
 800568a:	f006 f8e7 	bl	800b85c <GUI_ALLOC_h2p>
 800568e:	6a04      	ldr	r4, [r0, #32]
 8005690:	e7eb      	b.n	800566a <WM__PaintWinAndOverlays+0x3a>
 8005692:	4628      	mov	r0, r5
 8005694:	f006 f8e2 	bl	800b85c <GUI_ALLOC_h2p>
 8005698:	6a04      	ldr	r4, [r0, #32]
 800569a:	6985      	ldr	r5, [r0, #24]
 800569c:	e7e4      	b.n	8005668 <WM__PaintWinAndOverlays+0x38>
 800569e:	b003      	add	sp, #12
 80056a0:	bd30      	pop	{r4, r5, pc}
 80056a2:	bf00      	nop
 80056a4:	20002ccc 	.word	0x20002ccc

080056a8 <_cbPaintMemDev>:
 80056a8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80056ac:	4d17      	ldr	r5, [pc, #92]	; (800570c <_cbPaintMemDev+0x64>)
 80056ae:	682b      	ldr	r3, [r5, #0]
 80056b0:	4606      	mov	r6, r0
 80056b2:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80056b4:	f006 f8dc 	bl	800b870 <GUI_ALLOC_LockH>
 80056b8:	682a      	ldr	r2, [r5, #0]
 80056ba:	f8b0 a008 	ldrh.w	sl, [r0, #8]
 80056be:	f8b0 900a 	ldrh.w	r9, [r0, #10]
 80056c2:	f8b0 800c 	ldrh.w	r8, [r0, #12]
 80056c6:	89c7      	ldrh	r7, [r0, #14]
 80056c8:	ac02      	add	r4, sp, #8
 80056ca:	3208      	adds	r2, #8
 80056cc:	f844 0d04 	str.w	r0, [r4, #-4]!
 80056d0:	f100 0308 	add.w	r3, r0, #8
 80056d4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80056d8:	e883 0003 	stmia.w	r3, {r0, r1}
 80056dc:	4620      	mov	r0, r4
 80056de:	f006 f8d5 	bl	800b88c <GUI_ALLOC_UnlockH>
 80056e2:	6830      	ldr	r0, [r6, #0]
 80056e4:	f7ff ffa4 	bl	8005630 <WM__PaintWinAndOverlays>
 80056e8:	682b      	ldr	r3, [r5, #0]
 80056ea:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80056ec:	f006 f8c0 	bl	800b870 <GUI_ALLOC_LockH>
 80056f0:	9001      	str	r0, [sp, #4]
 80056f2:	f8a0 a008 	strh.w	sl, [r0, #8]
 80056f6:	f8a0 900a 	strh.w	r9, [r0, #10]
 80056fa:	f8a0 800c 	strh.w	r8, [r0, #12]
 80056fe:	81c7      	strh	r7, [r0, #14]
 8005700:	4620      	mov	r0, r4
 8005702:	f006 f8c3 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005706:	b002      	add	sp, #8
 8005708:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800570c:	200000b8 	.word	0x200000b8

08005710 <WM__ClipAtParentBorders>:
 8005710:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005712:	4607      	mov	r7, r0
 8005714:	460d      	mov	r5, r1
 8005716:	4628      	mov	r0, r5
 8005718:	f006 f8aa 	bl	800b870 <GUI_ALLOC_LockH>
 800571c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800571e:	ac02      	add	r4, sp, #8
 8005720:	f013 0602 	ands.w	r6, r3, #2
 8005724:	4601      	mov	r1, r0
 8005726:	f844 0d04 	str.w	r0, [r4, #-4]!
 800572a:	d104      	bne.n	8005736 <WM__ClipAtParentBorders+0x26>
 800572c:	4620      	mov	r0, r4
 800572e:	f006 f8ad 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005732:	4630      	mov	r0, r6
 8005734:	e016      	b.n	8005764 <WM__ClipAtParentBorders+0x54>
 8005736:	4638      	mov	r0, r7
 8005738:	f003 fd47 	bl	80091ca <GUI__IntersectRect>
 800573c:	9b01      	ldr	r3, [sp, #4]
 800573e:	699e      	ldr	r6, [r3, #24]
 8005740:	4620      	mov	r0, r4
 8005742:	b956      	cbnz	r6, 800575a <WM__ClipAtParentBorders+0x4a>
 8005744:	f006 f8a2 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005748:	4b07      	ldr	r3, [pc, #28]	; (8005768 <WM__ClipAtParentBorders+0x58>)
 800574a:	681a      	ldr	r2, [r3, #0]
 800574c:	4295      	cmp	r5, r2
 800574e:	d008      	beq.n	8005762 <WM__ClipAtParentBorders+0x52>
 8005750:	6858      	ldr	r0, [r3, #4]
 8005752:	1a2b      	subs	r3, r5, r0
 8005754:	4258      	negs	r0, r3
 8005756:	4158      	adcs	r0, r3
 8005758:	e004      	b.n	8005764 <WM__ClipAtParentBorders+0x54>
 800575a:	f006 f897 	bl	800b88c <GUI_ALLOC_UnlockH>
 800575e:	4635      	mov	r5, r6
 8005760:	e7d9      	b.n	8005716 <WM__ClipAtParentBorders+0x6>
 8005762:	2001      	movs	r0, #1
 8005764:	b003      	add	sp, #12
 8005766:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005768:	20002c7c 	.word	0x20002c7c

0800576c <WM__InsertWindowIntoList>:
 800576c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800576e:	4604      	mov	r4, r0
 8005770:	b085      	sub	sp, #20
 8005772:	460d      	mov	r5, r1
 8005774:	2900      	cmp	r1, #0
 8005776:	d049      	beq.n	800580c <WM__InsertWindowIntoList+0xa0>
 8005778:	f006 f87a 	bl	800b870 <GUI_ALLOC_LockH>
 800577c:	2300      	movs	r3, #0
 800577e:	6203      	str	r3, [r0, #32]
 8005780:	6185      	str	r5, [r0, #24]
 8005782:	9001      	str	r0, [sp, #4]
 8005784:	4628      	mov	r0, r5
 8005786:	f006 f873 	bl	800b870 <GUI_ALLOC_LockH>
 800578a:	9b01      	ldr	r3, [sp, #4]
 800578c:	69c5      	ldr	r5, [r0, #28]
 800578e:	9002      	str	r0, [sp, #8]
 8005790:	6a9f      	ldr	r7, [r3, #40]	; 0x28
 8005792:	b92d      	cbnz	r5, 80057a0 <WM__InsertWindowIntoList+0x34>
 8005794:	61c4      	str	r4, [r0, #28]
 8005796:	a801      	add	r0, sp, #4
 8005798:	f006 f878 	bl	800b88c <GUI_ALLOC_UnlockH>
 800579c:	a802      	add	r0, sp, #8
 800579e:	e033      	b.n	8005808 <WM__InsertWindowIntoList+0x9c>
 80057a0:	4628      	mov	r0, r5
 80057a2:	f006 f865 	bl	800b870 <GUI_ALLOC_LockH>
 80057a6:	ae04      	add	r6, sp, #16
 80057a8:	f007 0708 	and.w	r7, r7, #8
 80057ac:	f846 0d04 	str.w	r0, [r6, #-4]!
 80057b0:	b977      	cbnz	r7, 80057d0 <WM__InsertWindowIntoList+0x64>
 80057b2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80057b4:	071a      	lsls	r2, r3, #28
 80057b6:	d50b      	bpl.n	80057d0 <WM__InsertWindowIntoList+0x64>
 80057b8:	9b01      	ldr	r3, [sp, #4]
 80057ba:	621d      	str	r5, [r3, #32]
 80057bc:	9b02      	ldr	r3, [sp, #8]
 80057be:	a801      	add	r0, sp, #4
 80057c0:	61dc      	str	r4, [r3, #28]
 80057c2:	f006 f863 	bl	800b88c <GUI_ALLOC_UnlockH>
 80057c6:	a802      	add	r0, sp, #8
 80057c8:	f006 f860 	bl	800b88c <GUI_ALLOC_UnlockH>
 80057cc:	4630      	mov	r0, r6
 80057ce:	e01b      	b.n	8005808 <WM__InsertWindowIntoList+0x9c>
 80057d0:	a802      	add	r0, sp, #8
 80057d2:	f006 f85b 	bl	800b88c <GUI_ALLOC_UnlockH>
 80057d6:	4630      	mov	r0, r6
 80057d8:	f006 f858 	bl	800b88c <GUI_ALLOC_UnlockH>
 80057dc:	4628      	mov	r0, r5
 80057de:	f006 f83d 	bl	800b85c <GUI_ALLOC_h2p>
 80057e2:	9003      	str	r0, [sp, #12]
 80057e4:	9b03      	ldr	r3, [sp, #12]
 80057e6:	6a1d      	ldr	r5, [r3, #32]
 80057e8:	b90d      	cbnz	r5, 80057ee <WM__InsertWindowIntoList+0x82>
 80057ea:	621c      	str	r4, [r3, #32]
 80057ec:	e00b      	b.n	8005806 <WM__InsertWindowIntoList+0x9a>
 80057ee:	4628      	mov	r0, r5
 80057f0:	f006 f834 	bl	800b85c <GUI_ALLOC_h2p>
 80057f4:	2f00      	cmp	r7, #0
 80057f6:	d1f4      	bne.n	80057e2 <WM__InsertWindowIntoList+0x76>
 80057f8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80057fa:	071b      	lsls	r3, r3, #28
 80057fc:	d5f1      	bpl.n	80057e2 <WM__InsertWindowIntoList+0x76>
 80057fe:	9b03      	ldr	r3, [sp, #12]
 8005800:	621c      	str	r4, [r3, #32]
 8005802:	9b01      	ldr	r3, [sp, #4]
 8005804:	621d      	str	r5, [r3, #32]
 8005806:	a801      	add	r0, sp, #4
 8005808:	f006 f840 	bl	800b88c <GUI_ALLOC_UnlockH>
 800580c:	b005      	add	sp, #20
 800580e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005810 <WM__RemoveWindowFromList>:
 8005810:	b570      	push	{r4, r5, r6, lr}
 8005812:	4604      	mov	r4, r0
 8005814:	f006 f822 	bl	800b85c <GUI_ALLOC_h2p>
 8005818:	4605      	mov	r5, r0
 800581a:	6980      	ldr	r0, [r0, #24]
 800581c:	b1a8      	cbz	r0, 800584a <WM__RemoveWindowFromList+0x3a>
 800581e:	f006 f81d 	bl	800b85c <GUI_ALLOC_h2p>
 8005822:	69c3      	ldr	r3, [r0, #28]
 8005824:	42a3      	cmp	r3, r4
 8005826:	4606      	mov	r6, r0
 8005828:	d105      	bne.n	8005836 <WM__RemoveWindowFromList+0x26>
 800582a:	4618      	mov	r0, r3
 800582c:	f006 f816 	bl	800b85c <GUI_ALLOC_h2p>
 8005830:	6a03      	ldr	r3, [r0, #32]
 8005832:	61f3      	str	r3, [r6, #28]
 8005834:	bd70      	pop	{r4, r5, r6, pc}
 8005836:	b143      	cbz	r3, 800584a <WM__RemoveWindowFromList+0x3a>
 8005838:	4618      	mov	r0, r3
 800583a:	f006 f80f 	bl	800b85c <GUI_ALLOC_h2p>
 800583e:	6a03      	ldr	r3, [r0, #32]
 8005840:	42a3      	cmp	r3, r4
 8005842:	d1f8      	bne.n	8005836 <WM__RemoveWindowFromList+0x26>
 8005844:	6a2b      	ldr	r3, [r5, #32]
 8005846:	6203      	str	r3, [r0, #32]
 8005848:	bd70      	pop	{r4, r5, r6, pc}
 800584a:	bd70      	pop	{r4, r5, r6, pc}

0800584c <WM__Client2Screen>:
 800584c:	4603      	mov	r3, r0
 800584e:	4608      	mov	r0, r1
 8005850:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8005854:	f9b3 1000 	ldrsh.w	r1, [r3]
 8005858:	f005 bb21 	b.w	800ae9e <GUI_MoveRect>

0800585c <_SetClipRectUserIntersect>:
 800585c:	4b11      	ldr	r3, [pc, #68]	; (80058a4 <_SetClipRectUserIntersect+0x48>)
 800585e:	b530      	push	{r4, r5, lr}
 8005860:	681c      	ldr	r4, [r3, #0]
 8005862:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8005864:	b085      	sub	sp, #20
 8005866:	4605      	mov	r5, r0
 8005868:	b1ba      	cbz	r2, 800589a <_SetClipRectUserIntersect+0x3e>
 800586a:	6810      	ldr	r0, [r2, #0]
 800586c:	6851      	ldr	r1, [r2, #4]
 800586e:	ab02      	add	r3, sp, #8
 8005870:	c303      	stmia	r3!, {r0, r1}
 8005872:	4b0d      	ldr	r3, [pc, #52]	; (80058a8 <_SetClipRectUserIntersect+0x4c>)
 8005874:	6818      	ldr	r0, [r3, #0]
 8005876:	b900      	cbnz	r0, 800587a <_SetClipRectUserIntersect+0x1e>
 8005878:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800587a:	f005 fff9 	bl	800b870 <GUI_ALLOC_LockH>
 800587e:	ac04      	add	r4, sp, #16
 8005880:	a902      	add	r1, sp, #8
 8005882:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8005886:	f7ff ffe1 	bl	800584c <WM__Client2Screen>
 800588a:	4620      	mov	r0, r4
 800588c:	f005 fffe 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005890:	a802      	add	r0, sp, #8
 8005892:	4629      	mov	r1, r5
 8005894:	f003 fc99 	bl	80091ca <GUI__IntersectRect>
 8005898:	a802      	add	r0, sp, #8
 800589a:	f002 ffb1 	bl	8008800 <LCD_SetClipRectEx>
 800589e:	b005      	add	sp, #20
 80058a0:	bd30      	pop	{r4, r5, pc}
 80058a2:	bf00      	nop
 80058a4:	200000b8 	.word	0x200000b8
 80058a8:	20002c78 	.word	0x20002c78

080058ac <WM__ActivateClipRect>:
 80058ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80058ae:	4b0e      	ldr	r3, [pc, #56]	; (80058e8 <WM__ActivateClipRect+0x3c>)
 80058b0:	681b      	ldr	r3, [r3, #0]
 80058b2:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 80058b6:	b10a      	cbz	r2, 80058bc <WM__ActivateClipRect+0x10>
 80058b8:	480c      	ldr	r0, [pc, #48]	; (80058ec <WM__ActivateClipRect+0x40>)
 80058ba:	e011      	b.n	80058e0 <WM__ActivateClipRect+0x34>
 80058bc:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80058be:	f005 ffd7 	bl	800b870 <GUI_ALLOC_LockH>
 80058c2:	9001      	str	r0, [sp, #4]
 80058c4:	c803      	ldmia	r0, {r0, r1}
 80058c6:	ac02      	add	r4, sp, #8
 80058c8:	e884 0003 	stmia.w	r4, {r0, r1}
 80058cc:	a801      	add	r0, sp, #4
 80058ce:	f005 ffdd 	bl	800b88c <GUI_ALLOC_UnlockH>
 80058d2:	4b07      	ldr	r3, [pc, #28]	; (80058f0 <WM__ActivateClipRect+0x44>)
 80058d4:	6819      	ldr	r1, [r3, #0]
 80058d6:	b111      	cbz	r1, 80058de <WM__ActivateClipRect+0x32>
 80058d8:	4620      	mov	r0, r4
 80058da:	f7ff ff19 	bl	8005710 <WM__ClipAtParentBorders>
 80058de:	4620      	mov	r0, r4
 80058e0:	f7ff ffbc 	bl	800585c <_SetClipRectUserIntersect>
 80058e4:	b004      	add	sp, #16
 80058e6:	bd10      	pop	{r4, pc}
 80058e8:	200000b8 	.word	0x200000b8
 80058ec:	20002ad8 	.word	0x20002ad8
 80058f0:	20002c78 	.word	0x20002c78

080058f4 <WM__IsWindow>:
 80058f4:	4b06      	ldr	r3, [pc, #24]	; (8005910 <WM__IsWindow+0x1c>)
 80058f6:	b510      	push	{r4, lr}
 80058f8:	4604      	mov	r4, r0
 80058fa:	6818      	ldr	r0, [r3, #0]
 80058fc:	b128      	cbz	r0, 800590a <WM__IsWindow+0x16>
 80058fe:	42a0      	cmp	r0, r4
 8005900:	d004      	beq.n	800590c <WM__IsWindow+0x18>
 8005902:	f005 ffab 	bl	800b85c <GUI_ALLOC_h2p>
 8005906:	6940      	ldr	r0, [r0, #20]
 8005908:	e7f8      	b.n	80058fc <WM__IsWindow+0x8>
 800590a:	bd10      	pop	{r4, pc}
 800590c:	2001      	movs	r0, #1
 800590e:	bd10      	pop	{r4, pc}
 8005910:	20002c98 	.word	0x20002c98

08005914 <WM__InvalidateDrawAndDescs>:
 8005914:	b513      	push	{r0, r1, r4, lr}
 8005916:	4604      	mov	r4, r0
 8005918:	b300      	cbz	r0, 800595c <WM__InvalidateDrawAndDescs+0x48>
 800591a:	f005 ffa9 	bl	800b870 <GUI_ALLOC_LockH>
 800591e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005920:	9001      	str	r0, [sp, #4]
 8005922:	0793      	lsls	r3, r2, #30
 8005924:	d517      	bpl.n	8005956 <WM__InvalidateDrawAndDescs+0x42>
 8005926:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005928:	b140      	cbz	r0, 800593c <WM__InvalidateDrawAndDescs+0x28>
 800592a:	4b0d      	ldr	r3, [pc, #52]	; (8005960 <WM__InvalidateDrawAndDescs+0x4c>)
 800592c:	681b      	ldr	r3, [r3, #0]
 800592e:	42a3      	cmp	r3, r4
 8005930:	d004      	beq.n	800593c <WM__InvalidateDrawAndDescs+0x28>
 8005932:	f001 fe07 	bl	8007544 <GUI_MEMDEV_Delete>
 8005936:	9b01      	ldr	r3, [sp, #4]
 8005938:	2200      	movs	r2, #0
 800593a:	625a      	str	r2, [r3, #36]	; 0x24
 800593c:	4620      	mov	r0, r4
 800593e:	f7ff f8ec 	bl	8004b1a <WM_GetFirstChild>
 8005942:	4604      	mov	r4, r0
 8005944:	b13c      	cbz	r4, 8005956 <WM__InvalidateDrawAndDescs+0x42>
 8005946:	4620      	mov	r0, r4
 8005948:	f7ff ffe4 	bl	8005914 <WM__InvalidateDrawAndDescs>
 800594c:	4620      	mov	r0, r4
 800594e:	f005 ff85 	bl	800b85c <GUI_ALLOC_h2p>
 8005952:	6a04      	ldr	r4, [r0, #32]
 8005954:	e7f6      	b.n	8005944 <WM__InvalidateDrawAndDescs+0x30>
 8005956:	a801      	add	r0, sp, #4
 8005958:	f005 ff98 	bl	800b88c <GUI_ALLOC_UnlockH>
 800595c:	b002      	add	sp, #8
 800595e:	bd10      	pop	{r4, pc}
 8005960:	20002cc8 	.word	0x20002cc8

08005964 <WM__RectIsNZ>:
 8005964:	f9b0 2000 	ldrsh.w	r2, [r0]
 8005968:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800596c:	429a      	cmp	r2, r3
 800596e:	dc08      	bgt.n	8005982 <WM__RectIsNZ+0x1e>
 8005970:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8005974:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8005978:	429a      	cmp	r2, r3
 800597a:	bfcc      	ite	gt
 800597c:	2000      	movgt	r0, #0
 800597e:	2001      	movle	r0, #1
 8005980:	4770      	bx	lr
 8005982:	2000      	movs	r0, #0
 8005984:	4770      	bx	lr

08005986 <WM_SendMessage>:
 8005986:	b108      	cbz	r0, 800598c <WM_SendMessage+0x6>
 8005988:	f7fe bde2 	b.w	8004550 <WM__SendMessage>
 800598c:	4770      	bx	lr

0800598e <WM__SendMsgNoData>:
 800598e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005990:	ab04      	add	r3, sp, #16
 8005992:	9001      	str	r0, [sp, #4]
 8005994:	f843 1d10 	str.w	r1, [r3, #-16]!
 8005998:	4669      	mov	r1, sp
 800599a:	f7fe fdd9 	bl	8004550 <WM__SendMessage>
 800599e:	b005      	add	sp, #20
 80059a0:	f85d fb04 	ldr.w	pc, [sp], #4

080059a4 <WM__GetClientRectWin>:
 80059a4:	2300      	movs	r3, #0
 80059a6:	800b      	strh	r3, [r1, #0]
 80059a8:	8882      	ldrh	r2, [r0, #4]
 80059aa:	804b      	strh	r3, [r1, #2]
 80059ac:	8803      	ldrh	r3, [r0, #0]
 80059ae:	1ad3      	subs	r3, r2, r3
 80059b0:	808b      	strh	r3, [r1, #4]
 80059b2:	88c2      	ldrh	r2, [r0, #6]
 80059b4:	8843      	ldrh	r3, [r0, #2]
 80059b6:	1ad3      	subs	r3, r2, r3
 80059b8:	80cb      	strh	r3, [r1, #6]
 80059ba:	4770      	bx	lr

080059bc <WM__GetTopLevelLayer>:
 80059bc:	b510      	push	{r4, lr}
 80059be:	4604      	mov	r4, r0
 80059c0:	f005 ff4c 	bl	800b85c <GUI_ALLOC_h2p>
 80059c4:	6980      	ldr	r0, [r0, #24]
 80059c6:	2800      	cmp	r0, #0
 80059c8:	d1f9      	bne.n	80059be <WM__GetTopLevelLayer+0x2>
 80059ca:	4b05      	ldr	r3, [pc, #20]	; (80059e0 <WM__GetTopLevelLayer+0x24>)
 80059cc:	681a      	ldr	r2, [r3, #0]
 80059ce:	4294      	cmp	r4, r2
 80059d0:	d005      	beq.n	80059de <WM__GetTopLevelLayer+0x22>
 80059d2:	6858      	ldr	r0, [r3, #4]
 80059d4:	4284      	cmp	r4, r0
 80059d6:	bf14      	ite	ne
 80059d8:	f04f 30ff 	movne.w	r0, #4294967295
 80059dc:	2001      	moveq	r0, #1
 80059de:	bd10      	pop	{r4, pc}
 80059e0:	20002c7c 	.word	0x20002c7c

080059e4 <_Invalidate1Abs>:
 80059e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80059e6:	b085      	sub	sp, #20
 80059e8:	4606      	mov	r6, r0
 80059ea:	460d      	mov	r5, r1
 80059ec:	4617      	mov	r7, r2
 80059ee:	f005 ff35 	bl	800b85c <GUI_ALLOC_h2p>
 80059f2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80059f4:	9001      	str	r0, [sp, #4]
 80059f6:	07a3      	lsls	r3, r4, #30
 80059f8:	d53e      	bpl.n	8005a78 <_Invalidate1Abs+0x94>
 80059fa:	4628      	mov	r0, r5
 80059fc:	f7ff ffb2 	bl	8005964 <WM__RectIsNZ>
 8005a00:	2800      	cmp	r0, #0
 8005a02:	d039      	beq.n	8005a78 <_Invalidate1Abs+0x94>
 8005a04:	f640 0301 	movw	r3, #2049	; 0x801
 8005a08:	4023      	ands	r3, r4
 8005a0a:	2b01      	cmp	r3, #1
 8005a0c:	d034      	beq.n	8005a78 <_Invalidate1Abs+0x94>
 8005a0e:	4630      	mov	r0, r6
 8005a10:	f005 ff2e 	bl	800b870 <GUI_ALLOC_LockH>
 8005a14:	ac02      	add	r4, sp, #8
 8005a16:	4602      	mov	r2, r0
 8005a18:	9001      	str	r0, [sp, #4]
 8005a1a:	4629      	mov	r1, r5
 8005a1c:	4620      	mov	r0, r4
 8005a1e:	f003 fbf2 	bl	8009206 <GUI__IntersectRects>
 8005a22:	4620      	mov	r0, r4
 8005a24:	f7ff ff9e 	bl	8005964 <WM__RectIsNZ>
 8005a28:	b318      	cbz	r0, 8005a72 <_Invalidate1Abs+0x8e>
 8005a2a:	9b01      	ldr	r3, [sp, #4]
 8005a2c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005a2e:	f244 0120 	movw	r1, #16416	; 0x4020
 8005a32:	4011      	ands	r1, r2
 8005a34:	f103 0508 	add.w	r5, r3, #8
 8005a38:	b129      	cbz	r1, 8005a46 <_Invalidate1Abs+0x62>
 8005a3a:	4628      	mov	r0, r5
 8005a3c:	4629      	mov	r1, r5
 8005a3e:	4622      	mov	r2, r4
 8005a40:	f005 fa02 	bl	800ae48 <GUI_MergeRect>
 8005a44:	e015      	b.n	8005a72 <_Invalidate1Abs+0x8e>
 8005a46:	e894 0003 	ldmia.w	r4, {r0, r1}
 8005a4a:	4317      	orrs	r7, r2
 8005a4c:	e885 0003 	stmia.w	r5, {r0, r1}
 8005a50:	629f      	str	r7, [r3, #40]	; 0x28
 8005a52:	4b0a      	ldr	r3, [pc, #40]	; (8005a7c <_Invalidate1Abs+0x98>)
 8005a54:	881a      	ldrh	r2, [r3, #0]
 8005a56:	4630      	mov	r0, r6
 8005a58:	3201      	adds	r2, #1
 8005a5a:	801a      	strh	r2, [r3, #0]
 8005a5c:	f7ff ffae 	bl	80059bc <WM__GetTopLevelLayer>
 8005a60:	4b07      	ldr	r3, [pc, #28]	; (8005a80 <_Invalidate1Abs+0x9c>)
 8005a62:	2201      	movs	r2, #1
 8005a64:	fa02 f000 	lsl.w	r0, r2, r0
 8005a68:	681a      	ldr	r2, [r3, #0]
 8005a6a:	4302      	orrs	r2, r0
 8005a6c:	601a      	str	r2, [r3, #0]
 8005a6e:	f003 fee3 	bl	8009838 <GUI_SignalEvent>
 8005a72:	a801      	add	r0, sp, #4
 8005a74:	f005 ff0a 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005a78:	b005      	add	sp, #20
 8005a7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a7c:	20002c94 	.word	0x20002c94
 8005a80:	20002ca4 	.word	0x20002ca4

08005a84 <WM__Invalidate1Abs>:
 8005a84:	2220      	movs	r2, #32
 8005a86:	f7ff bfad 	b.w	80059e4 <_Invalidate1Abs>

08005a8a <WM_InvalidateWindowAndDescsEx>:
 8005a8a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005a8c:	460f      	mov	r7, r1
 8005a8e:	b085      	sub	sp, #20
 8005a90:	4615      	mov	r5, r2
 8005a92:	4606      	mov	r6, r0
 8005a94:	b348      	cbz	r0, 8005aea <WM_InvalidateWindowAndDescsEx+0x60>
 8005a96:	f005 feeb 	bl	800b870 <GUI_ALLOC_LockH>
 8005a9a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005a9c:	ac04      	add	r4, sp, #16
 8005a9e:	079b      	lsls	r3, r3, #30
 8005aa0:	4602      	mov	r2, r0
 8005aa2:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8005aa6:	d403      	bmi.n	8005ab0 <WM_InvalidateWindowAndDescsEx+0x26>
 8005aa8:	4620      	mov	r0, r4
 8005aaa:	f005 feef 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005aae:	e01c      	b.n	8005aea <WM_InvalidateWindowAndDescsEx+0x60>
 8005ab0:	a802      	add	r0, sp, #8
 8005ab2:	4639      	mov	r1, r7
 8005ab4:	f003 fba7 	bl	8009206 <GUI__IntersectRects>
 8005ab8:	2800      	cmp	r0, #0
 8005aba:	d0f5      	beq.n	8005aa8 <WM_InvalidateWindowAndDescsEx+0x1e>
 8005abc:	4620      	mov	r0, r4
 8005abe:	f005 fee5 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005ac2:	4630      	mov	r0, r6
 8005ac4:	a902      	add	r1, sp, #8
 8005ac6:	462a      	mov	r2, r5
 8005ac8:	f7ff ff8c 	bl	80059e4 <_Invalidate1Abs>
 8005acc:	4630      	mov	r0, r6
 8005ace:	f7ff f824 	bl	8004b1a <WM_GetFirstChild>
 8005ad2:	4604      	mov	r4, r0
 8005ad4:	b14c      	cbz	r4, 8005aea <WM_InvalidateWindowAndDescsEx+0x60>
 8005ad6:	4620      	mov	r0, r4
 8005ad8:	a902      	add	r1, sp, #8
 8005ada:	462a      	mov	r2, r5
 8005adc:	f7ff ffd5 	bl	8005a8a <WM_InvalidateWindowAndDescsEx>
 8005ae0:	4620      	mov	r0, r4
 8005ae2:	f005 febb 	bl	800b85c <GUI_ALLOC_h2p>
 8005ae6:	6a04      	ldr	r4, [r0, #32]
 8005ae8:	e7f4      	b.n	8005ad4 <WM_InvalidateWindowAndDescsEx+0x4a>
 8005aea:	b005      	add	sp, #20
 8005aec:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005aee <WM__InvalidateRect>:
 8005aee:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005af2:	4680      	mov	r8, r0
 8005af4:	4617      	mov	r7, r2
 8005af6:	461d      	mov	r5, r3
 8005af8:	460c      	mov	r4, r1
 8005afa:	2900      	cmp	r1, #0
 8005afc:	d030      	beq.n	8005b60 <WM__InvalidateRect+0x72>
 8005afe:	4608      	mov	r0, r1
 8005b00:	f005 feb6 	bl	800b870 <GUI_ALLOC_LockH>
 8005b04:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8005b06:	9001      	str	r0, [sp, #4]
 8005b08:	07b3      	lsls	r3, r6, #30
 8005b0a:	4602      	mov	r2, r0
 8005b0c:	d525      	bpl.n	8005b5a <WM__InvalidateRect+0x6c>
 8005b0e:	a802      	add	r0, sp, #8
 8005b10:	4641      	mov	r1, r8
 8005b12:	f003 fb78 	bl	8009206 <GUI__IntersectRects>
 8005b16:	b300      	cbz	r0, 8005b5a <WM__InvalidateRect+0x6c>
 8005b18:	f640 0301 	movw	r3, #2049	; 0x801
 8005b1c:	4033      	ands	r3, r6
 8005b1e:	2b01      	cmp	r3, #1
 8005b20:	d107      	bne.n	8005b32 <WM__InvalidateRect+0x44>
 8005b22:	9b01      	ldr	r3, [sp, #4]
 8005b24:	a802      	add	r0, sp, #8
 8005b26:	6999      	ldr	r1, [r3, #24]
 8005b28:	6a1a      	ldr	r2, [r3, #32]
 8005b2a:	462b      	mov	r3, r5
 8005b2c:	f7ff ffdf 	bl	8005aee <WM__InvalidateRect>
 8005b30:	e004      	b.n	8005b3c <WM__InvalidateRect+0x4e>
 8005b32:	4620      	mov	r0, r4
 8005b34:	a902      	add	r1, sp, #8
 8005b36:	462a      	mov	r2, r5
 8005b38:	f7ff ff54 	bl	80059e4 <_Invalidate1Abs>
 8005b3c:	9b01      	ldr	r3, [sp, #4]
 8005b3e:	69dc      	ldr	r4, [r3, #28]
 8005b40:	b15c      	cbz	r4, 8005b5a <WM__InvalidateRect+0x6c>
 8005b42:	42bc      	cmp	r4, r7
 8005b44:	d009      	beq.n	8005b5a <WM__InvalidateRect+0x6c>
 8005b46:	4620      	mov	r0, r4
 8005b48:	a902      	add	r1, sp, #8
 8005b4a:	462a      	mov	r2, r5
 8005b4c:	f7ff ff9d 	bl	8005a8a <WM_InvalidateWindowAndDescsEx>
 8005b50:	4620      	mov	r0, r4
 8005b52:	f005 fe83 	bl	800b85c <GUI_ALLOC_h2p>
 8005b56:	6a04      	ldr	r4, [r0, #32]
 8005b58:	e7f2      	b.n	8005b40 <WM__InvalidateRect+0x52>
 8005b5a:	a801      	add	r0, sp, #4
 8005b5c:	f005 fe96 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005b60:	b004      	add	sp, #16
 8005b62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005b66 <WM__InvalidateParent>:
 8005b66:	b570      	push	{r4, r5, r6, lr}
 8005b68:	4605      	mov	r5, r0
 8005b6a:	4608      	mov	r0, r1
 8005b6c:	460c      	mov	r4, r1
 8005b6e:	4616      	mov	r6, r2
 8005b70:	f005 fe74 	bl	800b85c <GUI_ALLOC_h2p>
 8005b74:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005b76:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8005b7a:	4628      	mov	r0, r5
 8005b7c:	4621      	mov	r1, r4
 8005b7e:	4632      	mov	r2, r6
 8005b80:	bf0c      	ite	eq
 8005b82:	2320      	moveq	r3, #32
 8005b84:	f44f 4380 	movne.w	r3, #16384	; 0x4000
 8005b88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005b8c:	f7ff bfaf 	b.w	8005aee <WM__InvalidateRect>

08005b90 <WM__InvalidateRectEx>:
 8005b90:	2320      	movs	r3, #32
 8005b92:	f7ff bfac 	b.w	8005aee <WM__InvalidateRect>

08005b96 <WM__DetachWindow>:
 8005b96:	b513      	push	{r0, r1, r4, lr}
 8005b98:	4604      	mov	r4, r0
 8005b9a:	f005 fe69 	bl	800b870 <GUI_ALLOC_LockH>
 8005b9e:	6981      	ldr	r1, [r0, #24]
 8005ba0:	9001      	str	r0, [sp, #4]
 8005ba2:	b141      	cbz	r1, 8005bb6 <WM__DetachWindow+0x20>
 8005ba4:	6a02      	ldr	r2, [r0, #32]
 8005ba6:	f7ff fff3 	bl	8005b90 <WM__InvalidateRectEx>
 8005baa:	4620      	mov	r0, r4
 8005bac:	f7ff fe30 	bl	8005810 <WM__RemoveWindowFromList>
 8005bb0:	9b01      	ldr	r3, [sp, #4]
 8005bb2:	2200      	movs	r2, #0
 8005bb4:	619a      	str	r2, [r3, #24]
 8005bb6:	a801      	add	r0, sp, #4
 8005bb8:	f005 fe68 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005bbc:	b002      	add	sp, #8
 8005bbe:	bd10      	pop	{r4, pc}

08005bc0 <WM_InvalidateRect>:
 8005bc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005bc2:	460f      	mov	r7, r1
 8005bc4:	b087      	sub	sp, #28
 8005bc6:	4605      	mov	r5, r0
 8005bc8:	2800      	cmp	r0, #0
 8005bca:	d033      	beq.n	8005c34 <WM_InvalidateRect+0x74>
 8005bcc:	f005 fe50 	bl	800b870 <GUI_ALLOC_LockH>
 8005bd0:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8005bd2:	9001      	str	r0, [sp, #4]
 8005bd4:	07b2      	lsls	r2, r6, #30
 8005bd6:	d52a      	bpl.n	8005c2e <WM_InvalidateRect+0x6e>
 8005bd8:	c803      	ldmia	r0, {r0, r1}
 8005bda:	ac04      	add	r4, sp, #16
 8005bdc:	03f3      	lsls	r3, r6, #15
 8005bde:	e884 0003 	stmia.w	r4, {r0, r1}
 8005be2:	d502      	bpl.n	8005bea <WM_InvalidateRect+0x2a>
 8005be4:	4628      	mov	r0, r5
 8005be6:	f7ff fe95 	bl	8005914 <WM__InvalidateDrawAndDescs>
 8005bea:	b15f      	cbz	r7, 8005c04 <WM_InvalidateRect+0x44>
 8005bec:	6838      	ldr	r0, [r7, #0]
 8005bee:	6879      	ldr	r1, [r7, #4]
 8005bf0:	ab02      	add	r3, sp, #8
 8005bf2:	c303      	stmia	r3!, {r0, r1}
 8005bf4:	9801      	ldr	r0, [sp, #4]
 8005bf6:	a902      	add	r1, sp, #8
 8005bf8:	f7ff fe28 	bl	800584c <WM__Client2Screen>
 8005bfc:	4620      	mov	r0, r4
 8005bfe:	a902      	add	r1, sp, #8
 8005c00:	f003 fae3 	bl	80091ca <GUI__IntersectRect>
 8005c04:	4620      	mov	r0, r4
 8005c06:	4629      	mov	r1, r5
 8005c08:	f7ff fd82 	bl	8005710 <WM__ClipAtParentBorders>
 8005c0c:	b178      	cbz	r0, 8005c2e <WM_InvalidateRect+0x6e>
 8005c0e:	f640 0301 	movw	r3, #2049	; 0x801
 8005c12:	4033      	ands	r3, r6
 8005c14:	2b01      	cmp	r3, #1
 8005c16:	d106      	bne.n	8005c26 <WM_InvalidateRect+0x66>
 8005c18:	9b01      	ldr	r3, [sp, #4]
 8005c1a:	4620      	mov	r0, r4
 8005c1c:	6999      	ldr	r1, [r3, #24]
 8005c1e:	6a1a      	ldr	r2, [r3, #32]
 8005c20:	f7ff ffb6 	bl	8005b90 <WM__InvalidateRectEx>
 8005c24:	e003      	b.n	8005c2e <WM_InvalidateRect+0x6e>
 8005c26:	4628      	mov	r0, r5
 8005c28:	4621      	mov	r1, r4
 8005c2a:	f7ff ff2b 	bl	8005a84 <WM__Invalidate1Abs>
 8005c2e:	a801      	add	r0, sp, #4
 8005c30:	f005 fe2c 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005c34:	b007      	add	sp, #28
 8005c36:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005c38 <WM_InvalidateWindow>:
 8005c38:	2100      	movs	r1, #0
 8005c3a:	f7ff bfc1 	b.w	8005bc0 <WM_InvalidateRect>

08005c3e <WM__SelectTopLevelLayer>:
 8005c3e:	b508      	push	{r3, lr}
 8005c40:	f7ff febc 	bl	80059bc <WM__GetTopLevelLayer>
 8005c44:	2800      	cmp	r0, #0
 8005c46:	db03      	blt.n	8005c50 <WM__SelectTopLevelLayer+0x12>
 8005c48:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005c4c:	f003 bffe 	b.w	8009c4c <GUI_SelectLayer>
 8005c50:	bd08      	pop	{r3, pc}
	...

08005c54 <WM_SelectWindow>:
 8005c54:	4a0d      	ldr	r2, [pc, #52]	; (8005c8c <WM_SelectWindow+0x38>)
 8005c56:	6813      	ldr	r3, [r2, #0]
 8005c58:	b570      	push	{r4, r5, r6, lr}
 8005c5a:	6c9d      	ldr	r5, [r3, #72]	; 0x48
 8005c5c:	4604      	mov	r4, r0
 8005c5e:	4616      	mov	r6, r2
 8005c60:	b908      	cbnz	r0, 8005c66 <WM_SelectWindow+0x12>
 8005c62:	4a0b      	ldr	r2, [pc, #44]	; (8005c90 <WM_SelectWindow+0x3c>)
 8005c64:	6814      	ldr	r4, [r2, #0]
 8005c66:	649c      	str	r4, [r3, #72]	; 0x48
 8005c68:	4620      	mov	r0, r4
 8005c6a:	f7ff ffe8 	bl	8005c3e <WM__SelectTopLevelLayer>
 8005c6e:	f003 f9bf 	bl	8008ff0 <LCD_SetClipRectMax>
 8005c72:	4620      	mov	r0, r4
 8005c74:	f005 fdf2 	bl	800b85c <GUI_ALLOC_h2p>
 8005c78:	6833      	ldr	r3, [r6, #0]
 8005c7a:	f9b0 1000 	ldrsh.w	r1, [r0]
 8005c7e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8005c82:	64d9      	str	r1, [r3, #76]	; 0x4c
 8005c84:	651a      	str	r2, [r3, #80]	; 0x50
 8005c86:	4628      	mov	r0, r5
 8005c88:	bd70      	pop	{r4, r5, r6, pc}
 8005c8a:	bf00      	nop
 8005c8c:	200000b8 	.word	0x200000b8
 8005c90:	20002c98 	.word	0x20002c98

08005c94 <WM_CreateWindowAsChild>:
 8005c94:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005c98:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005c9a:	469b      	mov	fp, r3
 8005c9c:	4b4b      	ldr	r3, [pc, #300]	; (8005dcc <WM_CreateWindowAsChild+0x138>)
 8005c9e:	4607      	mov	r7, r0
 8005ca0:	4688      	mov	r8, r1
 8005ca2:	4692      	mov	sl, r2
 8005ca4:	681e      	ldr	r6, [r3, #0]
 8005ca6:	bb65      	cbnz	r5, 8005d02 <WM_CreateWindowAsChild+0x6e>
 8005ca8:	4b49      	ldr	r3, [pc, #292]	; (8005dd0 <WM_CreateWindowAsChild+0x13c>)
 8005caa:	881b      	ldrh	r3, [r3, #0]
 8005cac:	b363      	cbz	r3, 8005d08 <WM_CreateWindowAsChild+0x74>
 8005cae:	4b49      	ldr	r3, [pc, #292]	; (8005dd4 <WM_CreateWindowAsChild+0x140>)
 8005cb0:	681b      	ldr	r3, [r3, #0]
 8005cb2:	7c5a      	ldrb	r2, [r3, #17]
 8005cb4:	4b48      	ldr	r3, [pc, #288]	; (8005dd8 <WM_CreateWindowAsChild+0x144>)
 8005cb6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005cba:	1c5a      	adds	r2, r3, #1
 8005cbc:	d024      	beq.n	8005d08 <WM_CreateWindowAsChild+0x74>
 8005cbe:	b31b      	cbz	r3, 8005d08 <WM_CreateWindowAsChild+0x74>
 8005cc0:	461d      	mov	r5, r3
 8005cc2:	4628      	mov	r0, r5
 8005cc4:	f005 fdd4 	bl	800b870 <GUI_ALLOC_LockH>
 8005cc8:	f9b0 2000 	ldrsh.w	r2, [r0]
 8005ccc:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8005cd0:	9001      	str	r0, [sp, #4]
 8005cd2:	4417      	add	r7, r2
 8005cd4:	4498      	add	r8, r3
 8005cd6:	f1ba 0f00 	cmp.w	sl, #0
 8005cda:	d105      	bne.n	8005ce8 <WM_CreateWindowAsChild+0x54>
 8005cdc:	f9b0 a004 	ldrsh.w	sl, [r0, #4]
 8005ce0:	ebc2 0a0a 	rsb	sl, r2, sl
 8005ce4:	f10a 0a01 	add.w	sl, sl, #1
 8005ce8:	f1bb 0f00 	cmp.w	fp, #0
 8005cec:	d105      	bne.n	8005cfa <WM_CreateWindowAsChild+0x66>
 8005cee:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 8005cf2:	ebc3 0b0b 	rsb	fp, r3, fp
 8005cf6:	f10b 0b01 	add.w	fp, fp, #1
 8005cfa:	a801      	add	r0, sp, #4
 8005cfc:	f005 fdc6 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005d00:	e002      	b.n	8005d08 <WM_CreateWindowAsChild+0x74>
 8005d02:	1c6b      	adds	r3, r5, #1
 8005d04:	d1dd      	bne.n	8005cc2 <WM_CreateWindowAsChild+0x2e>
 8005d06:	2500      	movs	r5, #0
 8005d08:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8005d0a:	302c      	adds	r0, #44	; 0x2c
 8005d0c:	f005 ffaa 	bl	800bc64 <GUI_ALLOC_AllocZero>
 8005d10:	4604      	mov	r4, r0
 8005d12:	2800      	cmp	r0, #0
 8005d14:	d056      	beq.n	8005dc4 <WM_CreateWindowAsChild+0x130>
 8005d16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005d18:	431e      	orrs	r6, r3
 8005d1a:	4b2d      	ldr	r3, [pc, #180]	; (8005dd0 <WM_CreateWindowAsChild+0x13c>)
 8005d1c:	881a      	ldrh	r2, [r3, #0]
 8005d1e:	3201      	adds	r2, #1
 8005d20:	801a      	strh	r2, [r3, #0]
 8005d22:	f005 fda5 	bl	800b870 <GUI_ALLOC_LockH>
 8005d26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005d28:	6103      	str	r3, [r0, #16]
 8005d2a:	f10d 0908 	add.w	r9, sp, #8
 8005d2e:	4b2b      	ldr	r3, [pc, #172]	; (8005ddc <WM_CreateWindowAsChild+0x148>)
 8005d30:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005d32:	f849 0d08 	str.w	r0, [r9, #-8]!
 8005d36:	4033      	ands	r3, r6
 8005d38:	8007      	strh	r7, [r0, #0]
 8005d3a:	f8a0 8002 	strh.w	r8, [r0, #2]
 8005d3e:	4457      	add	r7, sl
 8005d40:	44d8      	add	r8, fp
 8005d42:	4313      	orrs	r3, r2
 8005d44:	3f01      	subs	r7, #1
 8005d46:	f108 38ff 	add.w	r8, r8, #4294967295
 8005d4a:	6283      	str	r3, [r0, #40]	; 0x28
 8005d4c:	8087      	strh	r7, [r0, #4]
 8005d4e:	f8a0 8006 	strh.w	r8, [r0, #6]
 8005d52:	4668      	mov	r0, sp
 8005d54:	f005 fd9a 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005d58:	4b21      	ldr	r3, [pc, #132]	; (8005de0 <WM_CreateWindowAsChild+0x14c>)
 8005d5a:	6818      	ldr	r0, [r3, #0]
 8005d5c:	b148      	cbz	r0, 8005d72 <WM_CreateWindowAsChild+0xde>
 8005d5e:	f005 fd7d 	bl	800b85c <GUI_ALLOC_h2p>
 8005d62:	4607      	mov	r7, r0
 8005d64:	4620      	mov	r0, r4
 8005d66:	f005 fd79 	bl	800b85c <GUI_ALLOC_h2p>
 8005d6a:	697b      	ldr	r3, [r7, #20]
 8005d6c:	6143      	str	r3, [r0, #20]
 8005d6e:	617c      	str	r4, [r7, #20]
 8005d70:	e000      	b.n	8005d74 <WM_CreateWindowAsChild+0xe0>
 8005d72:	601c      	str	r4, [r3, #0]
 8005d74:	4629      	mov	r1, r5
 8005d76:	4620      	mov	r0, r4
 8005d78:	f7ff fcf8 	bl	800576c <WM__InsertWindowIntoList>
 8005d7c:	06b5      	lsls	r5, r6, #26
 8005d7e:	d502      	bpl.n	8005d86 <WM_CreateWindowAsChild+0xf2>
 8005d80:	4620      	mov	r0, r4
 8005d82:	f7ff ff67 	bl	8005c54 <WM_SelectWindow>
 8005d86:	07f0      	lsls	r0, r6, #31
 8005d88:	d503      	bpl.n	8005d92 <WM_CreateWindowAsChild+0xfe>
 8005d8a:	4b16      	ldr	r3, [pc, #88]	; (8005de4 <WM_CreateWindowAsChild+0x150>)
 8005d8c:	681a      	ldr	r2, [r3, #0]
 8005d8e:	3201      	adds	r2, #1
 8005d90:	601a      	str	r2, [r3, #0]
 8005d92:	0671      	lsls	r1, r6, #25
 8005d94:	d502      	bpl.n	8005d9c <WM_CreateWindowAsChild+0x108>
 8005d96:	4620      	mov	r0, r4
 8005d98:	f7fe ff68 	bl	8004c6c <WM_BringToBottom>
 8005d9c:	07b2      	lsls	r2, r6, #30
 8005d9e:	d50d      	bpl.n	8005dbc <WM_CreateWindowAsChild+0x128>
 8005da0:	4620      	mov	r0, r4
 8005da2:	f005 fd65 	bl	800b870 <GUI_ALLOC_LockH>
 8005da6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005da8:	9000      	str	r0, [sp, #0]
 8005daa:	f043 0302 	orr.w	r3, r3, #2
 8005dae:	6283      	str	r3, [r0, #40]	; 0x28
 8005db0:	4668      	mov	r0, sp
 8005db2:	f005 fd6b 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005db6:	4620      	mov	r0, r4
 8005db8:	f7ff ff3e 	bl	8005c38 <WM_InvalidateWindow>
 8005dbc:	4620      	mov	r0, r4
 8005dbe:	2101      	movs	r1, #1
 8005dc0:	f7ff fde5 	bl	800598e <WM__SendMsgNoData>
 8005dc4:	4620      	mov	r0, r4
 8005dc6:	b003      	add	sp, #12
 8005dc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005dcc:	20002cac 	.word	0x20002cac
 8005dd0:	20002c74 	.word	0x20002c74
 8005dd4:	200000b8 	.word	0x200000b8
 8005dd8:	20002c7c 	.word	0x20002c7c
 8005ddc:	003f3f9f 	.word	0x003f3f9f
 8005de0:	20002c98 	.word	0x20002c98
 8005de4:	20002ccc 	.word	0x20002ccc

08005de8 <WM_DeleteWindow>:
 8005de8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005dea:	4604      	mov	r4, r0
 8005dec:	2800      	cmp	r0, #0
 8005dee:	d06e      	beq.n	8005ece <WM_DeleteWindow+0xe6>
 8005df0:	f7ff fd80 	bl	80058f4 <WM__IsWindow>
 8005df4:	2800      	cmp	r0, #0
 8005df6:	d06a      	beq.n	8005ece <WM_DeleteWindow+0xe6>
 8005df8:	4620      	mov	r0, r4
 8005dfa:	f7ff fddf 	bl	80059bc <WM__GetTopLevelLayer>
 8005dfe:	210b      	movs	r1, #11
 8005e00:	4605      	mov	r5, r0
 8005e02:	4620      	mov	r0, r4
 8005e04:	f7ff fdc3 	bl	800598e <WM__SendMsgNoData>
 8005e08:	4620      	mov	r0, r4
 8005e0a:	f007 f9a3 	bl	800d154 <WM__DeleteAssocTimer>
 8005e0e:	4620      	mov	r0, r4
 8005e10:	f005 fd2e 	bl	800b870 <GUI_ALLOC_LockH>
 8005e14:	9001      	str	r0, [sp, #4]
 8005e16:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005e18:	b108      	cbz	r0, 8005e1e <WM_DeleteWindow+0x36>
 8005e1a:	f001 fb93 	bl	8007544 <GUI_MEMDEV_Delete>
 8005e1e:	4b2d      	ldr	r3, [pc, #180]	; (8005ed4 <WM_DeleteWindow+0xec>)
 8005e20:	4a2d      	ldr	r2, [pc, #180]	; (8005ed8 <WM_DeleteWindow+0xf0>)
 8005e22:	2100      	movs	r1, #0
 8005e24:	6019      	str	r1, [r3, #0]
 8005e26:	4b2d      	ldr	r3, [pc, #180]	; (8005edc <WM_DeleteWindow+0xf4>)
 8005e28:	681b      	ldr	r3, [r3, #0]
 8005e2a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8005e2e:	42a0      	cmp	r0, r4
 8005e30:	bf08      	it	eq
 8005e32:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 8005e36:	4a2a      	ldr	r2, [pc, #168]	; (8005ee0 <WM_DeleteWindow+0xf8>)
 8005e38:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8005e3c:	42a1      	cmp	r1, r4
 8005e3e:	bf04      	itt	eq
 8005e40:	2100      	moveq	r1, #0
 8005e42:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 8005e46:	4b27      	ldr	r3, [pc, #156]	; (8005ee4 <WM_DeleteWindow+0xfc>)
 8005e48:	681b      	ldr	r3, [r3, #0]
 8005e4a:	b12b      	cbz	r3, 8005e58 <WM_DeleteWindow+0x70>
 8005e4c:	685a      	ldr	r2, [r3, #4]
 8005e4e:	42a2      	cmp	r2, r4
 8005e50:	bf04      	itt	eq
 8005e52:	2200      	moveq	r2, #0
 8005e54:	605a      	streq	r2, [r3, #4]
 8005e56:	e7f7      	b.n	8005e48 <WM_DeleteWindow+0x60>
 8005e58:	4620      	mov	r0, r4
 8005e5a:	2107      	movs	r1, #7
 8005e5c:	f7ff f8a3 	bl	8004fa6 <WM_NotifyParent>
 8005e60:	9e01      	ldr	r6, [sp, #4]
 8005e62:	69f0      	ldr	r0, [r6, #28]
 8005e64:	f7ff ffc0 	bl	8005de8 <WM_DeleteWindow>
 8005e68:	69f3      	ldr	r3, [r6, #28]
 8005e6a:	2b00      	cmp	r3, #0
 8005e6c:	d1f9      	bne.n	8005e62 <WM_DeleteWindow+0x7a>
 8005e6e:	4620      	mov	r0, r4
 8005e70:	f7ff fe91 	bl	8005b96 <WM__DetachWindow>
 8005e74:	4b1c      	ldr	r3, [pc, #112]	; (8005ee8 <WM_DeleteWindow+0x100>)
 8005e76:	6818      	ldr	r0, [r3, #0]
 8005e78:	b150      	cbz	r0, 8005e90 <WM_DeleteWindow+0xa8>
 8005e7a:	f005 fcef 	bl	800b85c <GUI_ALLOC_h2p>
 8005e7e:	4606      	mov	r6, r0
 8005e80:	6940      	ldr	r0, [r0, #20]
 8005e82:	42a0      	cmp	r0, r4
 8005e84:	d1f8      	bne.n	8005e78 <WM_DeleteWindow+0x90>
 8005e86:	4620      	mov	r0, r4
 8005e88:	f005 fce8 	bl	800b85c <GUI_ALLOC_h2p>
 8005e8c:	6943      	ldr	r3, [r0, #20]
 8005e8e:	6173      	str	r3, [r6, #20]
 8005e90:	9b01      	ldr	r3, [sp, #4]
 8005e92:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005e94:	07da      	lsls	r2, r3, #31
 8005e96:	d503      	bpl.n	8005ea0 <WM_DeleteWindow+0xb8>
 8005e98:	4a14      	ldr	r2, [pc, #80]	; (8005eec <WM_DeleteWindow+0x104>)
 8005e9a:	6811      	ldr	r1, [r2, #0]
 8005e9c:	3901      	subs	r1, #1
 8005e9e:	6011      	str	r1, [r2, #0]
 8005ea0:	069b      	lsls	r3, r3, #26
 8005ea2:	d503      	bpl.n	8005eac <WM_DeleteWindow+0xc4>
 8005ea4:	4b12      	ldr	r3, [pc, #72]	; (8005ef0 <WM_DeleteWindow+0x108>)
 8005ea6:	881a      	ldrh	r2, [r3, #0]
 8005ea8:	3a01      	subs	r2, #1
 8005eaa:	801a      	strh	r2, [r3, #0]
 8005eac:	a801      	add	r0, sp, #4
 8005eae:	f005 fced 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005eb2:	4b10      	ldr	r3, [pc, #64]	; (8005ef4 <WM_DeleteWindow+0x10c>)
 8005eb4:	881a      	ldrh	r2, [r3, #0]
 8005eb6:	4620      	mov	r0, r4
 8005eb8:	3a01      	subs	r2, #1
 8005eba:	801a      	strh	r2, [r3, #0]
 8005ebc:	f005 fd12 	bl	800b8e4 <GUI_ALLOC_Free>
 8005ec0:	2d00      	cmp	r5, #0
 8005ec2:	db04      	blt.n	8005ece <WM_DeleteWindow+0xe6>
 8005ec4:	4b0c      	ldr	r3, [pc, #48]	; (8005ef8 <WM_DeleteWindow+0x110>)
 8005ec6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005eca:	f7ff fec3 	bl	8005c54 <WM_SelectWindow>
 8005ece:	b002      	add	sp, #8
 8005ed0:	bd70      	pop	{r4, r5, r6, pc}
 8005ed2:	bf00      	nop
 8005ed4:	20002ae8 	.word	0x20002ae8
 8005ed8:	20002c8c 	.word	0x20002c8c
 8005edc:	20002c9c 	.word	0x20002c9c
 8005ee0:	20002cc0 	.word	0x20002cc0
 8005ee4:	20002cb8 	.word	0x20002cb8
 8005ee8:	20002c98 	.word	0x20002c98
 8005eec:	20002ccc 	.word	0x20002ccc
 8005ef0:	20002c94 	.word	0x20002c94
 8005ef4:	20002c74 	.word	0x20002c74
 8005ef8:	20002c7c 	.word	0x20002c7c

08005efc <_Exec1Input>:
 8005efc:	4b1b      	ldr	r3, [pc, #108]	; (8005f6c <_Exec1Input+0x70>)
 8005efe:	681a      	ldr	r2, [r3, #0]
 8005f00:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005f02:	461e      	mov	r6, r3
 8005f04:	b1d2      	cbz	r2, 8005f3c <_Exec1Input+0x40>
 8005f06:	4b1a      	ldr	r3, [pc, #104]	; (8005f70 <_Exec1Input+0x74>)
 8005f08:	681c      	ldr	r4, [r3, #0]
 8005f0a:	b1b4      	cbz	r4, 8005f3a <_Exec1Input+0x3e>
 8005f0c:	4620      	mov	r0, r4
 8005f0e:	f005 fcaf 	bl	800b870 <GUI_ALLOC_LockH>
 8005f12:	4603      	mov	r3, r0
 8005f14:	a802      	add	r0, sp, #8
 8005f16:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005f18:	f840 3d04 	str.w	r3, [r0, #-4]!
 8005f1c:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 8005f20:	695d      	ldr	r5, [r3, #20]
 8005f22:	d006      	beq.n	8005f32 <_Exec1Input+0x36>
 8005f24:	f005 fcb2 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005f28:	4620      	mov	r0, r4
 8005f2a:	f7ff ff5d 	bl	8005de8 <WM_DeleteWindow>
 8005f2e:	462c      	mov	r4, r5
 8005f30:	e7eb      	b.n	8005f0a <_Exec1Input+0xe>
 8005f32:	462c      	mov	r4, r5
 8005f34:	f005 fcaa 	bl	800b88c <GUI_ALLOC_UnlockH>
 8005f38:	e7e7      	b.n	8005f0a <_Exec1Input+0xe>
 8005f3a:	6034      	str	r4, [r6, #0]
 8005f3c:	4b0d      	ldr	r3, [pc, #52]	; (8005f74 <_Exec1Input+0x78>)
 8005f3e:	681b      	ldr	r3, [r3, #0]
 8005f40:	b103      	cbz	r3, 8005f44 <_Exec1Input+0x48>
 8005f42:	4798      	blx	r3
 8005f44:	4b0c      	ldr	r3, [pc, #48]	; (8005f78 <_Exec1Input+0x7c>)
 8005f46:	681b      	ldr	r3, [r3, #0]
 8005f48:	b953      	cbnz	r3, 8005f60 <_Exec1Input+0x64>
 8005f4a:	4b0c      	ldr	r3, [pc, #48]	; (8005f7c <_Exec1Input+0x80>)
 8005f4c:	681b      	ldr	r3, [r3, #0]
 8005f4e:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8005f52:	b148      	cbz	r0, 8005f68 <_Exec1Input+0x6c>
 8005f54:	f003 fe98 	bl	8009c88 <GUI_PollKeyMsg>
 8005f58:	3000      	adds	r0, #0
 8005f5a:	bf18      	it	ne
 8005f5c:	2001      	movne	r0, #1
 8005f5e:	e003      	b.n	8005f68 <_Exec1Input+0x6c>
 8005f60:	4798      	blx	r3
 8005f62:	2800      	cmp	r0, #0
 8005f64:	d0f1      	beq.n	8005f4a <_Exec1Input+0x4e>
 8005f66:	2001      	movs	r0, #1
 8005f68:	b002      	add	sp, #8
 8005f6a:	bd70      	pop	{r4, r5, r6, pc}
 8005f6c:	20002acc 	.word	0x20002acc
 8005f70:	20002c98 	.word	0x20002c98
 8005f74:	20002c84 	.word	0x20002c84
 8005f78:	20002d30 	.word	0x20002d30
 8005f7c:	200000b8 	.word	0x200000b8

08005f80 <WM_GetActiveWindow>:
 8005f80:	4b01      	ldr	r3, [pc, #4]	; (8005f88 <WM_GetActiveWindow+0x8>)
 8005f82:	681b      	ldr	r3, [r3, #0]
 8005f84:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005f86:	4770      	bx	lr
 8005f88:	200000b8 	.word	0x200000b8

08005f8c <WM__GetNextIVR>:
 8005f8c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005f90:	4f5d      	ldr	r7, [pc, #372]	; (8006108 <WM__GetNextIVR+0x17c>)
 8005f92:	683b      	ldr	r3, [r7, #0]
 8005f94:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8005f98:	2800      	cmp	r0, #0
 8005f9a:	f000 80b2 	beq.w	8006102 <WM__GetNextIVR+0x176>
 8005f9e:	4b5b      	ldr	r3, [pc, #364]	; (800610c <WM__GetNextIVR+0x180>)
 8005fa0:	695a      	ldr	r2, [r3, #20]
 8005fa2:	2a01      	cmp	r2, #1
 8005fa4:	461c      	mov	r4, r3
 8005fa6:	dd03      	ble.n	8005fb0 <WM__GetNextIVR+0x24>
 8005fa8:	3a01      	subs	r2, #1
 8005faa:	615a      	str	r2, [r3, #20]
 8005fac:	2000      	movs	r0, #0
 8005fae:	e0a8      	b.n	8006102 <WM__GetNextIVR+0x176>
 8005fb0:	f104 0608 	add.w	r6, r4, #8
 8005fb4:	691b      	ldr	r3, [r3, #16]
 8005fb6:	e896 0003 	ldmia.w	r6, {r0, r1}
 8005fba:	3301      	adds	r3, #1
 8005fbc:	ad02      	add	r5, sp, #8
 8005fbe:	6123      	str	r3, [r4, #16]
 8005fc0:	e885 0003 	stmia.w	r5, {r0, r1}
 8005fc4:	b923      	cbnz	r3, 8005fd0 <WM__GetNextIVR+0x44>
 8005fc6:	8823      	ldrh	r3, [r4, #0]
 8005fc8:	f8ad 3008 	strh.w	r3, [sp, #8]
 8005fcc:	8863      	ldrh	r3, [r4, #2]
 8005fce:	e011      	b.n	8005ff4 <WM__GetNextIVR+0x68>
 8005fd0:	89a3      	ldrh	r3, [r4, #12]
 8005fd2:	8962      	ldrh	r2, [r4, #10]
 8005fd4:	f8ad 200a 	strh.w	r2, [sp, #10]
 8005fd8:	3301      	adds	r3, #1
 8005fda:	b29b      	uxth	r3, r3
 8005fdc:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8005fe0:	f8ad 3008 	strh.w	r3, [sp, #8]
 8005fe4:	b21b      	sxth	r3, r3
 8005fe6:	429a      	cmp	r2, r3
 8005fe8:	da06      	bge.n	8005ff8 <WM__GetNextIVR+0x6c>
 8005fea:	8823      	ldrh	r3, [r4, #0]
 8005fec:	f8ad 3008 	strh.w	r3, [sp, #8]
 8005ff0:	89e3      	ldrh	r3, [r4, #14]
 8005ff2:	3301      	adds	r3, #1
 8005ff4:	f8ad 300a 	strh.w	r3, [sp, #10]
 8005ff8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8005ffc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8006000:	f8df 8108 	ldr.w	r8, [pc, #264]	; 800610c <WM__GetNextIVR+0x180>
 8006004:	429a      	cmp	r2, r3
 8006006:	dd04      	ble.n	8006012 <WM__GetNextIVR+0x86>
 8006008:	6963      	ldr	r3, [r4, #20]
 800600a:	3b01      	subs	r3, #1
 800600c:	2000      	movs	r0, #0
 800600e:	6163      	str	r3, [r4, #20]
 8006010:	e077      	b.n	8006102 <WM__GetNextIVR+0x176>
 8006012:	683b      	ldr	r3, [r7, #0]
 8006014:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8006016:	f005 fc2b 	bl	800b870 <GUI_ALLOC_LockH>
 800601a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800601e:	f9b8 3000 	ldrsh.w	r3, [r8]
 8006022:	9001      	str	r0, [sp, #4]
 8006024:	429a      	cmp	r2, r3
 8006026:	d11c      	bne.n	8006062 <WM__GetNextIVR+0xd6>
 8006028:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800602c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8006030:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8006034:	f8ad 300c 	strh.w	r3, [sp, #12]
 8006038:	4b33      	ldr	r3, [pc, #204]	; (8006108 <WM__GetNextIVR+0x17c>)
 800603a:	681b      	ldr	r3, [r3, #0]
 800603c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800603e:	b15a      	cbz	r2, 8006058 <WM__GetNextIVR+0xcc>
 8006040:	4610      	mov	r0, r2
 8006042:	f005 fc0b 	bl	800b85c <GUI_ALLOC_h2p>
 8006046:	4680      	mov	r8, r0
 8006048:	2200      	movs	r2, #0
 800604a:	6a00      	ldr	r0, [r0, #32]
 800604c:	4629      	mov	r1, r5
 800604e:	f7ff f973 	bl	8005338 <_Findy1>
 8006052:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8006056:	e7f2      	b.n	800603e <WM__GetNextIVR+0xb2>
 8006058:	9b01      	ldr	r3, [sp, #4]
 800605a:	4629      	mov	r1, r5
 800605c:	69d8      	ldr	r0, [r3, #28]
 800605e:	f7ff f96b 	bl	8005338 <_Findy1>
 8006062:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8006066:	f8ad 300c 	strh.w	r3, [sp, #12]
 800606a:	683b      	ldr	r3, [r7, #0]
 800606c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800606e:	b16a      	cbz	r2, 800608c <WM__GetNextIVR+0x100>
 8006070:	4610      	mov	r0, r2
 8006072:	f005 fbf3 	bl	800b85c <GUI_ALLOC_h2p>
 8006076:	4629      	mov	r1, r5
 8006078:	4680      	mov	r8, r0
 800607a:	2200      	movs	r2, #0
 800607c:	6a00      	ldr	r0, [r0, #32]
 800607e:	f7ff f9b1 	bl	80053e4 <_Findx0>
 8006082:	2800      	cmp	r0, #0
 8006084:	d1ed      	bne.n	8006062 <WM__GetNextIVR+0xd6>
 8006086:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800608a:	e7f0      	b.n	800606e <WM__GetNextIVR+0xe2>
 800608c:	9b01      	ldr	r3, [sp, #4]
 800608e:	4629      	mov	r1, r5
 8006090:	69d8      	ldr	r0, [r3, #28]
 8006092:	f7ff f9a7 	bl	80053e4 <_Findx0>
 8006096:	2800      	cmp	r0, #0
 8006098:	d1e3      	bne.n	8006062 <WM__GetNextIVR+0xd6>
 800609a:	88a3      	ldrh	r3, [r4, #4]
 800609c:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80060a0:	f8ad 300c 	strh.w	r3, [sp, #12]
 80060a4:	b21b      	sxth	r3, r3
 80060a6:	429a      	cmp	r2, r3
 80060a8:	dd07      	ble.n	80060ba <WM__GetNextIVR+0x12e>
 80060aa:	e895 0003 	ldmia.w	r5, {r0, r1}
 80060ae:	e886 0003 	stmia.w	r6, {r0, r1}
 80060b2:	a801      	add	r0, sp, #4
 80060b4:	f005 fbea 	bl	800b88c <GUI_ALLOC_UnlockH>
 80060b8:	e797      	b.n	8005fea <WM__GetNextIVR+0x5e>
 80060ba:	683b      	ldr	r3, [r7, #0]
 80060bc:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80060be:	b152      	cbz	r2, 80060d6 <WM__GetNextIVR+0x14a>
 80060c0:	4610      	mov	r0, r2
 80060c2:	f005 fbcb 	bl	800b85c <GUI_ALLOC_h2p>
 80060c6:	4607      	mov	r7, r0
 80060c8:	2200      	movs	r2, #0
 80060ca:	6a00      	ldr	r0, [r0, #32]
 80060cc:	4629      	mov	r1, r5
 80060ce:	f7ff f9cd 	bl	800546c <_Findx1>
 80060d2:	69ba      	ldr	r2, [r7, #24]
 80060d4:	e7f3      	b.n	80060be <WM__GetNextIVR+0x132>
 80060d6:	af04      	add	r7, sp, #16
 80060d8:	4629      	mov	r1, r5
 80060da:	f857 3d0c 	ldr.w	r3, [r7, #-12]!
 80060de:	69d8      	ldr	r0, [r3, #28]
 80060e0:	f7ff f9c4 	bl	800546c <_Findx1>
 80060e4:	4638      	mov	r0, r7
 80060e6:	f005 fbd1 	bl	800b88c <GUI_ALLOC_UnlockH>
 80060ea:	6923      	ldr	r3, [r4, #16]
 80060ec:	f644 6220 	movw	r2, #20000	; 0x4e20
 80060f0:	4293      	cmp	r3, r2
 80060f2:	dc89      	bgt.n	8006008 <WM__GetNextIVR+0x7c>
 80060f4:	e895 0003 	ldmia.w	r5, {r0, r1}
 80060f8:	e886 0003 	stmia.w	r6, {r0, r1}
 80060fc:	f7ff fbd6 	bl	80058ac <WM__ActivateClipRect>
 8006100:	2001      	movs	r0, #1
 8006102:	b004      	add	sp, #16
 8006104:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006108:	200000b8 	.word	0x200000b8
 800610c:	20002ad0 	.word	0x20002ad0

08006110 <WM__InitIVRSearch>:
 8006110:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006114:	4f39      	ldr	r7, [pc, #228]	; (80061fc <WM__InitIVRSearch+0xec>)
 8006116:	683b      	ldr	r3, [r7, #0]
 8006118:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800611c:	b086      	sub	sp, #24
 800611e:	4606      	mov	r6, r0
 8006120:	b912      	cbnz	r2, 8006128 <WM__InitIVRSearch+0x18>
 8006122:	f7ff fbc3 	bl	80058ac <WM__ActivateClipRect>
 8006126:	e064      	b.n	80061f2 <WM__InitIVRSearch+0xe2>
 8006128:	4d35      	ldr	r5, [pc, #212]	; (8006200 <WM__InitIVRSearch+0xf0>)
 800612a:	696a      	ldr	r2, [r5, #20]
 800612c:	3201      	adds	r2, #1
 800612e:	2a01      	cmp	r2, #1
 8006130:	616a      	str	r2, [r5, #20]
 8006132:	462c      	mov	r4, r5
 8006134:	dc5d      	bgt.n	80061f2 <WM__InitIVRSearch+0xe2>
 8006136:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8006138:	f005 fb9a 	bl	800b870 <GUI_ALLOC_LockH>
 800613c:	f04f 32ff 	mov.w	r2, #4294967295
 8006140:	612a      	str	r2, [r5, #16]
 8006142:	4a30      	ldr	r2, [pc, #192]	; (8006204 <WM__InitIVRSearch+0xf4>)
 8006144:	9000      	str	r0, [sp, #0]
 8006146:	7812      	ldrb	r2, [r2, #0]
 8006148:	b12a      	cbz	r2, 8006156 <WM__InitIVRSearch+0x46>
 800614a:	f100 0308 	add.w	r3, r0, #8
 800614e:	aa02      	add	r2, sp, #8
 8006150:	e893 0003 	ldmia.w	r3, {r0, r1}
 8006154:	e005      	b.n	8006162 <WM__InitIVRSearch+0x52>
 8006156:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8006158:	f012 0802 	ands.w	r8, r2, #2
 800615c:	d00a      	beq.n	8006174 <WM__InitIVRSearch+0x64>
 800615e:	c803      	ldmia	r0, {r0, r1}
 8006160:	aa02      	add	r2, sp, #8
 8006162:	e882 0003 	stmia.w	r2, {r0, r1}
 8006166:	ad02      	add	r5, sp, #8
 8006168:	b166      	cbz	r6, 8006184 <WM__InitIVRSearch+0x74>
 800616a:	4628      	mov	r0, r5
 800616c:	4631      	mov	r1, r6
 800616e:	f003 f82c 	bl	80091ca <GUI__IntersectRect>
 8006172:	e007      	b.n	8006184 <WM__InitIVRSearch+0x74>
 8006174:	696b      	ldr	r3, [r5, #20]
 8006176:	4668      	mov	r0, sp
 8006178:	3b01      	subs	r3, #1
 800617a:	616b      	str	r3, [r5, #20]
 800617c:	f005 fb86 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006180:	4640      	mov	r0, r8
 8006182:	e037      	b.n	80061f4 <WM__InitIVRSearch+0xe4>
 8006184:	683b      	ldr	r3, [r7, #0]
 8006186:	4e20      	ldr	r6, [pc, #128]	; (8006208 <WM__InitIVRSearch+0xf8>)
 8006188:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800618a:	b1c2      	cbz	r2, 80061be <WM__InitIVRSearch+0xae>
 800618c:	9b00      	ldr	r3, [sp, #0]
 800618e:	6810      	ldr	r0, [r2, #0]
 8006190:	6851      	ldr	r1, [r2, #4]
 8006192:	9301      	str	r3, [sp, #4]
 8006194:	ab04      	add	r3, sp, #16
 8006196:	c303      	stmia	r3!, {r0, r1}
 8006198:	6833      	ldr	r3, [r6, #0]
 800619a:	b133      	cbz	r3, 80061aa <WM__InitIVRSearch+0x9a>
 800619c:	a801      	add	r0, sp, #4
 800619e:	f005 fb75 	bl	800b88c <GUI_ALLOC_UnlockH>
 80061a2:	6830      	ldr	r0, [r6, #0]
 80061a4:	f005 fb64 	bl	800b870 <GUI_ALLOC_LockH>
 80061a8:	9001      	str	r0, [sp, #4]
 80061aa:	9801      	ldr	r0, [sp, #4]
 80061ac:	a904      	add	r1, sp, #16
 80061ae:	f7ff fb4d 	bl	800584c <WM__Client2Screen>
 80061b2:	4628      	mov	r0, r5
 80061b4:	a904      	add	r1, sp, #16
 80061b6:	f003 f808 	bl	80091ca <GUI__IntersectRect>
 80061ba:	a801      	add	r0, sp, #4
 80061bc:	e000      	b.n	80061c0 <WM__InitIVRSearch+0xb0>
 80061be:	4668      	mov	r0, sp
 80061c0:	f005 fb64 	bl	800b88c <GUI_ALLOC_UnlockH>
 80061c4:	6831      	ldr	r1, [r6, #0]
 80061c6:	b119      	cbz	r1, 80061d0 <WM__InitIVRSearch+0xc0>
 80061c8:	4628      	mov	r0, r5
 80061ca:	f7ff faa1 	bl	8005710 <WM__ClipAtParentBorders>
 80061ce:	b128      	cbz	r0, 80061dc <WM__InitIVRSearch+0xcc>
 80061d0:	683b      	ldr	r3, [r7, #0]
 80061d2:	4628      	mov	r0, r5
 80061d4:	6c99      	ldr	r1, [r3, #72]	; 0x48
 80061d6:	f7ff fa9b 	bl	8005710 <WM__ClipAtParentBorders>
 80061da:	b918      	cbnz	r0, 80061e4 <WM__InitIVRSearch+0xd4>
 80061dc:	6963      	ldr	r3, [r4, #20]
 80061de:	3b01      	subs	r3, #1
 80061e0:	6163      	str	r3, [r4, #20]
 80061e2:	e007      	b.n	80061f4 <WM__InitIVRSearch+0xe4>
 80061e4:	e895 0003 	ldmia.w	r5, {r0, r1}
 80061e8:	e884 0003 	stmia.w	r4, {r0, r1}
 80061ec:	f7ff fece 	bl	8005f8c <WM__GetNextIVR>
 80061f0:	e000      	b.n	80061f4 <WM__InitIVRSearch+0xe4>
 80061f2:	2001      	movs	r0, #1
 80061f4:	b006      	add	sp, #24
 80061f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80061fa:	bf00      	nop
 80061fc:	200000b8 	.word	0x200000b8
 8006200:	20002ad0 	.word	0x20002ad0
 8006204:	20002ca8 	.word	0x20002ca8
 8006208:	20002c78 	.word	0x20002c78

0800620c <WM_SetDefault>:
 800620c:	b508      	push	{r3, lr}
 800620e:	f004 ff13 	bl	800b038 <GL_SetDefault>
 8006212:	4b02      	ldr	r3, [pc, #8]	; (800621c <WM_SetDefault+0x10>)
 8006214:	681b      	ldr	r3, [r3, #0]
 8006216:	2200      	movs	r2, #0
 8006218:	645a      	str	r2, [r3, #68]	; 0x44
 800621a:	bd08      	pop	{r3, pc}
 800621c:	200000b8 	.word	0x200000b8

08006220 <WM__Paint1>:
 8006220:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006222:	b089      	sub	sp, #36	; 0x24
 8006224:	4604      	mov	r4, r0
 8006226:	f005 fb23 	bl	800b870 <GUI_ALLOC_LockH>
 800622a:	6907      	ldr	r7, [r0, #16]
 800622c:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800622e:	9001      	str	r0, [sp, #4]
 8006230:	3008      	adds	r0, #8
 8006232:	c803      	ldmia	r0, {r0, r1}
 8006234:	ad02      	add	r5, sp, #8
 8006236:	e885 0003 	stmia.w	r5, {r0, r1}
 800623a:	a801      	add	r0, sp, #4
 800623c:	f005 fb26 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006240:	2f00      	cmp	r7, #0
 8006242:	d031      	beq.n	80062a8 <WM__Paint1+0x88>
 8006244:	07b3      	lsls	r3, r6, #30
 8006246:	d52f      	bpl.n	80062a8 <WM__Paint1+0x88>
 8006248:	4620      	mov	r0, r4
 800624a:	212e      	movs	r1, #46	; 0x2e
 800624c:	f7fe fe9b 	bl	8004f86 <WM_SendMessageNoPara>
 8006250:	4b16      	ldr	r3, [pc, #88]	; (80062ac <WM__Paint1+0x8c>)
 8006252:	781a      	ldrb	r2, [r3, #0]
 8006254:	f416 5f80 	tst.w	r6, #4096	; 0x1000
 8006258:	f102 0201 	add.w	r2, r2, #1
 800625c:	701a      	strb	r2, [r3, #0]
 800625e:	461e      	mov	r6, r3
 8006260:	d00a      	beq.n	8006278 <WM__Paint1+0x58>
 8006262:	230f      	movs	r3, #15
 8006264:	9405      	str	r4, [sp, #20]
 8006266:	9304      	str	r3, [sp, #16]
 8006268:	9507      	str	r5, [sp, #28]
 800626a:	f7ff ffcf 	bl	800620c <WM_SetDefault>
 800626e:	4620      	mov	r0, r4
 8006270:	a904      	add	r1, sp, #16
 8006272:	f7fe f96d 	bl	8004550 <WM__SendMessage>
 8006276:	e010      	b.n	800629a <WM__Paint1+0x7a>
 8006278:	4628      	mov	r0, r5
 800627a:	f7ff ff49 	bl	8006110 <WM__InitIVRSearch>
 800627e:	b160      	cbz	r0, 800629a <WM__Paint1+0x7a>
 8006280:	230f      	movs	r3, #15
 8006282:	9304      	str	r3, [sp, #16]
 8006284:	9405      	str	r4, [sp, #20]
 8006286:	9507      	str	r5, [sp, #28]
 8006288:	f7ff ffc0 	bl	800620c <WM_SetDefault>
 800628c:	4620      	mov	r0, r4
 800628e:	a904      	add	r1, sp, #16
 8006290:	f7fe f95e 	bl	8004550 <WM__SendMessage>
 8006294:	f7ff fe7a 	bl	8005f8c <WM__GetNextIVR>
 8006298:	e7f1      	b.n	800627e <WM__Paint1+0x5e>
 800629a:	7833      	ldrb	r3, [r6, #0]
 800629c:	4620      	mov	r0, r4
 800629e:	3b01      	subs	r3, #1
 80062a0:	212f      	movs	r1, #47	; 0x2f
 80062a2:	7033      	strb	r3, [r6, #0]
 80062a4:	f7fe fe6f 	bl	8004f86 <WM_SendMessageNoPara>
 80062a8:	b009      	add	sp, #36	; 0x24
 80062aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80062ac:	20002ca8 	.word	0x20002ca8

080062b0 <WM__Paint>:
 80062b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80062b2:	b089      	sub	sp, #36	; 0x24
 80062b4:	ac06      	add	r4, sp, #24
 80062b6:	9003      	str	r0, [sp, #12]
 80062b8:	f005 fada 	bl	800b870 <GUI_ALLOC_LockH>
 80062bc:	f100 0208 	add.w	r2, r0, #8
 80062c0:	4603      	mov	r3, r0
 80062c2:	9005      	str	r0, [sp, #20]
 80062c4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80062c8:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 80062ca:	699e      	ldr	r6, [r3, #24]
 80062cc:	691f      	ldr	r7, [r3, #16]
 80062ce:	e884 0003 	stmia.w	r4, {r0, r1}
 80062d2:	a805      	add	r0, sp, #20
 80062d4:	f005 fada 	bl	800b88c <GUI_ALLOC_UnlockH>
 80062d8:	f244 0320 	movw	r3, #16416	; 0x4020
 80062dc:	402b      	ands	r3, r5
 80062de:	2b00      	cmp	r3, #0
 80062e0:	d034      	beq.n	800634c <WM__Paint+0x9c>
 80062e2:	b1bf      	cbz	r7, 8006314 <WM__Paint+0x64>
 80062e4:	4620      	mov	r0, r4
 80062e6:	9903      	ldr	r1, [sp, #12]
 80062e8:	f7ff fa12 	bl	8005710 <WM__ClipAtParentBorders>
 80062ec:	b190      	cbz	r0, 8006314 <WM__Paint+0x64>
 80062ee:	9803      	ldr	r0, [sp, #12]
 80062f0:	f7ff fcb0 	bl	8005c54 <WM_SelectWindow>
 80062f4:	0769      	lsls	r1, r5, #29
 80062f6:	d50f      	bpl.n	8006318 <WM__Paint+0x68>
 80062f8:	b126      	cbz	r6, 8006304 <WM__Paint+0x54>
 80062fa:	f005 0501 	and.w	r5, r5, #1
 80062fe:	f085 0501 	eor.w	r5, r5, #1
 8006302:	e000      	b.n	8006306 <WM__Paint+0x56>
 8006304:	2501      	movs	r5, #1
 8006306:	9500      	str	r5, [sp, #0]
 8006308:	4620      	mov	r0, r4
 800630a:	4912      	ldr	r1, [pc, #72]	; (8006354 <WM__Paint+0xa4>)
 800630c:	aa03      	add	r2, sp, #12
 800630e:	2300      	movs	r3, #0
 8006310:	f000 faaa 	bl	8006868 <GUI_MEMDEV_Draw>
 8006314:	2400      	movs	r4, #0
 8006316:	e003      	b.n	8006320 <WM__Paint+0x70>
 8006318:	9803      	ldr	r0, [sp, #12]
 800631a:	f7ff f989 	bl	8005630 <WM__PaintWinAndOverlays>
 800631e:	2401      	movs	r4, #1
 8006320:	9803      	ldr	r0, [sp, #12]
 8006322:	f005 faa5 	bl	800b870 <GUI_ALLOC_LockH>
 8006326:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8006328:	9005      	str	r0, [sp, #20]
 800632a:	f422 4380 	bic.w	r3, r2, #16384	; 0x4000
 800632e:	f023 0320 	bic.w	r3, r3, #32
 8006332:	0492      	lsls	r2, r2, #18
 8006334:	bf48      	it	mi
 8006336:	f043 0304 	orrmi.w	r3, r3, #4
 800633a:	6283      	str	r3, [r0, #40]	; 0x28
 800633c:	a805      	add	r0, sp, #20
 800633e:	f005 faa5 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006342:	4b05      	ldr	r3, [pc, #20]	; (8006358 <WM__Paint+0xa8>)
 8006344:	881a      	ldrh	r2, [r3, #0]
 8006346:	3a01      	subs	r2, #1
 8006348:	801a      	strh	r2, [r3, #0]
 800634a:	e000      	b.n	800634e <WM__Paint+0x9e>
 800634c:	461c      	mov	r4, r3
 800634e:	4620      	mov	r0, r4
 8006350:	b009      	add	sp, #36	; 0x24
 8006352:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006354:	080056a9 	.word	0x080056a9
 8006358:	20002c94 	.word	0x20002c94

0800635c <_Exec1Draw>:
 800635c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006360:	4b1a      	ldr	r3, [pc, #104]	; (80063cc <_Exec1Draw+0x70>)
 8006362:	681a      	ldr	r2, [r3, #0]
 8006364:	f892 0054 	ldrb.w	r0, [r2, #84]	; 0x54
 8006368:	b09c      	sub	sp, #112	; 0x70
 800636a:	461d      	mov	r5, r3
 800636c:	2800      	cmp	r0, #0
 800636e:	d02a      	beq.n	80063c6 <_Exec1Draw+0x6a>
 8006370:	4b17      	ldr	r3, [pc, #92]	; (80063d0 <_Exec1Draw+0x74>)
 8006372:	8818      	ldrh	r0, [r3, #0]
 8006374:	b338      	cbz	r0, 80063c6 <_Exec1Draw+0x6a>
 8006376:	4a17      	ldr	r2, [pc, #92]	; (80063d4 <_Exec1Draw+0x78>)
 8006378:	6814      	ldr	r4, [r2, #0]
 800637a:	4616      	mov	r6, r2
 800637c:	b90c      	cbnz	r4, 8006382 <_Exec1Draw+0x26>
 800637e:	4b16      	ldr	r3, [pc, #88]	; (80063d8 <_Exec1Draw+0x7c>)
 8006380:	681c      	ldr	r4, [r3, #0]
 8006382:	4668      	mov	r0, sp
 8006384:	f004 fdf4 	bl	800af70 <GUI_SaveContext_W>
 8006388:	682b      	ldr	r3, [r5, #0]
 800638a:	6b1f      	ldr	r7, [r3, #48]	; 0x30
 800638c:	6b5d      	ldr	r5, [r3, #52]	; 0x34
 800638e:	b924      	cbnz	r4, 800639a <_Exec1Draw+0x3e>
 8006390:	2400      	movs	r4, #0
 8006392:	e00d      	b.n	80063b0 <_Exec1Draw+0x54>
 8006394:	f1b8 0f00 	cmp.w	r8, #0
 8006398:	d10a      	bne.n	80063b0 <_Exec1Draw+0x54>
 800639a:	4620      	mov	r0, r4
 800639c:	f7ff ff88 	bl	80062b0 <WM__Paint>
 80063a0:	4680      	mov	r8, r0
 80063a2:	4620      	mov	r0, r4
 80063a4:	f005 fa5a 	bl	800b85c <GUI_ALLOC_h2p>
 80063a8:	6944      	ldr	r4, [r0, #20]
 80063aa:	2c00      	cmp	r4, #0
 80063ac:	d1f2      	bne.n	8006394 <_Exec1Draw+0x38>
 80063ae:	e7ef      	b.n	8006390 <_Exec1Draw+0x34>
 80063b0:	4638      	mov	r0, r7
 80063b2:	6034      	str	r4, [r6, #0]
 80063b4:	f004 fdfb 	bl	800afae <GUI_SetColor>
 80063b8:	4628      	mov	r0, r5
 80063ba:	f004 fdf6 	bl	800afaa <GUI_SetBkColor>
 80063be:	4668      	mov	r0, sp
 80063c0:	f004 fde0 	bl	800af84 <GUI_RestoreContext>
 80063c4:	2001      	movs	r0, #1
 80063c6:	b01c      	add	sp, #112	; 0x70
 80063c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80063cc:	200000b8 	.word	0x200000b8
 80063d0:	20002c94 	.word	0x20002c94
 80063d4:	20002ae8 	.word	0x20002ae8
 80063d8:	20002c98 	.word	0x20002c98

080063dc <WM__DeleteSecure>:
 80063dc:	b508      	push	{r3, lr}
 80063de:	f005 fa3d 	bl	800b85c <GUI_ALLOC_h2p>
 80063e2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80063e4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80063e8:	6283      	str	r3, [r0, #40]	; 0x28
 80063ea:	4b02      	ldr	r3, [pc, #8]	; (80063f4 <WM__DeleteSecure+0x18>)
 80063ec:	2201      	movs	r2, #1
 80063ee:	601a      	str	r2, [r3, #0]
 80063f0:	bd08      	pop	{r3, pc}
 80063f2:	bf00      	nop
 80063f4:	20002acc 	.word	0x20002acc

080063f8 <WM_Exec>:
 80063f8:	4b18      	ldr	r3, [pc, #96]	; (800645c <WM_Exec+0x64>)
 80063fa:	681b      	ldr	r3, [r3, #0]
 80063fc:	b570      	push	{r4, r5, r6, lr}
 80063fe:	b103      	cbz	r3, 8006402 <WM_Exec+0xa>
 8006400:	4798      	blx	r3
 8006402:	2500      	movs	r5, #0
 8006404:	f7ff fd7a 	bl	8005efc <_Exec1Input>
 8006408:	b108      	cbz	r0, 800640e <WM_Exec+0x16>
 800640a:	2501      	movs	r5, #1
 800640c:	e7fa      	b.n	8006404 <WM_Exec+0xc>
 800640e:	4b14      	ldr	r3, [pc, #80]	; (8006460 <WM_Exec+0x68>)
 8006410:	681b      	ldr	r3, [r3, #0]
 8006412:	f893 4054 	ldrb.w	r4, [r3, #84]	; 0x54
 8006416:	b144      	cbz	r4, 800642a <WM_Exec+0x32>
 8006418:	4b12      	ldr	r3, [pc, #72]	; (8006464 <WM_Exec+0x6c>)
 800641a:	881c      	ldrh	r4, [r3, #0]
 800641c:	b12c      	cbz	r4, 800642a <WM_Exec+0x32>
 800641e:	4b12      	ldr	r3, [pc, #72]	; (8006468 <WM_Exec+0x70>)
 8006420:	681b      	ldr	r3, [r3, #0]
 8006422:	b1a3      	cbz	r3, 800644e <WM_Exec+0x56>
 8006424:	681b      	ldr	r3, [r3, #0]
 8006426:	4798      	blx	r3
 8006428:	2401      	movs	r4, #1
 800642a:	f7ff ff97 	bl	800635c <_Exec1Draw>
 800642e:	4606      	mov	r6, r0
 8006430:	b108      	cbz	r0, 8006436 <WM_Exec+0x3e>
 8006432:	2501      	movs	r5, #1
 8006434:	e7f9      	b.n	800642a <WM_Exec+0x32>
 8006436:	b174      	cbz	r4, 8006456 <WM_Exec+0x5e>
 8006438:	4b0b      	ldr	r3, [pc, #44]	; (8006468 <WM_Exec+0x70>)
 800643a:	681b      	ldr	r3, [r3, #0]
 800643c:	b123      	cbz	r3, 8006448 <WM_Exec+0x50>
 800643e:	685b      	ldr	r3, [r3, #4]
 8006440:	4798      	blx	r3
 8006442:	4b0a      	ldr	r3, [pc, #40]	; (800646c <WM_Exec+0x74>)
 8006444:	601e      	str	r6, [r3, #0]
 8006446:	e006      	b.n	8006456 <WM_Exec+0x5e>
 8006448:	f003 f844 	bl	80094d4 <GUI__ManageCache>
 800644c:	e003      	b.n	8006456 <WM_Exec+0x5e>
 800644e:	2001      	movs	r0, #1
 8006450:	f003 f840 	bl	80094d4 <GUI__ManageCache>
 8006454:	e7e8      	b.n	8006428 <WM_Exec+0x30>
 8006456:	4628      	mov	r0, r5
 8006458:	bd70      	pop	{r4, r5, r6, pc}
 800645a:	bf00      	nop
 800645c:	20002c88 	.word	0x20002c88
 8006460:	200000b8 	.word	0x200000b8
 8006464:	20002c94 	.word	0x20002c94
 8006468:	20002cbc 	.word	0x20002cbc
 800646c:	20002ca4 	.word	0x20002ca4

08006470 <WM_Activate>:
 8006470:	4b02      	ldr	r3, [pc, #8]	; (800647c <WM_Activate+0xc>)
 8006472:	681b      	ldr	r3, [r3, #0]
 8006474:	2201      	movs	r2, #1
 8006476:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800647a:	4770      	bx	lr
 800647c:	200000b8 	.word	0x200000b8

08006480 <WM_Deactivate>:
 8006480:	4b03      	ldr	r3, [pc, #12]	; (8006490 <WM_Deactivate+0x10>)
 8006482:	681b      	ldr	r3, [r3, #0]
 8006484:	2200      	movs	r2, #0
 8006486:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800648a:	f002 bdb1 	b.w	8008ff0 <LCD_SetClipRectMax>
 800648e:	bf00      	nop
 8006490:	200000b8 	.word	0x200000b8

08006494 <WM_DefaultProc>:
 8006494:	b510      	push	{r4, lr}
 8006496:	4604      	mov	r4, r0
 8006498:	6840      	ldr	r0, [r0, #4]
 800649a:	6823      	ldr	r3, [r4, #0]
 800649c:	68e1      	ldr	r1, [r4, #12]
 800649e:	2b17      	cmp	r3, #23
 80064a0:	d00f      	beq.n	80064c2 <WM_DefaultProc+0x2e>
 80064a2:	dc06      	bgt.n	80064b2 <WM_DefaultProc+0x1e>
 80064a4:	2b0e      	cmp	r3, #14
 80064a6:	d00e      	beq.n	80064c6 <WM_DefaultProc+0x32>
 80064a8:	2b14      	cmp	r3, #20
 80064aa:	d114      	bne.n	80064d6 <WM_DefaultProc+0x42>
 80064ac:	f7fe f904 	bl	80046b8 <WM__GetClientRectEx>
 80064b0:	e011      	b.n	80064d6 <WM_DefaultProc+0x42>
 80064b2:	2b22      	cmp	r3, #34	; 0x22
 80064b4:	d00c      	beq.n	80064d0 <WM_DefaultProc+0x3c>
 80064b6:	2b28      	cmp	r3, #40	; 0x28
 80064b8:	d10d      	bne.n	80064d6 <WM_DefaultProc+0x42>
 80064ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80064be:	f7ff bbbb 	b.w	8005c38 <WM_InvalidateWindow>
 80064c2:	60e0      	str	r0, [r4, #12]
 80064c4:	bd10      	pop	{r4, pc}
 80064c6:	4621      	mov	r1, r4
 80064c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80064cc:	f7fe bd5d 	b.w	8004f8a <WM_SendToParent>
 80064d0:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 80064d4:	e000      	b.n	80064d8 <WM_DefaultProc+0x44>
 80064d6:	2300      	movs	r3, #0
 80064d8:	60e3      	str	r3, [r4, #12]
 80064da:	bd10      	pop	{r4, pc}

080064dc <_cbBackWin>:
 80064dc:	6803      	ldr	r3, [r0, #0]
 80064de:	2b0e      	cmp	r3, #14
 80064e0:	b510      	push	{r4, lr}
 80064e2:	4604      	mov	r4, r0
 80064e4:	d002      	beq.n	80064ec <_cbBackWin+0x10>
 80064e6:	2b0f      	cmp	r3, #15
 80064e8:	d009      	beq.n	80064fe <_cbBackWin+0x22>
 80064ea:	e020      	b.n	800652e <_cbBackWin+0x52>
 80064ec:	68c3      	ldr	r3, [r0, #12]
 80064ee:	685a      	ldr	r2, [r3, #4]
 80064f0:	2a01      	cmp	r2, #1
 80064f2:	d121      	bne.n	8006538 <_cbBackWin+0x5c>
 80064f4:	6818      	ldr	r0, [r3, #0]
 80064f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80064fa:	f003 bbbd 	b.w	8009c78 <GUI_StoreKey>
 80064fe:	4a0f      	ldr	r2, [pc, #60]	; (800653c <_cbBackWin+0x60>)
 8006500:	6843      	ldr	r3, [r0, #4]
 8006502:	6811      	ldr	r1, [r2, #0]
 8006504:	428b      	cmp	r3, r1
 8006506:	d006      	beq.n	8006516 <_cbBackWin+0x3a>
 8006508:	6852      	ldr	r2, [r2, #4]
 800650a:	4293      	cmp	r3, r2
 800650c:	bf14      	ite	ne
 800650e:	f04f 33ff 	movne.w	r3, #4294967295
 8006512:	2301      	moveq	r3, #1
 8006514:	e000      	b.n	8006518 <_cbBackWin+0x3c>
 8006516:	2300      	movs	r3, #0
 8006518:	4a09      	ldr	r2, [pc, #36]	; (8006540 <_cbBackWin+0x64>)
 800651a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800651e:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8006522:	4298      	cmp	r0, r3
 8006524:	d003      	beq.n	800652e <_cbBackWin+0x52>
 8006526:	f004 fd40 	bl	800afaa <GUI_SetBkColor>
 800652a:	f004 fb2d 	bl	800ab88 <GUI_Clear>
 800652e:	4620      	mov	r0, r4
 8006530:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006534:	f7ff bfae 	b.w	8006494 <WM_DefaultProc>
 8006538:	bd10      	pop	{r4, pc}
 800653a:	bf00      	nop
 800653c:	20002c7c 	.word	0x20002c7c
 8006540:	20002cb0 	.word	0x20002cb0

08006544 <WM_Init>:
 8006544:	b530      	push	{r4, r5, lr}
 8006546:	4b2b      	ldr	r3, [pc, #172]	; (80065f4 <WM_Init+0xb0>)
 8006548:	7818      	ldrb	r0, [r3, #0]
 800654a:	b085      	sub	sp, #20
 800654c:	461d      	mov	r5, r3
 800654e:	2800      	cmp	r0, #0
 8006550:	d14d      	bne.n	80065ee <WM_Init+0xaa>
 8006552:	4b29      	ldr	r3, [pc, #164]	; (80065f8 <WM_Init+0xb4>)
 8006554:	6018      	str	r0, [r3, #0]
 8006556:	4b29      	ldr	r3, [pc, #164]	; (80065fc <WM_Init+0xb8>)
 8006558:	6018      	str	r0, [r3, #0]
 800655a:	4b29      	ldr	r3, [pc, #164]	; (8006600 <WM_Init+0xbc>)
 800655c:	681b      	ldr	r3, [r3, #0]
 800655e:	6458      	str	r0, [r3, #68]	; 0x44
 8006560:	4b28      	ldr	r3, [pc, #160]	; (8006604 <WM_Init+0xc0>)
 8006562:	8018      	strh	r0, [r3, #0]
 8006564:	4b28      	ldr	r3, [pc, #160]	; (8006608 <WM_Init+0xc4>)
 8006566:	4604      	mov	r4, r0
 8006568:	8018      	strh	r0, [r3, #0]
 800656a:	4620      	mov	r0, r4
 800656c:	f004 f9c2 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 8006570:	b1c0      	cbz	r0, 80065a4 <WM_Init+0x60>
 8006572:	f04f 32ff 	mov.w	r2, #4294967295
 8006576:	2302      	movs	r3, #2
 8006578:	e88d 000c 	stmia.w	sp, {r2, r3}
 800657c:	2000      	movs	r0, #0
 800657e:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8006582:	4b22      	ldr	r3, [pc, #136]	; (800660c <WM_Init+0xc8>)
 8006584:	9302      	str	r3, [sp, #8]
 8006586:	9003      	str	r0, [sp, #12]
 8006588:	4613      	mov	r3, r2
 800658a:	4601      	mov	r1, r0
 800658c:	f7ff fb82 	bl	8005c94 <WM_CreateWindowAsChild>
 8006590:	4b1f      	ldr	r3, [pc, #124]	; (8006610 <WM_Init+0xcc>)
 8006592:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8006596:	4b1f      	ldr	r3, [pc, #124]	; (8006614 <WM_Init+0xd0>)
 8006598:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800659c:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 80065a0:	f7ff fb4a 	bl	8005c38 <WM_InvalidateWindow>
 80065a4:	3401      	adds	r4, #1
 80065a6:	2c02      	cmp	r4, #2
 80065a8:	d1df      	bne.n	800656a <WM_Init+0x26>
 80065aa:	481b      	ldr	r0, [pc, #108]	; (8006618 <WM_Init+0xd4>)
 80065ac:	f7fe f87c 	bl	80046a8 <WM__AddCriticalHandle>
 80065b0:	481a      	ldr	r0, [pc, #104]	; (800661c <WM_Init+0xd8>)
 80065b2:	f7fe f879 	bl	80046a8 <WM__AddCriticalHandle>
 80065b6:	481a      	ldr	r0, [pc, #104]	; (8006620 <WM_Init+0xdc>)
 80065b8:	f7fe f876 	bl	80046a8 <WM__AddCriticalHandle>
 80065bc:	4819      	ldr	r0, [pc, #100]	; (8006624 <WM_Init+0xe0>)
 80065be:	f7fe f873 	bl	80046a8 <WM__AddCriticalHandle>
 80065c2:	4819      	ldr	r0, [pc, #100]	; (8006628 <WM_Init+0xe4>)
 80065c4:	f7fe f870 	bl	80046a8 <WM__AddCriticalHandle>
 80065c8:	4818      	ldr	r0, [pc, #96]	; (800662c <WM_Init+0xe8>)
 80065ca:	f7fe f86d 	bl	80046a8 <WM__AddCriticalHandle>
 80065ce:	4b10      	ldr	r3, [pc, #64]	; (8006610 <WM_Init+0xcc>)
 80065d0:	6818      	ldr	r0, [r3, #0]
 80065d2:	f7ff fb3f 	bl	8005c54 <WM_SelectWindow>
 80065d6:	f7ff ff4b 	bl	8006470 <WM_Activate>
 80065da:	2301      	movs	r3, #1
 80065dc:	702b      	strb	r3, [r5, #0]
 80065de:	4814      	ldr	r0, [pc, #80]	; (8006630 <WM_Init+0xec>)
 80065e0:	4b14      	ldr	r3, [pc, #80]	; (8006634 <WM_Init+0xf0>)
 80065e2:	6003      	str	r3, [r0, #0]
 80065e4:	b005      	add	sp, #20
 80065e6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80065ea:	f004 badd 	b.w	800aba8 <GUI__RegisterExit>
 80065ee:	b005      	add	sp, #20
 80065f0:	bd30      	pop	{r4, r5, pc}
 80065f2:	bf00      	nop
 80065f4:	20002aec 	.word	0x20002aec
 80065f8:	20002c98 	.word	0x20002c98
 80065fc:	20002ae8 	.word	0x20002ae8
 8006600:	200000b8 	.word	0x200000b8
 8006604:	20002c94 	.word	0x20002c94
 8006608:	20002c74 	.word	0x20002c74
 800660c:	080064dd 	.word	0x080064dd
 8006610:	20002c7c 	.word	0x20002c7c
 8006614:	20002cb0 	.word	0x20002cb0
 8006618:	20002e14 	.word	0x20002e14
 800661c:	20002e04 	.word	0x20002e04
 8006620:	20002df4 	.word	0x20002df4
 8006624:	20002e1c 	.word	0x20002e1c
 8006628:	20002e0c 	.word	0x20002e0c
 800662c:	20002dfc 	.word	0x20002dfc
 8006630:	20002ac4 	.word	0x20002ac4
 8006634:	08005269 	.word	0x08005269

08006638 <_CreateStaticDevice>:
 8006638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800663c:	b087      	sub	sp, #28
 800663e:	4604      	mov	r4, r0
 8006640:	f005 f916 	bl	800b870 <GUI_ALLOC_LockH>
 8006644:	af06      	add	r7, sp, #24
 8006646:	f8b0 8000 	ldrh.w	r8, [r0]
 800664a:	8886      	ldrh	r6, [r0, #4]
 800664c:	f8b0 9002 	ldrh.w	r9, [r0, #2]
 8006650:	f8b0 b006 	ldrh.w	fp, [r0, #6]
 8006654:	f847 0d04 	str.w	r0, [r7, #-4]!
 8006658:	fa0f f888 	sxth.w	r8, r8
 800665c:	b236      	sxth	r6, r6
 800665e:	ebc8 0606 	rsb	r6, r8, r6
 8006662:	f8d0 a024 	ldr.w	sl, [r0, #36]	; 0x24
 8006666:	3601      	adds	r6, #1
 8006668:	4638      	mov	r0, r7
 800666a:	fa0f f989 	sxth.w	r9, r9
 800666e:	fa0f f58b 	sxth.w	r5, fp
 8006672:	f005 f90b 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006676:	ebc9 0505 	rsb	r5, r9, r5
 800667a:	2e00      	cmp	r6, #0
 800667c:	f105 0501 	add.w	r5, r5, #1
 8006680:	dd4d      	ble.n	800671e <_CreateStaticDevice+0xe6>
 8006682:	2d00      	cmp	r5, #0
 8006684:	dd4b      	ble.n	800671e <_CreateStaticDevice+0xe6>
 8006686:	f1ba 0f00 	cmp.w	sl, #0
 800668a:	d04a      	beq.n	8006722 <_CreateStaticDevice+0xea>
 800668c:	4650      	mov	r0, sl
 800668e:	f005 f8ef 	bl	800b870 <GUI_ALLOC_LockH>
 8006692:	ab06      	add	r3, sp, #24
 8006694:	8886      	ldrh	r6, [r0, #4]
 8006696:	f843 0d08 	str.w	r0, [r3, #-8]!
 800669a:	88c5      	ldrh	r5, [r0, #6]
 800669c:	b236      	sxth	r6, r6
 800669e:	4618      	mov	r0, r3
 80066a0:	f005 f8f4 	bl	800b88c <GUI_ALLOC_UnlockH>
 80066a4:	4546      	cmp	r6, r8
 80066a6:	d102      	bne.n	80066ae <_CreateStaticDevice+0x76>
 80066a8:	b22d      	sxth	r5, r5
 80066aa:	454d      	cmp	r5, r9
 80066ac:	d032      	beq.n	8006714 <_CreateStaticDevice+0xdc>
 80066ae:	4650      	mov	r0, sl
 80066b0:	4641      	mov	r1, r8
 80066b2:	464a      	mov	r2, r9
 80066b4:	f000 f888 	bl	80067c8 <GUI_MEMDEV_SetOrg>
 80066b8:	e02c      	b.n	8006714 <_CreateStaticDevice+0xdc>
 80066ba:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80066bc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80066c0:	6283      	str	r3, [r0, #40]	; 0x28
 80066c2:	4638      	mov	r0, r7
 80066c4:	f005 f8e2 	bl	800b88c <GUI_ALLOC_UnlockH>
 80066c8:	4640      	mov	r0, r8
 80066ca:	f000 ff99 	bl	8007600 <GUI_MEMDEV_Select>
 80066ce:	4607      	mov	r7, r0
 80066d0:	4650      	mov	r0, sl
 80066d2:	f003 faa9 	bl	8009c28 <GUI__AlphaPreserveTrans>
 80066d6:	4640      	mov	r0, r8
 80066d8:	f000 f8b6 	bl	8006848 <GUI_MEMDEV_GetDataPtr>
 80066dc:	4a2d      	ldr	r2, [pc, #180]	; (8006794 <_CreateStaticDevice+0x15c>)
 80066de:	4b2e      	ldr	r3, [pc, #184]	; (8006798 <_CreateStaticDevice+0x160>)
 80066e0:	7811      	ldrb	r1, [r2, #0]
 80066e2:	681b      	ldr	r3, [r3, #0]
 80066e4:	4375      	muls	r5, r6
 80066e6:	00aa      	lsls	r2, r5, #2
 80066e8:	4e2c      	ldr	r6, [pc, #176]	; (800679c <_CreateStaticDevice+0x164>)
 80066ea:	4d2d      	ldr	r5, [pc, #180]	; (80067a0 <_CreateStaticDevice+0x168>)
 80066ec:	4798      	blx	r3
 80066ee:	4620      	mov	r0, r4
 80066f0:	f8d5 8000 	ldr.w	r8, [r5]
 80066f4:	6034      	str	r4, [r6, #0]
 80066f6:	f7fe fa90 	bl	8004c1a <WM_GetWindowOrgX>
 80066fa:	6028      	str	r0, [r5, #0]
 80066fc:	4620      	mov	r0, r4
 80066fe:	f7ff fd8f 	bl	8006220 <WM__Paint1>
 8006702:	2000      	movs	r0, #0
 8006704:	f8c5 8000 	str.w	r8, [r5]
 8006708:	6030      	str	r0, [r6, #0]
 800670a:	f003 fa8d 	bl	8009c28 <GUI__AlphaPreserveTrans>
 800670e:	4638      	mov	r0, r7
 8006710:	f000 ff76 	bl	8007600 <GUI_MEMDEV_Select>
 8006714:	4620      	mov	r0, r4
 8006716:	f005 f8a1 	bl	800b85c <GUI_ALLOC_h2p>
 800671a:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800671c:	e037      	b.n	800678e <_CreateStaticDevice+0x156>
 800671e:	2000      	movs	r0, #0
 8006720:	e035      	b.n	800678e <_CreateStaticDevice+0x156>
 8006722:	f7fe f9df 	bl	8004ae4 <WM_GetDesktopWindow>
 8006726:	4284      	cmp	r4, r0
 8006728:	d112      	bne.n	8006750 <_CreateStaticDevice+0x118>
 800672a:	f002 f8fb 	bl	8008924 <LCD_GetXSize>
 800672e:	4682      	mov	sl, r0
 8006730:	f002 f900 	bl	8008934 <LCD_GetYSize>
 8006734:	4556      	cmp	r6, sl
 8006736:	dc02      	bgt.n	800673e <_CreateStaticDevice+0x106>
 8006738:	4285      	cmp	r5, r0
 800673a:	dd09      	ble.n	8006750 <_CreateStaticDevice+0x118>
 800673c:	e000      	b.n	8006740 <_CreateStaticDevice+0x108>
 800673e:	4656      	mov	r6, sl
 8006740:	4285      	cmp	r5, r0
 8006742:	bfa8      	it	ge
 8006744:	4605      	movge	r5, r0
 8006746:	4631      	mov	r1, r6
 8006748:	4620      	mov	r0, r4
 800674a:	462a      	mov	r2, r5
 800674c:	f7fe fc90 	bl	8005070 <WM_SetSize>
 8006750:	4b14      	ldr	r3, [pc, #80]	; (80067a4 <_CreateStaticDevice+0x16c>)
 8006752:	9301      	str	r3, [sp, #4]
 8006754:	f04f 0a01 	mov.w	sl, #1
 8006758:	4b13      	ldr	r3, [pc, #76]	; (80067a8 <_CreateStaticDevice+0x170>)
 800675a:	9302      	str	r3, [sp, #8]
 800675c:	4640      	mov	r0, r8
 800675e:	4649      	mov	r1, r9
 8006760:	4632      	mov	r2, r6
 8006762:	462b      	mov	r3, r5
 8006764:	f8cd a000 	str.w	sl, [sp]
 8006768:	f000 fe54 	bl	8007414 <GUI_MEMDEV__CreateFixed>
 800676c:	4680      	mov	r8, r0
 800676e:	4620      	mov	r0, r4
 8006770:	f005 f87e 	bl	800b870 <GUI_ALLOC_LockH>
 8006774:	9005      	str	r0, [sp, #20]
 8006776:	f8c0 8024 	str.w	r8, [r0, #36]	; 0x24
 800677a:	f1b8 0f00 	cmp.w	r8, #0
 800677e:	d19c      	bne.n	80066ba <_CreateStaticDevice+0x82>
 8006780:	4638      	mov	r0, r7
 8006782:	f005 f883 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006786:	4620      	mov	r0, r4
 8006788:	f7ff fd4a 	bl	8006220 <WM__Paint1>
 800678c:	4640      	mov	r0, r8
 800678e:	b007      	add	sp, #28
 8006790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006794:	20000094 	.word	0x20000094
 8006798:	200000a4 	.word	0x200000a4
 800679c:	20002cc8 	.word	0x20002cc8
 80067a0:	20002ce0 	.word	0x20002ce0
 80067a4:	0801031c 	.word	0x0801031c
 80067a8:	08012474 	.word	0x08012474

080067ac <GUI_MEMDEV_Paint1Static>:
 80067ac:	b538      	push	{r3, r4, r5, lr}
 80067ae:	4605      	mov	r5, r0
 80067b0:	2405      	movs	r4, #5
 80067b2:	4628      	mov	r0, r5
 80067b4:	f7ff ff40 	bl	8006638 <_CreateStaticDevice>
 80067b8:	b910      	cbnz	r0, 80067c0 <GUI_MEMDEV_Paint1Static+0x14>
 80067ba:	3c01      	subs	r4, #1
 80067bc:	d1f9      	bne.n	80067b2 <GUI_MEMDEV_Paint1Static+0x6>
 80067be:	bd38      	pop	{r3, r4, r5, pc}
 80067c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80067c4:	f007 b9fc 	b.w	800dbc0 <GUI_MEMDEV_Write>

080067c8 <GUI_MEMDEV_SetOrg>:
 80067c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80067ca:	460d      	mov	r5, r1
 80067cc:	4614      	mov	r4, r2
 80067ce:	b918      	cbnz	r0, 80067d8 <GUI_MEMDEV_SetOrg+0x10>
 80067d0:	4b11      	ldr	r3, [pc, #68]	; (8006818 <GUI_MEMDEV_SetOrg+0x50>)
 80067d2:	681b      	ldr	r3, [r3, #0]
 80067d4:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80067d6:	b1e8      	cbz	r0, 8006814 <GUI_MEMDEV_SetOrg+0x4c>
 80067d8:	f005 f84a 	bl	800b870 <GUI_ALLOC_LockH>
 80067dc:	b2a4      	uxth	r4, r4
 80067de:	b2ad      	uxth	r5, r5
 80067e0:	80c4      	strh	r4, [r0, #6]
 80067e2:	8085      	strh	r5, [r0, #4]
 80067e4:	9000      	str	r0, [sp, #0]
 80067e6:	f002 fc03 	bl	8008ff0 <LCD_SetClipRectMax>
 80067ea:	9b00      	ldr	r3, [sp, #0]
 80067ec:	6958      	ldr	r0, [r3, #20]
 80067ee:	b170      	cbz	r0, 800680e <GUI_MEMDEV_SetOrg+0x46>
 80067f0:	f005 f83e 	bl	800b870 <GUI_ALLOC_LockH>
 80067f4:	9b00      	ldr	r3, [sp, #0]
 80067f6:	9001      	str	r0, [sp, #4]
 80067f8:	891a      	ldrh	r2, [r3, #8]
 80067fa:	895b      	ldrh	r3, [r3, #10]
 80067fc:	8082      	strh	r2, [r0, #4]
 80067fe:	80c3      	strh	r3, [r0, #6]
 8006800:	b112      	cbz	r2, 8006808 <GUI_MEMDEV_SetOrg+0x40>
 8006802:	b10b      	cbz	r3, 8006808 <GUI_MEMDEV_SetOrg+0x40>
 8006804:	8005      	strh	r5, [r0, #0]
 8006806:	8044      	strh	r4, [r0, #2]
 8006808:	a801      	add	r0, sp, #4
 800680a:	f005 f83f 	bl	800b88c <GUI_ALLOC_UnlockH>
 800680e:	4668      	mov	r0, sp
 8006810:	f005 f83c 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006814:	b003      	add	sp, #12
 8006816:	bd30      	pop	{r4, r5, pc}
 8006818:	200000b8 	.word	0x200000b8

0800681c <GUI_MEMDEV_GetYSize>:
 800681c:	b513      	push	{r0, r1, r4, lr}
 800681e:	b920      	cbnz	r0, 800682a <GUI_MEMDEV_GetYSize+0xe>
 8006820:	4b08      	ldr	r3, [pc, #32]	; (8006844 <GUI_MEMDEV_GetYSize+0x28>)
 8006822:	681b      	ldr	r3, [r3, #0]
 8006824:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006826:	4604      	mov	r4, r0
 8006828:	b148      	cbz	r0, 800683e <GUI_MEMDEV_GetYSize+0x22>
 800682a:	f005 f821 	bl	800b870 <GUI_ALLOC_LockH>
 800682e:	ab02      	add	r3, sp, #8
 8006830:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 8006834:	f843 0d04 	str.w	r0, [r3, #-4]!
 8006838:	4618      	mov	r0, r3
 800683a:	f005 f827 	bl	800b88c <GUI_ALLOC_UnlockH>
 800683e:	4620      	mov	r0, r4
 8006840:	b002      	add	sp, #8
 8006842:	bd10      	pop	{r4, pc}
 8006844:	200000b8 	.word	0x200000b8

08006848 <GUI_MEMDEV_GetDataPtr>:
 8006848:	b513      	push	{r0, r1, r4, lr}
 800684a:	b150      	cbz	r0, 8006862 <GUI_MEMDEV_GetDataPtr+0x1a>
 800684c:	f005 f810 	bl	800b870 <GUI_ALLOC_LockH>
 8006850:	4604      	mov	r4, r0
 8006852:	a802      	add	r0, sp, #8
 8006854:	f840 4d04 	str.w	r4, [r0, #-4]!
 8006858:	f005 f818 	bl	800b88c <GUI_ALLOC_UnlockH>
 800685c:	f104 0018 	add.w	r0, r4, #24
 8006860:	e7ff      	b.n	8006862 <GUI_MEMDEV_GetDataPtr+0x1a>
 8006862:	b002      	add	sp, #8
 8006864:	bd10      	pop	{r4, pc}
	...

08006868 <GUI_MEMDEV_Draw>:
 8006868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800686c:	461e      	mov	r6, r3
 800686e:	b089      	sub	sp, #36	; 0x24
 8006870:	4b4e      	ldr	r3, [pc, #312]	; (80069ac <GUI_MEMDEV_Draw+0x144>)
 8006872:	9204      	str	r2, [sp, #16]
 8006874:	681a      	ldr	r2, [r3, #0]
 8006876:	9103      	str	r1, [sp, #12]
 8006878:	7c54      	ldrb	r4, [r2, #17]
 800687a:	4a4d      	ldr	r2, [pc, #308]	; (80069b0 <GUI_MEMDEV_Draw+0x148>)
 800687c:	5712      	ldrsb	r2, [r2, r4]
 800687e:	2a01      	cmp	r2, #1
 8006880:	4605      	mov	r5, r0
 8006882:	469b      	mov	fp, r3
 8006884:	4620      	mov	r0, r4
 8006886:	dd06      	ble.n	8006896 <GUI_MEMDEV_Draw+0x2e>
 8006888:	f002 f83a 	bl	8008900 <LCD_GetXSizeEx>
 800688c:	4607      	mov	r7, r0
 800688e:	4620      	mov	r0, r4
 8006890:	f002 f839 	bl	8008906 <LCD_GetYSizeEx>
 8006894:	e005      	b.n	80068a2 <GUI_MEMDEV_Draw+0x3a>
 8006896:	f002 f839 	bl	800890c <LCD_GetVXSizeEx>
 800689a:	4607      	mov	r7, r0
 800689c:	4620      	mov	r0, r4
 800689e:	f002 f838 	bl	8008912 <LCD_GetVYSizeEx>
 80068a2:	4604      	mov	r4, r0
 80068a4:	b325      	cbz	r5, 80068f0 <GUI_MEMDEV_Draw+0x88>
 80068a6:	a806      	add	r0, sp, #24
 80068a8:	a907      	add	r1, sp, #28
 80068aa:	f004 fabb 	bl	800ae24 <GUI_GetOrg>
 80068ae:	9b06      	ldr	r3, [sp, #24]
 80068b0:	f9b5 a000 	ldrsh.w	sl, [r5]
 80068b4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80068b8:	f9b5 8002 	ldrsh.w	r8, [r5, #2]
 80068bc:	441f      	add	r7, r3
 80068be:	9b07      	ldr	r3, [sp, #28]
 80068c0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80068c4:	3f01      	subs	r7, #1
 80068c6:	4297      	cmp	r7, r2
 80068c8:	bfd4      	ite	le
 80068ca:	ebca 0707 	rsble	r7, sl, r7
 80068ce:	ebca 0702 	rsbgt	r7, sl, r2
 80068d2:	441c      	add	r4, r3
 80068d4:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 80068d8:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 80068dc:	3c01      	subs	r4, #1
 80068de:	4294      	cmp	r4, r2
 80068e0:	bfd4      	ite	le
 80068e2:	ebc8 0404 	rsble	r4, r8, r4
 80068e6:	ebc8 0402 	rsbgt	r4, r8, r2
 80068ea:	3701      	adds	r7, #1
 80068ec:	3401      	adds	r4, #1
 80068ee:	e001      	b.n	80068f4 <GUI_MEMDEV_Draw+0x8c>
 80068f0:	46a8      	mov	r8, r5
 80068f2:	46aa      	mov	sl, r5
 80068f4:	b906      	cbnz	r6, 80068f8 <GUI_MEMDEV_Draw+0x90>
 80068f6:	4266      	negs	r6, r4
 80068f8:	2f00      	cmp	r7, #0
 80068fa:	dd52      	ble.n	80069a2 <GUI_MEMDEV_Draw+0x13a>
 80068fc:	2c00      	cmp	r4, #0
 80068fe:	dd50      	ble.n	80069a2 <GUI_MEMDEV_Draw+0x13a>
 8006900:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006902:	9300      	str	r3, [sp, #0]
 8006904:	4650      	mov	r0, sl
 8006906:	4641      	mov	r1, r8
 8006908:	463a      	mov	r2, r7
 800690a:	4633      	mov	r3, r6
 800690c:	f000 fe3c 	bl	8007588 <GUI_MEMDEV_CreateEx>
 8006910:	4605      	mov	r5, r0
 8006912:	b920      	cbnz	r0, 800691e <GUI_MEMDEV_Draw+0xb6>
 8006914:	9804      	ldr	r0, [sp, #16]
 8006916:	9b03      	ldr	r3, [sp, #12]
 8006918:	4798      	blx	r3
 800691a:	2001      	movs	r0, #1
 800691c:	e042      	b.n	80069a4 <GUI_MEMDEV_Draw+0x13c>
 800691e:	f7ff ff7d 	bl	800681c <GUI_MEMDEV_GetYSize>
 8006922:	42a0      	cmp	r0, r4
 8006924:	4606      	mov	r6, r0
 8006926:	d006      	beq.n	8006936 <GUI_MEMDEV_Draw+0xce>
 8006928:	f8db 3000 	ldr.w	r3, [fp]
 800692c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800692e:	b110      	cbz	r0, 8006936 <GUI_MEMDEV_Draw+0xce>
 8006930:	2132      	movs	r1, #50	; 0x32
 8006932:	f7fd fe2b 	bl	800458c <WM__SendMessageNoPara>
 8006936:	4628      	mov	r0, r5
 8006938:	f000 fe62 	bl	8007600 <GUI_MEMDEV_Select>
 800693c:	4273      	negs	r3, r6
 800693e:	9305      	str	r3, [sp, #20]
 8006940:	46a1      	mov	r9, r4
 8006942:	2700      	movs	r7, #0
 8006944:	45b1      	cmp	r9, r6
 8006946:	da03      	bge.n	8006950 <GUI_MEMDEV_Draw+0xe8>
 8006948:	4628      	mov	r0, r5
 800694a:	4649      	mov	r1, r9
 800694c:	f007 fa38 	bl	800ddc0 <GUI_MEMDEV_ReduceYSize>
 8006950:	b147      	cbz	r7, 8006964 <GUI_MEMDEV_Draw+0xfc>
 8006952:	4628      	mov	r0, r5
 8006954:	4651      	mov	r1, sl
 8006956:	eb07 0208 	add.w	r2, r7, r8
 800695a:	f7ff ff35 	bl	80067c8 <GUI_MEMDEV_SetOrg>
 800695e:	4628      	mov	r0, r5
 8006960:	f007 fa44 	bl	800ddec <GUI_MEMDEV_Clear>
 8006964:	9b03      	ldr	r3, [sp, #12]
 8006966:	9804      	ldr	r0, [sp, #16]
 8006968:	4798      	blx	r3
 800696a:	4b12      	ldr	r3, [pc, #72]	; (80069b4 <GUI_MEMDEV_Draw+0x14c>)
 800696c:	681b      	ldr	r3, [r3, #0]
 800696e:	b10b      	cbz	r3, 8006974 <GUI_MEMDEV_Draw+0x10c>
 8006970:	2000      	movs	r0, #0
 8006972:	4798      	blx	r3
 8006974:	4628      	mov	r0, r5
 8006976:	f000 febb 	bl	80076f0 <GUI_MEMDEV_CopyToLCD>
 800697a:	4437      	add	r7, r6
 800697c:	9b05      	ldr	r3, [sp, #20]
 800697e:	42a7      	cmp	r7, r4
 8006980:	4499      	add	r9, r3
 8006982:	dbdf      	blt.n	8006944 <GUI_MEMDEV_Draw+0xdc>
 8006984:	4628      	mov	r0, r5
 8006986:	f000 fddd 	bl	8007544 <GUI_MEMDEV_Delete>
 800698a:	2000      	movs	r0, #0
 800698c:	f000 fe38 	bl	8007600 <GUI_MEMDEV_Select>
 8006990:	42a6      	cmp	r6, r4
 8006992:	d006      	beq.n	80069a2 <GUI_MEMDEV_Draw+0x13a>
 8006994:	f8db 3000 	ldr.w	r3, [fp]
 8006998:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800699a:	b110      	cbz	r0, 80069a2 <GUI_MEMDEV_Draw+0x13a>
 800699c:	2133      	movs	r1, #51	; 0x33
 800699e:	f7fd fdf5 	bl	800458c <WM__SendMessageNoPara>
 80069a2:	2000      	movs	r0, #0
 80069a4:	b009      	add	sp, #36	; 0x24
 80069a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80069aa:	bf00      	nop
 80069ac:	200000b8 	.word	0x200000b8
 80069b0:	20002cd0 	.word	0x20002cd0
 80069b4:	20002af0 	.word	0x20002af0

080069b8 <_GetDevData>:
 80069b8:	4802      	ldr	r0, [pc, #8]	; (80069c4 <_GetDevData+0xc>)
 80069ba:	2901      	cmp	r1, #1
 80069bc:	bf18      	it	ne
 80069be:	2000      	movne	r0, #0
 80069c0:	4770      	bx	lr
 80069c2:	bf00      	nop
 80069c4:	0801031c 	.word	0x0801031c

080069c8 <_GetDevFunc>:
 80069c8:	4802      	ldr	r0, [pc, #8]	; (80069d4 <_GetDevFunc+0xc>)
 80069ca:	2916      	cmp	r1, #22
 80069cc:	bf18      	it	ne
 80069ce:	2000      	movne	r0, #0
 80069d0:	4770      	bx	lr
 80069d2:	bf00      	nop
 80069d4:	0800d9d1 	.word	0x0800d9d1

080069d8 <_GetDevProp>:
 80069d8:	2908      	cmp	r1, #8
 80069da:	bf0c      	ite	eq
 80069dc:	2020      	moveq	r0, #32
 80069de:	2000      	movne	r0, #0
 80069e0:	4770      	bx	lr

080069e2 <_SetOrg>:
 80069e2:	b508      	push	{r3, lr}
 80069e4:	6800      	ldr	r0, [r0, #0]
 80069e6:	68c3      	ldr	r3, [r0, #12]
 80069e8:	6a1b      	ldr	r3, [r3, #32]
 80069ea:	4798      	blx	r3
 80069ec:	bd08      	pop	{r3, pc}

080069ee <_GetRect>:
 80069ee:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80069f0:	6880      	ldr	r0, [r0, #8]
 80069f2:	460c      	mov	r4, r1
 80069f4:	f004 ff3c 	bl	800b870 <GUI_ALLOC_LockH>
 80069f8:	4603      	mov	r3, r0
 80069fa:	a802      	add	r0, sp, #8
 80069fc:	8899      	ldrh	r1, [r3, #4]
 80069fe:	88da      	ldrh	r2, [r3, #6]
 8006a00:	891d      	ldrh	r5, [r3, #8]
 8006a02:	f840 3d04 	str.w	r3, [r0, #-4]!
 8006a06:	895b      	ldrh	r3, [r3, #10]
 8006a08:	8021      	strh	r1, [r4, #0]
 8006a0a:	8062      	strh	r2, [r4, #2]
 8006a0c:	4429      	add	r1, r5
 8006a0e:	441a      	add	r2, r3
 8006a10:	3901      	subs	r1, #1
 8006a12:	3a01      	subs	r2, #1
 8006a14:	80a1      	strh	r1, [r4, #4]
 8006a16:	80e2      	strh	r2, [r4, #6]
 8006a18:	f004 ff38 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006a1c:	b003      	add	sp, #12
 8006a1e:	bd30      	pop	{r4, r5, pc}

08006a20 <_XY2PTR>:
 8006a20:	4b0e      	ldr	r3, [pc, #56]	; (8006a5c <_XY2PTR+0x3c>)
 8006a22:	681b      	ldr	r3, [r3, #0]
 8006a24:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006a26:	4605      	mov	r5, r0
 8006a28:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006a2a:	460e      	mov	r6, r1
 8006a2c:	f004 ff20 	bl	800b870 <GUI_ALLOC_LockH>
 8006a30:	4603      	mov	r3, r0
 8006a32:	a802      	add	r0, sp, #8
 8006a34:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 8006a38:	f840 3d04 	str.w	r3, [r0, #-4]!
 8006a3c:	f103 0118 	add.w	r1, r3, #24
 8006a40:	1b36      	subs	r6, r6, r4
 8006a42:	68dc      	ldr	r4, [r3, #12]
 8006a44:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8006a48:	fb04 1406 	mla	r4, r4, r6, r1
 8006a4c:	1aed      	subs	r5, r5, r3
 8006a4e:	f004 ff1d 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006a52:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 8006a56:	4620      	mov	r0, r4
 8006a58:	b002      	add	sp, #8
 8006a5a:	bd70      	pop	{r4, r5, r6, pc}
 8006a5c:	200000b8 	.word	0x200000b8

08006a60 <_GetPixelIndex>:
 8006a60:	b508      	push	{r3, lr}
 8006a62:	4608      	mov	r0, r1
 8006a64:	4611      	mov	r1, r2
 8006a66:	f7ff ffdb 	bl	8006a20 <_XY2PTR>
 8006a6a:	6800      	ldr	r0, [r0, #0]
 8006a6c:	bd08      	pop	{r3, pc}
	...

08006a70 <_XorPixel>:
 8006a70:	4b15      	ldr	r3, [pc, #84]	; (8006ac8 <_XorPixel+0x58>)
 8006a72:	681b      	ldr	r3, [r3, #0]
 8006a74:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006a76:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006a78:	4615      	mov	r5, r2
 8006a7a:	460e      	mov	r6, r1
 8006a7c:	f004 fef8 	bl	800b870 <GUI_ALLOC_LockH>
 8006a80:	4629      	mov	r1, r5
 8006a82:	9000      	str	r0, [sp, #0]
 8006a84:	4630      	mov	r0, r6
 8006a86:	f7ff ffcb 	bl	8006a20 <_XY2PTR>
 8006a8a:	9b00      	ldr	r3, [sp, #0]
 8006a8c:	681b      	ldr	r3, [r3, #0]
 8006a8e:	691b      	ldr	r3, [r3, #16]
 8006a90:	4604      	mov	r4, r0
 8006a92:	689b      	ldr	r3, [r3, #8]
 8006a94:	4798      	blx	r3
 8006a96:	6823      	ldr	r3, [r4, #0]
 8006a98:	4058      	eors	r0, r3
 8006a9a:	9b00      	ldr	r3, [sp, #0]
 8006a9c:	6020      	str	r0, [r4, #0]
 8006a9e:	6958      	ldr	r0, [r3, #20]
 8006aa0:	b160      	cbz	r0, 8006abc <_XorPixel+0x4c>
 8006aa2:	f004 fee5 	bl	800b870 <GUI_ALLOC_LockH>
 8006aa6:	ac02      	add	r4, sp, #8
 8006aa8:	6883      	ldr	r3, [r0, #8]
 8006aaa:	f844 0d04 	str.w	r0, [r4, #-4]!
 8006aae:	681b      	ldr	r3, [r3, #0]
 8006ab0:	4631      	mov	r1, r6
 8006ab2:	462a      	mov	r2, r5
 8006ab4:	4798      	blx	r3
 8006ab6:	4620      	mov	r0, r4
 8006ab8:	f004 fee8 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006abc:	4668      	mov	r0, sp
 8006abe:	f004 fee5 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006ac2:	b002      	add	sp, #8
 8006ac4:	bd70      	pop	{r4, r5, r6, pc}
 8006ac6:	bf00      	nop
 8006ac8:	200000b8 	.word	0x200000b8

08006acc <_SetPixelIndex>:
 8006acc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006ace:	461c      	mov	r4, r3
 8006ad0:	4b10      	ldr	r3, [pc, #64]	; (8006b14 <_SetPixelIndex+0x48>)
 8006ad2:	681b      	ldr	r3, [r3, #0]
 8006ad4:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006ad6:	460e      	mov	r6, r1
 8006ad8:	4615      	mov	r5, r2
 8006ada:	f004 fec9 	bl	800b870 <GUI_ALLOC_LockH>
 8006ade:	4629      	mov	r1, r5
 8006ae0:	9000      	str	r0, [sp, #0]
 8006ae2:	4630      	mov	r0, r6
 8006ae4:	f7ff ff9c 	bl	8006a20 <_XY2PTR>
 8006ae8:	9b00      	ldr	r3, [sp, #0]
 8006aea:	6004      	str	r4, [r0, #0]
 8006aec:	6958      	ldr	r0, [r3, #20]
 8006aee:	b160      	cbz	r0, 8006b0a <_SetPixelIndex+0x3e>
 8006af0:	f004 febe 	bl	800b870 <GUI_ALLOC_LockH>
 8006af4:	ac02      	add	r4, sp, #8
 8006af6:	6883      	ldr	r3, [r0, #8]
 8006af8:	f844 0d04 	str.w	r0, [r4, #-4]!
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	4631      	mov	r1, r6
 8006b00:	462a      	mov	r2, r5
 8006b02:	4798      	blx	r3
 8006b04:	4620      	mov	r0, r4
 8006b06:	f004 fec1 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006b0a:	4668      	mov	r0, sp
 8006b0c:	f004 febe 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006b10:	b002      	add	sp, #8
 8006b12:	bd70      	pop	{r4, r5, r6, pc}
 8006b14:	200000b8 	.word	0x200000b8

08006b18 <_DrawVLine>:
 8006b18:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006b1c:	4d2c      	ldr	r5, [pc, #176]	; (8006bd0 <_DrawVLine+0xb8>)
 8006b1e:	461e      	mov	r6, r3
 8006b20:	682b      	ldr	r3, [r5, #0]
 8006b22:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006b24:	460f      	mov	r7, r1
 8006b26:	4614      	mov	r4, r2
 8006b28:	f004 fea2 	bl	800b870 <GUI_ALLOC_LockH>
 8006b2c:	9000      	str	r0, [sp, #0]
 8006b2e:	6940      	ldr	r0, [r0, #20]
 8006b30:	46a9      	mov	r9, r5
 8006b32:	b108      	cbz	r0, 8006b38 <_DrawVLine+0x20>
 8006b34:	f004 fe9c 	bl	800b870 <GUI_ALLOC_LockH>
 8006b38:	9001      	str	r0, [sp, #4]
 8006b3a:	4621      	mov	r1, r4
 8006b3c:	4638      	mov	r0, r7
 8006b3e:	f7ff ff6f 	bl	8006a20 <_XY2PTR>
 8006b42:	f8d9 2000 	ldr.w	r2, [r9]
 8006b46:	9b00      	ldr	r3, [sp, #0]
 8006b48:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 8006b4a:	7c12      	ldrb	r2, [r2, #16]
 8006b4c:	f8d3 800c 	ldr.w	r8, [r3, #12]
 8006b50:	f8d1 9000 	ldr.w	r9, [r1]
 8006b54:	07d2      	lsls	r2, r2, #31
 8006b56:	4605      	mov	r5, r0
 8006b58:	d51f      	bpl.n	8006b9a <_DrawVLine+0x82>
 8006b5a:	681b      	ldr	r3, [r3, #0]
 8006b5c:	691b      	ldr	r3, [r3, #16]
 8006b5e:	689b      	ldr	r3, [r3, #8]
 8006b60:	4798      	blx	r3
 8006b62:	4680      	mov	r8, r0
 8006b64:	9801      	ldr	r0, [sp, #4]
 8006b66:	b128      	cbz	r0, 8006b74 <_DrawVLine+0x5c>
 8006b68:	6882      	ldr	r2, [r0, #8]
 8006b6a:	4639      	mov	r1, r7
 8006b6c:	f8d2 c000 	ldr.w	ip, [r2]
 8006b70:	4622      	mov	r2, r4
 8006b72:	47e0      	blx	ip
 8006b74:	682b      	ldr	r3, [r5, #0]
 8006b76:	ea83 0308 	eor.w	r3, r3, r8
 8006b7a:	602b      	str	r3, [r5, #0]
 8006b7c:	9b00      	ldr	r3, [sp, #0]
 8006b7e:	3401      	adds	r4, #1
 8006b80:	68db      	ldr	r3, [r3, #12]
 8006b82:	42b4      	cmp	r4, r6
 8006b84:	441d      	add	r5, r3
 8006b86:	dded      	ble.n	8006b64 <_DrawVLine+0x4c>
 8006b88:	4668      	mov	r0, sp
 8006b8a:	f004 fe7f 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006b8e:	9b01      	ldr	r3, [sp, #4]
 8006b90:	b1d3      	cbz	r3, 8006bc8 <_DrawVLine+0xb0>
 8006b92:	a801      	add	r0, sp, #4
 8006b94:	f004 fe7a 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006b98:	e016      	b.n	8006bc8 <_DrawVLine+0xb0>
 8006b9a:	9b01      	ldr	r3, [sp, #4]
 8006b9c:	b163      	cbz	r3, 8006bb8 <_DrawVLine+0xa0>
 8006b9e:	9801      	ldr	r0, [sp, #4]
 8006ba0:	6883      	ldr	r3, [r0, #8]
 8006ba2:	4622      	mov	r2, r4
 8006ba4:	681b      	ldr	r3, [r3, #0]
 8006ba6:	4639      	mov	r1, r7
 8006ba8:	3401      	adds	r4, #1
 8006baa:	4798      	blx	r3
 8006bac:	42b4      	cmp	r4, r6
 8006bae:	f8c5 9000 	str.w	r9, [r5]
 8006bb2:	4445      	add	r5, r8
 8006bb4:	ddf3      	ble.n	8006b9e <_DrawVLine+0x86>
 8006bb6:	e7e7      	b.n	8006b88 <_DrawVLine+0x70>
 8006bb8:	1b34      	subs	r4, r6, r4
 8006bba:	3401      	adds	r4, #1
 8006bbc:	3c01      	subs	r4, #1
 8006bbe:	f8c5 9000 	str.w	r9, [r5]
 8006bc2:	4445      	add	r5, r8
 8006bc4:	d1fa      	bne.n	8006bbc <_DrawVLine+0xa4>
 8006bc6:	e7df      	b.n	8006b88 <_DrawVLine+0x70>
 8006bc8:	b003      	add	sp, #12
 8006bca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006bce:	bf00      	nop
 8006bd0:	200000b8 	.word	0x200000b8

08006bd4 <_FillRect>:
 8006bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006bd8:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 8006c88 <_FillRect+0xb4>
 8006bdc:	4614      	mov	r4, r2
 8006bde:	f8db 2000 	ldr.w	r2, [fp]
 8006be2:	b085      	sub	sp, #20
 8006be4:	6e10      	ldr	r0, [r2, #96]	; 0x60
 8006be6:	460f      	mov	r7, r1
 8006be8:	461d      	mov	r5, r3
 8006bea:	f004 fe41 	bl	800b870 <GUI_ALLOC_LockH>
 8006bee:	4621      	mov	r1, r4
 8006bf0:	9002      	str	r0, [sp, #8]
 8006bf2:	4638      	mov	r0, r7
 8006bf4:	f7ff ff14 	bl	8006a20 <_XY2PTR>
 8006bf8:	9a02      	ldr	r2, [sp, #8]
 8006bfa:	f8db 3000 	ldr.w	r3, [fp]
 8006bfe:	f8d2 900c 	ldr.w	r9, [r2, #12]
 8006c02:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006c04:	4606      	mov	r6, r0
 8006c06:	6950      	ldr	r0, [r2, #20]
 8006c08:	f8d3 a000 	ldr.w	sl, [r3]
 8006c0c:	1bed      	subs	r5, r5, r7
 8006c0e:	3501      	adds	r5, #1
 8006c10:	b338      	cbz	r0, 8006c62 <_FillRect+0x8e>
 8006c12:	f004 fe2d 	bl	800b870 <GUI_ALLOC_LockH>
 8006c16:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8006c18:	f10d 0810 	add.w	r8, sp, #16
 8006c1c:	1b13      	subs	r3, r2, r4
 8006c1e:	f848 0d04 	str.w	r0, [r8, #-4]!
 8006c22:	3301      	adds	r3, #1
 8006c24:	9300      	str	r3, [sp, #0]
 8006c26:	4639      	mov	r1, r7
 8006c28:	4622      	mov	r2, r4
 8006c2a:	462b      	mov	r3, r5
 8006c2c:	f007 f8b2 	bl	800dd94 <GUI_USAGE_AddRect>
 8006c30:	4640      	mov	r0, r8
 8006c32:	f004 fe2b 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006c36:	e014      	b.n	8006c62 <_FillRect+0x8e>
 8006c38:	f8db 3000 	ldr.w	r3, [fp]
 8006c3c:	7c1b      	ldrb	r3, [r3, #16]
 8006c3e:	07db      	lsls	r3, r3, #31
 8006c40:	d513      	bpl.n	8006c6a <_FillRect+0x96>
 8006c42:	9b02      	ldr	r3, [sp, #8]
 8006c44:	681b      	ldr	r3, [r3, #0]
 8006c46:	691b      	ldr	r3, [r3, #16]
 8006c48:	689b      	ldr	r3, [r3, #8]
 8006c4a:	4798      	blx	r3
 8006c4c:	4632      	mov	r2, r6
 8006c4e:	462b      	mov	r3, r5
 8006c50:	6811      	ldr	r1, [r2, #0]
 8006c52:	3b01      	subs	r3, #1
 8006c54:	ea81 0100 	eor.w	r1, r1, r0
 8006c58:	f842 1b04 	str.w	r1, [r2], #4
 8006c5c:	d1f8      	bne.n	8006c50 <_FillRect+0x7c>
 8006c5e:	444e      	add	r6, r9
 8006c60:	3401      	adds	r4, #1
 8006c62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006c64:	429c      	cmp	r4, r3
 8006c66:	dde7      	ble.n	8006c38 <_FillRect+0x64>
 8006c68:	e008      	b.n	8006c7c <_FillRect+0xa8>
 8006c6a:	2d00      	cmp	r5, #0
 8006c6c:	ddf7      	ble.n	8006c5e <_FillRect+0x8a>
 8006c6e:	462b      	mov	r3, r5
 8006c70:	4632      	mov	r2, r6
 8006c72:	3b01      	subs	r3, #1
 8006c74:	f842 ab04 	str.w	sl, [r2], #4
 8006c78:	d1fb      	bne.n	8006c72 <_FillRect+0x9e>
 8006c7a:	e7f0      	b.n	8006c5e <_FillRect+0x8a>
 8006c7c:	a802      	add	r0, sp, #8
 8006c7e:	f004 fe05 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006c82:	b005      	add	sp, #20
 8006c84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006c88:	200000b8 	.word	0x200000b8

08006c8c <_DrawHLine>:
 8006c8c:	b507      	push	{r0, r1, r2, lr}
 8006c8e:	9200      	str	r2, [sp, #0]
 8006c90:	f7ff ffa0 	bl	8006bd4 <_FillRect>
 8006c94:	b003      	add	sp, #12
 8006c96:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08006c9c <_DrawBitmap>:
 8006c9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ca0:	4c90      	ldr	r4, [pc, #576]	; (8006ee4 <_DrawBitmap+0x248>)
 8006ca2:	b091      	sub	sp, #68	; 0x44
 8006ca4:	469b      	mov	fp, r3
 8006ca6:	6823      	ldr	r3, [r4, #0]
 8006ca8:	9008      	str	r0, [sp, #32]
 8006caa:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006cac:	9207      	str	r2, [sp, #28]
 8006cae:	460e      	mov	r6, r1
 8006cb0:	f8dd a074 	ldr.w	sl, [sp, #116]	; 0x74
 8006cb4:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8006cb6:	2800      	cmp	r0, #0
 8006cb8:	f000 838b 	beq.w	80073d2 <_DrawBitmap+0x736>
 8006cbc:	f004 fdd8 	bl	800b870 <GUI_ALLOC_LockH>
 8006cc0:	900e      	str	r0, [sp, #56]	; 0x38
 8006cc2:	6940      	ldr	r0, [r0, #20]
 8006cc4:	b108      	cbz	r0, 8006cca <_DrawBitmap+0x2e>
 8006cc6:	f004 fdd3 	bl	800b870 <GUI_ALLOC_LockH>
 8006cca:	900f      	str	r0, [sp, #60]	; 0x3c
 8006ccc:	a810      	add	r0, sp, #64	; 0x40
 8006cce:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 8006cd2:	68db      	ldr	r3, [r3, #12]
 8006cd4:	930a      	str	r3, [sp, #40]	; 0x28
 8006cd6:	f004 fdd9 	bl	800b88c <GUI_ALLOC_UnlockH>
 8006cda:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006cdc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8006cde:	4437      	add	r7, r6
 8006ce0:	9704      	str	r7, [sp, #16]
 8006ce2:	b150      	cbz	r0, 8006cfa <_DrawBitmap+0x5e>
 8006ce4:	6823      	ldr	r3, [r4, #0]
 8006ce6:	7c1b      	ldrb	r3, [r3, #16]
 8006ce8:	079c      	lsls	r4, r3, #30
 8006cea:	d406      	bmi.n	8006cfa <_DrawBitmap+0x5e>
 8006cec:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006cee:	9700      	str	r7, [sp, #0]
 8006cf0:	9904      	ldr	r1, [sp, #16]
 8006cf2:	9a07      	ldr	r2, [sp, #28]
 8006cf4:	465b      	mov	r3, fp
 8006cf6:	f007 f84d 	bl	800dd94 <GUI_USAGE_AddRect>
 8006cfa:	9804      	ldr	r0, [sp, #16]
 8006cfc:	9907      	ldr	r1, [sp, #28]
 8006cfe:	f7ff fe8f 	bl	8006a20 <_XY2PTR>
 8006d02:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006d04:	2f17      	cmp	r7, #23
 8006d06:	4606      	mov	r6, r0
 8006d08:	dd64      	ble.n	8006dd4 <_DrawBitmap+0x138>
 8006d0a:	ea4f 078b 	mov.w	r7, fp, lsl #2
 8006d0e:	9706      	str	r7, [sp, #24]
 8006d10:	f04f 0900 	mov.w	r9, #0
 8006d14:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006d16:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8006d18:	45b9      	cmp	r9, r7
 8006d1a:	da57      	bge.n	8006dcc <_DrawBitmap+0x130>
 8006d1c:	b130      	cbz	r0, 8006d2c <_DrawBitmap+0x90>
 8006d1e:	6883      	ldr	r3, [r0, #8]
 8006d20:	9a07      	ldr	r2, [sp, #28]
 8006d22:	685c      	ldr	r4, [r3, #4]
 8006d24:	9904      	ldr	r1, [sp, #16]
 8006d26:	444a      	add	r2, r9
 8006d28:	465b      	mov	r3, fp
 8006d2a:	47a0      	blx	r4
 8006d2c:	9f08      	ldr	r7, [sp, #32]
 8006d2e:	693b      	ldr	r3, [r7, #16]
 8006d30:	68d8      	ldr	r0, [r3, #12]
 8006d32:	b130      	cbz	r0, 8006d42 <_DrawBitmap+0xa6>
 8006d34:	4b6c      	ldr	r3, [pc, #432]	; (8006ee8 <_DrawBitmap+0x24c>)
 8006d36:	9a06      	ldr	r2, [sp, #24]
 8006d38:	681b      	ldr	r3, [r3, #0]
 8006d3a:	4630      	mov	r0, r6
 8006d3c:	4651      	mov	r1, sl
 8006d3e:	4798      	blx	r3
 8006d40:	e03d      	b.n	8006dbe <_DrawBitmap+0x122>
 8006d42:	685b      	ldr	r3, [r3, #4]
 8006d44:	4798      	blx	r3
 8006d46:	0e00      	lsrs	r0, r0, #24
 8006d48:	9005      	str	r0, [sp, #20]
 8006d4a:	4635      	mov	r5, r6
 8006d4c:	465f      	mov	r7, fp
 8006d4e:	4654      	mov	r4, sl
 8006d50:	463b      	mov	r3, r7
 8006d52:	4622      	mov	r2, r4
 8006d54:	f04f 0800 	mov.w	r8, #0
 8006d58:	f852 1b04 	ldr.w	r1, [r2], #4
 8006d5c:	9805      	ldr	r0, [sp, #20]
 8006d5e:	0e09      	lsrs	r1, r1, #24
 8006d60:	4281      	cmp	r1, r0
 8006d62:	9805      	ldr	r0, [sp, #20]
 8006d64:	bf08      	it	eq
 8006d66:	f108 0801 	addeq.w	r8, r8, #1
 8006d6a:	4281      	cmp	r1, r0
 8006d6c:	f103 33ff 	add.w	r3, r3, #4294967295
 8006d70:	d012      	beq.n	8006d98 <_DrawBitmap+0xfc>
 8006d72:	f1b8 0f00 	cmp.w	r8, #0
 8006d76:	d012      	beq.n	8006d9e <_DrawBitmap+0x102>
 8006d78:	4a5b      	ldr	r2, [pc, #364]	; (8006ee8 <_DrawBitmap+0x24c>)
 8006d7a:	ea4f 0388 	mov.w	r3, r8, lsl #2
 8006d7e:	f8d2 c000 	ldr.w	ip, [r2]
 8006d82:	9303      	str	r3, [sp, #12]
 8006d84:	4628      	mov	r0, r5
 8006d86:	4621      	mov	r1, r4
 8006d88:	461a      	mov	r2, r3
 8006d8a:	47e0      	blx	ip
 8006d8c:	9b03      	ldr	r3, [sp, #12]
 8006d8e:	ebc8 0707 	rsb	r7, r8, r7
 8006d92:	441d      	add	r5, r3
 8006d94:	441c      	add	r4, r3
 8006d96:	e010      	b.n	8006dba <_DrawBitmap+0x11e>
 8006d98:	2b00      	cmp	r3, #0
 8006d9a:	d1dd      	bne.n	8006d58 <_DrawBitmap+0xbc>
 8006d9c:	e7e9      	b.n	8006d72 <_DrawBitmap+0xd6>
 8006d9e:	6820      	ldr	r0, [r4, #0]
 8006da0:	0e02      	lsrs	r2, r0, #24
 8006da2:	2aff      	cmp	r2, #255	; 0xff
 8006da4:	d006      	beq.n	8006db4 <_DrawBitmap+0x118>
 8006da6:	4b51      	ldr	r3, [pc, #324]	; (8006eec <_DrawBitmap+0x250>)
 8006da8:	6829      	ldr	r1, [r5, #0]
 8006daa:	681b      	ldr	r3, [r3, #0]
 8006dac:	43d2      	mvns	r2, r2
 8006dae:	b2d2      	uxtb	r2, r2
 8006db0:	4798      	blx	r3
 8006db2:	6028      	str	r0, [r5, #0]
 8006db4:	3504      	adds	r5, #4
 8006db6:	3404      	adds	r4, #4
 8006db8:	3f01      	subs	r7, #1
 8006dba:	2f00      	cmp	r7, #0
 8006dbc:	d1c8      	bne.n	8006d50 <_DrawBitmap+0xb4>
 8006dbe:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8006dc0:	44ba      	add	sl, r7
 8006dc2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8006dc4:	f109 0901 	add.w	r9, r9, #1
 8006dc8:	443e      	add	r6, r7
 8006dca:	e7a3      	b.n	8006d14 <_DrawBitmap+0x78>
 8006dcc:	2800      	cmp	r0, #0
 8006dce:	f040 82fd 	bne.w	80073cc <_DrawBitmap+0x730>
 8006dd2:	e2fe      	b.n	80073d2 <_DrawBitmap+0x736>
 8006dd4:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006dd6:	2f10      	cmp	r7, #16
 8006dd8:	d134      	bne.n	8006e44 <_DrawBitmap+0x1a8>
 8006dda:	1f06      	subs	r6, r0, #4
 8006ddc:	2500      	movs	r5, #0
 8006dde:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006de0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8006de2:	42bd      	cmp	r5, r7
 8006de4:	f280 80a3 	bge.w	8006f2e <_DrawBitmap+0x292>
 8006de8:	9f07      	ldr	r7, [sp, #28]
 8006dea:	442f      	add	r7, r5
 8006dec:	b13c      	cbz	r4, 8006dfe <_DrawBitmap+0x162>
 8006dee:	68a3      	ldr	r3, [r4, #8]
 8006df0:	9904      	ldr	r1, [sp, #16]
 8006df2:	f8d3 c004 	ldr.w	ip, [r3, #4]
 8006df6:	4620      	mov	r0, r4
 8006df8:	463a      	mov	r2, r7
 8006dfa:	465b      	mov	r3, fp
 8006dfc:	47e0      	blx	ip
 8006dfe:	f1aa 0902 	sub.w	r9, sl, #2
 8006e02:	9605      	str	r6, [sp, #20]
 8006e04:	46d8      	mov	r8, fp
 8006e06:	9808      	ldr	r0, [sp, #32]
 8006e08:	9904      	ldr	r1, [sp, #16]
 8006e0a:	6903      	ldr	r3, [r0, #16]
 8006e0c:	f839 0f02 	ldrh.w	r0, [r9, #2]!
 8006e10:	685b      	ldr	r3, [r3, #4]
 8006e12:	4459      	add	r1, fp
 8006e14:	ebc8 0101 	rsb	r1, r8, r1
 8006e18:	9103      	str	r1, [sp, #12]
 8006e1a:	4798      	blx	r3
 8006e1c:	9b05      	ldr	r3, [sp, #20]
 8006e1e:	9903      	ldr	r1, [sp, #12]
 8006e20:	f843 0f04 	str.w	r0, [r3, #4]!
 8006e24:	9305      	str	r3, [sp, #20]
 8006e26:	b124      	cbz	r4, 8006e32 <_DrawBitmap+0x196>
 8006e28:	68a3      	ldr	r3, [r4, #8]
 8006e2a:	4620      	mov	r0, r4
 8006e2c:	681b      	ldr	r3, [r3, #0]
 8006e2e:	463a      	mov	r2, r7
 8006e30:	4798      	blx	r3
 8006e32:	f1b8 0801 	subs.w	r8, r8, #1
 8006e36:	d1e6      	bne.n	8006e06 <_DrawBitmap+0x16a>
 8006e38:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8006e3a:	44ba      	add	sl, r7
 8006e3c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8006e3e:	3501      	adds	r5, #1
 8006e40:	443e      	add	r6, r7
 8006e42:	e7cc      	b.n	8006dde <_DrawBitmap+0x142>
 8006e44:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006e46:	2f08      	cmp	r7, #8
 8006e48:	f100 0604 	add.w	r6, r0, #4
 8006e4c:	d173      	bne.n	8006f36 <_DrawBitmap+0x29a>
 8006e4e:	9f07      	ldr	r7, [sp, #28]
 8006e50:	9907      	ldr	r1, [sp, #28]
 8006e52:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8006e54:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8006e56:	1a7b      	subs	r3, r7, r1
 8006e58:	4293      	cmp	r3, r2
 8006e5a:	f1a6 0004 	sub.w	r0, r6, #4
 8006e5e:	da66      	bge.n	8006f2e <_DrawBitmap+0x292>
 8006e60:	4b20      	ldr	r3, [pc, #128]	; (8006ee4 <_DrawBitmap+0x248>)
 8006e62:	681b      	ldr	r3, [r3, #0]
 8006e64:	7c1b      	ldrb	r3, [r3, #16]
 8006e66:	b36d      	cbz	r5, 8006ec4 <_DrawBitmap+0x228>
 8006e68:	f013 0303 	ands.w	r3, r3, #3
 8006e6c:	d005      	beq.n	8006e7a <_DrawBitmap+0x1de>
 8006e6e:	2b02      	cmp	r3, #2
 8006e70:	d157      	bne.n	8006f22 <_DrawBitmap+0x286>
 8006e72:	46b1      	mov	r9, r6
 8006e74:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8006e78:	e01c      	b.n	8006eb4 <_DrawBitmap+0x218>
 8006e7a:	f81a 2003 	ldrb.w	r2, [sl, r3]
 8006e7e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8006e82:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8006e86:	3301      	adds	r3, #1
 8006e88:	455b      	cmp	r3, fp
 8006e8a:	d1f6      	bne.n	8006e7a <_DrawBitmap+0x1de>
 8006e8c:	e049      	b.n	8006f22 <_DrawBitmap+0x286>
 8006e8e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8006e92:	f849 3c04 	str.w	r3, [r9, #-4]
 8006e96:	b12c      	cbz	r4, 8006ea4 <_DrawBitmap+0x208>
 8006e98:	68a3      	ldr	r3, [r4, #8]
 8006e9a:	4620      	mov	r0, r4
 8006e9c:	681b      	ldr	r3, [r3, #0]
 8006e9e:	4641      	mov	r1, r8
 8006ea0:	463a      	mov	r2, r7
 8006ea2:	4798      	blx	r3
 8006ea4:	9b04      	ldr	r3, [sp, #16]
 8006ea6:	f108 0801 	add.w	r8, r8, #1
 8006eaa:	445b      	add	r3, fp
 8006eac:	4543      	cmp	r3, r8
 8006eae:	f109 0904 	add.w	r9, r9, #4
 8006eb2:	d036      	beq.n	8006f22 <_DrawBitmap+0x286>
 8006eb4:	9804      	ldr	r0, [sp, #16]
 8006eb6:	ebc0 030a 	rsb	r3, r0, sl
 8006eba:	f813 3008 	ldrb.w	r3, [r3, r8]
 8006ebe:	2b00      	cmp	r3, #0
 8006ec0:	d0f0      	beq.n	8006ea4 <_DrawBitmap+0x208>
 8006ec2:	e7e4      	b.n	8006e8e <_DrawBitmap+0x1f2>
 8006ec4:	f013 0303 	ands.w	r3, r3, #3
 8006ec8:	d005      	beq.n	8006ed6 <_DrawBitmap+0x23a>
 8006eca:	2b02      	cmp	r3, #2
 8006ecc:	d129      	bne.n	8006f22 <_DrawBitmap+0x286>
 8006ece:	46b1      	mov	r9, r6
 8006ed0:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8006ed4:	e01d      	b.n	8006f12 <_DrawBitmap+0x276>
 8006ed6:	4b04      	ldr	r3, [pc, #16]	; (8006ee8 <_DrawBitmap+0x24c>)
 8006ed8:	4651      	mov	r1, sl
 8006eda:	681b      	ldr	r3, [r3, #0]
 8006edc:	465a      	mov	r2, fp
 8006ede:	4798      	blx	r3
 8006ee0:	e01f      	b.n	8006f22 <_DrawBitmap+0x286>
 8006ee2:	bf00      	nop
 8006ee4:	200000b8 	.word	0x200000b8
 8006ee8:	200000a8 	.word	0x200000a8
 8006eec:	200000ac 	.word	0x200000ac
 8006ef0:	f849 3c04 	str.w	r3, [r9, #-4]
 8006ef4:	b12c      	cbz	r4, 8006f02 <_DrawBitmap+0x266>
 8006ef6:	68a3      	ldr	r3, [r4, #8]
 8006ef8:	4620      	mov	r0, r4
 8006efa:	681b      	ldr	r3, [r3, #0]
 8006efc:	4641      	mov	r1, r8
 8006efe:	463a      	mov	r2, r7
 8006f00:	4798      	blx	r3
 8006f02:	9b04      	ldr	r3, [sp, #16]
 8006f04:	f108 0801 	add.w	r8, r8, #1
 8006f08:	445b      	add	r3, fp
 8006f0a:	4543      	cmp	r3, r8
 8006f0c:	f109 0904 	add.w	r9, r9, #4
 8006f10:	d007      	beq.n	8006f22 <_DrawBitmap+0x286>
 8006f12:	9904      	ldr	r1, [sp, #16]
 8006f14:	ebc1 030a 	rsb	r3, r1, sl
 8006f18:	f813 3008 	ldrb.w	r3, [r3, r8]
 8006f1c:	2b00      	cmp	r3, #0
 8006f1e:	d0f0      	beq.n	8006f02 <_DrawBitmap+0x266>
 8006f20:	e7e6      	b.n	8006ef0 <_DrawBitmap+0x254>
 8006f22:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8006f24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006f26:	4492      	add	sl, r2
 8006f28:	3701      	adds	r7, #1
 8006f2a:	441e      	add	r6, r3
 8006f2c:	e790      	b.n	8006e50 <_DrawBitmap+0x1b4>
 8006f2e:	2c00      	cmp	r4, #0
 8006f30:	f040 824c 	bne.w	80073cc <_DrawBitmap+0x730>
 8006f34:	e24d      	b.n	80073d2 <_DrawBitmap+0x736>
 8006f36:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006f38:	4bb2      	ldr	r3, [pc, #712]	; (8007204 <_DrawBitmap+0x568>)
 8006f3a:	9608      	str	r6, [sp, #32]
 8006f3c:	007f      	lsls	r7, r7, #1
 8006f3e:	970c      	str	r7, [sp, #48]	; 0x30
 8006f40:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006f42:	00bf      	lsls	r7, r7, #2
 8006f44:	970d      	str	r7, [sp, #52]	; 0x34
 8006f46:	9f07      	ldr	r7, [sp, #28]
 8006f48:	9705      	str	r7, [sp, #20]
 8006f4a:	2d00      	cmp	r5, #0
 8006f4c:	bf08      	it	eq
 8006f4e:	461d      	moveq	r5, r3
 8006f50:	9f08      	ldr	r7, [sp, #32]
 8006f52:	9807      	ldr	r0, [sp, #28]
 8006f54:	1f3c      	subs	r4, r7, #4
 8006f56:	9f05      	ldr	r7, [sp, #20]
 8006f58:	1a3b      	subs	r3, r7, r0
 8006f5a:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006f5c:	42bb      	cmp	r3, r7
 8006f5e:	f280 8233 	bge.w	80073c8 <_DrawBitmap+0x72c>
 8006f62:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006f64:	2f02      	cmp	r7, #2
 8006f66:	f000 80ad 	beq.w	80070c4 <_DrawBitmap+0x428>
 8006f6a:	2f04      	cmp	r7, #4
 8006f6c:	f000 8150 	beq.w	8007210 <_DrawBitmap+0x574>
 8006f70:	2f01      	cmp	r7, #1
 8006f72:	f040 821f 	bne.w	80073b4 <_DrawBitmap+0x718>
 8006f76:	f8df 9294 	ldr.w	r9, [pc, #660]	; 800720c <_DrawBitmap+0x570>
 8006f7a:	f8d9 3000 	ldr.w	r3, [r9]
 8006f7e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006f80:	f004 fc76 	bl	800b870 <GUI_ALLOC_LockH>
 8006f84:	f89a 3000 	ldrb.w	r3, [sl]
 8006f88:	4a9f      	ldr	r2, [pc, #636]	; (8007208 <_DrawBitmap+0x56c>)
 8006f8a:	991e      	ldr	r1, [sp, #120]	; 0x78
 8006f8c:	5cd6      	ldrb	r6, [r2, r3]
 8006f8e:	f8d9 3000 	ldr.w	r3, [r9]
 8006f92:	900e      	str	r0, [sp, #56]	; 0x38
 8006f94:	7c1b      	ldrb	r3, [r3, #16]
 8006f96:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 8006f9a:	f003 0303 	and.w	r3, r3, #3
 8006f9e:	2b02      	cmp	r3, #2
 8006fa0:	465f      	mov	r7, fp
 8006fa2:	f1c1 0808 	rsb	r8, r1, #8
 8006fa6:	fa46 f601 	asr.w	r6, r6, r1
 8006faa:	d020      	beq.n	8006fee <_DrawBitmap+0x352>
 8006fac:	2b03      	cmp	r3, #3
 8006fae:	d061      	beq.n	8007074 <_DrawBitmap+0x3d8>
 8006fb0:	2b01      	cmp	r3, #1
 8006fb2:	d05f      	beq.n	8007074 <_DrawBitmap+0x3d8>
 8006fb4:	4652      	mov	r2, sl
 8006fb6:	4547      	cmp	r7, r8
 8006fb8:	bf38      	it	cc
 8006fba:	46b8      	movcc	r8, r7
 8006fbc:	ebc8 0707 	rsb	r7, r8, r7
 8006fc0:	4643      	mov	r3, r8
 8006fc2:	4621      	mov	r1, r4
 8006fc4:	f006 0001 	and.w	r0, r6, #1
 8006fc8:	3b01      	subs	r3, #1
 8006fca:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8006fce:	f841 0b04 	str.w	r0, [r1], #4
 8006fd2:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8006fd6:	d1f5      	bne.n	8006fc4 <_DrawBitmap+0x328>
 8006fd8:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8006fdc:	2f00      	cmp	r7, #0
 8006fde:	d06d      	beq.n	80070bc <_DrawBitmap+0x420>
 8006fe0:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8006fe4:	4988      	ldr	r1, [pc, #544]	; (8007208 <_DrawBitmap+0x56c>)
 8006fe6:	f04f 0808 	mov.w	r8, #8
 8006fea:	5cce      	ldrb	r6, [r1, r3]
 8006fec:	e7e3      	b.n	8006fb6 <_DrawBitmap+0x31a>
 8006fee:	686b      	ldr	r3, [r5, #4]
 8006ff0:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8006ff4:	930b      	str	r3, [sp, #44]	; 0x2c
 8006ff6:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 8006ffa:	4547      	cmp	r7, r8
 8006ffc:	bf38      	it	cc
 8006ffe:	46b8      	movcc	r8, r7
 8007000:	ebc8 0707 	rsb	r7, r8, r7
 8007004:	f1bc 0f00 	cmp.w	ip, #0
 8007008:	d026      	beq.n	8007058 <_DrawBitmap+0x3bc>
 800700a:	b91e      	cbnz	r6, 8007014 <_DrawBitmap+0x378>
 800700c:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8007010:	44c1      	add	r9, r8
 8007012:	e025      	b.n	8007060 <_DrawBitmap+0x3c4>
 8007014:	07f0      	lsls	r0, r6, #31
 8007016:	d50c      	bpl.n	8007032 <_DrawBitmap+0x396>
 8007018:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800701c:	9a05      	ldr	r2, [sp, #20]
 800701e:	681b      	ldr	r3, [r3, #0]
 8007020:	f8cd c00c 	str.w	ip, [sp, #12]
 8007024:	4660      	mov	r0, ip
 8007026:	4649      	mov	r1, r9
 8007028:	4798      	blx	r3
 800702a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800702c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8007030:	6023      	str	r3, [r4, #0]
 8007032:	f1b8 0801 	subs.w	r8, r8, #1
 8007036:	f109 0901 	add.w	r9, r9, #1
 800703a:	f104 0404 	add.w	r4, r4, #4
 800703e:	d00f      	beq.n	8007060 <_DrawBitmap+0x3c4>
 8007040:	0876      	lsrs	r6, r6, #1
 8007042:	e7e2      	b.n	800700a <_DrawBitmap+0x36e>
 8007044:	07f1      	lsls	r1, r6, #31
 8007046:	bf44      	itt	mi
 8007048:	9b0b      	ldrmi	r3, [sp, #44]	; 0x2c
 800704a:	6023      	strmi	r3, [r4, #0]
 800704c:	f1b8 0801 	subs.w	r8, r8, #1
 8007050:	f104 0404 	add.w	r4, r4, #4
 8007054:	d004      	beq.n	8007060 <_DrawBitmap+0x3c4>
 8007056:	0876      	lsrs	r6, r6, #1
 8007058:	2e00      	cmp	r6, #0
 800705a:	d1f3      	bne.n	8007044 <_DrawBitmap+0x3a8>
 800705c:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8007060:	b367      	cbz	r7, 80070bc <_DrawBitmap+0x420>
 8007062:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007064:	4a68      	ldr	r2, [pc, #416]	; (8007208 <_DrawBitmap+0x56c>)
 8007066:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800706a:	9009      	str	r0, [sp, #36]	; 0x24
 800706c:	5cd6      	ldrb	r6, [r2, r3]
 800706e:	f04f 0808 	mov.w	r8, #8
 8007072:	e7c2      	b.n	8006ffa <_DrawBitmap+0x35e>
 8007074:	6803      	ldr	r3, [r0, #0]
 8007076:	691b      	ldr	r3, [r3, #16]
 8007078:	689b      	ldr	r3, [r3, #8]
 800707a:	4798      	blx	r3
 800707c:	4651      	mov	r1, sl
 800707e:	4547      	cmp	r7, r8
 8007080:	bf38      	it	cc
 8007082:	46b8      	movcc	r8, r7
 8007084:	ebc8 0707 	rsb	r7, r8, r7
 8007088:	1d23      	adds	r3, r4, #4
 800708a:	46c6      	mov	lr, r8
 800708c:	07f2      	lsls	r2, r6, #31
 800708e:	d504      	bpl.n	800709a <_DrawBitmap+0x3fe>
 8007090:	f853 2c04 	ldr.w	r2, [r3, #-4]
 8007094:	4042      	eors	r2, r0
 8007096:	f843 2c04 	str.w	r2, [r3, #-4]
 800709a:	f1be 0e01 	subs.w	lr, lr, #1
 800709e:	ea4f 0656 	mov.w	r6, r6, lsr #1
 80070a2:	f103 0304 	add.w	r3, r3, #4
 80070a6:	d1f1      	bne.n	800708c <_DrawBitmap+0x3f0>
 80070a8:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 80070ac:	b137      	cbz	r7, 80070bc <_DrawBitmap+0x420>
 80070ae:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80070b2:	4a55      	ldr	r2, [pc, #340]	; (8007208 <_DrawBitmap+0x56c>)
 80070b4:	f04f 0808 	mov.w	r8, #8
 80070b8:	5cd6      	ldrb	r6, [r2, r3]
 80070ba:	e7e0      	b.n	800707e <_DrawBitmap+0x3e2>
 80070bc:	a80e      	add	r0, sp, #56	; 0x38
 80070be:	f004 fbe5 	bl	800b88c <GUI_ALLOC_UnlockH>
 80070c2:	e177      	b.n	80073b4 <_DrawBitmap+0x718>
 80070c4:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 80070c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80070c8:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 80070cc:	f1c7 0604 	rsb	r6, r7, #4
 80070d0:	f89a 7000 	ldrb.w	r7, [sl]
 80070d4:	409f      	lsls	r7, r3
 80070d6:	4b4d      	ldr	r3, [pc, #308]	; (800720c <_DrawBitmap+0x570>)
 80070d8:	681b      	ldr	r3, [r3, #0]
 80070da:	7c1b      	ldrb	r3, [r3, #16]
 80070dc:	f003 0303 	and.w	r3, r3, #3
 80070e0:	2b01      	cmp	r3, #1
 80070e2:	b2f6      	uxtb	r6, r6
 80070e4:	b2ff      	uxtb	r7, r7
 80070e6:	d066      	beq.n	80071b6 <_DrawBitmap+0x51a>
 80070e8:	d308      	bcc.n	80070fc <_DrawBitmap+0x460>
 80070ea:	2b02      	cmp	r3, #2
 80070ec:	f040 8162 	bne.w	80073b4 <_DrawBitmap+0x718>
 80070f0:	9804      	ldr	r0, [sp, #16]
 80070f2:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 80070f6:	46d8      	mov	r8, fp
 80070f8:	9006      	str	r0, [sp, #24]
 80070fa:	e03e      	b.n	800717a <_DrawBitmap+0x4de>
 80070fc:	4652      	mov	r2, sl
 80070fe:	465b      	mov	r3, fp
 8007100:	429e      	cmp	r6, r3
 8007102:	bfc8      	it	gt
 8007104:	b2de      	uxtbgt	r6, r3
 8007106:	1b9b      	subs	r3, r3, r6
 8007108:	4631      	mov	r1, r6
 800710a:	4620      	mov	r0, r4
 800710c:	ea4f 1c97 	mov.w	ip, r7, lsr #6
 8007110:	3901      	subs	r1, #1
 8007112:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 8007116:	f840 cb04 	str.w	ip, [r0], #4
 800711a:	00bf      	lsls	r7, r7, #2
 800711c:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8007120:	b2ff      	uxtb	r7, r7
 8007122:	d1f3      	bne.n	800710c <_DrawBitmap+0x470>
 8007124:	3e01      	subs	r6, #1
 8007126:	b2f6      	uxtb	r6, r6
 8007128:	3601      	adds	r6, #1
 800712a:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 800712e:	2b00      	cmp	r3, #0
 8007130:	f000 8140 	beq.w	80073b4 <_DrawBitmap+0x718>
 8007134:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 8007138:	2604      	movs	r6, #4
 800713a:	e7e1      	b.n	8007100 <_DrawBitmap+0x464>
 800713c:	9906      	ldr	r1, [sp, #24]
 800713e:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 8007142:	4449      	add	r1, r9
 8007144:	d122      	bne.n	800718c <_DrawBitmap+0x4f0>
 8007146:	f109 0901 	add.w	r9, r9, #1
 800714a:	fa5f f289 	uxtb.w	r2, r9
 800714e:	00bf      	lsls	r7, r7, #2
 8007150:	4296      	cmp	r6, r2
 8007152:	b2ff      	uxtb	r7, r7
 8007154:	d1f2      	bne.n	800713c <_DrawBitmap+0x4a0>
 8007156:	9f06      	ldr	r7, [sp, #24]
 8007158:	3e01      	subs	r6, #1
 800715a:	b2f6      	uxtb	r6, r6
 800715c:	1c7b      	adds	r3, r7, #1
 800715e:	1c72      	adds	r2, r6, #1
 8007160:	199e      	adds	r6, r3, r6
 8007162:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8007166:	9606      	str	r6, [sp, #24]
 8007168:	f1b8 0f00 	cmp.w	r8, #0
 800716c:	f000 8122 	beq.w	80073b4 <_DrawBitmap+0x718>
 8007170:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007172:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 8007176:	9309      	str	r3, [sp, #36]	; 0x24
 8007178:	2604      	movs	r6, #4
 800717a:	4546      	cmp	r6, r8
 800717c:	bfc8      	it	gt
 800717e:	fa5f f688 	uxtbgt.w	r6, r8
 8007182:	ebc6 0808 	rsb	r8, r6, r8
 8007186:	f04f 0900 	mov.w	r9, #0
 800718a:	e7d7      	b.n	800713c <_DrawBitmap+0x4a0>
 800718c:	09ba      	lsrs	r2, r7, #6
 800718e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8007192:	f844 2029 	str.w	r2, [r4, r9, lsl #2]
 8007196:	f1bc 0f00 	cmp.w	ip, #0
 800719a:	d0d4      	beq.n	8007146 <_DrawBitmap+0x4aa>
 800719c:	f8dc 2008 	ldr.w	r2, [ip, #8]
 80071a0:	6812      	ldr	r2, [r2, #0]
 80071a2:	920b      	str	r2, [sp, #44]	; 0x2c
 80071a4:	4660      	mov	r0, ip
 80071a6:	f8cd c00c 	str.w	ip, [sp, #12]
 80071aa:	9a05      	ldr	r2, [sp, #20]
 80071ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80071ae:	4798      	blx	r3
 80071b0:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80071b4:	e7c7      	b.n	8007146 <_DrawBitmap+0x4aa>
 80071b6:	4650      	mov	r0, sl
 80071b8:	465b      	mov	r3, fp
 80071ba:	429e      	cmp	r6, r3
 80071bc:	bfc8      	it	gt
 80071be:	b2de      	uxtbgt	r6, r3
 80071c0:	1b9b      	subs	r3, r3, r6
 80071c2:	1d22      	adds	r2, r4, #4
 80071c4:	46b4      	mov	ip, r6
 80071c6:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 80071ca:	d005      	beq.n	80071d8 <_DrawBitmap+0x53c>
 80071cc:	f852 1c04 	ldr.w	r1, [r2, #-4]
 80071d0:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 80071d4:	f842 1c04 	str.w	r1, [r2, #-4]
 80071d8:	f10c 3cff 	add.w	ip, ip, #4294967295
 80071dc:	00bf      	lsls	r7, r7, #2
 80071de:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 80071e2:	b2ff      	uxtb	r7, r7
 80071e4:	f102 0204 	add.w	r2, r2, #4
 80071e8:	d1ed      	bne.n	80071c6 <_DrawBitmap+0x52a>
 80071ea:	3e01      	subs	r6, #1
 80071ec:	b2f6      	uxtb	r6, r6
 80071ee:	3601      	adds	r6, #1
 80071f0:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 80071f4:	2b00      	cmp	r3, #0
 80071f6:	f000 80dd 	beq.w	80073b4 <_DrawBitmap+0x718>
 80071fa:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 80071fe:	2604      	movs	r6, #4
 8007200:	e7db      	b.n	80071ba <_DrawBitmap+0x51e>
 8007202:	bf00      	nop
 8007204:	080102dc 	.word	0x080102dc
 8007208:	080122dc 	.word	0x080122dc
 800720c:	200000b8 	.word	0x200000b8
 8007210:	4a71      	ldr	r2, [pc, #452]	; (80073d8 <_DrawBitmap+0x73c>)
 8007212:	f89a 3000 	ldrb.w	r3, [sl]
 8007216:	6812      	ldr	r2, [r2, #0]
 8007218:	980d      	ldr	r0, [sp, #52]	; 0x34
 800721a:	7c12      	ldrb	r2, [r2, #16]
 800721c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800721e:	f002 0203 	and.w	r2, r2, #3
 8007222:	4083      	lsls	r3, r0
 8007224:	2a01      	cmp	r2, #1
 8007226:	b2de      	uxtb	r6, r3
 8007228:	f000 809c 	beq.w	8007364 <_DrawBitmap+0x6c8>
 800722c:	d302      	bcc.n	8007234 <_DrawBitmap+0x598>
 800722e:	2a02      	cmp	r2, #2
 8007230:	d035      	beq.n	800729e <_DrawBitmap+0x602>
 8007232:	e0bf      	b.n	80073b4 <_DrawBitmap+0x718>
 8007234:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8007236:	b15f      	cbz	r7, 8007250 <_DrawBitmap+0x5b4>
 8007238:	0936      	lsrs	r6, r6, #4
 800723a:	f10a 0201 	add.w	r2, sl, #1
 800723e:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8007242:	6023      	str	r3, [r4, #0]
 8007244:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8007248:	9c08      	ldr	r4, [sp, #32]
 800724a:	f10b 33ff 	add.w	r3, fp, #4294967295
 800724e:	e001      	b.n	8007254 <_DrawBitmap+0x5b8>
 8007250:	465b      	mov	r3, fp
 8007252:	4652      	mov	r2, sl
 8007254:	2b01      	cmp	r3, #1
 8007256:	dd1a      	ble.n	800728e <_DrawBitmap+0x5f2>
 8007258:	1058      	asrs	r0, r3, #1
 800725a:	f104 0108 	add.w	r1, r4, #8
 800725e:	f003 0301 	and.w	r3, r3, #1
 8007262:	eb02 0800 	add.w	r8, r2, r0
 8007266:	ea4f 1c16 	mov.w	ip, r6, lsr #4
 800726a:	f006 060f 	and.w	r6, r6, #15
 800726e:	f855 702c 	ldr.w	r7, [r5, ip, lsl #2]
 8007272:	f841 7c08 	str.w	r7, [r1, #-8]
 8007276:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 800727a:	f841 6c04 	str.w	r6, [r1, #-4]
 800727e:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8007282:	4542      	cmp	r2, r8
 8007284:	f101 0108 	add.w	r1, r1, #8
 8007288:	d1ed      	bne.n	8007266 <_DrawBitmap+0x5ca>
 800728a:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
 800728e:	2b00      	cmp	r3, #0
 8007290:	f000 8090 	beq.w	80073b4 <_DrawBitmap+0x718>
 8007294:	0936      	lsrs	r6, r6, #4
 8007296:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800729a:	6023      	str	r3, [r4, #0]
 800729c:	e08a      	b.n	80073b4 <_DrawBitmap+0x718>
 800729e:	981e      	ldr	r0, [sp, #120]	; 0x78
 80072a0:	b1c0      	cbz	r0, 80072d4 <_DrawBitmap+0x638>
 80072a2:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 80072a6:	d00a      	beq.n	80072be <_DrawBitmap+0x622>
 80072a8:	0936      	lsrs	r6, r6, #4
 80072aa:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 80072ae:	6023      	str	r3, [r4, #0]
 80072b0:	b12f      	cbz	r7, 80072be <_DrawBitmap+0x622>
 80072b2:	68bb      	ldr	r3, [r7, #8]
 80072b4:	9904      	ldr	r1, [sp, #16]
 80072b6:	681b      	ldr	r3, [r3, #0]
 80072b8:	9a05      	ldr	r2, [sp, #20]
 80072ba:	4638      	mov	r0, r7
 80072bc:	4798      	blx	r3
 80072be:	9904      	ldr	r1, [sp, #16]
 80072c0:	9c08      	ldr	r4, [sp, #32]
 80072c2:	f89a 6001 	ldrb.w	r6, [sl, #1]
 80072c6:	f101 0801 	add.w	r8, r1, #1
 80072ca:	f10b 3cff 	add.w	ip, fp, #4294967295
 80072ce:	f10a 0901 	add.w	r9, sl, #1
 80072d2:	e011      	b.n	80072f8 <_DrawBitmap+0x65c>
 80072d4:	46dc      	mov	ip, fp
 80072d6:	46d1      	mov	r9, sl
 80072d8:	f8dd 8010 	ldr.w	r8, [sp, #16]
 80072dc:	e00c      	b.n	80072f8 <_DrawBitmap+0x65c>
 80072de:	f016 0ff0 	tst.w	r6, #240	; 0xf0
 80072e2:	d10d      	bne.n	8007300 <_DrawBitmap+0x664>
 80072e4:	f016 060f 	ands.w	r6, r6, #15
 80072e8:	d11b      	bne.n	8007322 <_DrawBitmap+0x686>
 80072ea:	f819 6f01 	ldrb.w	r6, [r9, #1]!
 80072ee:	3408      	adds	r4, #8
 80072f0:	f108 0802 	add.w	r8, r8, #2
 80072f4:	f1ac 0c02 	sub.w	ip, ip, #2
 80072f8:	f1bc 0f01 	cmp.w	ip, #1
 80072fc:	dcef      	bgt.n	80072de <_DrawBitmap+0x642>
 80072fe:	e021      	b.n	8007344 <_DrawBitmap+0x6a8>
 8007300:	0933      	lsrs	r3, r6, #4
 8007302:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8007306:	6023      	str	r3, [r4, #0]
 8007308:	2f00      	cmp	r7, #0
 800730a:	d0eb      	beq.n	80072e4 <_DrawBitmap+0x648>
 800730c:	68bb      	ldr	r3, [r7, #8]
 800730e:	9a05      	ldr	r2, [sp, #20]
 8007310:	681b      	ldr	r3, [r3, #0]
 8007312:	f8cd c00c 	str.w	ip, [sp, #12]
 8007316:	4638      	mov	r0, r7
 8007318:	4641      	mov	r1, r8
 800731a:	4798      	blx	r3
 800731c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8007320:	e7e0      	b.n	80072e4 <_DrawBitmap+0x648>
 8007322:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8007326:	6063      	str	r3, [r4, #4]
 8007328:	2f00      	cmp	r7, #0
 800732a:	d0de      	beq.n	80072ea <_DrawBitmap+0x64e>
 800732c:	68bb      	ldr	r3, [r7, #8]
 800732e:	9a05      	ldr	r2, [sp, #20]
 8007330:	681b      	ldr	r3, [r3, #0]
 8007332:	f8cd c00c 	str.w	ip, [sp, #12]
 8007336:	4638      	mov	r0, r7
 8007338:	f108 0101 	add.w	r1, r8, #1
 800733c:	4798      	blx	r3
 800733e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8007342:	e7d2      	b.n	80072ea <_DrawBitmap+0x64e>
 8007344:	f1bc 0f00 	cmp.w	ip, #0
 8007348:	d034      	beq.n	80073b4 <_DrawBitmap+0x718>
 800734a:	0936      	lsrs	r6, r6, #4
 800734c:	d032      	beq.n	80073b4 <_DrawBitmap+0x718>
 800734e:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8007352:	6023      	str	r3, [r4, #0]
 8007354:	b377      	cbz	r7, 80073b4 <_DrawBitmap+0x718>
 8007356:	68bb      	ldr	r3, [r7, #8]
 8007358:	9a05      	ldr	r2, [sp, #20]
 800735a:	681b      	ldr	r3, [r3, #0]
 800735c:	4638      	mov	r0, r7
 800735e:	4641      	mov	r1, r8
 8007360:	4798      	blx	r3
 8007362:	e027      	b.n	80073b4 <_DrawBitmap+0x718>
 8007364:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8007366:	f1c7 0302 	rsb	r3, r7, #2
 800736a:	b2db      	uxtb	r3, r3
 800736c:	4657      	mov	r7, sl
 800736e:	465a      	mov	r2, fp
 8007370:	4293      	cmp	r3, r2
 8007372:	bfc8      	it	gt
 8007374:	b2d3      	uxtbgt	r3, r2
 8007376:	1ad2      	subs	r2, r2, r3
 8007378:	1d20      	adds	r0, r4, #4
 800737a:	469c      	mov	ip, r3
 800737c:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 8007380:	d005      	beq.n	800738e <_DrawBitmap+0x6f2>
 8007382:	f850 1c04 	ldr.w	r1, [r0, #-4]
 8007386:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 800738a:	f840 1c04 	str.w	r1, [r0, #-4]
 800738e:	f10c 3cff 	add.w	ip, ip, #4294967295
 8007392:	0136      	lsls	r6, r6, #4
 8007394:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 8007398:	b2f6      	uxtb	r6, r6
 800739a:	f100 0004 	add.w	r0, r0, #4
 800739e:	d1ed      	bne.n	800737c <_DrawBitmap+0x6e0>
 80073a0:	3b01      	subs	r3, #1
 80073a2:	b2db      	uxtb	r3, r3
 80073a4:	3301      	adds	r3, #1
 80073a6:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 80073aa:	b11a      	cbz	r2, 80073b4 <_DrawBitmap+0x718>
 80073ac:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 80073b0:	2302      	movs	r3, #2
 80073b2:	e7dd      	b.n	8007370 <_DrawBitmap+0x6d4>
 80073b4:	9b05      	ldr	r3, [sp, #20]
 80073b6:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80073b8:	3301      	adds	r3, #1
 80073ba:	44ba      	add	sl, r7
 80073bc:	9305      	str	r3, [sp, #20]
 80073be:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80073c0:	9b08      	ldr	r3, [sp, #32]
 80073c2:	443b      	add	r3, r7
 80073c4:	9308      	str	r3, [sp, #32]
 80073c6:	e5c3      	b.n	8006f50 <_DrawBitmap+0x2b4>
 80073c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80073ca:	b113      	cbz	r3, 80073d2 <_DrawBitmap+0x736>
 80073cc:	a80f      	add	r0, sp, #60	; 0x3c
 80073ce:	f004 fa5d 	bl	800b88c <GUI_ALLOC_UnlockH>
 80073d2:	b011      	add	sp, #68	; 0x44
 80073d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80073d8:	200000b8 	.word	0x200000b8

080073dc <GUI_MEMDEV__WriteToActiveAt>:
 80073dc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80073e0:	460e      	mov	r6, r1
 80073e2:	4690      	mov	r8, r2
 80073e4:	4607      	mov	r7, r0
 80073e6:	f004 fa43 	bl	800b870 <GUI_ALLOC_LockH>
 80073ea:	6803      	ldr	r3, [r0, #0]
 80073ec:	ac02      	add	r4, sp, #8
 80073ee:	68db      	ldr	r3, [r3, #12]
 80073f0:	f844 0d04 	str.w	r0, [r4, #-4]!
 80073f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80073f6:	2000      	movs	r0, #0
 80073f8:	2116      	movs	r1, #22
 80073fa:	4798      	blx	r3
 80073fc:	4605      	mov	r5, r0
 80073fe:	4620      	mov	r0, r4
 8007400:	f004 fa44 	bl	800b88c <GUI_ALLOC_UnlockH>
 8007404:	b11d      	cbz	r5, 800740e <GUI_MEMDEV__WriteToActiveAt+0x32>
 8007406:	4638      	mov	r0, r7
 8007408:	4631      	mov	r1, r6
 800740a:	4642      	mov	r2, r8
 800740c:	47a8      	blx	r5
 800740e:	b002      	add	sp, #8
 8007410:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007414 <GUI_MEMDEV__CreateFixed>:
 8007414:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007418:	4e3e      	ldr	r6, [pc, #248]	; (8007514 <GUI_MEMDEV__CreateFixed+0x100>)
 800741a:	b087      	sub	sp, #28
 800741c:	461d      	mov	r5, r3
 800741e:	6833      	ldr	r3, [r6, #0]
 8007420:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8007422:	7c5b      	ldrb	r3, [r3, #17]
 8007424:	4683      	mov	fp, r0
 8007426:	468a      	mov	sl, r1
 8007428:	4690      	mov	r8, r2
 800742a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800742c:	9912      	ldr	r1, [sp, #72]	; 0x48
 800742e:	2200      	movs	r2, #0
 8007430:	f003 fa72 	bl	800a918 <GUI_DEVICE_Create>
 8007434:	4604      	mov	r4, r0
 8007436:	2800      	cmp	r0, #0
 8007438:	d033      	beq.n	80074a2 <GUI_MEMDEV__CreateFixed+0x8e>
 800743a:	6903      	ldr	r3, [r0, #16]
 800743c:	689b      	ldr	r3, [r3, #8]
 800743e:	4798      	blx	r3
 8007440:	f001 fb15 	bl	8008a6e <LCD__GetBPPDevice>
 8007444:	fb08 f600 	mul.w	r6, r8, r0
 8007448:	9003      	str	r0, [sp, #12]
 800744a:	3607      	adds	r6, #7
 800744c:	f004 fb50 	bl	800baf0 <GUI_ALLOC_RequestSize>
 8007450:	f017 0901 	ands.w	r9, r7, #1
 8007454:	ea4f 06d6 	mov.w	r6, r6, lsr #3
 8007458:	d104      	bne.n	8007464 <GUI_MEMDEV__CreateFixed+0x50>
 800745a:	2304      	movs	r3, #4
 800745c:	fb90 f0f3 	sdiv	r0, r0, r3
 8007460:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8007464:	2d00      	cmp	r5, #0
 8007466:	dc09      	bgt.n	800747c <GUI_MEMDEV__CreateFixed+0x68>
 8007468:	b11e      	cbz	r6, 8007472 <GUI_MEMDEV__CreateFixed+0x5e>
 800746a:	3818      	subs	r0, #24
 800746c:	fbb0 f0f6 	udiv	r0, r0, r6
 8007470:	e000      	b.n	8007474 <GUI_MEMDEV__CreateFixed+0x60>
 8007472:	4630      	mov	r0, r6
 8007474:	426d      	negs	r5, r5
 8007476:	42a8      	cmp	r0, r5
 8007478:	bfb8      	it	lt
 800747a:	4605      	movlt	r5, r0
 800747c:	f1b9 0f00 	cmp.w	r9, #0
 8007480:	d109      	bne.n	8007496 <GUI_MEMDEV__CreateFixed+0x82>
 8007482:	f8cd 9000 	str.w	r9, [sp]
 8007486:	4658      	mov	r0, fp
 8007488:	4651      	mov	r1, sl
 800748a:	4642      	mov	r2, r8
 800748c:	462b      	mov	r3, r5
 800748e:	f006 fc41 	bl	800dd14 <GUI_USAGE_BM_Create>
 8007492:	4607      	mov	r7, r0
 8007494:	e000      	b.n	8007498 <GUI_MEMDEV__CreateFixed+0x84>
 8007496:	2700      	movs	r7, #0
 8007498:	2d00      	cmp	r5, #0
 800749a:	dc04      	bgt.n	80074a6 <GUI_MEMDEV__CreateFixed+0x92>
 800749c:	4620      	mov	r0, r4
 800749e:	f003 fa39 	bl	800a914 <GUI_DEVICE_Delete>
 80074a2:	2000      	movs	r0, #0
 80074a4:	e032      	b.n	800750c <GUI_MEMDEV__CreateFixed+0xf8>
 80074a6:	fb06 f005 	mul.w	r0, r6, r5
 80074aa:	3018      	adds	r0, #24
 80074ac:	f1b9 0f00 	cmp.w	r9, #0
 80074b0:	d002      	beq.n	80074b8 <GUI_MEMDEV__CreateFixed+0xa4>
 80074b2:	f004 fba9 	bl	800bc08 <GUI_ALLOC_AllocNoInit>
 80074b6:	e001      	b.n	80074bc <GUI_MEMDEV__CreateFixed+0xa8>
 80074b8:	f004 fbd4 	bl	800bc64 <GUI_ALLOC_AllocZero>
 80074bc:	4681      	mov	r9, r0
 80074be:	b940      	cbnz	r0, 80074d2 <GUI_MEMDEV__CreateFixed+0xbe>
 80074c0:	4620      	mov	r0, r4
 80074c2:	f003 fa27 	bl	800a914 <GUI_DEVICE_Delete>
 80074c6:	2f00      	cmp	r7, #0
 80074c8:	d0eb      	beq.n	80074a2 <GUI_MEMDEV__CreateFixed+0x8e>
 80074ca:	4638      	mov	r0, r7
 80074cc:	f004 fa0a 	bl	800b8e4 <GUI_ALLOC_Free>
 80074d0:	e01b      	b.n	800750a <GUI_MEMDEV__CreateFixed+0xf6>
 80074d2:	f004 f9cd 	bl	800b870 <GUI_ALLOC_LockH>
 80074d6:	4603      	mov	r3, r0
 80074d8:	a806      	add	r0, sp, #24
 80074da:	9a03      	ldr	r2, [sp, #12]
 80074dc:	f840 3d04 	str.w	r3, [r0, #-4]!
 80074e0:	611a      	str	r2, [r3, #16]
 80074e2:	601c      	str	r4, [r3, #0]
 80074e4:	f8a3 b004 	strh.w	fp, [r3, #4]
 80074e8:	f8a3 a006 	strh.w	sl, [r3, #6]
 80074ec:	f8a3 8008 	strh.w	r8, [r3, #8]
 80074f0:	815d      	strh	r5, [r3, #10]
 80074f2:	60de      	str	r6, [r3, #12]
 80074f4:	615f      	str	r7, [r3, #20]
 80074f6:	f004 f9c9 	bl	800b88c <GUI_ALLOC_UnlockH>
 80074fa:	4a06      	ldr	r2, [pc, #24]	; (8007514 <GUI_MEMDEV__CreateFixed+0x100>)
 80074fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80074fe:	6123      	str	r3, [r4, #16]
 8007500:	6813      	ldr	r3, [r2, #0]
 8007502:	f8c4 9008 	str.w	r9, [r4, #8]
 8007506:	7c5b      	ldrb	r3, [r3, #17]
 8007508:	61a3      	str	r3, [r4, #24]
 800750a:	4648      	mov	r0, r9
 800750c:	b007      	add	sp, #28
 800750e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007512:	bf00      	nop
 8007514:	200000b8 	.word	0x200000b8

08007518 <GUI_MEMDEV_GetBitsPerPixel>:
 8007518:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800751a:	4605      	mov	r5, r0
 800751c:	b170      	cbz	r0, 800753c <GUI_MEMDEV_GetBitsPerPixel+0x24>
 800751e:	f004 f9a7 	bl	800b870 <GUI_ALLOC_LockH>
 8007522:	6803      	ldr	r3, [r0, #0]
 8007524:	ac02      	add	r4, sp, #8
 8007526:	691b      	ldr	r3, [r3, #16]
 8007528:	f844 0d04 	str.w	r0, [r4, #-4]!
 800752c:	689b      	ldr	r3, [r3, #8]
 800752e:	4798      	blx	r3
 8007530:	f001 fa9d 	bl	8008a6e <LCD__GetBPPDevice>
 8007534:	4605      	mov	r5, r0
 8007536:	4620      	mov	r0, r4
 8007538:	f004 f9a8 	bl	800b88c <GUI_ALLOC_UnlockH>
 800753c:	4628      	mov	r0, r5
 800753e:	b003      	add	sp, #12
 8007540:	bd30      	pop	{r4, r5, pc}
	...

08007544 <GUI_MEMDEV_Delete>:
 8007544:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007546:	4604      	mov	r4, r0
 8007548:	b1d0      	cbz	r0, 8007580 <GUI_MEMDEV_Delete+0x3c>
 800754a:	4b0e      	ldr	r3, [pc, #56]	; (8007584 <GUI_MEMDEV_Delete+0x40>)
 800754c:	681b      	ldr	r3, [r3, #0]
 800754e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007550:	4283      	cmp	r3, r0
 8007552:	d101      	bne.n	8007558 <GUI_MEMDEV_Delete+0x14>
 8007554:	f003 fd20 	bl	800af98 <GUI_SelectLCD>
 8007558:	4620      	mov	r0, r4
 800755a:	f004 f989 	bl	800b870 <GUI_ALLOC_LockH>
 800755e:	9001      	str	r0, [sp, #4]
 8007560:	6940      	ldr	r0, [r0, #20]
 8007562:	b108      	cbz	r0, 8007568 <GUI_MEMDEV_Delete+0x24>
 8007564:	f006 fc02 	bl	800dd6c <GUI_USAGE_DecUseCnt>
 8007568:	ad02      	add	r5, sp, #8
 800756a:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 800756e:	6818      	ldr	r0, [r3, #0]
 8007570:	f003 f9d0 	bl	800a914 <GUI_DEVICE_Delete>
 8007574:	4628      	mov	r0, r5
 8007576:	f004 f989 	bl	800b88c <GUI_ALLOC_UnlockH>
 800757a:	4620      	mov	r0, r4
 800757c:	f004 f9b2 	bl	800b8e4 <GUI_ALLOC_Free>
 8007580:	b003      	add	sp, #12
 8007582:	bd30      	pop	{r4, r5, pc}
 8007584:	200000b8 	.word	0x200000b8

08007588 <GUI_MEMDEV_CreateEx>:
 8007588:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800758c:	469a      	mov	sl, r3
 800758e:	4b19      	ldr	r3, [pc, #100]	; (80075f4 <GUI_MEMDEV_CreateEx+0x6c>)
 8007590:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8007592:	681b      	ldr	r3, [r3, #0]
 8007594:	4607      	mov	r7, r0
 8007596:	7c58      	ldrb	r0, [r3, #17]
 8007598:	4b17      	ldr	r3, [pc, #92]	; (80075f8 <GUI_MEMDEV_CreateEx+0x70>)
 800759a:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 800759e:	4688      	mov	r8, r1
 80075a0:	4691      	mov	r9, r2
 80075a2:	68e3      	ldr	r3, [r4, #12]
 80075a4:	681b      	ldr	r3, [r3, #0]
 80075a6:	2b04      	cmp	r3, #4
 80075a8:	d006      	beq.n	80075b8 <GUI_MEMDEV_CreateEx+0x30>
 80075aa:	6824      	ldr	r4, [r4, #0]
 80075ac:	2c00      	cmp	r4, #0
 80075ae:	d1f8      	bne.n	80075a2 <GUI_MEMDEV_CreateEx+0x1a>
 80075b0:	f003 f9a0 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 80075b4:	4604      	mov	r4, r0
 80075b6:	b130      	cbz	r0, 80075c6 <GUI_MEMDEV_CreateEx+0x3e>
 80075b8:	68e3      	ldr	r3, [r4, #12]
 80075ba:	4620      	mov	r0, r4
 80075bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80075be:	2101      	movs	r1, #1
 80075c0:	4798      	blx	r3
 80075c2:	4606      	mov	r6, r0
 80075c4:	b908      	cbnz	r0, 80075ca <GUI_MEMDEV_CreateEx+0x42>
 80075c6:	2000      	movs	r0, #0
 80075c8:	e010      	b.n	80075ec <GUI_MEMDEV_CreateEx+0x64>
 80075ca:	6924      	ldr	r4, [r4, #16]
 80075cc:	68a3      	ldr	r3, [r4, #8]
 80075ce:	4798      	blx	r3
 80075d0:	3001      	adds	r0, #1
 80075d2:	bf04      	itt	eq
 80075d4:	f045 0501 	orreq.w	r5, r5, #1
 80075d8:	4c08      	ldreq	r4, [pc, #32]	; (80075fc <GUI_MEMDEV_CreateEx+0x74>)
 80075da:	9402      	str	r4, [sp, #8]
 80075dc:	e88d 0060 	stmia.w	sp, {r5, r6}
 80075e0:	4638      	mov	r0, r7
 80075e2:	4641      	mov	r1, r8
 80075e4:	464a      	mov	r2, r9
 80075e6:	4653      	mov	r3, sl
 80075e8:	f7ff ff14 	bl	8007414 <GUI_MEMDEV__CreateFixed>
 80075ec:	b004      	add	sp, #16
 80075ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80075f2:	bf00      	nop
 80075f4:	200000b8 	.word	0x200000b8
 80075f8:	20002d24 	.word	0x20002d24
 80075fc:	08012474 	.word	0x08012474

08007600 <GUI_MEMDEV_Select>:
 8007600:	4b11      	ldr	r3, [pc, #68]	; (8007648 <GUI_MEMDEV_Select+0x48>)
 8007602:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007604:	681a      	ldr	r2, [r3, #0]
 8007606:	4604      	mov	r4, r0
 8007608:	6e16      	ldr	r6, [r2, #96]	; 0x60
 800760a:	461f      	mov	r7, r3
 800760c:	b910      	cbnz	r0, 8007614 <GUI_MEMDEV_Select+0x14>
 800760e:	f003 fcc3 	bl	800af98 <GUI_SelectLCD>
 8007612:	e016      	b.n	8007642 <GUI_MEMDEV_Select+0x42>
 8007614:	b10e      	cbz	r6, 800761a <GUI_MEMDEV_Select+0x1a>
 8007616:	f003 fcbf 	bl	800af98 <GUI_SelectLCD>
 800761a:	f7fe ff31 	bl	8006480 <WM_Deactivate>
 800761e:	4620      	mov	r0, r4
 8007620:	f004 f926 	bl	800b870 <GUI_ALLOC_LockH>
 8007624:	ad02      	add	r5, sp, #8
 8007626:	683b      	ldr	r3, [r7, #0]
 8007628:	f845 0d04 	str.w	r0, [r5, #-4]!
 800762c:	661c      	str	r4, [r3, #96]	; 0x60
 800762e:	6800      	ldr	r0, [r0, #0]
 8007630:	f003 f9b2 	bl	800a998 <GUI_DEVICE_Link>
 8007634:	4628      	mov	r0, r5
 8007636:	f004 f929 	bl	800b88c <GUI_ALLOC_UnlockH>
 800763a:	f001 f8cf 	bl	80087dc <LCD_UpdateColorIndices>
 800763e:	f001 fcd7 	bl	8008ff0 <LCD_SetClipRectMax>
 8007642:	4630      	mov	r0, r6
 8007644:	b003      	add	sp, #12
 8007646:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007648:	200000b8 	.word	0x200000b8

0800764c <GUI_MEMDEV_CopyToLCDAt>:
 800764c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007650:	460c      	mov	r4, r1
 8007652:	b085      	sub	sp, #20
 8007654:	4615      	mov	r5, r2
 8007656:	4606      	mov	r6, r0
 8007658:	2800      	cmp	r0, #0
 800765a:	d041      	beq.n	80076e0 <GUI_MEMDEV_CopyToLCDAt+0x94>
 800765c:	2000      	movs	r0, #0
 800765e:	f003 fca8 	bl	800afb2 <GUI_SetDrawMode>
 8007662:	4b21      	ldr	r3, [pc, #132]	; (80076e8 <GUI_MEMDEV_CopyToLCDAt+0x9c>)
 8007664:	681b      	ldr	r3, [r3, #0]
 8007666:	4607      	mov	r7, r0
 8007668:	4630      	mov	r0, r6
 800766a:	f8d3 8060 	ldr.w	r8, [r3, #96]	; 0x60
 800766e:	f004 f8ff 	bl	800b870 <GUI_ALLOC_LockH>
 8007672:	6803      	ldr	r3, [r0, #0]
 8007674:	9001      	str	r0, [sp, #4]
 8007676:	6998      	ldr	r0, [r3, #24]
 8007678:	f002 fae8 	bl	8009c4c <GUI_SelectLayer>
 800767c:	4b1b      	ldr	r3, [pc, #108]	; (80076ec <GUI_MEMDEV_CopyToLCDAt+0xa0>)
 800767e:	429c      	cmp	r4, r3
 8007680:	9b01      	ldr	r3, [sp, #4]
 8007682:	bf04      	itt	eq
 8007684:	f9b3 4004 	ldrsheq.w	r4, [r3, #4]
 8007688:	f9b3 5006 	ldrsheq.w	r5, [r3, #6]
 800768c:	891a      	ldrh	r2, [r3, #8]
 800768e:	895b      	ldrh	r3, [r3, #10]
 8007690:	f8ad 4008 	strh.w	r4, [sp, #8]
 8007694:	3a01      	subs	r2, #1
 8007696:	3b01      	subs	r3, #1
 8007698:	4422      	add	r2, r4
 800769a:	442b      	add	r3, r5
 800769c:	4681      	mov	r9, r0
 800769e:	f8ad 200c 	strh.w	r2, [sp, #12]
 80076a2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80076a6:	f8ad 500a 	strh.w	r5, [sp, #10]
 80076aa:	f7fe fee1 	bl	8006470 <WM_Activate>
 80076ae:	a801      	add	r0, sp, #4
 80076b0:	f004 f8ec 	bl	800b88c <GUI_ALLOC_UnlockH>
 80076b4:	a802      	add	r0, sp, #8
 80076b6:	f7fe fd2b 	bl	8006110 <WM__InitIVRSearch>
 80076ba:	b948      	cbnz	r0, 80076d0 <GUI_MEMDEV_CopyToLCDAt+0x84>
 80076bc:	4648      	mov	r0, r9
 80076be:	f002 fac5 	bl	8009c4c <GUI_SelectLayer>
 80076c2:	4640      	mov	r0, r8
 80076c4:	f7ff ff9c 	bl	8007600 <GUI_MEMDEV_Select>
 80076c8:	4638      	mov	r0, r7
 80076ca:	f003 fc72 	bl	800afb2 <GUI_SetDrawMode>
 80076ce:	e007      	b.n	80076e0 <GUI_MEMDEV_CopyToLCDAt+0x94>
 80076d0:	4630      	mov	r0, r6
 80076d2:	4621      	mov	r1, r4
 80076d4:	462a      	mov	r2, r5
 80076d6:	f005 fde9 	bl	800d2ac <GUI_MEMDEV__WriteToActiveOpaque>
 80076da:	f7fe fc57 	bl	8005f8c <WM__GetNextIVR>
 80076de:	e7ec      	b.n	80076ba <GUI_MEMDEV_CopyToLCDAt+0x6e>
 80076e0:	b005      	add	sp, #20
 80076e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80076e6:	bf00      	nop
 80076e8:	200000b8 	.word	0x200000b8
 80076ec:	fffff001 	.word	0xfffff001

080076f0 <GUI_MEMDEV_CopyToLCD>:
 80076f0:	4901      	ldr	r1, [pc, #4]	; (80076f8 <GUI_MEMDEV_CopyToLCD+0x8>)
 80076f2:	460a      	mov	r2, r1
 80076f4:	f7ff bfaa 	b.w	800764c <GUI_MEMDEV_CopyToLCDAt>
 80076f8:	fffff001 	.word	0xfffff001

080076fc <_SetPhysRAMAddr>:
 80076fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80076fe:	4604      	mov	r4, r0
 8007700:	460e      	mov	r6, r1
 8007702:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 8007706:	212a      	movs	r1, #42	; 0x2a
 8007708:	4615      	mov	r5, r2
 800770a:	4798      	blx	r3
 800770c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800770e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007712:	4431      	add	r1, r6
 8007714:	4620      	mov	r0, r4
 8007716:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800771a:	4798      	blx	r3
 800771c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800771e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007722:	b2b7      	uxth	r7, r6
 8007724:	4439      	add	r1, r7
 8007726:	4620      	mov	r0, r4
 8007728:	b2c9      	uxtb	r1, r1
 800772a:	4798      	blx	r3
 800772c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800772e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007732:	4431      	add	r1, r6
 8007734:	4620      	mov	r0, r4
 8007736:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800773a:	4798      	blx	r3
 800773c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800773e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007742:	4439      	add	r1, r7
 8007744:	4620      	mov	r0, r4
 8007746:	b2c9      	uxtb	r1, r1
 8007748:	4798      	blx	r3
 800774a:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800774e:	4620      	mov	r0, r4
 8007750:	212b      	movs	r1, #43	; 0x2b
 8007752:	4798      	blx	r3
 8007754:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007756:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800775a:	4429      	add	r1, r5
 800775c:	4620      	mov	r0, r4
 800775e:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8007762:	4798      	blx	r3
 8007764:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007766:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800776a:	b2ae      	uxth	r6, r5
 800776c:	4431      	add	r1, r6
 800776e:	4620      	mov	r0, r4
 8007770:	b2c9      	uxtb	r1, r1
 8007772:	4798      	blx	r3
 8007774:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007776:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800777a:	4429      	add	r1, r5
 800777c:	4620      	mov	r0, r4
 800777e:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8007782:	4798      	blx	r3
 8007784:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007786:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800778a:	4431      	add	r1, r6
 800778c:	4620      	mov	r0, r4
 800778e:	b2c9      	uxtb	r1, r1
 8007790:	4798      	blx	r3
 8007792:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8007796:	4620      	mov	r0, r4
 8007798:	212c      	movs	r1, #44	; 0x2c
 800779a:	4798      	blx	r3
 800779c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800779e <_SetRect>:
 800779e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80077a2:	4604      	mov	r4, r0
 80077a4:	4688      	mov	r8, r1
 80077a6:	461f      	mov	r7, r3
 80077a8:	212a      	movs	r1, #42	; 0x2a
 80077aa:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80077ae:	9d06      	ldr	r5, [sp, #24]
 80077b0:	4616      	mov	r6, r2
 80077b2:	4798      	blx	r3
 80077b4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80077b6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80077ba:	4441      	add	r1, r8
 80077bc:	4620      	mov	r0, r4
 80077be:	f3c1 210f 	ubfx	r1, r1, #8, #16
 80077c2:	4798      	blx	r3
 80077c4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80077c6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80077ca:	4441      	add	r1, r8
 80077cc:	4620      	mov	r0, r4
 80077ce:	b2c9      	uxtb	r1, r1
 80077d0:	4798      	blx	r3
 80077d2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80077d4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80077d8:	4439      	add	r1, r7
 80077da:	4620      	mov	r0, r4
 80077dc:	f3c1 210f 	ubfx	r1, r1, #8, #16
 80077e0:	4798      	blx	r3
 80077e2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80077e4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80077e8:	4439      	add	r1, r7
 80077ea:	4620      	mov	r0, r4
 80077ec:	b2c9      	uxtb	r1, r1
 80077ee:	4798      	blx	r3
 80077f0:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 80077f4:	4620      	mov	r0, r4
 80077f6:	212b      	movs	r1, #43	; 0x2b
 80077f8:	4798      	blx	r3
 80077fa:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80077fc:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007800:	4431      	add	r1, r6
 8007802:	4620      	mov	r0, r4
 8007804:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8007808:	4798      	blx	r3
 800780a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800780c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007810:	4431      	add	r1, r6
 8007812:	4620      	mov	r0, r4
 8007814:	b2c9      	uxtb	r1, r1
 8007816:	4798      	blx	r3
 8007818:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800781a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800781e:	4429      	add	r1, r5
 8007820:	4620      	mov	r0, r4
 8007822:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8007826:	4798      	blx	r3
 8007828:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800782a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800782e:	4429      	add	r1, r5
 8007830:	4620      	mov	r0, r4
 8007832:	b2c9      	uxtb	r1, r1
 8007834:	4798      	blx	r3
 8007836:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800783a:	4620      	mov	r0, r4
 800783c:	212c      	movs	r1, #44	; 0x2c
 800783e:	4798      	blx	r3
 8007840:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007844 <_SetOrientation>:
 8007844:	b513      	push	{r0, r1, r4, lr}
 8007846:	4a0d      	ldr	r2, [pc, #52]	; (800787c <_SetOrientation+0x38>)
 8007848:	4604      	mov	r4, r0
 800784a:	6851      	ldr	r1, [r2, #4]
 800784c:	6810      	ldr	r0, [r2, #0]
 800784e:	466b      	mov	r3, sp
 8007850:	c303      	stmia	r3!, {r0, r1}
 8007852:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8007856:	4620      	mov	r0, r4
 8007858:	2136      	movs	r1, #54	; 0x36
 800785a:	4798      	blx	r3
 800785c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800785e:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 8007860:	aa02      	add	r2, sp, #8
 8007862:	4413      	add	r3, r2
 8007864:	f021 01e0 	bic.w	r1, r1, #224	; 0xe0
 8007868:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 800786c:	4319      	orrs	r1, r3
 800786e:	4620      	mov	r0, r4
 8007870:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007874:	b289      	uxth	r1, r1
 8007876:	4798      	blx	r3
 8007878:	b002      	add	sp, #8
 800787a:	bd10      	pop	{r4, pc}
 800787c:	080101dc 	.word	0x080101dc

08007880 <_ReadPixel_16bpp_B8>:
 8007880:	b513      	push	{r0, r1, r4, lr}
 8007882:	4604      	mov	r4, r0
 8007884:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
 8007888:	202e      	movs	r0, #46	; 0x2e
 800788a:	4798      	blx	r3
 800788c:	6a21      	ldr	r1, [r4, #32]
 800788e:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 8007892:	4668      	mov	r0, sp
 8007894:	3103      	adds	r1, #3
 8007896:	4798      	blx	r3
 8007898:	6a22      	ldr	r2, [r4, #32]
 800789a:	ab00      	add	r3, sp, #0
 800789c:	4413      	add	r3, r2
 800789e:	f81d 2002 	ldrb.w	r2, [sp, r2]
 80078a2:	7859      	ldrb	r1, [r3, #1]
 80078a4:	7898      	ldrb	r0, [r3, #2]
 80078a6:	08d2      	lsrs	r2, r2, #3
 80078a8:	0889      	lsrs	r1, r1, #2
 80078aa:	02d2      	lsls	r2, r2, #11
 80078ac:	ea42 1241 	orr.w	r2, r2, r1, lsl #5
 80078b0:	ea42 00d0 	orr.w	r0, r2, r0, lsr #3
 80078b4:	b002      	add	sp, #8
 80078b6:	bd10      	pop	{r4, pc}

080078b8 <_ReadPixel_16bpp_B16_I>:
 80078b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80078ba:	4604      	mov	r4, r0
 80078bc:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 80078c0:	202e      	movs	r0, #46	; 0x2e
 80078c2:	4798      	blx	r3
 80078c4:	6a21      	ldr	r1, [r4, #32]
 80078c6:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 80078ca:	4668      	mov	r0, sp
 80078cc:	3102      	adds	r1, #2
 80078ce:	4798      	blx	r3
 80078d0:	6a23      	ldr	r3, [r4, #32]
 80078d2:	a900      	add	r1, sp, #0
 80078d4:	eb01 0243 	add.w	r2, r1, r3, lsl #1
 80078d8:	f83d 0013 	ldrh.w	r0, [sp, r3, lsl #1]
 80078dc:	8852      	ldrh	r2, [r2, #2]
 80078de:	f402 417c 	and.w	r1, r2, #64512	; 0xfc00
 80078e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80078e6:	ea42 1251 	orr.w	r2, r2, r1, lsr #5
 80078ea:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80078ee:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 80078f2:	b004      	add	sp, #16
 80078f4:	bd10      	pop	{r4, pc}

080078f6 <_SetReg_B8>:
 80078f6:	b538      	push	{r3, r4, r5, lr}
 80078f8:	4604      	mov	r4, r0
 80078fa:	460d      	mov	r5, r1
 80078fc:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
 8007900:	0a08      	lsrs	r0, r1, #8
 8007902:	4798      	blx	r3
 8007904:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8007908:	b2e8      	uxtb	r0, r5
 800790a:	4798      	blx	r3
 800790c:	bd38      	pop	{r3, r4, r5, pc}

0800790e <_SetReg_B16>:
 800790e:	b508      	push	{r3, lr}
 8007910:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 8007914:	4608      	mov	r0, r1
 8007916:	4798      	blx	r3
 8007918:	bd08      	pop	{r3, pc}

0800791a <_WritePara_B8>:
 800791a:	b508      	push	{r3, lr}
 800791c:	f8d0 3118 	ldr.w	r3, [r0, #280]	; 0x118
 8007920:	b2c8      	uxtb	r0, r1
 8007922:	4798      	blx	r3
 8007924:	bd08      	pop	{r3, pc}

08007926 <_WritePara_B16>:
 8007926:	b508      	push	{r3, lr}
 8007928:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800792c:	4608      	mov	r0, r1
 800792e:	4798      	blx	r3
 8007930:	bd08      	pop	{r3, pc}
	...

08007934 <_SetInterface>:
 8007934:	2908      	cmp	r1, #8
 8007936:	d002      	beq.n	800793e <_SetInterface+0xa>
 8007938:	2910      	cmp	r1, #16
 800793a:	d005      	beq.n	8007948 <_SetInterface+0x14>
 800793c:	4770      	bx	lr
 800793e:	4b06      	ldr	r3, [pc, #24]	; (8007958 <_SetInterface+0x24>)
 8007940:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 8007944:	4b05      	ldr	r3, [pc, #20]	; (800795c <_SetInterface+0x28>)
 8007946:	e003      	b.n	8007950 <_SetInterface+0x1c>
 8007948:	4b05      	ldr	r3, [pc, #20]	; (8007960 <_SetInterface+0x2c>)
 800794a:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800794e:	4b05      	ldr	r3, [pc, #20]	; (8007964 <_SetInterface+0x30>)
 8007950:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
 8007954:	4770      	bx	lr
 8007956:	bf00      	nop
 8007958:	080078f7 	.word	0x080078f7
 800795c:	0800791b 	.word	0x0800791b
 8007960:	0800790f 	.word	0x0800790f
 8007964:	08007927 	.word	0x08007927

08007968 <_ReadRect_16bpp_B8>:
 8007968:	b5f0      	push	{r4, r5, r6, r7, lr}
 800796a:	b085      	sub	sp, #20
 800796c:	6884      	ldr	r4, [r0, #8]
 800796e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8007970:	9700      	str	r7, [sp, #0]
 8007972:	1abd      	subs	r5, r7, r2
 8007974:	1a58      	subs	r0, r3, r1
 8007976:	3501      	adds	r5, #1
 8007978:	fb00 5505 	mla	r5, r0, r5, r5
 800797c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8007980:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8007982:	4620      	mov	r0, r4
 8007984:	47b8      	blx	r7
 8007986:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 800798a:	202e      	movs	r0, #46	; 0x2e
 800798c:	4798      	blx	r3
 800798e:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 8007992:	6a21      	ldr	r1, [r4, #32]
 8007994:	a802      	add	r0, sp, #8
 8007996:	4798      	blx	r3
 8007998:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800799c:	a802      	add	r0, sp, #8
 800799e:	2103      	movs	r1, #3
 80079a0:	4798      	blx	r3
 80079a2:	f89d 3008 	ldrb.w	r3, [sp, #8]
 80079a6:	f89d 2009 	ldrb.w	r2, [sp, #9]
 80079aa:	08db      	lsrs	r3, r3, #3
 80079ac:	0892      	lsrs	r2, r2, #2
 80079ae:	02db      	lsls	r3, r3, #11
 80079b0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80079b4:	f89d 200a 	ldrb.w	r2, [sp, #10]
 80079b8:	3d01      	subs	r5, #1
 80079ba:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 80079be:	f826 3b02 	strh.w	r3, [r6], #2
 80079c2:	d1e9      	bne.n	8007998 <_ReadRect_16bpp_B8+0x30>
 80079c4:	b005      	add	sp, #20
 80079c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080079c8 <_ReadRect_16bpp_B16_I>:
 80079c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80079ca:	b087      	sub	sp, #28
 80079cc:	6884      	ldr	r4, [r0, #8]
 80079ce:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80079d0:	9700      	str	r7, [sp, #0]
 80079d2:	1abd      	subs	r5, r7, r2
 80079d4:	1a58      	subs	r0, r3, r1
 80079d6:	3501      	adds	r5, #1
 80079d8:	fb00 5505 	mla	r5, r0, r5, r5
 80079dc:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 80079e0:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80079e2:	4620      	mov	r0, r4
 80079e4:	47b8      	blx	r7
 80079e6:	f8d4 3134 	ldr.w	r3, [r4, #308]	; 0x134
 80079ea:	202e      	movs	r0, #46	; 0x2e
 80079ec:	4798      	blx	r3
 80079ee:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 80079f2:	6a21      	ldr	r1, [r4, #32]
 80079f4:	a802      	add	r0, sp, #8
 80079f6:	4798      	blx	r3
 80079f8:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 80079fc:	a802      	add	r0, sp, #8
 80079fe:	2102      	movs	r1, #2
 8007a00:	4798      	blx	r3
 8007a02:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8007a06:	f403 427c 	and.w	r2, r3, #64512	; 0xfc00
 8007a0a:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8007a0e:	ea43 1352 	orr.w	r3, r3, r2, lsr #5
 8007a12:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8007a16:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8007a1a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007a1e:	3d01      	subs	r5, #1
 8007a20:	f826 3b02 	strh.w	r3, [r6], #2
 8007a24:	d1e8      	bne.n	80079f8 <_ReadRect_16bpp_B16_I+0x30>
 8007a26:	b007      	add	sp, #28
 8007a28:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08007a2c <GUIDRV_FlexColor_SetFunc66709>:
 8007a2c:	b510      	push	{r4, lr}
 8007a2e:	4604      	mov	r4, r0
 8007a30:	f000 fde2 	bl	80085f8 <GUIDRV_FlexColor__InitOnce>
 8007a34:	68a3      	ldr	r3, [r4, #8]
 8007a36:	4a12      	ldr	r2, [pc, #72]	; (8007a80 <GUIDRV_FlexColor_SetFunc66709+0x54>)
 8007a38:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 8007a3c:	4a11      	ldr	r2, [pc, #68]	; (8007a84 <GUIDRV_FlexColor_SetFunc66709+0x58>)
 8007a3e:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 8007a42:	4a11      	ldr	r2, [pc, #68]	; (8007a88 <GUIDRV_FlexColor_SetFunc66709+0x5c>)
 8007a44:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 8007a48:	4a10      	ldr	r2, [pc, #64]	; (8007a8c <GUIDRV_FlexColor_SetFunc66709+0x60>)
 8007a4a:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 8007a4e:	2200      	movs	r2, #0
 8007a50:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 8007a54:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 8007a58:	4a0d      	ldr	r2, [pc, #52]	; (8007a90 <GUIDRV_FlexColor_SetFunc66709+0x64>)
 8007a5a:	490e      	ldr	r1, [pc, #56]	; (8007a94 <GUIDRV_FlexColor_SetFunc66709+0x68>)
 8007a5c:	6812      	ldr	r2, [r2, #0]
 8007a5e:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 8007a62:	8cda      	ldrh	r2, [r3, #38]	; 0x26
 8007a64:	6809      	ldr	r1, [r1, #0]
 8007a66:	f8c3 10b4 	str.w	r1, [r3, #180]	; 0xb4
 8007a6a:	f022 0203 	bic.w	r2, r2, #3
 8007a6e:	490a      	ldr	r1, [pc, #40]	; (8007a98 <GUIDRV_FlexColor_SetFunc66709+0x6c>)
 8007a70:	84da      	strh	r2, [r3, #38]	; 0x26
 8007a72:	4a0a      	ldr	r2, [pc, #40]	; (8007a9c <GUIDRV_FlexColor_SetFunc66709+0x70>)
 8007a74:	f8c3 10cc 	str.w	r1, [r3, #204]	; 0xcc
 8007a78:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 8007a7c:	bd10      	pop	{r4, pc}
 8007a7e:	bf00      	nop
 8007a80:	080076fd 	.word	0x080076fd
 8007a84:	0800779f 	.word	0x0800779f
 8007a88:	08007845 	.word	0x08007845
 8007a8c:	08007881 	.word	0x08007881
 8007a90:	2000009c 	.word	0x2000009c
 8007a94:	20000098 	.word	0x20000098
 8007a98:	08007969 	.word	0x08007969
 8007a9c:	08007935 	.word	0x08007935

08007aa0 <_WriteU16_A1>:
 8007aa0:	b508      	push	{r3, lr}
 8007aa2:	0a0b      	lsrs	r3, r1, #8
 8007aa4:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
 8007aa8:	f880 1072 	strb.w	r1, [r0, #114]	; 0x72
 8007aac:	f8d0 3120 	ldr.w	r3, [r0, #288]	; 0x120
 8007ab0:	2102      	movs	r1, #2
 8007ab2:	3071      	adds	r0, #113	; 0x71
 8007ab4:	4798      	blx	r3
 8007ab6:	bd08      	pop	{r3, pc}

08007ab8 <_WriteDataMP>:
 8007ab8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007aba:	6e86      	ldr	r6, [r0, #104]	; 0x68
 8007abc:	4604      	mov	r4, r0
 8007abe:	460f      	mov	r7, r1
 8007ac0:	4615      	mov	r5, r2
 8007ac2:	2300      	movs	r3, #0
 8007ac4:	b1a5      	cbz	r5, 8007af0 <_WriteDataMP+0x38>
 8007ac6:	f837 2b02 	ldrh.w	r2, [r7], #2
 8007aca:	4630      	mov	r0, r6
 8007acc:	3301      	adds	r3, #1
 8007ace:	0a11      	lsrs	r1, r2, #8
 8007ad0:	2bfa      	cmp	r3, #250	; 0xfa
 8007ad2:	f800 1b02 	strb.w	r1, [r0], #2
 8007ad6:	7072      	strb	r2, [r6, #1]
 8007ad8:	d107      	bne.n	8007aea <_WriteDataMP+0x32>
 8007ada:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8007ade:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 8007ae0:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8007ae4:	4798      	blx	r3
 8007ae6:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 8007ae8:	2300      	movs	r3, #0
 8007aea:	3d01      	subs	r5, #1
 8007aec:	4606      	mov	r6, r0
 8007aee:	e7e9      	b.n	8007ac4 <_WriteDataMP+0xc>
 8007af0:	b123      	cbz	r3, 8007afc <_WriteDataMP+0x44>
 8007af2:	f8d4 2120 	ldr.w	r2, [r4, #288]	; 0x120
 8007af6:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 8007af8:	0059      	lsls	r1, r3, #1
 8007afa:	4790      	blx	r2
 8007afc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007afe <_ReadData>:
 8007afe:	b508      	push	{r3, lr}
 8007b00:	f8d0 30b8 	ldr.w	r3, [r0, #184]	; 0xb8
 8007b04:	4798      	blx	r3
 8007b06:	bd08      	pop	{r3, pc}

08007b08 <_WriteData>:
 8007b08:	b289      	uxth	r1, r1
 8007b0a:	f7ff bfc9 	b.w	8007aa0 <_WriteU16_A1>
	...

08007b10 <_FillRect>:
 8007b10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007b14:	4f40      	ldr	r7, [pc, #256]	; (8007c18 <_FillRect+0x108>)
 8007b16:	6884      	ldr	r4, [r0, #8]
 8007b18:	4682      	mov	sl, r0
 8007b1a:	6838      	ldr	r0, [r7, #0]
 8007b1c:	7c00      	ldrb	r0, [r0, #16]
 8007b1e:	f010 0f01 	tst.w	r0, #1
 8007b22:	b085      	sub	sp, #20
 8007b24:	460e      	mov	r6, r1
 8007b26:	4615      	mov	r5, r2
 8007b28:	4698      	mov	r8, r3
 8007b2a:	ebc1 0903 	rsb	r9, r1, r3
 8007b2e:	d045      	beq.n	8007bbc <_FillRect+0xac>
 8007b30:	ea4f 0b49 	mov.w	fp, r9, lsl #1
 8007b34:	980e      	ldr	r0, [sp, #56]	; 0x38
 8007b36:	4285      	cmp	r5, r0
 8007b38:	dc6b      	bgt.n	8007c12 <_FillRect+0x102>
 8007b3a:	f8d4 c0cc 	ldr.w	ip, [r4, #204]	; 0xcc
 8007b3e:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007b40:	f1bc 0f00 	cmp.w	ip, #0
 8007b44:	d101      	bne.n	8007b4a <_FillRect+0x3a>
 8007b46:	46b4      	mov	ip, r6
 8007b48:	e007      	b.n	8007b5a <_FillRect+0x4a>
 8007b4a:	e88d 00a0 	stmia.w	sp, {r5, r7}
 8007b4e:	4650      	mov	r0, sl
 8007b50:	4631      	mov	r1, r6
 8007b52:	462a      	mov	r2, r5
 8007b54:	4643      	mov	r3, r8
 8007b56:	47e0      	blx	ip
 8007b58:	e011      	b.n	8007b7e <_FillRect+0x6e>
 8007b5a:	45c4      	cmp	ip, r8
 8007b5c:	dc0e      	bgt.n	8007b7c <_FillRect+0x6c>
 8007b5e:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
 8007b62:	f8cd c00c 	str.w	ip, [sp, #12]
 8007b66:	4661      	mov	r1, ip
 8007b68:	4650      	mov	r0, sl
 8007b6a:	462a      	mov	r2, r5
 8007b6c:	4798      	blx	r3
 8007b6e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8007b72:	f827 0b02 	strh.w	r0, [r7], #2
 8007b76:	f10c 0c01 	add.w	ip, ip, #1
 8007b7a:	e7ee      	b.n	8007b5a <_FillRect+0x4a>
 8007b7c:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007b7e:	1ebb      	subs	r3, r7, #2
 8007b80:	f109 0c01 	add.w	ip, r9, #1
 8007b84:	445f      	add	r7, fp
 8007b86:	42bb      	cmp	r3, r7
 8007b88:	d005      	beq.n	8007b96 <_FillRect+0x86>
 8007b8a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007b8c:	8859      	ldrh	r1, [r3, #2]
 8007b8e:	404a      	eors	r2, r1
 8007b90:	f823 2f02 	strh.w	r2, [r3, #2]!
 8007b94:	e7f7      	b.n	8007b86 <_FillRect+0x76>
 8007b96:	9500      	str	r5, [sp, #0]
 8007b98:	462a      	mov	r2, r5
 8007b9a:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8007b9e:	f8cd c00c 	str.w	ip, [sp, #12]
 8007ba2:	4620      	mov	r0, r4
 8007ba4:	4631      	mov	r1, r6
 8007ba6:	4643      	mov	r3, r8
 8007ba8:	47b8      	blx	r7
 8007baa:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8007bae:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8007bb0:	4620      	mov	r0, r4
 8007bb2:	4662      	mov	r2, ip
 8007bb4:	f7ff ff80 	bl	8007ab8 <_WriteDataMP>
 8007bb8:	3501      	adds	r5, #1
 8007bba:	e7bb      	b.n	8007b34 <_FillRect+0x24>
 8007bbc:	980e      	ldr	r0, [sp, #56]	; 0x38
 8007bbe:	9000      	str	r0, [sp, #0]
 8007bc0:	1a85      	subs	r5, r0, r2
 8007bc2:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8007bc6:	4620      	mov	r0, r4
 8007bc8:	47b0      	blx	r6
 8007bca:	683b      	ldr	r3, [r7, #0]
 8007bcc:	6ea6      	ldr	r6, [r4, #104]	; 0x68
 8007bce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007bd0:	681b      	ldr	r3, [r3, #0]
 8007bd2:	f109 0901 	add.w	r9, r9, #1
 8007bd6:	fb05 9509 	mla	r5, r5, r9, r9
 8007bda:	f3c3 2807 	ubfx	r8, r3, #8, #8
 8007bde:	fa5f f983 	uxtb.w	r9, r3
 8007be2:	2301      	movs	r3, #1
 8007be4:	b1ad      	cbz	r5, 8007c12 <_FillRect+0x102>
 8007be6:	2df9      	cmp	r5, #249	; 0xf9
 8007be8:	bf34      	ite	cc
 8007bea:	462f      	movcc	r7, r5
 8007bec:	27f9      	movcs	r7, #249	; 0xf9
 8007bee:	0079      	lsls	r1, r7, #1
 8007bf0:	b143      	cbz	r3, 8007c04 <_FillRect+0xf4>
 8007bf2:	4633      	mov	r3, r6
 8007bf4:	1872      	adds	r2, r6, r1
 8007bf6:	4293      	cmp	r3, r2
 8007bf8:	d004      	beq.n	8007c04 <_FillRect+0xf4>
 8007bfa:	f883 8001 	strb.w	r8, [r3, #1]
 8007bfe:	f803 9f02 	strb.w	r9, [r3, #2]!
 8007c02:	e7f8      	b.n	8007bf6 <_FillRect+0xe6>
 8007c04:	f8d4 2120 	ldr.w	r2, [r4, #288]	; 0x120
 8007c08:	1c70      	adds	r0, r6, #1
 8007c0a:	4790      	blx	r2
 8007c0c:	1bed      	subs	r5, r5, r7
 8007c0e:	2300      	movs	r3, #0
 8007c10:	e7e8      	b.n	8007be4 <_FillRect+0xd4>
 8007c12:	b005      	add	sp, #20
 8007c14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007c18:	200000b8 	.word	0x200000b8

08007c1c <_DrawBitmap>:
 8007c1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007c20:	b08d      	sub	sp, #52	; 0x34
 8007c22:	6885      	ldr	r5, [r0, #8]
 8007c24:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8007c26:	9305      	str	r3, [sp, #20]
 8007c28:	1e7b      	subs	r3, r7, #1
 8007c2a:	2b01      	cmp	r3, #1
 8007c2c:	9009      	str	r0, [sp, #36]	; 0x24
 8007c2e:	9108      	str	r1, [sp, #32]
 8007c30:	920a      	str	r2, [sp, #40]	; 0x28
 8007c32:	950b      	str	r5, [sp, #44]	; 0x2c
 8007c34:	d903      	bls.n	8007c3e <_DrawBitmap+0x22>
 8007c36:	2f04      	cmp	r7, #4
 8007c38:	d001      	beq.n	8007c3e <_DrawBitmap+0x22>
 8007c3a:	2f08      	cmp	r7, #8
 8007c3c:	d106      	bne.n	8007c4c <_DrawBitmap+0x30>
 8007c3e:	4b91      	ldr	r3, [pc, #580]	; (8007e84 <_DrawBitmap+0x268>)
 8007c40:	681b      	ldr	r3, [r3, #0]
 8007c42:	7c1b      	ldrb	r3, [r3, #16]
 8007c44:	f003 0303 	and.w	r3, r3, #3
 8007c48:	2b02      	cmp	r3, #2
 8007c4a:	d010      	beq.n	8007c6e <_DrawBitmap+0x52>
 8007c4c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007c4e:	9f16      	ldr	r7, [sp, #88]	; 0x58
 8007c50:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007c52:	9908      	ldr	r1, [sp, #32]
 8007c54:	9b05      	ldr	r3, [sp, #20]
 8007c56:	443a      	add	r2, r7
 8007c58:	4429      	add	r1, r5
 8007c5a:	3a01      	subs	r2, #1
 8007c5c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8007c5e:	9200      	str	r2, [sp, #0]
 8007c60:	440b      	add	r3, r1
 8007c62:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
 8007c66:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007c68:	4628      	mov	r0, r5
 8007c6a:	3b01      	subs	r3, #1
 8007c6c:	47a0      	blx	r4
 8007c6e:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8007c72:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8007c74:	9f16      	ldr	r7, [sp, #88]	; 0x58
 8007c76:	ebc5 030b 	rsb	r3, r5, fp
 8007c7a:	42bb      	cmp	r3, r7
 8007c7c:	f280 8253 	bge.w	8008126 <_DrawBitmap+0x50a>
 8007c80:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8007c82:	1e7b      	subs	r3, r7, #1
 8007c84:	2b0f      	cmp	r3, #15
 8007c86:	f200 8247 	bhi.w	8008118 <_DrawBitmap+0x4fc>
 8007c8a:	e8df f013 	tbh	[pc, r3, lsl #1]
 8007c8e:	0010      	.short	0x0010
 8007c90:	024500bb 	.word	0x024500bb
 8007c94:	02450144 	.word	0x02450144
 8007c98:	02450245 	.word	0x02450245
 8007c9c:	024501db 	.word	0x024501db
 8007ca0:	02450245 	.word	0x02450245
 8007ca4:	02450245 	.word	0x02450245
 8007ca8:	02450245 	.word	0x02450245
 8007cac:	0240      	.short	0x0240
 8007cae:	4b75      	ldr	r3, [pc, #468]	; (8007e84 <_DrawBitmap+0x268>)
 8007cb0:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007cb2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8007cb4:	681b      	ldr	r3, [r3, #0]
 8007cb6:	68ac      	ldr	r4, [r5, #8]
 8007cb8:	7c1b      	ldrb	r3, [r3, #16]
 8007cba:	687d      	ldr	r5, [r7, #4]
 8007cbc:	683e      	ldr	r6, [r7, #0]
 8007cbe:	9507      	str	r5, [sp, #28]
 8007cc0:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8007cc2:	9d08      	ldr	r5, [sp, #32]
 8007cc4:	f003 0303 	and.w	r3, r3, #3
 8007cc8:	443d      	add	r5, r7
 8007cca:	2b02      	cmp	r3, #2
 8007ccc:	9503      	str	r5, [sp, #12]
 8007cce:	d01c      	beq.n	8007d0a <_DrawBitmap+0xee>
 8007cd0:	2b03      	cmp	r3, #3
 8007cd2:	d071      	beq.n	8007db8 <_DrawBitmap+0x19c>
 8007cd4:	2b01      	cmp	r3, #1
 8007cd6:	d06f      	beq.n	8007db8 <_DrawBitmap+0x19c>
 8007cd8:	9f05      	ldr	r7, [sp, #20]
 8007cda:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007cdc:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 8007ce0:	f898 2000 	ldrb.w	r2, [r8]
 8007ce4:	2380      	movs	r3, #128	; 0x80
 8007ce6:	412b      	asrs	r3, r5
 8007ce8:	421a      	tst	r2, r3
 8007cea:	bf16      	itet	ne
 8007cec:	9807      	ldrne	r0, [sp, #28]
 8007cee:	b2b1      	uxtheq	r1, r6
 8007cf0:	b281      	uxthne	r1, r0
 8007cf2:	3501      	adds	r5, #1
 8007cf4:	4620      	mov	r0, r4
 8007cf6:	f7ff fed3 	bl	8007aa0 <_WriteU16_A1>
 8007cfa:	2d08      	cmp	r5, #8
 8007cfc:	bf04      	itt	eq
 8007cfe:	f108 0801 	addeq.w	r8, r8, #1
 8007d02:	2500      	moveq	r5, #0
 8007d04:	3f01      	subs	r7, #1
 8007d06:	d1eb      	bne.n	8007ce0 <_DrawBitmap+0xc4>
 8007d08:	e206      	b.n	8008118 <_DrawBitmap+0x4fc>
 8007d0a:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007d0c:	f8dd a00c 	ldr.w	sl, [sp, #12]
 8007d10:	9506      	str	r5, [sp, #24]
 8007d12:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 8007d16:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8007d1a:	2500      	movs	r5, #0
 8007d1c:	4656      	mov	r6, sl
 8007d1e:	462b      	mov	r3, r5
 8007d20:	9f06      	ldr	r7, [sp, #24]
 8007d22:	f04f 0c80 	mov.w	ip, #128	; 0x80
 8007d26:	783a      	ldrb	r2, [r7, #0]
 8007d28:	fa4c fc08 	asr.w	ip, ip, r8
 8007d2c:	ea12 0c0c 	ands.w	ip, r2, ip
 8007d30:	d00b      	beq.n	8007d4a <_DrawBitmap+0x12e>
 8007d32:	b913      	cbnz	r3, 8007d3a <_DrawBitmap+0x11e>
 8007d34:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 8007d38:	46b2      	mov	sl, r6
 8007d3a:	9f07      	ldr	r7, [sp, #28]
 8007d3c:	f8a9 7000 	strh.w	r7, [r9]
 8007d40:	3501      	adds	r5, #1
 8007d42:	f109 0902 	add.w	r9, r9, #2
 8007d46:	2301      	movs	r3, #1
 8007d48:	e017      	b.n	8007d7a <_DrawBitmap+0x15e>
 8007d4a:	2b01      	cmp	r3, #1
 8007d4c:	d114      	bne.n	8007d78 <_DrawBitmap+0x15c>
 8007d4e:	f8cd b000 	str.w	fp, [sp]
 8007d52:	1e73      	subs	r3, r6, #1
 8007d54:	f8cd c010 	str.w	ip, [sp, #16]
 8007d58:	4620      	mov	r0, r4
 8007d5a:	4651      	mov	r1, sl
 8007d5c:	465a      	mov	r2, fp
 8007d5e:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8007d62:	47b8      	blx	r7
 8007d64:	462a      	mov	r2, r5
 8007d66:	4620      	mov	r0, r4
 8007d68:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8007d6a:	f7ff fea5 	bl	8007ab8 <_WriteDataMP>
 8007d6e:	f8dd c010 	ldr.w	ip, [sp, #16]
 8007d72:	4665      	mov	r5, ip
 8007d74:	4663      	mov	r3, ip
 8007d76:	e000      	b.n	8007d7a <_DrawBitmap+0x15e>
 8007d78:	4663      	mov	r3, ip
 8007d7a:	f108 0801 	add.w	r8, r8, #1
 8007d7e:	f1b8 0f08 	cmp.w	r8, #8
 8007d82:	f106 0601 	add.w	r6, r6, #1
 8007d86:	d104      	bne.n	8007d92 <_DrawBitmap+0x176>
 8007d88:	9f06      	ldr	r7, [sp, #24]
 8007d8a:	3701      	adds	r7, #1
 8007d8c:	9706      	str	r7, [sp, #24]
 8007d8e:	f04f 0800 	mov.w	r8, #0
 8007d92:	9a05      	ldr	r2, [sp, #20]
 8007d94:	9f03      	ldr	r7, [sp, #12]
 8007d96:	443a      	add	r2, r7
 8007d98:	42b2      	cmp	r2, r6
 8007d9a:	d1c1      	bne.n	8007d20 <_DrawBitmap+0x104>
 8007d9c:	9f05      	ldr	r7, [sp, #20]
 8007d9e:	1e7b      	subs	r3, r7, #1
 8007da0:	9f03      	ldr	r7, [sp, #12]
 8007da2:	443b      	add	r3, r7
 8007da4:	2d00      	cmp	r5, #0
 8007da6:	f000 81b7 	beq.w	8008118 <_DrawBitmap+0x4fc>
 8007daa:	f8cd b000 	str.w	fp, [sp]
 8007dae:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8007db2:	4620      	mov	r0, r4
 8007db4:	4651      	mov	r1, sl
 8007db6:	e13f      	b.n	8008038 <_DrawBitmap+0x41c>
 8007db8:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8007dbc:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 8007dbe:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007dc0:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8007dc4:	9f03      	ldr	r7, [sp, #12]
 8007dc6:	782a      	ldrb	r2, [r5, #0]
 8007dc8:	2380      	movs	r3, #128	; 0x80
 8007dca:	4133      	asrs	r3, r6
 8007dcc:	44b9      	add	r9, r7
 8007dce:	421a      	tst	r2, r3
 8007dd0:	ebc8 0909 	rsb	r9, r8, r9
 8007dd4:	d00d      	beq.n	8007df2 <_DrawBitmap+0x1d6>
 8007dd6:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
 8007dda:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007ddc:	4649      	mov	r1, r9
 8007dde:	465a      	mov	r2, fp
 8007de0:	4798      	blx	r3
 8007de2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007de4:	f8d4 70f8 	ldr.w	r7, [r4, #248]	; 0xf8
 8007de8:	4043      	eors	r3, r0
 8007dea:	4649      	mov	r1, r9
 8007dec:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007dee:	465a      	mov	r2, fp
 8007df0:	47b8      	blx	r7
 8007df2:	3601      	adds	r6, #1
 8007df4:	2e08      	cmp	r6, #8
 8007df6:	bf04      	itt	eq
 8007df8:	3501      	addeq	r5, #1
 8007dfa:	2600      	moveq	r6, #0
 8007dfc:	f1b8 0801 	subs.w	r8, r8, #1
 8007e00:	d1de      	bne.n	8007dc0 <_DrawBitmap+0x1a4>
 8007e02:	e189      	b.n	8008118 <_DrawBitmap+0x4fc>
 8007e04:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8007e06:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007e08:	68ac      	ldr	r4, [r5, #8]
 8007e0a:	2f00      	cmp	r7, #0
 8007e0c:	f000 8184 	beq.w	8008118 <_DrawBitmap+0x4fc>
 8007e10:	4b1c      	ldr	r3, [pc, #112]	; (8007e84 <_DrawBitmap+0x268>)
 8007e12:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007e14:	681b      	ldr	r3, [r3, #0]
 8007e16:	f895 a000 	ldrb.w	sl, [r5]
 8007e1a:	7c1b      	ldrb	r3, [r3, #16]
 8007e1c:	f013 0303 	ands.w	r3, r3, #3
 8007e20:	d011      	beq.n	8007e46 <_DrawBitmap+0x22a>
 8007e22:	2b02      	cmp	r3, #2
 8007e24:	f040 8178 	bne.w	8008118 <_DrawBitmap+0x4fc>
 8007e28:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007e2a:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007e2e:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007e30:	9703      	str	r7, [sp, #12]
 8007e32:	44a9      	add	r9, r5
 8007e34:	46a8      	mov	r8, r5
 8007e36:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007e38:	9507      	str	r5, [sp, #28]
 8007e3a:	2500      	movs	r5, #0
 8007e3c:	f8cd 9018 	str.w	r9, [sp, #24]
 8007e40:	464e      	mov	r6, r9
 8007e42:	462b      	mov	r3, r5
 8007e44:	e040      	b.n	8007ec8 <_DrawBitmap+0x2ac>
 8007e46:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007e48:	9e05      	ldr	r6, [sp, #20]
 8007e4a:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8007e4c:	f1c5 0303 	rsb	r3, r5, #3
 8007e50:	005b      	lsls	r3, r3, #1
 8007e52:	f1c3 0206 	rsb	r2, r3, #6
 8007e56:	21c0      	movs	r1, #192	; 0xc0
 8007e58:	fa41 f202 	asr.w	r2, r1, r2
 8007e5c:	ea02 020a 	and.w	r2, r2, sl
 8007e60:	fa22 f303 	lsr.w	r3, r2, r3
 8007e64:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8007e66:	4620      	mov	r0, r4
 8007e68:	f832 1023 	ldrh.w	r1, [r2, r3, lsl #2]
 8007e6c:	3501      	adds	r5, #1
 8007e6e:	f7ff fe17 	bl	8007aa0 <_WriteU16_A1>
 8007e72:	2d04      	cmp	r5, #4
 8007e74:	d103      	bne.n	8007e7e <_DrawBitmap+0x262>
 8007e76:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007e7a:	2500      	movs	r5, #0
 8007e7c:	3701      	adds	r7, #1
 8007e7e:	3e01      	subs	r6, #1
 8007e80:	d1e4      	bne.n	8007e4c <_DrawBitmap+0x230>
 8007e82:	e149      	b.n	8008118 <_DrawBitmap+0x4fc>
 8007e84:	200000b8 	.word	0x200000b8
 8007e88:	b913      	cbnz	r3, 8007e90 <_DrawBitmap+0x274>
 8007e8a:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007e8c:	9703      	str	r7, [sp, #12]
 8007e8e:	9606      	str	r6, [sp, #24]
 8007e90:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007e92:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 8007e96:	9f03      	ldr	r7, [sp, #12]
 8007e98:	803b      	strh	r3, [r7, #0]
 8007e9a:	3702      	adds	r7, #2
 8007e9c:	3501      	adds	r5, #1
 8007e9e:	9703      	str	r7, [sp, #12]
 8007ea0:	2301      	movs	r3, #1
 8007ea2:	f108 0801 	add.w	r8, r8, #1
 8007ea6:	f1b8 0f04 	cmp.w	r8, #4
 8007eaa:	f106 0601 	add.w	r6, r6, #1
 8007eae:	d106      	bne.n	8007ebe <_DrawBitmap+0x2a2>
 8007eb0:	9f07      	ldr	r7, [sp, #28]
 8007eb2:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007eb6:	3701      	adds	r7, #1
 8007eb8:	9707      	str	r7, [sp, #28]
 8007eba:	f04f 0800 	mov.w	r8, #0
 8007ebe:	9a05      	ldr	r2, [sp, #20]
 8007ec0:	444a      	add	r2, r9
 8007ec2:	42b2      	cmp	r2, r6
 8007ec4:	f000 80ad 	beq.w	8008022 <_DrawBitmap+0x406>
 8007ec8:	f1c8 0203 	rsb	r2, r8, #3
 8007ecc:	0052      	lsls	r2, r2, #1
 8007ece:	f1c2 0106 	rsb	r1, r2, #6
 8007ed2:	f04f 0cc0 	mov.w	ip, #192	; 0xc0
 8007ed6:	fa4c fc01 	asr.w	ip, ip, r1
 8007eda:	ea0c 0c0a 	and.w	ip, ip, sl
 8007ede:	fa3c fc02 	lsrs.w	ip, ip, r2
 8007ee2:	d1d1      	bne.n	8007e88 <_DrawBitmap+0x26c>
 8007ee4:	2b01      	cmp	r3, #1
 8007ee6:	d114      	bne.n	8007f12 <_DrawBitmap+0x2f6>
 8007ee8:	f8cd b000 	str.w	fp, [sp]
 8007eec:	1e73      	subs	r3, r6, #1
 8007eee:	f8cd c010 	str.w	ip, [sp, #16]
 8007ef2:	4620      	mov	r0, r4
 8007ef4:	9906      	ldr	r1, [sp, #24]
 8007ef6:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8007efa:	465a      	mov	r2, fp
 8007efc:	47b8      	blx	r7
 8007efe:	462a      	mov	r2, r5
 8007f00:	4620      	mov	r0, r4
 8007f02:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8007f04:	f7ff fdd8 	bl	8007ab8 <_WriteDataMP>
 8007f08:	f8dd c010 	ldr.w	ip, [sp, #16]
 8007f0c:	4665      	mov	r5, ip
 8007f0e:	4663      	mov	r3, ip
 8007f10:	e7c7      	b.n	8007ea2 <_DrawBitmap+0x286>
 8007f12:	4663      	mov	r3, ip
 8007f14:	e7c5      	b.n	8007ea2 <_DrawBitmap+0x286>
 8007f16:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8007f18:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007f1a:	68ac      	ldr	r4, [r5, #8]
 8007f1c:	2f00      	cmp	r7, #0
 8007f1e:	f000 80fb 	beq.w	8008118 <_DrawBitmap+0x4fc>
 8007f22:	4b82      	ldr	r3, [pc, #520]	; (800812c <_DrawBitmap+0x510>)
 8007f24:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007f26:	681b      	ldr	r3, [r3, #0]
 8007f28:	f895 a000 	ldrb.w	sl, [r5]
 8007f2c:	7c1b      	ldrb	r3, [r3, #16]
 8007f2e:	f013 0303 	ands.w	r3, r3, #3
 8007f32:	d011      	beq.n	8007f58 <_DrawBitmap+0x33c>
 8007f34:	2b02      	cmp	r3, #2
 8007f36:	f040 80ef 	bne.w	8008118 <_DrawBitmap+0x4fc>
 8007f3a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007f3c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007f40:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007f42:	9703      	str	r7, [sp, #12]
 8007f44:	44a9      	add	r9, r5
 8007f46:	46a8      	mov	r8, r5
 8007f48:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007f4a:	9507      	str	r5, [sp, #28]
 8007f4c:	2500      	movs	r5, #0
 8007f4e:	f8cd 9018 	str.w	r9, [sp, #24]
 8007f52:	464e      	mov	r6, r9
 8007f54:	462b      	mov	r3, r5
 8007f56:	e03d      	b.n	8007fd4 <_DrawBitmap+0x3b8>
 8007f58:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007f5a:	9e05      	ldr	r6, [sp, #20]
 8007f5c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8007f5e:	f1c5 0301 	rsb	r3, r5, #1
 8007f62:	009b      	lsls	r3, r3, #2
 8007f64:	f1c3 0204 	rsb	r2, r3, #4
 8007f68:	21f0      	movs	r1, #240	; 0xf0
 8007f6a:	fa41 f202 	asr.w	r2, r1, r2
 8007f6e:	ea02 020a 	and.w	r2, r2, sl
 8007f72:	fa22 f303 	lsr.w	r3, r2, r3
 8007f76:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8007f78:	4620      	mov	r0, r4
 8007f7a:	f832 1023 	ldrh.w	r1, [r2, r3, lsl #2]
 8007f7e:	3501      	adds	r5, #1
 8007f80:	f7ff fd8e 	bl	8007aa0 <_WriteU16_A1>
 8007f84:	2d02      	cmp	r5, #2
 8007f86:	d103      	bne.n	8007f90 <_DrawBitmap+0x374>
 8007f88:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007f8c:	2500      	movs	r5, #0
 8007f8e:	3701      	adds	r7, #1
 8007f90:	3e01      	subs	r6, #1
 8007f92:	d1e4      	bne.n	8007f5e <_DrawBitmap+0x342>
 8007f94:	e0c0      	b.n	8008118 <_DrawBitmap+0x4fc>
 8007f96:	b913      	cbnz	r3, 8007f9e <_DrawBitmap+0x382>
 8007f98:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007f9a:	9703      	str	r7, [sp, #12]
 8007f9c:	9606      	str	r6, [sp, #24]
 8007f9e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007fa0:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 8007fa4:	9f03      	ldr	r7, [sp, #12]
 8007fa6:	803b      	strh	r3, [r7, #0]
 8007fa8:	3702      	adds	r7, #2
 8007faa:	3501      	adds	r5, #1
 8007fac:	9703      	str	r7, [sp, #12]
 8007fae:	2301      	movs	r3, #1
 8007fb0:	f108 0801 	add.w	r8, r8, #1
 8007fb4:	f1b8 0f02 	cmp.w	r8, #2
 8007fb8:	f106 0601 	add.w	r6, r6, #1
 8007fbc:	d106      	bne.n	8007fcc <_DrawBitmap+0x3b0>
 8007fbe:	9f07      	ldr	r7, [sp, #28]
 8007fc0:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007fc4:	3701      	adds	r7, #1
 8007fc6:	9707      	str	r7, [sp, #28]
 8007fc8:	f04f 0800 	mov.w	r8, #0
 8007fcc:	9a05      	ldr	r2, [sp, #20]
 8007fce:	444a      	add	r2, r9
 8007fd0:	42b2      	cmp	r2, r6
 8007fd2:	d026      	beq.n	8008022 <_DrawBitmap+0x406>
 8007fd4:	f1c8 0201 	rsb	r2, r8, #1
 8007fd8:	0092      	lsls	r2, r2, #2
 8007fda:	f1c2 0104 	rsb	r1, r2, #4
 8007fde:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 8007fe2:	fa4c fc01 	asr.w	ip, ip, r1
 8007fe6:	ea0c 0c0a 	and.w	ip, ip, sl
 8007fea:	fa3c fc02 	lsrs.w	ip, ip, r2
 8007fee:	d1d2      	bne.n	8007f96 <_DrawBitmap+0x37a>
 8007ff0:	2b01      	cmp	r3, #1
 8007ff2:	d114      	bne.n	800801e <_DrawBitmap+0x402>
 8007ff4:	f8cd b000 	str.w	fp, [sp]
 8007ff8:	1e73      	subs	r3, r6, #1
 8007ffa:	f8cd c010 	str.w	ip, [sp, #16]
 8007ffe:	4620      	mov	r0, r4
 8008000:	9906      	ldr	r1, [sp, #24]
 8008002:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8008006:	465a      	mov	r2, fp
 8008008:	47b8      	blx	r7
 800800a:	462a      	mov	r2, r5
 800800c:	4620      	mov	r0, r4
 800800e:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8008010:	f7ff fd52 	bl	8007ab8 <_WriteDataMP>
 8008014:	f8dd c010 	ldr.w	ip, [sp, #16]
 8008018:	4665      	mov	r5, ip
 800801a:	4663      	mov	r3, ip
 800801c:	e7c8      	b.n	8007fb0 <_DrawBitmap+0x394>
 800801e:	4663      	mov	r3, ip
 8008020:	e7c6      	b.n	8007fb0 <_DrawBitmap+0x394>
 8008022:	9f05      	ldr	r7, [sp, #20]
 8008024:	1e7b      	subs	r3, r7, #1
 8008026:	444b      	add	r3, r9
 8008028:	2d00      	cmp	r5, #0
 800802a:	d075      	beq.n	8008118 <_DrawBitmap+0x4fc>
 800802c:	f8cd b000 	str.w	fp, [sp]
 8008030:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8008034:	9906      	ldr	r1, [sp, #24]
 8008036:	4620      	mov	r0, r4
 8008038:	465a      	mov	r2, fp
 800803a:	47b0      	blx	r6
 800803c:	4620      	mov	r0, r4
 800803e:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8008040:	462a      	mov	r2, r5
 8008042:	e067      	b.n	8008114 <_DrawBitmap+0x4f8>
 8008044:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8008046:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008048:	68ac      	ldr	r4, [r5, #8]
 800804a:	2f00      	cmp	r7, #0
 800804c:	d064      	beq.n	8008118 <_DrawBitmap+0x4fc>
 800804e:	4b37      	ldr	r3, [pc, #220]	; (800812c <_DrawBitmap+0x510>)
 8008050:	681b      	ldr	r3, [r3, #0]
 8008052:	7c1b      	ldrb	r3, [r3, #16]
 8008054:	f013 0303 	ands.w	r3, r3, #3
 8008058:	d009      	beq.n	800806e <_DrawBitmap+0x452>
 800805a:	2b02      	cmp	r3, #2
 800805c:	d15c      	bne.n	8008118 <_DrawBitmap+0x4fc>
 800805e:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8008062:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 8008066:	2600      	movs	r6, #0
 8008068:	464f      	mov	r7, r9
 800806a:	4633      	mov	r3, r6
 800806c:	e022      	b.n	80080b4 <_DrawBitmap+0x498>
 800806e:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8008070:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8008072:	9f05      	ldr	r7, [sp, #20]
 8008074:	443b      	add	r3, r7
 8008076:	1b5b      	subs	r3, r3, r5
 8008078:	2b00      	cmp	r3, #0
 800807a:	dd4d      	ble.n	8008118 <_DrawBitmap+0x4fc>
 800807c:	f815 3b01 	ldrb.w	r3, [r5], #1
 8008080:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008082:	4620      	mov	r0, r4
 8008084:	f837 1023 	ldrh.w	r1, [r7, r3, lsl #2]
 8008088:	f7ff fd0a 	bl	8007aa0 <_WriteU16_A1>
 800808c:	e7f0      	b.n	8008070 <_DrawBitmap+0x454>
 800808e:	b913      	cbnz	r3, 8008096 <_DrawBitmap+0x47a>
 8008090:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 8008094:	46b9      	mov	r9, r7
 8008096:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8008098:	f855 302a 	ldr.w	r3, [r5, sl, lsl #2]
 800809c:	f8a8 3000 	strh.w	r3, [r8]
 80080a0:	3601      	adds	r6, #1
 80080a2:	f108 0802 	add.w	r8, r8, #2
 80080a6:	2301      	movs	r3, #1
 80080a8:	9a08      	ldr	r2, [sp, #32]
 80080aa:	9d05      	ldr	r5, [sp, #20]
 80080ac:	3701      	adds	r7, #1
 80080ae:	442a      	add	r2, r5
 80080b0:	42ba      	cmp	r2, r7
 80080b2:	d01c      	beq.n	80080ee <_DrawBitmap+0x4d2>
 80080b4:	9d19      	ldr	r5, [sp, #100]	; 0x64
 80080b6:	9808      	ldr	r0, [sp, #32]
 80080b8:	1a2a      	subs	r2, r5, r0
 80080ba:	f812 a007 	ldrb.w	sl, [r2, r7]
 80080be:	f1ba 0f00 	cmp.w	sl, #0
 80080c2:	d1e4      	bne.n	800808e <_DrawBitmap+0x472>
 80080c4:	2b01      	cmp	r3, #1
 80080c6:	d110      	bne.n	80080ea <_DrawBitmap+0x4ce>
 80080c8:	f8cd b000 	str.w	fp, [sp]
 80080cc:	1e7b      	subs	r3, r7, #1
 80080ce:	4620      	mov	r0, r4
 80080d0:	4649      	mov	r1, r9
 80080d2:	465a      	mov	r2, fp
 80080d4:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 80080d8:	47a8      	blx	r5
 80080da:	4632      	mov	r2, r6
 80080dc:	4620      	mov	r0, r4
 80080de:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 80080e0:	f7ff fcea 	bl	8007ab8 <_WriteDataMP>
 80080e4:	4656      	mov	r6, sl
 80080e6:	4653      	mov	r3, sl
 80080e8:	e7de      	b.n	80080a8 <_DrawBitmap+0x48c>
 80080ea:	4653      	mov	r3, sl
 80080ec:	e7dc      	b.n	80080a8 <_DrawBitmap+0x48c>
 80080ee:	9f08      	ldr	r7, [sp, #32]
 80080f0:	1e6b      	subs	r3, r5, #1
 80080f2:	443b      	add	r3, r7
 80080f4:	b186      	cbz	r6, 8008118 <_DrawBitmap+0x4fc>
 80080f6:	f8cd b000 	str.w	fp, [sp]
 80080fa:	4620      	mov	r0, r4
 80080fc:	4649      	mov	r1, r9
 80080fe:	465a      	mov	r2, fp
 8008100:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 8008104:	47a8      	blx	r5
 8008106:	4620      	mov	r0, r4
 8008108:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 800810a:	4632      	mov	r2, r6
 800810c:	e002      	b.n	8008114 <_DrawBitmap+0x4f8>
 800810e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8008110:	9919      	ldr	r1, [sp, #100]	; 0x64
 8008112:	9a05      	ldr	r2, [sp, #20]
 8008114:	f7ff fcd0 	bl	8007ab8 <_WriteDataMP>
 8008118:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800811a:	9f18      	ldr	r7, [sp, #96]	; 0x60
 800811c:	443d      	add	r5, r7
 800811e:	9519      	str	r5, [sp, #100]	; 0x64
 8008120:	f10b 0b01 	add.w	fp, fp, #1
 8008124:	e5a5      	b.n	8007c72 <_DrawBitmap+0x56>
 8008126:	b00d      	add	sp, #52	; 0x34
 8008128:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800812c:	200000b8 	.word	0x200000b8

08008130 <GUIDRV_FlexColor_SetMode16bppC0B8>:
 8008130:	b510      	push	{r4, lr}
 8008132:	4604      	mov	r4, r0
 8008134:	f000 fa60 	bl	80085f8 <GUIDRV_FlexColor__InitOnce>
 8008138:	68a4      	ldr	r4, [r4, #8]
 800813a:	4b10      	ldr	r3, [pc, #64]	; (800817c <GUIDRV_FlexColor_SetMode16bppC0B8+0x4c>)
 800813c:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8008140:	4b0f      	ldr	r3, [pc, #60]	; (8008180 <GUIDRV_FlexColor_SetMode16bppC0B8+0x50>)
 8008142:	f8c4 30f0 	str.w	r3, [r4, #240]	; 0xf0
 8008146:	4b0f      	ldr	r3, [pc, #60]	; (8008184 <GUIDRV_FlexColor_SetMode16bppC0B8+0x54>)
 8008148:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 800814c:	4b0e      	ldr	r3, [pc, #56]	; (8008188 <GUIDRV_FlexColor_SetMode16bppC0B8+0x58>)
 800814e:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
 8008152:	4b0e      	ldr	r3, [pc, #56]	; (800818c <GUIDRV_FlexColor_SetMode16bppC0B8+0x5c>)
 8008154:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 8008158:	4b0d      	ldr	r3, [pc, #52]	; (8008190 <GUIDRV_FlexColor_SetMode16bppC0B8+0x60>)
 800815a:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 800815e:	f8d4 30cc 	ldr.w	r3, [r4, #204]	; 0xcc
 8008162:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8008166:	4620      	mov	r0, r4
 8008168:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800816c:	2108      	movs	r1, #8
 800816e:	4798      	blx	r3
 8008170:	2310      	movs	r3, #16
 8008172:	63a3      	str	r3, [r4, #56]	; 0x38
 8008174:	4b07      	ldr	r3, [pc, #28]	; (8008194 <GUIDRV_FlexColor_SetMode16bppC0B8+0x64>)
 8008176:	6463      	str	r3, [r4, #68]	; 0x44
 8008178:	bd10      	pop	{r4, pc}
 800817a:	bf00      	nop
 800817c:	08007c1d 	.word	0x08007c1d
 8008180:	08007b11 	.word	0x08007b11
 8008184:	08008547 	.word	0x08008547
 8008188:	080084b7 	.word	0x080084b7
 800818c:	08007aff 	.word	0x08007aff
 8008190:	08007b09 	.word	0x08007b09
 8008194:	08012500 	.word	0x08012500

08008198 <_Log2PhysX_X0Y0S0>:
 8008198:	4608      	mov	r0, r1
 800819a:	4770      	bx	lr

0800819c <_Log2PhysX_X1Y0S0>:
 800819c:	6800      	ldr	r0, [r0, #0]
 800819e:	1a40      	subs	r0, r0, r1
 80081a0:	3801      	subs	r0, #1
 80081a2:	4770      	bx	lr

080081a4 <_Log2PhysX_X0Y1S0>:
 80081a4:	4608      	mov	r0, r1
 80081a6:	4770      	bx	lr

080081a8 <_Log2PhysX_X1Y1S0>:
 80081a8:	6800      	ldr	r0, [r0, #0]
 80081aa:	1a40      	subs	r0, r0, r1
 80081ac:	3801      	subs	r0, #1
 80081ae:	4770      	bx	lr

080081b0 <_Log2PhysX_X0Y0S1>:
 80081b0:	4610      	mov	r0, r2
 80081b2:	4770      	bx	lr

080081b4 <_Log2PhysX_X1Y0S1>:
 80081b4:	6840      	ldr	r0, [r0, #4]
 80081b6:	1a80      	subs	r0, r0, r2
 80081b8:	3801      	subs	r0, #1
 80081ba:	4770      	bx	lr

080081bc <_Log2PhysX_X0Y1S1>:
 80081bc:	4610      	mov	r0, r2
 80081be:	4770      	bx	lr

080081c0 <_Log2PhysX_X1Y1S1>:
 80081c0:	6840      	ldr	r0, [r0, #4]
 80081c2:	1a80      	subs	r0, r0, r2
 80081c4:	3801      	subs	r0, #1
 80081c6:	4770      	bx	lr

080081c8 <_Log2PhysY_X0Y0S0>:
 80081c8:	4610      	mov	r0, r2
 80081ca:	4770      	bx	lr

080081cc <_Log2PhysY_X1Y0S0>:
 80081cc:	4610      	mov	r0, r2
 80081ce:	4770      	bx	lr

080081d0 <_Log2PhysY_X0Y1S0>:
 80081d0:	6840      	ldr	r0, [r0, #4]
 80081d2:	1a80      	subs	r0, r0, r2
 80081d4:	3801      	subs	r0, #1
 80081d6:	4770      	bx	lr

080081d8 <_Log2PhysY_X1Y1S0>:
 80081d8:	6840      	ldr	r0, [r0, #4]
 80081da:	1a80      	subs	r0, r0, r2
 80081dc:	3801      	subs	r0, #1
 80081de:	4770      	bx	lr

080081e0 <_Log2PhysY_X0Y0S1>:
 80081e0:	4608      	mov	r0, r1
 80081e2:	4770      	bx	lr

080081e4 <_Log2PhysY_X1Y0S1>:
 80081e4:	4608      	mov	r0, r1
 80081e6:	4770      	bx	lr

080081e8 <_Log2PhysY_X0Y1S1>:
 80081e8:	6800      	ldr	r0, [r0, #0]
 80081ea:	1a40      	subs	r0, r0, r1
 80081ec:	3801      	subs	r0, #1
 80081ee:	4770      	bx	lr

080081f0 <_Log2PhysY_X1Y1S1>:
 80081f0:	6800      	ldr	r0, [r0, #0]
 80081f2:	1a40      	subs	r0, r0, r1
 80081f4:	3801      	subs	r0, #1
 80081f6:	4770      	bx	lr

080081f8 <_SetPixelIndex>:
 80081f8:	b510      	push	{r4, lr}
 80081fa:	6884      	ldr	r4, [r0, #8]
 80081fc:	f8d4 40f8 	ldr.w	r4, [r4, #248]	; 0xf8
 8008200:	47a0      	blx	r4
 8008202:	bd10      	pop	{r4, pc}

08008204 <_GetPixelIndex>:
 8008204:	b508      	push	{r3, lr}
 8008206:	6883      	ldr	r3, [r0, #8]
 8008208:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 800820c:	4798      	blx	r3
 800820e:	bd08      	pop	{r3, pc}

08008210 <_XorPixel>:
 8008210:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008212:	4604      	mov	r4, r0
 8008214:	460f      	mov	r7, r1
 8008216:	4616      	mov	r6, r2
 8008218:	6885      	ldr	r5, [r0, #8]
 800821a:	f7ff fff3 	bl	8008204 <_GetPixelIndex>
 800821e:	9001      	str	r0, [sp, #4]
 8008220:	f8dd e004 	ldr.w	lr, [sp, #4]
 8008224:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8008226:	4620      	mov	r0, r4
 8008228:	4639      	mov	r1, r7
 800822a:	4632      	mov	r2, r6
 800822c:	ea8e 0303 	eor.w	r3, lr, r3
 8008230:	f7ff ffe2 	bl	80081f8 <_SetPixelIndex>
 8008234:	b003      	add	sp, #12
 8008236:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008238 <_DrawHLine>:
 8008238:	b513      	push	{r0, r1, r4, lr}
 800823a:	6884      	ldr	r4, [r0, #8]
 800823c:	9200      	str	r2, [sp, #0]
 800823e:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 8008242:	47a0      	blx	r4
 8008244:	b002      	add	sp, #8
 8008246:	bd10      	pop	{r4, pc}

08008248 <_DrawVLine>:
 8008248:	b513      	push	{r0, r1, r4, lr}
 800824a:	6884      	ldr	r4, [r0, #8]
 800824c:	9300      	str	r3, [sp, #0]
 800824e:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 8008252:	460b      	mov	r3, r1
 8008254:	47a0      	blx	r4
 8008256:	b002      	add	sp, #8
 8008258:	bd10      	pop	{r4, pc}

0800825a <_FillRect>:
 800825a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800825c:	9c06      	ldr	r4, [sp, #24]
 800825e:	6885      	ldr	r5, [r0, #8]
 8008260:	9400      	str	r4, [sp, #0]
 8008262:	f8d5 40f0 	ldr.w	r4, [r5, #240]	; 0xf0
 8008266:	47a0      	blx	r4
 8008268:	b003      	add	sp, #12
 800826a:	bd30      	pop	{r4, r5, pc}

0800826c <_DrawBitmap>:
 800826c:	b530      	push	{r4, r5, lr}
 800826e:	b087      	sub	sp, #28
 8008270:	6885      	ldr	r5, [r0, #8]
 8008272:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8008274:	9400      	str	r4, [sp, #0]
 8008276:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8008278:	9401      	str	r4, [sp, #4]
 800827a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800827c:	9402      	str	r4, [sp, #8]
 800827e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8008280:	9403      	str	r4, [sp, #12]
 8008282:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8008284:	9404      	str	r4, [sp, #16]
 8008286:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8008288:	9405      	str	r4, [sp, #20]
 800828a:	f8d5 40ec 	ldr.w	r4, [r5, #236]	; 0xec
 800828e:	47a0      	blx	r4
 8008290:	b007      	add	sp, #28
 8008292:	bd30      	pop	{r4, r5, pc}

08008294 <_GetDevFunc_SetRect>:
 8008294:	4770      	bx	lr
	...

08008298 <_GetDevFunc_SetRectOutside>:
 8008298:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800829a:	9e07      	ldr	r6, [sp, #28]
 800829c:	6884      	ldr	r4, [r0, #8]
 800829e:	4d0c      	ldr	r5, [pc, #48]	; (80082d0 <_GetDevFunc_SetRectOutside+0x38>)
 80082a0:	b176      	cbz	r6, 80082c0 <_GetDevFunc_SetRectOutside+0x28>
 80082a2:	6828      	ldr	r0, [r5, #0]
 80082a4:	b988      	cbnz	r0, 80082ca <_GetDevFunc_SetRectOutside+0x32>
 80082a6:	9806      	ldr	r0, [sp, #24]
 80082a8:	9000      	str	r0, [sp, #0]
 80082aa:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 80082ae:	4620      	mov	r0, r4
 80082b0:	47b0      	blx	r6
 80082b2:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
 80082b6:	602b      	str	r3, [r5, #0]
 80082b8:	4b06      	ldr	r3, [pc, #24]	; (80082d4 <_GetDevFunc_SetRectOutside+0x3c>)
 80082ba:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 80082be:	e004      	b.n	80082ca <_GetDevFunc_SetRectOutside+0x32>
 80082c0:	682b      	ldr	r3, [r5, #0]
 80082c2:	b113      	cbz	r3, 80082ca <_GetDevFunc_SetRectOutside+0x32>
 80082c4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 80082c8:	602e      	str	r6, [r5, #0]
 80082ca:	b002      	add	sp, #8
 80082cc:	bd70      	pop	{r4, r5, r6, pc}
 80082ce:	bf00      	nop
 80082d0:	20002af4 	.word	0x20002af4
 80082d4:	08008295 	.word	0x08008295

080082d8 <_ReadPixelCust_16bpp>:
 80082d8:	b508      	push	{r3, lr}
 80082da:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80082dc:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 80082e0:	6990      	ldr	r0, [r2, #24]
 80082e2:	4798      	blx	r3
 80082e4:	bd08      	pop	{r3, pc}

080082e6 <_ReadPixelCust_18bpp>:
 80082e6:	b508      	push	{r3, lr}
 80082e8:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80082ea:	f8d0 30e0 	ldr.w	r3, [r0, #224]	; 0xe0
 80082ee:	6990      	ldr	r0, [r2, #24]
 80082f0:	4798      	blx	r3
 80082f2:	bd08      	pop	{r3, pc}

080082f4 <_ReadRectCust_16bpp>:
 80082f4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80082f8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80082fa:	6884      	ldr	r4, [r0, #8]
 80082fc:	9500      	str	r5, [sp, #0]
 80082fe:	4617      	mov	r7, r2
 8008300:	4620      	mov	r0, r4
 8008302:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8008306:	4699      	mov	r9, r3
 8008308:	4688      	mov	r8, r1
 800830a:	1bed      	subs	r5, r5, r7
 800830c:	47b0      	blx	r6
 800830e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8008310:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
 8008314:	6988      	ldr	r0, [r1, #24]
 8008316:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8008318:	ebc8 0809 	rsb	r8, r8, r9
 800831c:	1c6a      	adds	r2, r5, #1
 800831e:	fb08 2202 	mla	r2, r8, r2, r2
 8008322:	4798      	blx	r3
 8008324:	b003      	add	sp, #12
 8008326:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800832a <_ReadRectCust_18bpp>:
 800832a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800832e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8008330:	6884      	ldr	r4, [r0, #8]
 8008332:	9500      	str	r5, [sp, #0]
 8008334:	4617      	mov	r7, r2
 8008336:	4620      	mov	r0, r4
 8008338:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800833c:	4699      	mov	r9, r3
 800833e:	4688      	mov	r8, r1
 8008340:	1bed      	subs	r5, r5, r7
 8008342:	47b0      	blx	r6
 8008344:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8008346:	f8d4 30e8 	ldr.w	r3, [r4, #232]	; 0xe8
 800834a:	6988      	ldr	r0, [r1, #24]
 800834c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800834e:	ebc8 0809 	rsb	r8, r8, r9
 8008352:	1c6a      	adds	r2, r5, #1
 8008354:	fb08 2202 	mla	r2, r8, r2, r2
 8008358:	4798      	blx	r3
 800835a:	b003      	add	sp, #12
 800835c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08008360 <_GetDevFunc>:
 8008360:	3901      	subs	r1, #1
 8008362:	2917      	cmp	r1, #23
 8008364:	d828      	bhi.n	80083b8 <_GetDevFunc+0x58>
 8008366:	e8df f001 	tbb	[pc, r1]
 800836a:	2714      	.short	0x2714
 800836c:	27272727 	.word	0x27272727
 8008370:	0e272727 	.word	0x0e272727
 8008374:	0c191210 	.word	0x0c191210
 8008378:	27272729 	.word	0x27272729
 800837c:	23272727 	.word	0x23272727
 8008380:	251e      	.short	0x251e
 8008382:	480f      	ldr	r0, [pc, #60]	; (80083c0 <_GetDevFunc+0x60>)
 8008384:	4770      	bx	lr
 8008386:	480f      	ldr	r0, [pc, #60]	; (80083c4 <_GetDevFunc+0x64>)
 8008388:	4770      	bx	lr
 800838a:	480f      	ldr	r0, [pc, #60]	; (80083c8 <_GetDevFunc+0x68>)
 800838c:	4770      	bx	lr
 800838e:	480f      	ldr	r0, [pc, #60]	; (80083cc <_GetDevFunc+0x6c>)
 8008390:	4770      	bx	lr
 8008392:	6803      	ldr	r3, [r0, #0]
 8008394:	689b      	ldr	r3, [r3, #8]
 8008396:	f8d3 0104 	ldr.w	r0, [r3, #260]	; 0x104
 800839a:	4770      	bx	lr
 800839c:	6803      	ldr	r3, [r0, #0]
 800839e:	689b      	ldr	r3, [r3, #8]
 80083a0:	f8d3 00fc 	ldr.w	r0, [r3, #252]	; 0xfc
 80083a4:	4770      	bx	lr
 80083a6:	6803      	ldr	r3, [r0, #0]
 80083a8:	689b      	ldr	r3, [r3, #8]
 80083aa:	f8d3 0100 	ldr.w	r0, [r3, #256]	; 0x100
 80083ae:	4770      	bx	lr
 80083b0:	4807      	ldr	r0, [pc, #28]	; (80083d0 <_GetDevFunc+0x70>)
 80083b2:	4770      	bx	lr
 80083b4:	4807      	ldr	r0, [pc, #28]	; (80083d4 <_GetDevFunc+0x74>)
 80083b6:	4770      	bx	lr
 80083b8:	2000      	movs	r0, #0
 80083ba:	4770      	bx	lr
 80083bc:	4806      	ldr	r0, [pc, #24]	; (80083d8 <_GetDevFunc+0x78>)
 80083be:	4770      	bx	lr
 80083c0:	08008759 	.word	0x08008759
 80083c4:	0800872f 	.word	0x0800872f
 80083c8:	0800871b 	.word	0x0800871b
 80083cc:	080086d1 	.word	0x080086d1
 80083d0:	08008635 	.word	0x08008635
 80083d4:	08008299 	.word	0x08008299
 80083d8:	08008743 	.word	0x08008743

080083dc <_GetDevProp>:
 80083dc:	3901      	subs	r1, #1
 80083de:	6880      	ldr	r0, [r0, #8]
 80083e0:	290d      	cmp	r1, #13
 80083e2:	d823      	bhi.n	800842c <_GetDevProp+0x50>
 80083e4:	e8df f001 	tbb	[pc, r1]
 80083e8:	0f0d0b09 	.word	0x0f0d0b09
 80083ec:	11222222 	.word	0x11222222
 80083f0:	13252507 	.word	0x13252507
 80083f4:	1d18      	.short	0x1d18
 80083f6:	2000      	movs	r0, #0
 80083f8:	4770      	bx	lr
 80083fa:	6800      	ldr	r0, [r0, #0]
 80083fc:	4770      	bx	lr
 80083fe:	6840      	ldr	r0, [r0, #4]
 8008400:	4770      	bx	lr
 8008402:	6880      	ldr	r0, [r0, #8]
 8008404:	4770      	bx	lr
 8008406:	68c0      	ldr	r0, [r0, #12]
 8008408:	4770      	bx	lr
 800840a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800840c:	4770      	bx	lr
 800840e:	b188      	cbz	r0, 8008434 <_GetDevProp+0x58>
 8008410:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8008412:	f000 0001 	and.w	r0, r0, #1
 8008416:	4770      	bx	lr
 8008418:	b160      	cbz	r0, 8008434 <_GetDevProp+0x58>
 800841a:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800841c:	f3c0 0040 	ubfx	r0, r0, #1, #1
 8008420:	4770      	bx	lr
 8008422:	b138      	cbz	r0, 8008434 <_GetDevProp+0x58>
 8008424:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8008426:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800842a:	4770      	bx	lr
 800842c:	f04f 30ff 	mov.w	r0, #4294967295
 8008430:	4770      	bx	lr
 8008432:	2001      	movs	r0, #1
 8008434:	4770      	bx	lr

08008436 <_GetDevData>:
 8008436:	6883      	ldr	r3, [r0, #8]
 8008438:	2901      	cmp	r1, #1
 800843a:	bf0c      	ite	eq
 800843c:	6c58      	ldreq	r0, [r3, #68]	; 0x44
 800843e:	2000      	movne	r0, #0
 8008440:	4770      	bx	lr

08008442 <_GetRect>:
 8008442:	6883      	ldr	r3, [r0, #8]
 8008444:	2200      	movs	r2, #0
 8008446:	800a      	strh	r2, [r1, #0]
 8008448:	804a      	strh	r2, [r1, #2]
 800844a:	681a      	ldr	r2, [r3, #0]
 800844c:	685b      	ldr	r3, [r3, #4]
 800844e:	3a01      	subs	r2, #1
 8008450:	3b01      	subs	r3, #1
 8008452:	808a      	strh	r2, [r1, #4]
 8008454:	80cb      	strh	r3, [r1, #6]
 8008456:	4770      	bx	lr

08008458 <GUIDRV_FlexColor__SetLog2Phys>:
 8008458:	b5f0      	push	{r4, r5, r6, r7, lr}
 800845a:	4d10      	ldr	r5, [pc, #64]	; (800849c <GUIDRV_FlexColor__SetLog2Phys+0x44>)
 800845c:	462e      	mov	r6, r5
 800845e:	4607      	mov	r7, r0
 8008460:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8008462:	b091      	sub	sp, #68	; 0x44
 8008464:	466c      	mov	r4, sp
 8008466:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008468:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800846c:	3520      	adds	r5, #32
 800846e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8008472:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008474:	ac08      	add	r4, sp, #32
 8008476:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008478:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800847c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8008480:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008482:	aa10      	add	r2, sp, #64	; 0x40
 8008484:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8008488:	f853 2c40 	ldr.w	r2, [r3, #-64]
 800848c:	f8c7 2108 	str.w	r2, [r7, #264]	; 0x108
 8008490:	f853 3c20 	ldr.w	r3, [r3, #-32]
 8008494:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8008498:	b011      	add	sp, #68	; 0x44
 800849a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800849c:	080101e4 	.word	0x080101e4

080084a0 <_SetOrg>:
 80084a0:	b507      	push	{r0, r1, r2, lr}
 80084a2:	6980      	ldr	r0, [r0, #24]
 80084a4:	e88d 0006 	stmia.w	sp, {r1, r2}
 80084a8:	2103      	movs	r1, #3
 80084aa:	466a      	mov	r2, sp
 80084ac:	f7f8 fa4c 	bl	8000948 <LCD_X_DisplayDriver>
 80084b0:	b003      	add	sp, #12
 80084b2:	f85d fb04 	ldr.w	pc, [sp], #4

080084b6 <GUIDRV_FlexColor__SetPixelIndexNoCache>:
 80084b6:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80084ba:	6884      	ldr	r4, [r0, #8]
 80084bc:	4698      	mov	r8, r3
 80084be:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80084c0:	079b      	lsls	r3, r3, #30
 80084c2:	4689      	mov	r9, r1
 80084c4:	4617      	mov	r7, r2
 80084c6:	d532      	bpl.n	800852e <GUIDRV_FlexColor__SetPixelIndexNoCache+0x78>
 80084c8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80084cc:	4620      	mov	r0, r4
 80084ce:	4798      	blx	r3
 80084d0:	f8d4 510c 	ldr.w	r5, [r4, #268]	; 0x10c
 80084d4:	4606      	mov	r6, r0
 80084d6:	463a      	mov	r2, r7
 80084d8:	4620      	mov	r0, r4
 80084da:	4649      	mov	r1, r9
 80084dc:	47a8      	blx	r5
 80084de:	6923      	ldr	r3, [r4, #16]
 80084e0:	69a2      	ldr	r2, [r4, #24]
 80084e2:	429e      	cmp	r6, r3
 80084e4:	bfac      	ite	ge
 80084e6:	2300      	movge	r3, #0
 80084e8:	2301      	movlt	r3, #1
 80084ea:	4296      	cmp	r6, r2
 80084ec:	bfd4      	ite	le
 80084ee:	461a      	movle	r2, r3
 80084f0:	f043 0201 	orrgt.w	r2, r3, #1
 80084f4:	6963      	ldr	r3, [r4, #20]
 80084f6:	4298      	cmp	r0, r3
 80084f8:	bfac      	ite	ge
 80084fa:	4613      	movge	r3, r2
 80084fc:	f042 0301 	orrlt.w	r3, r2, #1
 8008500:	4605      	mov	r5, r0
 8008502:	b913      	cbnz	r3, 800850a <GUIDRV_FlexColor__SetPixelIndexNoCache+0x54>
 8008504:	69e3      	ldr	r3, [r4, #28]
 8008506:	4298      	cmp	r0, r3
 8008508:	dd0a      	ble.n	8008520 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x6a>
 800850a:	6862      	ldr	r2, [r4, #4]
 800850c:	6823      	ldr	r3, [r4, #0]
 800850e:	3a01      	subs	r2, #1
 8008510:	9200      	str	r2, [sp, #0]
 8008512:	2100      	movs	r1, #0
 8008514:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8008518:	4620      	mov	r0, r4
 800851a:	460a      	mov	r2, r1
 800851c:	3b01      	subs	r3, #1
 800851e:	47b8      	blx	r7
 8008520:	f8d4 70ac 	ldr.w	r7, [r4, #172]	; 0xac
 8008524:	4620      	mov	r0, r4
 8008526:	4631      	mov	r1, r6
 8008528:	462a      	mov	r2, r5
 800852a:	47b8      	blx	r7
 800852c:	e003      	b.n	8008536 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x80>
 800852e:	f8d4 50ac 	ldr.w	r5, [r4, #172]	; 0xac
 8008532:	4620      	mov	r0, r4
 8008534:	47a8      	blx	r5
 8008536:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800853a:	4620      	mov	r0, r4
 800853c:	4641      	mov	r1, r8
 800853e:	4798      	blx	r3
 8008540:	b003      	add	sp, #12
 8008542:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08008546 <GUIDRV_FlexColor__GetPixelIndexNoCache>:
 8008546:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008548:	6884      	ldr	r4, [r0, #8]
 800854a:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800854c:	079b      	lsls	r3, r3, #30
 800854e:	460f      	mov	r7, r1
 8008550:	4616      	mov	r6, r2
 8008552:	d545      	bpl.n	80085e0 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x9a>
 8008554:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8008558:	4620      	mov	r0, r4
 800855a:	4798      	blx	r3
 800855c:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8008560:	4632      	mov	r2, r6
 8008562:	4605      	mov	r5, r0
 8008564:	4639      	mov	r1, r7
 8008566:	4620      	mov	r0, r4
 8008568:	4798      	blx	r3
 800856a:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800856e:	4606      	mov	r6, r0
 8008570:	b11b      	cbz	r3, 800857a <GUIDRV_FlexColor__GetPixelIndexNoCache+0x34>
 8008572:	4620      	mov	r0, r4
 8008574:	2101      	movs	r1, #1
 8008576:	2200      	movs	r2, #0
 8008578:	4798      	blx	r3
 800857a:	6923      	ldr	r3, [r4, #16]
 800857c:	69a2      	ldr	r2, [r4, #24]
 800857e:	429d      	cmp	r5, r3
 8008580:	bfac      	ite	ge
 8008582:	2300      	movge	r3, #0
 8008584:	2301      	movlt	r3, #1
 8008586:	4295      	cmp	r5, r2
 8008588:	bfd4      	ite	le
 800858a:	461a      	movle	r2, r3
 800858c:	f043 0201 	orrgt.w	r2, r3, #1
 8008590:	6963      	ldr	r3, [r4, #20]
 8008592:	429e      	cmp	r6, r3
 8008594:	bfac      	ite	ge
 8008596:	4613      	movge	r3, r2
 8008598:	f042 0301 	orrlt.w	r3, r2, #1
 800859c:	b913      	cbnz	r3, 80085a4 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x5e>
 800859e:	69e3      	ldr	r3, [r4, #28]
 80085a0:	429e      	cmp	r6, r3
 80085a2:	dd0a      	ble.n	80085ba <GUIDRV_FlexColor__GetPixelIndexNoCache+0x74>
 80085a4:	6862      	ldr	r2, [r4, #4]
 80085a6:	6823      	ldr	r3, [r4, #0]
 80085a8:	3a01      	subs	r2, #1
 80085aa:	9200      	str	r2, [sp, #0]
 80085ac:	2100      	movs	r1, #0
 80085ae:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 80085b2:	4620      	mov	r0, r4
 80085b4:	460a      	mov	r2, r1
 80085b6:	3b01      	subs	r3, #1
 80085b8:	47b8      	blx	r7
 80085ba:	4629      	mov	r1, r5
 80085bc:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 80085c0:	4620      	mov	r0, r4
 80085c2:	4632      	mov	r2, r6
 80085c4:	4798      	blx	r3
 80085c6:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 80085ca:	4620      	mov	r0, r4
 80085cc:	4798      	blx	r3
 80085ce:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 80085d2:	4605      	mov	r5, r0
 80085d4:	b16b      	cbz	r3, 80085f2 <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 80085d6:	4620      	mov	r0, r4
 80085d8:	2100      	movs	r1, #0
 80085da:	2201      	movs	r2, #1
 80085dc:	4798      	blx	r3
 80085de:	e008      	b.n	80085f2 <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 80085e0:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 80085e4:	4620      	mov	r0, r4
 80085e6:	4798      	blx	r3
 80085e8:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 80085ec:	4620      	mov	r0, r4
 80085ee:	4798      	blx	r3
 80085f0:	4605      	mov	r5, r0
 80085f2:	4628      	mov	r0, r5
 80085f4:	b003      	add	sp, #12
 80085f6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080085f8 <GUIDRV_FlexColor__InitOnce>:
 80085f8:	b538      	push	{r3, r4, r5, lr}
 80085fa:	6885      	ldr	r5, [r0, #8]
 80085fc:	4604      	mov	r4, r0
 80085fe:	b99d      	cbnz	r5, 8008628 <GUIDRV_FlexColor__InitOnce+0x30>
 8008600:	f44f 70be 	mov.w	r0, #380	; 0x17c
 8008604:	f003 fa04 	bl	800ba10 <GUI_ALLOC_GetFixedBlock>
 8008608:	4b08      	ldr	r3, [pc, #32]	; (800862c <GUIDRV_FlexColor__InitOnce+0x34>)
 800860a:	60a0      	str	r0, [r4, #8]
 800860c:	681b      	ldr	r3, [r3, #0]
 800860e:	f44f 72be 	mov.w	r2, #380	; 0x17c
 8008612:	4629      	mov	r1, r5
 8008614:	4798      	blx	r3
 8008616:	68a3      	ldr	r3, [r4, #8]
 8008618:	2202      	movs	r2, #2
 800861a:	84da      	strh	r2, [r3, #38]	; 0x26
 800861c:	2201      	movs	r2, #1
 800861e:	621a      	str	r2, [r3, #32]
 8008620:	4a03      	ldr	r2, [pc, #12]	; (8008630 <GUIDRV_FlexColor__InitOnce+0x38>)
 8008622:	641c      	str	r4, [r3, #64]	; 0x40
 8008624:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
 8008628:	bd38      	pop	{r3, r4, r5, pc}
 800862a:	bf00      	nop
 800862c:	200000a4 	.word	0x200000a4
 8008630:	08008459 	.word	0x08008459

08008634 <_SetDevFunc>:
 8008634:	b570      	push	{r4, r5, r6, lr}
 8008636:	4606      	mov	r6, r0
 8008638:	460d      	mov	r5, r1
 800863a:	4614      	mov	r4, r2
 800863c:	f7ff ffdc 	bl	80085f8 <GUIDRV_FlexColor__InitOnce>
 8008640:	68b3      	ldr	r3, [r6, #8]
 8008642:	2b00      	cmp	r3, #0
 8008644:	d03b      	beq.n	80086be <_SetDevFunc+0x8a>
 8008646:	2d26      	cmp	r5, #38	; 0x26
 8008648:	d002      	beq.n	8008650 <_SetDevFunc+0x1c>
 800864a:	2d27      	cmp	r5, #39	; 0x27
 800864c:	d016      	beq.n	800867c <_SetDevFunc+0x48>
 800864e:	bd70      	pop	{r4, r5, r6, pc}
 8008650:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8008652:	2a10      	cmp	r2, #16
 8008654:	d002      	beq.n	800865c <_SetDevFunc+0x28>
 8008656:	2a12      	cmp	r2, #18
 8008658:	d008      	beq.n	800866c <_SetDevFunc+0x38>
 800865a:	bd70      	pop	{r4, r5, r6, pc}
 800865c:	4a18      	ldr	r2, [pc, #96]	; (80086c0 <_SetDevFunc+0x8c>)
 800865e:	f8c3 40dc 	str.w	r4, [r3, #220]	; 0xdc
 8008662:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 8008666:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 800866a:	bd70      	pop	{r4, r5, r6, pc}
 800866c:	4a15      	ldr	r2, [pc, #84]	; (80086c4 <_SetDevFunc+0x90>)
 800866e:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
 8008672:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 8008676:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800867a:	bd70      	pop	{r4, r5, r6, pc}
 800867c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800867e:	2a10      	cmp	r2, #16
 8008680:	d002      	beq.n	8008688 <_SetDevFunc+0x54>
 8008682:	2a12      	cmp	r2, #18
 8008684:	d00e      	beq.n	80086a4 <_SetDevFunc+0x70>
 8008686:	bd70      	pop	{r4, r5, r6, pc}
 8008688:	b13c      	cbz	r4, 800869a <_SetDevFunc+0x66>
 800868a:	4a0f      	ldr	r2, [pc, #60]	; (80086c8 <_SetDevFunc+0x94>)
 800868c:	f8c3 40e4 	str.w	r4, [r3, #228]	; 0xe4
 8008690:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 8008694:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 8008698:	bd70      	pop	{r4, r5, r6, pc}
 800869a:	f8c3 40cc 	str.w	r4, [r3, #204]	; 0xcc
 800869e:	f8c3 40c8 	str.w	r4, [r3, #200]	; 0xc8
 80086a2:	bd70      	pop	{r4, r5, r6, pc}
 80086a4:	b13c      	cbz	r4, 80086b6 <_SetDevFunc+0x82>
 80086a6:	4a09      	ldr	r2, [pc, #36]	; (80086cc <_SetDevFunc+0x98>)
 80086a8:	f8c3 40e8 	str.w	r4, [r3, #232]	; 0xe8
 80086ac:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 80086b0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80086b4:	bd70      	pop	{r4, r5, r6, pc}
 80086b6:	f8c3 40d0 	str.w	r4, [r3, #208]	; 0xd0
 80086ba:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
 80086be:	bd70      	pop	{r4, r5, r6, pc}
 80086c0:	080082d9 	.word	0x080082d9
 80086c4:	080082e7 	.word	0x080082e7
 80086c8:	080082f5 	.word	0x080082f5
 80086cc:	0800832b 	.word	0x0800832b

080086d0 <_GetDevFunc_Init>:
 80086d0:	b538      	push	{r3, r4, r5, lr}
 80086d2:	4605      	mov	r5, r0
 80086d4:	f7ff ff90 	bl	80085f8 <GUIDRV_FlexColor__InitOnce>
 80086d8:	68ac      	ldr	r4, [r5, #8]
 80086da:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80086de:	f003 f997 	bl	800ba10 <GUI_ALLOC_GetFixedBlock>
 80086e2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80086e4:	66a0      	str	r0, [r4, #104]	; 0x68
 80086e6:	3307      	adds	r3, #7
 80086e8:	10d8      	asrs	r0, r3, #3
 80086ea:	6823      	ldr	r3, [r4, #0]
 80086ec:	4358      	muls	r0, r3
 80086ee:	f003 f98f 	bl	800ba10 <GUI_ALLOC_GetFixedBlock>
 80086f2:	2101      	movs	r1, #1
 80086f4:	2200      	movs	r2, #0
 80086f6:	66e0      	str	r0, [r4, #108]	; 0x6c
 80086f8:	69a8      	ldr	r0, [r5, #24]
 80086fa:	f7f8 f925 	bl	8000948 <LCD_X_DisplayDriver>
 80086fe:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8008702:	4605      	mov	r5, r0
 8008704:	4620      	mov	r0, r4
 8008706:	4798      	blx	r3
 8008708:	4620      	mov	r0, r4
 800870a:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 800870e:	4798      	blx	r3
 8008710:	2d00      	cmp	r5, #0
 8008712:	bfd4      	ite	le
 8008714:	2000      	movle	r0, #0
 8008716:	2001      	movgt	r0, #1
 8008718:	bd38      	pop	{r3, r4, r5, pc}

0800871a <_GetDevFunc_SetSize>:
 800871a:	b570      	push	{r4, r5, r6, lr}
 800871c:	4604      	mov	r4, r0
 800871e:	460d      	mov	r5, r1
 8008720:	4616      	mov	r6, r2
 8008722:	f7ff ff69 	bl	80085f8 <GUIDRV_FlexColor__InitOnce>
 8008726:	68a3      	ldr	r3, [r4, #8]
 8008728:	e883 0060 	stmia.w	r3, {r5, r6}
 800872c:	bd70      	pop	{r4, r5, r6, pc}

0800872e <_GetDevFunc_SetVSize>:
 800872e:	b570      	push	{r4, r5, r6, lr}
 8008730:	4604      	mov	r4, r0
 8008732:	460d      	mov	r5, r1
 8008734:	4616      	mov	r6, r2
 8008736:	f7ff ff5f 	bl	80085f8 <GUIDRV_FlexColor__InitOnce>
 800873a:	68a3      	ldr	r3, [r4, #8]
 800873c:	609d      	str	r5, [r3, #8]
 800873e:	60de      	str	r6, [r3, #12]
 8008740:	bd70      	pop	{r4, r5, r6, pc}

08008742 <_GetDevFunc_Off>:
 8008742:	b510      	push	{r4, lr}
 8008744:	4604      	mov	r4, r0
 8008746:	f7ff ff57 	bl	80085f8 <GUIDRV_FlexColor__InitOnce>
 800874a:	69a0      	ldr	r0, [r4, #24]
 800874c:	2106      	movs	r1, #6
 800874e:	2200      	movs	r2, #0
 8008750:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008754:	f7f8 b8f8 	b.w	8000948 <LCD_X_DisplayDriver>

08008758 <_GetDevFunc_On>:
 8008758:	b510      	push	{r4, lr}
 800875a:	4604      	mov	r4, r0
 800875c:	f7ff ff4c 	bl	80085f8 <GUIDRV_FlexColor__InitOnce>
 8008760:	69a0      	ldr	r0, [r4, #24]
 8008762:	2105      	movs	r1, #5
 8008764:	2200      	movs	r2, #0
 8008766:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800876a:	f7f8 b8ed 	b.w	8000948 <LCD_X_DisplayDriver>

0800876e <GUIDRV_FlexColor_Config>:
 800876e:	b538      	push	{r3, r4, r5, lr}
 8008770:	4605      	mov	r5, r0
 8008772:	460c      	mov	r4, r1
 8008774:	f7ff ff40 	bl	80085f8 <GUIDRV_FlexColor__InitOnce>
 8008778:	68ab      	ldr	r3, [r5, #8]
 800877a:	6822      	ldr	r2, [r4, #0]
 800877c:	62da      	str	r2, [r3, #44]	; 0x2c
 800877e:	6862      	ldr	r2, [r4, #4]
 8008780:	631a      	str	r2, [r3, #48]	; 0x30
 8008782:	68a2      	ldr	r2, [r4, #8]
 8008784:	635a      	str	r2, [r3, #52]	; 0x34
 8008786:	0752      	lsls	r2, r2, #29
 8008788:	d507      	bpl.n	800879a <GUIDRV_FlexColor_Config+0x2c>
 800878a:	e893 0006 	ldmia.w	r3, {r1, r2}
 800878e:	601a      	str	r2, [r3, #0]
 8008790:	6059      	str	r1, [r3, #4]
 8008792:	68da      	ldr	r2, [r3, #12]
 8008794:	6899      	ldr	r1, [r3, #8]
 8008796:	60d9      	str	r1, [r3, #12]
 8008798:	609a      	str	r2, [r3, #8]
 800879a:	89a2      	ldrh	r2, [r4, #12]
 800879c:	849a      	strh	r2, [r3, #36]	; 0x24
 800879e:	6922      	ldr	r2, [r4, #16]
 80087a0:	b112      	cbz	r2, 80087a8 <GUIDRV_FlexColor_Config+0x3a>
 80087a2:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80087a6:	621a      	str	r2, [r3, #32]
 80087a8:	bd38      	pop	{r3, r4, r5, pc}

080087aa <GUIDRV_FlexColor_SetFunc>:
 80087aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80087ae:	4604      	mov	r4, r0
 80087b0:	461f      	mov	r7, r3
 80087b2:	4616      	mov	r6, r2
 80087b4:	4688      	mov	r8, r1
 80087b6:	f7ff ff1f 	bl	80085f8 <GUIDRV_FlexColor__InitOnce>
 80087ba:	68a5      	ldr	r5, [r4, #8]
 80087bc:	4641      	mov	r1, r8
 80087be:	2268      	movs	r2, #104	; 0x68
 80087c0:	f505 708a 	add.w	r0, r5, #276	; 0x114
 80087c4:	f007 fc6a 	bl	801009c <memcpy>
 80087c8:	4620      	mov	r0, r4
 80087ca:	47b0      	blx	r6
 80087cc:	4620      	mov	r0, r4
 80087ce:	47b8      	blx	r7
 80087d0:	6923      	ldr	r3, [r4, #16]
 80087d2:	689b      	ldr	r3, [r3, #8]
 80087d4:	4798      	blx	r3
 80087d6:	62a8      	str	r0, [r5, #40]	; 0x28
 80087d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080087dc <LCD_UpdateColorIndices>:
 80087dc:	b510      	push	{r4, lr}
 80087de:	4c07      	ldr	r4, [pc, #28]	; (80087fc <LCD_UpdateColorIndices+0x20>)
 80087e0:	6823      	ldr	r3, [r4, #0]
 80087e2:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80087e4:	f000 fc68 	bl	80090b8 <LCD_Color2Index>
 80087e8:	f000 fc86 	bl	80090f8 <LCD_SetColorIndex>
 80087ec:	6823      	ldr	r3, [r4, #0]
 80087ee:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80087f0:	f000 fc62 	bl	80090b8 <LCD_Color2Index>
 80087f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80087f8:	f000 bc9a 	b.w	8009130 <LCD_SetBkColorIndex>
 80087fc:	200000b8 	.word	0x200000b8

08008800 <LCD_SetClipRectEx>:
 8008800:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008802:	4c09      	ldr	r4, [pc, #36]	; (8008828 <LCD_SetClipRectEx+0x28>)
 8008804:	6823      	ldr	r3, [r4, #0]
 8008806:	7c5a      	ldrb	r2, [r3, #17]
 8008808:	4b08      	ldr	r3, [pc, #32]	; (800882c <LCD_SetClipRectEx+0x2c>)
 800880a:	4605      	mov	r5, r0
 800880c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8008810:	68c2      	ldr	r2, [r0, #12]
 8008812:	4669      	mov	r1, sp
 8008814:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8008816:	4790      	blx	r2
 8008818:	6820      	ldr	r0, [r4, #0]
 800881a:	4629      	mov	r1, r5
 800881c:	466a      	mov	r2, sp
 800881e:	3008      	adds	r0, #8
 8008820:	f000 fcf1 	bl	8009206 <GUI__IntersectRects>
 8008824:	b003      	add	sp, #12
 8008826:	bd30      	pop	{r4, r5, pc}
 8008828:	200000b8 	.word	0x200000b8
 800882c:	20002d24 	.word	0x20002d24

08008830 <LCD_SetVSizeEx>:
 8008830:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008832:	460d      	mov	r5, r1
 8008834:	4614      	mov	r4, r2
 8008836:	f002 f85d 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 800883a:	9001      	str	r0, [sp, #4]
 800883c:	b908      	cbnz	r0, 8008842 <LCD_SetVSizeEx+0x12>
 800883e:	2001      	movs	r0, #1
 8008840:	e00c      	b.n	800885c <LCD_SetVSizeEx+0x2c>
 8008842:	68c3      	ldr	r3, [r0, #12]
 8008844:	210a      	movs	r1, #10
 8008846:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008848:	a801      	add	r0, sp, #4
 800884a:	4798      	blx	r3
 800884c:	4603      	mov	r3, r0
 800884e:	2800      	cmp	r0, #0
 8008850:	d0f5      	beq.n	800883e <LCD_SetVSizeEx+0xe>
 8008852:	9801      	ldr	r0, [sp, #4]
 8008854:	4629      	mov	r1, r5
 8008856:	4622      	mov	r2, r4
 8008858:	4798      	blx	r3
 800885a:	2000      	movs	r0, #0
 800885c:	b003      	add	sp, #12
 800885e:	bd30      	pop	{r4, r5, pc}

08008860 <LCD_SetSizeEx>:
 8008860:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008862:	460d      	mov	r5, r1
 8008864:	4614      	mov	r4, r2
 8008866:	f002 f845 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 800886a:	9001      	str	r0, [sp, #4]
 800886c:	b908      	cbnz	r0, 8008872 <LCD_SetSizeEx+0x12>
 800886e:	2001      	movs	r0, #1
 8008870:	e00c      	b.n	800888c <LCD_SetSizeEx+0x2c>
 8008872:	68c3      	ldr	r3, [r0, #12]
 8008874:	210b      	movs	r1, #11
 8008876:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008878:	a801      	add	r0, sp, #4
 800887a:	4798      	blx	r3
 800887c:	4603      	mov	r3, r0
 800887e:	2800      	cmp	r0, #0
 8008880:	d0f5      	beq.n	800886e <LCD_SetSizeEx+0xe>
 8008882:	9801      	ldr	r0, [sp, #4]
 8008884:	4629      	mov	r1, r5
 8008886:	4622      	mov	r2, r4
 8008888:	4798      	blx	r3
 800888a:	2000      	movs	r0, #0
 800888c:	b003      	add	sp, #12
 800888e:	bd30      	pop	{r4, r5, pc}

08008890 <LCD_SetLUTEntryEx>:
 8008890:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008892:	460d      	mov	r5, r1
 8008894:	4614      	mov	r4, r2
 8008896:	f002 f82d 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 800889a:	9001      	str	r0, [sp, #4]
 800889c:	b908      	cbnz	r0, 80088a2 <LCD_SetLUTEntryEx+0x12>
 800889e:	2001      	movs	r0, #1
 80088a0:	e00c      	b.n	80088bc <LCD_SetLUTEntryEx+0x2c>
 80088a2:	68c3      	ldr	r3, [r0, #12]
 80088a4:	2110      	movs	r1, #16
 80088a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80088a8:	a801      	add	r0, sp, #4
 80088aa:	4798      	blx	r3
 80088ac:	4603      	mov	r3, r0
 80088ae:	2800      	cmp	r0, #0
 80088b0:	d0f5      	beq.n	800889e <LCD_SetLUTEntryEx+0xe>
 80088b2:	9801      	ldr	r0, [sp, #4]
 80088b4:	4629      	mov	r1, r5
 80088b6:	4622      	mov	r2, r4
 80088b8:	4798      	blx	r3
 80088ba:	2000      	movs	r0, #0
 80088bc:	b003      	add	sp, #12
 80088be:	bd30      	pop	{r4, r5, pc}

080088c0 <_GetDevProp>:
 80088c0:	2801      	cmp	r0, #1
 80088c2:	b510      	push	{r4, lr}
 80088c4:	460c      	mov	r4, r1
 80088c6:	dc08      	bgt.n	80088da <_GetDevProp+0x1a>
 80088c8:	f002 f814 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 80088cc:	b120      	cbz	r0, 80088d8 <_GetDevProp+0x18>
 80088ce:	68c3      	ldr	r3, [r0, #12]
 80088d0:	4621      	mov	r1, r4
 80088d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80088d4:	4798      	blx	r3
 80088d6:	bd10      	pop	{r4, pc}
 80088d8:	bd10      	pop	{r4, pc}
 80088da:	2000      	movs	r0, #0
 80088dc:	bd10      	pop	{r4, pc}

080088de <_GetMaxValue>:
 80088de:	b538      	push	{r3, r4, r5, lr}
 80088e0:	4604      	mov	r4, r0
 80088e2:	4621      	mov	r1, r4
 80088e4:	2001      	movs	r0, #1
 80088e6:	f7ff ffeb 	bl	80088c0 <_GetDevProp>
 80088ea:	4621      	mov	r1, r4
 80088ec:	4605      	mov	r5, r0
 80088ee:	2000      	movs	r0, #0
 80088f0:	f7ff ffe6 	bl	80088c0 <_GetDevProp>
 80088f4:	42a8      	cmp	r0, r5
 80088f6:	bfb8      	it	lt
 80088f8:	4628      	movlt	r0, r5
 80088fa:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 80088fe:	bd38      	pop	{r3, r4, r5, pc}

08008900 <LCD_GetXSizeEx>:
 8008900:	2101      	movs	r1, #1
 8008902:	f7ff bfdd 	b.w	80088c0 <_GetDevProp>

08008906 <LCD_GetYSizeEx>:
 8008906:	2102      	movs	r1, #2
 8008908:	f7ff bfda 	b.w	80088c0 <_GetDevProp>

0800890c <LCD_GetVXSizeEx>:
 800890c:	2103      	movs	r1, #3
 800890e:	f7ff bfd7 	b.w	80088c0 <_GetDevProp>

08008912 <LCD_GetVYSizeEx>:
 8008912:	2104      	movs	r1, #4
 8008914:	f7ff bfd4 	b.w	80088c0 <_GetDevProp>

08008918 <LCD_GetBitsPerPixelEx>:
 8008918:	2108      	movs	r1, #8
 800891a:	f7ff bfd1 	b.w	80088c0 <_GetDevProp>

0800891e <LCD_GetNumColorsEx>:
 800891e:	2109      	movs	r1, #9
 8008920:	f7ff bfce 	b.w	80088c0 <_GetDevProp>

08008924 <LCD_GetXSize>:
 8008924:	4b02      	ldr	r3, [pc, #8]	; (8008930 <LCD_GetXSize+0xc>)
 8008926:	681b      	ldr	r3, [r3, #0]
 8008928:	7c58      	ldrb	r0, [r3, #17]
 800892a:	f7ff bfe9 	b.w	8008900 <LCD_GetXSizeEx>
 800892e:	bf00      	nop
 8008930:	200000b8 	.word	0x200000b8

08008934 <LCD_GetYSize>:
 8008934:	4b02      	ldr	r3, [pc, #8]	; (8008940 <LCD_GetYSize+0xc>)
 8008936:	681b      	ldr	r3, [r3, #0]
 8008938:	7c58      	ldrb	r0, [r3, #17]
 800893a:	f7ff bfe4 	b.w	8008906 <LCD_GetYSizeEx>
 800893e:	bf00      	nop
 8008940:	200000b8 	.word	0x200000b8

08008944 <LCD_GetNumColors>:
 8008944:	4b02      	ldr	r3, [pc, #8]	; (8008950 <LCD_GetNumColors+0xc>)
 8008946:	681b      	ldr	r3, [r3, #0]
 8008948:	7c58      	ldrb	r0, [r3, #17]
 800894a:	f7ff bfe8 	b.w	800891e <LCD_GetNumColorsEx>
 800894e:	bf00      	nop
 8008950:	200000b8 	.word	0x200000b8

08008954 <GUI_GetBitsPerPixelEx>:
 8008954:	b508      	push	{r3, lr}
 8008956:	4b04      	ldr	r3, [pc, #16]	; (8008968 <GUI_GetBitsPerPixelEx+0x14>)
 8008958:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800895c:	68c3      	ldr	r3, [r0, #12]
 800895e:	2108      	movs	r1, #8
 8008960:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008962:	4798      	blx	r3
 8008964:	bd08      	pop	{r3, pc}
 8008966:	bf00      	nop
 8008968:	20002d24 	.word	0x20002d24

0800896c <LCD_GetPaletteEx>:
 800896c:	b508      	push	{r3, lr}
 800896e:	f001 ffc1 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 8008972:	b120      	cbz	r0, 800897e <LCD_GetPaletteEx+0x12>
 8008974:	68c3      	ldr	r3, [r0, #12]
 8008976:	2102      	movs	r1, #2
 8008978:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800897a:	4798      	blx	r3
 800897c:	bd08      	pop	{r3, pc}
 800897e:	bd08      	pop	{r3, pc}

08008980 <LCD_GetPalette>:
 8008980:	4b02      	ldr	r3, [pc, #8]	; (800898c <LCD_GetPalette+0xc>)
 8008982:	681b      	ldr	r3, [r3, #0]
 8008984:	7c58      	ldrb	r0, [r3, #17]
 8008986:	f7ff bff1 	b.w	800896c <LCD_GetPaletteEx>
 800898a:	bf00      	nop
 800898c:	200000b8 	.word	0x200000b8

08008990 <GUI_GetpfIndex2ColorEx>:
 8008990:	4b02      	ldr	r3, [pc, #8]	; (800899c <GUI_GetpfIndex2ColorEx+0xc>)
 8008992:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8008996:	691b      	ldr	r3, [r3, #16]
 8008998:	6858      	ldr	r0, [r3, #4]
 800899a:	4770      	bx	lr
 800899c:	20002d24 	.word	0x20002d24

080089a0 <GUI_GetpfColor2IndexEx>:
 80089a0:	4b02      	ldr	r3, [pc, #8]	; (80089ac <GUI_GetpfColor2IndexEx+0xc>)
 80089a2:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80089a6:	691b      	ldr	r3, [r3, #16]
 80089a8:	6818      	ldr	r0, [r3, #0]
 80089aa:	4770      	bx	lr
 80089ac:	20002d24 	.word	0x20002d24

080089b0 <LCD_GetXSizeMax>:
 80089b0:	2001      	movs	r0, #1
 80089b2:	f7ff bf94 	b.w	80088de <_GetMaxValue>

080089b6 <LCD_GetYSizeMax>:
 80089b6:	2002      	movs	r0, #2
 80089b8:	f7ff bf91 	b.w	80088de <_GetMaxValue>

080089bc <LCD_GetVXSizeMax>:
 80089bc:	2003      	movs	r0, #3
 80089be:	f7ff bf8e 	b.w	80088de <_GetMaxValue>
	...

080089c4 <LCD_SetDisplaySize>:
 80089c4:	4b02      	ldr	r3, [pc, #8]	; (80089d0 <LCD_SetDisplaySize+0xc>)
 80089c6:	6018      	str	r0, [r3, #0]
 80089c8:	4b02      	ldr	r3, [pc, #8]	; (80089d4 <LCD_SetDisplaySize+0x10>)
 80089ca:	6019      	str	r1, [r3, #0]
 80089cc:	4770      	bx	lr
 80089ce:	bf00      	nop
 80089d0:	20002afc 	.word	0x20002afc
 80089d4:	20002af8 	.word	0x20002af8

080089d8 <LCD_GetXSizeDisplay>:
 80089d8:	4b01      	ldr	r3, [pc, #4]	; (80089e0 <LCD_GetXSizeDisplay+0x8>)
 80089da:	6818      	ldr	r0, [r3, #0]
 80089dc:	4770      	bx	lr
 80089de:	bf00      	nop
 80089e0:	20002afc 	.word	0x20002afc

080089e4 <LCD_GetYSizeDisplay>:
 80089e4:	4b01      	ldr	r3, [pc, #4]	; (80089ec <LCD_GetYSizeDisplay+0x8>)
 80089e6:	6818      	ldr	r0, [r3, #0]
 80089e8:	4770      	bx	lr
 80089ea:	bf00      	nop
 80089ec:	20002af8 	.word	0x20002af8

080089f0 <LCD__GetBPP>:
 80089f0:	2800      	cmp	r0, #0
 80089f2:	d03b      	beq.n	8008a6c <LCD__GetBPP+0x7c>
 80089f4:	f030 0301 	bics.w	r3, r0, #1
 80089f8:	d029      	beq.n	8008a4e <LCD__GetBPP+0x5e>
 80089fa:	f030 0303 	bics.w	r3, r0, #3
 80089fe:	d028      	beq.n	8008a52 <LCD__GetBPP+0x62>
 8008a00:	f030 0307 	bics.w	r3, r0, #7
 8008a04:	d027      	beq.n	8008a56 <LCD__GetBPP+0x66>
 8008a06:	f030 030f 	bics.w	r3, r0, #15
 8008a0a:	d026      	beq.n	8008a5a <LCD__GetBPP+0x6a>
 8008a0c:	f030 031f 	bics.w	r3, r0, #31
 8008a10:	d025      	beq.n	8008a5e <LCD__GetBPP+0x6e>
 8008a12:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 8008a16:	d024      	beq.n	8008a62 <LCD__GetBPP+0x72>
 8008a18:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 8008a1c:	f023 0301 	bic.w	r3, r3, #1
 8008a20:	b30b      	cbz	r3, 8008a66 <LCD__GetBPP+0x76>
 8008a22:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
 8008a26:	f023 030f 	bic.w	r3, r3, #15
 8008a2a:	b1e3      	cbz	r3, 8008a66 <LCD__GetBPP+0x76>
 8008a2c:	f420 43ff 	bic.w	r3, r0, #32640	; 0x7f80
 8008a30:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8008a34:	b1bb      	cbz	r3, 8008a66 <LCD__GetBPP+0x76>
 8008a36:	0c03      	lsrs	r3, r0, #16
 8008a38:	041b      	lsls	r3, r3, #16
 8008a3a:	b1a3      	cbz	r3, 8008a66 <LCD__GetBPP+0x76>
 8008a3c:	0c83      	lsrs	r3, r0, #18
 8008a3e:	049b      	lsls	r3, r3, #18
 8008a40:	b19b      	cbz	r3, 8008a6a <LCD__GetBPP+0x7a>
 8008a42:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8008a46:	bf0c      	ite	eq
 8008a48:	2018      	moveq	r0, #24
 8008a4a:	2020      	movne	r0, #32
 8008a4c:	4770      	bx	lr
 8008a4e:	2001      	movs	r0, #1
 8008a50:	4770      	bx	lr
 8008a52:	2002      	movs	r0, #2
 8008a54:	4770      	bx	lr
 8008a56:	2003      	movs	r0, #3
 8008a58:	4770      	bx	lr
 8008a5a:	2004      	movs	r0, #4
 8008a5c:	4770      	bx	lr
 8008a5e:	2005      	movs	r0, #5
 8008a60:	4770      	bx	lr
 8008a62:	2008      	movs	r0, #8
 8008a64:	4770      	bx	lr
 8008a66:	2010      	movs	r0, #16
 8008a68:	4770      	bx	lr
 8008a6a:	2012      	movs	r0, #18
 8008a6c:	4770      	bx	lr

08008a6e <LCD__GetBPPDevice>:
 8008a6e:	b508      	push	{r3, lr}
 8008a70:	f7ff ffbe 	bl	80089f0 <LCD__GetBPP>
 8008a74:	2801      	cmp	r0, #1
 8008a76:	d00f      	beq.n	8008a98 <LCD__GetBPPDevice+0x2a>
 8008a78:	1e83      	subs	r3, r0, #2
 8008a7a:	2b06      	cmp	r3, #6
 8008a7c:	d909      	bls.n	8008a92 <LCD__GetBPPDevice+0x24>
 8008a7e:	f1a0 0309 	sub.w	r3, r0, #9
 8008a82:	2b07      	cmp	r3, #7
 8008a84:	d907      	bls.n	8008a96 <LCD__GetBPPDevice+0x28>
 8008a86:	3811      	subs	r0, #17
 8008a88:	2810      	cmp	r0, #16
 8008a8a:	bf34      	ite	cc
 8008a8c:	2020      	movcc	r0, #32
 8008a8e:	2000      	movcs	r0, #0
 8008a90:	bd08      	pop	{r3, pc}
 8008a92:	2008      	movs	r0, #8
 8008a94:	bd08      	pop	{r3, pc}
 8008a96:	2010      	movs	r0, #16
 8008a98:	bd08      	pop	{r3, pc}
	...

08008a9c <_SetDrawMode>:
 8008a9c:	b570      	push	{r4, r5, r6, lr}
 8008a9e:	4b08      	ldr	r3, [pc, #32]	; (8008ac0 <_SetDrawMode+0x24>)
 8008aa0:	681b      	ldr	r3, [r3, #0]
 8008aa2:	7c1a      	ldrb	r2, [r3, #16]
 8008aa4:	ea80 0102 	eor.w	r1, r0, r2
 8008aa8:	0749      	lsls	r1, r1, #29
 8008aaa:	d505      	bpl.n	8008ab8 <_SetDrawMode+0x1c>
 8008aac:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8008aae:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8008ab0:	6826      	ldr	r6, [r4, #0]
 8008ab2:	680d      	ldr	r5, [r1, #0]
 8008ab4:	6025      	str	r5, [r4, #0]
 8008ab6:	600e      	str	r6, [r1, #0]
 8008ab8:	7418      	strb	r0, [r3, #16]
 8008aba:	4610      	mov	r0, r2
 8008abc:	bd70      	pop	{r4, r5, r6, pc}
 8008abe:	bf00      	nop
 8008ac0:	200000b8 	.word	0x200000b8

08008ac4 <LCD_SetDrawMode>:
 8008ac4:	b508      	push	{r3, lr}
 8008ac6:	4b02      	ldr	r3, [pc, #8]	; (8008ad0 <LCD_SetDrawMode+0xc>)
 8008ac8:	681b      	ldr	r3, [r3, #0]
 8008aca:	689b      	ldr	r3, [r3, #8]
 8008acc:	4798      	blx	r3
 8008ace:	bd08      	pop	{r3, pc}
 8008ad0:	200000a0 	.word	0x200000a0

08008ad4 <LCD_DrawPixel>:
 8008ad4:	b538      	push	{r3, r4, r5, lr}
 8008ad6:	4b14      	ldr	r3, [pc, #80]	; (8008b28 <LCD_DrawPixel+0x54>)
 8008ad8:	681b      	ldr	r3, [r3, #0]
 8008ada:	460a      	mov	r2, r1
 8008adc:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 8008ae0:	428a      	cmp	r2, r1
 8008ae2:	4604      	mov	r4, r0
 8008ae4:	db1e      	blt.n	8008b24 <LCD_DrawPixel+0x50>
 8008ae6:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8008aea:	428a      	cmp	r2, r1
 8008aec:	dc1a      	bgt.n	8008b24 <LCD_DrawPixel+0x50>
 8008aee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8008af2:	4288      	cmp	r0, r1
 8008af4:	db16      	blt.n	8008b24 <LCD_DrawPixel+0x50>
 8008af6:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
 8008afa:	4288      	cmp	r0, r1
 8008afc:	dc12      	bgt.n	8008b24 <LCD_DrawPixel+0x50>
 8008afe:	7c19      	ldrb	r1, [r3, #16]
 8008b00:	7c58      	ldrb	r0, [r3, #17]
 8008b02:	f011 0f01 	tst.w	r1, #1
 8008b06:	4909      	ldr	r1, [pc, #36]	; (8008b2c <LCD_DrawPixel+0x58>)
 8008b08:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8008b0c:	d004      	beq.n	8008b18 <LCD_DrawPixel+0x44>
 8008b0e:	68c3      	ldr	r3, [r0, #12]
 8008b10:	4621      	mov	r1, r4
 8008b12:	69db      	ldr	r3, [r3, #28]
 8008b14:	4798      	blx	r3
 8008b16:	bd38      	pop	{r3, r4, r5, pc}
 8008b18:	68c1      	ldr	r1, [r0, #12]
 8008b1a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008b1c:	698d      	ldr	r5, [r1, #24]
 8008b1e:	681b      	ldr	r3, [r3, #0]
 8008b20:	4621      	mov	r1, r4
 8008b22:	47a8      	blx	r5
 8008b24:	bd38      	pop	{r3, r4, r5, pc}
 8008b26:	bf00      	nop
 8008b28:	200000b8 	.word	0x200000b8
 8008b2c:	20002d24 	.word	0x20002d24

08008b30 <LCD_DrawHLine>:
 8008b30:	b538      	push	{r3, r4, r5, lr}
 8008b32:	4b10      	ldr	r3, [pc, #64]	; (8008b74 <LCD_DrawHLine+0x44>)
 8008b34:	681c      	ldr	r4, [r3, #0]
 8008b36:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8008b3a:	4299      	cmp	r1, r3
 8008b3c:	460d      	mov	r5, r1
 8008b3e:	db17      	blt.n	8008b70 <LCD_DrawHLine+0x40>
 8008b40:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8008b44:	4299      	cmp	r1, r3
 8008b46:	dc13      	bgt.n	8008b70 <LCD_DrawHLine+0x40>
 8008b48:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8008b4c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008b50:	4288      	cmp	r0, r1
 8008b52:	bfa8      	it	ge
 8008b54:	4601      	movge	r1, r0
 8008b56:	429a      	cmp	r2, r3
 8008b58:	bfb8      	it	lt
 8008b5a:	4613      	movlt	r3, r2
 8008b5c:	428b      	cmp	r3, r1
 8008b5e:	db07      	blt.n	8008b70 <LCD_DrawHLine+0x40>
 8008b60:	7c60      	ldrb	r0, [r4, #17]
 8008b62:	4a05      	ldr	r2, [pc, #20]	; (8008b78 <LCD_DrawHLine+0x48>)
 8008b64:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8008b68:	68c2      	ldr	r2, [r0, #12]
 8008b6a:	6894      	ldr	r4, [r2, #8]
 8008b6c:	462a      	mov	r2, r5
 8008b6e:	47a0      	blx	r4
 8008b70:	bd38      	pop	{r3, r4, r5, pc}
 8008b72:	bf00      	nop
 8008b74:	200000b8 	.word	0x200000b8
 8008b78:	20002d24 	.word	0x20002d24

08008b7c <LCD_DrawVLine>:
 8008b7c:	b538      	push	{r3, r4, r5, lr}
 8008b7e:	4b10      	ldr	r3, [pc, #64]	; (8008bc0 <LCD_DrawVLine+0x44>)
 8008b80:	681c      	ldr	r4, [r3, #0]
 8008b82:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8008b86:	4605      	mov	r5, r0
 8008b88:	429d      	cmp	r5, r3
 8008b8a:	4610      	mov	r0, r2
 8008b8c:	db17      	blt.n	8008bbe <LCD_DrawVLine+0x42>
 8008b8e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008b92:	429d      	cmp	r5, r3
 8008b94:	dc13      	bgt.n	8008bbe <LCD_DrawVLine+0x42>
 8008b96:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8008b9a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8008b9e:	4291      	cmp	r1, r2
 8008ba0:	bfa8      	it	ge
 8008ba2:	460a      	movge	r2, r1
 8008ba4:	4298      	cmp	r0, r3
 8008ba6:	bfb8      	it	lt
 8008ba8:	4603      	movlt	r3, r0
 8008baa:	4293      	cmp	r3, r2
 8008bac:	db07      	blt.n	8008bbe <LCD_DrawVLine+0x42>
 8008bae:	7c60      	ldrb	r0, [r4, #17]
 8008bb0:	4904      	ldr	r1, [pc, #16]	; (8008bc4 <LCD_DrawVLine+0x48>)
 8008bb2:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8008bb6:	68c1      	ldr	r1, [r0, #12]
 8008bb8:	68cc      	ldr	r4, [r1, #12]
 8008bba:	4629      	mov	r1, r5
 8008bbc:	47a0      	blx	r4
 8008bbe:	bd38      	pop	{r3, r4, r5, pc}
 8008bc0:	200000b8 	.word	0x200000b8
 8008bc4:	20002d24 	.word	0x20002d24

08008bc8 <LCD_FillRect>:
 8008bc8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008bca:	460e      	mov	r6, r1
 8008bcc:	4912      	ldr	r1, [pc, #72]	; (8008c18 <LCD_FillRect+0x50>)
 8008bce:	680c      	ldr	r4, [r1, #0]
 8008bd0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8008bd4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8008bd8:	4288      	cmp	r0, r1
 8008bda:	bfa8      	it	ge
 8008bdc:	4601      	movge	r1, r0
 8008bde:	42aa      	cmp	r2, r5
 8008be0:	bfb8      	it	lt
 8008be2:	4615      	movlt	r5, r2
 8008be4:	428d      	cmp	r5, r1
 8008be6:	db14      	blt.n	8008c12 <LCD_FillRect+0x4a>
 8008be8:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8008bec:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8008bf0:	4296      	cmp	r6, r2
 8008bf2:	bfa8      	it	ge
 8008bf4:	4632      	movge	r2, r6
 8008bf6:	4283      	cmp	r3, r0
 8008bf8:	bfa8      	it	ge
 8008bfa:	4603      	movge	r3, r0
 8008bfc:	4293      	cmp	r3, r2
 8008bfe:	db08      	blt.n	8008c12 <LCD_FillRect+0x4a>
 8008c00:	7c64      	ldrb	r4, [r4, #17]
 8008c02:	4806      	ldr	r0, [pc, #24]	; (8008c1c <LCD_FillRect+0x54>)
 8008c04:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8008c08:	68c4      	ldr	r4, [r0, #12]
 8008c0a:	9300      	str	r3, [sp, #0]
 8008c0c:	6924      	ldr	r4, [r4, #16]
 8008c0e:	462b      	mov	r3, r5
 8008c10:	47a0      	blx	r4
 8008c12:	b002      	add	sp, #8
 8008c14:	bd70      	pop	{r4, r5, r6, pc}
 8008c16:	bf00      	nop
 8008c18:	200000b8 	.word	0x200000b8
 8008c1c:	20002d24 	.word	0x20002d24

08008c20 <LCD__DrawBitmap_1bpp>:
 8008c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c24:	f8df c1ac 	ldr.w	ip, [pc, #428]	; 8008dd4 <LCD__DrawBitmap_1bpp+0x1b4>
 8008c28:	b08f      	sub	sp, #60	; 0x3c
 8008c2a:	f8dc c000 	ldr.w	ip, [ip]
 8008c2e:	9009      	str	r0, [sp, #36]	; 0x24
 8008c30:	460e      	mov	r6, r1
 8008c32:	4615      	mov	r5, r2
 8008c34:	469b      	mov	fp, r3
 8008c36:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8008c38:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 8008c3c:	f1bc 0f00 	cmp.w	ip, #0
 8008c40:	d00d      	beq.n	8008c5e <LCD__DrawBitmap_1bpp+0x3e>
 8008c42:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8008c44:	9e19      	ldr	r6, [sp, #100]	; 0x64
 8008c46:	9500      	str	r5, [sp, #0]
 8008c48:	9601      	str	r6, [sp, #4]
 8008c4a:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8008c4c:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8008c4e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8008c50:	9702      	str	r7, [sp, #8]
 8008c52:	9503      	str	r5, [sp, #12]
 8008c54:	9404      	str	r4, [sp, #16]
 8008c56:	9605      	str	r6, [sp, #20]
 8008c58:	f8dc 4000 	ldr.w	r4, [ip]
 8008c5c:	e053      	b.n	8008d06 <LCD__DrawBitmap_1bpp+0xe6>
 8008c5e:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8008c60:	9819      	ldr	r0, [sp, #100]	; 0x64
 8008c62:	ea47 0300 	orr.w	r3, r7, r0
 8008c66:	2b01      	cmp	r3, #1
 8008c68:	d14f      	bne.n	8008d0a <LCD__DrawBitmap_1bpp+0xea>
 8008c6a:	4b58      	ldr	r3, [pc, #352]	; (8008dcc <LCD__DrawBitmap_1bpp+0x1ac>)
 8008c6c:	6818      	ldr	r0, [r3, #0]
 8008c6e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8008c72:	1a51      	subs	r1, r2, r1
 8008c74:	2900      	cmp	r1, #0
 8008c76:	dd08      	ble.n	8008c8a <LCD__DrawBitmap_1bpp+0x6a>
 8008c78:	ebc1 030b 	rsb	r3, r1, fp
 8008c7c:	2b00      	cmp	r3, #0
 8008c7e:	f340 80a2 	ble.w	8008dc6 <LCD__DrawBitmap_1bpp+0x1a6>
 8008c82:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008c84:	fb07 4401 	mla	r4, r7, r1, r4
 8008c88:	e001      	b.n	8008c8e <LCD__DrawBitmap_1bpp+0x6e>
 8008c8a:	465b      	mov	r3, fp
 8008c8c:	4632      	mov	r2, r6
 8008c8e:	445e      	add	r6, fp
 8008c90:	f9b0 100e 	ldrsh.w	r1, [r0, #14]
 8008c94:	3e01      	subs	r6, #1
 8008c96:	1a76      	subs	r6, r6, r1
 8008c98:	2e00      	cmp	r6, #0
 8008c9a:	dd03      	ble.n	8008ca4 <LCD__DrawBitmap_1bpp+0x84>
 8008c9c:	1b9b      	subs	r3, r3, r6
 8008c9e:	2b00      	cmp	r3, #0
 8008ca0:	f340 8091 	ble.w	8008dc6 <LCD__DrawBitmap_1bpp+0x1a6>
 8008ca4:	9909      	ldr	r1, [sp, #36]	; 0x24
 8008ca6:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 8008caa:	4429      	add	r1, r5
 8008cac:	3901      	subs	r1, #1
 8008cae:	1b89      	subs	r1, r1, r6
 8008cb0:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8008cb2:	2900      	cmp	r1, #0
 8008cb4:	bfc8      	it	gt
 8008cb6:	ebc1 0505 	rsbgt	r5, r1, r5
 8008cba:	ebc8 0106 	rsb	r1, r8, r6
 8008cbe:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8008cc2:	42b1      	cmp	r1, r6
 8008cc4:	da0c      	bge.n	8008ce0 <LCD__DrawBitmap_1bpp+0xc0>
 8008cc6:	ebc1 0c06 	rsb	ip, r1, r6
 8008cca:	eb08 070c 	add.w	r7, r8, ip
 8008cce:	1b8e      	subs	r6, r1, r6
 8008cd0:	f02c 0c07 	bic.w	ip, ip, #7
 8008cd4:	4435      	add	r5, r6
 8008cd6:	eb04 04e7 	add.w	r4, r4, r7, asr #3
 8008cda:	4461      	add	r1, ip
 8008cdc:	f007 0807 	and.w	r8, r7, #7
 8008ce0:	2d00      	cmp	r5, #0
 8008ce2:	dd70      	ble.n	8008dc6 <LCD__DrawBitmap_1bpp+0x1a6>
 8008ce4:	7c46      	ldrb	r6, [r0, #17]
 8008ce6:	483a      	ldr	r0, [pc, #232]	; (8008dd0 <LCD__DrawBitmap_1bpp+0x1b0>)
 8008ce8:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8008cea:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 8008cee:	68c6      	ldr	r6, [r0, #12]
 8008cf0:	9701      	str	r7, [sp, #4]
 8008cf2:	9403      	str	r4, [sp, #12]
 8008cf4:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008cf6:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 8008cf8:	9300      	str	r3, [sp, #0]
 8008cfa:	9702      	str	r7, [sp, #8]
 8008cfc:	f8cd 8010 	str.w	r8, [sp, #16]
 8008d00:	9405      	str	r4, [sp, #20]
 8008d02:	6874      	ldr	r4, [r6, #4]
 8008d04:	462b      	mov	r3, r5
 8008d06:	47a0      	blx	r4
 8008d08:	e05d      	b.n	8008dc6 <LCD__DrawBitmap_1bpp+0x1a6>
 8008d0a:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8008d0c:	f1c7 0708 	rsb	r7, r7, #8
 8008d10:	970c      	str	r7, [sp, #48]	; 0x30
 8008d12:	4667      	mov	r7, ip
 8008d14:	45dc      	cmp	ip, fp
 8008d16:	da56      	bge.n	8008dc6 <LCD__DrawBitmap_1bpp+0x1a6>
 8008d18:	4b2c      	ldr	r3, [pc, #176]	; (8008dcc <LCD__DrawBitmap_1bpp+0x1ac>)
 8008d1a:	9819      	ldr	r0, [sp, #100]	; 0x64
 8008d1c:	681b      	ldr	r3, [r3, #0]
 8008d1e:	4430      	add	r0, r6
 8008d20:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8008d24:	900a      	str	r0, [sp, #40]	; 0x28
 8008d26:	1e41      	subs	r1, r0, #1
 8008d28:	4291      	cmp	r1, r2
 8008d2a:	910b      	str	r1, [sp, #44]	; 0x2c
 8008d2c:	db45      	blt.n	8008dba <LCD__DrawBitmap_1bpp+0x19a>
 8008d2e:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8008d32:	429e      	cmp	r6, r3
 8008d34:	dc41      	bgt.n	8008dba <LCD__DrawBitmap_1bpp+0x19a>
 8008d36:	f04f 0800 	mov.w	r8, #0
 8008d3a:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8008d3e:	9408      	str	r4, [sp, #32]
 8008d40:	46c2      	mov	sl, r8
 8008d42:	45aa      	cmp	sl, r5
 8008d44:	da39      	bge.n	8008dba <LCD__DrawBitmap_1bpp+0x19a>
 8008d46:	f1b8 0f00 	cmp.w	r8, #0
 8008d4a:	d105      	bne.n	8008d58 <LCD__DrawBitmap_1bpp+0x138>
 8008d4c:	9a08      	ldr	r2, [sp, #32]
 8008d4e:	7817      	ldrb	r7, [r2, #0]
 8008d50:	3201      	adds	r2, #1
 8008d52:	9208      	str	r2, [sp, #32]
 8008d54:	f04f 0808 	mov.w	r8, #8
 8008d58:	980c      	ldr	r0, [sp, #48]	; 0x30
 8008d5a:	991a      	ldr	r1, [sp, #104]	; 0x68
 8008d5c:	4a1b      	ldr	r2, [pc, #108]	; (8008dcc <LCD__DrawBitmap_1bpp+0x1ac>)
 8008d5e:	fa47 f300 	asr.w	r3, r7, r0
 8008d62:	ebc1 0808 	rsb	r8, r1, r8
 8008d66:	408f      	lsls	r7, r1
 8008d68:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 8008d6c:	b2ff      	uxtb	r7, r7
 8008d6e:	d103      	bne.n	8008d78 <LCD__DrawBitmap_1bpp+0x158>
 8008d70:	6810      	ldr	r0, [r2, #0]
 8008d72:	7c00      	ldrb	r0, [r0, #16]
 8008d74:	0780      	lsls	r0, r0, #30
 8008d76:	d41b      	bmi.n	8008db0 <LCD__DrawBitmap_1bpp+0x190>
 8008d78:	6812      	ldr	r2, [r2, #0]
 8008d7a:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8008d7c:	6810      	ldr	r0, [r2, #0]
 8008d7e:	900d      	str	r0, [sp, #52]	; 0x34
 8008d80:	981d      	ldr	r0, [sp, #116]	; 0x74
 8008d82:	b110      	cbz	r0, 8008d8a <LCD__DrawBitmap_1bpp+0x16a>
 8008d84:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8008d88:	e000      	b.n	8008d8c <LCD__DrawBitmap_1bpp+0x16c>
 8008d8a:	b2db      	uxtb	r3, r3
 8008d8c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8008d8e:	6013      	str	r3, [r2, #0]
 8008d90:	1e4a      	subs	r2, r1, #1
 8008d92:	444a      	add	r2, r9
 8008d94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008d96:	f8cd c01c 	str.w	ip, [sp, #28]
 8008d9a:	4648      	mov	r0, r9
 8008d9c:	4631      	mov	r1, r6
 8008d9e:	f7ff ff13 	bl	8008bc8 <LCD_FillRect>
 8008da2:	4b0a      	ldr	r3, [pc, #40]	; (8008dcc <LCD__DrawBitmap_1bpp+0x1ac>)
 8008da4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008da6:	681b      	ldr	r3, [r3, #0]
 8008da8:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8008dac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008dae:	601a      	str	r2, [r3, #0]
 8008db0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8008db2:	f10a 0a01 	add.w	sl, sl, #1
 8008db6:	4499      	add	r9, r3
 8008db8:	e7c3      	b.n	8008d42 <LCD__DrawBitmap_1bpp+0x122>
 8008dba:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8008dbc:	f10c 0c01 	add.w	ip, ip, #1
 8008dc0:	4434      	add	r4, r6
 8008dc2:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8008dc4:	e7a6      	b.n	8008d14 <LCD__DrawBitmap_1bpp+0xf4>
 8008dc6:	b00f      	add	sp, #60	; 0x3c
 8008dc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008dcc:	200000b8 	.word	0x200000b8
 8008dd0:	20002d24 	.word	0x20002d24
 8008dd4:	20002cdc 	.word	0x20002cdc

08008dd8 <LCD_DrawBitmap>:
 8008dd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008ddc:	f8df c20c 	ldr.w	ip, [pc, #524]	; 8008fec <LCD_DrawBitmap+0x214>
 8008de0:	b091      	sub	sp, #68	; 0x44
 8008de2:	f8dc 9000 	ldr.w	r9, [ip]
 8008de6:	9207      	str	r2, [sp, #28]
 8008de8:	4605      	mov	r5, r0
 8008dea:	4688      	mov	r8, r1
 8008dec:	469b      	mov	fp, r3
 8008dee:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 8008df0:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8008df2:	f1b9 0f00 	cmp.w	r9, #0
 8008df6:	d00c      	beq.n	8008e12 <LCD_DrawBitmap+0x3a>
 8008df8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8008dfa:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008dfc:	9500      	str	r5, [sp, #0]
 8008dfe:	9701      	str	r7, [sp, #4]
 8008e00:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8008e02:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 8008e04:	9602      	str	r6, [sp, #8]
 8008e06:	9503      	str	r5, [sp, #12]
 8008e08:	9404      	str	r4, [sp, #16]
 8008e0a:	9705      	str	r7, [sp, #20]
 8008e0c:	f8d9 4000 	ldr.w	r4, [r9]
 8008e10:	e081      	b.n	8008f16 <LCD_DrawBitmap+0x13e>
 8008e12:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8008e14:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8008e16:	ea47 0300 	orr.w	r3, r7, r0
 8008e1a:	2b01      	cmp	r3, #1
 8008e1c:	d17d      	bne.n	8008f1a <LCD_DrawBitmap+0x142>
 8008e1e:	4b71      	ldr	r3, [pc, #452]	; (8008fe4 <LCD_DrawBitmap+0x20c>)
 8008e20:	6818      	ldr	r0, [r3, #0]
 8008e22:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8008e26:	1a53      	subs	r3, r2, r1
 8008e28:	2b00      	cmp	r3, #0
 8008e2a:	dd08      	ble.n	8008e3e <LCD_DrawBitmap+0x66>
 8008e2c:	ebc3 010b 	rsb	r1, r3, fp
 8008e30:	2900      	cmp	r1, #0
 8008e32:	f340 80d4 	ble.w	8008fde <LCD_DrawBitmap+0x206>
 8008e36:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8008e38:	fb07 4403 	mla	r4, r7, r3, r4
 8008e3c:	e001      	b.n	8008e42 <LCD_DrawBitmap+0x6a>
 8008e3e:	4659      	mov	r1, fp
 8008e40:	4642      	mov	r2, r8
 8008e42:	44d8      	add	r8, fp
 8008e44:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 8008e48:	f108 38ff 	add.w	r8, r8, #4294967295
 8008e4c:	ebc3 0808 	rsb	r8, r3, r8
 8008e50:	f1b8 0f00 	cmp.w	r8, #0
 8008e54:	dd04      	ble.n	8008e60 <LCD_DrawBitmap+0x88>
 8008e56:	ebc8 0101 	rsb	r1, r8, r1
 8008e5a:	2900      	cmp	r1, #0
 8008e5c:	f340 80bf 	ble.w	8008fde <LCD_DrawBitmap+0x206>
 8008e60:	9b07      	ldr	r3, [sp, #28]
 8008e62:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 8008e66:	442b      	add	r3, r5
 8008e68:	3b01      	subs	r3, #1
 8008e6a:	ebcc 0303 	rsb	r3, ip, r3
 8008e6e:	2b00      	cmp	r3, #0
 8008e70:	dd02      	ble.n	8008e78 <LCD_DrawBitmap+0xa0>
 8008e72:	9f07      	ldr	r7, [sp, #28]
 8008e74:	1aff      	subs	r7, r7, r3
 8008e76:	9707      	str	r7, [sp, #28]
 8008e78:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8008e7c:	4565      	cmp	r5, ip
 8008e7e:	da33      	bge.n	8008ee8 <LCD_DrawBitmap+0x110>
 8008e80:	9f07      	ldr	r7, [sp, #28]
 8008e82:	ebc5 030c 	rsb	r3, r5, ip
 8008e86:	1aff      	subs	r7, r7, r3
 8008e88:	2e08      	cmp	r6, #8
 8008e8a:	9707      	str	r7, [sp, #28]
 8008e8c:	d027      	beq.n	8008ede <LCD_DrawBitmap+0x106>
 8008e8e:	dc0d      	bgt.n	8008eac <LCD_DrawBitmap+0xd4>
 8008e90:	2e02      	cmp	r6, #2
 8008e92:	d014      	beq.n	8008ebe <LCD_DrawBitmap+0xe6>
 8008e94:	2e04      	cmp	r6, #4
 8008e96:	d01a      	beq.n	8008ece <LCD_DrawBitmap+0xf6>
 8008e98:	2e01      	cmp	r6, #1
 8008e9a:	d126      	bne.n	8008eea <LCD_DrawBitmap+0x112>
 8008e9c:	f023 0c07 	bic.w	ip, r3, #7
 8008ea0:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 8008ea4:	4465      	add	r5, ip
 8008ea6:	f003 0307 	and.w	r3, r3, #7
 8008eaa:	e01e      	b.n	8008eea <LCD_DrawBitmap+0x112>
 8008eac:	2e18      	cmp	r6, #24
 8008eae:	d018      	beq.n	8008ee2 <LCD_DrawBitmap+0x10a>
 8008eb0:	2e20      	cmp	r6, #32
 8008eb2:	d016      	beq.n	8008ee2 <LCD_DrawBitmap+0x10a>
 8008eb4:	2e10      	cmp	r6, #16
 8008eb6:	d118      	bne.n	8008eea <LCD_DrawBitmap+0x112>
 8008eb8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8008ebc:	e013      	b.n	8008ee6 <LCD_DrawBitmap+0x10e>
 8008ebe:	f023 0c03 	bic.w	ip, r3, #3
 8008ec2:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 8008ec6:	4465      	add	r5, ip
 8008ec8:	f003 0303 	and.w	r3, r3, #3
 8008ecc:	e00d      	b.n	8008eea <LCD_DrawBitmap+0x112>
 8008ece:	f023 0c01 	bic.w	ip, r3, #1
 8008ed2:	eb04 0463 	add.w	r4, r4, r3, asr #1
 8008ed6:	4465      	add	r5, ip
 8008ed8:	f003 0301 	and.w	r3, r3, #1
 8008edc:	e005      	b.n	8008eea <LCD_DrawBitmap+0x112>
 8008ede:	441c      	add	r4, r3
 8008ee0:	e001      	b.n	8008ee6 <LCD_DrawBitmap+0x10e>
 8008ee2:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8008ee6:	4665      	mov	r5, ip
 8008ee8:	2300      	movs	r3, #0
 8008eea:	9f07      	ldr	r7, [sp, #28]
 8008eec:	2f00      	cmp	r7, #0
 8008eee:	dd76      	ble.n	8008fde <LCD_DrawBitmap+0x206>
 8008ef0:	f890 e011 	ldrb.w	lr, [r0, #17]
 8008ef4:	483c      	ldr	r0, [pc, #240]	; (8008fe8 <LCD_DrawBitmap+0x210>)
 8008ef6:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8008ef8:	f850 002e 	ldr.w	r0, [r0, lr, lsl #2]
 8008efc:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 8008f00:	9403      	str	r4, [sp, #12]
 8008f02:	e88d 0042 	stmia.w	sp, {r1, r6}
 8008f06:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 8008f08:	9304      	str	r3, [sp, #16]
 8008f0a:	9702      	str	r7, [sp, #8]
 8008f0c:	9405      	str	r4, [sp, #20]
 8008f0e:	f8de 4004 	ldr.w	r4, [lr, #4]
 8008f12:	9b07      	ldr	r3, [sp, #28]
 8008f14:	4629      	mov	r1, r5
 8008f16:	47a0      	blx	r4
 8008f18:	e061      	b.n	8008fde <LCD_DrawBitmap+0x206>
 8008f1a:	f1c6 0708 	rsb	r7, r6, #8
 8008f1e:	970e      	str	r7, [sp, #56]	; 0x38
 8008f20:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008f24:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8008f26:	455f      	cmp	r7, fp
 8008f28:	da59      	bge.n	8008fde <LCD_DrawBitmap+0x206>
 8008f2a:	4b2e      	ldr	r3, [pc, #184]	; (8008fe4 <LCD_DrawBitmap+0x20c>)
 8008f2c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008f2e:	681b      	ldr	r3, [r3, #0]
 8008f30:	4447      	add	r7, r8
 8008f32:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8008f36:	970c      	str	r7, [sp, #48]	; 0x30
 8008f38:	3f01      	subs	r7, #1
 8008f3a:	4297      	cmp	r7, r2
 8008f3c:	970d      	str	r7, [sp, #52]	; 0x34
 8008f3e:	db46      	blt.n	8008fce <LCD_DrawBitmap+0x1f6>
 8008f40:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8008f44:	4598      	cmp	r8, r3
 8008f46:	dc42      	bgt.n	8008fce <LCD_DrawBitmap+0x1f6>
 8008f48:	f04f 0a00 	mov.w	sl, #0
 8008f4c:	940b      	str	r4, [sp, #44]	; 0x2c
 8008f4e:	46ac      	mov	ip, r5
 8008f50:	4657      	mov	r7, sl
 8008f52:	9807      	ldr	r0, [sp, #28]
 8008f54:	4287      	cmp	r7, r0
 8008f56:	da3a      	bge.n	8008fce <LCD_DrawBitmap+0x1f6>
 8008f58:	f1ba 0f00 	cmp.w	sl, #0
 8008f5c:	d106      	bne.n	8008f6c <LCD_DrawBitmap+0x194>
 8008f5e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8008f60:	f890 9000 	ldrb.w	r9, [r0]
 8008f64:	3001      	adds	r0, #1
 8008f66:	900b      	str	r0, [sp, #44]	; 0x2c
 8008f68:	f04f 0a08 	mov.w	sl, #8
 8008f6c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8008f6e:	4a1d      	ldr	r2, [pc, #116]	; (8008fe4 <LCD_DrawBitmap+0x20c>)
 8008f70:	fa49 f301 	asr.w	r3, r9, r1
 8008f74:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 8008f78:	fa09 f906 	lsl.w	r9, r9, r6
 8008f7c:	fa5f f989 	uxtb.w	r9, r9
 8008f80:	ebc6 0a0a 	rsb	sl, r6, sl
 8008f84:	d103      	bne.n	8008f8e <LCD_DrawBitmap+0x1b6>
 8008f86:	6810      	ldr	r0, [r2, #0]
 8008f88:	7c00      	ldrb	r0, [r0, #16]
 8008f8a:	0780      	lsls	r0, r0, #30
 8008f8c:	d41b      	bmi.n	8008fc6 <LCD_DrawBitmap+0x1ee>
 8008f8e:	6812      	ldr	r2, [r2, #0]
 8008f90:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8008f92:	6810      	ldr	r0, [r2, #0]
 8008f94:	900f      	str	r0, [sp, #60]	; 0x3c
 8008f96:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8008f98:	b110      	cbz	r0, 8008fa0 <LCD_DrawBitmap+0x1c8>
 8008f9a:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8008f9e:	e000      	b.n	8008fa2 <LCD_DrawBitmap+0x1ca>
 8008fa0:	b2db      	uxtb	r3, r3
 8008fa2:	991a      	ldr	r1, [sp, #104]	; 0x68
 8008fa4:	6013      	str	r3, [r2, #0]
 8008fa6:	1e4a      	subs	r2, r1, #1
 8008fa8:	4462      	add	r2, ip
 8008faa:	4660      	mov	r0, ip
 8008fac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008fae:	f8cd c020 	str.w	ip, [sp, #32]
 8008fb2:	4641      	mov	r1, r8
 8008fb4:	f7ff fe08 	bl	8008bc8 <LCD_FillRect>
 8008fb8:	4b0a      	ldr	r3, [pc, #40]	; (8008fe4 <LCD_DrawBitmap+0x20c>)
 8008fba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8008fbc:	681b      	ldr	r3, [r3, #0]
 8008fbe:	f8dd c020 	ldr.w	ip, [sp, #32]
 8008fc2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008fc4:	601a      	str	r2, [r3, #0]
 8008fc6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8008fc8:	3701      	adds	r7, #1
 8008fca:	449c      	add	ip, r3
 8008fcc:	e7c1      	b.n	8008f52 <LCD_DrawBitmap+0x17a>
 8008fce:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8008fd0:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8008fd4:	3701      	adds	r7, #1
 8008fd6:	970a      	str	r7, [sp, #40]	; 0x28
 8008fd8:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8008fda:	443c      	add	r4, r7
 8008fdc:	e7a2      	b.n	8008f24 <LCD_DrawBitmap+0x14c>
 8008fde:	b011      	add	sp, #68	; 0x44
 8008fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008fe4:	200000b8 	.word	0x200000b8
 8008fe8:	20002d24 	.word	0x20002d24
 8008fec:	20002cdc 	.word	0x20002cdc

08008ff0 <LCD_SetClipRectMax>:
 8008ff0:	b508      	push	{r3, lr}
 8008ff2:	4b05      	ldr	r3, [pc, #20]	; (8009008 <LCD_SetClipRectMax+0x18>)
 8008ff4:	6819      	ldr	r1, [r3, #0]
 8008ff6:	4b05      	ldr	r3, [pc, #20]	; (800900c <LCD_SetClipRectMax+0x1c>)
 8008ff8:	7c4a      	ldrb	r2, [r1, #17]
 8008ffa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8008ffe:	68c3      	ldr	r3, [r0, #12]
 8009000:	3108      	adds	r1, #8
 8009002:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009004:	4798      	blx	r3
 8009006:	bd08      	pop	{r3, pc}
 8009008:	200000b8 	.word	0x200000b8
 800900c:	20002d24 	.word	0x20002d24

08009010 <emWin_LCD_Init>:
 8009010:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009012:	f7ff ffed 	bl	8008ff0 <LCD_SetClipRectMax>
 8009016:	f005 fd79 	bl	800eb0c <LCD_InitColors>
 800901a:	4604      	mov	r4, r0
 800901c:	2800      	cmp	r0, #0
 800901e:	d145      	bne.n	80090ac <emWin_LCD_Init+0x9c>
 8009020:	4605      	mov	r5, r0
 8009022:	4628      	mov	r0, r5
 8009024:	f001 fc66 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 8009028:	9001      	str	r0, [sp, #4]
 800902a:	b150      	cbz	r0, 8009042 <emWin_LCD_Init+0x32>
 800902c:	68c3      	ldr	r3, [r0, #12]
 800902e:	210c      	movs	r1, #12
 8009030:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009032:	a801      	add	r0, sp, #4
 8009034:	4798      	blx	r3
 8009036:	4603      	mov	r3, r0
 8009038:	2800      	cmp	r0, #0
 800903a:	d035      	beq.n	80090a8 <emWin_LCD_Init+0x98>
 800903c:	9801      	ldr	r0, [sp, #4]
 800903e:	4798      	blx	r3
 8009040:	4304      	orrs	r4, r0
 8009042:	3501      	adds	r5, #1
 8009044:	2d02      	cmp	r5, #2
 8009046:	d1ec      	bne.n	8009022 <emWin_LCD_Init+0x12>
 8009048:	bb84      	cbnz	r4, 80090ac <emWin_LCD_Init+0x9c>
 800904a:	f005 fd7b 	bl	800eb44 <LCD_InitLUT>
 800904e:	4b19      	ldr	r3, [pc, #100]	; (80090b4 <emWin_LCD_Init+0xa4>)
 8009050:	681a      	ldr	r2, [r3, #0]
 8009052:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8009056:	429a      	cmp	r2, r3
 8009058:	d101      	bne.n	800905e <emWin_LCD_Init+0x4e>
 800905a:	2000      	movs	r0, #0
 800905c:	e027      	b.n	80090ae <emWin_LCD_Init+0x9e>
 800905e:	2401      	movs	r4, #1
 8009060:	4620      	mov	r0, r4
 8009062:	f001 fc47 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 8009066:	9001      	str	r0, [sp, #4]
 8009068:	b1d0      	cbz	r0, 80090a0 <emWin_LCD_Init+0x90>
 800906a:	4620      	mov	r0, r4
 800906c:	f000 fdee 	bl	8009c4c <GUI_SelectLayer>
 8009070:	2004      	movs	r0, #4
 8009072:	f7ff fd27 	bl	8008ac4 <LCD_SetDrawMode>
 8009076:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800907a:	2000      	movs	r0, #0
 800907c:	4601      	mov	r1, r0
 800907e:	4613      	mov	r3, r2
 8009080:	f7ff fda2 	bl	8008bc8 <LCD_FillRect>
 8009084:	2000      	movs	r0, #0
 8009086:	f7ff fd1d 	bl	8008ac4 <LCD_SetDrawMode>
 800908a:	a802      	add	r0, sp, #8
 800908c:	210e      	movs	r1, #14
 800908e:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8009092:	68db      	ldr	r3, [r3, #12]
 8009094:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009096:	4798      	blx	r3
 8009098:	4603      	mov	r3, r0
 800909a:	b108      	cbz	r0, 80090a0 <emWin_LCD_Init+0x90>
 800909c:	9801      	ldr	r0, [sp, #4]
 800909e:	4798      	blx	r3
 80090a0:	f114 34ff 	adds.w	r4, r4, #4294967295
 80090a4:	d2dc      	bcs.n	8009060 <emWin_LCD_Init+0x50>
 80090a6:	e7d8      	b.n	800905a <emWin_LCD_Init+0x4a>
 80090a8:	2001      	movs	r0, #1
 80090aa:	e000      	b.n	80090ae <emWin_LCD_Init+0x9e>
 80090ac:	4620      	mov	r0, r4
 80090ae:	b003      	add	sp, #12
 80090b0:	bd30      	pop	{r4, r5, pc}
 80090b2:	bf00      	nop
 80090b4:	20002bb0 	.word	0x20002bb0

080090b8 <LCD_Color2Index>:
 80090b8:	b508      	push	{r3, lr}
 80090ba:	4b05      	ldr	r3, [pc, #20]	; (80090d0 <LCD_Color2Index+0x18>)
 80090bc:	681b      	ldr	r3, [r3, #0]
 80090be:	7c5a      	ldrb	r2, [r3, #17]
 80090c0:	4b04      	ldr	r3, [pc, #16]	; (80090d4 <LCD_Color2Index+0x1c>)
 80090c2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80090c6:	691b      	ldr	r3, [r3, #16]
 80090c8:	681b      	ldr	r3, [r3, #0]
 80090ca:	4798      	blx	r3
 80090cc:	bd08      	pop	{r3, pc}
 80090ce:	bf00      	nop
 80090d0:	200000b8 	.word	0x200000b8
 80090d4:	20002d24 	.word	0x20002d24

080090d8 <LCD_Index2Color>:
 80090d8:	b508      	push	{r3, lr}
 80090da:	4b05      	ldr	r3, [pc, #20]	; (80090f0 <LCD_Index2Color+0x18>)
 80090dc:	681b      	ldr	r3, [r3, #0]
 80090de:	7c5a      	ldrb	r2, [r3, #17]
 80090e0:	4b04      	ldr	r3, [pc, #16]	; (80090f4 <LCD_Index2Color+0x1c>)
 80090e2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80090e6:	691b      	ldr	r3, [r3, #16]
 80090e8:	685b      	ldr	r3, [r3, #4]
 80090ea:	4798      	blx	r3
 80090ec:	bd08      	pop	{r3, pc}
 80090ee:	bf00      	nop
 80090f0:	200000b8 	.word	0x200000b8
 80090f4:	20002d24 	.word	0x20002d24

080090f8 <LCD_SetColorIndex>:
 80090f8:	4b04      	ldr	r3, [pc, #16]	; (800910c <LCD_SetColorIndex+0x14>)
 80090fa:	681b      	ldr	r3, [r3, #0]
 80090fc:	7c1a      	ldrb	r2, [r3, #16]
 80090fe:	0752      	lsls	r2, r2, #29
 8009100:	bf4c      	ite	mi
 8009102:	6b9b      	ldrmi	r3, [r3, #56]	; 0x38
 8009104:	6bdb      	ldrpl	r3, [r3, #60]	; 0x3c
 8009106:	6018      	str	r0, [r3, #0]
 8009108:	4770      	bx	lr
 800910a:	bf00      	nop
 800910c:	200000b8 	.word	0x200000b8

08009110 <_SetColor>:
 8009110:	b508      	push	{r3, lr}
 8009112:	4b06      	ldr	r3, [pc, #24]	; (800912c <_SetColor+0x1c>)
 8009114:	681b      	ldr	r3, [r3, #0]
 8009116:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8009118:	4281      	cmp	r1, r0
 800911a:	d006      	beq.n	800912a <_SetColor+0x1a>
 800911c:	6318      	str	r0, [r3, #48]	; 0x30
 800911e:	f7ff ffcb 	bl	80090b8 <LCD_Color2Index>
 8009122:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8009126:	f7ff bfe7 	b.w	80090f8 <LCD_SetColorIndex>
 800912a:	bd08      	pop	{r3, pc}
 800912c:	200000b8 	.word	0x200000b8

08009130 <LCD_SetBkColorIndex>:
 8009130:	4b04      	ldr	r3, [pc, #16]	; (8009144 <LCD_SetBkColorIndex+0x14>)
 8009132:	681b      	ldr	r3, [r3, #0]
 8009134:	7c1a      	ldrb	r2, [r3, #16]
 8009136:	0752      	lsls	r2, r2, #29
 8009138:	bf4c      	ite	mi
 800913a:	6bdb      	ldrmi	r3, [r3, #60]	; 0x3c
 800913c:	6b9b      	ldrpl	r3, [r3, #56]	; 0x38
 800913e:	6018      	str	r0, [r3, #0]
 8009140:	4770      	bx	lr
 8009142:	bf00      	nop
 8009144:	200000b8 	.word	0x200000b8

08009148 <_SetBkColor>:
 8009148:	b508      	push	{r3, lr}
 800914a:	4b06      	ldr	r3, [pc, #24]	; (8009164 <_SetBkColor+0x1c>)
 800914c:	681b      	ldr	r3, [r3, #0]
 800914e:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8009150:	4281      	cmp	r1, r0
 8009152:	d006      	beq.n	8009162 <_SetBkColor+0x1a>
 8009154:	6358      	str	r0, [r3, #52]	; 0x34
 8009156:	f7ff ffaf 	bl	80090b8 <LCD_Color2Index>
 800915a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800915e:	f7ff bfe7 	b.w	8009130 <LCD_SetBkColorIndex>
 8009162:	bd08      	pop	{r3, pc}
 8009164:	200000b8 	.word	0x200000b8

08009168 <LCD_SetBkColor>:
 8009168:	b508      	push	{r3, lr}
 800916a:	4b02      	ldr	r3, [pc, #8]	; (8009174 <LCD_SetBkColor+0xc>)
 800916c:	681b      	ldr	r3, [r3, #0]
 800916e:	685b      	ldr	r3, [r3, #4]
 8009170:	4798      	blx	r3
 8009172:	bd08      	pop	{r3, pc}
 8009174:	200000a0 	.word	0x200000a0

08009178 <LCD_SetColor>:
 8009178:	b508      	push	{r3, lr}
 800917a:	4b02      	ldr	r3, [pc, #8]	; (8009184 <LCD_SetColor+0xc>)
 800917c:	681b      	ldr	r3, [r3, #0]
 800917e:	681b      	ldr	r3, [r3, #0]
 8009180:	4798      	blx	r3
 8009182:	bd08      	pop	{r3, pc}
 8009184:	200000a0 	.word	0x200000a0

08009188 <GUI__DivideRound32>:
 8009188:	b149      	cbz	r1, 800919e <GUI__DivideRound32+0x16>
 800918a:	2800      	cmp	r0, #0
 800918c:	ea4f 0361 	mov.w	r3, r1, asr #1
 8009190:	bfb4      	ite	lt
 8009192:	ebc3 0000 	rsblt	r0, r3, r0
 8009196:	18c0      	addge	r0, r0, r3
 8009198:	fb90 f0f1 	sdiv	r0, r0, r1
 800919c:	4770      	bx	lr
 800919e:	4608      	mov	r0, r1
 80091a0:	4770      	bx	lr

080091a2 <GUI__HandleEOLine>:
 80091a2:	b513      	push	{r0, r1, r4, lr}
 80091a4:	6802      	ldr	r2, [r0, #0]
 80091a6:	4604      	mov	r4, r0
 80091a8:	a802      	add	r0, sp, #8
 80091aa:	f840 2d04 	str.w	r2, [r0, #-4]!
 80091ae:	f000 fb59 	bl	8009864 <GUI_UC__GetCharCodeInc>
 80091b2:	b2c0      	uxtb	r0, r0
 80091b4:	b120      	cbz	r0, 80091c0 <GUI__HandleEOLine+0x1e>
 80091b6:	280a      	cmp	r0, #10
 80091b8:	d104      	bne.n	80091c4 <GUI__HandleEOLine+0x22>
 80091ba:	9b01      	ldr	r3, [sp, #4]
 80091bc:	6023      	str	r3, [r4, #0]
 80091be:	e001      	b.n	80091c4 <GUI__HandleEOLine+0x22>
 80091c0:	2001      	movs	r0, #1
 80091c2:	e000      	b.n	80091c6 <GUI__HandleEOLine+0x24>
 80091c4:	2000      	movs	r0, #0
 80091c6:	b002      	add	sp, #8
 80091c8:	bd10      	pop	{r4, pc}

080091ca <GUI__IntersectRect>:
 80091ca:	880b      	ldrh	r3, [r1, #0]
 80091cc:	b510      	push	{r4, lr}
 80091ce:	f9b0 4000 	ldrsh.w	r4, [r0]
 80091d2:	b21a      	sxth	r2, r3
 80091d4:	4294      	cmp	r4, r2
 80091d6:	bfb8      	it	lt
 80091d8:	8003      	strhlt	r3, [r0, #0]
 80091da:	884b      	ldrh	r3, [r1, #2]
 80091dc:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 80091e0:	b21a      	sxth	r2, r3
 80091e2:	4294      	cmp	r4, r2
 80091e4:	bfb8      	it	lt
 80091e6:	8043      	strhlt	r3, [r0, #2]
 80091e8:	888b      	ldrh	r3, [r1, #4]
 80091ea:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80091ee:	b21a      	sxth	r2, r3
 80091f0:	4294      	cmp	r4, r2
 80091f2:	bfc8      	it	gt
 80091f4:	8083      	strhgt	r3, [r0, #4]
 80091f6:	88cb      	ldrh	r3, [r1, #6]
 80091f8:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80091fc:	b21a      	sxth	r2, r3
 80091fe:	4291      	cmp	r1, r2
 8009200:	bfc8      	it	gt
 8009202:	80c3      	strhgt	r3, [r0, #6]
 8009204:	bd10      	pop	{r4, pc}

08009206 <GUI__IntersectRects>:
 8009206:	b570      	push	{r4, r5, r6, lr}
 8009208:	f9b2 3000 	ldrsh.w	r3, [r2]
 800920c:	f9b1 4000 	ldrsh.w	r4, [r1]
 8009210:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009214:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 8009218:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800921c:	429c      	cmp	r4, r3
 800921e:	bfb8      	it	lt
 8009220:	461c      	movlt	r4, r3
 8009222:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8009226:	429d      	cmp	r5, r3
 8009228:	bfa8      	it	ge
 800922a:	462b      	movge	r3, r5
 800922c:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 8009230:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8009234:	42ae      	cmp	r6, r5
 8009236:	bfb8      	it	lt
 8009238:	4635      	movlt	r5, r6
 800923a:	b2a4      	uxth	r4, r4
 800923c:	b2ad      	uxth	r5, r5
 800923e:	4291      	cmp	r1, r2
 8009240:	bfb8      	it	lt
 8009242:	460a      	movlt	r2, r1
 8009244:	8004      	strh	r4, [r0, #0]
 8009246:	8085      	strh	r5, [r0, #4]
 8009248:	b224      	sxth	r4, r4
 800924a:	b22d      	sxth	r5, r5
 800924c:	b29b      	uxth	r3, r3
 800924e:	b292      	uxth	r2, r2
 8009250:	42a5      	cmp	r5, r4
 8009252:	8043      	strh	r3, [r0, #2]
 8009254:	80c2      	strh	r2, [r0, #6]
 8009256:	db06      	blt.n	8009266 <GUI__IntersectRects+0x60>
 8009258:	b210      	sxth	r0, r2
 800925a:	b21b      	sxth	r3, r3
 800925c:	4298      	cmp	r0, r3
 800925e:	bfb4      	ite	lt
 8009260:	2000      	movlt	r0, #0
 8009262:	2001      	movge	r0, #1
 8009264:	bd70      	pop	{r4, r5, r6, pc}
 8009266:	2000      	movs	r0, #0
 8009268:	bd70      	pop	{r4, r5, r6, pc}

0800926a <GUI__memset16>:
 800926a:	b570      	push	{r4, r5, r6, lr}
 800926c:	0784      	lsls	r4, r0, #30
 800926e:	d502      	bpl.n	8009276 <GUI__memset16+0xc>
 8009270:	8001      	strh	r1, [r0, #0]
 8009272:	3a01      	subs	r2, #1
 8009274:	3002      	adds	r0, #2
 8009276:	0855      	lsrs	r5, r2, #1
 8009278:	462b      	mov	r3, r5
 800927a:	b305      	cbz	r5, 80092be <GUI__memset16+0x54>
 800927c:	2d03      	cmp	r5, #3
 800927e:	eb01 4401 	add.w	r4, r1, r1, lsl #16
 8009282:	dc02      	bgt.n	800928a <GUI__memset16+0x20>
 8009284:	4606      	mov	r6, r0
 8009286:	461d      	mov	r5, r3
 8009288:	e012      	b.n	80092b0 <GUI__memset16+0x46>
 800928a:	4603      	mov	r3, r0
 800928c:	462e      	mov	r6, r5
 800928e:	3e04      	subs	r6, #4
 8009290:	2e03      	cmp	r6, #3
 8009292:	601c      	str	r4, [r3, #0]
 8009294:	605c      	str	r4, [r3, #4]
 8009296:	609c      	str	r4, [r3, #8]
 8009298:	60dc      	str	r4, [r3, #12]
 800929a:	f103 0310 	add.w	r3, r3, #16
 800929e:	dcf6      	bgt.n	800928e <GUI__memset16+0x24>
 80092a0:	3d04      	subs	r5, #4
 80092a2:	08ab      	lsrs	r3, r5, #2
 80092a4:	1c5e      	adds	r6, r3, #1
 80092a6:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 80092aa:	eba5 0383 	sub.w	r3, r5, r3, lsl #2
 80092ae:	e7e9      	b.n	8009284 <GUI__memset16+0x1a>
 80092b0:	b11d      	cbz	r5, 80092ba <GUI__memset16+0x50>
 80092b2:	f846 4b04 	str.w	r4, [r6], #4
 80092b6:	3d01      	subs	r5, #1
 80092b8:	e7fa      	b.n	80092b0 <GUI__memset16+0x46>
 80092ba:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80092be:	07d3      	lsls	r3, r2, #31
 80092c0:	bf48      	it	mi
 80092c2:	8001      	strhmi	r1, [r0, #0]
 80092c4:	bd70      	pop	{r4, r5, r6, pc}

080092c6 <GUI__ReduceRect>:
 80092c6:	880b      	ldrh	r3, [r1, #0]
 80092c8:	b292      	uxth	r2, r2
 80092ca:	4413      	add	r3, r2
 80092cc:	8003      	strh	r3, [r0, #0]
 80092ce:	888b      	ldrh	r3, [r1, #4]
 80092d0:	1a9b      	subs	r3, r3, r2
 80092d2:	8083      	strh	r3, [r0, #4]
 80092d4:	884b      	ldrh	r3, [r1, #2]
 80092d6:	4413      	add	r3, r2
 80092d8:	8043      	strh	r3, [r0, #2]
 80092da:	88cb      	ldrh	r3, [r1, #6]
 80092dc:	1a9a      	subs	r2, r3, r2
 80092de:	80c2      	strh	r2, [r0, #6]
 80092e0:	4770      	bx	lr

080092e2 <GUI__sqrt32>:
 80092e2:	b510      	push	{r4, lr}
 80092e4:	2110      	movs	r1, #16
 80092e6:	2300      	movs	r3, #0
 80092e8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80092ec:	189c      	adds	r4, r3, r2
 80092ee:	4284      	cmp	r4, r0
 80092f0:	bf9c      	itt	ls
 80092f2:	18a3      	addls	r3, r4, r2
 80092f4:	ebc4 0000 	rsbls	r0, r4, r0
 80092f8:	3901      	subs	r1, #1
 80092fa:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80092fe:	ea4f 0292 	mov.w	r2, r2, lsr #2
 8009302:	d1f3      	bne.n	80092ec <GUI__sqrt32+0xa>
 8009304:	4618      	mov	r0, r3
 8009306:	bd10      	pop	{r4, pc}

08009308 <GUI__strcmp>:
 8009308:	b510      	push	{r4, lr}
 800930a:	4b09      	ldr	r3, [pc, #36]	; (8009330 <GUI__strcmp+0x28>)
 800930c:	2800      	cmp	r0, #0
 800930e:	bf08      	it	eq
 8009310:	4618      	moveq	r0, r3
 8009312:	2900      	cmp	r1, #0
 8009314:	bf08      	it	eq
 8009316:	4619      	moveq	r1, r3
 8009318:	2300      	movs	r3, #0
 800931a:	5cc4      	ldrb	r4, [r0, r3]
 800931c:	5cca      	ldrb	r2, [r1, r3]
 800931e:	42a2      	cmp	r2, r4
 8009320:	d104      	bne.n	800932c <GUI__strcmp+0x24>
 8009322:	3301      	adds	r3, #1
 8009324:	2a00      	cmp	r2, #0
 8009326:	d1f8      	bne.n	800931a <GUI__strcmp+0x12>
 8009328:	4610      	mov	r0, r2
 800932a:	bd10      	pop	{r4, pc}
 800932c:	2001      	movs	r0, #1
 800932e:	bd10      	pop	{r4, pc}
 8009330:	08013000 	.word	0x08013000

08009334 <GUI__strcmp_hp>:
 8009334:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009336:	460d      	mov	r5, r1
 8009338:	b160      	cbz	r0, 8009354 <GUI__strcmp_hp+0x20>
 800933a:	f002 fa99 	bl	800b870 <GUI_ALLOC_LockH>
 800933e:	ac02      	add	r4, sp, #8
 8009340:	4629      	mov	r1, r5
 8009342:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009346:	f7ff ffdf 	bl	8009308 <GUI__strcmp>
 800934a:	4605      	mov	r5, r0
 800934c:	4620      	mov	r0, r4
 800934e:	f002 fa9d 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009352:	e000      	b.n	8009356 <GUI__strcmp_hp+0x22>
 8009354:	2501      	movs	r5, #1
 8009356:	4628      	mov	r0, r5
 8009358:	b003      	add	sp, #12
 800935a:	bd30      	pop	{r4, r5, pc}

0800935c <GUI__strlen>:
 800935c:	f04f 33ff 	mov.w	r3, #4294967295
 8009360:	b118      	cbz	r0, 800936a <GUI__strlen+0xe>
 8009362:	3301      	adds	r3, #1
 8009364:	5cc2      	ldrb	r2, [r0, r3]
 8009366:	2a00      	cmp	r2, #0
 8009368:	d1fb      	bne.n	8009362 <GUI__strlen+0x6>
 800936a:	4618      	mov	r0, r3
 800936c:	4770      	bx	lr
	...

08009370 <GUI__SetText>:
 8009370:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009372:	6807      	ldr	r7, [r0, #0]
 8009374:	4605      	mov	r5, r0
 8009376:	4638      	mov	r0, r7
 8009378:	460e      	mov	r6, r1
 800937a:	f7ff ffdb 	bl	8009334 <GUI__strcmp_hp>
 800937e:	b908      	cbnz	r0, 8009384 <GUI__SetText+0x14>
 8009380:	2000      	movs	r0, #0
 8009382:	e02f      	b.n	80093e4 <GUI__SetText+0x74>
 8009384:	4630      	mov	r0, r6
 8009386:	f7ff ffe9 	bl	800935c <GUI__strlen>
 800938a:	1c44      	adds	r4, r0, #1
 800938c:	4638      	mov	r0, r7
 800938e:	f002 fa9d 	bl	800b8cc <GUI_ALLOC_GetSize>
 8009392:	4284      	cmp	r4, r0
 8009394:	d110      	bne.n	80093b8 <GUI__SetText+0x48>
 8009396:	2c00      	cmp	r4, #0
 8009398:	d0f2      	beq.n	8009380 <GUI__SetText+0x10>
 800939a:	4638      	mov	r0, r7
 800939c:	f002 fa68 	bl	800b870 <GUI_ALLOC_LockH>
 80093a0:	ad02      	add	r5, sp, #8
 80093a2:	4b11      	ldr	r3, [pc, #68]	; (80093e8 <GUI__SetText+0x78>)
 80093a4:	f845 0d04 	str.w	r0, [r5, #-4]!
 80093a8:	681b      	ldr	r3, [r3, #0]
 80093aa:	4631      	mov	r1, r6
 80093ac:	4622      	mov	r2, r4
 80093ae:	4798      	blx	r3
 80093b0:	4628      	mov	r0, r5
 80093b2:	f002 fa6b 	bl	800b88c <GUI_ALLOC_UnlockH>
 80093b6:	e014      	b.n	80093e2 <GUI__SetText+0x72>
 80093b8:	4620      	mov	r0, r4
 80093ba:	f002 fc25 	bl	800bc08 <GUI_ALLOC_AllocNoInit>
 80093be:	4607      	mov	r7, r0
 80093c0:	2800      	cmp	r0, #0
 80093c2:	d0dd      	beq.n	8009380 <GUI__SetText+0x10>
 80093c4:	f002 fa54 	bl	800b870 <GUI_ALLOC_LockH>
 80093c8:	ac02      	add	r4, sp, #8
 80093ca:	4631      	mov	r1, r6
 80093cc:	f844 0d04 	str.w	r0, [r4, #-4]!
 80093d0:	f006 fe94 	bl	80100fc <strcpy>
 80093d4:	4620      	mov	r0, r4
 80093d6:	f002 fa59 	bl	800b88c <GUI_ALLOC_UnlockH>
 80093da:	4628      	mov	r0, r5
 80093dc:	f002 fc18 	bl	800bc10 <GUI_ALLOC_FreePtr>
 80093e0:	602f      	str	r7, [r5, #0]
 80093e2:	2001      	movs	r0, #1
 80093e4:	b003      	add	sp, #12
 80093e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80093e8:	200000a8 	.word	0x200000a8

080093ec <GUI__ManageCacheEx>:
 80093ec:	2801      	cmp	r0, #1
 80093ee:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80093f0:	4604      	mov	r4, r0
 80093f2:	460d      	mov	r5, r1
 80093f4:	dc65      	bgt.n	80094c2 <GUI__ManageCacheEx+0xd6>
 80093f6:	4b34      	ldr	r3, [pc, #208]	; (80094c8 <GUI__ManageCacheEx+0xdc>)
 80093f8:	681b      	ldr	r3, [r3, #0]
 80093fa:	b103      	cbz	r3, 80093fe <GUI__ManageCacheEx+0x12>
 80093fc:	4798      	blx	r3
 80093fe:	2d01      	cmp	r5, #1
 8009400:	d004      	beq.n	800940c <GUI__ManageCacheEx+0x20>
 8009402:	2d02      	cmp	r5, #2
 8009404:	d021      	beq.n	800944a <GUI__ManageCacheEx+0x5e>
 8009406:	2d00      	cmp	r5, #0
 8009408:	d15b      	bne.n	80094c2 <GUI__ManageCacheEx+0xd6>
 800940a:	e035      	b.n	8009478 <GUI__ManageCacheEx+0x8c>
 800940c:	4e2f      	ldr	r6, [pc, #188]	; (80094cc <GUI__ManageCacheEx+0xe0>)
 800940e:	f856 7024 	ldr.w	r7, [r6, r4, lsl #2]
 8009412:	b9b7      	cbnz	r7, 8009442 <GUI__ManageCacheEx+0x56>
 8009414:	4620      	mov	r0, r4
 8009416:	f001 fa6d 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 800941a:	9001      	str	r0, [sp, #4]
 800941c:	2800      	cmp	r0, #0
 800941e:	d050      	beq.n	80094c2 <GUI__ManageCacheEx+0xd6>
 8009420:	68c3      	ldr	r3, [r0, #12]
 8009422:	210d      	movs	r1, #13
 8009424:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009426:	a801      	add	r0, sp, #4
 8009428:	4798      	blx	r3
 800942a:	4603      	mov	r3, r0
 800942c:	2800      	cmp	r0, #0
 800942e:	d048      	beq.n	80094c2 <GUI__ManageCacheEx+0xd6>
 8009430:	9801      	ldr	r0, [sp, #4]
 8009432:	4629      	mov	r1, r5
 8009434:	4798      	blx	r3
 8009436:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 800943a:	3301      	adds	r3, #1
 800943c:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
 8009440:	e018      	b.n	8009474 <GUI__ManageCacheEx+0x88>
 8009442:	3701      	adds	r7, #1
 8009444:	f846 7024 	str.w	r7, [r6, r4, lsl #2]
 8009448:	e03b      	b.n	80094c2 <GUI__ManageCacheEx+0xd6>
 800944a:	4620      	mov	r0, r4
 800944c:	f001 fa52 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 8009450:	9001      	str	r0, [sp, #4]
 8009452:	2800      	cmp	r0, #0
 8009454:	d035      	beq.n	80094c2 <GUI__ManageCacheEx+0xd6>
 8009456:	68c3      	ldr	r3, [r0, #12]
 8009458:	210d      	movs	r1, #13
 800945a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800945c:	a801      	add	r0, sp, #4
 800945e:	4798      	blx	r3
 8009460:	4604      	mov	r4, r0
 8009462:	2800      	cmp	r0, #0
 8009464:	d02d      	beq.n	80094c2 <GUI__ManageCacheEx+0xd6>
 8009466:	4b1a      	ldr	r3, [pc, #104]	; (80094d0 <GUI__ManageCacheEx+0xe4>)
 8009468:	681b      	ldr	r3, [r3, #0]
 800946a:	b103      	cbz	r3, 800946e <GUI__ManageCacheEx+0x82>
 800946c:	4798      	blx	r3
 800946e:	9801      	ldr	r0, [sp, #4]
 8009470:	2102      	movs	r1, #2
 8009472:	47a0      	blx	r4
 8009474:	2000      	movs	r0, #0
 8009476:	e025      	b.n	80094c4 <GUI__ManageCacheEx+0xd8>
 8009478:	4d14      	ldr	r5, [pc, #80]	; (80094cc <GUI__ManageCacheEx+0xe0>)
 800947a:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 800947e:	2b01      	cmp	r3, #1
 8009480:	d001      	beq.n	8009486 <GUI__ManageCacheEx+0x9a>
 8009482:	2001      	movs	r0, #1
 8009484:	e015      	b.n	80094b2 <GUI__ManageCacheEx+0xc6>
 8009486:	4620      	mov	r0, r4
 8009488:	f001 fa34 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 800948c:	9001      	str	r0, [sp, #4]
 800948e:	2800      	cmp	r0, #0
 8009490:	d0f7      	beq.n	8009482 <GUI__ManageCacheEx+0x96>
 8009492:	68c3      	ldr	r3, [r0, #12]
 8009494:	210d      	movs	r1, #13
 8009496:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009498:	a801      	add	r0, sp, #4
 800949a:	4798      	blx	r3
 800949c:	4606      	mov	r6, r0
 800949e:	2800      	cmp	r0, #0
 80094a0:	d0ef      	beq.n	8009482 <GUI__ManageCacheEx+0x96>
 80094a2:	4b0b      	ldr	r3, [pc, #44]	; (80094d0 <GUI__ManageCacheEx+0xe4>)
 80094a4:	681b      	ldr	r3, [r3, #0]
 80094a6:	b103      	cbz	r3, 80094aa <GUI__ManageCacheEx+0xbe>
 80094a8:	4798      	blx	r3
 80094aa:	9801      	ldr	r0, [sp, #4]
 80094ac:	2100      	movs	r1, #0
 80094ae:	47b0      	blx	r6
 80094b0:	2000      	movs	r0, #0
 80094b2:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 80094b6:	2b00      	cmp	r3, #0
 80094b8:	bf18      	it	ne
 80094ba:	3b01      	subne	r3, #1
 80094bc:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 80094c0:	e000      	b.n	80094c4 <GUI__ManageCacheEx+0xd8>
 80094c2:	2001      	movs	r0, #1
 80094c4:	b003      	add	sp, #12
 80094c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80094c8:	20002b0c 	.word	0x20002b0c
 80094cc:	20002b04 	.word	0x20002b04
 80094d0:	20002b00 	.word	0x20002b00

080094d4 <GUI__ManageCache>:
 80094d4:	4b02      	ldr	r3, [pc, #8]	; (80094e0 <GUI__ManageCache+0xc>)
 80094d6:	681b      	ldr	r3, [r3, #0]
 80094d8:	4601      	mov	r1, r0
 80094da:	7c58      	ldrb	r0, [r3, #17]
 80094dc:	f7ff bf86 	b.w	80093ec <GUI__ManageCacheEx>
 80094e0:	200000b8 	.word	0x200000b8

080094e4 <GUI__MixColors>:
 80094e4:	f081 417f 	eor.w	r1, r1, #4278190080	; 0xff000000
 80094e8:	f080 407f 	eor.w	r0, r0, #4278190080	; 0xff000000
 80094ec:	0e0b      	lsrs	r3, r1, #24
 80094ee:	ea4f 6310 	mov.w	r3, r0, lsr #24
 80094f2:	b530      	push	{r4, r5, lr}
 80094f4:	fb02 f303 	mul.w	r3, r2, r3
 80094f8:	f04f 04ff 	mov.w	r4, #255	; 0xff
 80094fc:	fbb3 f3f4 	udiv	r3, r3, r4
 8009500:	bf08      	it	eq
 8009502:	f020 417f 	biceq.w	r1, r0, #4278190080	; 0xff000000
 8009506:	1ae2      	subs	r2, r4, r3
 8009508:	f3c0 2407 	ubfx	r4, r0, #8, #8
 800950c:	f001 25ff 	and.w	r5, r1, #4278255360	; 0xff00ff00
 8009510:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8009514:	f044 7480 	orr.w	r4, r4, #16777216	; 0x1000000
 8009518:	0a2d      	lsrs	r5, r5, #8
 800951a:	435c      	muls	r4, r3
 800951c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8009520:	4343      	muls	r3, r0
 8009522:	fb02 4405 	mla	r4, r2, r5, r4
 8009526:	fb02 3201 	mla	r2, r2, r1, r3
 800952a:	0a12      	lsrs	r2, r2, #8
 800952c:	f004 24ff 	and.w	r4, r4, #4278255360	; 0xff00ff00
 8009530:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8009534:	ea44 0002 	orr.w	r0, r4, r2
 8009538:	f080 407f 	eor.w	r0, r0, #4278190080	; 0xff000000
 800953c:	bd30      	pop	{r4, r5, pc}
	...

08009540 <_OnExit>:
 8009540:	b570      	push	{r4, r5, r6, lr}
 8009542:	4c0a      	ldr	r4, [pc, #40]	; (800956c <_OnExit+0x2c>)
 8009544:	4d0a      	ldr	r5, [pc, #40]	; (8009570 <_OnExit+0x30>)
 8009546:	6820      	ldr	r0, [r4, #0]
 8009548:	4e0a      	ldr	r6, [pc, #40]	; (8009574 <_OnExit+0x34>)
 800954a:	f002 f97d 	bl	800b848 <GUI_ALLOC_FreeFixedBlock>
 800954e:	6828      	ldr	r0, [r5, #0]
 8009550:	f002 f97a 	bl	800b848 <GUI_ALLOC_FreeFixedBlock>
 8009554:	6830      	ldr	r0, [r6, #0]
 8009556:	f002 f977 	bl	800b848 <GUI_ALLOC_FreeFixedBlock>
 800955a:	4a07      	ldr	r2, [pc, #28]	; (8009578 <_OnExit+0x38>)
 800955c:	2300      	movs	r3, #0
 800955e:	6013      	str	r3, [r2, #0]
 8009560:	4a06      	ldr	r2, [pc, #24]	; (800957c <_OnExit+0x3c>)
 8009562:	6033      	str	r3, [r6, #0]
 8009564:	602b      	str	r3, [r5, #0]
 8009566:	6023      	str	r3, [r4, #0]
 8009568:	6013      	str	r3, [r2, #0]
 800956a:	bd70      	pop	{r4, r5, r6, pc}
 800956c:	20002b14 	.word	0x20002b14
 8009570:	20002b10 	.word	0x20002b10
 8009574:	20002b18 	.word	0x20002b18
 8009578:	20002b1c 	.word	0x20002b1c
 800957c:	20002b2c 	.word	0x20002b2c

08009580 <GUI__GetAlphaBuffer>:
 8009580:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009584:	461c      	mov	r4, r3
 8009586:	4b28      	ldr	r3, [pc, #160]	; (8009628 <GUI__GetAlphaBuffer+0xa8>)
 8009588:	4617      	mov	r7, r2
 800958a:	681a      	ldr	r2, [r3, #0]
 800958c:	4606      	mov	r6, r0
 800958e:	4688      	mov	r8, r1
 8009590:	b932      	cbnz	r2, 80095a0 <GUI__GetAlphaBuffer+0x20>
 8009592:	2201      	movs	r2, #1
 8009594:	4825      	ldr	r0, [pc, #148]	; (800962c <GUI__GetAlphaBuffer+0xac>)
 8009596:	601a      	str	r2, [r3, #0]
 8009598:	4b25      	ldr	r3, [pc, #148]	; (8009630 <GUI__GetAlphaBuffer+0xb0>)
 800959a:	6003      	str	r3, [r0, #0]
 800959c:	f001 fb04 	bl	800aba8 <GUI__RegisterExit>
 80095a0:	4d24      	ldr	r5, [pc, #144]	; (8009634 <GUI__GetAlphaBuffer+0xb4>)
 80095a2:	682b      	ldr	r3, [r5, #0]
 80095a4:	b933      	cbnz	r3, 80095b4 <GUI__GetAlphaBuffer+0x34>
 80095a6:	4b24      	ldr	r3, [pc, #144]	; (8009638 <GUI__GetAlphaBuffer+0xb8>)
 80095a8:	681b      	ldr	r3, [r3, #0]
 80095aa:	602b      	str	r3, [r5, #0]
 80095ac:	b913      	cbnz	r3, 80095b4 <GUI__GetAlphaBuffer+0x34>
 80095ae:	f7ff fa05 	bl	80089bc <LCD_GetVXSizeMax>
 80095b2:	6028      	str	r0, [r5, #0]
 80095b4:	b10c      	cbz	r4, 80095ba <GUI__GetAlphaBuffer+0x3a>
 80095b6:	682b      	ldr	r3, [r5, #0]
 80095b8:	6023      	str	r3, [r4, #0]
 80095ba:	b196      	cbz	r6, 80095e2 <GUI__GetAlphaBuffer+0x62>
 80095bc:	4b1f      	ldr	r3, [pc, #124]	; (800963c <GUI__GetAlphaBuffer+0xbc>)
 80095be:	681a      	ldr	r2, [r3, #0]
 80095c0:	4699      	mov	r9, r3
 80095c2:	2400      	movs	r4, #0
 80095c4:	b94a      	cbnz	r2, 80095da <GUI__GetAlphaBuffer+0x5a>
 80095c6:	6828      	ldr	r0, [r5, #0]
 80095c8:	0080      	lsls	r0, r0, #2
 80095ca:	f002 fa21 	bl	800ba10 <GUI_ALLOC_GetFixedBlock>
 80095ce:	f1d0 0401 	rsbs	r4, r0, #1
 80095d2:	f8c9 0000 	str.w	r0, [r9]
 80095d6:	bf38      	it	cc
 80095d8:	2400      	movcc	r4, #0
 80095da:	f8d9 3000 	ldr.w	r3, [r9]
 80095de:	6033      	str	r3, [r6, #0]
 80095e0:	e000      	b.n	80095e4 <GUI__GetAlphaBuffer+0x64>
 80095e2:	4634      	mov	r4, r6
 80095e4:	f1b8 0f00 	cmp.w	r8, #0
 80095e8:	d00d      	beq.n	8009606 <GUI__GetAlphaBuffer+0x86>
 80095ea:	4e15      	ldr	r6, [pc, #84]	; (8009640 <GUI__GetAlphaBuffer+0xc0>)
 80095ec:	6833      	ldr	r3, [r6, #0]
 80095ee:	b93b      	cbnz	r3, 8009600 <GUI__GetAlphaBuffer+0x80>
 80095f0:	6828      	ldr	r0, [r5, #0]
 80095f2:	0080      	lsls	r0, r0, #2
 80095f4:	f002 fa0c 	bl	800ba10 <GUI_ALLOC_GetFixedBlock>
 80095f8:	2800      	cmp	r0, #0
 80095fa:	6030      	str	r0, [r6, #0]
 80095fc:	bf08      	it	eq
 80095fe:	2401      	moveq	r4, #1
 8009600:	6833      	ldr	r3, [r6, #0]
 8009602:	f8c8 3000 	str.w	r3, [r8]
 8009606:	b167      	cbz	r7, 8009622 <GUI__GetAlphaBuffer+0xa2>
 8009608:	4e0e      	ldr	r6, [pc, #56]	; (8009644 <GUI__GetAlphaBuffer+0xc4>)
 800960a:	6833      	ldr	r3, [r6, #0]
 800960c:	b93b      	cbnz	r3, 800961e <GUI__GetAlphaBuffer+0x9e>
 800960e:	6828      	ldr	r0, [r5, #0]
 8009610:	0080      	lsls	r0, r0, #2
 8009612:	f002 f9fd 	bl	800ba10 <GUI_ALLOC_GetFixedBlock>
 8009616:	2800      	cmp	r0, #0
 8009618:	6030      	str	r0, [r6, #0]
 800961a:	bf08      	it	eq
 800961c:	2401      	moveq	r4, #1
 800961e:	6833      	ldr	r3, [r6, #0]
 8009620:	603b      	str	r3, [r7, #0]
 8009622:	4620      	mov	r0, r4
 8009624:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009628:	20002b2c 	.word	0x20002b2c
 800962c:	20002b20 	.word	0x20002b20
 8009630:	08009541 	.word	0x08009541
 8009634:	20002b1c 	.word	0x20002b1c
 8009638:	20002d2c 	.word	0x20002d2c
 800963c:	20002b14 	.word	0x20002b14
 8009640:	20002b10 	.word	0x20002b10
 8009644:	20002b18 	.word	0x20002b18

08009648 <GUI__DoAlphaBlending>:
 8009648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800964c:	b093      	sub	sp, #76	; 0x4c
 800964e:	2400      	movs	r4, #0
 8009650:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8009652:	900b      	str	r0, [sp, #44]	; 0x2c
 8009654:	910c      	str	r1, [sp, #48]	; 0x30
 8009656:	4690      	mov	r8, r2
 8009658:	461f      	mov	r7, r3
 800965a:	6034      	str	r4, [r6, #0]
 800965c:	a80f      	add	r0, sp, #60	; 0x3c
 800965e:	a910      	add	r1, sp, #64	; 0x40
 8009660:	4622      	mov	r2, r4
 8009662:	ab11      	add	r3, sp, #68	; 0x44
 8009664:	f7ff ff8c 	bl	8009580 <GUI__GetAlphaBuffer>
 8009668:	4605      	mov	r5, r0
 800966a:	2800      	cmp	r0, #0
 800966c:	f040 80c5 	bne.w	80097fa <GUI__DoAlphaBlending+0x1b2>
 8009670:	4c64      	ldr	r4, [pc, #400]	; (8009804 <GUI__DoAlphaBlending+0x1bc>)
 8009672:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8009674:	6823      	ldr	r3, [r4, #0]
 8009676:	7c58      	ldrb	r0, [r3, #17]
 8009678:	4b63      	ldr	r3, [pc, #396]	; (8009808 <GUI__DoAlphaBlending+0x1c0>)
 800967a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800967e:	9307      	str	r3, [sp, #28]
 8009680:	4297      	cmp	r7, r2
 8009682:	bfa8      	it	ge
 8009684:	4617      	movge	r7, r2
 8009686:	691a      	ldr	r2, [r3, #16]
 8009688:	920d      	str	r2, [sp, #52]	; 0x34
 800968a:	970a      	str	r7, [sp, #40]	; 0x28
 800968c:	f7ff f962 	bl	8008954 <GUI_GetBitsPerPixelEx>
 8009690:	6823      	ldr	r3, [r4, #0]
 8009692:	9008      	str	r0, [sp, #32]
 8009694:	7c58      	ldrb	r0, [r3, #17]
 8009696:	f7ff f97b 	bl	8008990 <GUI_GetpfIndex2ColorEx>
 800969a:	4b5c      	ldr	r3, [pc, #368]	; (800980c <GUI__DoAlphaBlending+0x1c4>)
 800969c:	9004      	str	r0, [sp, #16]
 800969e:	4298      	cmp	r0, r3
 80096a0:	d005      	beq.n	80096ae <GUI__DoAlphaBlending+0x66>
 80096a2:	4b5b      	ldr	r3, [pc, #364]	; (8009810 <GUI__DoAlphaBlending+0x1c8>)
 80096a4:	1ac3      	subs	r3, r0, r3
 80096a6:	bf18      	it	ne
 80096a8:	2301      	movne	r3, #1
 80096aa:	9306      	str	r3, [sp, #24]
 80096ac:	e000      	b.n	80096b0 <GUI__DoAlphaBlending+0x68>
 80096ae:	9506      	str	r5, [sp, #24]
 80096b0:	2500      	movs	r5, #0
 80096b2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80096b4:	46ab      	mov	fp, r5
 80096b6:	4643      	mov	r3, r8
 80096b8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80096ba:	f853 0b04 	ldr.w	r0, [r3], #4
 80096be:	9305      	str	r3, [sp, #20]
 80096c0:	4790      	blx	r2
 80096c2:	0e03      	lsrs	r3, r0, #24
 80096c4:	4681      	mov	r9, r0
 80096c6:	9309      	str	r3, [sp, #36]	; 0x24
 80096c8:	f000 8087 	beq.w	80097da <GUI__DoAlphaBlending+0x192>
 80096cc:	f1bb 0f00 	cmp.w	fp, #0
 80096d0:	d13f      	bne.n	8009752 <GUI__DoAlphaBlending+0x10a>
 80096d2:	4b4c      	ldr	r3, [pc, #304]	; (8009804 <GUI__DoAlphaBlending+0x1bc>)
 80096d4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80096d6:	681b      	ldr	r3, [r3, #0]
 80096d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80096da:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80096de:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 80096e2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80096e4:	442f      	add	r7, r5
 80096e6:	42bb      	cmp	r3, r7
 80096e8:	bfc8      	it	gt
 80096ea:	ebc7 0b03 	rsbgt	fp, r7, r3
 80096ee:	eb0b 0a05 	add.w	sl, fp, r5
 80096f2:	bfc8      	it	gt
 80096f4:	461f      	movgt	r7, r3
 80096f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80096f8:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 80096fc:	4453      	add	r3, sl
 80096fe:	4494      	add	ip, r2
 8009700:	9300      	str	r3, [sp, #0]
 8009702:	9b07      	ldr	r3, [sp, #28]
 8009704:	9301      	str	r3, [sp, #4]
 8009706:	f10c 32ff 	add.w	r2, ip, #4294967295
 800970a:	4638      	mov	r0, r7
 800970c:	460b      	mov	r3, r1
 800970e:	f8cd c00c 	str.w	ip, [sp, #12]
 8009712:	f005 f9ad 	bl	800ea70 <GUI_ReadRectEx>
 8009716:	9a08      	ldr	r2, [sp, #32]
 8009718:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800971a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800971e:	2a17      	cmp	r2, #23
 8009720:	dc06      	bgt.n	8009730 <GUI__DoAlphaBlending+0xe8>
 8009722:	4450      	add	r0, sl
 8009724:	ebcb 0104 	rsb	r1, fp, r4
 8009728:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800972a:	f005 fb05 	bl	800ed38 <GUI__ExpandPixelIndicesEx>
 800972e:	e001      	b.n	8009734 <GUI__DoAlphaBlending+0xec>
 8009730:	9b06      	ldr	r3, [sp, #24]
 8009732:	b913      	cbnz	r3, 800973a <GUI__DoAlphaBlending+0xf2>
 8009734:	f04f 0b01 	mov.w	fp, #1
 8009738:	e00b      	b.n	8009752 <GUI__DoAlphaBlending+0x10a>
 800973a:	ebc7 070c 	rsb	r7, r7, ip
 800973e:	4482      	add	sl, r0
 8009740:	f8da 0000 	ldr.w	r0, [sl]
 8009744:	9a04      	ldr	r2, [sp, #16]
 8009746:	4790      	blx	r2
 8009748:	3f01      	subs	r7, #1
 800974a:	f84a 0b04 	str.w	r0, [sl], #4
 800974e:	d1f7      	bne.n	8009740 <GUI__DoAlphaBlending+0xf8>
 8009750:	e7f0      	b.n	8009734 <GUI__DoAlphaBlending+0xec>
 8009752:	4b30      	ldr	r3, [pc, #192]	; (8009814 <GUI__DoAlphaBlending+0x1cc>)
 8009754:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8009756:	f8d3 c000 	ldr.w	ip, [r3]
 800975a:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800975c:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 8009760:	f1bc 0f00 	cmp.w	ip, #0
 8009764:	d024      	beq.n	80097b0 <GUI__DoAlphaBlending+0x168>
 8009766:	eb07 020a 	add.w	r2, r7, sl
 800976a:	4451      	add	r1, sl
 800976c:	9210      	str	r2, [sp, #64]	; 0x40
 800976e:	4623      	mov	r3, r4
 8009770:	910f      	str	r1, [sp, #60]	; 0x3c
 8009772:	4640      	mov	r0, r8
 8009774:	47e0      	blx	ip
 8009776:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8009778:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800977a:	2300      	movs	r3, #0
 800977c:	f858 1003 	ldr.w	r1, [r8, r3]
 8009780:	f001 407f 	and.w	r0, r1, #4278190080	; 0xff000000
 8009784:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 8009788:	58e8      	ldr	r0, [r5, r3]
 800978a:	d101      	bne.n	8009790 <GUI__DoAlphaBlending+0x148>
 800978c:	50d0      	str	r0, [r2, r3]
 800978e:	e005      	b.n	800979c <GUI__DoAlphaBlending+0x154>
 8009790:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 8009794:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 8009798:	bf08      	it	eq
 800979a:	50d1      	streq	r1, [r2, r3]
 800979c:	3c01      	subs	r4, #1
 800979e:	f103 0304 	add.w	r3, r3, #4
 80097a2:	d1eb      	bne.n	800977c <GUI__DoAlphaBlending+0x134>
 80097a4:	6833      	ldr	r3, [r6, #0]
 80097a6:	9710      	str	r7, [sp, #64]	; 0x40
 80097a8:	f043 0301 	orr.w	r3, r3, #1
 80097ac:	6033      	str	r3, [r6, #0]
 80097ae:	e022      	b.n	80097f6 <GUI__DoAlphaBlending+0x1ae>
 80097b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80097b2:	2bff      	cmp	r3, #255	; 0xff
 80097b4:	d104      	bne.n	80097c0 <GUI__DoAlphaBlending+0x178>
 80097b6:	f851 300a 	ldr.w	r3, [r1, sl]
 80097ba:	f847 300a 	str.w	r3, [r7, sl]
 80097be:	e013      	b.n	80097e8 <GUI__DoAlphaBlending+0x1a0>
 80097c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80097c2:	f851 100a 	ldr.w	r1, [r1, sl]
 80097c6:	43da      	mvns	r2, r3
 80097c8:	4b13      	ldr	r3, [pc, #76]	; (8009818 <GUI__DoAlphaBlending+0x1d0>)
 80097ca:	f029 407f 	bic.w	r0, r9, #4278190080	; 0xff000000
 80097ce:	681b      	ldr	r3, [r3, #0]
 80097d0:	b2d2      	uxtb	r2, r2
 80097d2:	4798      	blx	r3
 80097d4:	f847 000a 	str.w	r0, [r7, sl]
 80097d8:	e002      	b.n	80097e0 <GUI__DoAlphaBlending+0x198>
 80097da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80097dc:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 80097e0:	6833      	ldr	r3, [r6, #0]
 80097e2:	f043 0301 	orr.w	r3, r3, #1
 80097e6:	6033      	str	r3, [r6, #0]
 80097e8:	3c01      	subs	r4, #1
 80097ea:	f105 0501 	add.w	r5, r5, #1
 80097ee:	d002      	beq.n	80097f6 <GUI__DoAlphaBlending+0x1ae>
 80097f0:	f8dd 8014 	ldr.w	r8, [sp, #20]
 80097f4:	e75f      	b.n	80096b6 <GUI__DoAlphaBlending+0x6e>
 80097f6:	9810      	ldr	r0, [sp, #64]	; 0x40
 80097f8:	e000      	b.n	80097fc <GUI__DoAlphaBlending+0x1b4>
 80097fa:	4620      	mov	r0, r4
 80097fc:	b013      	add	sp, #76	; 0x4c
 80097fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009802:	bf00      	nop
 8009804:	200000b8 	.word	0x200000b8
 8009808:	20002d24 	.word	0x20002d24
 800980c:	0800be77 	.word	0x0800be77
 8009810:	0800be75 	.word	0x0800be75
 8009814:	20002b28 	.word	0x20002b28
 8009818:	200000ac 	.word	0x200000ac

0800981c <GUI__AllocAlphaBuffer>:
 800981c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800981e:	b108      	cbz	r0, 8009824 <GUI__AllocAlphaBuffer+0x8>
 8009820:	aa03      	add	r2, sp, #12
 8009822:	e000      	b.n	8009826 <GUI__AllocAlphaBuffer+0xa>
 8009824:	4602      	mov	r2, r0
 8009826:	a801      	add	r0, sp, #4
 8009828:	a902      	add	r1, sp, #8
 800982a:	2300      	movs	r3, #0
 800982c:	f7ff fea8 	bl	8009580 <GUI__GetAlphaBuffer>
 8009830:	b005      	add	sp, #20
 8009832:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08009838 <GUI_SignalEvent>:
 8009838:	b508      	push	{r3, lr}
 800983a:	4b02      	ldr	r3, [pc, #8]	; (8009844 <GUI_SignalEvent+0xc>)
 800983c:	681b      	ldr	r3, [r3, #0]
 800983e:	b103      	cbz	r3, 8009842 <GUI_SignalEvent+0xa>
 8009840:	4798      	blx	r3
 8009842:	bd08      	pop	{r3, pc}
 8009844:	20002b30 	.word	0x20002b30

08009848 <GUI_AddDecMin>:
 8009848:	b570      	push	{r4, r5, r6, lr}
 800984a:	460c      	mov	r4, r1
 800984c:	4605      	mov	r5, r0
 800984e:	f001 fa41 	bl	800acd4 <GUI_Long2Len>
 8009852:	4623      	mov	r3, r4
 8009854:	b2c1      	uxtb	r1, r0
 8009856:	2200      	movs	r2, #0
 8009858:	4628      	mov	r0, r5
 800985a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800985e:	f001 ba51 	b.w	800ad04 <GUI_AddDecShift>
	...

08009864 <GUI_UC__GetCharCodeInc>:
 8009864:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009866:	4e08      	ldr	r6, [pc, #32]	; (8009888 <GUI_UC__GetCharCodeInc+0x24>)
 8009868:	6804      	ldr	r4, [r0, #0]
 800986a:	6833      	ldr	r3, [r6, #0]
 800986c:	4605      	mov	r5, r0
 800986e:	681b      	ldr	r3, [r3, #0]
 8009870:	4620      	mov	r0, r4
 8009872:	4798      	blx	r3
 8009874:	6833      	ldr	r3, [r6, #0]
 8009876:	4607      	mov	r7, r0
 8009878:	685b      	ldr	r3, [r3, #4]
 800987a:	4620      	mov	r0, r4
 800987c:	4798      	blx	r3
 800987e:	4420      	add	r0, r4
 8009880:	6028      	str	r0, [r5, #0]
 8009882:	4638      	mov	r0, r7
 8009884:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009886:	bf00      	nop
 8009888:	20002d1c 	.word	0x20002d1c

0800988c <GUI_UC__NumChars2NumBytes>:
 800988c:	b570      	push	{r4, r5, r6, lr}
 800988e:	4604      	mov	r4, r0
 8009890:	460e      	mov	r6, r1
 8009892:	2500      	movs	r5, #0
 8009894:	b146      	cbz	r6, 80098a8 <GUI_UC__NumChars2NumBytes+0x1c>
 8009896:	4b05      	ldr	r3, [pc, #20]	; (80098ac <GUI_UC__NumChars2NumBytes+0x20>)
 8009898:	681b      	ldr	r3, [r3, #0]
 800989a:	4620      	mov	r0, r4
 800989c:	685b      	ldr	r3, [r3, #4]
 800989e:	4798      	blx	r3
 80098a0:	3e01      	subs	r6, #1
 80098a2:	4404      	add	r4, r0
 80098a4:	4405      	add	r5, r0
 80098a6:	e7f5      	b.n	8009894 <GUI_UC__NumChars2NumBytes+0x8>
 80098a8:	4628      	mov	r0, r5
 80098aa:	bd70      	pop	{r4, r5, r6, pc}
 80098ac:	20002d1c 	.word	0x20002d1c

080098b0 <GUI__GetNumChars>:
 80098b0:	b513      	push	{r0, r1, r4, lr}
 80098b2:	9001      	str	r0, [sp, #4]
 80098b4:	b130      	cbz	r0, 80098c4 <GUI__GetNumChars+0x14>
 80098b6:	2400      	movs	r4, #0
 80098b8:	a801      	add	r0, sp, #4
 80098ba:	f7ff ffd3 	bl	8009864 <GUI_UC__GetCharCodeInc>
 80098be:	b110      	cbz	r0, 80098c6 <GUI__GetNumChars+0x16>
 80098c0:	3401      	adds	r4, #1
 80098c2:	e7f9      	b.n	80098b8 <GUI__GetNumChars+0x8>
 80098c4:	4604      	mov	r4, r0
 80098c6:	4620      	mov	r0, r4
 80098c8:	b002      	add	sp, #8
 80098ca:	bd10      	pop	{r4, pc}

080098cc <_OnExit>:
 80098cc:	4a03      	ldr	r2, [pc, #12]	; (80098dc <_OnExit+0x10>)
 80098ce:	2300      	movs	r3, #0
 80098d0:	6013      	str	r3, [r2, #0]
 80098d2:	4a03      	ldr	r2, [pc, #12]	; (80098e0 <_OnExit+0x14>)
 80098d4:	6013      	str	r3, [r2, #0]
 80098d6:	4a03      	ldr	r2, [pc, #12]	; (80098e4 <_OnExit+0x18>)
 80098d8:	6013      	str	r3, [r2, #0]
 80098da:	4770      	bx	lr
 80098dc:	20002b34 	.word	0x20002b34
 80098e0:	20002b40 	.word	0x20002b40
 80098e4:	20002b44 	.word	0x20002b44

080098e8 <GUI_TIMER_Exec>:
 80098e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80098ec:	4b19      	ldr	r3, [pc, #100]	; (8009954 <GUI_TIMER_Exec+0x6c>)
 80098ee:	681f      	ldr	r7, [r3, #0]
 80098f0:	b085      	sub	sp, #20
 80098f2:	2500      	movs	r5, #0
 80098f4:	4698      	mov	r8, r3
 80098f6:	f8d8 3000 	ldr.w	r3, [r8]
 80098fa:	4c16      	ldr	r4, [pc, #88]	; (8009954 <GUI_TIMER_Exec+0x6c>)
 80098fc:	b333      	cbz	r3, 800994c <GUI_TIMER_Exec+0x64>
 80098fe:	f000 f991 	bl	8009c24 <GUI_GetTime>
 8009902:	4606      	mov	r6, r0
 8009904:	6820      	ldr	r0, [r4, #0]
 8009906:	f001 ffb3 	bl	800b870 <GUI_ALLOC_LockH>
 800990a:	4603      	mov	r3, r0
 800990c:	a804      	add	r0, sp, #16
 800990e:	6959      	ldr	r1, [r3, #20]
 8009910:	f840 3d10 	str.w	r3, [r0, #-16]!
 8009914:	1b89      	subs	r1, r1, r6
 8009916:	2900      	cmp	r1, #0
 8009918:	dc13      	bgt.n	8009942 <GUI_TIMER_Exec+0x5a>
 800991a:	6821      	ldr	r1, [r4, #0]
 800991c:	9103      	str	r1, [sp, #12]
 800991e:	9601      	str	r6, [sp, #4]
 8009920:	6919      	ldr	r1, [r3, #16]
 8009922:	685e      	ldr	r6, [r3, #4]
 8009924:	9102      	str	r1, [sp, #8]
 8009926:	4668      	mov	r0, sp
 8009928:	6026      	str	r6, [r4, #0]
 800992a:	f8d3 9000 	ldr.w	r9, [r3]
 800992e:	f001 ffad 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009932:	a801      	add	r0, sp, #4
 8009934:	47c8      	blx	r9
 8009936:	b14e      	cbz	r6, 800994c <GUI_TIMER_Exec+0x64>
 8009938:	6823      	ldr	r3, [r4, #0]
 800993a:	42bb      	cmp	r3, r7
 800993c:	d005      	beq.n	800994a <GUI_TIMER_Exec+0x62>
 800993e:	2501      	movs	r5, #1
 8009940:	e7d9      	b.n	80098f6 <GUI_TIMER_Exec+0xe>
 8009942:	4668      	mov	r0, sp
 8009944:	f001 ffa2 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009948:	e000      	b.n	800994c <GUI_TIMER_Exec+0x64>
 800994a:	2500      	movs	r5, #0
 800994c:	4628      	mov	r0, r5
 800994e:	b005      	add	sp, #20
 8009950:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009954:	20002b40 	.word	0x20002b40

08009958 <_Link>:
 8009958:	b5f0      	push	{r4, r5, r6, r7, lr}
 800995a:	4c25      	ldr	r4, [pc, #148]	; (80099f0 <_Link+0x98>)
 800995c:	b085      	sub	sp, #20
 800995e:	4605      	mov	r5, r0
 8009960:	f001 ff86 	bl	800b870 <GUI_ALLOC_LockH>
 8009964:	6823      	ldr	r3, [r4, #0]
 8009966:	9001      	str	r0, [sp, #4]
 8009968:	b913      	cbnz	r3, 8009970 <_Link+0x18>
 800996a:	6025      	str	r5, [r4, #0]
 800996c:	6043      	str	r3, [r0, #4]
 800996e:	e039      	b.n	80099e4 <_Link+0x8c>
 8009970:	4618      	mov	r0, r3
 8009972:	f001 ff7d 	bl	800b870 <GUI_ALLOC_LockH>
 8009976:	ab04      	add	r3, sp, #16
 8009978:	6946      	ldr	r6, [r0, #20]
 800997a:	f843 0d10 	str.w	r0, [r3, #-16]!
 800997e:	4668      	mov	r0, sp
 8009980:	f001 ff84 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009984:	9b01      	ldr	r3, [sp, #4]
 8009986:	695a      	ldr	r2, [r3, #20]
 8009988:	1b92      	subs	r2, r2, r6
 800998a:	2a00      	cmp	r2, #0
 800998c:	dc03      	bgt.n	8009996 <_Link+0x3e>
 800998e:	6822      	ldr	r2, [r4, #0]
 8009990:	605a      	str	r2, [r3, #4]
 8009992:	6025      	str	r5, [r4, #0]
 8009994:	e026      	b.n	80099e4 <_Link+0x8c>
 8009996:	6826      	ldr	r6, [r4, #0]
 8009998:	4630      	mov	r0, r6
 800999a:	f001 ff69 	bl	800b870 <GUI_ALLOC_LockH>
 800999e:	ac04      	add	r4, sp, #16
 80099a0:	6846      	ldr	r6, [r0, #4]
 80099a2:	f844 0d08 	str.w	r0, [r4, #-8]!
 80099a6:	b1be      	cbz	r6, 80099d8 <_Link+0x80>
 80099a8:	4630      	mov	r0, r6
 80099aa:	f001 ff61 	bl	800b870 <GUI_ALLOC_LockH>
 80099ae:	ab04      	add	r3, sp, #16
 80099b0:	6947      	ldr	r7, [r0, #20]
 80099b2:	f843 0d04 	str.w	r0, [r3, #-4]!
 80099b6:	4618      	mov	r0, r3
 80099b8:	f001 ff68 	bl	800b88c <GUI_ALLOC_UnlockH>
 80099bc:	9a01      	ldr	r2, [sp, #4]
 80099be:	6953      	ldr	r3, [r2, #20]
 80099c0:	1bdb      	subs	r3, r3, r7
 80099c2:	2b00      	cmp	r3, #0
 80099c4:	9b02      	ldr	r3, [sp, #8]
 80099c6:	dc02      	bgt.n	80099ce <_Link+0x76>
 80099c8:	6056      	str	r6, [r2, #4]
 80099ca:	605d      	str	r5, [r3, #4]
 80099cc:	e007      	b.n	80099de <_Link+0x86>
 80099ce:	4620      	mov	r0, r4
 80099d0:	685e      	ldr	r6, [r3, #4]
 80099d2:	f001 ff5b 	bl	800b88c <GUI_ALLOC_UnlockH>
 80099d6:	e7df      	b.n	8009998 <_Link+0x40>
 80099d8:	9b01      	ldr	r3, [sp, #4]
 80099da:	605e      	str	r6, [r3, #4]
 80099dc:	6045      	str	r5, [r0, #4]
 80099de:	4620      	mov	r0, r4
 80099e0:	f001 ff54 	bl	800b88c <GUI_ALLOC_UnlockH>
 80099e4:	a801      	add	r0, sp, #4
 80099e6:	f001 ff51 	bl	800b88c <GUI_ALLOC_UnlockH>
 80099ea:	b005      	add	sp, #20
 80099ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80099ee:	bf00      	nop
 80099f0:	20002b40 	.word	0x20002b40

080099f4 <_Unlink>:
 80099f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80099f6:	4605      	mov	r5, r0
 80099f8:	b1f0      	cbz	r0, 8009a38 <_Unlink+0x44>
 80099fa:	f001 ff39 	bl	800b870 <GUI_ALLOC_LockH>
 80099fe:	4b0f      	ldr	r3, [pc, #60]	; (8009a3c <_Unlink+0x48>)
 8009a00:	9000      	str	r0, [sp, #0]
 8009a02:	681c      	ldr	r4, [r3, #0]
 8009a04:	42ac      	cmp	r4, r5
 8009a06:	d104      	bne.n	8009a12 <_Unlink+0x1e>
 8009a08:	6842      	ldr	r2, [r0, #4]
 8009a0a:	601a      	str	r2, [r3, #0]
 8009a0c:	e011      	b.n	8009a32 <_Unlink+0x3e>
 8009a0e:	f001 ff3d 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009a12:	b174      	cbz	r4, 8009a32 <_Unlink+0x3e>
 8009a14:	4620      	mov	r0, r4
 8009a16:	f001 ff2b 	bl	800b870 <GUI_ALLOC_LockH>
 8009a1a:	4603      	mov	r3, r0
 8009a1c:	a802      	add	r0, sp, #8
 8009a1e:	685c      	ldr	r4, [r3, #4]
 8009a20:	f840 3d04 	str.w	r3, [r0, #-4]!
 8009a24:	42ac      	cmp	r4, r5
 8009a26:	d1f2      	bne.n	8009a0e <_Unlink+0x1a>
 8009a28:	9a00      	ldr	r2, [sp, #0]
 8009a2a:	6852      	ldr	r2, [r2, #4]
 8009a2c:	605a      	str	r2, [r3, #4]
 8009a2e:	f001 ff2d 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009a32:	4668      	mov	r0, sp
 8009a34:	f001 ff2a 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009a38:	b003      	add	sp, #12
 8009a3a:	bd30      	pop	{r4, r5, pc}
 8009a3c:	20002b40 	.word	0x20002b40

08009a40 <GUI_TIMER__GetFirstTimer>:
 8009a40:	2300      	movs	r3, #0
 8009a42:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a44:	6003      	str	r3, [r0, #0]
 8009a46:	4b09      	ldr	r3, [pc, #36]	; (8009a6c <GUI_TIMER__GetFirstTimer+0x2c>)
 8009a48:	681c      	ldr	r4, [r3, #0]
 8009a4a:	4605      	mov	r5, r0
 8009a4c:	b154      	cbz	r4, 8009a64 <GUI_TIMER__GetFirstTimer+0x24>
 8009a4e:	4620      	mov	r0, r4
 8009a50:	f001 ff0e 	bl	800b870 <GUI_ALLOC_LockH>
 8009a54:	ab02      	add	r3, sp, #8
 8009a56:	6902      	ldr	r2, [r0, #16]
 8009a58:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009a5c:	602a      	str	r2, [r5, #0]
 8009a5e:	4618      	mov	r0, r3
 8009a60:	f001 ff14 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009a64:	4620      	mov	r0, r4
 8009a66:	b003      	add	sp, #12
 8009a68:	bd30      	pop	{r4, r5, pc}
 8009a6a:	bf00      	nop
 8009a6c:	20002b34 	.word	0x20002b34

08009a70 <GUI_TIMER__GetNextTimerLin>:
 8009a70:	2300      	movs	r3, #0
 8009a72:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009a74:	600b      	str	r3, [r1, #0]
 8009a76:	460e      	mov	r6, r1
 8009a78:	4604      	mov	r4, r0
 8009a7a:	b190      	cbz	r0, 8009aa2 <GUI_TIMER__GetNextTimerLin+0x32>
 8009a7c:	f001 fef8 	bl	800b870 <GUI_ALLOC_LockH>
 8009a80:	ad02      	add	r5, sp, #8
 8009a82:	6884      	ldr	r4, [r0, #8]
 8009a84:	f845 0d04 	str.w	r0, [r5, #-4]!
 8009a88:	b144      	cbz	r4, 8009a9c <GUI_TIMER__GetNextTimerLin+0x2c>
 8009a8a:	4628      	mov	r0, r5
 8009a8c:	f001 fefe 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009a90:	4620      	mov	r0, r4
 8009a92:	f001 feed 	bl	800b870 <GUI_ALLOC_LockH>
 8009a96:	6903      	ldr	r3, [r0, #16]
 8009a98:	9001      	str	r0, [sp, #4]
 8009a9a:	6033      	str	r3, [r6, #0]
 8009a9c:	4628      	mov	r0, r5
 8009a9e:	f001 fef5 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009aa2:	4620      	mov	r0, r4
 8009aa4:	b002      	add	sp, #8
 8009aa6:	bd70      	pop	{r4, r5, r6, pc}

08009aa8 <GUI_TIMER_Create>:
 8009aa8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8009aac:	4681      	mov	r9, r0
 8009aae:	201c      	movs	r0, #28
 8009ab0:	460e      	mov	r6, r1
 8009ab2:	4690      	mov	r8, r2
 8009ab4:	461f      	mov	r7, r3
 8009ab6:	f002 f8d5 	bl	800bc64 <GUI_ALLOC_AllocZero>
 8009aba:	4604      	mov	r4, r0
 8009abc:	2800      	cmp	r0, #0
 8009abe:	d031      	beq.n	8009b24 <GUI_TIMER_Create+0x7c>
 8009ac0:	4b1a      	ldr	r3, [pc, #104]	; (8009b2c <GUI_TIMER_Create+0x84>)
 8009ac2:	4a1b      	ldr	r2, [pc, #108]	; (8009b30 <GUI_TIMER_Create+0x88>)
 8009ac4:	601a      	str	r2, [r3, #0]
 8009ac6:	f001 fed3 	bl	800b870 <GUI_ALLOC_LockH>
 8009aca:	9000      	str	r0, [sp, #0]
 8009acc:	b916      	cbnz	r6, 8009ad4 <GUI_TIMER_Create+0x2c>
 8009ace:	f000 f8a9 	bl	8009c24 <GUI_GetTime>
 8009ad2:	4606      	mov	r6, r0
 8009ad4:	a802      	add	r0, sp, #8
 8009ad6:	f850 5d08 	ldr.w	r5, [r0, #-8]!
 8009ada:	4668      	mov	r0, sp
 8009adc:	616e      	str	r6, [r5, #20]
 8009ade:	f8c5 9000 	str.w	r9, [r5]
 8009ae2:	f8c5 8010 	str.w	r8, [r5, #16]
 8009ae6:	81af      	strh	r7, [r5, #12]
 8009ae8:	f001 fed0 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009aec:	4620      	mov	r0, r4
 8009aee:	f7ff ff33 	bl	8009958 <_Link>
 8009af2:	4b10      	ldr	r3, [pc, #64]	; (8009b34 <GUI_TIMER_Create+0x8c>)
 8009af4:	681a      	ldr	r2, [r3, #0]
 8009af6:	b932      	cbnz	r2, 8009b06 <GUI_TIMER_Create+0x5e>
 8009af8:	2201      	movs	r2, #1
 8009afa:	480f      	ldr	r0, [pc, #60]	; (8009b38 <GUI_TIMER_Create+0x90>)
 8009afc:	601a      	str	r2, [r3, #0]
 8009afe:	4b0f      	ldr	r3, [pc, #60]	; (8009b3c <GUI_TIMER_Create+0x94>)
 8009b00:	6003      	str	r3, [r0, #0]
 8009b02:	f001 f851 	bl	800aba8 <GUI__RegisterExit>
 8009b06:	4620      	mov	r0, r4
 8009b08:	f001 feb2 	bl	800b870 <GUI_ALLOC_LockH>
 8009b0c:	4a0c      	ldr	r2, [pc, #48]	; (8009b40 <GUI_TIMER_Create+0x98>)
 8009b0e:	9001      	str	r0, [sp, #4]
 8009b10:	6813      	ldr	r3, [r2, #0]
 8009b12:	b913      	cbnz	r3, 8009b1a <GUI_TIMER_Create+0x72>
 8009b14:	6014      	str	r4, [r2, #0]
 8009b16:	6083      	str	r3, [r0, #8]
 8009b18:	e001      	b.n	8009b1e <GUI_TIMER_Create+0x76>
 8009b1a:	6083      	str	r3, [r0, #8]
 8009b1c:	6014      	str	r4, [r2, #0]
 8009b1e:	a801      	add	r0, sp, #4
 8009b20:	f001 feb4 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009b24:	4620      	mov	r0, r4
 8009b26:	b003      	add	sp, #12
 8009b28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009b2c:	20002cf4 	.word	0x20002cf4
 8009b30:	080098e9 	.word	0x080098e9
 8009b34:	20002b44 	.word	0x20002b44
 8009b38:	20002b38 	.word	0x20002b38
 8009b3c:	080098cd 	.word	0x080098cd
 8009b40:	20002b34 	.word	0x20002b34

08009b44 <GUI_TIMER_Delete>:
 8009b44:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009b46:	4604      	mov	r4, r0
 8009b48:	b360      	cbz	r0, 8009ba4 <GUI_TIMER_Delete+0x60>
 8009b4a:	4e17      	ldr	r6, [pc, #92]	; (8009ba8 <GUI_TIMER_Delete+0x64>)
 8009b4c:	6835      	ldr	r5, [r6, #0]
 8009b4e:	4285      	cmp	r5, r0
 8009b50:	d10b      	bne.n	8009b6a <GUI_TIMER_Delete+0x26>
 8009b52:	f001 fe8d 	bl	800b870 <GUI_ALLOC_LockH>
 8009b56:	ab02      	add	r3, sp, #8
 8009b58:	6882      	ldr	r2, [r0, #8]
 8009b5a:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009b5e:	6032      	str	r2, [r6, #0]
 8009b60:	4618      	mov	r0, r3
 8009b62:	e017      	b.n	8009b94 <GUI_TIMER_Delete+0x50>
 8009b64:	4668      	mov	r0, sp
 8009b66:	f001 fe91 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009b6a:	b1ad      	cbz	r5, 8009b98 <GUI_TIMER_Delete+0x54>
 8009b6c:	4628      	mov	r0, r5
 8009b6e:	f001 fe7f 	bl	800b870 <GUI_ALLOC_LockH>
 8009b72:	6885      	ldr	r5, [r0, #8]
 8009b74:	ae02      	add	r6, sp, #8
 8009b76:	42a5      	cmp	r5, r4
 8009b78:	f846 0d08 	str.w	r0, [r6, #-8]!
 8009b7c:	d1f2      	bne.n	8009b64 <GUI_TIMER_Delete+0x20>
 8009b7e:	4620      	mov	r0, r4
 8009b80:	f001 fe76 	bl	800b870 <GUI_ALLOC_LockH>
 8009b84:	9b00      	ldr	r3, [sp, #0]
 8009b86:	6882      	ldr	r2, [r0, #8]
 8009b88:	9001      	str	r0, [sp, #4]
 8009b8a:	609a      	str	r2, [r3, #8]
 8009b8c:	a801      	add	r0, sp, #4
 8009b8e:	f001 fe7d 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009b92:	4668      	mov	r0, sp
 8009b94:	f001 fe7a 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009b98:	4620      	mov	r0, r4
 8009b9a:	f7ff ff2b 	bl	80099f4 <_Unlink>
 8009b9e:	4620      	mov	r0, r4
 8009ba0:	f001 fea0 	bl	800b8e4 <GUI_ALLOC_Free>
 8009ba4:	b002      	add	sp, #8
 8009ba6:	bd70      	pop	{r4, r5, r6, pc}
 8009ba8:	20002b34 	.word	0x20002b34

08009bac <GUI_TIMER_SetPeriod>:
 8009bac:	b513      	push	{r0, r1, r4, lr}
 8009bae:	460c      	mov	r4, r1
 8009bb0:	b140      	cbz	r0, 8009bc4 <GUI_TIMER_SetPeriod+0x18>
 8009bb2:	f001 fe5d 	bl	800b870 <GUI_ALLOC_LockH>
 8009bb6:	ab02      	add	r3, sp, #8
 8009bb8:	6184      	str	r4, [r0, #24]
 8009bba:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009bbe:	4618      	mov	r0, r3
 8009bc0:	f001 fe64 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009bc4:	b002      	add	sp, #8
 8009bc6:	bd10      	pop	{r4, pc}

08009bc8 <GUI_TIMER_Restart>:
 8009bc8:	b513      	push	{r0, r1, r4, lr}
 8009bca:	4604      	mov	r4, r0
 8009bcc:	b198      	cbz	r0, 8009bf6 <GUI_TIMER_Restart+0x2e>
 8009bce:	f001 fe4f 	bl	800b870 <GUI_ALLOC_LockH>
 8009bd2:	9001      	str	r0, [sp, #4]
 8009bd4:	f000 f826 	bl	8009c24 <GUI_GetTime>
 8009bd8:	ab02      	add	r3, sp, #8
 8009bda:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8009bde:	6991      	ldr	r1, [r2, #24]
 8009be0:	4408      	add	r0, r1
 8009be2:	6150      	str	r0, [r2, #20]
 8009be4:	4618      	mov	r0, r3
 8009be6:	f001 fe51 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009bea:	4620      	mov	r0, r4
 8009bec:	f7ff ff02 	bl	80099f4 <_Unlink>
 8009bf0:	4620      	mov	r0, r4
 8009bf2:	f7ff feb1 	bl	8009958 <_Link>
 8009bf6:	b002      	add	sp, #8
 8009bf8:	bd10      	pop	{r4, pc}

08009bfa <GUI_TIMER_GetFlag>:
 8009bfa:	b513      	push	{r0, r1, r4, lr}
 8009bfc:	460c      	mov	r4, r1
 8009bfe:	b168      	cbz	r0, 8009c1c <GUI_TIMER_GetFlag+0x22>
 8009c00:	f001 fe36 	bl	800b870 <GUI_ALLOC_LockH>
 8009c04:	ab02      	add	r3, sp, #8
 8009c06:	8982      	ldrh	r2, [r0, #12]
 8009c08:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009c0c:	4214      	tst	r4, r2
 8009c0e:	4618      	mov	r0, r3
 8009c10:	bf0c      	ite	eq
 8009c12:	2400      	moveq	r4, #0
 8009c14:	2401      	movne	r4, #1
 8009c16:	f001 fe39 	bl	800b88c <GUI_ALLOC_UnlockH>
 8009c1a:	e000      	b.n	8009c1e <GUI_TIMER_GetFlag+0x24>
 8009c1c:	2401      	movs	r4, #1
 8009c1e:	4620      	mov	r0, r4
 8009c20:	b002      	add	sp, #8
 8009c22:	bd10      	pop	{r4, pc}

08009c24 <GUI_GetTime>:
 8009c24:	f7f6 bc6a 	b.w	80004fc <GUI_X_GetTime>

08009c28 <GUI__AlphaPreserveTrans>:
 8009c28:	b510      	push	{r4, lr}
 8009c2a:	4b07      	ldr	r3, [pc, #28]	; (8009c48 <GUI__AlphaPreserveTrans+0x20>)
 8009c2c:	781c      	ldrb	r4, [r3, #0]
 8009c2e:	b120      	cbz	r0, 8009c3a <GUI__AlphaPreserveTrans+0x12>
 8009c30:	2201      	movs	r2, #1
 8009c32:	701a      	strb	r2, [r3, #0]
 8009c34:	f04f 30ff 	mov.w	r0, #4294967295
 8009c38:	e002      	b.n	8009c40 <GUI__AlphaPreserveTrans+0x18>
 8009c3a:	7018      	strb	r0, [r3, #0]
 8009c3c:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8009c40:	f004 ffbe 	bl	800ebc0 <LCD_AA_SetAndMask>
 8009c44:	4620      	mov	r0, r4
 8009c46:	bd10      	pop	{r4, pc}
 8009c48:	20002d0c 	.word	0x20002d0c

08009c4c <GUI_SelectLayer>:
 8009c4c:	b570      	push	{r4, r5, r6, lr}
 8009c4e:	4d08      	ldr	r5, [pc, #32]	; (8009c70 <GUI_SelectLayer+0x24>)
 8009c50:	682b      	ldr	r3, [r5, #0]
 8009c52:	2801      	cmp	r0, #1
 8009c54:	4604      	mov	r4, r0
 8009c56:	7c5e      	ldrb	r6, [r3, #17]
 8009c58:	d808      	bhi.n	8009c6c <GUI_SelectLayer+0x20>
 8009c5a:	f000 fe4b 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 8009c5e:	b128      	cbz	r0, 8009c6c <GUI_SelectLayer+0x20>
 8009c60:	682b      	ldr	r3, [r5, #0]
 8009c62:	745c      	strb	r4, [r3, #17]
 8009c64:	f001 f998 	bl	800af98 <GUI_SelectLCD>
 8009c68:	4b02      	ldr	r3, [pc, #8]	; (8009c74 <GUI_SelectLayer+0x28>)
 8009c6a:	601c      	str	r4, [r3, #0]
 8009c6c:	4630      	mov	r0, r6
 8009c6e:	bd70      	pop	{r4, r5, r6, pc}
 8009c70:	200000b8 	.word	0x200000b8
 8009c74:	20002c9c 	.word	0x20002c9c

08009c78 <GUI_StoreKey>:
 8009c78:	4b02      	ldr	r3, [pc, #8]	; (8009c84 <GUI_StoreKey+0xc>)
 8009c7a:	681a      	ldr	r2, [r3, #0]
 8009c7c:	b902      	cbnz	r2, 8009c80 <GUI_StoreKey+0x8>
 8009c7e:	6018      	str	r0, [r3, #0]
 8009c80:	f7ff bdda 	b.w	8009838 <GUI_SignalEvent>
 8009c84:	20002b48 	.word	0x20002b48

08009c88 <GUI_PollKeyMsg>:
 8009c88:	4a0a      	ldr	r2, [pc, #40]	; (8009cb4 <GUI_PollKeyMsg+0x2c>)
 8009c8a:	490b      	ldr	r1, [pc, #44]	; (8009cb8 <GUI_PollKeyMsg+0x30>)
 8009c8c:	6813      	ldr	r3, [r2, #0]
 8009c8e:	6809      	ldr	r1, [r1, #0]
 8009c90:	428b      	cmp	r3, r1
 8009c92:	b510      	push	{r4, lr}
 8009c94:	d00b      	beq.n	8009cae <GUI_PollKeyMsg+0x26>
 8009c96:	4c09      	ldr	r4, [pc, #36]	; (8009cbc <GUI_PollKeyMsg+0x34>)
 8009c98:	42a3      	cmp	r3, r4
 8009c9a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8009c9e:	bf14      	ite	ne
 8009ca0:	3308      	addne	r3, #8
 8009ca2:	3b50      	subeq	r3, #80	; 0x50
 8009ca4:	6013      	str	r3, [r2, #0]
 8009ca6:	f7fb f8d9 	bl	8004e5c <WM_OnKey>
 8009caa:	2001      	movs	r0, #1
 8009cac:	bd10      	pop	{r4, pc}
 8009cae:	2000      	movs	r0, #0
 8009cb0:	bd10      	pop	{r4, pc}
 8009cb2:	bf00      	nop
 8009cb4:	200000b4 	.word	0x200000b4
 8009cb8:	200000b0 	.word	0x200000b0
 8009cbc:	20002b9c 	.word	0x20002b9c

08009cc0 <_SetLineColor>:
 8009cc0:	4b1e      	ldr	r3, [pc, #120]	; (8009d3c <_SetLineColor+0x7c>)
 8009cc2:	681b      	ldr	r3, [r3, #0]
 8009cc4:	7e9b      	ldrb	r3, [r3, #26]
 8009cc6:	3b01      	subs	r3, #1
 8009cc8:	2b03      	cmp	r3, #3
 8009cca:	d832      	bhi.n	8009d32 <_SetLineColor+0x72>
 8009ccc:	e8df f003 	tbb	[pc, r3]
 8009cd0:	221a0d02 	.word	0x221a0d02
 8009cd4:	4b1a      	ldr	r3, [pc, #104]	; (8009d40 <_SetLineColor+0x80>)
 8009cd6:	3006      	adds	r0, #6
 8009cd8:	4003      	ands	r3, r0
 8009cda:	2b00      	cmp	r3, #0
 8009cdc:	da03      	bge.n	8009ce6 <_SetLineColor+0x26>
 8009cde:	3b01      	subs	r3, #1
 8009ce0:	f063 030f 	orn	r3, r3, #15
 8009ce4:	3301      	adds	r3, #1
 8009ce6:	2b0b      	cmp	r3, #11
 8009ce8:	e008      	b.n	8009cfc <_SetLineColor+0x3c>
 8009cea:	4b16      	ldr	r3, [pc, #88]	; (8009d44 <_SetLineColor+0x84>)
 8009cec:	4003      	ands	r3, r0
 8009cee:	2b00      	cmp	r3, #0
 8009cf0:	da03      	bge.n	8009cfa <_SetLineColor+0x3a>
 8009cf2:	3b01      	subs	r3, #1
 8009cf4:	f063 0303 	orn	r3, r3, #3
 8009cf8:	3301      	adds	r3, #1
 8009cfa:	2b01      	cmp	r3, #1
 8009cfc:	bfcc      	ite	gt
 8009cfe:	2000      	movgt	r0, #0
 8009d00:	2001      	movle	r0, #1
 8009d02:	4770      	bx	lr
 8009d04:	2314      	movs	r3, #20
 8009d06:	fb90 f2f3 	sdiv	r2, r0, r3
 8009d0a:	fb03 0012 	mls	r0, r3, r2, r0
 8009d0e:	280b      	cmp	r0, #11
 8009d10:	dc09      	bgt.n	8009d26 <_SetLineColor+0x66>
 8009d12:	e010      	b.n	8009d36 <_SetLineColor+0x76>
 8009d14:	2318      	movs	r3, #24
 8009d16:	fb90 f2f3 	sdiv	r2, r0, r3
 8009d1a:	fb03 0012 	mls	r0, r3, r2, r0
 8009d1e:	280b      	cmp	r0, #11
 8009d20:	dd09      	ble.n	8009d36 <_SetLineColor+0x76>
 8009d22:	f020 0004 	bic.w	r0, r0, #4
 8009d26:	3810      	subs	r0, #16
 8009d28:	2801      	cmp	r0, #1
 8009d2a:	bf8c      	ite	hi
 8009d2c:	2000      	movhi	r0, #0
 8009d2e:	2001      	movls	r0, #1
 8009d30:	4770      	bx	lr
 8009d32:	2000      	movs	r0, #0
 8009d34:	4770      	bx	lr
 8009d36:	2001      	movs	r0, #1
 8009d38:	4770      	bx	lr
 8009d3a:	bf00      	nop
 8009d3c:	200000b8 	.word	0x200000b8
 8009d40:	8000000f 	.word	0x8000000f
 8009d44:	80000003 	.word	0x80000003

08009d48 <GUI_sin>:
 8009d48:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8009d4c:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8009d50:	bfc6      	itte	gt
 8009d52:	f5a0 6000 	subgt.w	r0, r0, #2048	; 0x800
 8009d56:	2101      	movgt	r1, #1
 8009d58:	2100      	movle	r1, #0
 8009d5a:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8009d5e:	bfc8      	it	gt
 8009d60:	f5c0 6000 	rsbgt	r0, r0, #2048	; 0x800
 8009d64:	f000 033f 	and.w	r3, r0, #63	; 0x3f
 8009d68:	b510      	push	{r4, lr}
 8009d6a:	1182      	asrs	r2, r0, #6
 8009d6c:	4c0b      	ldr	r4, [pc, #44]	; (8009d9c <GUI_sin+0x54>)
 8009d6e:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8009d72:	b29b      	uxth	r3, r3
 8009d74:	f834 0012 	ldrh.w	r0, [r4, r2, lsl #1]
 8009d78:	2b40      	cmp	r3, #64	; 0x40
 8009d7a:	fb00 f003 	mul.w	r0, r0, r3
 8009d7e:	d008      	beq.n	8009d92 <GUI_sin+0x4a>
 8009d80:	2a10      	cmp	r2, #16
 8009d82:	d006      	beq.n	8009d92 <GUI_sin+0x4a>
 8009d84:	3201      	adds	r2, #1
 8009d86:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8009d8a:	f834 2012 	ldrh.w	r2, [r4, r2, lsl #1]
 8009d8e:	fb03 0002 	mla	r0, r3, r2, r0
 8009d92:	3020      	adds	r0, #32
 8009d94:	0980      	lsrs	r0, r0, #6
 8009d96:	b101      	cbz	r1, 8009d9a <GUI_sin+0x52>
 8009d98:	4240      	negs	r0, r0
 8009d9a:	bd10      	pop	{r4, pc}
 8009d9c:	080123e8 	.word	0x080123e8

08009da0 <GUI_cos>:
 8009da0:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 8009da4:	f7ff bfd0 	b.w	8009d48 <GUI_sin>

08009da8 <GL_DrawLine1Ex>:
 8009da8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009dac:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8009db0:	1a17      	subs	r7, r2, r0
 8009db2:	1a5c      	subs	r4, r3, r1
 8009db4:	ea54 0c07 	orrs.w	ip, r4, r7
 8009db8:	4605      	mov	r5, r0
 8009dba:	460e      	mov	r6, r1
 8009dbc:	f8d8 b000 	ldr.w	fp, [r8]
 8009dc0:	d104      	bne.n	8009dcc <GL_DrawLine1Ex+0x24>
 8009dc2:	b003      	add	sp, #12
 8009dc4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009dc8:	f000 ba16 	b.w	800a1f8 <GL_DrawPoint>
 8009dcc:	ea87 70e7 	eor.w	r0, r7, r7, asr #31
 8009dd0:	eba0 70e7 	sub.w	r0, r0, r7, asr #31
 8009dd4:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 8009dd8:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 8009ddc:	4288      	cmp	r0, r1
 8009dde:	db04      	blt.n	8009dea <GL_DrawLine1Ex+0x42>
 8009de0:	4621      	mov	r1, r4
 8009de2:	463c      	mov	r4, r7
 8009de4:	460f      	mov	r7, r1
 8009de6:	2100      	movs	r1, #0
 8009de8:	e006      	b.n	8009df8 <GL_DrawLine1Ex+0x50>
 8009dea:	4611      	mov	r1, r2
 8009dec:	461a      	mov	r2, r3
 8009dee:	460b      	mov	r3, r1
 8009df0:	4629      	mov	r1, r5
 8009df2:	4635      	mov	r5, r6
 8009df4:	460e      	mov	r6, r1
 8009df6:	2101      	movs	r1, #1
 8009df8:	9100      	str	r1, [sp, #0]
 8009dfa:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 8009dfe:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 8009e02:	428c      	cmp	r4, r1
 8009e04:	d008      	beq.n	8009e18 <GL_DrawLine1Ex+0x70>
 8009e06:	461e      	mov	r6, r3
 8009e08:	462b      	mov	r3, r5
 8009e0a:	4264      	negs	r4, r4
 8009e0c:	4615      	mov	r5, r2
 8009e0e:	427f      	negs	r7, r7
 8009e10:	461a      	mov	r2, r3
 8009e12:	f04f 3aff 	mov.w	sl, #4294967295
 8009e16:	e001      	b.n	8009e1c <GL_DrawLine1Ex+0x74>
 8009e18:	f04f 0a01 	mov.w	sl, #1
 8009e1c:	2f00      	cmp	r7, #0
 8009e1e:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8009f68 <GL_DrawLine1Ex+0x1c0>
 8009e22:	d13e      	bne.n	8009ea2 <GL_DrawLine1Ex+0xfa>
 8009e24:	9b00      	ldr	r3, [sp, #0]
 8009e26:	b1d3      	cbz	r3, 8009e5e <GL_DrawLine1Ex+0xb6>
 8009e28:	f8d9 3000 	ldr.w	r3, [r9]
 8009e2c:	7e9b      	ldrb	r3, [r3, #26]
 8009e2e:	b98b      	cbnz	r3, 8009e54 <GL_DrawLine1Ex+0xac>
 8009e30:	4630      	mov	r0, r6
 8009e32:	4629      	mov	r1, r5
 8009e34:	b003      	add	sp, #12
 8009e36:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e3a:	f7fe be9f 	b.w	8008b7c <LCD_DrawVLine>
 8009e3e:	f7ff ff3f 	bl	8009cc0 <_SetLineColor>
 8009e42:	b930      	cbnz	r0, 8009e52 <GL_DrawLine1Ex+0xaa>
 8009e44:	f8d9 3000 	ldr.w	r3, [r9]
 8009e48:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009e4a:	4630      	mov	r0, r6
 8009e4c:	685b      	ldr	r3, [r3, #4]
 8009e4e:	1979      	adds	r1, r7, r5
 8009e50:	4798      	blx	r3
 8009e52:	3701      	adds	r7, #1
 8009e54:	42a7      	cmp	r7, r4
 8009e56:	eb07 000b 	add.w	r0, r7, fp
 8009e5a:	ddf0      	ble.n	8009e3e <GL_DrawLine1Ex+0x96>
 8009e5c:	e01d      	b.n	8009e9a <GL_DrawLine1Ex+0xf2>
 8009e5e:	f8d9 3000 	ldr.w	r3, [r9]
 8009e62:	7e99      	ldrb	r1, [r3, #26]
 8009e64:	b111      	cbz	r1, 8009e6c <GL_DrawLine1Ex+0xc4>
 8009e66:	f8dd a000 	ldr.w	sl, [sp]
 8009e6a:	e012      	b.n	8009e92 <GL_DrawLine1Ex+0xea>
 8009e6c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009e6e:	4628      	mov	r0, r5
 8009e70:	681b      	ldr	r3, [r3, #0]
 8009e72:	4631      	mov	r1, r6
 8009e74:	4798      	blx	r3
 8009e76:	e074      	b.n	8009f62 <GL_DrawLine1Ex+0x1ba>
 8009e78:	f7ff ff22 	bl	8009cc0 <_SetLineColor>
 8009e7c:	b938      	cbnz	r0, 8009e8e <GL_DrawLine1Ex+0xe6>
 8009e7e:	f8d9 3000 	ldr.w	r3, [r9]
 8009e82:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009e84:	eb0a 0005 	add.w	r0, sl, r5
 8009e88:	685b      	ldr	r3, [r3, #4]
 8009e8a:	4631      	mov	r1, r6
 8009e8c:	4798      	blx	r3
 8009e8e:	f10a 0a01 	add.w	sl, sl, #1
 8009e92:	45a2      	cmp	sl, r4
 8009e94:	eb0a 000b 	add.w	r0, sl, fp
 8009e98:	ddee      	ble.n	8009e78 <GL_DrawLine1Ex+0xd0>
 8009e9a:	3801      	subs	r0, #1
 8009e9c:	f8c8 0000 	str.w	r0, [r8]
 8009ea0:	e05f      	b.n	8009f62 <GL_DrawLine1Ex+0x1ba>
 8009ea2:	f8d9 1000 	ldr.w	r1, [r9]
 8009ea6:	f04f 0202 	mov.w	r2, #2
 8009eaa:	7e89      	ldrb	r1, [r1, #26]
 8009eac:	fb94 f2f2 	sdiv	r2, r4, r2
 8009eb0:	bfb8      	it	lt
 8009eb2:	4252      	neglt	r2, r2
 8009eb4:	b9d9      	cbnz	r1, 8009eee <GL_DrawLine1Ex+0x146>
 8009eb6:	4693      	mov	fp, r2
 8009eb8:	46a8      	mov	r8, r5
 8009eba:	ebc5 0308 	rsb	r3, r5, r8
 8009ebe:	42a3      	cmp	r3, r4
 8009ec0:	dc4f      	bgt.n	8009f62 <GL_DrawLine1Ex+0x1ba>
 8009ec2:	9b00      	ldr	r3, [sp, #0]
 8009ec4:	fb9b f1f4 	sdiv	r1, fp, r4
 8009ec8:	4431      	add	r1, r6
 8009eca:	b92b      	cbnz	r3, 8009ed8 <GL_DrawLine1Ex+0x130>
 8009ecc:	f8d9 3000 	ldr.w	r3, [r9]
 8009ed0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009ed2:	4640      	mov	r0, r8
 8009ed4:	685b      	ldr	r3, [r3, #4]
 8009ed6:	e005      	b.n	8009ee4 <GL_DrawLine1Ex+0x13c>
 8009ed8:	f8d9 3000 	ldr.w	r3, [r9]
 8009edc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009ede:	685b      	ldr	r3, [r3, #4]
 8009ee0:	4608      	mov	r0, r1
 8009ee2:	4641      	mov	r1, r8
 8009ee4:	4798      	blx	r3
 8009ee6:	f108 0801 	add.w	r8, r8, #1
 8009eea:	44bb      	add	fp, r7
 8009eec:	e7e5      	b.n	8009eba <GL_DrawLine1Ex+0x112>
 8009eee:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009ef2:	bf04      	itt	eq
 8009ef4:	eb04 010b 	addeq.w	r1, r4, fp
 8009ef8:	f8c8 1000 	streq.w	r1, [r8]
 8009efc:	9201      	str	r2, [sp, #4]
 8009efe:	46ab      	mov	fp, r5
 8009f00:	ebc5 010b 	rsb	r1, r5, fp
 8009f04:	42a1      	cmp	r1, r4
 8009f06:	f8d8 0000 	ldr.w	r0, [r8]
 8009f0a:	dc1e      	bgt.n	8009f4a <GL_DrawLine1Ex+0x1a2>
 8009f0c:	4450      	add	r0, sl
 8009f0e:	f8c8 0000 	str.w	r0, [r8]
 8009f12:	f7ff fed5 	bl	8009cc0 <_SetLineColor>
 8009f16:	b980      	cbnz	r0, 8009f3a <GL_DrawLine1Ex+0x192>
 8009f18:	f8dd c004 	ldr.w	ip, [sp, #4]
 8009f1c:	f8d9 0000 	ldr.w	r0, [r9]
 8009f20:	9b00      	ldr	r3, [sp, #0]
 8009f22:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8009f24:	fb9c f1f4 	sdiv	r1, ip, r4
 8009f28:	4431      	add	r1, r6
 8009f2a:	b913      	cbnz	r3, 8009f32 <GL_DrawLine1Ex+0x18a>
 8009f2c:	6843      	ldr	r3, [r0, #4]
 8009f2e:	4658      	mov	r0, fp
 8009f30:	e002      	b.n	8009f38 <GL_DrawLine1Ex+0x190>
 8009f32:	6843      	ldr	r3, [r0, #4]
 8009f34:	4608      	mov	r0, r1
 8009f36:	4659      	mov	r1, fp
 8009f38:	4798      	blx	r3
 8009f3a:	f8dd c004 	ldr.w	ip, [sp, #4]
 8009f3e:	44bc      	add	ip, r7
 8009f40:	f10b 0b01 	add.w	fp, fp, #1
 8009f44:	f8cd c004 	str.w	ip, [sp, #4]
 8009f48:	e7da      	b.n	8009f00 <GL_DrawLine1Ex+0x158>
 8009f4a:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009f4e:	bf04      	itt	eq
 8009f50:	1824      	addeq	r4, r4, r0
 8009f52:	f8c8 4000 	streq.w	r4, [r8]
 8009f56:	f8d8 2000 	ldr.w	r2, [r8]
 8009f5a:	ebca 0302 	rsb	r3, sl, r2
 8009f5e:	f8c8 3000 	str.w	r3, [r8]
 8009f62:	b003      	add	sp, #12
 8009f64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009f68:	200000b8 	.word	0x200000b8

08009f6c <GL_DrawLineEx>:
 8009f6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f70:	4d67      	ldr	r5, [pc, #412]	; (800a110 <GL_DrawLineEx+0x1a4>)
 8009f72:	682c      	ldr	r4, [r5, #0]
 8009f74:	f894 b018 	ldrb.w	fp, [r4, #24]
 8009f78:	f1bb 0f01 	cmp.w	fp, #1
 8009f7c:	b087      	sub	sp, #28
 8009f7e:	4681      	mov	r9, r0
 8009f80:	4688      	mov	r8, r1
 8009f82:	4617      	mov	r7, r2
 8009f84:	461e      	mov	r6, r3
 8009f86:	46aa      	mov	sl, r5
 8009f88:	d104      	bne.n	8009f94 <GL_DrawLineEx+0x28>
 8009f8a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8009f8c:	9400      	str	r4, [sp, #0]
 8009f8e:	f7ff ff0b 	bl	8009da8 <GL_DrawLine1Ex>
 8009f92:	e0ba      	b.n	800a10a <GL_DrawLineEx+0x19e>
 8009f94:	1a84      	subs	r4, r0, r2
 8009f96:	1acd      	subs	r5, r1, r3
 8009f98:	ea54 0305 	orrs.w	r3, r4, r5
 8009f9c:	f000 80b5 	beq.w	800a10a <GL_DrawLineEx+0x19e>
 8009fa0:	2c00      	cmp	r4, #0
 8009fa2:	bfba      	itte	lt
 8009fa4:	4264      	neglt	r4, r4
 8009fa6:	2301      	movlt	r3, #1
 8009fa8:	2300      	movge	r3, #0
 8009faa:	2d00      	cmp	r5, #0
 8009fac:	bfbc      	itt	lt
 8009fae:	426d      	neglt	r5, r5
 8009fb0:	f043 0302 	orrlt.w	r3, r3, #2
 8009fb4:	42a5      	cmp	r5, r4
 8009fb6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8009fba:	dd04      	ble.n	8009fc6 <GL_DrawLineEx+0x5a>
 8009fbc:	4622      	mov	r2, r4
 8009fbe:	f043 0304 	orr.w	r3, r3, #4
 8009fc2:	462c      	mov	r4, r5
 8009fc4:	4615      	mov	r5, r2
 8009fc6:	2202      	movs	r2, #2
 8009fc8:	fb94 f2f2 	sdiv	r2, r4, r2
 8009fcc:	eb02 2585 	add.w	r5, r2, r5, lsl #10
 8009fd0:	fb95 f4f4 	sdiv	r4, r5, r4
 8009fd4:	11a1      	asrs	r1, r4, #6
 8009fd6:	4a4f      	ldr	r2, [pc, #316]	; (800a114 <GL_DrawLineEx+0x1a8>)
 8009fd8:	f3c4 0483 	ubfx	r4, r4, #2, #4
 8009fdc:	f1c4 0510 	rsb	r5, r4, #16
 8009fe0:	f932 0011 	ldrsh.w	r0, [r2, r1, lsl #1]
 8009fe4:	2d10      	cmp	r5, #16
 8009fe6:	fb05 f000 	mul.w	r0, r5, r0
 8009fea:	d004      	beq.n	8009ff6 <GL_DrawLineEx+0x8a>
 8009fec:	3101      	adds	r1, #1
 8009fee:	f932 2011 	ldrsh.w	r2, [r2, r1, lsl #1]
 8009ff2:	fb04 0002 	mla	r0, r4, r2, r0
 8009ff6:	2210      	movs	r2, #16
 8009ff8:	3008      	adds	r0, #8
 8009ffa:	fb90 f0f2 	sdiv	r0, r0, r2
 8009ffe:	0759      	lsls	r1, r3, #29
 800a000:	bf48      	it	mi
 800a002:	f5c0 6080 	rsbmi	r0, r0, #1024	; 0x400
 800a006:	07da      	lsls	r2, r3, #31
 800a008:	bf48      	it	mi
 800a00a:	f5c0 6000 	rsbmi	r0, r0, #2048	; 0x800
 800a00e:	079b      	lsls	r3, r3, #30
 800a010:	bf48      	it	mi
 800a012:	f5c0 5080 	rsbmi	r0, r0, #4096	; 0x1000
 800a016:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 800a01a:	4628      	mov	r0, r5
 800a01c:	f7ff fec0 	bl	8009da0 <GUI_cos>
 800a020:	fb00 f40b 	mul.w	r4, r0, fp
 800a024:	4628      	mov	r0, r5
 800a026:	f7ff fe8f 	bl	8009d48 <GUI_sin>
 800a02a:	2c00      	cmp	r4, #0
 800a02c:	fb00 f00b 	mul.w	r0, r0, fp
 800a030:	da04      	bge.n	800a03c <GL_DrawLineEx+0xd0>
 800a032:	f5c4 7300 	rsb	r3, r4, #512	; 0x200
 800a036:	129b      	asrs	r3, r3, #10
 800a038:	425b      	negs	r3, r3
 800a03a:	e002      	b.n	800a042 <GL_DrawLineEx+0xd6>
 800a03c:	f504 7300 	add.w	r3, r4, #512	; 0x200
 800a040:	129b      	asrs	r3, r3, #10
 800a042:	2800      	cmp	r0, #0
 800a044:	da06      	bge.n	800a054 <GL_DrawLineEx+0xe8>
 800a046:	f5c0 7b00 	rsb	fp, r0, #512	; 0x200
 800a04a:	ea4f 2bab 	mov.w	fp, fp, asr #10
 800a04e:	f1cb 0b00 	rsb	fp, fp, #0
 800a052:	e003      	b.n	800a05c <GL_DrawLineEx+0xf0>
 800a054:	f500 7b00 	add.w	fp, r0, #512	; 0x200
 800a058:	ea4f 2bab 	mov.w	fp, fp, asr #10
 800a05c:	2b00      	cmp	r3, #0
 800a05e:	dd03      	ble.n	800a068 <GL_DrawLineEx+0xfc>
 800a060:	1c58      	adds	r0, r3, #1
 800a062:	1040      	asrs	r0, r0, #1
 800a064:	105b      	asrs	r3, r3, #1
 800a066:	e005      	b.n	800a074 <GL_DrawLineEx+0x108>
 800a068:	2202      	movs	r2, #2
 800a06a:	fb93 f0f2 	sdiv	r0, r3, r2
 800a06e:	3b01      	subs	r3, #1
 800a070:	fb93 f3f2 	sdiv	r3, r3, r2
 800a074:	f1bb 0f00 	cmp.w	fp, #0
 800a078:	dd05      	ble.n	800a086 <GL_DrawLineEx+0x11a>
 800a07a:	f10b 0201 	add.w	r2, fp, #1
 800a07e:	1052      	asrs	r2, r2, #1
 800a080:	ea4f 0b6b 	mov.w	fp, fp, asr #1
 800a084:	e006      	b.n	800a094 <GL_DrawLineEx+0x128>
 800a086:	2102      	movs	r1, #2
 800a088:	fb9b f2f1 	sdiv	r2, fp, r1
 800a08c:	f10b 3bff 	add.w	fp, fp, #4294967295
 800a090:	fb9b fbf1 	sdiv	fp, fp, r1
 800a094:	b280      	uxth	r0, r0
 800a096:	fa1f f489 	uxth.w	r4, r9
 800a09a:	1901      	adds	r1, r0, r4
 800a09c:	b292      	uxth	r2, r2
 800a09e:	f8ad 1008 	strh.w	r1, [sp, #8]
 800a0a2:	fa1f fb8b 	uxth.w	fp, fp
 800a0a6:	fa1f f188 	uxth.w	r1, r8
 800a0aa:	1855      	adds	r5, r2, r1
 800a0ac:	ebcb 0101 	rsb	r1, fp, r1
 800a0b0:	b29b      	uxth	r3, r3
 800a0b2:	f8ad 100e 	strh.w	r1, [sp, #14]
 800a0b6:	b2b9      	uxth	r1, r7
 800a0b8:	1ae4      	subs	r4, r4, r3
 800a0ba:	1acb      	subs	r3, r1, r3
 800a0bc:	f8ad 3010 	strh.w	r3, [sp, #16]
 800a0c0:	b2b3      	uxth	r3, r6
 800a0c2:	4401      	add	r1, r0
 800a0c4:	ebcb 0b03 	rsb	fp, fp, r3
 800a0c8:	4413      	add	r3, r2
 800a0ca:	2200      	movs	r2, #0
 800a0cc:	f8ad 1014 	strh.w	r1, [sp, #20]
 800a0d0:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a0d4:	a802      	add	r0, sp, #8
 800a0d6:	4613      	mov	r3, r2
 800a0d8:	2104      	movs	r1, #4
 800a0da:	f8ad 500a 	strh.w	r5, [sp, #10]
 800a0de:	f8ad 400c 	strh.w	r4, [sp, #12]
 800a0e2:	f8ad b012 	strh.w	fp, [sp, #18]
 800a0e6:	f005 f97f 	bl	800f3e8 <GL_FillPolygon>
 800a0ea:	f8da 3000 	ldr.w	r3, [sl]
 800a0ee:	7e5b      	ldrb	r3, [r3, #25]
 800a0f0:	b91b      	cbnz	r3, 800a0fa <GL_DrawLineEx+0x18e>
 800a0f2:	4648      	mov	r0, r9
 800a0f4:	4641      	mov	r1, r8
 800a0f6:	f000 f87f 	bl	800a1f8 <GL_DrawPoint>
 800a0fa:	f8da 3000 	ldr.w	r3, [sl]
 800a0fe:	7e5b      	ldrb	r3, [r3, #25]
 800a100:	b91b      	cbnz	r3, 800a10a <GL_DrawLineEx+0x19e>
 800a102:	4638      	mov	r0, r7
 800a104:	4631      	mov	r1, r6
 800a106:	f000 f877 	bl	800a1f8 <GL_DrawPoint>
 800a10a:	b007      	add	sp, #28
 800a10c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a110:	200000b8 	.word	0x200000b8
 800a114:	0801240a 	.word	0x0801240a

0800a118 <GL_DrawLine>:
 800a118:	b530      	push	{r4, r5, lr}
 800a11a:	b085      	sub	sp, #20
 800a11c:	ac04      	add	r4, sp, #16
 800a11e:	2500      	movs	r5, #0
 800a120:	f844 5d04 	str.w	r5, [r4, #-4]!
 800a124:	9400      	str	r4, [sp, #0]
 800a126:	f7ff ff21 	bl	8009f6c <GL_DrawLineEx>
 800a12a:	b005      	add	sp, #20
 800a12c:	bd30      	pop	{r4, r5, pc}
	...

0800a130 <GUI_DrawLine>:
 800a130:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a134:	461e      	mov	r6, r3
 800a136:	4b0c      	ldr	r3, [pc, #48]	; (800a168 <GUI_DrawLine+0x38>)
 800a138:	681c      	ldr	r4, [r3, #0]
 800a13a:	4681      	mov	r9, r0
 800a13c:	2000      	movs	r0, #0
 800a13e:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800a140:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800a142:	4688      	mov	r8, r1
 800a144:	4617      	mov	r7, r2
 800a146:	f7fb ffe3 	bl	8006110 <WM__InitIVRSearch>
 800a14a:	b150      	cbz	r0, 800a162 <GUI_DrawLine+0x32>
 800a14c:	eb09 0005 	add.w	r0, r9, r5
 800a150:	eb08 0104 	add.w	r1, r8, r4
 800a154:	197a      	adds	r2, r7, r5
 800a156:	1933      	adds	r3, r6, r4
 800a158:	f7ff ffde 	bl	800a118 <GL_DrawLine>
 800a15c:	f7fb ff16 	bl	8005f8c <WM__GetNextIVR>
 800a160:	e7f3      	b.n	800a14a <GUI_DrawLine+0x1a>
 800a162:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a166:	bf00      	nop
 800a168:	200000b8 	.word	0x200000b8

0800a16c <GUI_DrawHLine>:
 800a16c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a16e:	4f10      	ldr	r7, [pc, #64]	; (800a1b0 <GUI_DrawHLine+0x44>)
 800a170:	683b      	ldr	r3, [r7, #0]
 800a172:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 800a174:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800a176:	4405      	add	r5, r0
 800a178:	190e      	adds	r6, r1, r4
 800a17a:	b2ab      	uxth	r3, r5
 800a17c:	4414      	add	r4, r2
 800a17e:	4668      	mov	r0, sp
 800a180:	f8ad 6000 	strh.w	r6, [sp]
 800a184:	f8ad 4004 	strh.w	r4, [sp, #4]
 800a188:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a18c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a190:	f7fb ffbe 	bl	8006110 <WM__InitIVRSearch>
 800a194:	b148      	cbz	r0, 800a1aa <GUI_DrawHLine+0x3e>
 800a196:	683b      	ldr	r3, [r7, #0]
 800a198:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a19a:	4630      	mov	r0, r6
 800a19c:	681b      	ldr	r3, [r3, #0]
 800a19e:	4629      	mov	r1, r5
 800a1a0:	4622      	mov	r2, r4
 800a1a2:	4798      	blx	r3
 800a1a4:	f7fb fef2 	bl	8005f8c <WM__GetNextIVR>
 800a1a8:	e7f4      	b.n	800a194 <GUI_DrawHLine+0x28>
 800a1aa:	b003      	add	sp, #12
 800a1ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a1ae:	bf00      	nop
 800a1b0:	200000b8 	.word	0x200000b8

0800a1b4 <GUI_DrawPixel>:
 800a1b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a1b6:	4e0f      	ldr	r6, [pc, #60]	; (800a1f4 <GUI_DrawPixel+0x40>)
 800a1b8:	6833      	ldr	r3, [r6, #0]
 800a1ba:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800a1bc:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 800a1be:	4405      	add	r5, r0
 800a1c0:	b2ab      	uxth	r3, r5
 800a1c2:	440c      	add	r4, r1
 800a1c4:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a1c8:	f8ad 3000 	strh.w	r3, [sp]
 800a1cc:	4668      	mov	r0, sp
 800a1ce:	b2a3      	uxth	r3, r4
 800a1d0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a1d4:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a1d8:	f7fb ff9a 	bl	8006110 <WM__InitIVRSearch>
 800a1dc:	b140      	cbz	r0, 800a1f0 <GUI_DrawPixel+0x3c>
 800a1de:	6833      	ldr	r3, [r6, #0]
 800a1e0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a1e2:	4628      	mov	r0, r5
 800a1e4:	685b      	ldr	r3, [r3, #4]
 800a1e6:	4621      	mov	r1, r4
 800a1e8:	4798      	blx	r3
 800a1ea:	f7fb fecf 	bl	8005f8c <WM__GetNextIVR>
 800a1ee:	e7f5      	b.n	800a1dc <GUI_DrawPixel+0x28>
 800a1f0:	b002      	add	sp, #8
 800a1f2:	bd70      	pop	{r4, r5, r6, pc}
 800a1f4:	200000b8 	.word	0x200000b8

0800a1f8 <GL_DrawPoint>:
 800a1f8:	b508      	push	{r3, lr}
 800a1fa:	4b08      	ldr	r3, [pc, #32]	; (800a21c <GL_DrawPoint+0x24>)
 800a1fc:	681b      	ldr	r3, [r3, #0]
 800a1fe:	7e1a      	ldrb	r2, [r3, #24]
 800a200:	2a01      	cmp	r2, #1
 800a202:	d103      	bne.n	800a20c <GL_DrawPoint+0x14>
 800a204:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a206:	685b      	ldr	r3, [r3, #4]
 800a208:	4798      	blx	r3
 800a20a:	bd08      	pop	{r3, pc}
 800a20c:	2302      	movs	r3, #2
 800a20e:	3a01      	subs	r2, #1
 800a210:	fb92 f2f3 	sdiv	r2, r2, r3
 800a214:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a218:	f000 bf32 	b.w	800b080 <GL_FillCircle>
 800a21c:	200000b8 	.word	0x200000b8

0800a220 <GUI_DrawVLine>:
 800a220:	4b0f      	ldr	r3, [pc, #60]	; (800a260 <GUI_DrawVLine+0x40>)
 800a222:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a224:	681b      	ldr	r3, [r3, #0]
 800a226:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800a228:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 800a22a:	4406      	add	r6, r0
 800a22c:	190d      	adds	r5, r1, r4
 800a22e:	b2b3      	uxth	r3, r6
 800a230:	4414      	add	r4, r2
 800a232:	4668      	mov	r0, sp
 800a234:	f8ad 3000 	strh.w	r3, [sp]
 800a238:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a23c:	f8ad 5002 	strh.w	r5, [sp, #2]
 800a240:	f8ad 4006 	strh.w	r4, [sp, #6]
 800a244:	f7fb ff64 	bl	8006110 <WM__InitIVRSearch>
 800a248:	b138      	cbz	r0, 800a25a <GUI_DrawVLine+0x3a>
 800a24a:	4630      	mov	r0, r6
 800a24c:	4629      	mov	r1, r5
 800a24e:	4622      	mov	r2, r4
 800a250:	f7fe fc94 	bl	8008b7c <LCD_DrawVLine>
 800a254:	f7fb fe9a 	bl	8005f8c <WM__GetNextIVR>
 800a258:	e7f6      	b.n	800a248 <GUI_DrawVLine+0x28>
 800a25a:	b002      	add	sp, #8
 800a25c:	bd70      	pop	{r4, r5, r6, pc}
 800a25e:	bf00      	nop
 800a260:	200000b8 	.word	0x200000b8

0800a264 <GUI_FillRect>:
 800a264:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a266:	4c0f      	ldr	r4, [pc, #60]	; (800a2a4 <GUI_FillRect+0x40>)
 800a268:	6824      	ldr	r4, [r4, #0]
 800a26a:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800a26c:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800a26e:	1947      	adds	r7, r0, r5
 800a270:	190e      	adds	r6, r1, r4
 800a272:	4415      	add	r5, r2
 800a274:	441c      	add	r4, r3
 800a276:	4668      	mov	r0, sp
 800a278:	f8ad 7000 	strh.w	r7, [sp]
 800a27c:	f8ad 5004 	strh.w	r5, [sp, #4]
 800a280:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a284:	f8ad 4006 	strh.w	r4, [sp, #6]
 800a288:	f7fb ff42 	bl	8006110 <WM__InitIVRSearch>
 800a28c:	b140      	cbz	r0, 800a2a0 <GUI_FillRect+0x3c>
 800a28e:	4638      	mov	r0, r7
 800a290:	4631      	mov	r1, r6
 800a292:	462a      	mov	r2, r5
 800a294:	4623      	mov	r3, r4
 800a296:	f7fe fc97 	bl	8008bc8 <LCD_FillRect>
 800a29a:	f7fb fe77 	bl	8005f8c <WM__GetNextIVR>
 800a29e:	e7f5      	b.n	800a28c <GUI_FillRect+0x28>
 800a2a0:	b003      	add	sp, #12
 800a2a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a2a4:	200000b8 	.word	0x200000b8

0800a2a8 <GUI_FillRectEx>:
 800a2a8:	4603      	mov	r3, r0
 800a2aa:	f9b0 0000 	ldrsh.w	r0, [r0]
 800a2ae:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 800a2b2:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800a2b6:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800a2ba:	f7ff bfd3 	b.w	800a264 <GUI_FillRect>
	...

0800a2c0 <GUI_DrawGraphEx>:
 800a2c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a2c4:	4698      	mov	r8, r3
 800a2c6:	4b81      	ldr	r3, [pc, #516]	; (800a4cc <GUI_DrawGraphEx+0x20c>)
 800a2c8:	b08b      	sub	sp, #44	; 0x2c
 800a2ca:	468a      	mov	sl, r1
 800a2cc:	6819      	ldr	r1, [r3, #0]
 800a2ce:	9006      	str	r0, [sp, #24]
 800a2d0:	2000      	movs	r0, #0
 800a2d2:	4691      	mov	r9, r2
 800a2d4:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800a2d6:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800a2d8:	6ccd      	ldr	r5, [r1, #76]	; 0x4c
 800a2da:	6d0c      	ldr	r4, [r1, #80]	; 0x50
 800a2dc:	f7fb ff18 	bl	8006110 <WM__InitIVRSearch>
 800a2e0:	2800      	cmp	r0, #0
 800a2e2:	f000 80ef 	beq.w	800a4c4 <GUI_DrawGraphEx+0x204>
 800a2e6:	f10a 4300 	add.w	r3, sl, #2147483648	; 0x80000000
 800a2ea:	9806      	ldr	r0, [sp, #24]
 800a2ec:	3b01      	subs	r3, #1
 800a2ee:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800a2f2:	9307      	str	r3, [sp, #28]
 800a2f4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800a2f6:	2b00      	cmp	r3, #0
 800a2f8:	bf14      	ite	ne
 800a2fa:	f06f 0301 	mvnne.w	r3, #1
 800a2fe:	2302      	moveq	r3, #2
 800a300:	44a9      	add	r9, r5
 800a302:	4444      	add	r4, r8
 800a304:	9309      	str	r3, [sp, #36]	; 0x24
 800a306:	b927      	cbnz	r7, 800a312 <GUI_DrawGraphEx+0x52>
 800a308:	f7fb fe40 	bl	8005f8c <WM__GetNextIVR>
 800a30c:	2800      	cmp	r0, #0
 800a30e:	d1fa      	bne.n	800a306 <GUI_DrawGraphEx+0x46>
 800a310:	e0d8      	b.n	800a4c4 <GUI_DrawGraphEx+0x204>
 800a312:	2e00      	cmp	r6, #0
 800a314:	d0f8      	beq.n	800a308 <GUI_DrawGraphEx+0x48>
 800a316:	f1ba 0f00 	cmp.w	sl, #0
 800a31a:	ddf5      	ble.n	800a308 <GUI_DrawGraphEx+0x48>
 800a31c:	1c7b      	adds	r3, r7, #1
 800a31e:	d104      	bne.n	800a32a <GUI_DrawGraphEx+0x6a>
 800a320:	2e01      	cmp	r6, #1
 800a322:	bf14      	ite	ne
 800a324:	2302      	movne	r3, #2
 800a326:	2301      	moveq	r3, #1
 800a328:	e00a      	b.n	800a340 <GUI_DrawGraphEx+0x80>
 800a32a:	2f01      	cmp	r7, #1
 800a32c:	d104      	bne.n	800a338 <GUI_DrawGraphEx+0x78>
 800a32e:	2e01      	cmp	r6, #1
 800a330:	bf14      	ite	ne
 800a332:	2303      	movne	r3, #3
 800a334:	2300      	moveq	r3, #0
 800a336:	e003      	b.n	800a340 <GUI_DrawGraphEx+0x80>
 800a338:	2e01      	cmp	r6, #1
 800a33a:	bf14      	ite	ne
 800a33c:	2305      	movne	r3, #5
 800a33e:	2304      	moveq	r3, #4
 800a340:	9305      	str	r3, [sp, #20]
 800a342:	4b62      	ldr	r3, [pc, #392]	; (800a4cc <GUI_DrawGraphEx+0x20c>)
 800a344:	681b      	ldr	r3, [r3, #0]
 800a346:	695b      	ldr	r3, [r3, #20]
 800a348:	b1eb      	cbz	r3, 800a386 <GUI_DrawGraphEx+0xc6>
 800a34a:	f9b3 8000 	ldrsh.w	r8, [r3]
 800a34e:	f9b3 0002 	ldrsh.w	r0, [r3, #2]
 800a352:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800a356:	f9b3 b006 	ldrsh.w	fp, [r3, #6]
 800a35a:	9004      	str	r0, [sp, #16]
 800a35c:	f108 38ff 	add.w	r8, r8, #4294967295
 800a360:	45c1      	cmp	r9, r8
 800a362:	eb09 030a 	add.w	r3, r9, sl
 800a366:	bfb8      	it	lt
 800a368:	ebc9 0808 	rsblt	r8, r9, r8
 800a36c:	f103 33ff 	add.w	r3, r3, #4294967295
 800a370:	bfb4      	ite	lt
 800a372:	ea28 78e8 	biclt.w	r8, r8, r8, asr #31
 800a376:	f04f 0800 	movge.w	r8, #0
 800a37a:	4293      	cmp	r3, r2
 800a37c:	dd0a      	ble.n	800a394 <GUI_DrawGraphEx+0xd4>
 800a37e:	ebc9 0202 	rsb	r2, r9, r2
 800a382:	3201      	adds	r2, #1
 800a384:	e007      	b.n	800a396 <GUI_DrawGraphEx+0xd6>
 800a386:	f04f 3bff 	mov.w	fp, #4294967295
 800a38a:	4652      	mov	r2, sl
 800a38c:	f8cd b010 	str.w	fp, [sp, #16]
 800a390:	4698      	mov	r8, r3
 800a392:	e000      	b.n	800a396 <GUI_DrawGraphEx+0xd6>
 800a394:	4652      	mov	r2, sl
 800a396:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800a398:	b91b      	cbnz	r3, 800a3a2 <GUI_DrawGraphEx+0xe2>
 800a39a:	9b06      	ldr	r3, [sp, #24]
 800a39c:	eb03 0348 	add.w	r3, r3, r8, lsl #1
 800a3a0:	e000      	b.n	800a3a4 <GUI_DrawGraphEx+0xe4>
 800a3a2:	9b07      	ldr	r3, [sp, #28]
 800a3a4:	4590      	cmp	r8, r2
 800a3a6:	9303      	str	r3, [sp, #12]
 800a3a8:	daae      	bge.n	800a308 <GUI_DrawGraphEx+0x48>
 800a3aa:	444a      	add	r2, r9
 800a3ac:	9208      	str	r2, [sp, #32]
 800a3ae:	2200      	movs	r2, #0
 800a3b0:	44c8      	add	r8, r9
 800a3b2:	2301      	movs	r3, #1
 800a3b4:	9202      	str	r2, [sp, #8]
 800a3b6:	9803      	ldr	r0, [sp, #12]
 800a3b8:	9909      	ldr	r1, [sp, #36]	; 0x24
 800a3ba:	8805      	ldrh	r5, [r0, #0]
 800a3bc:	4408      	add	r0, r1
 800a3be:	b22d      	sxth	r5, r5
 800a3c0:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800a3c4:	428d      	cmp	r5, r1
 800a3c6:	9003      	str	r0, [sp, #12]
 800a3c8:	d10d      	bne.n	800a3e6 <GUI_DrawGraphEx+0x126>
 800a3ca:	9802      	ldr	r0, [sp, #8]
 800a3cc:	2800      	cmp	r0, #0
 800a3ce:	d16f      	bne.n	800a4b0 <GUI_DrawGraphEx+0x1f0>
 800a3d0:	2b00      	cmp	r3, #0
 800a3d2:	d16f      	bne.n	800a4b4 <GUI_DrawGraphEx+0x1f4>
 800a3d4:	4611      	mov	r1, r2
 800a3d6:	f108 30ff 	add.w	r0, r8, #4294967295
 800a3da:	9201      	str	r2, [sp, #4]
 800a3dc:	f7fe fb7a 	bl	8008ad4 <LCD_DrawPixel>
 800a3e0:	2301      	movs	r3, #1
 800a3e2:	9a01      	ldr	r2, [sp, #4]
 800a3e4:	e067      	b.n	800a4b6 <GUI_DrawGraphEx+0x1f6>
 800a3e6:	9805      	ldr	r0, [sp, #20]
 800a3e8:	1e41      	subs	r1, r0, #1
 800a3ea:	b1db      	cbz	r3, 800a424 <GUI_DrawGraphEx+0x164>
 800a3ec:	2904      	cmp	r1, #4
 800a3ee:	d817      	bhi.n	800a420 <GUI_DrawGraphEx+0x160>
 800a3f0:	e8df f001 	tbb	[pc, r1]
 800a3f4:	0b070503 	.word	0x0b070503
 800a3f8:	0f          	.byte	0x0f
 800a3f9:	00          	.byte	0x00
 800a3fa:	1b62      	subs	r2, r4, r5
 800a3fc:	e00e      	b.n	800a41c <GUI_DrawGraphEx+0x15c>
 800a3fe:	1b65      	subs	r5, r4, r5
 800a400:	e000      	b.n	800a404 <GUI_DrawGraphEx+0x144>
 800a402:	4425      	add	r5, r4
 800a404:	fbb5 f2f6 	udiv	r2, r5, r6
 800a408:	e008      	b.n	800a41c <GUI_DrawGraphEx+0x15c>
 800a40a:	4425      	add	r5, r4
 800a40c:	fb07 f205 	mul.w	r2, r7, r5
 800a410:	e004      	b.n	800a41c <GUI_DrawGraphEx+0x15c>
 800a412:	4425      	add	r5, r4
 800a414:	fb07 f205 	mul.w	r2, r7, r5
 800a418:	fbb2 f2f6 	udiv	r2, r2, r6
 800a41c:	2300      	movs	r3, #0
 800a41e:	e04a      	b.n	800a4b6 <GUI_DrawGraphEx+0x1f6>
 800a420:	192a      	adds	r2, r5, r4
 800a422:	e7fb      	b.n	800a41c <GUI_DrawGraphEx+0x15c>
 800a424:	2904      	cmp	r1, #4
 800a426:	d812      	bhi.n	800a44e <GUI_DrawGraphEx+0x18e>
 800a428:	e8df f001 	tbb	[pc, r1]
 800a42c:	0b070503 	.word	0x0b070503
 800a430:	0e          	.byte	0x0e
 800a431:	00          	.byte	0x00
 800a432:	1b65      	subs	r5, r4, r5
 800a434:	e00c      	b.n	800a450 <GUI_DrawGraphEx+0x190>
 800a436:	1b65      	subs	r5, r4, r5
 800a438:	e000      	b.n	800a43c <GUI_DrawGraphEx+0x17c>
 800a43a:	4425      	add	r5, r4
 800a43c:	fbb5 f5f6 	udiv	r5, r5, r6
 800a440:	e006      	b.n	800a450 <GUI_DrawGraphEx+0x190>
 800a442:	4425      	add	r5, r4
 800a444:	437d      	muls	r5, r7
 800a446:	e003      	b.n	800a450 <GUI_DrawGraphEx+0x190>
 800a448:	4425      	add	r5, r4
 800a44a:	437d      	muls	r5, r7
 800a44c:	e7f6      	b.n	800a43c <GUI_DrawGraphEx+0x17c>
 800a44e:	4425      	add	r5, r4
 800a450:	9904      	ldr	r1, [sp, #16]
 800a452:	428a      	cmp	r2, r1
 800a454:	da01      	bge.n	800a45a <GUI_DrawGraphEx+0x19a>
 800a456:	428d      	cmp	r5, r1
 800a458:	db25      	blt.n	800a4a6 <GUI_DrawGraphEx+0x1e6>
 800a45a:	455a      	cmp	r2, fp
 800a45c:	dd01      	ble.n	800a462 <GUI_DrawGraphEx+0x1a2>
 800a45e:	455d      	cmp	r5, fp
 800a460:	dc21      	bgt.n	800a4a6 <GUI_DrawGraphEx+0x1e6>
 800a462:	eb05 0c02 	add.w	ip, r5, r2
 800a466:	2102      	movs	r1, #2
 800a468:	42aa      	cmp	r2, r5
 800a46a:	fb9c fcf1 	sdiv	ip, ip, r1
 800a46e:	f108 30ff 	add.w	r0, r8, #4294967295
 800a472:	dc0b      	bgt.n	800a48c <GUI_DrawGraphEx+0x1cc>
 800a474:	4611      	mov	r1, r2
 800a476:	4662      	mov	r2, ip
 800a478:	e88d 1008 	stmia.w	sp, {r3, ip}
 800a47c:	f7fe fb7e 	bl	8008b7c <LCD_DrawVLine>
 800a480:	f8dd c004 	ldr.w	ip, [sp, #4]
 800a484:	4640      	mov	r0, r8
 800a486:	4661      	mov	r1, ip
 800a488:	462a      	mov	r2, r5
 800a48a:	e009      	b.n	800a4a0 <GUI_DrawGraphEx+0x1e0>
 800a48c:	4661      	mov	r1, ip
 800a48e:	e88d 1008 	stmia.w	sp, {r3, ip}
 800a492:	f7fe fb73 	bl	8008b7c <LCD_DrawVLine>
 800a496:	f8dd c004 	ldr.w	ip, [sp, #4]
 800a49a:	4640      	mov	r0, r8
 800a49c:	4629      	mov	r1, r5
 800a49e:	4662      	mov	r2, ip
 800a4a0:	f7fe fb6c 	bl	8008b7c <LCD_DrawVLine>
 800a4a4:	9b00      	ldr	r3, [sp, #0]
 800a4a6:	9a02      	ldr	r2, [sp, #8]
 800a4a8:	3201      	adds	r2, #1
 800a4aa:	9202      	str	r2, [sp, #8]
 800a4ac:	462a      	mov	r2, r5
 800a4ae:	e002      	b.n	800a4b6 <GUI_DrawGraphEx+0x1f6>
 800a4b0:	2300      	movs	r3, #0
 800a4b2:	9302      	str	r3, [sp, #8]
 800a4b4:	2301      	movs	r3, #1
 800a4b6:	9808      	ldr	r0, [sp, #32]
 800a4b8:	f108 0801 	add.w	r8, r8, #1
 800a4bc:	4580      	cmp	r8, r0
 800a4be:	f47f af7a 	bne.w	800a3b6 <GUI_DrawGraphEx+0xf6>
 800a4c2:	e721      	b.n	800a308 <GUI_DrawGraphEx+0x48>
 800a4c4:	b00b      	add	sp, #44	; 0x2c
 800a4c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a4ca:	bf00      	nop
 800a4cc:	200000b8 	.word	0x200000b8

0800a4d0 <GUI_DispString>:
 800a4d0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a4d4:	4604      	mov	r4, r0
 800a4d6:	2800      	cmp	r0, #0
 800a4d8:	d079      	beq.n	800a5ce <GUI_DispString+0xfe>
 800a4da:	4d3e      	ldr	r5, [pc, #248]	; (800a5d4 <GUI_DispString+0x104>)
 800a4dc:	f001 f8c8 	bl	800b670 <GUI_GetFontDistY>
 800a4e0:	682b      	ldr	r3, [r5, #0]
 800a4e2:	4680      	mov	r8, r0
 800a4e4:	f8b3 9022 	ldrh.w	r9, [r3, #34]	; 0x22
 800a4e8:	f001 f8aa 	bl	800b640 <GUI_GetYAdjust>
 800a4ec:	682b      	ldr	r3, [r5, #0]
 800a4ee:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 800a4f0:	b287      	uxth	r7, r0
 800a4f2:	1bd2      	subs	r2, r2, r7
 800a4f4:	849a      	strh	r2, [r3, #36]	; 0x24
 800a4f6:	7823      	ldrb	r3, [r4, #0]
 800a4f8:	2b00      	cmp	r3, #0
 800a4fa:	d05d      	beq.n	800a5b8 <GUI_DispString+0xe8>
 800a4fc:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800a500:	4620      	mov	r0, r4
 800a502:	f000 ffeb 	bl	800b4dc <GUI__GetLineNumChars>
 800a506:	4606      	mov	r6, r0
 800a508:	4631      	mov	r1, r6
 800a50a:	4620      	mov	r0, r4
 800a50c:	f001 f814 	bl	800b538 <GUI__GetLineDistX>
 800a510:	682b      	ldr	r3, [r5, #0]
 800a512:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800a514:	f002 0203 	and.w	r2, r2, #3
 800a518:	2a01      	cmp	r2, #1
 800a51a:	d005      	beq.n	800a528 <GUI_DispString+0x58>
 800a51c:	2a02      	cmp	r2, #2
 800a51e:	bf14      	ite	ne
 800a520:	2200      	movne	r2, #0
 800a522:	fb90 f2f2 	sdiveq	r2, r0, r2
 800a526:	e000      	b.n	800a52a <GUI_DispString+0x5a>
 800a528:	4602      	mov	r2, r0
 800a52a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800a52c:	1a8a      	subs	r2, r1, r2
 800a52e:	b292      	uxth	r2, r2
 800a530:	b291      	uxth	r1, r2
 800a532:	8459      	strh	r1, [r3, #34]	; 0x22
 800a534:	fa1f fa80 	uxth.w	sl, r0
 800a538:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800a53a:	f8ad 1000 	strh.w	r1, [sp]
 800a53e:	f10a 31ff 	add.w	r1, sl, #4294967295
 800a542:	440a      	add	r2, r1
 800a544:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a548:	fa1f fb88 	uxth.w	fp, r8
 800a54c:	3b01      	subs	r3, #1
 800a54e:	445b      	add	r3, fp
 800a550:	f8ad 2004 	strh.w	r2, [sp, #4]
 800a554:	4620      	mov	r0, r4
 800a556:	4631      	mov	r1, r6
 800a558:	466a      	mov	r2, sp
 800a55a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a55e:	f001 f81b 	bl	800b598 <GUI__DispLine>
 800a562:	682b      	ldr	r3, [r5, #0]
 800a564:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800a568:	849a      	strh	r2, [r3, #36]	; 0x24
 800a56a:	4620      	mov	r0, r4
 800a56c:	4631      	mov	r1, r6
 800a56e:	f7ff f98d 	bl	800988c <GUI_UC__NumChars2NumBytes>
 800a572:	5c23      	ldrb	r3, [r4, r0]
 800a574:	2b0a      	cmp	r3, #10
 800a576:	eb04 0200 	add.w	r2, r4, r0
 800a57a:	d001      	beq.n	800a580 <GUI_DispString+0xb0>
 800a57c:	2b0d      	cmp	r3, #13
 800a57e:	d112      	bne.n	800a5a6 <GUI_DispString+0xd6>
 800a580:	682b      	ldr	r3, [r5, #0]
 800a582:	8d99      	ldrh	r1, [r3, #44]	; 0x2c
 800a584:	f001 0103 	and.w	r1, r1, #3
 800a588:	3901      	subs	r1, #1
 800a58a:	2901      	cmp	r1, #1
 800a58c:	bf8a      	itet	hi
 800a58e:	8c19      	ldrhhi	r1, [r3, #32]
 800a590:	f8a3 9022 	strhls.w	r9, [r3, #34]	; 0x22
 800a594:	8459      	strhhi	r1, [r3, #34]	; 0x22
 800a596:	7811      	ldrb	r1, [r2, #0]
 800a598:	290a      	cmp	r1, #10
 800a59a:	d10b      	bne.n	800a5b4 <GUI_DispString+0xe4>
 800a59c:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800a59e:	448b      	add	fp, r1
 800a5a0:	f8a3 b024 	strh.w	fp, [r3, #36]	; 0x24
 800a5a4:	e006      	b.n	800a5b4 <GUI_DispString+0xe4>
 800a5a6:	4b0b      	ldr	r3, [pc, #44]	; (800a5d4 <GUI_DispString+0x104>)
 800a5a8:	f8bd 0000 	ldrh.w	r0, [sp]
 800a5ac:	681b      	ldr	r3, [r3, #0]
 800a5ae:	4482      	add	sl, r0
 800a5b0:	f8a3 a022 	strh.w	sl, [r3, #34]	; 0x22
 800a5b4:	7813      	ldrb	r3, [r2, #0]
 800a5b6:	b943      	cbnz	r3, 800a5ca <GUI_DispString+0xfa>
 800a5b8:	682b      	ldr	r3, [r5, #0]
 800a5ba:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 800a5bc:	4417      	add	r7, r2
 800a5be:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800a5c0:	849f      	strh	r7, [r3, #36]	; 0x24
 800a5c2:	f022 0203 	bic.w	r2, r2, #3
 800a5c6:	859a      	strh	r2, [r3, #44]	; 0x2c
 800a5c8:	e001      	b.n	800a5ce <GUI_DispString+0xfe>
 800a5ca:	1c54      	adds	r4, r2, #1
 800a5cc:	e793      	b.n	800a4f6 <GUI_DispString+0x26>
 800a5ce:	b003      	add	sp, #12
 800a5d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a5d4:	200000b8 	.word	0x200000b8

0800a5d8 <GUI_DispStringAt>:
 800a5d8:	4b02      	ldr	r3, [pc, #8]	; (800a5e4 <GUI_DispStringAt+0xc>)
 800a5da:	681b      	ldr	r3, [r3, #0]
 800a5dc:	8459      	strh	r1, [r3, #34]	; 0x22
 800a5de:	849a      	strh	r2, [r3, #36]	; 0x24
 800a5e0:	f7ff bf76 	b.w	800a4d0 <GUI_DispString>
 800a5e4:	200000b8 	.word	0x200000b8

0800a5e8 <GUI__DispStringInRect>:
 800a5e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a5ec:	b087      	sub	sp, #28
 800a5ee:	460c      	mov	r4, r1
 800a5f0:	9001      	str	r0, [sp, #4]
 800a5f2:	4691      	mov	r9, r2
 800a5f4:	461d      	mov	r5, r3
 800a5f6:	f001 f83b 	bl	800b670 <GUI_GetFontDistY>
 800a5fa:	9f01      	ldr	r7, [sp, #4]
 800a5fc:	4680      	mov	r8, r0
 800a5fe:	b124      	cbz	r4, 800a60a <GUI__DispStringInRect+0x22>
 800a600:	6820      	ldr	r0, [r4, #0]
 800a602:	6861      	ldr	r1, [r4, #4]
 800a604:	ab04      	add	r3, sp, #16
 800a606:	c303      	stmia	r3!, {r0, r1}
 800a608:	e002      	b.n	800a610 <GUI__DispStringInRect+0x28>
 800a60a:	a804      	add	r0, sp, #16
 800a60c:	f000 fbf0 	bl	800adf0 <GUI_GetClientRect>
 800a610:	f019 0a0c 	ands.w	sl, r9, #12
 800a614:	d002      	beq.n	800a61c <GUI__DispStringInRect+0x34>
 800a616:	462c      	mov	r4, r5
 800a618:	2600      	movs	r6, #0
 800a61a:	e016      	b.n	800a64a <GUI__DispStringInRect+0x62>
 800a61c:	f9bd 4012 	ldrsh.w	r4, [sp, #18]
 800a620:	e032      	b.n	800a688 <GUI__DispStringInRect+0xa0>
 800a622:	4621      	mov	r1, r4
 800a624:	9801      	ldr	r0, [sp, #4]
 800a626:	f000 ff59 	bl	800b4dc <GUI__GetLineNumChars>
 800a62a:	f8dd b004 	ldr.w	fp, [sp, #4]
 800a62e:	4601      	mov	r1, r0
 800a630:	1a24      	subs	r4, r4, r0
 800a632:	4658      	mov	r0, fp
 800a634:	f7ff f92a 	bl	800988c <GUI_UC__NumChars2NumBytes>
 800a638:	eb0b 0300 	add.w	r3, fp, r0
 800a63c:	a806      	add	r0, sp, #24
 800a63e:	3601      	adds	r6, #1
 800a640:	f840 3d14 	str.w	r3, [r0, #-20]!
 800a644:	f7fe fdad 	bl	80091a2 <GUI__HandleEOLine>
 800a648:	b908      	cbnz	r0, 800a64e <GUI__DispStringInRect+0x66>
 800a64a:	2c00      	cmp	r4, #0
 800a64c:	d1e9      	bne.n	800a622 <GUI__DispStringInRect+0x3a>
 800a64e:	f1ba 0f08 	cmp.w	sl, #8
 800a652:	d005      	beq.n	800a660 <GUI__DispStringInRect+0x78>
 800a654:	f1ba 0f0c 	cmp.w	sl, #12
 800a658:	d008      	beq.n	800a66c <GUI__DispStringInRect+0x84>
 800a65a:	f1ba 0f04 	cmp.w	sl, #4
 800a65e:	d112      	bne.n	800a686 <GUI__DispStringInRect+0x9e>
 800a660:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 800a664:	fb08 4416 	mls	r4, r8, r6, r4
 800a668:	3401      	adds	r4, #1
 800a66a:	e00d      	b.n	800a688 <GUI__DispStringInRect+0xa0>
 800a66c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800a670:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 800a674:	1ae4      	subs	r4, r4, r3
 800a676:	3401      	adds	r4, #1
 800a678:	fb08 4416 	mls	r4, r8, r6, r4
 800a67c:	2202      	movs	r2, #2
 800a67e:	fb94 f4f2 	sdiv	r4, r4, r2
 800a682:	441c      	add	r4, r3
 800a684:	e000      	b.n	800a688 <GUI__DispStringInRect+0xa0>
 800a686:	2400      	movs	r4, #0
 800a688:	9701      	str	r7, [sp, #4]
 800a68a:	2600      	movs	r6, #0
 800a68c:	2d00      	cmp	r5, #0
 800a68e:	d04b      	beq.n	800a728 <GUI__DispStringInRect+0x140>
 800a690:	4629      	mov	r1, r5
 800a692:	9801      	ldr	r0, [sp, #4]
 800a694:	f000 ff22 	bl	800b4dc <GUI__GetLineNumChars>
 800a698:	4607      	mov	r7, r0
 800a69a:	1a2d      	subs	r5, r5, r0
 800a69c:	4639      	mov	r1, r7
 800a69e:	9801      	ldr	r0, [sp, #4]
 800a6a0:	f000 ff4a 	bl	800b538 <GUI__GetLineDistX>
 800a6a4:	f009 0303 	and.w	r3, r9, #3
 800a6a8:	2b01      	cmp	r3, #1
 800a6aa:	d00f      	beq.n	800a6cc <GUI__DispStringInRect+0xe4>
 800a6ac:	2b02      	cmp	r3, #2
 800a6ae:	d003      	beq.n	800a6b8 <GUI__DispStringInRect+0xd0>
 800a6b0:	b983      	cbnz	r3, 800a6d4 <GUI__DispStringInRect+0xec>
 800a6b2:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
 800a6b6:	e00d      	b.n	800a6d4 <GUI__DispStringInRect+0xec>
 800a6b8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800a6bc:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 800a6c0:	1ab6      	subs	r6, r6, r2
 800a6c2:	1a36      	subs	r6, r6, r0
 800a6c4:	fb96 f6f3 	sdiv	r6, r6, r3
 800a6c8:	4416      	add	r6, r2
 800a6ca:	e003      	b.n	800a6d4 <GUI__DispStringInRect+0xec>
 800a6cc:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 800a6d0:	1a36      	subs	r6, r6, r0
 800a6d2:	3601      	adds	r6, #1
 800a6d4:	4b16      	ldr	r3, [pc, #88]	; (800a730 <GUI__DispStringInRect+0x148>)
 800a6d6:	6819      	ldr	r1, [r3, #0]
 800a6d8:	3801      	subs	r0, #1
 800a6da:	b2a3      	uxth	r3, r4
 800a6dc:	b2b2      	uxth	r2, r6
 800a6de:	848b      	strh	r3, [r1, #36]	; 0x24
 800a6e0:	4430      	add	r0, r6
 800a6e2:	f8ad 300a 	strh.w	r3, [sp, #10]
 800a6e6:	f108 33ff 	add.w	r3, r8, #4294967295
 800a6ea:	4423      	add	r3, r4
 800a6ec:	844a      	strh	r2, [r1, #34]	; 0x22
 800a6ee:	f8ad 2008 	strh.w	r2, [sp, #8]
 800a6f2:	4639      	mov	r1, r7
 800a6f4:	aa02      	add	r2, sp, #8
 800a6f6:	f8ad 000c 	strh.w	r0, [sp, #12]
 800a6fa:	9801      	ldr	r0, [sp, #4]
 800a6fc:	f8ad 300e 	strh.w	r3, [sp, #14]
 800a700:	f000 ff4a 	bl	800b598 <GUI__DispLine>
 800a704:	f8dd a004 	ldr.w	sl, [sp, #4]
 800a708:	4639      	mov	r1, r7
 800a70a:	4650      	mov	r0, sl
 800a70c:	f7ff f8be 	bl	800988c <GUI_UC__NumChars2NumBytes>
 800a710:	af06      	add	r7, sp, #24
 800a712:	4450      	add	r0, sl
 800a714:	f847 0d14 	str.w	r0, [r7, #-20]!
 800a718:	f000 ffaa 	bl	800b670 <GUI_GetFontDistY>
 800a71c:	4404      	add	r4, r0
 800a71e:	4638      	mov	r0, r7
 800a720:	f7fe fd3f 	bl	80091a2 <GUI__HandleEOLine>
 800a724:	2800      	cmp	r0, #0
 800a726:	d0b1      	beq.n	800a68c <GUI__DispStringInRect+0xa4>
 800a728:	b007      	add	sp, #28
 800a72a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a72e:	bf00      	nop
 800a730:	200000b8 	.word	0x200000b8

0800a734 <GUI_DispStringInRectMax>:
 800a734:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a738:	460c      	mov	r4, r1
 800a73a:	4690      	mov	r8, r2
 800a73c:	461f      	mov	r7, r3
 800a73e:	4606      	mov	r6, r0
 800a740:	b1c0      	cbz	r0, 800a774 <GUI_DispStringInRectMax+0x40>
 800a742:	b169      	cbz	r1, 800a760 <GUI_DispStringInRectMax+0x2c>
 800a744:	4608      	mov	r0, r1
 800a746:	f7fa fcb7 	bl	80050b8 <WM_SetUserClipRect>
 800a74a:	4605      	mov	r5, r0
 800a74c:	b148      	cbz	r0, 800a762 <GUI_DispStringInRectMax+0x2e>
 800a74e:	4668      	mov	r0, sp
 800a750:	4621      	mov	r1, r4
 800a752:	462a      	mov	r2, r5
 800a754:	f7fe fd57 	bl	8009206 <GUI__IntersectRects>
 800a758:	4668      	mov	r0, sp
 800a75a:	f7fa fcad 	bl	80050b8 <WM_SetUserClipRect>
 800a75e:	e000      	b.n	800a762 <GUI_DispStringInRectMax+0x2e>
 800a760:	460d      	mov	r5, r1
 800a762:	4630      	mov	r0, r6
 800a764:	4621      	mov	r1, r4
 800a766:	4642      	mov	r2, r8
 800a768:	463b      	mov	r3, r7
 800a76a:	f7ff ff3d 	bl	800a5e8 <GUI__DispStringInRect>
 800a76e:	4628      	mov	r0, r5
 800a770:	f7fa fca2 	bl	80050b8 <WM_SetUserClipRect>
 800a774:	b002      	add	sp, #8
 800a776:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a77a <GUI_DispStringInRect>:
 800a77a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800a77e:	f7ff bfd9 	b.w	800a734 <GUI_DispStringInRectMax>

0800a782 <GUI_WrapGetNumLines>:
 800a782:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a784:	4605      	mov	r5, r0
 800a786:	460e      	mov	r6, r1
 800a788:	4617      	mov	r7, r2
 800a78a:	2400      	movs	r4, #0
 800a78c:	4628      	mov	r0, r5
 800a78e:	4631      	mov	r1, r6
 800a790:	463a      	mov	r2, r7
 800a792:	f004 fac7 	bl	800ed24 <GUI__WrapGetNumBytesToNextLine>
 800a796:	b110      	cbz	r0, 800a79e <GUI_WrapGetNumLines+0x1c>
 800a798:	4405      	add	r5, r0
 800a79a:	3401      	adds	r4, #1
 800a79c:	e7f6      	b.n	800a78c <GUI_WrapGetNumLines+0xa>
 800a79e:	4620      	mov	r0, r4
 800a7a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a7a2 <GUI_DispStringInRectWrap>:
 800a7a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a7a6:	b089      	sub	sp, #36	; 0x24
 800a7a8:	460c      	mov	r4, r1
 800a7aa:	9202      	str	r2, [sp, #8]
 800a7ac:	9303      	str	r3, [sp, #12]
 800a7ae:	4605      	mov	r5, r0
 800a7b0:	2800      	cmp	r0, #0
 800a7b2:	f000 8092 	beq.w	800a8da <GUI_DispStringInRectWrap+0x138>
 800a7b6:	f8b1 a000 	ldrh.w	sl, [r1]
 800a7ba:	f8b1 9004 	ldrh.w	r9, [r1, #4]
 800a7be:	884e      	ldrh	r6, [r1, #2]
 800a7c0:	f8b1 b006 	ldrh.w	fp, [r1, #6]
 800a7c4:	fa0f f289 	sxth.w	r2, r9
 800a7c8:	fa0f f38a 	sxth.w	r3, sl
 800a7cc:	1ad3      	subs	r3, r2, r3
 800a7ce:	3301      	adds	r3, #1
 800a7d0:	9301      	str	r3, [sp, #4]
 800a7d2:	f000 ff4d 	bl	800b670 <GUI_GetFontDistY>
 800a7d6:	9902      	ldr	r1, [sp, #8]
 800a7d8:	f011 070c 	ands.w	r7, r1, #12
 800a7dc:	4680      	mov	r8, r0
 800a7de:	d01b      	beq.n	800a818 <GUI_DispStringInRectWrap+0x76>
 800a7e0:	4628      	mov	r0, r5
 800a7e2:	9901      	ldr	r1, [sp, #4]
 800a7e4:	9a03      	ldr	r2, [sp, #12]
 800a7e6:	f7ff ffcc 	bl	800a782 <GUI_WrapGetNumLines>
 800a7ea:	2f08      	cmp	r7, #8
 800a7ec:	d003      	beq.n	800a7f6 <GUI_DispStringInRectWrap+0x54>
 800a7ee:	2f0c      	cmp	r7, #12
 800a7f0:	d006      	beq.n	800a800 <GUI_DispStringInRectWrap+0x5e>
 800a7f2:	2f04      	cmp	r7, #4
 800a7f4:	d110      	bne.n	800a818 <GUI_DispStringInRectWrap+0x76>
 800a7f6:	f10b 0601 	add.w	r6, fp, #1
 800a7fa:	fb00 6618 	mls	r6, r0, r8, r6
 800a7fe:	e00a      	b.n	800a816 <GUI_DispStringInRectWrap+0x74>
 800a800:	b232      	sxth	r2, r6
 800a802:	fa0f f38b 	sxth.w	r3, fp
 800a806:	1a9b      	subs	r3, r3, r2
 800a808:	3301      	adds	r3, #1
 800a80a:	fb08 3010 	mls	r0, r8, r0, r3
 800a80e:	2302      	movs	r3, #2
 800a810:	fb90 f0f3 	sdiv	r0, r0, r3
 800a814:	4406      	add	r6, r0
 800a816:	b2b6      	uxth	r6, r6
 800a818:	4620      	mov	r0, r4
 800a81a:	f7fa fc4d 	bl	80050b8 <WM_SetUserClipRect>
 800a81e:	4607      	mov	r7, r0
 800a820:	b178      	cbz	r0, 800a842 <GUI_DispStringInRectWrap+0xa0>
 800a822:	a804      	add	r0, sp, #16
 800a824:	4621      	mov	r1, r4
 800a826:	463a      	mov	r2, r7
 800a828:	f8ad a010 	strh.w	sl, [sp, #16]
 800a82c:	f8ad 6012 	strh.w	r6, [sp, #18]
 800a830:	f8ad 9014 	strh.w	r9, [sp, #20]
 800a834:	f8ad b016 	strh.w	fp, [sp, #22]
 800a838:	f7fe fce5 	bl	8009206 <GUI__IntersectRects>
 800a83c:	a804      	add	r0, sp, #16
 800a83e:	f7fa fc3b 	bl	80050b8 <WM_SetUserClipRect>
 800a842:	9901      	ldr	r1, [sp, #4]
 800a844:	9a03      	ldr	r2, [sp, #12]
 800a846:	4628      	mov	r0, r5
 800a848:	f004 fa3a 	bl	800ecc0 <GUI__WrapGetNumCharsDisp>
 800a84c:	eb06 0b08 	add.w	fp, r6, r8
 800a850:	4602      	mov	r2, r0
 800a852:	fa1f fb8b 	uxth.w	fp, fp
 800a856:	f10b 33ff 	add.w	r3, fp, #4294967295
 800a85a:	4611      	mov	r1, r2
 800a85c:	4628      	mov	r0, r5
 800a85e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a862:	9200      	str	r2, [sp, #0]
 800a864:	f8ad a018 	strh.w	sl, [sp, #24]
 800a868:	f8ad 601a 	strh.w	r6, [sp, #26]
 800a86c:	f8ad 901c 	strh.w	r9, [sp, #28]
 800a870:	f000 fe62 	bl	800b538 <GUI__GetLineDistX>
 800a874:	9902      	ldr	r1, [sp, #8]
 800a876:	9a00      	ldr	r2, [sp, #0]
 800a878:	f001 0303 	and.w	r3, r1, #3
 800a87c:	2b01      	cmp	r3, #1
 800a87e:	d014      	beq.n	800a8aa <GUI_DispStringInRectWrap+0x108>
 800a880:	2b02      	cmp	r3, #2
 800a882:	d004      	beq.n	800a88e <GUI_DispStringInRectWrap+0xec>
 800a884:	b9b3      	cbnz	r3, 800a8b4 <GUI_DispStringInRectWrap+0x112>
 800a886:	8823      	ldrh	r3, [r4, #0]
 800a888:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a88c:	e012      	b.n	800a8b4 <GUI_DispStringInRectWrap+0x112>
 800a88e:	8821      	ldrh	r1, [r4, #0]
 800a890:	f9b4 e004 	ldrsh.w	lr, [r4, #4]
 800a894:	b20e      	sxth	r6, r1
 800a896:	ebc6 060e 	rsb	r6, r6, lr
 800a89a:	1a30      	subs	r0, r6, r0
 800a89c:	3001      	adds	r0, #1
 800a89e:	fb90 f3f3 	sdiv	r3, r0, r3
 800a8a2:	4419      	add	r1, r3
 800a8a4:	f8ad 1018 	strh.w	r1, [sp, #24]
 800a8a8:	e004      	b.n	800a8b4 <GUI_DispStringInRectWrap+0x112>
 800a8aa:	88a3      	ldrh	r3, [r4, #4]
 800a8ac:	3301      	adds	r3, #1
 800a8ae:	1a18      	subs	r0, r3, r0
 800a8b0:	f8ad 0018 	strh.w	r0, [sp, #24]
 800a8b4:	4628      	mov	r0, r5
 800a8b6:	4611      	mov	r1, r2
 800a8b8:	aa06      	add	r2, sp, #24
 800a8ba:	f000 fe6d 	bl	800b598 <GUI__DispLine>
 800a8be:	4628      	mov	r0, r5
 800a8c0:	9901      	ldr	r1, [sp, #4]
 800a8c2:	9a03      	ldr	r2, [sp, #12]
 800a8c4:	f004 fa2e 	bl	800ed24 <GUI__WrapGetNumBytesToNextLine>
 800a8c8:	4405      	add	r5, r0
 800a8ca:	fa1f f68b 	uxth.w	r6, fp
 800a8ce:	782b      	ldrb	r3, [r5, #0]
 800a8d0:	2b00      	cmp	r3, #0
 800a8d2:	d1b6      	bne.n	800a842 <GUI_DispStringInRectWrap+0xa0>
 800a8d4:	4638      	mov	r0, r7
 800a8d6:	f7fa fbef 	bl	80050b8 <WM_SetUserClipRect>
 800a8da:	b009      	add	sp, #36	; 0x24
 800a8dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a8e0 <GUI_GetStringDistX>:
 800a8e0:	b510      	push	{r4, lr}
 800a8e2:	4604      	mov	r4, r0
 800a8e4:	f7fe ffe4 	bl	80098b0 <GUI__GetNumChars>
 800a8e8:	4601      	mov	r1, r0
 800a8ea:	4620      	mov	r0, r4
 800a8ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a8f0:	f000 be22 	b.w	800b538 <GUI__GetLineDistX>

0800a8f4 <GUI_DEVICE__GetpDriver>:
 800a8f4:	2801      	cmp	r0, #1
 800a8f6:	dc09      	bgt.n	800a90c <GUI_DEVICE__GetpDriver+0x18>
 800a8f8:	4b05      	ldr	r3, [pc, #20]	; (800a910 <GUI_DEVICE__GetpDriver+0x1c>)
 800a8fa:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800a8fe:	b120      	cbz	r0, 800a90a <GUI_DEVICE__GetpDriver+0x16>
 800a900:	68c3      	ldr	r3, [r0, #12]
 800a902:	681b      	ldr	r3, [r3, #0]
 800a904:	b11b      	cbz	r3, 800a90e <GUI_DEVICE__GetpDriver+0x1a>
 800a906:	6800      	ldr	r0, [r0, #0]
 800a908:	e7f9      	b.n	800a8fe <GUI_DEVICE__GetpDriver+0xa>
 800a90a:	4770      	bx	lr
 800a90c:	2000      	movs	r0, #0
 800a90e:	4770      	bx	lr
 800a910:	20002d24 	.word	0x20002d24

0800a914 <GUI_DEVICE_Delete>:
 800a914:	f000 bf98 	b.w	800b848 <GUI_ALLOC_FreeFixedBlock>

0800a918 <GUI_DEVICE_Create>:
 800a918:	2b01      	cmp	r3, #1
 800a91a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a91c:	4606      	mov	r6, r0
 800a91e:	460d      	mov	r5, r1
 800a920:	4617      	mov	r7, r2
 800a922:	461c      	mov	r4, r3
 800a924:	dd01      	ble.n	800a92a <GUI_DEVICE_Create+0x12>
 800a926:	2000      	movs	r0, #0
 800a928:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a92a:	201c      	movs	r0, #28
 800a92c:	f001 f870 	bl	800ba10 <GUI_ALLOC_GetFixedBlock>
 800a930:	2800      	cmp	r0, #0
 800a932:	d0f8      	beq.n	800a926 <GUI_DEVICE_Create+0xe>
 800a934:	b10d      	cbz	r5, 800a93a <GUI_DEVICE_Create+0x22>
 800a936:	6105      	str	r5, [r0, #16]
 800a938:	e009      	b.n	800a94e <GUI_DEVICE_Create+0x36>
 800a93a:	4b09      	ldr	r3, [pc, #36]	; (800a960 <GUI_DEVICE_Create+0x48>)
 800a93c:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 800a940:	b129      	cbz	r1, 800a94e <GUI_DEVICE_Create+0x36>
 800a942:	680b      	ldr	r3, [r1, #0]
 800a944:	b10b      	cbz	r3, 800a94a <GUI_DEVICE_Create+0x32>
 800a946:	4619      	mov	r1, r3
 800a948:	e7fb      	b.n	800a942 <GUI_DEVICE_Create+0x2a>
 800a94a:	690b      	ldr	r3, [r1, #16]
 800a94c:	6103      	str	r3, [r0, #16]
 800a94e:	2300      	movs	r3, #0
 800a950:	6083      	str	r3, [r0, #8]
 800a952:	6184      	str	r4, [r0, #24]
 800a954:	8287      	strh	r7, [r0, #20]
 800a956:	60c6      	str	r6, [r0, #12]
 800a958:	6003      	str	r3, [r0, #0]
 800a95a:	6043      	str	r3, [r0, #4]
 800a95c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a95e:	bf00      	nop
 800a960:	20002d24 	.word	0x20002d24

0800a964 <GUI_DEVICE_Unlink>:
 800a964:	6981      	ldr	r1, [r0, #24]
 800a966:	4a0b      	ldr	r2, [pc, #44]	; (800a994 <GUI_DEVICE_Unlink+0x30>)
 800a968:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800a96c:	4283      	cmp	r3, r0
 800a96e:	d105      	bne.n	800a97c <GUI_DEVICE_Unlink+0x18>
 800a970:	6803      	ldr	r3, [r0, #0]
 800a972:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 800a976:	b10b      	cbz	r3, 800a97c <GUI_DEVICE_Unlink+0x18>
 800a978:	2200      	movs	r2, #0
 800a97a:	605a      	str	r2, [r3, #4]
 800a97c:	6843      	ldr	r3, [r0, #4]
 800a97e:	b10b      	cbz	r3, 800a984 <GUI_DEVICE_Unlink+0x20>
 800a980:	6802      	ldr	r2, [r0, #0]
 800a982:	601a      	str	r2, [r3, #0]
 800a984:	6802      	ldr	r2, [r0, #0]
 800a986:	b102      	cbz	r2, 800a98a <GUI_DEVICE_Unlink+0x26>
 800a988:	6053      	str	r3, [r2, #4]
 800a98a:	2300      	movs	r3, #0
 800a98c:	6003      	str	r3, [r0, #0]
 800a98e:	6043      	str	r3, [r0, #4]
 800a990:	4770      	bx	lr
 800a992:	bf00      	nop
 800a994:	20002d24 	.word	0x20002d24

0800a998 <GUI_DEVICE_Link>:
 800a998:	b570      	push	{r4, r5, r6, lr}
 800a99a:	b908      	cbnz	r0, 800a9a0 <GUI_DEVICE_Link+0x8>
 800a99c:	2001      	movs	r0, #1
 800a99e:	bd70      	pop	{r4, r5, r6, pc}
 800a9a0:	6982      	ldr	r2, [r0, #24]
 800a9a2:	2a01      	cmp	r2, #1
 800a9a4:	dcfa      	bgt.n	800a99c <GUI_DEVICE_Link+0x4>
 800a9a6:	4b1b      	ldr	r3, [pc, #108]	; (800aa14 <GUI_DEVICE_Link+0x7c>)
 800a9a8:	7819      	ldrb	r1, [r3, #0]
 800a9aa:	428a      	cmp	r2, r1
 800a9ac:	bfa4      	itt	ge
 800a9ae:	1c51      	addge	r1, r2, #1
 800a9b0:	7019      	strbge	r1, [r3, #0]
 800a9b2:	4919      	ldr	r1, [pc, #100]	; (800aa18 <GUI_DEVICE_Link+0x80>)
 800a9b4:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 800a9b8:	460d      	mov	r5, r1
 800a9ba:	b913      	cbnz	r3, 800a9c2 <GUI_DEVICE_Link+0x2a>
 800a9bc:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 800a9c0:	e01a      	b.n	800a9f8 <GUI_DEVICE_Link+0x60>
 800a9c2:	6859      	ldr	r1, [r3, #4]
 800a9c4:	b109      	cbz	r1, 800a9ca <GUI_DEVICE_Link+0x32>
 800a9c6:	460b      	mov	r3, r1
 800a9c8:	e7fb      	b.n	800a9c2 <GUI_DEVICE_Link+0x2a>
 800a9ca:	68c1      	ldr	r1, [r0, #12]
 800a9cc:	680e      	ldr	r6, [r1, #0]
 800a9ce:	68d9      	ldr	r1, [r3, #12]
 800a9d0:	680c      	ldr	r4, [r1, #0]
 800a9d2:	42b4      	cmp	r4, r6
 800a9d4:	dd03      	ble.n	800a9de <GUI_DEVICE_Link+0x46>
 800a9d6:	681b      	ldr	r3, [r3, #0]
 800a9d8:	2b00      	cmp	r3, #0
 800a9da:	d1f8      	bne.n	800a9ce <GUI_DEVICE_Link+0x36>
 800a9dc:	e7de      	b.n	800a99c <GUI_DEVICE_Link+0x4>
 800a9de:	d102      	bne.n	800a9e6 <GUI_DEVICE_Link+0x4e>
 800a9e0:	8a81      	ldrh	r1, [r0, #20]
 800a9e2:	2901      	cmp	r1, #1
 800a9e4:	d00f      	beq.n	800aa06 <GUI_DEVICE_Link+0x6e>
 800a9e6:	6859      	ldr	r1, [r3, #4]
 800a9e8:	b189      	cbz	r1, 800aa0e <GUI_DEVICE_Link+0x76>
 800a9ea:	6008      	str	r0, [r1, #0]
 800a9ec:	6041      	str	r1, [r0, #4]
 800a9ee:	6058      	str	r0, [r3, #4]
 800a9f0:	4298      	cmp	r0, r3
 800a9f2:	bf08      	it	eq
 800a9f4:	2300      	moveq	r3, #0
 800a9f6:	6003      	str	r3, [r0, #0]
 800a9f8:	2000      	movs	r0, #0
 800a9fa:	bd70      	pop	{r4, r5, r6, pc}
 800a9fc:	68cb      	ldr	r3, [r1, #12]
 800a9fe:	681b      	ldr	r3, [r3, #0]
 800aa00:	42a3      	cmp	r3, r4
 800aa02:	460b      	mov	r3, r1
 800aa04:	dbef      	blt.n	800a9e6 <GUI_DEVICE_Link+0x4e>
 800aa06:	6819      	ldr	r1, [r3, #0]
 800aa08:	2900      	cmp	r1, #0
 800aa0a:	d1f7      	bne.n	800a9fc <GUI_DEVICE_Link+0x64>
 800aa0c:	e7eb      	b.n	800a9e6 <GUI_DEVICE_Link+0x4e>
 800aa0e:	f845 0022 	str.w	r0, [r5, r2, lsl #2]
 800aa12:	e7ec      	b.n	800a9ee <GUI_DEVICE_Link+0x56>
 800aa14:	20002cd2 	.word	0x20002cd2
 800aa18:	20002d24 	.word	0x20002d24

0800aa1c <GUI_DEVICE_CreateAndLink>:
 800aa1c:	b538      	push	{r3, r4, r5, lr}
 800aa1e:	461d      	mov	r5, r3
 800aa20:	f7ff ff7a 	bl	800a918 <GUI_DEVICE_Create>
 800aa24:	4604      	mov	r4, r0
 800aa26:	b148      	cbz	r0, 800aa3c <GUI_DEVICE_CreateAndLink+0x20>
 800aa28:	f7ff ffb6 	bl	800a998 <GUI_DEVICE_Link>
 800aa2c:	68e3      	ldr	r3, [r4, #12]
 800aa2e:	681b      	ldr	r3, [r3, #0]
 800aa30:	b923      	cbnz	r3, 800aa3c <GUI_DEVICE_CreateAndLink+0x20>
 800aa32:	4b03      	ldr	r3, [pc, #12]	; (800aa40 <GUI_DEVICE_CreateAndLink+0x24>)
 800aa34:	3516      	adds	r5, #22
 800aa36:	681b      	ldr	r3, [r3, #0]
 800aa38:	f843 4025 	str.w	r4, [r3, r5, lsl #2]
 800aa3c:	4620      	mov	r0, r4
 800aa3e:	bd38      	pop	{r3, r4, r5, pc}
 800aa40:	200000b8 	.word	0x200000b8

0800aa44 <_OnExit>:
 800aa44:	b570      	push	{r4, r5, r6, lr}
 800aa46:	4b0b      	ldr	r3, [pc, #44]	; (800aa74 <_OnExit+0x30>)
 800aa48:	4e0b      	ldr	r6, [pc, #44]	; (800aa78 <_OnExit+0x34>)
 800aa4a:	4d0c      	ldr	r5, [pc, #48]	; (800aa7c <_OnExit+0x38>)
 800aa4c:	2400      	movs	r4, #0
 800aa4e:	601c      	str	r4, [r3, #0]
 800aa50:	4621      	mov	r1, r4
 800aa52:	6833      	ldr	r3, [r6, #0]
 800aa54:	2270      	movs	r2, #112	; 0x70
 800aa56:	4628      	mov	r0, r5
 800aa58:	4798      	blx	r3
 800aa5a:	6833      	ldr	r3, [r6, #0]
 800aa5c:	4808      	ldr	r0, [pc, #32]	; (800aa80 <_OnExit+0x3c>)
 800aa5e:	4621      	mov	r1, r4
 800aa60:	2208      	movs	r2, #8
 800aa62:	4798      	blx	r3
 800aa64:	4b07      	ldr	r3, [pc, #28]	; (800aa84 <_OnExit+0x40>)
 800aa66:	601d      	str	r5, [r3, #0]
 800aa68:	4b07      	ldr	r3, [pc, #28]	; (800aa88 <_OnExit+0x44>)
 800aa6a:	701c      	strb	r4, [r3, #0]
 800aa6c:	4b07      	ldr	r3, [pc, #28]	; (800aa8c <_OnExit+0x48>)
 800aa6e:	601c      	str	r4, [r3, #0]
 800aa70:	bd70      	pop	{r4, r5, r6, pc}
 800aa72:	bf00      	nop
 800aa74:	20002c24 	.word	0x20002c24
 800aa78:	200000a4 	.word	0x200000a4
 800aa7c:	20002bb4 	.word	0x20002bb4
 800aa80:	20002d24 	.word	0x20002d24
 800aa84:	200000b8 	.word	0x200000b8
 800aa88:	20002d0c 	.word	0x20002d0c
 800aa8c:	20002ce4 	.word	0x20002ce4

0800aa90 <_InitContext>:
 800aa90:	b538      	push	{r3, r4, r5, lr}
 800aa92:	4d19      	ldr	r5, [pc, #100]	; (800aaf8 <_InitContext+0x68>)
 800aa94:	682b      	ldr	r3, [r5, #0]
 800aa96:	1d1a      	adds	r2, r3, #4
 800aa98:	63da      	str	r2, [r3, #60]	; 0x3c
 800aa9a:	f103 0208 	add.w	r2, r3, #8
 800aa9e:	639b      	str	r3, [r3, #56]	; 0x38
 800aaa0:	641b      	str	r3, [r3, #64]	; 0x40
 800aaa2:	6142      	str	r2, [r0, #20]
 800aaa4:	7c5a      	ldrb	r2, [r3, #17]
 800aaa6:	4b15      	ldr	r3, [pc, #84]	; (800aafc <_InitContext+0x6c>)
 800aaa8:	4604      	mov	r4, r0
 800aaaa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800aaae:	68c3      	ldr	r3, [r0, #12]
 800aab0:	f104 0108 	add.w	r1, r4, #8
 800aab4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800aab6:	4798      	blx	r3
 800aab8:	4b11      	ldr	r3, [pc, #68]	; (800ab00 <_InitContext+0x70>)
 800aaba:	6663      	str	r3, [r4, #100]	; 0x64
 800aabc:	4b11      	ldr	r3, [pc, #68]	; (800ab04 <_InitContext+0x74>)
 800aabe:	681b      	ldr	r3, [r3, #0]
 800aac0:	61e3      	str	r3, [r4, #28]
 800aac2:	682b      	ldr	r3, [r5, #0]
 800aac4:	3308      	adds	r3, #8
 800aac6:	6163      	str	r3, [r4, #20]
 800aac8:	2301      	movs	r3, #1
 800aaca:	7623      	strb	r3, [r4, #24]
 800aacc:	f7fa f80a 	bl	8004ae4 <WM_GetDesktopWindow>
 800aad0:	2303      	movs	r3, #3
 800aad2:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 800aad6:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800aada:	6323      	str	r3, [r4, #48]	; 0x30
 800aadc:	6363      	str	r3, [r4, #52]	; 0x34
 800aade:	4b0a      	ldr	r3, [pc, #40]	; (800ab08 <_InitContext+0x78>)
 800aae0:	64a0      	str	r0, [r4, #72]	; 0x48
 800aae2:	6818      	ldr	r0, [r3, #0]
 800aae4:	f7fe fb40 	bl	8009168 <LCD_SetBkColor>
 800aae8:	4b08      	ldr	r3, [pc, #32]	; (800ab0c <_InitContext+0x7c>)
 800aaea:	6818      	ldr	r0, [r3, #0]
 800aaec:	f7fe fb44 	bl	8009178 <LCD_SetColor>
 800aaf0:	4b07      	ldr	r3, [pc, #28]	; (800ab10 <_InitContext+0x80>)
 800aaf2:	4a08      	ldr	r2, [pc, #32]	; (800ab14 <_InitContext+0x84>)
 800aaf4:	601a      	str	r2, [r3, #0]
 800aaf6:	bd38      	pop	{r3, r4, r5, pc}
 800aaf8:	200000b8 	.word	0x200000b8
 800aafc:	20002d24 	.word	0x20002d24
 800ab00:	0801242c 	.word	0x0801242c
 800ab04:	200000bc 	.word	0x200000bc
 800ab08:	20002bb0 	.word	0x20002bb0
 800ab0c:	200000c0 	.word	0x200000c0
 800ab10:	20002d1c 	.word	0x20002d1c
 800ab14:	08012f98 	.word	0x08012f98

0800ab18 <GUI_SetDefaultFont>:
 800ab18:	4b01      	ldr	r3, [pc, #4]	; (800ab20 <GUI_SetDefaultFont+0x8>)
 800ab1a:	6018      	str	r0, [r3, #0]
 800ab1c:	4770      	bx	lr
 800ab1e:	bf00      	nop
 800ab20:	200000bc 	.word	0x200000bc

0800ab24 <GUI_ClearRect>:
 800ab24:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ab28:	4607      	mov	r7, r0
 800ab2a:	2004      	movs	r0, #4
 800ab2c:	469a      	mov	sl, r3
 800ab2e:	460e      	mov	r6, r1
 800ab30:	4691      	mov	r9, r2
 800ab32:	f7fd ffc7 	bl	8008ac4 <LCD_SetDrawMode>
 800ab36:	4b13      	ldr	r3, [pc, #76]	; (800ab84 <GUI_ClearRect+0x60>)
 800ab38:	681c      	ldr	r4, [r3, #0]
 800ab3a:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800ab3c:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800ab3e:	442f      	add	r7, r5
 800ab40:	4426      	add	r6, r4
 800ab42:	4680      	mov	r8, r0
 800ab44:	444d      	add	r5, r9
 800ab46:	4454      	add	r4, sl
 800ab48:	4668      	mov	r0, sp
 800ab4a:	f8ad 7000 	strh.w	r7, [sp]
 800ab4e:	f8ad 5004 	strh.w	r5, [sp, #4]
 800ab52:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ab56:	f8ad 4006 	strh.w	r4, [sp, #6]
 800ab5a:	f7fb fad9 	bl	8006110 <WM__InitIVRSearch>
 800ab5e:	b928      	cbnz	r0, 800ab6c <GUI_ClearRect+0x48>
 800ab60:	4640      	mov	r0, r8
 800ab62:	f7fd ffaf 	bl	8008ac4 <LCD_SetDrawMode>
 800ab66:	b002      	add	sp, #8
 800ab68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ab6c:	4638      	mov	r0, r7
 800ab6e:	4631      	mov	r1, r6
 800ab70:	462a      	mov	r2, r5
 800ab72:	4623      	mov	r3, r4
 800ab74:	f7fe f828 	bl	8008bc8 <LCD_FillRect>
 800ab78:	f7fb fa08 	bl	8005f8c <WM__GetNextIVR>
 800ab7c:	2800      	cmp	r0, #0
 800ab7e:	d1f5      	bne.n	800ab6c <GUI_ClearRect+0x48>
 800ab80:	e7ee      	b.n	800ab60 <GUI_ClearRect+0x3c>
 800ab82:	bf00      	nop
 800ab84:	200000b8 	.word	0x200000b8

0800ab88 <GUI_Clear>:
 800ab88:	b510      	push	{r4, lr}
 800ab8a:	2000      	movs	r0, #0
 800ab8c:	4601      	mov	r1, r0
 800ab8e:	f000 f9c1 	bl	800af14 <GUI_GotoXY>
 800ab92:	4804      	ldr	r0, [pc, #16]	; (800aba4 <GUI_Clear+0x1c>)
 800ab94:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800ab98:	4601      	mov	r1, r0
 800ab9a:	4613      	mov	r3, r2
 800ab9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800aba0:	f7ff bfc0 	b.w	800ab24 <GUI_ClearRect>
 800aba4:	ffffc001 	.word	0xffffc001

0800aba8 <GUI__RegisterExit>:
 800aba8:	b480      	push	{r7}
 800abaa:	b083      	sub	sp, #12
 800abac:	af00      	add	r7, sp, #0
 800abae:	6078      	str	r0, [r7, #4]
 800abb0:	4b05      	ldr	r3, [pc, #20]	; (800abc8 <GUI__RegisterExit+0x20>)
 800abb2:	681a      	ldr	r2, [r3, #0]
 800abb4:	687b      	ldr	r3, [r7, #4]
 800abb6:	605a      	str	r2, [r3, #4]
 800abb8:	4b03      	ldr	r3, [pc, #12]	; (800abc8 <GUI__RegisterExit+0x20>)
 800abba:	687a      	ldr	r2, [r7, #4]
 800abbc:	601a      	str	r2, [r3, #0]
 800abbe:	370c      	adds	r7, #12
 800abc0:	46bd      	mov	sp, r7
 800abc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abc6:	4770      	bx	lr
 800abc8:	20002ba4 	.word	0x20002ba4

0800abcc <GUI__Config>:
 800abcc:	b508      	push	{r3, lr}
 800abce:	4b08      	ldr	r3, [pc, #32]	; (800abf0 <GUI__Config+0x24>)
 800abd0:	681a      	ldr	r2, [r3, #0]
 800abd2:	b962      	cbnz	r2, 800abee <GUI__Config+0x22>
 800abd4:	2201      	movs	r2, #1
 800abd6:	601a      	str	r2, [r3, #0]
 800abd8:	f7f5 fc80 	bl	80004dc <GUI_X_Config>
 800abdc:	f7f5 fe62 	bl	80008a4 <LCD_X_Config>
 800abe0:	4804      	ldr	r0, [pc, #16]	; (800abf4 <GUI__Config+0x28>)
 800abe2:	4b05      	ldr	r3, [pc, #20]	; (800abf8 <GUI__Config+0x2c>)
 800abe4:	6003      	str	r3, [r0, #0]
 800abe6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800abea:	f7ff bfdd 	b.w	800aba8 <GUI__RegisterExit>
 800abee:	bd08      	pop	{r3, pc}
 800abf0:	20002c24 	.word	0x20002c24
 800abf4:	20002ba8 	.word	0x20002ba8
 800abf8:	0800aa45 	.word	0x0800aa45

0800abfc <GUI_Init>:
 800abfc:	b590      	push	{r4, r7, lr}
 800abfe:	b083      	sub	sp, #12
 800ac00:	af00      	add	r7, sp, #0
 800ac02:	4b26      	ldr	r3, [pc, #152]	; (800ac9c <GUI_Init+0xa0>)
 800ac04:	4a25      	ldr	r2, [pc, #148]	; (800ac9c <GUI_Init+0xa0>)
 800ac06:	6812      	ldr	r2, [r2, #0]
 800ac08:	f022 0201 	bic.w	r2, r2, #1
 800ac0c:	601a      	str	r2, [r3, #0]
 800ac0e:	4b24      	ldr	r3, [pc, #144]	; (800aca0 <GUI_Init+0xa4>)
 800ac10:	2201      	movs	r2, #1
 800ac12:	601a      	str	r2, [r3, #0]
 800ac14:	bf00      	nop
 800ac16:	4b22      	ldr	r3, [pc, #136]	; (800aca0 <GUI_Init+0xa4>)
 800ac18:	681b      	ldr	r3, [r3, #0]
 800ac1a:	2b00      	cmp	r3, #0
 800ac1c:	d1fb      	bne.n	800ac16 <GUI_Init+0x1a>
 800ac1e:	4b21      	ldr	r3, [pc, #132]	; (800aca4 <GUI_Init+0xa8>)
 800ac20:	4a21      	ldr	r2, [pc, #132]	; (800aca8 <GUI_Init+0xac>)
 800ac22:	601a      	str	r2, [r3, #0]
 800ac24:	4b1f      	ldr	r3, [pc, #124]	; (800aca4 <GUI_Init+0xa8>)
 800ac26:	681a      	ldr	r2, [r3, #0]
 800ac28:	4b20      	ldr	r3, [pc, #128]	; (800acac <GUI_Init+0xb0>)
 800ac2a:	429a      	cmp	r2, r3
 800ac2c:	d000      	beq.n	800ac30 <GUI_Init+0x34>
 800ac2e:	e7fe      	b.n	800ac2e <GUI_Init+0x32>
 800ac30:	f7ff ffcc 	bl	800abcc <GUI__Config>
 800ac34:	4b1e      	ldr	r3, [pc, #120]	; (800acb0 <GUI_Init+0xb4>)
 800ac36:	222e      	movs	r2, #46	; 0x2e
 800ac38:	701a      	strb	r2, [r3, #0]
 800ac3a:	f7f5 fc6b 	bl	8000514 <GUI_X_Init>
 800ac3e:	481d      	ldr	r0, [pc, #116]	; (800acb4 <GUI_Init+0xb8>)
 800ac40:	f7ff ff26 	bl	800aa90 <_InitContext>
 800ac44:	f7fe f9e4 	bl	8009010 <emWin_LCD_Init>
 800ac48:	6078      	str	r0, [r7, #4]
 800ac4a:	f7fd fec5 	bl	80089d8 <LCD_GetXSizeDisplay>
 800ac4e:	4603      	mov	r3, r0
 800ac50:	2b00      	cmp	r3, #0
 800ac52:	d004      	beq.n	800ac5e <GUI_Init+0x62>
 800ac54:	f7fd fec6 	bl	80089e4 <LCD_GetYSizeDisplay>
 800ac58:	4603      	mov	r3, r0
 800ac5a:	2b00      	cmp	r3, #0
 800ac5c:	d109      	bne.n	800ac72 <GUI_Init+0x76>
 800ac5e:	f7fd fea7 	bl	80089b0 <LCD_GetXSizeMax>
 800ac62:	4604      	mov	r4, r0
 800ac64:	f7fd fea7 	bl	80089b6 <LCD_GetYSizeMax>
 800ac68:	4603      	mov	r3, r0
 800ac6a:	4620      	mov	r0, r4
 800ac6c:	4619      	mov	r1, r3
 800ac6e:	f7fd fea9 	bl	80089c4 <LCD_SetDisplaySize>
 800ac72:	2000      	movs	r0, #0
 800ac74:	2100      	movs	r1, #0
 800ac76:	f000 f9b1 	bl	800afdc <GUI_SetOrg>
 800ac7a:	f7fb fc63 	bl	8006544 <WM_Init>
 800ac7e:	4b0e      	ldr	r3, [pc, #56]	; (800acb8 <GUI_Init+0xbc>)
 800ac80:	681b      	ldr	r3, [r3, #0]
 800ac82:	2b00      	cmp	r3, #0
 800ac84:	d002      	beq.n	800ac8c <GUI_Init+0x90>
 800ac86:	4b0c      	ldr	r3, [pc, #48]	; (800acb8 <GUI_Init+0xbc>)
 800ac88:	681b      	ldr	r3, [r3, #0]
 800ac8a:	4798      	blx	r3
 800ac8c:	4b0b      	ldr	r3, [pc, #44]	; (800acbc <GUI_Init+0xc0>)
 800ac8e:	2201      	movs	r2, #1
 800ac90:	701a      	strb	r2, [r3, #0]
 800ac92:	687b      	ldr	r3, [r7, #4]
 800ac94:	4618      	mov	r0, r3
 800ac96:	370c      	adds	r7, #12
 800ac98:	46bd      	mov	sp, r7
 800ac9a:	bd90      	pop	{r4, r7, pc}
 800ac9c:	e0002000 	.word	0xe0002000
 800aca0:	40023008 	.word	0x40023008
 800aca4:	40023000 	.word	0x40023000
 800aca8:	f407a5c2 	.word	0xf407a5c2
 800acac:	b5e8b5cd 	.word	0xb5e8b5cd
 800acb0:	20002cd8 	.word	0x20002cd8
 800acb4:	20002bb4 	.word	0x20002bb4
 800acb8:	20002cfc 	.word	0x20002cfc
 800acbc:	20002d04 	.word	0x20002d04

0800acc0 <GUI__GetFontSizeY>:
 800acc0:	4b03      	ldr	r3, [pc, #12]	; (800acd0 <GUI__GetFontSizeY+0x10>)
 800acc2:	681b      	ldr	r3, [r3, #0]
 800acc4:	69db      	ldr	r3, [r3, #28]
 800acc6:	7e18      	ldrb	r0, [r3, #24]
 800acc8:	7edb      	ldrb	r3, [r3, #27]
 800acca:	4358      	muls	r0, r3
 800accc:	4770      	bx	lr
 800acce:	bf00      	nop
 800acd0:	200000b8 	.word	0x200000b8

0800acd4 <GUI_Long2Len>:
 800acd4:	b510      	push	{r4, lr}
 800acd6:	ea80 71e0 	eor.w	r1, r0, r0, asr #31
 800acda:	eba1 71e0 	sub.w	r1, r1, r0, asr #31
 800acde:	2200      	movs	r2, #0
 800ace0:	1c53      	adds	r3, r2, #1
 800ace2:	2b0a      	cmp	r3, #10
 800ace4:	d006      	beq.n	800acf4 <GUI_Long2Len+0x20>
 800ace6:	4c06      	ldr	r4, [pc, #24]	; (800ad00 <GUI_Long2Len+0x2c>)
 800ace8:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 800acec:	42a1      	cmp	r1, r4
 800acee:	d301      	bcc.n	800acf4 <GUI_Long2Len+0x20>
 800acf0:	461a      	mov	r2, r3
 800acf2:	e7f5      	b.n	800ace0 <GUI_Long2Len+0xc>
 800acf4:	2800      	cmp	r0, #0
 800acf6:	bfb8      	it	lt
 800acf8:	1c93      	addlt	r3, r2, #2
 800acfa:	4618      	mov	r0, r3
 800acfc:	bd10      	pop	{r4, pc}
 800acfe:	bf00      	nop
 800ad00:	08012434 	.word	0x08012434

0800ad04 <GUI_AddDecShift>:
 800ad04:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
 800ad08:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ad0a:	681c      	ldr	r4, [r3, #0]
 800ad0c:	d109      	bne.n	800ad22 <GUI_AddDecShift+0x1e>
 800ad0e:	1c60      	adds	r0, r4, #1
 800ad10:	6018      	str	r0, [r3, #0]
 800ad12:	3901      	subs	r1, #1
 800ad14:	202d      	movs	r0, #45	; 0x2d
 800ad16:	7020      	strb	r0, [r4, #0]
 800ad18:	b2c9      	uxtb	r1, r1
 800ad1a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800ad1e:	2601      	movs	r6, #1
 800ad20:	e00c      	b.n	800ad3c <GUI_AddDecShift+0x38>
 800ad22:	2800      	cmp	r0, #0
 800ad24:	da06      	bge.n	800ad34 <GUI_AddDecShift+0x30>
 800ad26:	1c65      	adds	r5, r4, #1
 800ad28:	601d      	str	r5, [r3, #0]
 800ad2a:	252d      	movs	r5, #45	; 0x2d
 800ad2c:	7025      	strb	r5, [r4, #0]
 800ad2e:	4240      	negs	r0, r0
 800ad30:	2401      	movs	r4, #1
 800ad32:	e000      	b.n	800ad36 <GUI_AddDecShift+0x32>
 800ad34:	2400      	movs	r4, #0
 800ad36:	1b09      	subs	r1, r1, r4
 800ad38:	b2c9      	uxtb	r1, r1
 800ad3a:	2600      	movs	r6, #0
 800ad3c:	b30a      	cbz	r2, 800ad82 <GUI_AddDecShift+0x7e>
 800ad3e:	3901      	subs	r1, #1
 800ad40:	b2c9      	uxtb	r1, r1
 800ad42:	e01e      	b.n	800ad82 <GUI_AddDecShift+0x7e>
 800ad44:	1e4d      	subs	r5, r1, #1
 800ad46:	4291      	cmp	r1, r2
 800ad48:	b2ed      	uxtb	r5, r5
 800ad4a:	d105      	bne.n	800ad58 <GUI_AddDecShift+0x54>
 800ad4c:	681c      	ldr	r4, [r3, #0]
 800ad4e:	1c67      	adds	r7, r4, #1
 800ad50:	601f      	str	r7, [r3, #0]
 800ad52:	4f11      	ldr	r7, [pc, #68]	; (800ad98 <GUI_AddDecShift+0x94>)
 800ad54:	783f      	ldrb	r7, [r7, #0]
 800ad56:	7027      	strb	r7, [r4, #0]
 800ad58:	4c10      	ldr	r4, [pc, #64]	; (800ad9c <GUI_AddDecShift+0x98>)
 800ad5a:	f854 7025 	ldr.w	r7, [r4, r5, lsl #2]
 800ad5e:	fb90 f4f7 	sdiv	r4, r0, r7
 800ad62:	b2e4      	uxtb	r4, r4
 800ad64:	2c0a      	cmp	r4, #10
 800ad66:	d80e      	bhi.n	800ad86 <GUI_AddDecShift+0x82>
 800ad68:	fb07 0014 	mls	r0, r7, r4, r0
 800ad6c:	b17d      	cbz	r5, 800ad8e <GUI_AddDecShift+0x8a>
 800ad6e:	2c0a      	cmp	r4, #10
 800ad70:	bf18      	it	ne
 800ad72:	4629      	movne	r1, r5
 800ad74:	681d      	ldr	r5, [r3, #0]
 800ad76:	bf08      	it	eq
 800ad78:	2401      	moveq	r4, #1
 800ad7a:	1c6f      	adds	r7, r5, #1
 800ad7c:	3430      	adds	r4, #48	; 0x30
 800ad7e:	601f      	str	r7, [r3, #0]
 800ad80:	702c      	strb	r4, [r5, #0]
 800ad82:	2900      	cmp	r1, #0
 800ad84:	d1de      	bne.n	800ad44 <GUI_AddDecShift+0x40>
 800ad86:	681b      	ldr	r3, [r3, #0]
 800ad88:	2200      	movs	r2, #0
 800ad8a:	701a      	strb	r2, [r3, #0]
 800ad8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ad8e:	2e00      	cmp	r6, #0
 800ad90:	d0ed      	beq.n	800ad6e <GUI_AddDecShift+0x6a>
 800ad92:	3401      	adds	r4, #1
 800ad94:	b2e4      	uxtb	r4, r4
 800ad96:	e7ea      	b.n	800ad6e <GUI_AddDecShift+0x6a>
 800ad98:	20002cd8 	.word	0x20002cd8
 800ad9c:	08012434 	.word	0x08012434

0800ada0 <GUI_CalcColorDist>:
 800ada0:	b2cb      	uxtb	r3, r1
 800ada2:	b2c2      	uxtb	r2, r0
 800ada4:	1ad2      	subs	r2, r2, r3
 800ada6:	b292      	uxth	r2, r2
 800ada8:	b293      	uxth	r3, r2
 800adaa:	b530      	push	{r4, r5, lr}
 800adac:	041c      	lsls	r4, r3, #16
 800adae:	bf48      	it	mi
 800adb0:	4253      	negmi	r3, r2
 800adb2:	f3c1 2507 	ubfx	r5, r1, #8, #8
 800adb6:	f3c0 2207 	ubfx	r2, r0, #8, #8
 800adba:	ebc5 0202 	rsb	r2, r5, r2
 800adbe:	bf48      	it	mi
 800adc0:	b29b      	uxthmi	r3, r3
 800adc2:	b292      	uxth	r2, r2
 800adc4:	0c09      	lsrs	r1, r1, #16
 800adc6:	fb13 f403 	smulbb	r4, r3, r3
 800adca:	ebc1 4110 	rsb	r1, r1, r0, lsr #16
 800adce:	b293      	uxth	r3, r2
 800add0:	041d      	lsls	r5, r3, #16
 800add2:	b289      	uxth	r1, r1
 800add4:	b288      	uxth	r0, r1
 800add6:	bf44      	itt	mi
 800add8:	4253      	negmi	r3, r2
 800adda:	b29b      	uxthmi	r3, r3
 800addc:	0402      	lsls	r2, r0, #16
 800adde:	bf48      	it	mi
 800ade0:	4248      	negmi	r0, r1
 800ade2:	fb13 4303 	smlabb	r3, r3, r3, r4
 800ade6:	bf48      	it	mi
 800ade8:	b280      	uxthmi	r0, r0
 800adea:	fb00 3000 	mla	r0, r0, r0, r3
 800adee:	bd30      	pop	{r4, r5, pc}

0800adf0 <GUI_GetClientRect>:
 800adf0:	b108      	cbz	r0, 800adf6 <GUI_GetClientRect+0x6>
 800adf2:	f7f9 be5b 	b.w	8004aac <WM_GetClientRect>
 800adf6:	4770      	bx	lr

0800adf8 <GUI_GetBkColor>:
 800adf8:	b508      	push	{r3, lr}
 800adfa:	f003 fe69 	bl	800ead0 <LCD_GetBkColorIndex>
 800adfe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ae02:	f7fe b969 	b.w	80090d8 <LCD_Index2Color>

0800ae06 <GUI_GetColor>:
 800ae06:	b508      	push	{r3, lr}
 800ae08:	f003 fe6a 	bl	800eae0 <LCD_GetColorIndex>
 800ae0c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ae10:	f7fe b962 	b.w	80090d8 <LCD_Index2Color>

0800ae14 <GUI_GetFontSizeY>:
 800ae14:	f7ff bf54 	b.w	800acc0 <GUI__GetFontSizeY>

0800ae18 <GUI_GetLineStyle>:
 800ae18:	4b01      	ldr	r3, [pc, #4]	; (800ae20 <GUI_GetLineStyle+0x8>)
 800ae1a:	681b      	ldr	r3, [r3, #0]
 800ae1c:	7e98      	ldrb	r0, [r3, #26]
 800ae1e:	4770      	bx	lr
 800ae20:	200000b8 	.word	0x200000b8

0800ae24 <GUI_GetOrg>:
 800ae24:	4b04      	ldr	r3, [pc, #16]	; (800ae38 <GUI_GetOrg+0x14>)
 800ae26:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ae2a:	6003      	str	r3, [r0, #0]
 800ae2c:	4b03      	ldr	r3, [pc, #12]	; (800ae3c <GUI_GetOrg+0x18>)
 800ae2e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ae32:	600b      	str	r3, [r1, #0]
 800ae34:	4770      	bx	lr
 800ae36:	bf00      	nop
 800ae38:	20002cf8 	.word	0x20002cf8
 800ae3c:	20002ce8 	.word	0x20002ce8

0800ae40 <GUI_GetYSizeOfFont>:
 800ae40:	7e02      	ldrb	r2, [r0, #24]
 800ae42:	7ec0      	ldrb	r0, [r0, #27]
 800ae44:	4350      	muls	r0, r2
 800ae46:	4770      	bx	lr

0800ae48 <GUI_MergeRect>:
 800ae48:	b510      	push	{r4, lr}
 800ae4a:	b338      	cbz	r0, 800ae9c <GUI_MergeRect+0x54>
 800ae4c:	b309      	cbz	r1, 800ae92 <GUI_MergeRect+0x4a>
 800ae4e:	b30a      	cbz	r2, 800ae94 <GUI_MergeRect+0x4c>
 800ae50:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ae54:	f9b2 3000 	ldrsh.w	r3, [r2]
 800ae58:	429c      	cmp	r4, r3
 800ae5a:	bfb8      	it	lt
 800ae5c:	4623      	movlt	r3, r4
 800ae5e:	8003      	strh	r3, [r0, #0]
 800ae60:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ae64:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800ae68:	429c      	cmp	r4, r3
 800ae6a:	bfb8      	it	lt
 800ae6c:	4623      	movlt	r3, r4
 800ae6e:	8043      	strh	r3, [r0, #2]
 800ae70:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 800ae74:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800ae78:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800ae7c:	429c      	cmp	r4, r3
 800ae7e:	bfa8      	it	ge
 800ae80:	4623      	movge	r3, r4
 800ae82:	8083      	strh	r3, [r0, #4]
 800ae84:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 800ae88:	4299      	cmp	r1, r3
 800ae8a:	bfa8      	it	ge
 800ae8c:	460b      	movge	r3, r1
 800ae8e:	80c3      	strh	r3, [r0, #6]
 800ae90:	bd10      	pop	{r4, pc}
 800ae92:	4611      	mov	r1, r2
 800ae94:	680b      	ldr	r3, [r1, #0]
 800ae96:	6003      	str	r3, [r0, #0]
 800ae98:	684b      	ldr	r3, [r1, #4]
 800ae9a:	6043      	str	r3, [r0, #4]
 800ae9c:	bd10      	pop	{r4, pc}

0800ae9e <GUI_MoveRect>:
 800ae9e:	b168      	cbz	r0, 800aebc <GUI_MoveRect+0x1e>
 800aea0:	8803      	ldrh	r3, [r0, #0]
 800aea2:	b289      	uxth	r1, r1
 800aea4:	440b      	add	r3, r1
 800aea6:	8003      	strh	r3, [r0, #0]
 800aea8:	8883      	ldrh	r3, [r0, #4]
 800aeaa:	4419      	add	r1, r3
 800aeac:	8843      	ldrh	r3, [r0, #2]
 800aeae:	8081      	strh	r1, [r0, #4]
 800aeb0:	b292      	uxth	r2, r2
 800aeb2:	4413      	add	r3, r2
 800aeb4:	8043      	strh	r3, [r0, #2]
 800aeb6:	88c3      	ldrh	r3, [r0, #6]
 800aeb8:	441a      	add	r2, r3
 800aeba:	80c2      	strh	r2, [r0, #6]
 800aebc:	4770      	bx	lr
	...

0800aec0 <GUI_Exec1>:
 800aec0:	4b0c      	ldr	r3, [pc, #48]	; (800aef4 <GUI_Exec1+0x34>)
 800aec2:	b510      	push	{r4, lr}
 800aec4:	681c      	ldr	r4, [r3, #0]
 800aec6:	b11c      	cbz	r4, 800aed0 <GUI_Exec1+0x10>
 800aec8:	47a0      	blx	r4
 800aeca:	1c04      	adds	r4, r0, #0
 800aecc:	bf18      	it	ne
 800aece:	2401      	movne	r4, #1
 800aed0:	f7fb fa92 	bl	80063f8 <WM_Exec>
 800aed4:	4b08      	ldr	r3, [pc, #32]	; (800aef8 <GUI_Exec1+0x38>)
 800aed6:	681b      	ldr	r3, [r3, #0]
 800aed8:	2800      	cmp	r0, #0
 800aeda:	bf18      	it	ne
 800aedc:	2401      	movne	r4, #1
 800aede:	b11b      	cbz	r3, 800aee8 <GUI_Exec1+0x28>
 800aee0:	4798      	blx	r3
 800aee2:	2800      	cmp	r0, #0
 800aee4:	bf18      	it	ne
 800aee6:	2401      	movne	r4, #1
 800aee8:	4b04      	ldr	r3, [pc, #16]	; (800aefc <GUI_Exec1+0x3c>)
 800aeea:	681b      	ldr	r3, [r3, #0]
 800aeec:	b103      	cbz	r3, 800aef0 <GUI_Exec1+0x30>
 800aeee:	4798      	blx	r3
 800aef0:	4620      	mov	r0, r4
 800aef2:	bd10      	pop	{r4, pc}
 800aef4:	20002cf4 	.word	0x20002cf4
 800aef8:	20002d20 	.word	0x20002d20
 800aefc:	20002d18 	.word	0x20002d18

0800af00 <GUI_Exec>:
 800af00:	b510      	push	{r4, lr}
 800af02:	2400      	movs	r4, #0
 800af04:	f7ff ffdc 	bl	800aec0 <GUI_Exec1>
 800af08:	b108      	cbz	r0, 800af0e <GUI_Exec+0xe>
 800af0a:	2401      	movs	r4, #1
 800af0c:	e7fa      	b.n	800af04 <GUI_Exec+0x4>
 800af0e:	4620      	mov	r0, r4
 800af10:	bd10      	pop	{r4, pc}
	...

0800af14 <GUI_GotoXY>:
 800af14:	4b02      	ldr	r3, [pc, #8]	; (800af20 <GUI_GotoXY+0xc>)
 800af16:	681b      	ldr	r3, [r3, #0]
 800af18:	8458      	strh	r0, [r3, #34]	; 0x22
 800af1a:	8499      	strh	r1, [r3, #36]	; 0x24
 800af1c:	2000      	movs	r0, #0
 800af1e:	4770      	bx	lr
 800af20:	200000b8 	.word	0x200000b8

0800af24 <GUI_SetPenSize>:
 800af24:	4b02      	ldr	r3, [pc, #8]	; (800af30 <GUI_SetPenSize+0xc>)
 800af26:	681b      	ldr	r3, [r3, #0]
 800af28:	7e1a      	ldrb	r2, [r3, #24]
 800af2a:	7618      	strb	r0, [r3, #24]
 800af2c:	4610      	mov	r0, r2
 800af2e:	4770      	bx	lr
 800af30:	200000b8 	.word	0x200000b8

0800af34 <GUI_RectsIntersect>:
 800af34:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800af38:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800af3c:	429a      	cmp	r2, r3
 800af3e:	dc14      	bgt.n	800af6a <GUI_RectsIntersect+0x36>
 800af40:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800af44:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800af48:	429a      	cmp	r2, r3
 800af4a:	dc0e      	bgt.n	800af6a <GUI_RectsIntersect+0x36>
 800af4c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800af50:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800af54:	429a      	cmp	r2, r3
 800af56:	dc08      	bgt.n	800af6a <GUI_RectsIntersect+0x36>
 800af58:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800af5c:	f9b1 2000 	ldrsh.w	r2, [r1]
 800af60:	429a      	cmp	r2, r3
 800af62:	bfcc      	ite	gt
 800af64:	2000      	movgt	r0, #0
 800af66:	2001      	movle	r0, #1
 800af68:	4770      	bx	lr
 800af6a:	2000      	movs	r0, #0
 800af6c:	4770      	bx	lr
	...

0800af70 <GUI_SaveContext_W>:
 800af70:	b508      	push	{r3, lr}
 800af72:	4b03      	ldr	r3, [pc, #12]	; (800af80 <GUI_SaveContext_W+0x10>)
 800af74:	2270      	movs	r2, #112	; 0x70
 800af76:	6819      	ldr	r1, [r3, #0]
 800af78:	f005 f890 	bl	801009c <memcpy>
 800af7c:	bd08      	pop	{r3, pc}
 800af7e:	bf00      	nop
 800af80:	200000b8 	.word	0x200000b8

0800af84 <GUI_RestoreContext>:
 800af84:	b508      	push	{r3, lr}
 800af86:	4b03      	ldr	r3, [pc, #12]	; (800af94 <GUI_RestoreContext+0x10>)
 800af88:	4601      	mov	r1, r0
 800af8a:	2270      	movs	r2, #112	; 0x70
 800af8c:	6818      	ldr	r0, [r3, #0]
 800af8e:	f005 f885 	bl	801009c <memcpy>
 800af92:	bd08      	pop	{r3, pc}
 800af94:	200000b8 	.word	0x200000b8

0800af98 <GUI_SelectLCD>:
 800af98:	b508      	push	{r3, lr}
 800af9a:	f003 fc55 	bl	800e848 <LCD_SelectLCD>
 800af9e:	f7fd fc1d 	bl	80087dc <LCD_UpdateColorIndices>
 800afa2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800afa6:	f7fb ba63 	b.w	8006470 <WM_Activate>

0800afaa <GUI_SetBkColor>:
 800afaa:	f7fe b8dd 	b.w	8009168 <LCD_SetBkColor>

0800afae <GUI_SetColor>:
 800afae:	f7fe b8e3 	b.w	8009178 <LCD_SetColor>

0800afb2 <GUI_SetDrawMode>:
 800afb2:	f7fd bd87 	b.w	8008ac4 <LCD_SetDrawMode>
	...

0800afb8 <GUI_SetFont>:
 800afb8:	4b03      	ldr	r3, [pc, #12]	; (800afc8 <GUI_SetFont+0x10>)
 800afba:	681b      	ldr	r3, [r3, #0]
 800afbc:	69d9      	ldr	r1, [r3, #28]
 800afbe:	b100      	cbz	r0, 800afc2 <GUI_SetFont+0xa>
 800afc0:	61d8      	str	r0, [r3, #28]
 800afc2:	4608      	mov	r0, r1
 800afc4:	4770      	bx	lr
 800afc6:	bf00      	nop
 800afc8:	200000b8 	.word	0x200000b8

0800afcc <GUI_SetLineStyle>:
 800afcc:	4b02      	ldr	r3, [pc, #8]	; (800afd8 <GUI_SetLineStyle+0xc>)
 800afce:	681b      	ldr	r3, [r3, #0]
 800afd0:	7e9a      	ldrb	r2, [r3, #26]
 800afd2:	7698      	strb	r0, [r3, #26]
 800afd4:	4610      	mov	r0, r2
 800afd6:	4770      	bx	lr
 800afd8:	200000b8 	.word	0x200000b8

0800afdc <GUI_SetOrg>:
 800afdc:	460a      	mov	r2, r1
 800afde:	4908      	ldr	r1, [pc, #32]	; (800b000 <GUI_SetOrg+0x24>)
 800afe0:	b510      	push	{r4, lr}
 800afe2:	8008      	strh	r0, [r1, #0]
 800afe4:	4907      	ldr	r1, [pc, #28]	; (800b004 <GUI_SetOrg+0x28>)
 800afe6:	800a      	strh	r2, [r1, #0]
 800afe8:	4907      	ldr	r1, [pc, #28]	; (800b008 <GUI_SetOrg+0x2c>)
 800afea:	6809      	ldr	r1, [r1, #0]
 800afec:	4603      	mov	r3, r0
 800afee:	7c48      	ldrb	r0, [r1, #17]
 800aff0:	4906      	ldr	r1, [pc, #24]	; (800b00c <GUI_SetOrg+0x30>)
 800aff2:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800aff6:	68c1      	ldr	r1, [r0, #12]
 800aff8:	6a0c      	ldr	r4, [r1, #32]
 800affa:	4619      	mov	r1, r3
 800affc:	47a0      	blx	r4
 800affe:	bd10      	pop	{r4, pc}
 800b000:	20002cf8 	.word	0x20002cf8
 800b004:	20002ce8 	.word	0x20002ce8
 800b008:	200000b8 	.word	0x200000b8
 800b00c:	20002d24 	.word	0x20002d24

0800b010 <GUI_SetTextAlign>:
 800b010:	4b03      	ldr	r3, [pc, #12]	; (800b020 <GUI_SetTextAlign+0x10>)
 800b012:	681b      	ldr	r3, [r3, #0]
 800b014:	f9b3 202c 	ldrsh.w	r2, [r3, #44]	; 0x2c
 800b018:	8598      	strh	r0, [r3, #44]	; 0x2c
 800b01a:	4610      	mov	r0, r2
 800b01c:	4770      	bx	lr
 800b01e:	bf00      	nop
 800b020:	200000b8 	.word	0x200000b8

0800b024 <GUI_SetTextMode>:
 800b024:	4b03      	ldr	r3, [pc, #12]	; (800b034 <GUI_SetTextMode+0x10>)
 800b026:	681b      	ldr	r3, [r3, #0]
 800b028:	f9b3 202a 	ldrsh.w	r2, [r3, #42]	; 0x2a
 800b02c:	8558      	strh	r0, [r3, #42]	; 0x2a
 800b02e:	4610      	mov	r0, r2
 800b030:	4770      	bx	lr
 800b032:	bf00      	nop
 800b034:	200000b8 	.word	0x200000b8

0800b038 <GL_SetDefault>:
 800b038:	b508      	push	{r3, lr}
 800b03a:	4b0e      	ldr	r3, [pc, #56]	; (800b074 <GL_SetDefault+0x3c>)
 800b03c:	6818      	ldr	r0, [r3, #0]
 800b03e:	f7fe f893 	bl	8009168 <LCD_SetBkColor>
 800b042:	4b0d      	ldr	r3, [pc, #52]	; (800b078 <GL_SetDefault+0x40>)
 800b044:	6818      	ldr	r0, [r3, #0]
 800b046:	f7fe f897 	bl	8009178 <LCD_SetColor>
 800b04a:	2001      	movs	r0, #1
 800b04c:	f7ff ff6a 	bl	800af24 <GUI_SetPenSize>
 800b050:	2000      	movs	r0, #0
 800b052:	f7ff ffdd 	bl	800b010 <GUI_SetTextAlign>
 800b056:	2000      	movs	r0, #0
 800b058:	f7ff ffe4 	bl	800b024 <GUI_SetTextMode>
 800b05c:	2000      	movs	r0, #0
 800b05e:	f7ff ffa8 	bl	800afb2 <GUI_SetDrawMode>
 800b062:	4b06      	ldr	r3, [pc, #24]	; (800b07c <GL_SetDefault+0x44>)
 800b064:	6818      	ldr	r0, [r3, #0]
 800b066:	f7ff ffa7 	bl	800afb8 <GUI_SetFont>
 800b06a:	2000      	movs	r0, #0
 800b06c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b070:	f7ff bfac 	b.w	800afcc <GUI_SetLineStyle>
 800b074:	20002bb0 	.word	0x20002bb0
 800b078:	200000c0 	.word	0x200000c0
 800b07c:	200000bc 	.word	0x200000bc

0800b080 <GL_FillCircle>:
 800b080:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b084:	f240 29c3 	movw	r9, #707	; 0x2c3
 800b088:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 800b140 <GL_FillCircle+0xc0>
 800b08c:	fb09 f902 	mul.w	r9, r9, r2
 800b090:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800b094:	fb99 f9f3 	sdiv	r9, r9, r3
 800b098:	f8d8 3000 	ldr.w	r3, [r8]
 800b09c:	f04f 0b02 	mov.w	fp, #2
 800b0a0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b0a2:	4606      	mov	r6, r0
 800b0a4:	fb92 fbfb 	sdiv	fp, r2, fp
 800b0a8:	1a80      	subs	r0, r0, r2
 800b0aa:	4614      	mov	r4, r2
 800b0ac:	fb02 bb02 	mla	fp, r2, r2, fp
 800b0b0:	681b      	ldr	r3, [r3, #0]
 800b0b2:	18b2      	adds	r2, r6, r2
 800b0b4:	460f      	mov	r7, r1
 800b0b6:	4798      	blx	r3
 800b0b8:	f109 0901 	add.w	r9, r9, #1
 800b0bc:	2501      	movs	r5, #1
 800b0be:	454d      	cmp	r5, r9
 800b0c0:	dc3a      	bgt.n	800b138 <GL_FillCircle+0xb8>
 800b0c2:	fb04 f304 	mul.w	r3, r4, r4
 800b0c6:	fb05 3305 	mla	r3, r5, r5, r3
 800b0ca:	455b      	cmp	r3, fp
 800b0cc:	dd1b      	ble.n	800b106 <GL_FillCircle+0x86>
 800b0ce:	454c      	cmp	r4, r9
 800b0d0:	dd18      	ble.n	800b104 <GL_FillCircle+0x84>
 800b0d2:	f8d8 2000 	ldr.w	r2, [r8]
 800b0d6:	1c73      	adds	r3, r6, #1
 800b0d8:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800b0da:	f106 3aff 	add.w	sl, r6, #4294967295
 800b0de:	1b5b      	subs	r3, r3, r5
 800b0e0:	44aa      	add	sl, r5
 800b0e2:	f8d2 c000 	ldr.w	ip, [r2]
 800b0e6:	9301      	str	r3, [sp, #4]
 800b0e8:	4618      	mov	r0, r3
 800b0ea:	1939      	adds	r1, r7, r4
 800b0ec:	4652      	mov	r2, sl
 800b0ee:	47e0      	blx	ip
 800b0f0:	f8d8 2000 	ldr.w	r2, [r8]
 800b0f4:	9b01      	ldr	r3, [sp, #4]
 800b0f6:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800b0f8:	4618      	mov	r0, r3
 800b0fa:	f8d2 c000 	ldr.w	ip, [r2]
 800b0fe:	1b39      	subs	r1, r7, r4
 800b100:	4652      	mov	r2, sl
 800b102:	47e0      	blx	ip
 800b104:	3c01      	subs	r4, #1
 800b106:	f8d8 2000 	ldr.w	r2, [r8]
 800b10a:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800b10c:	1b33      	subs	r3, r6, r4
 800b10e:	eb06 0a04 	add.w	sl, r6, r4
 800b112:	f8d2 c000 	ldr.w	ip, [r2]
 800b116:	9301      	str	r3, [sp, #4]
 800b118:	4618      	mov	r0, r3
 800b11a:	19e9      	adds	r1, r5, r7
 800b11c:	4652      	mov	r2, sl
 800b11e:	47e0      	blx	ip
 800b120:	f8d8 2000 	ldr.w	r2, [r8]
 800b124:	9b01      	ldr	r3, [sp, #4]
 800b126:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800b128:	1b79      	subs	r1, r7, r5
 800b12a:	f8d2 c000 	ldr.w	ip, [r2]
 800b12e:	4618      	mov	r0, r3
 800b130:	4652      	mov	r2, sl
 800b132:	47e0      	blx	ip
 800b134:	3501      	adds	r5, #1
 800b136:	e7c2      	b.n	800b0be <GL_FillCircle+0x3e>
 800b138:	b003      	add	sp, #12
 800b13a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b13e:	bf00      	nop
 800b140:	200000b8 	.word	0x200000b8

0800b144 <GUIPROP__FindChar>:
 800b144:	b138      	cbz	r0, 800b156 <GUIPROP__FindChar+0x12>
 800b146:	8803      	ldrh	r3, [r0, #0]
 800b148:	428b      	cmp	r3, r1
 800b14a:	d802      	bhi.n	800b152 <GUIPROP__FindChar+0xe>
 800b14c:	8843      	ldrh	r3, [r0, #2]
 800b14e:	428b      	cmp	r3, r1
 800b150:	d201      	bcs.n	800b156 <GUIPROP__FindChar+0x12>
 800b152:	6880      	ldr	r0, [r0, #8]
 800b154:	e7f6      	b.n	800b144 <GUIPROP__FindChar>
 800b156:	4770      	bx	lr

0800b158 <GUIPROP_DispChar>:
 800b158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b15c:	4c38      	ldr	r4, [pc, #224]	; (800b240 <GUIPROP_DispChar+0xe8>)
 800b15e:	6823      	ldr	r3, [r4, #0]
 800b160:	f9b3 902a 	ldrsh.w	r9, [r3, #42]	; 0x2a
 800b164:	69db      	ldr	r3, [r3, #28]
 800b166:	4605      	mov	r5, r0
 800b168:	b089      	sub	sp, #36	; 0x24
 800b16a:	69d8      	ldr	r0, [r3, #28]
 800b16c:	4629      	mov	r1, r5
 800b16e:	f7ff ffe9 	bl	800b144 <GUIPROP__FindChar>
 800b172:	2800      	cmp	r0, #0
 800b174:	d061      	beq.n	800b23a <GUIPROP_DispChar+0xe2>
 800b176:	f8b0 8000 	ldrh.w	r8, [r0]
 800b17a:	6847      	ldr	r7, [r0, #4]
 800b17c:	ebc8 0805 	rsb	r8, r8, r5
 800b180:	eb07 06c8 	add.w	r6, r7, r8, lsl #3
 800b184:	4648      	mov	r0, r9
 800b186:	f896 b002 	ldrb.w	fp, [r6, #2]
 800b18a:	f7fd fc9b 	bl	8008ac4 <LCD_SetDrawMode>
 800b18e:	6825      	ldr	r5, [r4, #0]
 800b190:	f817 2038 	ldrb.w	r2, [r7, r8, lsl #3]
 800b194:	f8d5 e01c 	ldr.w	lr, [r5, #28]
 800b198:	f9b5 1024 	ldrsh.w	r1, [r5, #36]	; 0x24
 800b19c:	f89e c01a 	ldrb.w	ip, [lr, #26]
 800b1a0:	f89e 3018 	ldrb.w	r3, [lr, #24]
 800b1a4:	9306      	str	r3, [sp, #24]
 800b1a6:	4682      	mov	sl, r0
 800b1a8:	f9b5 0022 	ldrsh.w	r0, [r5, #34]	; 0x22
 800b1ac:	f8cd c000 	str.w	ip, [sp]
 800b1b0:	f89e e01b 	ldrb.w	lr, [lr, #27]
 800b1b4:	f8cd e004 	str.w	lr, [sp, #4]
 800b1b8:	f04f 0e01 	mov.w	lr, #1
 800b1bc:	f8cd b00c 	str.w	fp, [sp, #12]
 800b1c0:	f8cd e008 	str.w	lr, [sp, #8]
 800b1c4:	6873      	ldr	r3, [r6, #4]
 800b1c6:	9304      	str	r3, [sp, #16]
 800b1c8:	6bad      	ldr	r5, [r5, #56]	; 0x38
 800b1ca:	9b06      	ldr	r3, [sp, #24]
 800b1cc:	9505      	str	r5, [sp, #20]
 800b1ce:	f7fd fe03 	bl	8008dd8 <LCD_DrawBitmap>
 800b1d2:	6823      	ldr	r3, [r4, #0]
 800b1d4:	69da      	ldr	r2, [r3, #28]
 800b1d6:	f892 b019 	ldrb.w	fp, [r2, #25]
 800b1da:	7e11      	ldrb	r1, [r2, #24]
 800b1dc:	458b      	cmp	fp, r1
 800b1de:	d920      	bls.n	800b222 <GUIPROP_DispChar+0xca>
 800b1e0:	f1b9 0f02 	cmp.w	r9, #2
 800b1e4:	7ed5      	ldrb	r5, [r2, #27]
 800b1e6:	d01c      	beq.n	800b222 <GUIPROP_DispChar+0xca>
 800b1e8:	9107      	str	r1, [sp, #28]
 800b1ea:	f7ff fe0c 	bl	800ae06 <GUI_GetColor>
 800b1ee:	4681      	mov	r9, r0
 800b1f0:	f7ff fe02 	bl	800adf8 <GUI_GetBkColor>
 800b1f4:	f7ff fedb 	bl	800afae <GUI_SetColor>
 800b1f8:	6824      	ldr	r4, [r4, #0]
 800b1fa:	f817 7038 	ldrb.w	r7, [r7, r8, lsl #3]
 800b1fe:	69e2      	ldr	r2, [r4, #28]
 800b200:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
 800b204:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800b208:	7ed2      	ldrb	r2, [r2, #27]
 800b20a:	9907      	ldr	r1, [sp, #28]
 800b20c:	fb07 0202 	mla	r2, r7, r2, r0
 800b210:	fb01 3105 	mla	r1, r1, r5, r3
 800b214:	fb0b 3305 	mla	r3, fp, r5, r3
 800b218:	f7fd fcd6 	bl	8008bc8 <LCD_FillRect>
 800b21c:	4648      	mov	r0, r9
 800b21e:	f7ff fec6 	bl	800afae <GUI_SetColor>
 800b222:	4650      	mov	r0, sl
 800b224:	f7fd fc4e 	bl	8008ac4 <LCD_SetDrawMode>
 800b228:	4b05      	ldr	r3, [pc, #20]	; (800b240 <GUIPROP_DispChar+0xe8>)
 800b22a:	681b      	ldr	r3, [r3, #0]
 800b22c:	69da      	ldr	r2, [r3, #28]
 800b22e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800b230:	7e90      	ldrb	r0, [r2, #26]
 800b232:	7872      	ldrb	r2, [r6, #1]
 800b234:	fb00 1202 	mla	r2, r0, r2, r1
 800b238:	845a      	strh	r2, [r3, #34]	; 0x22
 800b23a:	b009      	add	sp, #36	; 0x24
 800b23c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b240:	200000b8 	.word	0x200000b8

0800b244 <GUIPROP_GetCharDistX>:
 800b244:	4b0d      	ldr	r3, [pc, #52]	; (800b27c <GUIPROP_GetCharDistX+0x38>)
 800b246:	b570      	push	{r4, r5, r6, lr}
 800b248:	681b      	ldr	r3, [r3, #0]
 800b24a:	69dd      	ldr	r5, [r3, #28]
 800b24c:	4606      	mov	r6, r0
 800b24e:	460c      	mov	r4, r1
 800b250:	69e8      	ldr	r0, [r5, #28]
 800b252:	4631      	mov	r1, r6
 800b254:	f7ff ff76 	bl	800b144 <GUIPROP__FindChar>
 800b258:	b170      	cbz	r0, 800b278 <GUIPROP_GetCharDistX+0x34>
 800b25a:	8803      	ldrh	r3, [r0, #0]
 800b25c:	6842      	ldr	r2, [r0, #4]
 800b25e:	1af6      	subs	r6, r6, r3
 800b260:	eb02 03c6 	add.w	r3, r2, r6, lsl #3
 800b264:	7858      	ldrb	r0, [r3, #1]
 800b266:	7eab      	ldrb	r3, [r5, #26]
 800b268:	fb10 f003 	smulbb	r0, r0, r3
 800b26c:	b124      	cbz	r4, 800b278 <GUIPROP_GetCharDistX+0x34>
 800b26e:	f812 2036 	ldrb.w	r2, [r2, r6, lsl #3]
 800b272:	fb12 f303 	smulbb	r3, r2, r3
 800b276:	6023      	str	r3, [r4, #0]
 800b278:	bd70      	pop	{r4, r5, r6, pc}
 800b27a:	bf00      	nop
 800b27c:	200000b8 	.word	0x200000b8

0800b280 <GUIPROP_GetFontInfo>:
 800b280:	2301      	movs	r3, #1
 800b282:	800b      	strh	r3, [r1, #0]
 800b284:	4770      	bx	lr

0800b286 <GUIPROP_IsInFont>:
 800b286:	b508      	push	{r3, lr}
 800b288:	69c0      	ldr	r0, [r0, #28]
 800b28a:	f7ff ff5b 	bl	800b144 <GUIPROP__FindChar>
 800b28e:	3000      	adds	r0, #0
 800b290:	bf18      	it	ne
 800b292:	2001      	movne	r0, #1
 800b294:	bd08      	pop	{r3, pc}
	...

0800b298 <GUIMONO_DispChar>:
 800b298:	4b52      	ldr	r3, [pc, #328]	; (800b3e4 <GUIMONO_DispChar+0x14c>)
 800b29a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b29e:	681b      	ldr	r3, [r3, #0]
 800b2a0:	69d9      	ldr	r1, [r3, #28]
 800b2a2:	8c5f      	ldrh	r7, [r3, #34]	; 0x22
 800b2a4:	69cc      	ldr	r4, [r1, #28]
 800b2a6:	8c9d      	ldrh	r5, [r3, #36]	; 0x24
 800b2a8:	89a2      	ldrh	r2, [r4, #12]
 800b2aa:	4290      	cmp	r0, r2
 800b2ac:	b08b      	sub	sp, #44	; 0x2c
 800b2ae:	d308      	bcc.n	800b2c2 <GUIMONO_DispChar+0x2a>
 800b2b0:	89e6      	ldrh	r6, [r4, #14]
 800b2b2:	4286      	cmp	r6, r0
 800b2b4:	d305      	bcc.n	800b2c2 <GUIMONO_DispChar+0x2a>
 800b2b6:	f8d4 9000 	ldr.w	r9, [r4]
 800b2ba:	1a82      	subs	r2, r0, r2
 800b2bc:	f04f 3bff 	mov.w	fp, #4294967295
 800b2c0:	e015      	b.n	800b2ee <GUIMONO_DispChar+0x56>
 800b2c2:	68a2      	ldr	r2, [r4, #8]
 800b2c4:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800b2c8:	2a00      	cmp	r2, #0
 800b2ca:	f000 8081 	beq.w	800b3d0 <GUIMONO_DispChar+0x138>
 800b2ce:	8816      	ldrh	r6, [r2, #0]
 800b2d0:	42b0      	cmp	r0, r6
 800b2d2:	d37d      	bcc.n	800b3d0 <GUIMONO_DispChar+0x138>
 800b2d4:	f8b2 c002 	ldrh.w	ip, [r2, #2]
 800b2d8:	4584      	cmp	ip, r0
 800b2da:	d379      	bcc.n	800b3d0 <GUIMONO_DispChar+0x138>
 800b2dc:	6852      	ldr	r2, [r2, #4]
 800b2de:	1b80      	subs	r0, r0, r6
 800b2e0:	b280      	uxth	r0, r0
 800b2e2:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 800b2e6:	f932 2020 	ldrsh.w	r2, [r2, r0, lsl #2]
 800b2ea:	f9b6 b002 	ldrsh.w	fp, [r6, #2]
 800b2ee:	1c50      	adds	r0, r2, #1
 800b2f0:	d06e      	beq.n	800b3d0 <GUIMONO_DispChar+0x138>
 800b2f2:	f891 8018 	ldrb.w	r8, [r1, #24]
 800b2f6:	7ca1      	ldrb	r1, [r4, #18]
 800b2f8:	f8b3 a02a 	ldrh.w	sl, [r3, #42]	; 0x2a
 800b2fc:	7c26      	ldrb	r6, [r4, #16]
 800b2fe:	9206      	str	r2, [sp, #24]
 800b300:	fb18 f101 	smulbb	r1, r8, r1
 800b304:	9107      	str	r1, [sp, #28]
 800b306:	fa0f f18a 	sxth.w	r1, sl
 800b30a:	4608      	mov	r0, r1
 800b30c:	9108      	str	r1, [sp, #32]
 800b30e:	f7fd fbd9 	bl	8008ac4 <LCD_SetDrawMode>
 800b312:	4934      	ldr	r1, [pc, #208]	; (800b3e4 <GUIMONO_DispChar+0x14c>)
 800b314:	9009      	str	r0, [sp, #36]	; 0x24
 800b316:	680b      	ldr	r3, [r1, #0]
 800b318:	9a06      	ldr	r2, [sp, #24]
 800b31a:	69d9      	ldr	r1, [r3, #28]
 800b31c:	7e88      	ldrb	r0, [r1, #26]
 800b31e:	9000      	str	r0, [sp, #0]
 800b320:	7ec9      	ldrb	r1, [r1, #27]
 800b322:	9101      	str	r1, [sp, #4]
 800b324:	2101      	movs	r1, #1
 800b326:	9102      	str	r1, [sp, #8]
 800b328:	7ca1      	ldrb	r1, [r4, #18]
 800b32a:	9103      	str	r1, [sp, #12]
 800b32c:	9907      	ldr	r1, [sp, #28]
 800b32e:	fb01 9202 	mla	r2, r1, r2, r9
 800b332:	9204      	str	r2, [sp, #16]
 800b334:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b336:	9305      	str	r3, [sp, #20]
 800b338:	b23f      	sxth	r7, r7
 800b33a:	b22d      	sxth	r5, r5
 800b33c:	4638      	mov	r0, r7
 800b33e:	4629      	mov	r1, r5
 800b340:	4632      	mov	r2, r6
 800b342:	4643      	mov	r3, r8
 800b344:	f7fd fd48 	bl	8008dd8 <LCD_DrawBitmap>
 800b348:	f1bb 3fff 	cmp.w	fp, #4294967295
 800b34c:	d01b      	beq.n	800b386 <GUIMONO_DispChar+0xee>
 800b34e:	f04a 0002 	orr.w	r0, sl, #2
 800b352:	b200      	sxth	r0, r0
 800b354:	f7fd fbb6 	bl	8008ac4 <LCD_SetDrawMode>
 800b358:	4a22      	ldr	r2, [pc, #136]	; (800b3e4 <GUIMONO_DispChar+0x14c>)
 800b35a:	6813      	ldr	r3, [r2, #0]
 800b35c:	69da      	ldr	r2, [r3, #28]
 800b35e:	7e91      	ldrb	r1, [r2, #26]
 800b360:	9100      	str	r1, [sp, #0]
 800b362:	7ed2      	ldrb	r2, [r2, #27]
 800b364:	9201      	str	r2, [sp, #4]
 800b366:	2101      	movs	r1, #1
 800b368:	9102      	str	r1, [sp, #8]
 800b36a:	9907      	ldr	r1, [sp, #28]
 800b36c:	7ca2      	ldrb	r2, [r4, #18]
 800b36e:	9203      	str	r2, [sp, #12]
 800b370:	fb01 920b 	mla	r2, r1, fp, r9
 800b374:	9204      	str	r2, [sp, #16]
 800b376:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b378:	9305      	str	r3, [sp, #20]
 800b37a:	4638      	mov	r0, r7
 800b37c:	4629      	mov	r1, r5
 800b37e:	4632      	mov	r2, r6
 800b380:	4643      	mov	r3, r8
 800b382:	f7fd fd29 	bl	8008dd8 <LCD_DrawBitmap>
 800b386:	f8df 805c 	ldr.w	r8, [pc, #92]	; 800b3e4 <GUIMONO_DispChar+0x14c>
 800b38a:	f8d8 3000 	ldr.w	r3, [r8]
 800b38e:	69db      	ldr	r3, [r3, #28]
 800b390:	7e5a      	ldrb	r2, [r3, #25]
 800b392:	7e1b      	ldrb	r3, [r3, #24]
 800b394:	429a      	cmp	r2, r3
 800b396:	d917      	bls.n	800b3c8 <GUIMONO_DispChar+0x130>
 800b398:	9a08      	ldr	r2, [sp, #32]
 800b39a:	2a02      	cmp	r2, #2
 800b39c:	d014      	beq.n	800b3c8 <GUIMONO_DispChar+0x130>
 800b39e:	f08a 0004 	eor.w	r0, sl, #4
 800b3a2:	b200      	sxth	r0, r0
 800b3a4:	f7fd fb8e 	bl	8008ac4 <LCD_SetDrawMode>
 800b3a8:	f8d8 3000 	ldr.w	r3, [r8]
 800b3ac:	69db      	ldr	r3, [r3, #28]
 800b3ae:	f893 e018 	ldrb.w	lr, [r3, #24]
 800b3b2:	7ed9      	ldrb	r1, [r3, #27]
 800b3b4:	7e9a      	ldrb	r2, [r3, #26]
 800b3b6:	7e5b      	ldrb	r3, [r3, #25]
 800b3b8:	4638      	mov	r0, r7
 800b3ba:	fb0e 5101 	mla	r1, lr, r1, r5
 800b3be:	fb06 7202 	mla	r2, r6, r2, r7
 800b3c2:	442b      	add	r3, r5
 800b3c4:	f7fd fc00 	bl	8008bc8 <LCD_FillRect>
 800b3c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b3ca:	b2d8      	uxtb	r0, r3
 800b3cc:	f7fd fb7a 	bl	8008ac4 <LCD_SetDrawMode>
 800b3d0:	4b04      	ldr	r3, [pc, #16]	; (800b3e4 <GUIMONO_DispChar+0x14c>)
 800b3d2:	7c61      	ldrb	r1, [r4, #17]
 800b3d4:	681b      	ldr	r3, [r3, #0]
 800b3d6:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 800b3d8:	440a      	add	r2, r1
 800b3da:	845a      	strh	r2, [r3, #34]	; 0x22
 800b3dc:	b00b      	add	sp, #44	; 0x2c
 800b3de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b3e2:	bf00      	nop
 800b3e4:	200000b8 	.word	0x200000b8

0800b3e8 <GUIMONO_GetCharDistX>:
 800b3e8:	4b04      	ldr	r3, [pc, #16]	; (800b3fc <GUIMONO_GetCharDistX+0x14>)
 800b3ea:	681b      	ldr	r3, [r3, #0]
 800b3ec:	69db      	ldr	r3, [r3, #28]
 800b3ee:	69db      	ldr	r3, [r3, #28]
 800b3f0:	b109      	cbz	r1, 800b3f6 <GUIMONO_GetCharDistX+0xe>
 800b3f2:	7c1a      	ldrb	r2, [r3, #16]
 800b3f4:	600a      	str	r2, [r1, #0]
 800b3f6:	7c58      	ldrb	r0, [r3, #17]
 800b3f8:	4770      	bx	lr
 800b3fa:	bf00      	nop
 800b3fc:	200000b8 	.word	0x200000b8

0800b400 <GUIMONO_GetFontInfo>:
 800b400:	2302      	movs	r3, #2
 800b402:	800b      	strh	r3, [r1, #0]
 800b404:	4770      	bx	lr

0800b406 <GUIMONO_IsInFont>:
 800b406:	69c3      	ldr	r3, [r0, #28]
 800b408:	899a      	ldrh	r2, [r3, #12]
 800b40a:	428a      	cmp	r2, r1
 800b40c:	d802      	bhi.n	800b414 <GUIMONO_IsInFont+0xe>
 800b40e:	89da      	ldrh	r2, [r3, #14]
 800b410:	428a      	cmp	r2, r1
 800b412:	d20f      	bcs.n	800b434 <GUIMONO_IsInFont+0x2e>
 800b414:	6898      	ldr	r0, [r3, #8]
 800b416:	b180      	cbz	r0, 800b43a <GUIMONO_IsInFont+0x34>
 800b418:	8803      	ldrh	r3, [r0, #0]
 800b41a:	4299      	cmp	r1, r3
 800b41c:	d30c      	bcc.n	800b438 <GUIMONO_IsInFont+0x32>
 800b41e:	8842      	ldrh	r2, [r0, #2]
 800b420:	428a      	cmp	r2, r1
 800b422:	d309      	bcc.n	800b438 <GUIMONO_IsInFont+0x32>
 800b424:	1ac9      	subs	r1, r1, r3
 800b426:	6842      	ldr	r2, [r0, #4]
 800b428:	f832 0021 	ldrh.w	r0, [r2, r1, lsl #2]
 800b42c:	43c0      	mvns	r0, r0
 800b42e:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 800b432:	4770      	bx	lr
 800b434:	2001      	movs	r0, #1
 800b436:	4770      	bx	lr
 800b438:	2000      	movs	r0, #0
 800b43a:	4770      	bx	lr

0800b43c <_Log2VisBuffered>:
 800b43c:	4770      	bx	lr
	...

0800b440 <_DispLine>:
 800b440:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b442:	4615      	mov	r5, r2
 800b444:	ab02      	add	r3, sp, #8
 800b446:	4a21      	ldr	r2, [pc, #132]	; (800b4cc <_DispLine+0x8c>)
 800b448:	f843 1d08 	str.w	r1, [r3, #-8]!
 800b44c:	9001      	str	r0, [sp, #4]
 800b44e:	6812      	ldr	r2, [r2, #0]
 800b450:	4c1f      	ldr	r4, [pc, #124]	; (800b4d0 <_DispLine+0x90>)
 800b452:	4669      	mov	r1, sp
 800b454:	4790      	blx	r2
 800b456:	6823      	ldr	r3, [r4, #0]
 800b458:	9001      	str	r0, [sp, #4]
 800b45a:	6958      	ldr	r0, [r3, #20]
 800b45c:	b938      	cbnz	r0, 800b46e <_DispLine+0x2e>
 800b45e:	2001      	movs	r0, #1
 800b460:	f7fe f838 	bl	80094d4 <GUI__ManageCache>
 800b464:	6822      	ldr	r2, [r4, #0]
 800b466:	69d3      	ldr	r3, [r2, #28]
 800b468:	695b      	ldr	r3, [r3, #20]
 800b46a:	b933      	cbnz	r3, 800b47a <_DispLine+0x3a>
 800b46c:	e023      	b.n	800b4b6 <_DispLine+0x76>
 800b46e:	4629      	mov	r1, r5
 800b470:	f7ff fd60 	bl	800af34 <GUI_RectsIntersect>
 800b474:	2800      	cmp	r0, #0
 800b476:	d1f2      	bne.n	800b45e <_DispLine+0x1e>
 800b478:	e025      	b.n	800b4c6 <_DispLine+0x86>
 800b47a:	4c16      	ldr	r4, [pc, #88]	; (800b4d4 <_DispLine+0x94>)
 800b47c:	689b      	ldr	r3, [r3, #8]
 800b47e:	6821      	ldr	r1, [r4, #0]
 800b480:	b141      	cbz	r1, 800b494 <_DispLine+0x54>
 800b482:	f9b2 5022 	ldrsh.w	r5, [r2, #34]	; 0x22
 800b486:	9801      	ldr	r0, [sp, #4]
 800b488:	9900      	ldr	r1, [sp, #0]
 800b48a:	4798      	blx	r3
 800b48c:	6823      	ldr	r3, [r4, #0]
 800b48e:	4628      	mov	r0, r5
 800b490:	4798      	blx	r3
 800b492:	e015      	b.n	800b4c0 <_DispLine+0x80>
 800b494:	9801      	ldr	r0, [sp, #4]
 800b496:	9900      	ldr	r1, [sp, #0]
 800b498:	4798      	blx	r3
 800b49a:	e011      	b.n	800b4c0 <_DispLine+0x80>
 800b49c:	a801      	add	r0, sp, #4
 800b49e:	f7fe f9e1 	bl	8009864 <GUI_UC__GetCharCodeInc>
 800b4a2:	6823      	ldr	r3, [r4, #0]
 800b4a4:	69db      	ldr	r3, [r3, #28]
 800b4a6:	681b      	ldr	r3, [r3, #0]
 800b4a8:	4605      	mov	r5, r0
 800b4aa:	4798      	blx	r3
 800b4ac:	4b0a      	ldr	r3, [pc, #40]	; (800b4d8 <_DispLine+0x98>)
 800b4ae:	681b      	ldr	r3, [r3, #0]
 800b4b0:	b10b      	cbz	r3, 800b4b6 <_DispLine+0x76>
 800b4b2:	4628      	mov	r0, r5
 800b4b4:	4798      	blx	r3
 800b4b6:	9b00      	ldr	r3, [sp, #0]
 800b4b8:	3b01      	subs	r3, #1
 800b4ba:	2b00      	cmp	r3, #0
 800b4bc:	9300      	str	r3, [sp, #0]
 800b4be:	daed      	bge.n	800b49c <_DispLine+0x5c>
 800b4c0:	2000      	movs	r0, #0
 800b4c2:	f7fe f807 	bl	80094d4 <GUI__ManageCache>
 800b4c6:	b003      	add	sp, #12
 800b4c8:	bd30      	pop	{r4, r5, pc}
 800b4ca:	bf00      	nop
 800b4cc:	200000c4 	.word	0x200000c4
 800b4d0:	200000b8 	.word	0x200000b8
 800b4d4:	20002cf0 	.word	0x20002cf0
 800b4d8:	20002d00 	.word	0x20002d00

0800b4dc <GUI__GetLineNumChars>:
 800b4dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b4de:	460d      	mov	r5, r1
 800b4e0:	9001      	str	r0, [sp, #4]
 800b4e2:	4604      	mov	r4, r0
 800b4e4:	b198      	cbz	r0, 800b50e <GUI__GetLineNumChars+0x32>
 800b4e6:	4b0b      	ldr	r3, [pc, #44]	; (800b514 <GUI__GetLineNumChars+0x38>)
 800b4e8:	681b      	ldr	r3, [r3, #0]
 800b4ea:	69db      	ldr	r3, [r3, #28]
 800b4ec:	695b      	ldr	r3, [r3, #20]
 800b4ee:	b10b      	cbz	r3, 800b4f4 <GUI__GetLineNumChars+0x18>
 800b4f0:	685b      	ldr	r3, [r3, #4]
 800b4f2:	b90b      	cbnz	r3, 800b4f8 <GUI__GetLineNumChars+0x1c>
 800b4f4:	2400      	movs	r4, #0
 800b4f6:	e008      	b.n	800b50a <GUI__GetLineNumChars+0x2e>
 800b4f8:	4798      	blx	r3
 800b4fa:	e009      	b.n	800b510 <GUI__GetLineNumChars+0x34>
 800b4fc:	a801      	add	r0, sp, #4
 800b4fe:	f7fe f9b1 	bl	8009864 <GUI_UC__GetCharCodeInc>
 800b502:	b120      	cbz	r0, 800b50e <GUI__GetLineNumChars+0x32>
 800b504:	280a      	cmp	r0, #10
 800b506:	d002      	beq.n	800b50e <GUI__GetLineNumChars+0x32>
 800b508:	3401      	adds	r4, #1
 800b50a:	42ac      	cmp	r4, r5
 800b50c:	dbf6      	blt.n	800b4fc <GUI__GetLineNumChars+0x20>
 800b50e:	4620      	mov	r0, r4
 800b510:	b003      	add	sp, #12
 800b512:	bd30      	pop	{r4, r5, pc}
 800b514:	200000b8 	.word	0x200000b8

0800b518 <GUI__GetOverlap>:
 800b518:	b513      	push	{r0, r1, r4, lr}
 800b51a:	a902      	add	r1, sp, #8
 800b51c:	2400      	movs	r4, #0
 800b51e:	f841 4d04 	str.w	r4, [r1, #-4]!
 800b522:	f000 f8b7 	bl	800b694 <GUI_GetCharDistXEx>
 800b526:	9b01      	ldr	r3, [sp, #4]
 800b528:	4283      	cmp	r3, r0
 800b52a:	bfcc      	ite	gt
 800b52c:	ebc0 0003 	rsbgt	r0, r0, r3
 800b530:	4620      	movle	r0, r4
 800b532:	b002      	add	sp, #8
 800b534:	bd10      	pop	{r4, pc}
	...

0800b538 <GUI__GetLineDistX>:
 800b538:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b53a:	4a15      	ldr	r2, [pc, #84]	; (800b590 <GUI__GetLineDistX+0x58>)
 800b53c:	9001      	str	r0, [sp, #4]
 800b53e:	ab02      	add	r3, sp, #8
 800b540:	6812      	ldr	r2, [r2, #0]
 800b542:	f843 1d08 	str.w	r1, [r3, #-8]!
 800b546:	4669      	mov	r1, sp
 800b548:	4790      	blx	r2
 800b54a:	9001      	str	r0, [sp, #4]
 800b54c:	b1f0      	cbz	r0, 800b58c <GUI__GetLineDistX+0x54>
 800b54e:	4b11      	ldr	r3, [pc, #68]	; (800b594 <GUI__GetLineDistX+0x5c>)
 800b550:	681b      	ldr	r3, [r3, #0]
 800b552:	69db      	ldr	r3, [r3, #28]
 800b554:	695b      	ldr	r3, [r3, #20]
 800b556:	b10b      	cbz	r3, 800b55c <GUI__GetLineDistX+0x24>
 800b558:	681b      	ldr	r3, [r3, #0]
 800b55a:	b913      	cbnz	r3, 800b562 <GUI__GetLineDistX+0x2a>
 800b55c:	2500      	movs	r5, #0
 800b55e:	462c      	mov	r4, r5
 800b560:	e002      	b.n	800b568 <GUI__GetLineDistX+0x30>
 800b562:	9900      	ldr	r1, [sp, #0]
 800b564:	4798      	blx	r3
 800b566:	e011      	b.n	800b58c <GUI__GetLineDistX+0x54>
 800b568:	9b00      	ldr	r3, [sp, #0]
 800b56a:	3b01      	subs	r3, #1
 800b56c:	2b00      	cmp	r3, #0
 800b56e:	9300      	str	r3, [sp, #0]
 800b570:	db07      	blt.n	800b582 <GUI__GetLineDistX+0x4a>
 800b572:	a801      	add	r0, sp, #4
 800b574:	f7fe f976 	bl	8009864 <GUI_UC__GetCharCodeInc>
 800b578:	4605      	mov	r5, r0
 800b57a:	f000 f881 	bl	800b680 <GUI_GetCharDistX>
 800b57e:	4404      	add	r4, r0
 800b580:	e7f2      	b.n	800b568 <GUI__GetLineDistX+0x30>
 800b582:	4628      	mov	r0, r5
 800b584:	f7ff ffc8 	bl	800b518 <GUI__GetOverlap>
 800b588:	4420      	add	r0, r4
 800b58a:	e7ff      	b.n	800b58c <GUI__GetLineDistX+0x54>
 800b58c:	b003      	add	sp, #12
 800b58e:	bd30      	pop	{r4, r5, pc}
 800b590:	200000c4 	.word	0x200000c4
 800b594:	200000b8 	.word	0x200000b8

0800b598 <GUI__DispLine>:
 800b598:	4b27      	ldr	r3, [pc, #156]	; (800b638 <GUI__DispLine+0xa0>)
 800b59a:	681b      	ldr	r3, [r3, #0]
 800b59c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b59e:	4605      	mov	r5, r0
 800b5a0:	460c      	mov	r4, r1
 800b5a2:	b163      	cbz	r3, 800b5be <GUI__DispLine+0x26>
 800b5a4:	2000      	movs	r0, #0
 800b5a6:	f7fa fdb3 	bl	8006110 <WM__InitIVRSearch>
 800b5aa:	2800      	cmp	r0, #0
 800b5ac:	d041      	beq.n	800b632 <GUI__DispLine+0x9a>
 800b5ae:	4628      	mov	r0, r5
 800b5b0:	4621      	mov	r1, r4
 800b5b2:	466a      	mov	r2, sp
 800b5b4:	f7ff ff44 	bl	800b440 <_DispLine>
 800b5b8:	f7fa fce8 	bl	8005f8c <WM__GetNextIVR>
 800b5bc:	e7f5      	b.n	800b5aa <GUI__DispLine+0x12>
 800b5be:	6810      	ldr	r0, [r2, #0]
 800b5c0:	6851      	ldr	r1, [r2, #4]
 800b5c2:	4e1e      	ldr	r6, [pc, #120]	; (800b63c <GUI__DispLine+0xa4>)
 800b5c4:	466b      	mov	r3, sp
 800b5c6:	c303      	stmia	r3!, {r0, r1}
 800b5c8:	6833      	ldr	r3, [r6, #0]
 800b5ca:	f8bd 1000 	ldrh.w	r1, [sp]
 800b5ce:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 800b5d2:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 800b5d6:	4411      	add	r1, r2
 800b5d8:	f8ad 1000 	strh.w	r1, [sp]
 800b5dc:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800b5e0:	4419      	add	r1, r3
 800b5e2:	f8ad 1002 	strh.w	r1, [sp, #2]
 800b5e6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 800b5ea:	440a      	add	r2, r1
 800b5ec:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b5f0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b5f4:	4668      	mov	r0, sp
 800b5f6:	4413      	add	r3, r2
 800b5f8:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b5fc:	f7fa fd88 	bl	8006110 <WM__InitIVRSearch>
 800b600:	6833      	ldr	r3, [r6, #0]
 800b602:	b940      	cbnz	r0, 800b616 <GUI__DispLine+0x7e>
 800b604:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800b606:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800b608:	1a8a      	subs	r2, r1, r2
 800b60a:	845a      	strh	r2, [r3, #34]	; 0x22
 800b60c:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800b60e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b610:	1a8a      	subs	r2, r1, r2
 800b612:	849a      	strh	r2, [r3, #36]	; 0x24
 800b614:	e00d      	b.n	800b632 <GUI__DispLine+0x9a>
 800b616:	f8bd 2000 	ldrh.w	r2, [sp]
 800b61a:	845a      	strh	r2, [r3, #34]	; 0x22
 800b61c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800b620:	849a      	strh	r2, [r3, #36]	; 0x24
 800b622:	4628      	mov	r0, r5
 800b624:	4621      	mov	r1, r4
 800b626:	466a      	mov	r2, sp
 800b628:	f7ff ff0a 	bl	800b440 <_DispLine>
 800b62c:	f7fa fcae 	bl	8005f8c <WM__GetNextIVR>
 800b630:	e7e6      	b.n	800b600 <GUI__DispLine+0x68>
 800b632:	b002      	add	sp, #8
 800b634:	bd70      	pop	{r4, r5, r6, pc}
 800b636:	bf00      	nop
 800b638:	20002cdc 	.word	0x20002cdc
 800b63c:	200000b8 	.word	0x200000b8

0800b640 <GUI_GetYAdjust>:
 800b640:	4b0a      	ldr	r3, [pc, #40]	; (800b66c <GUI_GetYAdjust+0x2c>)
 800b642:	681b      	ldr	r3, [r3, #0]
 800b644:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800b646:	f002 020c 	and.w	r2, r2, #12
 800b64a:	2a08      	cmp	r2, #8
 800b64c:	d007      	beq.n	800b65e <GUI_GetYAdjust+0x1e>
 800b64e:	2a0c      	cmp	r2, #12
 800b650:	d005      	beq.n	800b65e <GUI_GetYAdjust+0x1e>
 800b652:	2a04      	cmp	r2, #4
 800b654:	d107      	bne.n	800b666 <GUI_GetYAdjust+0x26>
 800b656:	69db      	ldr	r3, [r3, #28]
 800b658:	7e18      	ldrb	r0, [r3, #24]
 800b65a:	3801      	subs	r0, #1
 800b65c:	4770      	bx	lr
 800b65e:	69db      	ldr	r3, [r3, #28]
 800b660:	7e18      	ldrb	r0, [r3, #24]
 800b662:	0840      	lsrs	r0, r0, #1
 800b664:	4770      	bx	lr
 800b666:	2000      	movs	r0, #0
 800b668:	4770      	bx	lr
 800b66a:	bf00      	nop
 800b66c:	200000b8 	.word	0x200000b8

0800b670 <GUI_GetFontDistY>:
 800b670:	4b02      	ldr	r3, [pc, #8]	; (800b67c <GUI_GetFontDistY+0xc>)
 800b672:	681b      	ldr	r3, [r3, #0]
 800b674:	69db      	ldr	r3, [r3, #28]
 800b676:	7e58      	ldrb	r0, [r3, #25]
 800b678:	4770      	bx	lr
 800b67a:	bf00      	nop
 800b67c:	200000b8 	.word	0x200000b8

0800b680 <GUI_GetCharDistX>:
 800b680:	b508      	push	{r3, lr}
 800b682:	4b03      	ldr	r3, [pc, #12]	; (800b690 <GUI_GetCharDistX+0x10>)
 800b684:	681b      	ldr	r3, [r3, #0]
 800b686:	69db      	ldr	r3, [r3, #28]
 800b688:	2100      	movs	r1, #0
 800b68a:	685b      	ldr	r3, [r3, #4]
 800b68c:	4798      	blx	r3
 800b68e:	bd08      	pop	{r3, pc}
 800b690:	200000b8 	.word	0x200000b8

0800b694 <GUI_GetCharDistXEx>:
 800b694:	b508      	push	{r3, lr}
 800b696:	4b03      	ldr	r3, [pc, #12]	; (800b6a4 <GUI_GetCharDistXEx+0x10>)
 800b698:	681b      	ldr	r3, [r3, #0]
 800b69a:	69db      	ldr	r3, [r3, #28]
 800b69c:	685b      	ldr	r3, [r3, #4]
 800b69e:	4798      	blx	r3
 800b6a0:	bd08      	pop	{r3, pc}
 800b6a2:	bf00      	nop
 800b6a4:	200000b8 	.word	0x200000b8

0800b6a8 <_PushFreeBlock>:
 800b6a8:	4b07      	ldr	r3, [pc, #28]	; (800b6c8 <_PushFreeBlock+0x20>)
 800b6aa:	685a      	ldr	r2, [r3, #4]
 800b6ac:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800b6ae:	3201      	adds	r2, #1
 800b6b0:	b510      	push	{r4, lr}
 800b6b2:	605a      	str	r2, [r3, #4]
 800b6b4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b6b6:	eb02 04c0 	add.w	r4, r2, r0, lsl #3
 800b6ba:	6061      	str	r1, [r4, #4]
 800b6bc:	2100      	movs	r1, #0
 800b6be:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 800b6c2:	6258      	str	r0, [r3, #36]	; 0x24
 800b6c4:	bd10      	pop	{r4, pc}
 800b6c6:	bf00      	nop
 800b6c8:	20002d34 	.word	0x20002d34

0800b6cc <_RemoveFreeBlock>:
 800b6cc:	b510      	push	{r4, lr}
 800b6ce:	6842      	ldr	r2, [r0, #4]
 800b6d0:	230f      	movs	r3, #15
 800b6d2:	490d      	ldr	r1, [pc, #52]	; (800b708 <_RemoveFreeBlock+0x3c>)
 800b6d4:	eb01 04c3 	add.w	r4, r1, r3, lsl #3
 800b6d8:	6c24      	ldr	r4, [r4, #64]	; 0x40
 800b6da:	42a2      	cmp	r2, r4
 800b6dc:	d203      	bcs.n	800b6e6 <_RemoveFreeBlock+0x1a>
 800b6de:	f113 33ff 	adds.w	r3, r3, #4294967295
 800b6e2:	d2f6      	bcs.n	800b6d2 <_RemoveFreeBlock+0x6>
 800b6e4:	bd10      	pop	{r4, pc}
 800b6e6:	2b0f      	cmp	r3, #15
 800b6e8:	d80c      	bhi.n	800b704 <_RemoveFreeBlock+0x38>
 800b6ea:	680c      	ldr	r4, [r1, #0]
 800b6ec:	1aa2      	subs	r2, r4, r2
 800b6ee:	600a      	str	r2, [r1, #0]
 800b6f0:	6882      	ldr	r2, [r0, #8]
 800b6f2:	68c0      	ldr	r0, [r0, #12]
 800b6f4:	b102      	cbz	r2, 800b6f8 <_RemoveFreeBlock+0x2c>
 800b6f6:	6050      	str	r0, [r2, #4]
 800b6f8:	b108      	cbz	r0, 800b6fe <_RemoveFreeBlock+0x32>
 800b6fa:	6002      	str	r2, [r0, #0]
 800b6fc:	bd10      	pop	{r4, pc}
 800b6fe:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800b702:	645a      	str	r2, [r3, #68]	; 0x44
 800b704:	bd10      	pop	{r4, pc}
 800b706:	bf00      	nop
 800b708:	20002d34 	.word	0x20002d34

0800b70c <_AddFreeMemory>:
 800b70c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b70e:	4e26      	ldr	r6, [pc, #152]	; (800b7a8 <_AddFreeMemory+0x9c>)
 800b710:	68f3      	ldr	r3, [r6, #12]
 800b712:	1e5a      	subs	r2, r3, #1
 800b714:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800b716:	4605      	mov	r5, r0
 800b718:	4413      	add	r3, r2
 800b71a:	1808      	adds	r0, r1, r0
 800b71c:	4298      	cmp	r0, r3
 800b71e:	460c      	mov	r4, r1
 800b720:	d805      	bhi.n	800b72e <_AddFreeMemory+0x22>
 800b722:	594b      	ldr	r3, [r1, r5]
 800b724:	b91b      	cbnz	r3, 800b72e <_AddFreeMemory+0x22>
 800b726:	6843      	ldr	r3, [r0, #4]
 800b728:	441d      	add	r5, r3
 800b72a:	f7ff ffcf 	bl	800b6cc <_RemoveFreeBlock>
 800b72e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800b730:	429c      	cmp	r4, r3
 800b732:	d90a      	bls.n	800b74a <_AddFreeMemory+0x3e>
 800b734:	f854 7c04 	ldr.w	r7, [r4, #-4]
 800b738:	1be7      	subs	r7, r4, r7
 800b73a:	683b      	ldr	r3, [r7, #0]
 800b73c:	b92b      	cbnz	r3, 800b74a <_AddFreeMemory+0x3e>
 800b73e:	687b      	ldr	r3, [r7, #4]
 800b740:	4638      	mov	r0, r7
 800b742:	441d      	add	r5, r3
 800b744:	f7ff ffc2 	bl	800b6cc <_RemoveFreeBlock>
 800b748:	463c      	mov	r4, r7
 800b74a:	230f      	movs	r3, #15
 800b74c:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800b750:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800b752:	4295      	cmp	r5, r2
 800b754:	d203      	bcs.n	800b75e <_AddFreeMemory+0x52>
 800b756:	f113 33ff 	adds.w	r3, r3, #4294967295
 800b75a:	d2f7      	bcs.n	800b74c <_AddFreeMemory+0x40>
 800b75c:	e022      	b.n	800b7a4 <_AddFreeMemory+0x98>
 800b75e:	2b0f      	cmp	r3, #15
 800b760:	d820      	bhi.n	800b7a4 <_AddFreeMemory+0x98>
 800b762:	3308      	adds	r3, #8
 800b764:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800b768:	1961      	adds	r1, r4, r5
 800b76a:	6852      	ldr	r2, [r2, #4]
 800b76c:	60a2      	str	r2, [r4, #8]
 800b76e:	2000      	movs	r0, #0
 800b770:	e884 0021 	stmia.w	r4, {r0, r5}
 800b774:	6124      	str	r4, [r4, #16]
 800b776:	f841 5c04 	str.w	r5, [r1, #-4]
 800b77a:	f104 0108 	add.w	r1, r4, #8
 800b77e:	b102      	cbz	r2, 800b782 <_AddFreeMemory+0x76>
 800b780:	6051      	str	r1, [r2, #4]
 800b782:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 800b786:	60e0      	str	r0, [r4, #12]
 800b788:	6059      	str	r1, [r3, #4]
 800b78a:	6833      	ldr	r3, [r6, #0]
 800b78c:	f896 1029 	ldrb.w	r1, [r6, #41]	; 0x29
 800b790:	4a05      	ldr	r2, [pc, #20]	; (800b7a8 <_AddFreeMemory+0x9c>)
 800b792:	442b      	add	r3, r5
 800b794:	6033      	str	r3, [r6, #0]
 800b796:	b929      	cbnz	r1, 800b7a4 <_AddFreeMemory+0x98>
 800b798:	68d1      	ldr	r1, [r2, #12]
 800b79a:	1acb      	subs	r3, r1, r3
 800b79c:	6891      	ldr	r1, [r2, #8]
 800b79e:	4299      	cmp	r1, r3
 800b7a0:	bf38      	it	cc
 800b7a2:	6093      	strcc	r3, [r2, #8]
 800b7a4:	4628      	mov	r0, r5
 800b7a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b7a8:	20002d34 	.word	0x20002d34

0800b7ac <_RemoveHoles>:
 800b7ac:	4b25      	ldr	r3, [pc, #148]	; (800b844 <_RemoveHoles+0x98>)
 800b7ae:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b7b2:	68da      	ldr	r2, [r3, #12]
 800b7b4:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800b7b6:	3a01      	subs	r2, #1
 800b7b8:	4682      	mov	sl, r0
 800b7ba:	eb02 0904 	add.w	r9, r2, r4
 800b7be:	469b      	mov	fp, r3
 800b7c0:	e894 0028 	ldmia.w	r4, {r3, r5}
 800b7c4:	2b00      	cmp	r3, #0
 800b7c6:	d133      	bne.n	800b830 <_RemoveHoles+0x84>
 800b7c8:	eb04 0805 	add.w	r8, r4, r5
 800b7cc:	45c8      	cmp	r8, r9
 800b7ce:	d22f      	bcs.n	800b830 <_RemoveHoles+0x84>
 800b7d0:	f854 c005 	ldr.w	ip, [r4, r5]
 800b7d4:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800b7d8:	f1bc 0f00 	cmp.w	ip, #0
 800b7dc:	d028      	beq.n	800b830 <_RemoveHoles+0x84>
 800b7de:	f8db 3034 	ldr.w	r3, [fp, #52]	; 0x34
 800b7e2:	4f18      	ldr	r7, [pc, #96]	; (800b844 <_RemoveHoles+0x98>)
 800b7e4:	f813 303c 	ldrb.w	r3, [r3, ip, lsl #3]
 800b7e8:	2b01      	cmp	r3, #1
 800b7ea:	d121      	bne.n	800b830 <_RemoveHoles+0x84>
 800b7ec:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b7ee:	4620      	mov	r0, r4
 800b7f0:	e88d 1008 	stmia.w	sp, {r3, ip}
 800b7f4:	f7ff ff6a 	bl	800b6cc <_RemoveFreeBlock>
 800b7f8:	f8d8 1000 	ldr.w	r1, [r8]
 800b7fc:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b7fe:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 800b802:	4620      	mov	r0, r4
 800b804:	6054      	str	r4, [r2, #4]
 800b806:	4641      	mov	r1, r8
 800b808:	4632      	mov	r2, r6
 800b80a:	f004 fc55 	bl	80100b8 <memmove>
 800b80e:	e89d 1008 	ldmia.w	sp, {r3, ip}
 800b812:	459c      	cmp	ip, r3
 800b814:	d102      	bne.n	800b81c <_RemoveHoles+0x70>
 800b816:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b818:	1b5b      	subs	r3, r3, r5
 800b81a:	637b      	str	r3, [r7, #52]	; 0x34
 800b81c:	4628      	mov	r0, r5
 800b81e:	19a1      	adds	r1, r4, r6
 800b820:	f7ff ff74 	bl	800b70c <_AddFreeMemory>
 800b824:	f1ba 0f00 	cmp.w	sl, #0
 800b828:	d001      	beq.n	800b82e <_RemoveHoles+0x82>
 800b82a:	4582      	cmp	sl, r0
 800b82c:	d905      	bls.n	800b83a <_RemoveHoles+0x8e>
 800b82e:	4635      	mov	r5, r6
 800b830:	442c      	add	r4, r5
 800b832:	454c      	cmp	r4, r9
 800b834:	d3c4      	bcc.n	800b7c0 <_RemoveHoles+0x14>
 800b836:	2001      	movs	r0, #1
 800b838:	e000      	b.n	800b83c <_RemoveHoles+0x90>
 800b83a:	2000      	movs	r0, #0
 800b83c:	b003      	add	sp, #12
 800b83e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b842:	bf00      	nop
 800b844:	20002d34 	.word	0x20002d34

0800b848 <GUI_ALLOC_FreeFixedBlock>:
 800b848:	b128      	cbz	r0, 800b856 <GUI_ALLOC_FreeFixedBlock+0xe>
 800b84a:	4a03      	ldr	r2, [pc, #12]	; (800b858 <GUI_ALLOC_FreeFixedBlock+0x10>)
 800b84c:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 800b84e:	6003      	str	r3, [r0, #0]
 800b850:	b103      	cbz	r3, 800b854 <GUI_ALLOC_FreeFixedBlock+0xc>
 800b852:	6058      	str	r0, [r3, #4]
 800b854:	63d0      	str	r0, [r2, #60]	; 0x3c
 800b856:	4770      	bx	lr
 800b858:	20002d34 	.word	0x20002d34

0800b85c <GUI_ALLOC_h2p>:
 800b85c:	4b03      	ldr	r3, [pc, #12]	; (800b86c <GUI_ALLOC_h2p+0x10>)
 800b85e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b860:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800b864:	6840      	ldr	r0, [r0, #4]
 800b866:	3008      	adds	r0, #8
 800b868:	4770      	bx	lr
 800b86a:	bf00      	nop
 800b86c:	20002d34 	.word	0x20002d34

0800b870 <GUI_ALLOC_LockH>:
 800b870:	4b05      	ldr	r3, [pc, #20]	; (800b888 <GUI_ALLOC_LockH+0x18>)
 800b872:	69d9      	ldr	r1, [r3, #28]
 800b874:	3101      	adds	r1, #1
 800b876:	61d9      	str	r1, [r3, #28]
 800b878:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b87a:	f813 1030 	ldrb.w	r1, [r3, r0, lsl #3]
 800b87e:	3101      	adds	r1, #1
 800b880:	f803 1030 	strb.w	r1, [r3, r0, lsl #3]
 800b884:	f7ff bfea 	b.w	800b85c <GUI_ALLOC_h2p>
 800b888:	20002d34 	.word	0x20002d34

0800b88c <GUI_ALLOC_UnlockH>:
 800b88c:	b530      	push	{r4, r5, lr}
 800b88e:	6802      	ldr	r2, [r0, #0]
 800b890:	4b09      	ldr	r3, [pc, #36]	; (800b8b8 <GUI_ALLOC_UnlockH+0x2c>)
 800b892:	f852 1c08 	ldr.w	r1, [r2, #-8]
 800b896:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b898:	f812 4031 	ldrb.w	r4, [r2, r1, lsl #3]
 800b89c:	2c01      	cmp	r4, #1
 800b89e:	d903      	bls.n	800b8a8 <GUI_ALLOC_UnlockH+0x1c>
 800b8a0:	69dd      	ldr	r5, [r3, #28]
 800b8a2:	b10d      	cbz	r5, 800b8a8 <GUI_ALLOC_UnlockH+0x1c>
 800b8a4:	3d01      	subs	r5, #1
 800b8a6:	61dd      	str	r5, [r3, #28]
 800b8a8:	3c01      	subs	r4, #1
 800b8aa:	f802 4031 	strb.w	r4, [r2, r1, lsl #3]
 800b8ae:	2300      	movs	r3, #0
 800b8b0:	6003      	str	r3, [r0, #0]
 800b8b2:	4618      	mov	r0, r3
 800b8b4:	bd30      	pop	{r4, r5, pc}
 800b8b6:	bf00      	nop
 800b8b8:	20002d34 	.word	0x20002d34

0800b8bc <GUI_ALLOC_AssignMemory>:
 800b8bc:	4b02      	ldr	r3, [pc, #8]	; (800b8c8 <GUI_ALLOC_AssignMemory+0xc>)
 800b8be:	f021 0103 	bic.w	r1, r1, #3
 800b8c2:	6018      	str	r0, [r3, #0]
 800b8c4:	6059      	str	r1, [r3, #4]
 800b8c6:	4770      	bx	lr
 800b8c8:	20002c28 	.word	0x20002c28

0800b8cc <GUI_ALLOC_GetSize>:
 800b8cc:	b130      	cbz	r0, 800b8dc <GUI_ALLOC_GetSize+0x10>
 800b8ce:	4b04      	ldr	r3, [pc, #16]	; (800b8e0 <GUI_ALLOC_GetSize+0x14>)
 800b8d0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b8d2:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800b8d6:	6843      	ldr	r3, [r0, #4]
 800b8d8:	6858      	ldr	r0, [r3, #4]
 800b8da:	380c      	subs	r0, #12
 800b8dc:	4770      	bx	lr
 800b8de:	bf00      	nop
 800b8e0:	20002d34 	.word	0x20002d34

0800b8e4 <GUI_ALLOC_Free>:
 800b8e4:	b510      	push	{r4, lr}
 800b8e6:	4604      	mov	r4, r0
 800b8e8:	b160      	cbz	r0, 800b904 <GUI_ALLOC_Free+0x20>
 800b8ea:	4b07      	ldr	r3, [pc, #28]	; (800b908 <GUI_ALLOC_Free+0x24>)
 800b8ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b8ee:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 800b8f2:	6859      	ldr	r1, [r3, #4]
 800b8f4:	6848      	ldr	r0, [r1, #4]
 800b8f6:	f7ff ff09 	bl	800b70c <_AddFreeMemory>
 800b8fa:	4620      	mov	r0, r4
 800b8fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b900:	f7ff bed2 	b.w	800b6a8 <_PushFreeBlock>
 800b904:	bd10      	pop	{r4, pc}
 800b906:	bf00      	nop
 800b908:	20002d34 	.word	0x20002d34

0800b90c <_EnlargeBlocks>:
 800b90c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b910:	4c23      	ldr	r4, [pc, #140]	; (800b9a0 <_EnlargeBlocks+0x94>)
 800b912:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b914:	b93b      	cbnz	r3, 800b926 <_EnlargeBlocks+0x1a>
 800b916:	4b23      	ldr	r3, [pc, #140]	; (800b9a4 <_EnlargeBlocks+0x98>)
 800b918:	689d      	ldr	r5, [r3, #8]
 800b91a:	685b      	ldr	r3, [r3, #4]
 800b91c:	3508      	adds	r5, #8
 800b91e:	fbb3 f5f5 	udiv	r5, r3, r5
 800b922:	3502      	adds	r5, #2
 800b924:	e003      	b.n	800b92e <_EnlargeBlocks+0x22>
 800b926:	6923      	ldr	r3, [r4, #16]
 800b928:	1d1d      	adds	r5, r3, #4
 800b92a:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
 800b92e:	00e8      	lsls	r0, r5, #3
 800b930:	f000 f8f4 	bl	800bb1c <_Alloc>
 800b934:	4680      	mov	r8, r0
 800b936:	b368      	cbz	r0, 800b994 <_EnlargeBlocks+0x88>
 800b938:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b93a:	6922      	ldr	r2, [r4, #16]
 800b93c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800b93e:	eb01 03c0 	add.w	r3, r1, r0, lsl #3
 800b942:	00d2      	lsls	r2, r2, #3
 800b944:	685e      	ldr	r6, [r3, #4]
 800b946:	4b18      	ldr	r3, [pc, #96]	; (800b9a8 <_EnlargeBlocks+0x9c>)
 800b948:	3608      	adds	r6, #8
 800b94a:	681b      	ldr	r3, [r3, #0]
 800b94c:	4630      	mov	r0, r6
 800b94e:	4798      	blx	r3
 800b950:	6922      	ldr	r2, [r4, #16]
 800b952:	6366      	str	r6, [r4, #52]	; 0x34
 800b954:	eb06 01c2 	add.w	r1, r6, r2, lsl #3
 800b958:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
 800b95c:	3104      	adds	r1, #4
 800b95e:	4613      	mov	r3, r2
 800b960:	1e68      	subs	r0, r5, #1
 800b962:	4283      	cmp	r3, r0
 800b964:	f101 0108 	add.w	r1, r1, #8
 800b968:	d203      	bcs.n	800b972 <_EnlargeBlocks+0x66>
 800b96a:	3301      	adds	r3, #1
 800b96c:	f841 3c08 	str.w	r3, [r1, #-8]
 800b970:	e7f6      	b.n	800b960 <_EnlargeBlocks+0x54>
 800b972:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 800b976:	2600      	movs	r6, #0
 800b978:	605e      	str	r6, [r3, #4]
 800b97a:	6863      	ldr	r3, [r4, #4]
 800b97c:	6262      	str	r2, [r4, #36]	; 0x24
 800b97e:	1a9b      	subs	r3, r3, r2
 800b980:	442b      	add	r3, r5
 800b982:	6063      	str	r3, [r4, #4]
 800b984:	6125      	str	r5, [r4, #16]
 800b986:	4638      	mov	r0, r7
 800b988:	b13f      	cbz	r7, 800b99a <_EnlargeBlocks+0x8e>
 800b98a:	f7ff ffab 	bl	800b8e4 <GUI_ALLOC_Free>
 800b98e:	4630      	mov	r0, r6
 800b990:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b994:	2001      	movs	r0, #1
 800b996:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b99a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b99e:	bf00      	nop
 800b9a0:	20002d34 	.word	0x20002d34
 800b9a4:	20002c28 	.word	0x20002c28
 800b9a8:	200000a8 	.word	0x200000a8

0800b9ac <_InitOnce>:
 800b9ac:	b538      	push	{r3, r4, r5, lr}
 800b9ae:	4916      	ldr	r1, [pc, #88]	; (800ba08 <_InitOnce+0x5c>)
 800b9b0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800b9b4:	bb3b      	cbnz	r3, 800ba06 <_InitOnce+0x5a>
 800b9b6:	4a15      	ldr	r2, [pc, #84]	; (800ba0c <_InitOnce+0x60>)
 800b9b8:	2301      	movs	r3, #1
 800b9ba:	f881 3028 	strb.w	r3, [r1, #40]	; 0x28
 800b9be:	6893      	ldr	r3, [r2, #8]
 800b9c0:	b913      	cbnz	r3, 800b9c8 <_InitOnce+0x1c>
 800b9c2:	6853      	ldr	r3, [r2, #4]
 800b9c4:	089b      	lsrs	r3, r3, #2
 800b9c6:	6093      	str	r3, [r2, #8]
 800b9c8:	235a      	movs	r3, #90	; 0x5a
 800b9ca:	620b      	str	r3, [r1, #32]
 800b9cc:	2300      	movs	r3, #0
 800b9ce:	2510      	movs	r5, #16
 800b9d0:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
 800b9d4:	409d      	lsls	r5, r3
 800b9d6:	3301      	adds	r3, #1
 800b9d8:	2b10      	cmp	r3, #16
 800b9da:	4c0b      	ldr	r4, [pc, #44]	; (800ba08 <_InitOnce+0x5c>)
 800b9dc:	6405      	str	r5, [r0, #64]	; 0x40
 800b9de:	d1f6      	bne.n	800b9ce <_InitOnce+0x22>
 800b9e0:	6850      	ldr	r0, [r2, #4]
 800b9e2:	6811      	ldr	r1, [r2, #0]
 800b9e4:	63a1      	str	r1, [r4, #56]	; 0x38
 800b9e6:	2302      	movs	r3, #2
 800b9e8:	6123      	str	r3, [r4, #16]
 800b9ea:	f1a0 0314 	sub.w	r3, r0, #20
 800b9ee:	440b      	add	r3, r1
 800b9f0:	2501      	movs	r5, #1
 800b9f2:	6363      	str	r3, [r4, #52]	; 0x34
 800b9f4:	60e0      	str	r0, [r4, #12]
 800b9f6:	605d      	str	r5, [r3, #4]
 800b9f8:	6265      	str	r5, [r4, #36]	; 0x24
 800b9fa:	6065      	str	r5, [r4, #4]
 800b9fc:	f7ff fe86 	bl	800b70c <_AddFreeMemory>
 800ba00:	f7ff ff84 	bl	800b90c <_EnlargeBlocks>
 800ba04:	6325      	str	r5, [r4, #48]	; 0x30
 800ba06:	bd38      	pop	{r3, r4, r5, pc}
 800ba08:	20002d34 	.word	0x20002d34
 800ba0c:	20002c28 	.word	0x20002c28

0800ba10 <GUI_ALLOC_GetFixedBlock>:
 800ba10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba14:	4605      	mov	r5, r0
 800ba16:	4e26      	ldr	r6, [pc, #152]	; (800bab0 <GUI_ALLOC_GetFixedBlock+0xa0>)
 800ba18:	3503      	adds	r5, #3
 800ba1a:	f7ff ffc7 	bl	800b9ac <_InitOnce>
 800ba1e:	f025 0503 	bic.w	r5, r5, #3
 800ba22:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800ba24:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800ba26:	3504      	adds	r5, #4
 800ba28:	429d      	cmp	r5, r3
 800ba2a:	bf38      	it	cc
 800ba2c:	461d      	movcc	r5, r3
 800ba2e:	4614      	mov	r4, r2
 800ba30:	b12c      	cbz	r4, 800ba3e <GUI_ALLOC_GetFixedBlock+0x2e>
 800ba32:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ba36:	42ab      	cmp	r3, r5
 800ba38:	d02c      	beq.n	800ba94 <GUI_ALLOC_GetFixedBlock+0x84>
 800ba3a:	6824      	ldr	r4, [r4, #0]
 800ba3c:	e7f8      	b.n	800ba30 <GUI_ALLOC_GetFixedBlock+0x20>
 800ba3e:	68f3      	ldr	r3, [r6, #12]
 800ba40:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 800ba42:	eb02 0803 	add.w	r8, r2, r3
 800ba46:	f858 7c04 	ldr.w	r7, [r8, #-4]
 800ba4a:	ebc7 0708 	rsb	r7, r7, r8
 800ba4e:	683b      	ldr	r3, [r7, #0]
 800ba50:	b133      	cbz	r3, 800ba60 <GUI_ALLOC_GetFixedBlock+0x50>
 800ba52:	4620      	mov	r0, r4
 800ba54:	f7ff feaa 	bl	800b7ac <_RemoveHoles>
 800ba58:	f858 7c04 	ldr.w	r7, [r8, #-4]
 800ba5c:	ebc7 0708 	rsb	r7, r7, r8
 800ba60:	683b      	ldr	r3, [r7, #0]
 800ba62:	bb13      	cbnz	r3, 800baaa <GUI_ALLOC_GetFixedBlock+0x9a>
 800ba64:	687b      	ldr	r3, [r7, #4]
 800ba66:	42ab      	cmp	r3, r5
 800ba68:	db1f      	blt.n	800baaa <GUI_ALLOC_GetFixedBlock+0x9a>
 800ba6a:	4638      	mov	r0, r7
 800ba6c:	1d1c      	adds	r4, r3, #4
 800ba6e:	f7ff fe2d 	bl	800b6cc <_RemoveFreeBlock>
 800ba72:	68f3      	ldr	r3, [r6, #12]
 800ba74:	6878      	ldr	r0, [r7, #4]
 800ba76:	1b5b      	subs	r3, r3, r5
 800ba78:	60f3      	str	r3, [r6, #12]
 800ba7a:	6973      	ldr	r3, [r6, #20]
 800ba7c:	1b64      	subs	r4, r4, r5
 800ba7e:	442b      	add	r3, r5
 800ba80:	1b40      	subs	r0, r0, r5
 800ba82:	443c      	add	r4, r7
 800ba84:	6173      	str	r3, [r6, #20]
 800ba86:	d002      	beq.n	800ba8e <GUI_ALLOC_GetFixedBlock+0x7e>
 800ba88:	4639      	mov	r1, r7
 800ba8a:	f7ff fe3f 	bl	800b70c <_AddFreeMemory>
 800ba8e:	f844 5c04 	str.w	r5, [r4, #-4]
 800ba92:	e00a      	b.n	800baaa <GUI_ALLOC_GetFixedBlock+0x9a>
 800ba94:	6823      	ldr	r3, [r4, #0]
 800ba96:	b10b      	cbz	r3, 800ba9c <GUI_ALLOC_GetFixedBlock+0x8c>
 800ba98:	6861      	ldr	r1, [r4, #4]
 800ba9a:	6059      	str	r1, [r3, #4]
 800ba9c:	6861      	ldr	r1, [r4, #4]
 800ba9e:	b101      	cbz	r1, 800baa2 <GUI_ALLOC_GetFixedBlock+0x92>
 800baa0:	600b      	str	r3, [r1, #0]
 800baa2:	42a2      	cmp	r2, r4
 800baa4:	d101      	bne.n	800baaa <GUI_ALLOC_GetFixedBlock+0x9a>
 800baa6:	6823      	ldr	r3, [r4, #0]
 800baa8:	63f3      	str	r3, [r6, #60]	; 0x3c
 800baaa:	4620      	mov	r0, r4
 800baac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bab0:	20002d34 	.word	0x20002d34

0800bab4 <GUI_ALLOC_GetMaxSize>:
 800bab4:	b508      	push	{r3, lr}
 800bab6:	f7ff ff79 	bl	800b9ac <_InitOnce>
 800baba:	2200      	movs	r2, #0
 800babc:	4b0b      	ldr	r3, [pc, #44]	; (800baec <GUI_ALLOC_GetMaxSize+0x38>)
 800babe:	4413      	add	r3, r2
 800bac0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800bac4:	b113      	cbz	r3, 800bacc <GUI_ALLOC_GetMaxSize+0x18>
 800bac6:	689b      	ldr	r3, [r3, #8]
 800bac8:	2000      	movs	r0, #0
 800baca:	e00b      	b.n	800bae4 <GUI_ALLOC_GetMaxSize+0x30>
 800bacc:	3a08      	subs	r2, #8
 800bace:	f112 0f80 	cmn.w	r2, #128	; 0x80
 800bad2:	d1f3      	bne.n	800babc <GUI_ALLOC_GetMaxSize+0x8>
 800bad4:	e7f8      	b.n	800bac8 <GUI_ALLOC_GetMaxSize+0x14>
 800bad6:	685a      	ldr	r2, [r3, #4]
 800bad8:	689b      	ldr	r3, [r3, #8]
 800bada:	4290      	cmp	r0, r2
 800badc:	bf38      	it	cc
 800bade:	4610      	movcc	r0, r2
 800bae0:	b113      	cbz	r3, 800bae8 <GUI_ALLOC_GetMaxSize+0x34>
 800bae2:	689b      	ldr	r3, [r3, #8]
 800bae4:	2b00      	cmp	r3, #0
 800bae6:	d1f6      	bne.n	800bad6 <GUI_ALLOC_GetMaxSize+0x22>
 800bae8:	380c      	subs	r0, #12
 800baea:	bd08      	pop	{r3, pc}
 800baec:	20002d34 	.word	0x20002d34

0800baf0 <GUI_ALLOC_RequestSize>:
 800baf0:	b508      	push	{r3, lr}
 800baf2:	f7ff ffdf 	bl	800bab4 <GUI_ALLOC_GetMaxSize>
 800baf6:	f5b0 0f80 	cmp.w	r0, #4194304	; 0x400000
 800bafa:	f04f 0364 	mov.w	r3, #100	; 0x64
 800bafe:	4a06      	ldr	r2, [pc, #24]	; (800bb18 <GUI_ALLOC_RequestSize+0x28>)
 800bb00:	d904      	bls.n	800bb0c <GUI_ALLOC_RequestSize+0x1c>
 800bb02:	fb90 f0f3 	sdiv	r0, r0, r3
 800bb06:	6a13      	ldr	r3, [r2, #32]
 800bb08:	4358      	muls	r0, r3
 800bb0a:	bd08      	pop	{r3, pc}
 800bb0c:	6a12      	ldr	r2, [r2, #32]
 800bb0e:	4350      	muls	r0, r2
 800bb10:	fbb0 f0f3 	udiv	r0, r0, r3
 800bb14:	bd08      	pop	{r3, pc}
 800bb16:	bf00      	nop
 800bb18:	20002d34 	.word	0x20002d34

0800bb1c <_Alloc>:
 800bb1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800bb20:	4d38      	ldr	r5, [pc, #224]	; (800bc04 <_Alloc+0xe8>)
 800bb22:	4604      	mov	r4, r0
 800bb24:	f7ff ff42 	bl	800b9ac <_InitOnce>
 800bb28:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 800bb2a:	682b      	ldr	r3, [r5, #0]
 800bb2c:	42bc      	cmp	r4, r7
 800bb2e:	bf24      	itt	cs
 800bb30:	1ce7      	addcs	r7, r4, #3
 800bb32:	f027 0703 	biccs.w	r7, r7, #3
 800bb36:	370c      	adds	r7, #12
 800bb38:	429f      	cmp	r7, r3
 800bb3a:	4c32      	ldr	r4, [pc, #200]	; (800bc04 <_Alloc+0xe8>)
 800bb3c:	d83e      	bhi.n	800bbbc <_Alloc+0xa0>
 800bb3e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bb40:	6862      	ldr	r2, [r4, #4]
 800bb42:	429a      	cmp	r2, r3
 800bb44:	d90f      	bls.n	800bb66 <_Alloc+0x4a>
 800bb46:	686b      	ldr	r3, [r5, #4]
 800bb48:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 800bb4a:	3b01      	subs	r3, #1
 800bb4c:	606b      	str	r3, [r5, #4]
 800bb4e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800bb50:	ea4f 09c6 	mov.w	r9, r6, lsl #3
 800bb54:	eb03 0209 	add.w	r2, r3, r9
 800bb58:	6852      	ldr	r2, [r2, #4]
 800bb5a:	626a      	str	r2, [r5, #36]	; 0x24
 800bb5c:	2201      	movs	r2, #1
 800bb5e:	f803 2036 	strb.w	r2, [r3, r6, lsl #3]
 800bb62:	b956      	cbnz	r6, 800bb7a <_Alloc+0x5e>
 800bb64:	e02a      	b.n	800bbbc <_Alloc+0xa0>
 800bb66:	3b01      	subs	r3, #1
 800bb68:	6323      	str	r3, [r4, #48]	; 0x30
 800bb6a:	f7ff fecf 	bl	800b90c <_EnlargeBlocks>
 800bb6e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bb70:	3301      	adds	r3, #1
 800bb72:	6323      	str	r3, [r4, #48]	; 0x30
 800bb74:	2800      	cmp	r0, #0
 800bb76:	d0e6      	beq.n	800bb46 <_Alloc+0x2a>
 800bb78:	e020      	b.n	800bbbc <_Alloc+0xa0>
 800bb7a:	230f      	movs	r3, #15
 800bb7c:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 800bb80:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800bb82:	4297      	cmp	r7, r2
 800bb84:	d20c      	bcs.n	800bba0 <_Alloc+0x84>
 800bb86:	f113 33ff 	adds.w	r3, r3, #4294967295
 800bb8a:	d2f7      	bcs.n	800bb7c <_Alloc+0x60>
 800bb8c:	e008      	b.n	800bba0 <_Alloc+0x84>
 800bb8e:	6894      	ldr	r4, [r2, #8]
 800bb90:	b12c      	cbz	r4, 800bb9e <_Alloc+0x82>
 800bb92:	6862      	ldr	r2, [r4, #4]
 800bb94:	4297      	cmp	r7, r2
 800bb96:	d914      	bls.n	800bbc2 <_Alloc+0xa6>
 800bb98:	68a2      	ldr	r2, [r4, #8]
 800bb9a:	2a00      	cmp	r2, #0
 800bb9c:	d1f7      	bne.n	800bb8e <_Alloc+0x72>
 800bb9e:	3301      	adds	r3, #1
 800bba0:	2b0f      	cmp	r3, #15
 800bba2:	d803      	bhi.n	800bbac <_Alloc+0x90>
 800bba4:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 800bba8:	6c52      	ldr	r2, [r2, #68]	; 0x44
 800bbaa:	e7f6      	b.n	800bb9a <_Alloc+0x7e>
 800bbac:	4638      	mov	r0, r7
 800bbae:	f7ff fdfd 	bl	800b7ac <_RemoveHoles>
 800bbb2:	2800      	cmp	r0, #0
 800bbb4:	d0e1      	beq.n	800bb7a <_Alloc+0x5e>
 800bbb6:	4630      	mov	r0, r6
 800bbb8:	f7ff fd76 	bl	800b6a8 <_PushFreeBlock>
 800bbbc:	2000      	movs	r0, #0
 800bbbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800bbc2:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800bbc6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800bbc8:	ebc7 0208 	rsb	r2, r7, r8
 800bbcc:	330c      	adds	r3, #12
 800bbce:	4620      	mov	r0, r4
 800bbd0:	429a      	cmp	r2, r3
 800bbd2:	bf38      	it	cc
 800bbd4:	4647      	movcc	r7, r8
 800bbd6:	f7ff fd79 	bl	800b6cc <_RemoveFreeBlock>
 800bbda:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800bbdc:	444b      	add	r3, r9
 800bbde:	19e1      	adds	r1, r4, r7
 800bbe0:	605c      	str	r4, [r3, #4]
 800bbe2:	45b8      	cmp	r8, r7
 800bbe4:	f04f 0300 	mov.w	r3, #0
 800bbe8:	e884 00c0 	stmia.w	r4, {r6, r7}
 800bbec:	60a3      	str	r3, [r4, #8]
 800bbee:	6124      	str	r4, [r4, #16]
 800bbf0:	f841 7c04 	str.w	r7, [r1, #-4]
 800bbf4:	dd03      	ble.n	800bbfe <_Alloc+0xe2>
 800bbf6:	ebc7 0008 	rsb	r0, r7, r8
 800bbfa:	f7ff fd87 	bl	800b70c <_AddFreeMemory>
 800bbfe:	4630      	mov	r0, r6
 800bc00:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800bc04:	20002d34 	.word	0x20002d34

0800bc08 <GUI_ALLOC_AllocNoInit>:
 800bc08:	b108      	cbz	r0, 800bc0e <GUI_ALLOC_AllocNoInit+0x6>
 800bc0a:	f7ff bf87 	b.w	800bb1c <_Alloc>
 800bc0e:	4770      	bx	lr

0800bc10 <GUI_ALLOC_FreePtr>:
 800bc10:	b510      	push	{r4, lr}
 800bc12:	4604      	mov	r4, r0
 800bc14:	6800      	ldr	r0, [r0, #0]
 800bc16:	f7ff fe65 	bl	800b8e4 <GUI_ALLOC_Free>
 800bc1a:	2300      	movs	r3, #0
 800bc1c:	6023      	str	r3, [r4, #0]
 800bc1e:	bd10      	pop	{r4, pc}

0800bc20 <GUI_ALLOC_AllocInit>:
 800bc20:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bc22:	4605      	mov	r5, r0
 800bc24:	460c      	mov	r4, r1
 800bc26:	b909      	cbnz	r1, 800bc2c <GUI_ALLOC_AllocInit+0xc>
 800bc28:	2000      	movs	r0, #0
 800bc2a:	e014      	b.n	800bc56 <GUI_ALLOC_AllocInit+0x36>
 800bc2c:	4608      	mov	r0, r1
 800bc2e:	f7ff ffeb 	bl	800bc08 <GUI_ALLOC_AllocNoInit>
 800bc32:	4606      	mov	r6, r0
 800bc34:	2800      	cmp	r0, #0
 800bc36:	d0f7      	beq.n	800bc28 <GUI_ALLOC_AllocInit+0x8>
 800bc38:	f7ff fe1a 	bl	800b870 <GUI_ALLOC_LockH>
 800bc3c:	9001      	str	r0, [sp, #4]
 800bc3e:	b10d      	cbz	r5, 800bc44 <GUI_ALLOC_AllocInit+0x24>
 800bc40:	4b06      	ldr	r3, [pc, #24]	; (800bc5c <GUI_ALLOC_AllocInit+0x3c>)
 800bc42:	e000      	b.n	800bc46 <GUI_ALLOC_AllocInit+0x26>
 800bc44:	4b06      	ldr	r3, [pc, #24]	; (800bc60 <GUI_ALLOC_AllocInit+0x40>)
 800bc46:	681b      	ldr	r3, [r3, #0]
 800bc48:	4629      	mov	r1, r5
 800bc4a:	4622      	mov	r2, r4
 800bc4c:	4798      	blx	r3
 800bc4e:	a801      	add	r0, sp, #4
 800bc50:	f7ff fe1c 	bl	800b88c <GUI_ALLOC_UnlockH>
 800bc54:	4630      	mov	r0, r6
 800bc56:	b002      	add	sp, #8
 800bc58:	bd70      	pop	{r4, r5, r6, pc}
 800bc5a:	bf00      	nop
 800bc5c:	200000a8 	.word	0x200000a8
 800bc60:	200000a4 	.word	0x200000a4

0800bc64 <GUI_ALLOC_AllocZero>:
 800bc64:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bc66:	4605      	mov	r5, r0
 800bc68:	f7ff ffce 	bl	800bc08 <GUI_ALLOC_AllocNoInit>
 800bc6c:	4606      	mov	r6, r0
 800bc6e:	b160      	cbz	r0, 800bc8a <GUI_ALLOC_AllocZero+0x26>
 800bc70:	f7ff fdfe 	bl	800b870 <GUI_ALLOC_LockH>
 800bc74:	ac02      	add	r4, sp, #8
 800bc76:	4b06      	ldr	r3, [pc, #24]	; (800bc90 <GUI_ALLOC_AllocZero+0x2c>)
 800bc78:	f844 0d04 	str.w	r0, [r4, #-4]!
 800bc7c:	681b      	ldr	r3, [r3, #0]
 800bc7e:	2100      	movs	r1, #0
 800bc80:	462a      	mov	r2, r5
 800bc82:	4798      	blx	r3
 800bc84:	4620      	mov	r0, r4
 800bc86:	f7ff fe01 	bl	800b88c <GUI_ALLOC_UnlockH>
 800bc8a:	4630      	mov	r0, r6
 800bc8c:	b002      	add	sp, #8
 800bc8e:	bd70      	pop	{r4, r5, r6, pc}
 800bc90:	200000a4 	.word	0x200000a4

0800bc94 <GUI_ALLOC_Realloc>:
 800bc94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bc96:	4604      	mov	r4, r0
 800bc98:	4608      	mov	r0, r1
 800bc9a:	460e      	mov	r6, r1
 800bc9c:	f7ff ffb4 	bl	800bc08 <GUI_ALLOC_AllocNoInit>
 800bca0:	4605      	mov	r5, r0
 800bca2:	b300      	cbz	r0, 800bce6 <GUI_ALLOC_Realloc+0x52>
 800bca4:	b1fc      	cbz	r4, 800bce6 <GUI_ALLOC_Realloc+0x52>
 800bca6:	4620      	mov	r0, r4
 800bca8:	f7ff fe10 	bl	800b8cc <GUI_ALLOC_GetSize>
 800bcac:	42b0      	cmp	r0, r6
 800bcae:	bfb4      	ite	lt
 800bcb0:	4607      	movlt	r7, r0
 800bcb2:	4637      	movge	r7, r6
 800bcb4:	4628      	mov	r0, r5
 800bcb6:	f7ff fddb 	bl	800b870 <GUI_ALLOC_LockH>
 800bcba:	9000      	str	r0, [sp, #0]
 800bcbc:	4620      	mov	r0, r4
 800bcbe:	f7ff fdd7 	bl	800b870 <GUI_ALLOC_LockH>
 800bcc2:	ae02      	add	r6, sp, #8
 800bcc4:	4b09      	ldr	r3, [pc, #36]	; (800bcec <GUI_ALLOC_Realloc+0x58>)
 800bcc6:	9001      	str	r0, [sp, #4]
 800bcc8:	4601      	mov	r1, r0
 800bcca:	681b      	ldr	r3, [r3, #0]
 800bccc:	f856 0d08 	ldr.w	r0, [r6, #-8]!
 800bcd0:	463a      	mov	r2, r7
 800bcd2:	4798      	blx	r3
 800bcd4:	4668      	mov	r0, sp
 800bcd6:	f7ff fdd9 	bl	800b88c <GUI_ALLOC_UnlockH>
 800bcda:	a801      	add	r0, sp, #4
 800bcdc:	f7ff fdd6 	bl	800b88c <GUI_ALLOC_UnlockH>
 800bce0:	4620      	mov	r0, r4
 800bce2:	f7ff fdff 	bl	800b8e4 <GUI_ALLOC_Free>
 800bce6:	4628      	mov	r0, r5
 800bce8:	b003      	add	sp, #12
 800bcea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bcec:	200000a8 	.word	0x200000a8

0800bcf0 <GUI_DrawRect>:
 800bcf0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800bcf4:	4c1e      	ldr	r4, [pc, #120]	; (800bd70 <GUI_DrawRect+0x80>)
 800bcf6:	f8d4 e000 	ldr.w	lr, [r4]
 800bcfa:	f8de 404c 	ldr.w	r4, [lr, #76]	; 0x4c
 800bcfe:	f8de 6050 	ldr.w	r6, [lr, #80]	; 0x50
 800bd02:	1905      	adds	r5, r0, r4
 800bd04:	4414      	add	r4, r2
 800bd06:	f89e 2018 	ldrb.w	r2, [lr, #24]
 800bd0a:	3a01      	subs	r2, #1
 800bd0c:	b292      	uxth	r2, r2
 800bd0e:	198f      	adds	r7, r1, r6
 800bd10:	441e      	add	r6, r3
 800bd12:	1aab      	subs	r3, r5, r2
 800bd14:	f8ad 3000 	strh.w	r3, [sp]
 800bd18:	1913      	adds	r3, r2, r4
 800bd1a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bd1e:	4668      	mov	r0, sp
 800bd20:	1abb      	subs	r3, r7, r2
 800bd22:	4432      	add	r2, r6
 800bd24:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bd28:	f8ad 2006 	strh.w	r2, [sp, #6]
 800bd2c:	f7fa f9f0 	bl	8006110 <WM__InitIVRSearch>
 800bd30:	b1d0      	cbz	r0, 800bd68 <GUI_DrawRect+0x78>
 800bd32:	4628      	mov	r0, r5
 800bd34:	4639      	mov	r1, r7
 800bd36:	4622      	mov	r2, r4
 800bd38:	f7fc fefa 	bl	8008b30 <LCD_DrawHLine>
 800bd3c:	f107 0901 	add.w	r9, r7, #1
 800bd40:	4628      	mov	r0, r5
 800bd42:	4631      	mov	r1, r6
 800bd44:	4622      	mov	r2, r4
 800bd46:	f106 38ff 	add.w	r8, r6, #4294967295
 800bd4a:	f7fc fef1 	bl	8008b30 <LCD_DrawHLine>
 800bd4e:	4628      	mov	r0, r5
 800bd50:	4649      	mov	r1, r9
 800bd52:	4642      	mov	r2, r8
 800bd54:	f7fc ff12 	bl	8008b7c <LCD_DrawVLine>
 800bd58:	4620      	mov	r0, r4
 800bd5a:	4649      	mov	r1, r9
 800bd5c:	4642      	mov	r2, r8
 800bd5e:	f7fc ff0d 	bl	8008b7c <LCD_DrawVLine>
 800bd62:	f7fa f913 	bl	8005f8c <WM__GetNextIVR>
 800bd66:	e7e3      	b.n	800bd30 <GUI_DrawRect+0x40>
 800bd68:	b003      	add	sp, #12
 800bd6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bd6e:	bf00      	nop
 800bd70:	200000b8 	.word	0x200000b8

0800bd74 <LCD_Index2Color_M565>:
 800bd74:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 800bd78:	4b06      	ldr	r3, [pc, #24]	; (800bd94 <LCD_Index2Color_M565+0x20>)
 800bd7a:	f000 021f 	and.w	r2, r0, #31
 800bd7e:	f3c0 1045 	ubfx	r0, r0, #5, #6
 800bd82:	5c9a      	ldrb	r2, [r3, r2]
 800bd84:	5c5b      	ldrb	r3, [r3, r1]
 800bd86:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 800bd8a:	4a03      	ldr	r2, [pc, #12]	; (800bd98 <LCD_Index2Color_M565+0x24>)
 800bd8c:	5c10      	ldrb	r0, [r2, r0]
 800bd8e:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 800bd92:	4770      	bx	lr
 800bd94:	08012e36 	.word	0x08012e36
 800bd98:	08012e56 	.word	0x08012e56

0800bd9c <_Color2Index_M565>:
 800bd9c:	f3c0 4107 	ubfx	r1, r0, #16, #8
 800bda0:	4b06      	ldr	r3, [pc, #24]	; (800bdbc <_Color2Index_M565+0x20>)
 800bda2:	b2c2      	uxtb	r2, r0
 800bda4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 800bda8:	5c9a      	ldrb	r2, [r3, r2]
 800bdaa:	5c5b      	ldrb	r3, [r3, r1]
 800bdac:	eb03 23c2 	add.w	r3, r3, r2, lsl #11
 800bdb0:	4a03      	ldr	r2, [pc, #12]	; (800bdc0 <_Color2Index_M565+0x24>)
 800bdb2:	5c10      	ldrb	r0, [r2, r0]
 800bdb4:	eb03 1040 	add.w	r0, r3, r0, lsl #5
 800bdb8:	4770      	bx	lr
 800bdba:	bf00      	nop
 800bdbc:	08012d36 	.word	0x08012d36
 800bdc0:	08012e96 	.word	0x08012e96

0800bdc4 <_GetIndexMask_M565>:
 800bdc4:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800bdc8:	4770      	bx	lr
	...

0800bdcc <_Color2IndexBulk>:
 800bdcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bdce:	4f0f      	ldr	r7, [pc, #60]	; (800be0c <_Color2IndexBulk+0x40>)
 800bdd0:	683f      	ldr	r7, [r7, #0]
 800bdd2:	4606      	mov	r6, r0
 800bdd4:	460d      	mov	r5, r1
 800bdd6:	4614      	mov	r4, r2
 800bdd8:	469c      	mov	ip, r3
 800bdda:	b10f      	cbz	r7, 800bde0 <_Color2IndexBulk+0x14>
 800bddc:	47b8      	blx	r7
 800bdde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bde0:	f856 2b04 	ldr.w	r2, [r6], #4
 800bde4:	490a      	ldr	r1, [pc, #40]	; (800be10 <_Color2IndexBulk+0x44>)
 800bde6:	b2d3      	uxtb	r3, r2
 800bde8:	3c01      	subs	r4, #1
 800bdea:	5cc8      	ldrb	r0, [r1, r3]
 800bdec:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800bdf0:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800bdf4:	5ccb      	ldrb	r3, [r1, r3]
 800bdf6:	4907      	ldr	r1, [pc, #28]	; (800be14 <_Color2IndexBulk+0x48>)
 800bdf8:	5c8a      	ldrb	r2, [r1, r2]
 800bdfa:	eb03 23c0 	add.w	r3, r3, r0, lsl #11
 800bdfe:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 800be02:	802b      	strh	r3, [r5, #0]
 800be04:	4465      	add	r5, ip
 800be06:	d1eb      	bne.n	800bde0 <_Color2IndexBulk+0x14>
 800be08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800be0a:	bf00      	nop
 800be0c:	20002c38 	.word	0x20002c38
 800be10:	08012d36 	.word	0x08012d36
 800be14:	08012e96 	.word	0x08012e96

0800be18 <_Index2ColorBulk>:
 800be18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800be1a:	4e13      	ldr	r6, [pc, #76]	; (800be68 <_Index2ColorBulk+0x50>)
 800be1c:	6836      	ldr	r6, [r6, #0]
 800be1e:	4684      	mov	ip, r0
 800be20:	4614      	mov	r4, r2
 800be22:	461d      	mov	r5, r3
 800be24:	b10e      	cbz	r6, 800be2a <_Index2ColorBulk+0x12>
 800be26:	47b0      	blx	r6
 800be28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800be2a:	1e50      	subs	r0, r2, #1
 800be2c:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 800be30:	3a01      	subs	r2, #1
 800be32:	fb03 c000 	mla	r0, r3, r0, ip
 800be36:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800be3a:	8802      	ldrh	r2, [r0, #0]
 800be3c:	4b0b      	ldr	r3, [pc, #44]	; (800be6c <_Index2ColorBulk+0x54>)
 800be3e:	f002 061f 	and.w	r6, r2, #31
 800be42:	0ad7      	lsrs	r7, r2, #11
 800be44:	5d9e      	ldrb	r6, [r3, r6]
 800be46:	5ddb      	ldrb	r3, [r3, r7]
 800be48:	f3c2 1245 	ubfx	r2, r2, #5, #6
 800be4c:	eb03 4306 	add.w	r3, r3, r6, lsl #16
 800be50:	4e07      	ldr	r6, [pc, #28]	; (800be70 <_Index2ColorBulk+0x58>)
 800be52:	5cb2      	ldrb	r2, [r6, r2]
 800be54:	3c01      	subs	r4, #1
 800be56:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800be5a:	f841 3904 	str.w	r3, [r1], #-4
 800be5e:	ebc5 0000 	rsb	r0, r5, r0
 800be62:	d1ea      	bne.n	800be3a <_Index2ColorBulk+0x22>
 800be64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800be66:	bf00      	nop
 800be68:	20002c34 	.word	0x20002c34
 800be6c:	08012e36 	.word	0x08012e36
 800be70:	08012e56 	.word	0x08012e56

0800be74 <LCD_Index2Color_888>:
 800be74:	4770      	bx	lr

0800be76 <LCD_Index2Color_8888>:
 800be76:	4770      	bx	lr

0800be78 <_Color2Index_8888>:
 800be78:	4770      	bx	lr

0800be7a <_GetIndexMask_8888>:
 800be7a:	f04f 30ff 	mov.w	r0, #4294967295
 800be7e:	4770      	bx	lr

0800be80 <_Color2IndexBulk>:
 800be80:	b510      	push	{r4, lr}
 800be82:	f850 4b04 	ldr.w	r4, [r0], #4
 800be86:	600c      	str	r4, [r1, #0]
 800be88:	3a01      	subs	r2, #1
 800be8a:	4419      	add	r1, r3
 800be8c:	d1f9      	bne.n	800be82 <_Color2IndexBulk+0x2>
 800be8e:	bd10      	pop	{r4, pc}

0800be90 <_Index2ColorBulk>:
 800be90:	b510      	push	{r4, lr}
 800be92:	6804      	ldr	r4, [r0, #0]
 800be94:	f841 4b04 	str.w	r4, [r1], #4
 800be98:	3a01      	subs	r2, #1
 800be9a:	4418      	add	r0, r3
 800be9c:	d1f9      	bne.n	800be92 <_Index2ColorBulk+0x2>
 800be9e:	bd10      	pop	{r4, pc}

0800bea0 <_DrawDown>:
 800bea0:	4770      	bx	lr

0800bea2 <_DrawUp>:
 800bea2:	4770      	bx	lr

0800bea4 <_DrawDownRect>:
 800bea4:	4770      	bx	lr

0800bea6 <_DrawUpRect>:
 800bea6:	4770      	bx	lr

0800bea8 <_DrawFlat>:
 800bea8:	4770      	bx	lr

0800beaa <_EffectRequiresRedraw>:
 800beaa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800beac:	460d      	mov	r5, r1
 800beae:	f100 0108 	add.w	r1, r0, #8
 800beb2:	4602      	mov	r2, r0
 800beb4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800beb6:	c903      	ldmia	r1, {r0, r1}
 800beb8:	681c      	ldr	r4, [r3, #0]
 800beba:	e88d 0003 	stmia.w	sp, {r0, r1}
 800bebe:	4610      	mov	r0, r2
 800bec0:	4669      	mov	r1, sp
 800bec2:	f7f8 fb3b 	bl	800453c <WM__Screen2Client>
 800bec6:	f9b5 2000 	ldrsh.w	r2, [r5]
 800beca:	f9bd 3000 	ldrsh.w	r3, [sp]
 800bece:	4422      	add	r2, r4
 800bed0:	429a      	cmp	r2, r3
 800bed2:	dc17      	bgt.n	800bf04 <_EffectRequiresRedraw+0x5a>
 800bed4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800bed8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bedc:	1b12      	subs	r2, r2, r4
 800bede:	429a      	cmp	r2, r3
 800bee0:	db10      	blt.n	800bf04 <_EffectRequiresRedraw+0x5a>
 800bee2:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800bee6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800beea:	4422      	add	r2, r4
 800beec:	429a      	cmp	r2, r3
 800beee:	dc09      	bgt.n	800bf04 <_EffectRequiresRedraw+0x5a>
 800bef0:	f9b5 0006 	ldrsh.w	r0, [r5, #6]
 800bef4:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bef8:	1b04      	subs	r4, r0, r4
 800befa:	429c      	cmp	r4, r3
 800befc:	bfac      	ite	ge
 800befe:	2000      	movge	r0, #0
 800bf00:	2001      	movlt	r0, #1
 800bf02:	e000      	b.n	800bf06 <_EffectRequiresRedraw+0x5c>
 800bf04:	2001      	movs	r0, #1
 800bf06:	b003      	add	sp, #12
 800bf08:	bd30      	pop	{r4, r5, pc}

0800bf0a <WIDGET__RotateRect90>:
 800bf0a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800bf0e:	b570      	push	{r4, r5, r6, lr}
 800bf10:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800bf14:	8815      	ldrh	r5, [r2, #0]
 800bf16:	88d0      	ldrh	r0, [r2, #6]
 800bf18:	8894      	ldrh	r4, [r2, #4]
 800bf1a:	8852      	ldrh	r2, [r2, #2]
 800bf1c:	804d      	strh	r5, [r1, #2]
 800bf1e:	1af3      	subs	r3, r6, r3
 800bf20:	b29b      	uxth	r3, r3
 800bf22:	1a18      	subs	r0, r3, r0
 800bf24:	1a9b      	subs	r3, r3, r2
 800bf26:	8008      	strh	r0, [r1, #0]
 800bf28:	808b      	strh	r3, [r1, #4]
 800bf2a:	80cc      	strh	r4, [r1, #6]
 800bf2c:	bd70      	pop	{r4, r5, r6, pc}

0800bf2e <WIDGET__GetClientRect>:
 800bf2e:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800bf30:	071b      	lsls	r3, r3, #28
 800bf32:	b513      	push	{r0, r1, r4, lr}
 800bf34:	460c      	mov	r4, r1
 800bf36:	d50f      	bpl.n	800bf58 <WIDGET__GetClientRect+0x2a>
 800bf38:	4668      	mov	r0, sp
 800bf3a:	f7f8 fdb7 	bl	8004aac <WM_GetClientRect>
 800bf3e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bf42:	8023      	strh	r3, [r4, #0]
 800bf44:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bf48:	80a3      	strh	r3, [r4, #4]
 800bf4a:	f8bd 3000 	ldrh.w	r3, [sp]
 800bf4e:	8063      	strh	r3, [r4, #2]
 800bf50:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bf54:	80e3      	strh	r3, [r4, #6]
 800bf56:	e002      	b.n	800bf5e <WIDGET__GetClientRect+0x30>
 800bf58:	4608      	mov	r0, r1
 800bf5a:	f7f8 fda7 	bl	8004aac <WM_GetClientRect>
 800bf5e:	b002      	add	sp, #8
 800bf60:	bd10      	pop	{r4, pc}

0800bf62 <WIDGET__GetInsideRect>:
 800bf62:	b538      	push	{r3, r4, r5, lr}
 800bf64:	4604      	mov	r4, r0
 800bf66:	460d      	mov	r5, r1
 800bf68:	f7f9 fd1c 	bl	80059a4 <WM__GetClientRectWin>
 800bf6c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800bf6e:	4628      	mov	r0, r5
 800bf70:	4629      	mov	r1, r5
 800bf72:	681a      	ldr	r2, [r3, #0]
 800bf74:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bf78:	f7fd b9a5 	b.w	80092c6 <GUI__ReduceRect>

0800bf7c <WIDGET__Init>:
 800bf7c:	4b02      	ldr	r3, [pc, #8]	; (800bf88 <WIDGET__Init+0xc>)
 800bf7e:	8642      	strh	r2, [r0, #50]	; 0x32
 800bf80:	681b      	ldr	r3, [r3, #0]
 800bf82:	62c3      	str	r3, [r0, #44]	; 0x2c
 800bf84:	8601      	strh	r1, [r0, #48]	; 0x30
 800bf86:	4770      	bx	lr
 800bf88:	200000c8 	.word	0x200000c8

0800bf8c <WIDGET_SetState>:
 800bf8c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bf8e:	460c      	mov	r4, r1
 800bf90:	4605      	mov	r5, r0
 800bf92:	f7ff fc6d 	bl	800b870 <GUI_ALLOC_LockH>
 800bf96:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800bf98:	9001      	str	r0, [sp, #4]
 800bf9a:	4294      	cmp	r4, r2
 800bf9c:	d003      	beq.n	800bfa6 <WIDGET_SetState+0x1a>
 800bf9e:	8644      	strh	r4, [r0, #50]	; 0x32
 800bfa0:	4628      	mov	r0, r5
 800bfa2:	f7f9 fe49 	bl	8005c38 <WM_InvalidateWindow>
 800bfa6:	a801      	add	r0, sp, #4
 800bfa8:	f7ff fc70 	bl	800b88c <GUI_ALLOC_UnlockH>
 800bfac:	b003      	add	sp, #12
 800bfae:	bd30      	pop	{r4, r5, pc}

0800bfb0 <WIDGET_OrState>:
 800bfb0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bfb2:	460c      	mov	r4, r1
 800bfb4:	4605      	mov	r5, r0
 800bfb6:	b178      	cbz	r0, 800bfd8 <WIDGET_OrState+0x28>
 800bfb8:	f7ff fc5a 	bl	800b870 <GUI_ALLOC_LockH>
 800bfbc:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800bfbe:	9001      	str	r0, [sp, #4]
 800bfc0:	ea04 0102 	and.w	r1, r4, r2
 800bfc4:	428c      	cmp	r4, r1
 800bfc6:	d004      	beq.n	800bfd2 <WIDGET_OrState+0x22>
 800bfc8:	4314      	orrs	r4, r2
 800bfca:	8644      	strh	r4, [r0, #50]	; 0x32
 800bfcc:	4628      	mov	r0, r5
 800bfce:	f7f9 fe33 	bl	8005c38 <WM_InvalidateWindow>
 800bfd2:	a801      	add	r0, sp, #4
 800bfd4:	f7ff fc5a 	bl	800b88c <GUI_ALLOC_UnlockH>
 800bfd8:	b003      	add	sp, #12
 800bfda:	bd30      	pop	{r4, r5, pc}

0800bfdc <WIDGET_AndState>:
 800bfdc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bfde:	460d      	mov	r5, r1
 800bfe0:	4604      	mov	r4, r0
 800bfe2:	b170      	cbz	r0, 800c002 <WIDGET_AndState+0x26>
 800bfe4:	f7ff fc44 	bl	800b870 <GUI_ALLOC_LockH>
 800bfe8:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800bfea:	9001      	str	r0, [sp, #4]
 800bfec:	ea22 0105 	bic.w	r1, r2, r5
 800bff0:	428a      	cmp	r2, r1
 800bff2:	d003      	beq.n	800bffc <WIDGET_AndState+0x20>
 800bff4:	8641      	strh	r1, [r0, #50]	; 0x32
 800bff6:	4620      	mov	r0, r4
 800bff8:	f7f9 fe1e 	bl	8005c38 <WM_InvalidateWindow>
 800bffc:	a801      	add	r0, sp, #4
 800bffe:	f7ff fc45 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c002:	b003      	add	sp, #12
 800c004:	bd30      	pop	{r4, r5, pc}

0800c006 <WIDGET_HandleActive>:
 800c006:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c008:	460d      	mov	r5, r1
 800c00a:	b085      	sub	sp, #20
 800c00c:	4606      	mov	r6, r0
 800c00e:	2800      	cmp	r0, #0
 800c010:	f000 8095 	beq.w	800c13e <WIDGET_HandleActive+0x138>
 800c014:	f7ff fc2c 	bl	800b870 <GUI_ALLOC_LockH>
 800c018:	682b      	ldr	r3, [r5, #0]
 800c01a:	9002      	str	r0, [sp, #8]
 800c01c:	2b16      	cmp	r3, #22
 800c01e:	d054      	beq.n	800c0ca <WIDGET_HandleActive+0xc4>
 800c020:	dc0c      	bgt.n	800c03c <WIDGET_HandleActive+0x36>
 800c022:	2b11      	cmp	r3, #17
 800c024:	d033      	beq.n	800c08e <WIDGET_HandleActive+0x88>
 800c026:	dc02      	bgt.n	800c02e <WIDGET_HandleActive+0x28>
 800c028:	2b0d      	cmp	r3, #13
 800c02a:	d040      	beq.n	800c0ae <WIDGET_HandleActive+0xa8>
 800c02c:	e080      	b.n	800c130 <WIDGET_HandleActive+0x12a>
 800c02e:	2b14      	cmp	r3, #20
 800c030:	d079      	beq.n	800c126 <WIDGET_HandleActive+0x120>
 800c032:	2b15      	cmp	r3, #21
 800c034:	d17c      	bne.n	800c130 <WIDGET_HandleActive+0x12a>
 800c036:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 800c03a:	e072      	b.n	800c122 <WIDGET_HandleActive+0x11c>
 800c03c:	2b1f      	cmp	r3, #31
 800c03e:	d06d      	beq.n	800c11c <WIDGET_HandleActive+0x116>
 800c040:	dc02      	bgt.n	800c048 <WIDGET_HandleActive+0x42>
 800c042:	2b1e      	cmp	r3, #30
 800c044:	d044      	beq.n	800c0d0 <WIDGET_HandleActive+0xca>
 800c046:	e073      	b.n	800c130 <WIDGET_HandleActive+0x12a>
 800c048:	2b31      	cmp	r3, #49	; 0x31
 800c04a:	d01e      	beq.n	800c08a <WIDGET_HandleActive+0x84>
 800c04c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800c050:	d16e      	bne.n	800c130 <WIDGET_HandleActive+0x12a>
 800c052:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800c054:	6819      	ldr	r1, [r3, #0]
 800c056:	68eb      	ldr	r3, [r5, #12]
 800c058:	62c3      	str	r3, [r0, #44]	; 0x2c
 800c05a:	681b      	ldr	r3, [r3, #0]
 800c05c:	a802      	add	r0, sp, #8
 800c05e:	1acd      	subs	r5, r1, r3
 800c060:	f7ff fc14 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c064:	4630      	mov	r0, r6
 800c066:	f7ff fc03 	bl	800b870 <GUI_ALLOC_LockH>
 800c06a:	ac04      	add	r4, sp, #16
 800c06c:	4269      	negs	r1, r5
 800c06e:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c072:	460a      	mov	r2, r1
 800c074:	462b      	mov	r3, r5
 800c076:	9500      	str	r5, [sp, #0]
 800c078:	f7f8 fa9c 	bl	80045b4 <WM__UpdateChildPositions>
 800c07c:	4620      	mov	r0, r4
 800c07e:	f7ff fc05 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c082:	4630      	mov	r0, r6
 800c084:	f7f9 fdd8 	bl	8005c38 <WM_InvalidateWindow>
 800c088:	e050      	b.n	800c12c <WIDGET_HandleActive+0x126>
 800c08a:	2400      	movs	r4, #0
 800c08c:	e041      	b.n	800c112 <WIDGET_HandleActive+0x10c>
 800c08e:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800c090:	06d9      	lsls	r1, r3, #27
 800c092:	d54d      	bpl.n	800c130 <WIDGET_HandleActive+0x12a>
 800c094:	68eb      	ldr	r3, [r5, #12]
 800c096:	2b00      	cmp	r3, #0
 800c098:	d04a      	beq.n	800c130 <WIDGET_HandleActive+0x12a>
 800c09a:	7a1b      	ldrb	r3, [r3, #8]
 800c09c:	2b00      	cmp	r3, #0
 800c09e:	d047      	beq.n	800c130 <WIDGET_HandleActive+0x12a>
 800c0a0:	a802      	add	r0, sp, #8
 800c0a2:	f7ff fbf3 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c0a6:	4630      	mov	r0, r6
 800c0a8:	f7f8 ff88 	bl	8004fbc <WM_SetFocus>
 800c0ac:	e040      	b.n	800c130 <WIDGET_HandleActive+0x12a>
 800c0ae:	68eb      	ldr	r3, [r5, #12]
 800c0b0:	68db      	ldr	r3, [r3, #12]
 800c0b2:	2b00      	cmp	r3, #0
 800c0b4:	d03c      	beq.n	800c130 <WIDGET_HandleActive+0x12a>
 800c0b6:	7a1b      	ldrb	r3, [r3, #8]
 800c0b8:	2b00      	cmp	r3, #0
 800c0ba:	d039      	beq.n	800c130 <WIDGET_HandleActive+0x12a>
 800c0bc:	a802      	add	r0, sp, #8
 800c0be:	f7ff fbe5 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c0c2:	4630      	mov	r0, r6
 800c0c4:	f7f9 f894 	bl	80051f0 <WM_BringToTop>
 800c0c8:	e030      	b.n	800c12c <WIDGET_HandleActive+0x126>
 800c0ca:	68eb      	ldr	r3, [r5, #12]
 800c0cc:	8603      	strh	r3, [r0, #48]	; 0x30
 800c0ce:	e02d      	b.n	800c12c <WIDGET_HandleActive+0x126>
 800c0d0:	68eb      	ldr	r3, [r5, #12]
 800c0d2:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 800c0d4:	2b01      	cmp	r3, #1
 800c0d6:	d108      	bne.n	800c0ea <WIDGET_HandleActive+0xe4>
 800c0d8:	06ca      	lsls	r2, r1, #27
 800c0da:	d50d      	bpl.n	800c0f8 <WIDGET_HandleActive+0xf2>
 800c0dc:	4630      	mov	r0, r6
 800c0de:	f041 0101 	orr.w	r1, r1, #1
 800c0e2:	f7ff ff53 	bl	800bf8c <WIDGET_SetState>
 800c0e6:	2708      	movs	r7, #8
 800c0e8:	e008      	b.n	800c0fc <WIDGET_HandleActive+0xf6>
 800c0ea:	f021 0101 	bic.w	r1, r1, #1
 800c0ee:	4630      	mov	r0, r6
 800c0f0:	f7ff ff4c 	bl	800bf8c <WIDGET_SetState>
 800c0f4:	2709      	movs	r7, #9
 800c0f6:	e001      	b.n	800c0fc <WIDGET_HandleActive+0xf6>
 800c0f8:	f04f 37ff 	mov.w	r7, #4294967295
 800c0fc:	a802      	add	r0, sp, #8
 800c0fe:	f7ff fbc5 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c102:	1c7b      	adds	r3, r7, #1
 800c104:	f04f 0400 	mov.w	r4, #0
 800c108:	d005      	beq.n	800c116 <WIDGET_HandleActive+0x110>
 800c10a:	4630      	mov	r0, r6
 800c10c:	4639      	mov	r1, r7
 800c10e:	f7f8 ff4a 	bl	8004fa6 <WM_NotifyParent>
 800c112:	60ec      	str	r4, [r5, #12]
 800c114:	e00d      	b.n	800c132 <WIDGET_HandleActive+0x12c>
 800c116:	2301      	movs	r3, #1
 800c118:	60eb      	str	r3, [r5, #12]
 800c11a:	e00a      	b.n	800c132 <WIDGET_HandleActive+0x12c>
 800c11c:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800c11e:	f3c3 1300 	ubfx	r3, r3, #4, #1
 800c122:	60eb      	str	r3, [r5, #12]
 800c124:	e002      	b.n	800c12c <WIDGET_HandleActive+0x126>
 800c126:	68e9      	ldr	r1, [r5, #12]
 800c128:	f7ff ff1b 	bl	800bf62 <WIDGET__GetInsideRect>
 800c12c:	2400      	movs	r4, #0
 800c12e:	e000      	b.n	800c132 <WIDGET_HandleActive+0x12c>
 800c130:	2401      	movs	r4, #1
 800c132:	9b02      	ldr	r3, [sp, #8]
 800c134:	b123      	cbz	r3, 800c140 <WIDGET_HandleActive+0x13a>
 800c136:	a802      	add	r0, sp, #8
 800c138:	f7ff fba8 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c13c:	e000      	b.n	800c140 <WIDGET_HandleActive+0x13a>
 800c13e:	2401      	movs	r4, #1
 800c140:	4620      	mov	r0, r4
 800c142:	b005      	add	sp, #20
 800c144:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c146 <WIDGET__SetScrollState>:
 800c146:	b570      	push	{r4, r5, r6, lr}
 800c148:	460d      	mov	r5, r1
 800c14a:	21fe      	movs	r1, #254	; 0xfe
 800c14c:	4616      	mov	r6, r2
 800c14e:	4604      	mov	r4, r0
 800c150:	f7f8 fd2e 	bl	8004bb0 <WM_GetDialogItem>
 800c154:	4629      	mov	r1, r5
 800c156:	f7f8 ff7f 	bl	8005058 <WM_SetScrollState>
 800c15a:	4620      	mov	r0, r4
 800c15c:	21ff      	movs	r1, #255	; 0xff
 800c15e:	f7f8 fd27 	bl	8004bb0 <WM_GetDialogItem>
 800c162:	4631      	mov	r1, r6
 800c164:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c168:	f7f8 bf76 	b.w	8005058 <WM_SetScrollState>

0800c16c <WIDGET__DrawTriangle>:
 800c16c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c16e:	461c      	mov	r4, r3
 800c170:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800c172:	9f06      	ldr	r7, [sp, #24]
 800c174:	071b      	lsls	r3, r3, #28
 800c176:	460d      	mov	r5, r1
 800c178:	4616      	mov	r6, r2
 800c17a:	d50a      	bpl.n	800c192 <WIDGET__DrawTriangle+0x26>
 800c17c:	2c00      	cmp	r4, #0
 800c17e:	db07      	blt.n	800c190 <WIDGET__DrawTriangle+0x24>
 800c180:	4628      	mov	r0, r5
 800c182:	1b31      	subs	r1, r6, r4
 800c184:	19a2      	adds	r2, r4, r6
 800c186:	f7fd fff1 	bl	800a16c <GUI_DrawHLine>
 800c18a:	3c01      	subs	r4, #1
 800c18c:	443d      	add	r5, r7
 800c18e:	e7f5      	b.n	800c17c <WIDGET__DrawTriangle+0x10>
 800c190:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c192:	2c00      	cmp	r4, #0
 800c194:	db07      	blt.n	800c1a6 <WIDGET__DrawTriangle+0x3a>
 800c196:	4628      	mov	r0, r5
 800c198:	1b31      	subs	r1, r6, r4
 800c19a:	19a2      	adds	r2, r4, r6
 800c19c:	f7fe f840 	bl	800a220 <GUI_DrawVLine>
 800c1a0:	3c01      	subs	r4, #1
 800c1a2:	443d      	add	r5, r7
 800c1a4:	e7f5      	b.n	800c192 <WIDGET__DrawTriangle+0x26>
 800c1a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c1a8 <WIDGET__EFFECT_DrawDownRect>:
 800c1a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c1aa:	4605      	mov	r5, r0
 800c1ac:	460c      	mov	r4, r1
 800c1ae:	b919      	cbnz	r1, 800c1b8 <WIDGET__EFFECT_DrawDownRect+0x10>
 800c1b0:	4668      	mov	r0, sp
 800c1b2:	f7f8 fc7b 	bl	8004aac <WM_GetClientRect>
 800c1b6:	466c      	mov	r4, sp
 800c1b8:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 800c1ba:	071b      	lsls	r3, r3, #28
 800c1bc:	d505      	bpl.n	800c1ca <WIDGET__EFFECT_DrawDownRect+0x22>
 800c1be:	4622      	mov	r2, r4
 800c1c0:	4628      	mov	r0, r5
 800c1c2:	4669      	mov	r1, sp
 800c1c4:	f7ff fea1 	bl	800bf0a <WIDGET__RotateRect90>
 800c1c8:	466c      	mov	r4, sp
 800c1ca:	4628      	mov	r0, r5
 800c1cc:	4621      	mov	r1, r4
 800c1ce:	f7ff fe6c 	bl	800beaa <_EffectRequiresRedraw>
 800c1d2:	b118      	cbz	r0, 800c1dc <WIDGET__EFFECT_DrawDownRect+0x34>
 800c1d4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800c1d6:	4620      	mov	r0, r4
 800c1d8:	691b      	ldr	r3, [r3, #16]
 800c1da:	4798      	blx	r3
 800c1dc:	b003      	add	sp, #12
 800c1de:	bd30      	pop	{r4, r5, pc}

0800c1e0 <WIDGET_SetEffect>:
 800c1e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c1e2:	2300      	movs	r3, #0
 800c1e4:	9302      	str	r3, [sp, #8]
 800c1e6:	9103      	str	r1, [sp, #12]
 800c1e8:	f44f 7340 	mov.w	r3, #768	; 0x300
 800c1ec:	4669      	mov	r1, sp
 800c1ee:	9300      	str	r3, [sp, #0]
 800c1f0:	f7f9 fbc9 	bl	8005986 <WM_SendMessage>
 800c1f4:	b005      	add	sp, #20
 800c1f6:	f85d fb04 	ldr.w	pc, [sp], #4

0800c1fa <_DeleteTimer>:
 800c1fa:	b507      	push	{r0, r1, r2, lr}
 800c1fc:	f7ff fb38 	bl	800b870 <GUI_ALLOC_LockH>
 800c200:	9001      	str	r0, [sp, #4]
 800c202:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800c204:	f000 ff93 	bl	800d12e <WM_DeleteTimer>
 800c208:	a802      	add	r0, sp, #8
 800c20a:	2200      	movs	r2, #0
 800c20c:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800c210:	665a      	str	r2, [r3, #100]	; 0x64
 800c212:	65da      	str	r2, [r3, #92]	; 0x5c
 800c214:	f7ff fb3a 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c218:	b003      	add	sp, #12
 800c21a:	f85d fb04 	ldr.w	pc, [sp], #4

0800c21e <SCROLLBAR__Rect2VRect>:
 800c21e:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800c220:	071b      	lsls	r3, r3, #28
 800c222:	b510      	push	{r4, lr}
 800c224:	d512      	bpl.n	800c24c <SCROLLBAR__Rect2VRect+0x2e>
 800c226:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800c22a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c22e:	8808      	ldrh	r0, [r1, #0]
 800c230:	884c      	ldrh	r4, [r1, #2]
 800c232:	800c      	strh	r4, [r1, #0]
 800c234:	1ad3      	subs	r3, r2, r3
 800c236:	888a      	ldrh	r2, [r1, #4]
 800c238:	88cc      	ldrh	r4, [r1, #6]
 800c23a:	808c      	strh	r4, [r1, #4]
 800c23c:	3301      	adds	r3, #1
 800c23e:	b29b      	uxth	r3, r3
 800c240:	43c0      	mvns	r0, r0
 800c242:	43d2      	mvns	r2, r2
 800c244:	4418      	add	r0, r3
 800c246:	4413      	add	r3, r2
 800c248:	80c8      	strh	r0, [r1, #6]
 800c24a:	804b      	strh	r3, [r1, #2]
 800c24c:	bd10      	pop	{r4, pc}

0800c24e <SCROLLBAR__InvalidatePartner>:
 800c24e:	b510      	push	{r4, lr}
 800c250:	4604      	mov	r4, r0
 800c252:	f7f8 fd58 	bl	8004d06 <WM_GetScrollPartner>
 800c256:	f7f9 fcef 	bl	8005c38 <WM_InvalidateWindow>
 800c25a:	4620      	mov	r0, r4
 800c25c:	f7f8 fcfe 	bl	8004c5c <WM_GetParent>
 800c260:	2125      	movs	r1, #37	; 0x25
 800c262:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c266:	f7f8 be8e 	b.w	8004f86 <WM_SendMessageNoPara>
	...

0800c26c <SCROLLBAR_CreateUser>:
 800c26c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c26e:	b089      	sub	sp, #36	; 0x24
 800c270:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800c272:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800c274:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800c276:	b9fa      	cbnz	r2, 800c2b8 <SCROLLBAR_CreateUser+0x4c>
 800c278:	b9f3      	cbnz	r3, 800c2b8 <SCROLLBAR_CreateUser+0x4c>
 800c27a:	4630      	mov	r0, r6
 800c27c:	a906      	add	r1, sp, #24
 800c27e:	f7f8 fcb8 	bl	8004bf2 <WM_GetInsideRectEx>
 800c282:	f014 0f08 	tst.w	r4, #8
 800c286:	4b2c      	ldr	r3, [pc, #176]	; (800c338 <SCROLLBAR_CreateUser+0xcc>)
 800c288:	f9bd 701c 	ldrsh.w	r7, [sp, #28]
 800c28c:	f9bd e01e 	ldrsh.w	lr, [sp, #30]
 800c290:	d009      	beq.n	800c2a6 <SCROLLBAR_CreateUser+0x3a>
 800c292:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800c296:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c29a:	1c78      	adds	r0, r7, #1
 800c29c:	ebc1 030e 	rsb	r3, r1, lr
 800c2a0:	1a80      	subs	r0, r0, r2
 800c2a2:	3301      	adds	r3, #1
 800c2a4:	e008      	b.n	800c2b8 <SCROLLBAR_CreateUser+0x4c>
 800c2a6:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800c2aa:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c2ae:	f10e 0101 	add.w	r1, lr, #1
 800c2b2:	1a3a      	subs	r2, r7, r0
 800c2b4:	1ac9      	subs	r1, r1, r3
 800c2b6:	3201      	adds	r2, #1
 800c2b8:	9600      	str	r6, [sp, #0]
 800c2ba:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800c2bc:	9601      	str	r6, [sp, #4]
 800c2be:	4e1f      	ldr	r6, [pc, #124]	; (800c33c <SCROLLBAR_CreateUser+0xd0>)
 800c2c0:	9602      	str	r6, [sp, #8]
 800c2c2:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800c2c4:	363c      	adds	r6, #60	; 0x3c
 800c2c6:	9603      	str	r6, [sp, #12]
 800c2c8:	f7f9 fce4 	bl	8005c94 <WM_CreateWindowAsChild>
 800c2cc:	4606      	mov	r6, r0
 800c2ce:	2800      	cmp	r0, #0
 800c2d0:	d02f      	beq.n	800c332 <SCROLLBAR_CreateUser+0xc6>
 800c2d2:	f7ff facd 	bl	800b870 <GUI_ALLOC_LockH>
 800c2d6:	f004 0208 	and.w	r2, r4, #8
 800c2da:	06e3      	lsls	r3, r4, #27
 800c2dc:	bf48      	it	mi
 800c2de:	f042 0210 	orrmi.w	r2, r2, #16
 800c2e2:	f1a5 03fe 	sub.w	r3, r5, #254	; 0xfe
 800c2e6:	bf48      	it	mi
 800c2e8:	b292      	uxthmi	r2, r2
 800c2ea:	2b01      	cmp	r3, #1
 800c2ec:	bf88      	it	hi
 800c2ee:	f042 0210 	orrhi.w	r2, r2, #16
 800c2f2:	4629      	mov	r1, r5
 800c2f4:	9005      	str	r0, [sp, #20]
 800c2f6:	f7ff fe41 	bl	800bf7c <WIDGET__Init>
 800c2fa:	4b11      	ldr	r3, [pc, #68]	; (800c340 <SCROLLBAR_CreateUser+0xd4>)
 800c2fc:	af08      	add	r7, sp, #32
 800c2fe:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800c300:	f857 4d0c 	ldr.w	r4, [r7, #-12]!
 800c304:	f104 0534 	add.w	r5, r4, #52	; 0x34
 800c308:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800c30c:	2364      	movs	r3, #100	; 0x64
 800c30e:	64e3      	str	r3, [r4, #76]	; 0x4c
 800c310:	4d0c      	ldr	r5, [pc, #48]	; (800c344 <SCROLLBAR_CreateUser+0xd8>)
 800c312:	230a      	movs	r3, #10
 800c314:	6563      	str	r3, [r4, #84]	; 0x54
 800c316:	2300      	movs	r3, #0
 800c318:	6523      	str	r3, [r4, #80]	; 0x50
 800c31a:	682b      	ldr	r3, [r5, #0]
 800c31c:	6463      	str	r3, [r4, #68]	; 0x44
 800c31e:	4638      	mov	r0, r7
 800c320:	f7ff fab4 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c324:	682b      	ldr	r3, [r5, #0]
 800c326:	4630      	mov	r0, r6
 800c328:	685b      	ldr	r3, [r3, #4]
 800c32a:	4798      	blx	r3
 800c32c:	4630      	mov	r0, r6
 800c32e:	f7ff ff8e 	bl	800c24e <SCROLLBAR__InvalidatePartner>
 800c332:	4630      	mov	r0, r6
 800c334:	b009      	add	sp, #36	; 0x24
 800c336:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c338:	200000e0 	.word	0x200000e0
 800c33c:	0800c427 	.word	0x0800c427
 800c340:	200000cc 	.word	0x200000cc
 800c344:	200000dc 	.word	0x200000dc

0800c348 <SCROLLBAR_CreateEx>:
 800c348:	b510      	push	{r4, lr}
 800c34a:	b086      	sub	sp, #24
 800c34c:	9c08      	ldr	r4, [sp, #32]
 800c34e:	9400      	str	r4, [sp, #0]
 800c350:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800c352:	9401      	str	r4, [sp, #4]
 800c354:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800c356:	9402      	str	r4, [sp, #8]
 800c358:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800c35a:	9403      	str	r4, [sp, #12]
 800c35c:	2400      	movs	r4, #0
 800c35e:	9404      	str	r4, [sp, #16]
 800c360:	f7ff ff84 	bl	800c26c <SCROLLBAR_CreateUser>
 800c364:	b006      	add	sp, #24
 800c366:	bd10      	pop	{r4, pc}

0800c368 <SCROLLBAR_CreateAttached>:
 800c368:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c36a:	f001 0308 	and.w	r3, r1, #8
 800c36e:	2b00      	cmp	r3, #0
 800c370:	f240 348a 	movw	r4, #906	; 0x38a
 800c374:	f240 528a 	movw	r2, #1418	; 0x58a
 800c378:	bf08      	it	eq
 800c37a:	4622      	moveq	r2, r4
 800c37c:	bf0c      	ite	eq
 800c37e:	23ff      	moveq	r3, #255	; 0xff
 800c380:	23fe      	movne	r3, #254	; 0xfe
 800c382:	e88d 0005 	stmia.w	sp, {r0, r2}
 800c386:	2000      	movs	r0, #0
 800c388:	9102      	str	r1, [sp, #8]
 800c38a:	9303      	str	r3, [sp, #12]
 800c38c:	4602      	mov	r2, r0
 800c38e:	4603      	mov	r3, r0
 800c390:	4601      	mov	r1, r0
 800c392:	f7ff ffd9 	bl	800c348 <SCROLLBAR_CreateEx>
 800c396:	2106      	movs	r1, #6
 800c398:	4604      	mov	r4, r0
 800c39a:	f7f8 fe04 	bl	8004fa6 <WM_NotifyParent>
 800c39e:	4620      	mov	r0, r4
 800c3a0:	b004      	add	sp, #16
 800c3a2:	bd10      	pop	{r4, pc}

0800c3a4 <SCROLLBAR_SetValue>:
 800c3a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c3a6:	460c      	mov	r4, r1
 800c3a8:	4605      	mov	r5, r0
 800c3aa:	b300      	cbz	r0, 800c3ee <SCROLLBAR_SetValue+0x4a>
 800c3ac:	f7ff fa60 	bl	800b870 <GUI_ALLOC_LockH>
 800c3b0:	2c00      	cmp	r4, #0
 800c3b2:	9001      	str	r0, [sp, #4]
 800c3b4:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 800c3b6:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800c3b8:	db05      	blt.n	800c3c6 <SCROLLBAR_SetValue+0x22>
 800c3ba:	1a8a      	subs	r2, r1, r2
 800c3bc:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c3c0:	4294      	cmp	r4, r2
 800c3c2:	dc02      	bgt.n	800c3ca <SCROLLBAR_SetValue+0x26>
 800c3c4:	e000      	b.n	800c3c8 <SCROLLBAR_SetValue+0x24>
 800c3c6:	2400      	movs	r4, #0
 800c3c8:	4622      	mov	r2, r4
 800c3ca:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800c3cc:	4291      	cmp	r1, r2
 800c3ce:	d00b      	beq.n	800c3e8 <SCROLLBAR_SetValue+0x44>
 800c3d0:	6502      	str	r2, [r0, #80]	; 0x50
 800c3d2:	4628      	mov	r0, r5
 800c3d4:	f7f9 fc30 	bl	8005c38 <WM_InvalidateWindow>
 800c3d8:	a801      	add	r0, sp, #4
 800c3da:	f7ff fa57 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c3de:	4628      	mov	r0, r5
 800c3e0:	2105      	movs	r1, #5
 800c3e2:	f7f8 fde0 	bl	8004fa6 <WM_NotifyParent>
 800c3e6:	e002      	b.n	800c3ee <SCROLLBAR_SetValue+0x4a>
 800c3e8:	a801      	add	r0, sp, #4
 800c3ea:	f7ff fa4f 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c3ee:	b003      	add	sp, #12
 800c3f0:	bd30      	pop	{r4, r5, pc}

0800c3f2 <SCROLLBAR_AddValue>:
 800c3f2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c3f4:	460d      	mov	r5, r1
 800c3f6:	4606      	mov	r6, r0
 800c3f8:	b160      	cbz	r0, 800c414 <SCROLLBAR_AddValue+0x22>
 800c3fa:	f7ff fa39 	bl	800b870 <GUI_ALLOC_LockH>
 800c3fe:	4602      	mov	r2, r0
 800c400:	a802      	add	r0, sp, #8
 800c402:	6d14      	ldr	r4, [r2, #80]	; 0x50
 800c404:	f840 2d04 	str.w	r2, [r0, #-4]!
 800c408:	f7ff fa40 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c40c:	4630      	mov	r0, r6
 800c40e:	1961      	adds	r1, r4, r5
 800c410:	f7ff ffc8 	bl	800c3a4 <SCROLLBAR_SetValue>
 800c414:	b002      	add	sp, #8
 800c416:	bd70      	pop	{r4, r5, r6, pc}

0800c418 <SCROLLBAR_Dec>:
 800c418:	f04f 31ff 	mov.w	r1, #4294967295
 800c41c:	f7ff bfe9 	b.w	800c3f2 <SCROLLBAR_AddValue>

0800c420 <SCROLLBAR_Inc>:
 800c420:	2101      	movs	r1, #1
 800c422:	f7ff bfe6 	b.w	800c3f2 <SCROLLBAR_AddValue>

0800c426 <SCROLLBAR_Callback>:
 800c426:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c42a:	6844      	ldr	r4, [r0, #4]
 800c42c:	4680      	mov	r8, r0
 800c42e:	b08f      	sub	sp, #60	; 0x3c
 800c430:	4620      	mov	r0, r4
 800c432:	4641      	mov	r1, r8
 800c434:	f7ff fde7 	bl	800c006 <WIDGET_HandleActive>
 800c438:	2800      	cmp	r0, #0
 800c43a:	f000 81c0 	beq.w	800c7be <SCROLLBAR_Callback+0x398>
 800c43e:	f8d8 3000 	ldr.w	r3, [r8]
 800c442:	2b23      	cmp	r3, #35	; 0x23
 800c444:	f000 8182 	beq.w	800c74c <SCROLLBAR_Callback+0x326>
 800c448:	dc0b      	bgt.n	800c462 <SCROLLBAR_Callback+0x3c>
 800c44a:	2b0e      	cmp	r3, #14
 800c44c:	f000 812a 	beq.w	800c6a4 <SCROLLBAR_Callback+0x27e>
 800c450:	2b0f      	cmp	r3, #15
 800c452:	d012      	beq.n	800c47a <SCROLLBAR_Callback+0x54>
 800c454:	2b0b      	cmp	r3, #11
 800c456:	f040 81af 	bne.w	800c7b8 <SCROLLBAR_Callback+0x392>
 800c45a:	4620      	mov	r0, r4
 800c45c:	f7ff fef7 	bl	800c24e <SCROLLBAR__InvalidatePartner>
 800c460:	e1aa      	b.n	800c7b8 <SCROLLBAR_Callback+0x392>
 800c462:	f240 1213 	movw	r2, #275	; 0x113
 800c466:	4293      	cmp	r3, r2
 800c468:	f000 817f 	beq.w	800c76a <SCROLLBAR_Callback+0x344>
 800c46c:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800c470:	d012      	beq.n	800c498 <SCROLLBAR_Callback+0x72>
 800c472:	2b24      	cmp	r3, #36	; 0x24
 800c474:	f040 81a0 	bne.w	800c7b8 <SCROLLBAR_Callback+0x392>
 800c478:	e143      	b.n	800c702 <SCROLLBAR_Callback+0x2dc>
 800c47a:	4620      	mov	r0, r4
 800c47c:	f7ff f9f8 	bl	800b870 <GUI_ALLOC_LockH>
 800c480:	9005      	str	r0, [sp, #20]
 800c482:	2800      	cmp	r0, #0
 800c484:	f000 819b 	beq.w	800c7be <SCROLLBAR_Callback+0x398>
 800c488:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800c48a:	a805      	add	r0, sp, #20
 800c48c:	681d      	ldr	r5, [r3, #0]
 800c48e:	f7ff f9fd 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c492:	4620      	mov	r0, r4
 800c494:	47a8      	blx	r5
 800c496:	e192      	b.n	800c7be <SCROLLBAR_Callback+0x398>
 800c498:	f8d8 700c 	ldr.w	r7, [r8, #12]
 800c49c:	2f00      	cmp	r7, #0
 800c49e:	f000 818b 	beq.w	800c7b8 <SCROLLBAR_Callback+0x392>
 800c4a2:	7a3b      	ldrb	r3, [r7, #8]
 800c4a4:	4620      	mov	r0, r4
 800c4a6:	2b00      	cmp	r3, #0
 800c4a8:	f000 80d6 	beq.w	800c658 <SCROLLBAR_Callback+0x232>
 800c4ac:	f7ff f9e0 	bl	800b870 <GUI_ALLOC_LockH>
 800c4b0:	a905      	add	r1, sp, #20
 800c4b2:	6c83      	ldr	r3, [r0, #72]	; 0x48
 800c4b4:	9003      	str	r0, [sp, #12]
 800c4b6:	6d06      	ldr	r6, [r0, #80]	; 0x50
 800c4b8:	4620      	mov	r0, r4
 800c4ba:	4798      	blx	r3
 800c4bc:	9b03      	ldr	r3, [sp, #12]
 800c4be:	f8b3 a032 	ldrh.w	sl, [r3, #50]	; 0x32
 800c4c2:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 800c4c4:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800c4c6:	f01a 0f08 	tst.w	sl, #8
 800c4ca:	ebc5 0902 	rsb	r9, r5, r2
 800c4ce:	d003      	beq.n	800c4d8 <SCROLLBAR_Callback+0xb2>
 800c4d0:	e897 0006 	ldmia.w	r7, {r1, r2}
 800c4d4:	603a      	str	r2, [r7, #0]
 800c4d6:	6079      	str	r1, [r7, #4]
 800c4d8:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800c4da:	683f      	ldr	r7, [r7, #0]
 800c4dc:	2a03      	cmp	r2, #3
 800c4de:	d114      	bne.n	800c50a <SCROLLBAR_Callback+0xe4>
 800c4e0:	4620      	mov	r0, r4
 800c4e2:	f7ff fe8a 	bl	800c1fa <_DeleteTimer>
 800c4e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c4e8:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c4ea:	2002      	movs	r0, #2
 800c4ec:	fb93 f3f0 	sdiv	r3, r3, r0
 800c4f0:	1aff      	subs	r7, r7, r3
 800c4f2:	9b06      	ldr	r3, [sp, #24]
 800c4f4:	1afb      	subs	r3, r7, r3
 800c4f6:	1e58      	subs	r0, r3, #1
 800c4f8:	fb00 f009 	mul.w	r0, r0, r9
 800c4fc:	f7fc fe44 	bl	8009188 <GUI__DivideRound32>
 800c500:	9b03      	ldr	r3, [sp, #12]
 800c502:	4606      	mov	r6, r0
 800c504:	6618      	str	r0, [r3, #96]	; 0x60
 800c506:	a803      	add	r0, sp, #12
 800c508:	e07e      	b.n	800c608 <SCROLLBAR_Callback+0x1e2>
 800c50a:	9806      	ldr	r0, [sp, #24]
 800c50c:	4287      	cmp	r7, r0
 800c50e:	dc0b      	bgt.n	800c528 <SCROLLBAR_Callback+0x102>
 800c510:	2a02      	cmp	r2, #2
 800c512:	d039      	beq.n	800c588 <SCROLLBAR_Callback+0x162>
 800c514:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c516:	b113      	cbz	r3, 800c51e <SCROLLBAR_Callback+0xf8>
 800c518:	4620      	mov	r0, r4
 800c51a:	f7ff fe6e 	bl	800c1fa <_DeleteTimer>
 800c51e:	9b03      	ldr	r3, [sp, #12]
 800c520:	2202      	movs	r2, #2
 800c522:	3e01      	subs	r6, #1
 800c524:	659a      	str	r2, [r3, #88]	; 0x58
 800c526:	e02f      	b.n	800c588 <SCROLLBAR_Callback+0x162>
 800c528:	9907      	ldr	r1, [sp, #28]
 800c52a:	428f      	cmp	r7, r1
 800c52c:	da02      	bge.n	800c534 <SCROLLBAR_Callback+0x10e>
 800c52e:	1b76      	subs	r6, r6, r5
 800c530:	426d      	negs	r5, r5
 800c532:	e02f      	b.n	800c594 <SCROLLBAR_Callback+0x16e>
 800c534:	9908      	ldr	r1, [sp, #32]
 800c536:	428f      	cmp	r7, r1
 800c538:	dc12      	bgt.n	800c560 <SCROLLBAR_Callback+0x13a>
 800c53a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c53c:	2900      	cmp	r1, #0
 800c53e:	dd0b      	ble.n	800c558 <SCROLLBAR_Callback+0x132>
 800c540:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c542:	2202      	movs	r2, #2
 800c544:	fb93 f3f2 	sdiv	r3, r3, r2
 800c548:	1aff      	subs	r7, r7, r3
 800c54a:	1a3f      	subs	r7, r7, r0
 800c54c:	3f01      	subs	r7, #1
 800c54e:	fb07 f009 	mul.w	r0, r7, r9
 800c552:	f7fc fe19 	bl	8009188 <GUI__DivideRound32>
 800c556:	4606      	mov	r6, r0
 800c558:	9b03      	ldr	r3, [sp, #12]
 800c55a:	2203      	movs	r2, #3
 800c55c:	659a      	str	r2, [r3, #88]	; 0x58
 800c55e:	e016      	b.n	800c58e <SCROLLBAR_Callback+0x168>
 800c560:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c562:	428f      	cmp	r7, r1
 800c564:	da01      	bge.n	800c56a <SCROLLBAR_Callback+0x144>
 800c566:	442e      	add	r6, r5
 800c568:	e014      	b.n	800c594 <SCROLLBAR_Callback+0x16e>
 800c56a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800c56c:	428f      	cmp	r7, r1
 800c56e:	dc0e      	bgt.n	800c58e <SCROLLBAR_Callback+0x168>
 800c570:	2a01      	cmp	r2, #1
 800c572:	d00e      	beq.n	800c592 <SCROLLBAR_Callback+0x16c>
 800c574:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c576:	b113      	cbz	r3, 800c57e <SCROLLBAR_Callback+0x158>
 800c578:	4620      	mov	r0, r4
 800c57a:	f7ff fe3e 	bl	800c1fa <_DeleteTimer>
 800c57e:	9b03      	ldr	r3, [sp, #12]
 800c580:	2501      	movs	r5, #1
 800c582:	3601      	adds	r6, #1
 800c584:	659d      	str	r5, [r3, #88]	; 0x58
 800c586:	e005      	b.n	800c594 <SCROLLBAR_Callback+0x16e>
 800c588:	f04f 35ff 	mov.w	r5, #4294967295
 800c58c:	e002      	b.n	800c594 <SCROLLBAR_Callback+0x16e>
 800c58e:	2500      	movs	r5, #0
 800c590:	e000      	b.n	800c594 <SCROLLBAR_Callback+0x16e>
 800c592:	4615      	mov	r5, r2
 800c594:	f8dd b00c 	ldr.w	fp, [sp, #12]
 800c598:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c59a:	f8db 305c 	ldr.w	r3, [fp, #92]	; 0x5c
 800c59e:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 800c5a2:	9a06      	ldr	r2, [sp, #24]
 800c5a4:	b171      	cbz	r1, 800c5c4 <SCROLLBAR_Callback+0x19e>
 800c5a6:	2002      	movs	r0, #2
 800c5a8:	fb9e f0f0 	sdiv	r0, lr, r0
 800c5ac:	1a38      	subs	r0, r7, r0
 800c5ae:	1a80      	subs	r0, r0, r2
 800c5b0:	3801      	subs	r0, #1
 800c5b2:	fb00 f009 	mul.w	r0, r0, r9
 800c5b6:	9301      	str	r3, [sp, #4]
 800c5b8:	f7fc fde6 	bl	8009188 <GUI__DivideRound32>
 800c5bc:	9b01      	ldr	r3, [sp, #4]
 800c5be:	f8cb 0060 	str.w	r0, [fp, #96]	; 0x60
 800c5c2:	e009      	b.n	800c5d8 <SCROLLBAR_Callback+0x1b2>
 800c5c4:	f8db 2058 	ldr.w	r2, [fp, #88]	; 0x58
 800c5c8:	2a01      	cmp	r2, #1
 800c5ca:	bf04      	itt	eq
 800c5cc:	f8db 104c 	ldreq.w	r1, [fp, #76]	; 0x4c
 800c5d0:	f101 31ff 	addeq.w	r1, r1, #4294967295
 800c5d4:	f8cb 1060 	str.w	r1, [fp, #96]	; 0x60
 800c5d8:	a803      	add	r0, sp, #12
 800c5da:	9301      	str	r3, [sp, #4]
 800c5dc:	f7ff f956 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c5e0:	9b01      	ldr	r3, [sp, #4]
 800c5e2:	b1a5      	cbz	r5, 800c60e <SCROLLBAR_Callback+0x1e8>
 800c5e4:	b9bb      	cbnz	r3, 800c616 <SCROLLBAR_Callback+0x1f0>
 800c5e6:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800c5ea:	f240 41d2 	movw	r1, #1234	; 0x4d2
 800c5ee:	4620      	mov	r0, r4
 800c5f0:	f000 fdd6 	bl	800d1a0 <WM_CreateTimer>
 800c5f4:	4607      	mov	r7, r0
 800c5f6:	4620      	mov	r0, r4
 800c5f8:	f7ff f93a 	bl	800b870 <GUI_ALLOC_LockH>
 800c5fc:	4602      	mov	r2, r0
 800c5fe:	a80e      	add	r0, sp, #56	; 0x38
 800c600:	f840 2d28 	str.w	r2, [r0, #-40]!
 800c604:	6657      	str	r7, [r2, #100]	; 0x64
 800c606:	65d5      	str	r5, [r2, #92]	; 0x5c
 800c608:	f7ff f940 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c60c:	e003      	b.n	800c616 <SCROLLBAR_Callback+0x1f0>
 800c60e:	b113      	cbz	r3, 800c616 <SCROLLBAR_Callback+0x1f0>
 800c610:	4620      	mov	r0, r4
 800c612:	f7ff fdf2 	bl	800c1fa <_DeleteTimer>
 800c616:	4620      	mov	r0, r4
 800c618:	2101      	movs	r1, #1
 800c61a:	f7f8 f991 	bl	8004940 <WM_SetCapture>
 800c61e:	4620      	mov	r0, r4
 800c620:	4631      	mov	r1, r6
 800c622:	f7ff febf 	bl	800c3a4 <SCROLLBAR_SetValue>
 800c626:	f41a 7f80 	tst.w	sl, #256	; 0x100
 800c62a:	f040 80c5 	bne.w	800c7b8 <SCROLLBAR_Callback+0x392>
 800c62e:	4620      	mov	r0, r4
 800c630:	f7ff f91e 	bl	800b870 <GUI_ALLOC_LockH>
 800c634:	ab0e      	add	r3, sp, #56	; 0x38
 800c636:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800c638:	f843 0d28 	str.w	r0, [r3, #-40]!
 800c63c:	4618      	mov	r0, r3
 800c63e:	f7ff f925 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c642:	f44f 7180 	mov.w	r1, #256	; 0x100
 800c646:	4620      	mov	r0, r4
 800c648:	f7ff fcb2 	bl	800bfb0 <WIDGET_OrState>
 800c64c:	07a9      	lsls	r1, r5, #30
 800c64e:	f140 80b3 	bpl.w	800c7b8 <SCROLLBAR_Callback+0x392>
 800c652:	4620      	mov	r0, r4
 800c654:	2101      	movs	r1, #1
 800c656:	e074      	b.n	800c742 <SCROLLBAR_Callback+0x31c>
 800c658:	f7ff f90a 	bl	800b870 <GUI_ALLOC_LockH>
 800c65c:	8e45      	ldrh	r5, [r0, #50]	; 0x32
 800c65e:	9003      	str	r0, [sp, #12]
 800c660:	a803      	add	r0, sp, #12
 800c662:	f7ff f913 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c666:	05ea      	lsls	r2, r5, #23
 800c668:	f140 80a6 	bpl.w	800c7b8 <SCROLLBAR_Callback+0x392>
 800c66c:	4620      	mov	r0, r4
 800c66e:	f44f 7180 	mov.w	r1, #256	; 0x100
 800c672:	f7ff fcb3 	bl	800bfdc <WIDGET_AndState>
 800c676:	4620      	mov	r0, r4
 800c678:	f7ff f8fa 	bl	800b870 <GUI_ALLOC_LockH>
 800c67c:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 800c67e:	9005      	str	r0, [sp, #20]
 800c680:	b113      	cbz	r3, 800c688 <SCROLLBAR_Callback+0x262>
 800c682:	4620      	mov	r0, r4
 800c684:	f7ff fdb9 	bl	800c1fa <_DeleteTimer>
 800c688:	a80e      	add	r0, sp, #56	; 0x38
 800c68a:	2200      	movs	r2, #0
 800c68c:	f850 3d24 	ldr.w	r3, [r0, #-36]!
 800c690:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800c692:	659a      	str	r2, [r3, #88]	; 0x58
 800c694:	f7ff f8fa 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c698:	07ab      	lsls	r3, r5, #30
 800c69a:	f140 808d 	bpl.w	800c7b8 <SCROLLBAR_Callback+0x392>
 800c69e:	4620      	mov	r0, r4
 800c6a0:	2102      	movs	r1, #2
 800c6a2:	e04e      	b.n	800c742 <SCROLLBAR_Callback+0x31c>
 800c6a4:	4620      	mov	r0, r4
 800c6a6:	f7ff f8e3 	bl	800b870 <GUI_ALLOC_LockH>
 800c6aa:	ab0e      	add	r3, sp, #56	; 0x38
 800c6ac:	6d45      	ldr	r5, [r0, #84]	; 0x54
 800c6ae:	f843 0d24 	str.w	r0, [r3, #-36]!
 800c6b2:	4618      	mov	r0, r3
 800c6b4:	f7ff f8ea 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c6b8:	f8d8 200c 	ldr.w	r2, [r8, #12]
 800c6bc:	6813      	ldr	r3, [r2, #0]
 800c6be:	6852      	ldr	r2, [r2, #4]
 800c6c0:	2a00      	cmp	r2, #0
 800c6c2:	dd79      	ble.n	800c7b8 <SCROLLBAR_Callback+0x392>
 800c6c4:	3b10      	subs	r3, #16
 800c6c6:	2b12      	cmp	r3, #18
 800c6c8:	d876      	bhi.n	800c7b8 <SCROLLBAR_Callback+0x392>
 800c6ca:	e8df f003 	tbb	[pc, r3]
 800c6ce:	1616      	.short	0x1616
 800c6d0:	75751212 	.word	0x75751212
 800c6d4:	75757575 	.word	0x75757575
 800c6d8:	75757575 	.word	0x75757575
 800c6dc:	0a757575 	.word	0x0a757575
 800c6e0:	0d          	.byte	0x0d
 800c6e1:	00          	.byte	0x00
 800c6e2:	4620      	mov	r0, r4
 800c6e4:	4629      	mov	r1, r5
 800c6e6:	e001      	b.n	800c6ec <SCROLLBAR_Callback+0x2c6>
 800c6e8:	4620      	mov	r0, r4
 800c6ea:	4269      	negs	r1, r5
 800c6ec:	f7ff fe81 	bl	800c3f2 <SCROLLBAR_AddValue>
 800c6f0:	e062      	b.n	800c7b8 <SCROLLBAR_Callback+0x392>
 800c6f2:	4620      	mov	r0, r4
 800c6f4:	f7ff fe94 	bl	800c420 <SCROLLBAR_Inc>
 800c6f8:	e05e      	b.n	800c7b8 <SCROLLBAR_Callback+0x392>
 800c6fa:	4620      	mov	r0, r4
 800c6fc:	f7ff fe8c 	bl	800c418 <SCROLLBAR_Dec>
 800c700:	e05a      	b.n	800c7b8 <SCROLLBAR_Callback+0x392>
 800c702:	4620      	mov	r0, r4
 800c704:	f8d8 600c 	ldr.w	r6, [r8, #12]
 800c708:	f7ff f8b2 	bl	800b870 <GUI_ALLOC_LockH>
 800c70c:	ad0e      	add	r5, sp, #56	; 0x38
 800c70e:	4603      	mov	r3, r0
 800c710:	f845 0d24 	str.w	r0, [r5, #-36]!
 800c714:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800c716:	6830      	ldr	r0, [r6, #0]
 800c718:	68b1      	ldr	r1, [r6, #8]
 800c71a:	4290      	cmp	r0, r2
 800c71c:	6872      	ldr	r2, [r6, #4]
 800c71e:	d105      	bne.n	800c72c <SCROLLBAR_Callback+0x306>
 800c720:	6d5e      	ldr	r6, [r3, #84]	; 0x54
 800c722:	428e      	cmp	r6, r1
 800c724:	d102      	bne.n	800c72c <SCROLLBAR_Callback+0x306>
 800c726:	6d1e      	ldr	r6, [r3, #80]	; 0x50
 800c728:	4296      	cmp	r6, r2
 800c72a:	d00d      	beq.n	800c748 <SCROLLBAR_Callback+0x322>
 800c72c:	64d8      	str	r0, [r3, #76]	; 0x4c
 800c72e:	6559      	str	r1, [r3, #84]	; 0x54
 800c730:	651a      	str	r2, [r3, #80]	; 0x50
 800c732:	4620      	mov	r0, r4
 800c734:	f7f9 fa80 	bl	8005c38 <WM_InvalidateWindow>
 800c738:	4628      	mov	r0, r5
 800c73a:	f7ff f8a7 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c73e:	4620      	mov	r0, r4
 800c740:	2105      	movs	r1, #5
 800c742:	f7f8 fc30 	bl	8004fa6 <WM_NotifyParent>
 800c746:	e037      	b.n	800c7b8 <SCROLLBAR_Callback+0x392>
 800c748:	4628      	mov	r0, r5
 800c74a:	e033      	b.n	800c7b4 <SCROLLBAR_Callback+0x38e>
 800c74c:	4620      	mov	r0, r4
 800c74e:	f7ff f88f 	bl	800b870 <GUI_ALLOC_LockH>
 800c752:	9005      	str	r0, [sp, #20]
 800c754:	2800      	cmp	r0, #0
 800c756:	d02f      	beq.n	800c7b8 <SCROLLBAR_Callback+0x392>
 800c758:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800c75c:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800c75e:	601a      	str	r2, [r3, #0]
 800c760:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800c762:	609a      	str	r2, [r3, #8]
 800c764:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c766:	605a      	str	r2, [r3, #4]
 800c768:	e023      	b.n	800c7b2 <SCROLLBAR_Callback+0x38c>
 800c76a:	4620      	mov	r0, r4
 800c76c:	f7ff f880 	bl	800b870 <GUI_ALLOC_LockH>
 800c770:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 800c772:	9005      	str	r0, [sp, #20]
 800c774:	b111      	cbz	r1, 800c77c <SCROLLBAR_Callback+0x356>
 800c776:	4620      	mov	r0, r4
 800c778:	f7ff fe3b 	bl	800c3f2 <SCROLLBAR_AddValue>
 800c77c:	9b05      	ldr	r3, [sp, #20]
 800c77e:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800c780:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800c782:	2a00      	cmp	r2, #0
 800c784:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800c786:	dd05      	ble.n	800c794 <SCROLLBAR_Callback+0x36e>
 800c788:	4291      	cmp	r1, r2
 800c78a:	bfb4      	ite	lt
 800c78c:	2100      	movlt	r1, #0
 800c78e:	2101      	movge	r1, #1
 800c790:	dd06      	ble.n	800c7a0 <SCROLLBAR_Callback+0x37a>
 800c792:	e004      	b.n	800c79e <SCROLLBAR_Callback+0x378>
 800c794:	4291      	cmp	r1, r2
 800c796:	bfcc      	ite	gt
 800c798:	2100      	movgt	r1, #0
 800c79a:	2101      	movle	r1, #1
 800c79c:	da00      	bge.n	800c7a0 <SCROLLBAR_Callback+0x37a>
 800c79e:	651a      	str	r2, [r3, #80]	; 0x50
 800c7a0:	b119      	cbz	r1, 800c7aa <SCROLLBAR_Callback+0x384>
 800c7a2:	4620      	mov	r0, r4
 800c7a4:	f7ff fd29 	bl	800c1fa <_DeleteTimer>
 800c7a8:	e003      	b.n	800c7b2 <SCROLLBAR_Callback+0x38c>
 800c7aa:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800c7ac:	2132      	movs	r1, #50	; 0x32
 800c7ae:	f000 fd27 	bl	800d200 <WM_RestartTimer>
 800c7b2:	a805      	add	r0, sp, #20
 800c7b4:	f7ff f86a 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c7b8:	4640      	mov	r0, r8
 800c7ba:	f7f9 fe6b 	bl	8006494 <WM_DefaultProc>
 800c7be:	b00f      	add	sp, #60	; 0x3c
 800c7c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c7c4 <SCROLLBAR_GetValue>:
 800c7c4:	b513      	push	{r0, r1, r4, lr}
 800c7c6:	4604      	mov	r4, r0
 800c7c8:	b140      	cbz	r0, 800c7dc <SCROLLBAR_GetValue+0x18>
 800c7ca:	f7ff f851 	bl	800b870 <GUI_ALLOC_LockH>
 800c7ce:	ab02      	add	r3, sp, #8
 800c7d0:	6d04      	ldr	r4, [r0, #80]	; 0x50
 800c7d2:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c7d6:	4618      	mov	r0, r3
 800c7d8:	f7ff f858 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c7dc:	4620      	mov	r0, r4
 800c7de:	b002      	add	sp, #8
 800c7e0:	bd10      	pop	{r4, pc}
	...

0800c7e4 <PROGBAR_DrawSkinFlex>:
 800c7e4:	6843      	ldr	r3, [r0, #4]
 800c7e6:	2b0b      	cmp	r3, #11
 800c7e8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c7ec:	4604      	mov	r4, r0
 800c7ee:	6a06      	ldr	r6, [r0, #32]
 800c7f0:	d006      	beq.n	800c800 <PROGBAR_DrawSkinFlex+0x1c>
 800c7f2:	2b12      	cmp	r3, #18
 800c7f4:	f000 8094 	beq.w	800c920 <PROGBAR_DrawSkinFlex+0x13c>
 800c7f8:	2b05      	cmp	r3, #5
 800c7fa:	f040 80a0 	bne.w	800c93e <PROGBAR_DrawSkinFlex+0x15a>
 800c7fe:	e01c      	b.n	800c83a <PROGBAR_DrawSkinFlex+0x56>
 800c800:	4b51      	ldr	r3, [pc, #324]	; (800c948 <PROGBAR_DrawSkinFlex+0x164>)
 800c802:	6a18      	ldr	r0, [r3, #32]
 800c804:	f7fe fbd3 	bl	800afae <GUI_SetColor>
 800c808:	6960      	ldr	r0, [r4, #20]
 800c80a:	6921      	ldr	r1, [r4, #16]
 800c80c:	69a2      	ldr	r2, [r4, #24]
 800c80e:	f7fd fcad 	bl	800a16c <GUI_DrawHLine>
 800c812:	69e0      	ldr	r0, [r4, #28]
 800c814:	6921      	ldr	r1, [r4, #16]
 800c816:	69a2      	ldr	r2, [r4, #24]
 800c818:	f7fd fca8 	bl	800a16c <GUI_DrawHLine>
 800c81c:	6961      	ldr	r1, [r4, #20]
 800c81e:	69e2      	ldr	r2, [r4, #28]
 800c820:	6920      	ldr	r0, [r4, #16]
 800c822:	3101      	adds	r1, #1
 800c824:	3a01      	subs	r2, #1
 800c826:	f7fd fcfb 	bl	800a220 <GUI_DrawVLine>
 800c82a:	6961      	ldr	r1, [r4, #20]
 800c82c:	69e2      	ldr	r2, [r4, #28]
 800c82e:	69a0      	ldr	r0, [r4, #24]
 800c830:	3101      	adds	r1, #1
 800c832:	3a01      	subs	r2, #1
 800c834:	f7fd fcf4 	bl	800a220 <GUI_DrawVLine>
 800c838:	e081      	b.n	800c93e <PROGBAR_DrawSkinFlex+0x15a>
 800c83a:	6830      	ldr	r0, [r6, #0]
 800c83c:	4d42      	ldr	r5, [pc, #264]	; (800c948 <PROGBAR_DrawSkinFlex+0x164>)
 800c83e:	6967      	ldr	r7, [r4, #20]
 800c840:	69e3      	ldr	r3, [r4, #28]
 800c842:	6922      	ldr	r2, [r4, #16]
 800c844:	f8d4 9018 	ldr.w	r9, [r4, #24]
 800c848:	6871      	ldr	r1, [r6, #4]
 800c84a:	2800      	cmp	r0, #0
 800c84c:	d034      	beq.n	800c8b8 <PROGBAR_DrawSkinFlex+0xd4>
 800c84e:	ebc2 0909 	rsb	r9, r2, r9
 800c852:	f109 0901 	add.w	r9, r9, #1
 800c856:	ea4f 0969 	mov.w	r9, r9, asr #1
 800c85a:	b929      	cbnz	r1, 800c868 <PROGBAR_DrawSkinFlex+0x84>
 800c85c:	468e      	mov	lr, r1
 800c85e:	f8d5 c010 	ldr.w	ip, [r5, #16]
 800c862:	6968      	ldr	r0, [r5, #20]
 800c864:	2101      	movs	r1, #1
 800c866:	e005      	b.n	800c874 <PROGBAR_DrawSkinFlex+0x90>
 800c868:	f8d5 c000 	ldr.w	ip, [r5]
 800c86c:	6868      	ldr	r0, [r5, #4]
 800c86e:	f04f 0e01 	mov.w	lr, #1
 800c872:	2100      	movs	r1, #0
 800c874:	9001      	str	r0, [sp, #4]
 800c876:	ebce 0303 	rsb	r3, lr, r3
 800c87a:	1c50      	adds	r0, r2, #1
 800c87c:	f8cd c000 	str.w	ip, [sp]
 800c880:	4439      	add	r1, r7
 800c882:	444a      	add	r2, r9
 800c884:	f002 ff9c 	bl	800f7c0 <GUI_DrawGradientH>
 800c888:	6873      	ldr	r3, [r6, #4]
 800c88a:	b91b      	cbnz	r3, 800c894 <PROGBAR_DrawSkinFlex+0xb0>
 800c88c:	69ae      	ldr	r6, [r5, #24]
 800c88e:	69ed      	ldr	r5, [r5, #28]
 800c890:	2101      	movs	r1, #1
 800c892:	e003      	b.n	800c89c <PROGBAR_DrawSkinFlex+0xb8>
 800c894:	68ae      	ldr	r6, [r5, #8]
 800c896:	68ed      	ldr	r5, [r5, #12]
 800c898:	2301      	movs	r3, #1
 800c89a:	2100      	movs	r1, #0
 800c89c:	6920      	ldr	r0, [r4, #16]
 800c89e:	6967      	ldr	r7, [r4, #20]
 800c8a0:	69a2      	ldr	r2, [r4, #24]
 800c8a2:	69e4      	ldr	r4, [r4, #28]
 800c8a4:	9600      	str	r6, [sp, #0]
 800c8a6:	4448      	add	r0, r9
 800c8a8:	9501      	str	r5, [sp, #4]
 800c8aa:	3001      	adds	r0, #1
 800c8ac:	4439      	add	r1, r7
 800c8ae:	3a01      	subs	r2, #1
 800c8b0:	1ae3      	subs	r3, r4, r3
 800c8b2:	f002 ff85 	bl	800f7c0 <GUI_DrawGradientH>
 800c8b6:	e042      	b.n	800c93e <PROGBAR_DrawSkinFlex+0x15a>
 800c8b8:	ebc7 0803 	rsb	r8, r7, r3
 800c8bc:	f108 0801 	add.w	r8, r8, #1
 800c8c0:	ea4f 0868 	mov.w	r8, r8, asr #1
 800c8c4:	b921      	cbnz	r1, 800c8d0 <PROGBAR_DrawSkinFlex+0xec>
 800c8c6:	e895 5000 	ldmia.w	r5, {ip, lr}
 800c8ca:	460b      	mov	r3, r1
 800c8cc:	2001      	movs	r0, #1
 800c8ce:	e004      	b.n	800c8da <PROGBAR_DrawSkinFlex+0xf6>
 800c8d0:	f8d5 c010 	ldr.w	ip, [r5, #16]
 800c8d4:	f8d5 e014 	ldr.w	lr, [r5, #20]
 800c8d8:	2301      	movs	r3, #1
 800c8da:	4410      	add	r0, r2
 800c8dc:	e88d 5000 	stmia.w	sp, {ip, lr}
 800c8e0:	ebc3 0209 	rsb	r2, r3, r9
 800c8e4:	1c79      	adds	r1, r7, #1
 800c8e6:	eb07 0308 	add.w	r3, r7, r8
 800c8ea:	f002 ff37 	bl	800f75c <GUI_DrawGradientV>
 800c8ee:	6872      	ldr	r2, [r6, #4]
 800c8f0:	b91a      	cbnz	r2, 800c8fa <PROGBAR_DrawSkinFlex+0x116>
 800c8f2:	68ae      	ldr	r6, [r5, #8]
 800c8f4:	68ed      	ldr	r5, [r5, #12]
 800c8f6:	2001      	movs	r0, #1
 800c8f8:	e003      	b.n	800c902 <PROGBAR_DrawSkinFlex+0x11e>
 800c8fa:	69ae      	ldr	r6, [r5, #24]
 800c8fc:	69ed      	ldr	r5, [r5, #28]
 800c8fe:	2201      	movs	r2, #1
 800c900:	2000      	movs	r0, #0
 800c902:	6961      	ldr	r1, [r4, #20]
 800c904:	f8d4 e010 	ldr.w	lr, [r4, #16]
 800c908:	69a7      	ldr	r7, [r4, #24]
 800c90a:	69e3      	ldr	r3, [r4, #28]
 800c90c:	9600      	str	r6, [sp, #0]
 800c90e:	4441      	add	r1, r8
 800c910:	9501      	str	r5, [sp, #4]
 800c912:	4470      	add	r0, lr
 800c914:	3101      	adds	r1, #1
 800c916:	1aba      	subs	r2, r7, r2
 800c918:	3b01      	subs	r3, #1
 800c91a:	f002 ff1f 	bl	800f75c <GUI_DrawGradientV>
 800c91e:	e00e      	b.n	800c93e <PROGBAR_DrawSkinFlex+0x15a>
 800c920:	6833      	ldr	r3, [r6, #0]
 800c922:	b963      	cbnz	r3, 800c93e <PROGBAR_DrawSkinFlex+0x15a>
 800c924:	4b08      	ldr	r3, [pc, #32]	; (800c948 <PROGBAR_DrawSkinFlex+0x164>)
 800c926:	68b5      	ldr	r5, [r6, #8]
 800c928:	6a58      	ldr	r0, [r3, #36]	; 0x24
 800c92a:	f7fe fb40 	bl	800afae <GUI_SetColor>
 800c92e:	2002      	movs	r0, #2
 800c930:	f7fe fb78 	bl	800b024 <GUI_SetTextMode>
 800c934:	4628      	mov	r0, r5
 800c936:	6921      	ldr	r1, [r4, #16]
 800c938:	6962      	ldr	r2, [r4, #20]
 800c93a:	f7fd fe4d 	bl	800a5d8 <GUI_DispStringAt>
 800c93e:	2000      	movs	r0, #0
 800c940:	b003      	add	sp, #12
 800c942:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c946:	bf00      	nop
 800c948:	200000e4 	.word	0x200000e4

0800c94c <_Create>:
 800c94c:	b530      	push	{r4, r5, lr}
 800c94e:	b08b      	sub	sp, #44	; 0x2c
 800c950:	4605      	mov	r5, r0
 800c952:	f7fe ff8d 	bl	800b870 <GUI_ALLOC_LockH>
 800c956:	ab0a      	add	r3, sp, #40	; 0x28
 800c958:	6e42      	ldr	r2, [r0, #100]	; 0x64
 800c95a:	f843 0d28 	str.w	r0, [r3, #-40]!
 800c95e:	4668      	mov	r0, sp
 800c960:	6894      	ldr	r4, [r2, #8]
 800c962:	f7fe ff93 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c966:	a80a      	add	r0, sp, #40	; 0x28
 800c968:	2300      	movs	r3, #0
 800c96a:	9302      	str	r3, [sp, #8]
 800c96c:	f840 5d24 	str.w	r5, [r0, #-36]!
 800c970:	6823      	ldr	r3, [r4, #0]
 800c972:	4798      	blx	r3
 800c974:	b00b      	add	sp, #44	; 0x2c
 800c976:	bd30      	pop	{r4, r5, pc}

0800c978 <_Paint>:
 800c978:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c97c:	b093      	sub	sp, #76	; 0x4c
 800c97e:	4604      	mov	r4, r0
 800c980:	f7fe ff76 	bl	800b870 <GUI_ALLOC_LockH>
 800c984:	f890 2068 	ldrb.w	r2, [r0, #104]	; 0x68
 800c988:	6b41      	ldr	r1, [r0, #52]	; 0x34
 800c98a:	6e06      	ldr	r6, [r0, #96]	; 0x60
 800c98c:	9000      	str	r0, [sp, #0]
 800c98e:	f002 0201 	and.w	r2, r2, #1
 800c992:	9206      	str	r2, [sp, #24]
 800c994:	f8d0 904c 	ldr.w	r9, [r0, #76]	; 0x4c
 800c998:	f7f6 faf7 	bl	8002f8a <PROGBAR__Value2Pos>
 800c99c:	af02      	add	r7, sp, #8
 800c99e:	4680      	mov	r8, r0
 800c9a0:	4668      	mov	r0, sp
 800c9a2:	f7fe ff73 	bl	800b88c <GUI_ALLOC_UnlockH>
 800c9a6:	ab06      	add	r3, sp, #24
 800c9a8:	4639      	mov	r1, r7
 800c9aa:	4620      	mov	r0, r4
 800c9ac:	9311      	str	r3, [sp, #68]	; 0x44
 800c9ae:	f7f8 f87a 	bl	8004aa6 <WM_GetClientRectEx>
 800c9b2:	230b      	movs	r3, #11
 800c9b4:	930a      	str	r3, [sp, #40]	; 0x28
 800c9b6:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800c9ba:	930d      	str	r3, [sp, #52]	; 0x34
 800c9bc:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800c9c0:	930e      	str	r3, [sp, #56]	; 0x38
 800c9c2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c9c6:	930f      	str	r3, [sp, #60]	; 0x3c
 800c9c8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c9cc:	9310      	str	r3, [sp, #64]	; 0x40
 800c9ce:	9409      	str	r4, [sp, #36]	; 0x24
 800c9d0:	a809      	add	r0, sp, #36	; 0x24
 800c9d2:	47b0      	blx	r6
 800c9d4:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c9d8:	ad04      	add	r5, sp, #16
 800c9da:	e885 0003 	stmia.w	r5, {r0, r1}
 800c9de:	2201      	movs	r2, #1
 800c9e0:	4629      	mov	r1, r5
 800c9e2:	4628      	mov	r0, r5
 800c9e4:	f7fc fc6f 	bl	80092c6 <GUI__ReduceRect>
 800c9e8:	4628      	mov	r0, r5
 800c9ea:	f7f8 fb65 	bl	80050b8 <WM_SetUserClipRect>
 800c9ee:	2305      	movs	r3, #5
 800c9f0:	9906      	ldr	r1, [sp, #24]
 800c9f2:	930a      	str	r3, [sp, #40]	; 0x28
 800c9f4:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800c9f8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800c9fc:	9409      	str	r4, [sp, #36]	; 0x24
 800c9fe:	930d      	str	r3, [sp, #52]	; 0x34
 800ca00:	920e      	str	r2, [sp, #56]	; 0x38
 800ca02:	b129      	cbz	r1, 800ca10 <_Paint+0x98>
 800ca04:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ca08:	930f      	str	r3, [sp, #60]	; 0x3c
 800ca0a:	4442      	add	r2, r8
 800ca0c:	9210      	str	r2, [sp, #64]	; 0x40
 800ca0e:	e004      	b.n	800ca1a <_Paint+0xa2>
 800ca10:	4443      	add	r3, r8
 800ca12:	930f      	str	r3, [sp, #60]	; 0x3c
 800ca14:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ca18:	9310      	str	r3, [sp, #64]	; 0x40
 800ca1a:	2300      	movs	r3, #0
 800ca1c:	9307      	str	r3, [sp, #28]
 800ca1e:	a809      	add	r0, sp, #36	; 0x24
 800ca20:	47b0      	blx	r6
 800ca22:	9906      	ldr	r1, [sp, #24]
 800ca24:	f9bd 5008 	ldrsh.w	r5, [sp, #8]
 800ca28:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 800ca2c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800ca30:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ca34:	b119      	cbz	r1, 800ca3e <_Paint+0xc6>
 800ca36:	4440      	add	r0, r8
 800ca38:	950d      	str	r5, [sp, #52]	; 0x34
 800ca3a:	3001      	adds	r0, #1
 800ca3c:	e002      	b.n	800ca44 <_Paint+0xcc>
 800ca3e:	4445      	add	r5, r8
 800ca40:	3501      	adds	r5, #1
 800ca42:	950d      	str	r5, [sp, #52]	; 0x34
 800ca44:	9310      	str	r3, [sp, #64]	; 0x40
 800ca46:	2301      	movs	r3, #1
 800ca48:	920f      	str	r2, [sp, #60]	; 0x3c
 800ca4a:	9307      	str	r3, [sp, #28]
 800ca4c:	900e      	str	r0, [sp, #56]	; 0x38
 800ca4e:	a809      	add	r0, sp, #36	; 0x24
 800ca50:	47b0      	blx	r6
 800ca52:	4620      	mov	r0, r4
 800ca54:	f7fe ff0c 	bl	800b870 <GUI_ALLOC_LockH>
 800ca58:	9000      	str	r0, [sp, #0]
 800ca5a:	f7f6 fa4f 	bl	8002efc <PROGBAR__GetTextLocked>
 800ca5e:	9001      	str	r0, [sp, #4]
 800ca60:	b1f8      	cbz	r0, 800caa2 <_Paint+0x12a>
 800ca62:	4648      	mov	r0, r9
 800ca64:	f7fe faa8 	bl	800afb8 <GUI_SetFont>
 800ca68:	4639      	mov	r1, r7
 800ca6a:	9a01      	ldr	r2, [sp, #4]
 800ca6c:	9800      	ldr	r0, [sp, #0]
 800ca6e:	f7f6 fa48 	bl	8002f02 <PROGBAR__GetTextRect>
 800ca72:	4668      	mov	r0, sp
 800ca74:	f7fe ff0a 	bl	800b88c <GUI_ALLOC_UnlockH>
 800ca78:	9b01      	ldr	r3, [sp, #4]
 800ca7a:	9308      	str	r3, [sp, #32]
 800ca7c:	2312      	movs	r3, #18
 800ca7e:	930a      	str	r3, [sp, #40]	; 0x28
 800ca80:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800ca84:	930d      	str	r3, [sp, #52]	; 0x34
 800ca86:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800ca8a:	930e      	str	r3, [sp, #56]	; 0x38
 800ca8c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ca90:	930f      	str	r3, [sp, #60]	; 0x3c
 800ca92:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ca96:	9409      	str	r4, [sp, #36]	; 0x24
 800ca98:	9310      	str	r3, [sp, #64]	; 0x40
 800ca9a:	a809      	add	r0, sp, #36	; 0x24
 800ca9c:	47b0      	blx	r6
 800ca9e:	a801      	add	r0, sp, #4
 800caa0:	e000      	b.n	800caa4 <_Paint+0x12c>
 800caa2:	4668      	mov	r0, sp
 800caa4:	f7fe fef2 	bl	800b88c <GUI_ALLOC_UnlockH>
 800caa8:	2000      	movs	r0, #0
 800caaa:	f7f8 fb05 	bl	80050b8 <WM_SetUserClipRect>
 800caae:	b013      	add	sp, #76	; 0x4c
 800cab0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800cab4 <GUI_ARRAY__GethItem>:
 800cab4:	8803      	ldrh	r3, [r0, #0]
 800cab6:	4299      	cmp	r1, r3
 800cab8:	b513      	push	{r0, r1, r4, lr}
 800caba:	460c      	mov	r4, r1
 800cabc:	d20e      	bcs.n	800cadc <GUI_ARRAY__GethItem+0x28>
 800cabe:	6840      	ldr	r0, [r0, #4]
 800cac0:	b150      	cbz	r0, 800cad8 <GUI_ARRAY__GethItem+0x24>
 800cac2:	f7fe fed5 	bl	800b870 <GUI_ALLOC_LockH>
 800cac6:	ab02      	add	r3, sp, #8
 800cac8:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 800cacc:	f843 0d04 	str.w	r0, [r3, #-4]!
 800cad0:	4618      	mov	r0, r3
 800cad2:	f7fe fedb 	bl	800b88c <GUI_ALLOC_UnlockH>
 800cad6:	e002      	b.n	800cade <GUI_ARRAY__GethItem+0x2a>
 800cad8:	4604      	mov	r4, r0
 800cada:	e000      	b.n	800cade <GUI_ARRAY__GethItem+0x2a>
 800cadc:	2400      	movs	r4, #0
 800cade:	4620      	mov	r0, r4
 800cae0:	b002      	add	sp, #8
 800cae2:	bd10      	pop	{r4, pc}

0800cae4 <GUI_ARRAY_GetNumItems>:
 800cae4:	b513      	push	{r0, r1, r4, lr}
 800cae6:	4604      	mov	r4, r0
 800cae8:	b140      	cbz	r0, 800cafc <GUI_ARRAY_GetNumItems+0x18>
 800caea:	f7fe fec1 	bl	800b870 <GUI_ALLOC_LockH>
 800caee:	ab02      	add	r3, sp, #8
 800caf0:	8804      	ldrh	r4, [r0, #0]
 800caf2:	f843 0d04 	str.w	r0, [r3, #-4]!
 800caf6:	4618      	mov	r0, r3
 800caf8:	f7fe fec8 	bl	800b88c <GUI_ALLOC_UnlockH>
 800cafc:	4620      	mov	r0, r4
 800cafe:	b002      	add	sp, #8
 800cb00:	bd10      	pop	{r4, pc}

0800cb02 <GUI_ARRAY_AddItem>:
 800cb02:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800cb06:	4605      	mov	r5, r0
 800cb08:	2800      	cmp	r0, #0
 800cb0a:	d03d      	beq.n	800cb88 <GUI_ARRAY_AddItem+0x86>
 800cb0c:	b14a      	cbz	r2, 800cb22 <GUI_ARRAY_AddItem+0x20>
 800cb0e:	4608      	mov	r0, r1
 800cb10:	4611      	mov	r1, r2
 800cb12:	f7ff f885 	bl	800bc20 <GUI_ALLOC_AllocInit>
 800cb16:	f1d0 0401 	rsbs	r4, r0, #1
 800cb1a:	4607      	mov	r7, r0
 800cb1c:	bf38      	it	cc
 800cb1e:	2400      	movcc	r4, #0
 800cb20:	e001      	b.n	800cb26 <GUI_ARRAY_AddItem+0x24>
 800cb22:	4614      	mov	r4, r2
 800cb24:	4617      	mov	r7, r2
 800cb26:	4628      	mov	r0, r5
 800cb28:	f7fe fea2 	bl	800b870 <GUI_ALLOC_LockH>
 800cb2c:	ae02      	add	r6, sp, #8
 800cb2e:	f8b0 8000 	ldrh.w	r8, [r0]
 800cb32:	f846 0d08 	str.w	r0, [r6, #-8]!
 800cb36:	f8d0 9004 	ldr.w	r9, [r0, #4]
 800cb3a:	4668      	mov	r0, sp
 800cb3c:	f7fe fea6 	bl	800b88c <GUI_ALLOC_UnlockH>
 800cb40:	bb24      	cbnz	r4, 800cb8c <GUI_ARRAY_AddItem+0x8a>
 800cb42:	f108 0101 	add.w	r1, r8, #1
 800cb46:	4648      	mov	r0, r9
 800cb48:	0089      	lsls	r1, r1, #2
 800cb4a:	f7ff f8a3 	bl	800bc94 <GUI_ALLOC_Realloc>
 800cb4e:	4681      	mov	r9, r0
 800cb50:	b918      	cbnz	r0, 800cb5a <GUI_ARRAY_AddItem+0x58>
 800cb52:	4638      	mov	r0, r7
 800cb54:	f7fe fec6 	bl	800b8e4 <GUI_ALLOC_Free>
 800cb58:	e018      	b.n	800cb8c <GUI_ARRAY_AddItem+0x8a>
 800cb5a:	f7fe fe89 	bl	800b870 <GUI_ALLOC_LockH>
 800cb5e:	ab02      	add	r3, sp, #8
 800cb60:	f843 0d04 	str.w	r0, [r3, #-4]!
 800cb64:	f840 7028 	str.w	r7, [r0, r8, lsl #2]
 800cb68:	4618      	mov	r0, r3
 800cb6a:	f7fe fe8f 	bl	800b88c <GUI_ALLOC_UnlockH>
 800cb6e:	4628      	mov	r0, r5
 800cb70:	f7fe fe7e 	bl	800b870 <GUI_ALLOC_LockH>
 800cb74:	8803      	ldrh	r3, [r0, #0]
 800cb76:	9000      	str	r0, [sp, #0]
 800cb78:	3301      	adds	r3, #1
 800cb7a:	f8c0 9004 	str.w	r9, [r0, #4]
 800cb7e:	8003      	strh	r3, [r0, #0]
 800cb80:	4668      	mov	r0, sp
 800cb82:	f7fe fe83 	bl	800b88c <GUI_ALLOC_UnlockH>
 800cb86:	e002      	b.n	800cb8e <GUI_ARRAY_AddItem+0x8c>
 800cb88:	4604      	mov	r4, r0
 800cb8a:	e000      	b.n	800cb8e <GUI_ARRAY_AddItem+0x8c>
 800cb8c:	2401      	movs	r4, #1
 800cb8e:	4620      	mov	r0, r4
 800cb90:	b003      	add	sp, #12
 800cb92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800cb96 <GUI_ARRAY_Delete>:
 800cb96:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cb98:	4605      	mov	r5, r0
 800cb9a:	b318      	cbz	r0, 800cbe4 <GUI_ARRAY_Delete+0x4e>
 800cb9c:	f7fe fe68 	bl	800b870 <GUI_ALLOC_LockH>
 800cba0:	9000      	str	r0, [sp, #0]
 800cba2:	6840      	ldr	r0, [r0, #4]
 800cba4:	b1c0      	cbz	r0, 800cbd8 <GUI_ARRAY_Delete+0x42>
 800cba6:	f7fe fe63 	bl	800b870 <GUI_ALLOC_LockH>
 800cbaa:	2400      	movs	r4, #0
 800cbac:	9001      	str	r0, [sp, #4]
 800cbae:	9b00      	ldr	r3, [sp, #0]
 800cbb0:	881b      	ldrh	r3, [r3, #0]
 800cbb2:	429c      	cmp	r4, r3
 800cbb4:	da06      	bge.n	800cbc4 <GUI_ARRAY_Delete+0x2e>
 800cbb6:	9801      	ldr	r0, [sp, #4]
 800cbb8:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 800cbbc:	f7ff f828 	bl	800bc10 <GUI_ALLOC_FreePtr>
 800cbc0:	3401      	adds	r4, #1
 800cbc2:	e7f4      	b.n	800cbae <GUI_ARRAY_Delete+0x18>
 800cbc4:	a801      	add	r0, sp, #4
 800cbc6:	f7fe fe61 	bl	800b88c <GUI_ALLOC_UnlockH>
 800cbca:	9800      	ldr	r0, [sp, #0]
 800cbcc:	3004      	adds	r0, #4
 800cbce:	f7ff f81f 	bl	800bc10 <GUI_ALLOC_FreePtr>
 800cbd2:	9b00      	ldr	r3, [sp, #0]
 800cbd4:	2200      	movs	r2, #0
 800cbd6:	801a      	strh	r2, [r3, #0]
 800cbd8:	4668      	mov	r0, sp
 800cbda:	f7fe fe57 	bl	800b88c <GUI_ALLOC_UnlockH>
 800cbde:	4628      	mov	r0, r5
 800cbe0:	f7fe fe80 	bl	800b8e4 <GUI_ALLOC_Free>
 800cbe4:	b003      	add	sp, #12
 800cbe6:	bd30      	pop	{r4, r5, pc}

0800cbe8 <GUI_ARRAY_GethItem>:
 800cbe8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cbea:	460e      	mov	r6, r1
 800cbec:	4605      	mov	r5, r0
 800cbee:	b158      	cbz	r0, 800cc08 <GUI_ARRAY_GethItem+0x20>
 800cbf0:	f7fe fe3e 	bl	800b870 <GUI_ALLOC_LockH>
 800cbf4:	ac02      	add	r4, sp, #8
 800cbf6:	4631      	mov	r1, r6
 800cbf8:	f844 0d04 	str.w	r0, [r4, #-4]!
 800cbfc:	f7ff ff5a 	bl	800cab4 <GUI_ARRAY__GethItem>
 800cc00:	4605      	mov	r5, r0
 800cc02:	4620      	mov	r0, r4
 800cc04:	f7fe fe42 	bl	800b88c <GUI_ALLOC_UnlockH>
 800cc08:	4628      	mov	r0, r5
 800cc0a:	b002      	add	sp, #8
 800cc0c:	bd70      	pop	{r4, r5, r6, pc}

0800cc0e <GUI_ARRAY_Create>:
 800cc0e:	2008      	movs	r0, #8
 800cc10:	f7ff b828 	b.w	800bc64 <GUI_ALLOC_AllocZero>

0800cc14 <FRAMEWIN_DrawSkinFlex>:
 800cc14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc18:	4604      	mov	r4, r0
 800cc1a:	b090      	sub	sp, #64	; 0x40
 800cc1c:	6800      	ldr	r0, [r0, #0]
 800cc1e:	4d9b      	ldr	r5, [pc, #620]	; (800ce8c <FRAMEWIN_DrawSkinFlex+0x278>)
 800cc20:	f7f7 fbae 	bl	8004380 <FRAMEWIN_GetActive>
 800cc24:	4b9a      	ldr	r3, [pc, #616]	; (800ce90 <FRAMEWIN_DrawSkinFlex+0x27c>)
 800cc26:	6866      	ldr	r6, [r4, #4]
 800cc28:	2800      	cmp	r0, #0
 800cc2a:	bf18      	it	ne
 800cc2c:	461d      	movne	r5, r3
 800cc2e:	2e1c      	cmp	r6, #28
 800cc30:	f200 81a6 	bhi.w	800cf80 <FRAMEWIN_DrawSkinFlex+0x36c>
 800cc34:	e8df f016 	tbh	[pc, r6, lsl #1]
 800cc38:	01a40191 	.word	0x01a40191
 800cc3c:	01a401a4 	.word	0x01a401a4
 800cc40:	012e01a4 	.word	0x012e01a4
 800cc44:	01a401a4 	.word	0x01a401a4
 800cc48:	01a401a4 	.word	0x01a401a4
 800cc4c:	002701a4 	.word	0x002701a4
 800cc50:	01a401a4 	.word	0x01a401a4
 800cc54:	01a4017e 	.word	0x01a4017e
 800cc58:	01a401a4 	.word	0x01a401a4
 800cc5c:	01a40145 	.word	0x01a40145
 800cc60:	002301a4 	.word	0x002301a4
 800cc64:	001f001d 	.word	0x001f001d
 800cc68:	01a40021 	.word	0x01a40021
 800cc6c:	01a401a4 	.word	0x01a401a4
 800cc70:	0025      	.short	0x0025
 800cc72:	69ee      	ldr	r6, [r5, #28]
 800cc74:	e189      	b.n	800cf8a <FRAMEWIN_DrawSkinFlex+0x376>
 800cc76:	6a2e      	ldr	r6, [r5, #32]
 800cc78:	e187      	b.n	800cf8a <FRAMEWIN_DrawSkinFlex+0x376>
 800cc7a:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 800cc7c:	e185      	b.n	800cf8a <FRAMEWIN_DrawSkinFlex+0x376>
 800cc7e:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800cc80:	e183      	b.n	800cf8a <FRAMEWIN_DrawSkinFlex+0x376>
 800cc82:	696e      	ldr	r6, [r5, #20]
 800cc84:	e181      	b.n	800cf8a <FRAMEWIN_DrawSkinFlex+0x376>
 800cc86:	231c      	movs	r3, #28
 800cc88:	6820      	ldr	r0, [r4, #0]
 800cc8a:	9308      	str	r3, [sp, #32]
 800cc8c:	9007      	str	r0, [sp, #28]
 800cc8e:	f7fe fdef 	bl	800b870 <GUI_ALLOC_LockH>
 800cc92:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cc94:	9005      	str	r0, [sp, #20]
 800cc96:	a807      	add	r0, sp, #28
 800cc98:	4798      	blx	r3
 800cc9a:	4606      	mov	r6, r0
 800cc9c:	a805      	add	r0, sp, #20
 800cc9e:	f7fe fdf5 	bl	800b88c <GUI_ALLOC_UnlockH>
 800cca2:	2e01      	cmp	r6, #1
 800cca4:	dd11      	ble.n	800ccca <FRAMEWIN_DrawSkinFlex+0xb6>
 800cca6:	682b      	ldr	r3, [r5, #0]
 800cca8:	9300      	str	r3, [sp, #0]
 800ccaa:	686b      	ldr	r3, [r5, #4]
 800ccac:	9301      	str	r3, [sp, #4]
 800ccae:	68ab      	ldr	r3, [r5, #8]
 800ccb0:	9302      	str	r3, [sp, #8]
 800ccb2:	6920      	ldr	r0, [r4, #16]
 800ccb4:	69a1      	ldr	r1, [r4, #24]
 800ccb6:	6962      	ldr	r2, [r4, #20]
 800ccb8:	4633      	mov	r3, r6
 800ccba:	f002 f923 	bl	800ef04 <GUI__DrawTwinArc2>
 800ccbe:	6923      	ldr	r3, [r4, #16]
 800ccc0:	69a7      	ldr	r7, [r4, #24]
 800ccc2:	eb06 0803 	add.w	r8, r6, r3
 800ccc6:	1bbf      	subs	r7, r7, r6
 800ccc8:	e02c      	b.n	800cd24 <FRAMEWIN_DrawSkinFlex+0x110>
 800ccca:	6828      	ldr	r0, [r5, #0]
 800cccc:	f7fe f96f 	bl	800afae <GUI_SetColor>
 800ccd0:	6921      	ldr	r1, [r4, #16]
 800ccd2:	69ea      	ldr	r2, [r5, #28]
 800ccd4:	6960      	ldr	r0, [r4, #20]
 800ccd6:	440a      	add	r2, r1
 800ccd8:	3a01      	subs	r2, #1
 800ccda:	f7fd fa47 	bl	800a16c <GUI_DrawHLine>
 800ccde:	69a2      	ldr	r2, [r4, #24]
 800cce0:	69e9      	ldr	r1, [r5, #28]
 800cce2:	6960      	ldr	r0, [r4, #20]
 800cce4:	1a51      	subs	r1, r2, r1
 800cce6:	3101      	adds	r1, #1
 800cce8:	f7fd fa40 	bl	800a16c <GUI_DrawHLine>
 800ccec:	6967      	ldr	r7, [r4, #20]
 800ccee:	6920      	ldr	r0, [r4, #16]
 800ccf0:	3701      	adds	r7, #1
 800ccf2:	4639      	mov	r1, r7
 800ccf4:	f7fd fa5e 	bl	800a1b4 <GUI_DrawPixel>
 800ccf8:	4639      	mov	r1, r7
 800ccfa:	69a0      	ldr	r0, [r4, #24]
 800ccfc:	f7fd fa5a 	bl	800a1b4 <GUI_DrawPixel>
 800cd00:	6868      	ldr	r0, [r5, #4]
 800cd02:	f7fe f954 	bl	800afae <GUI_SetColor>
 800cd06:	6920      	ldr	r0, [r4, #16]
 800cd08:	4639      	mov	r1, r7
 800cd0a:	3001      	adds	r0, #1
 800cd0c:	f7fd fa52 	bl	800a1b4 <GUI_DrawPixel>
 800cd10:	69a0      	ldr	r0, [r4, #24]
 800cd12:	4639      	mov	r1, r7
 800cd14:	3801      	subs	r0, #1
 800cd16:	f7fd fa4d 	bl	800a1b4 <GUI_DrawPixel>
 800cd1a:	6923      	ldr	r3, [r4, #16]
 800cd1c:	69a7      	ldr	r7, [r4, #24]
 800cd1e:	f103 0802 	add.w	r8, r3, #2
 800cd22:	3f02      	subs	r7, #2
 800cd24:	6828      	ldr	r0, [r5, #0]
 800cd26:	f7fe f942 	bl	800afae <GUI_SetColor>
 800cd2a:	4641      	mov	r1, r8
 800cd2c:	463a      	mov	r2, r7
 800cd2e:	6960      	ldr	r0, [r4, #20]
 800cd30:	f7fd fa1c 	bl	800a16c <GUI_DrawHLine>
 800cd34:	6868      	ldr	r0, [r5, #4]
 800cd36:	f7fe f93a 	bl	800afae <GUI_SetColor>
 800cd3a:	6960      	ldr	r0, [r4, #20]
 800cd3c:	4641      	mov	r1, r8
 800cd3e:	3001      	adds	r0, #1
 800cd40:	463a      	mov	r2, r7
 800cd42:	f7fd fa13 	bl	800a16c <GUI_DrawHLine>
 800cd46:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800cd48:	2b02      	cmp	r3, #2
 800cd4a:	dd0a      	ble.n	800cd62 <FRAMEWIN_DrawSkinFlex+0x14e>
 800cd4c:	68a8      	ldr	r0, [r5, #8]
 800cd4e:	f7fe f92e 	bl	800afae <GUI_SetColor>
 800cd52:	6961      	ldr	r1, [r4, #20]
 800cd54:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800cd56:	440b      	add	r3, r1
 800cd58:	4640      	mov	r0, r8
 800cd5a:	3102      	adds	r1, #2
 800cd5c:	463a      	mov	r2, r7
 800cd5e:	3b01      	subs	r3, #1
 800cd60:	e01d      	b.n	800cd9e <FRAMEWIN_DrawSkinFlex+0x18a>
 800cd62:	6a2a      	ldr	r2, [r5, #32]
 800cd64:	42b2      	cmp	r2, r6
 800cd66:	dd1c      	ble.n	800cda2 <FRAMEWIN_DrawSkinFlex+0x18e>
 800cd68:	6967      	ldr	r7, [r4, #20]
 800cd6a:	6923      	ldr	r3, [r4, #16]
 800cd6c:	2e01      	cmp	r6, #1
 800cd6e:	f107 0802 	add.w	r8, r7, #2
 800cd72:	f340 8107 	ble.w	800cf84 <FRAMEWIN_DrawSkinFlex+0x370>
 800cd76:	4437      	add	r7, r6
 800cd78:	18f0      	adds	r0, r6, r3
 800cd7a:	441a      	add	r2, r3
 800cd7c:	3a01      	subs	r2, #1
 800cd7e:	4641      	mov	r1, r8
 800cd80:	463b      	mov	r3, r7
 800cd82:	f7fd fa6f 	bl	800a264 <GUI_FillRect>
 800cd86:	69a3      	ldr	r3, [r4, #24]
 800cd88:	69e8      	ldr	r0, [r5, #28]
 800cd8a:	2e01      	cmp	r6, #1
 800cd8c:	ebc0 0003 	rsb	r0, r0, r3
 800cd90:	bfcc      	ite	gt
 800cd92:	ebc6 0203 	rsbgt	r2, r6, r3
 800cd96:	1e9a      	suble	r2, r3, #2
 800cd98:	3001      	adds	r0, #1
 800cd9a:	4641      	mov	r1, r8
 800cd9c:	463b      	mov	r3, r7
 800cd9e:	f7fd fa61 	bl	800a264 <GUI_FillRect>
 800cda2:	6963      	ldr	r3, [r4, #20]
 800cda4:	69e7      	ldr	r7, [r4, #28]
 800cda6:	6828      	ldr	r0, [r5, #0]
 800cda8:	2e01      	cmp	r6, #1
 800cdaa:	bfcc      	ite	gt
 800cdac:	18f6      	addgt	r6, r6, r3
 800cdae:	1c9e      	addle	r6, r3, #2
 800cdb0:	3f01      	subs	r7, #1
 800cdb2:	f7fe f8fc 	bl	800afae <GUI_SetColor>
 800cdb6:	463a      	mov	r2, r7
 800cdb8:	6920      	ldr	r0, [r4, #16]
 800cdba:	4631      	mov	r1, r6
 800cdbc:	f7fd fa30 	bl	800a220 <GUI_DrawVLine>
 800cdc0:	463a      	mov	r2, r7
 800cdc2:	4631      	mov	r1, r6
 800cdc4:	69a0      	ldr	r0, [r4, #24]
 800cdc6:	f7fd fa2b 	bl	800a220 <GUI_DrawVLine>
 800cdca:	69e7      	ldr	r7, [r4, #28]
 800cdcc:	6868      	ldr	r0, [r5, #4]
 800cdce:	f7fe f8ee 	bl	800afae <GUI_SetColor>
 800cdd2:	6920      	ldr	r0, [r4, #16]
 800cdd4:	3f02      	subs	r7, #2
 800cdd6:	3001      	adds	r0, #1
 800cdd8:	4631      	mov	r1, r6
 800cdda:	463a      	mov	r2, r7
 800cddc:	f7fd fa20 	bl	800a220 <GUI_DrawVLine>
 800cde0:	69a0      	ldr	r0, [r4, #24]
 800cde2:	4631      	mov	r1, r6
 800cde4:	3801      	subs	r0, #1
 800cde6:	463a      	mov	r2, r7
 800cde8:	f7fd fa1a 	bl	800a220 <GUI_DrawVLine>
 800cdec:	69eb      	ldr	r3, [r5, #28]
 800cdee:	2b02      	cmp	r3, #2
 800cdf0:	dc02      	bgt.n	800cdf8 <FRAMEWIN_DrawSkinFlex+0x1e4>
 800cdf2:	6a2b      	ldr	r3, [r5, #32]
 800cdf4:	2b02      	cmp	r3, #2
 800cdf6:	dd20      	ble.n	800ce3a <FRAMEWIN_DrawSkinFlex+0x226>
 800cdf8:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800cdfa:	69e7      	ldr	r7, [r4, #28]
 800cdfc:	68a8      	ldr	r0, [r5, #8]
 800cdfe:	2b02      	cmp	r3, #2
 800ce00:	bfcc      	ite	gt
 800ce02:	ebc3 0707 	rsbgt	r7, r3, r7
 800ce06:	3f02      	suble	r7, #2
 800ce08:	f7fe f8d1 	bl	800afae <GUI_SetColor>
 800ce0c:	69ea      	ldr	r2, [r5, #28]
 800ce0e:	2a02      	cmp	r2, #2
 800ce10:	dd07      	ble.n	800ce22 <FRAMEWIN_DrawSkinFlex+0x20e>
 800ce12:	6920      	ldr	r0, [r4, #16]
 800ce14:	4402      	add	r2, r0
 800ce16:	4631      	mov	r1, r6
 800ce18:	3002      	adds	r0, #2
 800ce1a:	3a01      	subs	r2, #1
 800ce1c:	463b      	mov	r3, r7
 800ce1e:	f7fd fa21 	bl	800a264 <GUI_FillRect>
 800ce22:	6a2b      	ldr	r3, [r5, #32]
 800ce24:	2b02      	cmp	r3, #2
 800ce26:	dd08      	ble.n	800ce3a <FRAMEWIN_DrawSkinFlex+0x226>
 800ce28:	69a2      	ldr	r2, [r4, #24]
 800ce2a:	69e8      	ldr	r0, [r5, #28]
 800ce2c:	1a10      	subs	r0, r2, r0
 800ce2e:	3001      	adds	r0, #1
 800ce30:	4631      	mov	r1, r6
 800ce32:	3a02      	subs	r2, #2
 800ce34:	463b      	mov	r3, r7
 800ce36:	f7fd fa15 	bl	800a264 <GUI_FillRect>
 800ce3a:	6828      	ldr	r0, [r5, #0]
 800ce3c:	f7fe f8b7 	bl	800afae <GUI_SetColor>
 800ce40:	6921      	ldr	r1, [r4, #16]
 800ce42:	69a2      	ldr	r2, [r4, #24]
 800ce44:	69e0      	ldr	r0, [r4, #28]
 800ce46:	f7fd f991 	bl	800a16c <GUI_DrawHLine>
 800ce4a:	6868      	ldr	r0, [r5, #4]
 800ce4c:	f7fe f8af 	bl	800afae <GUI_SetColor>
 800ce50:	69e0      	ldr	r0, [r4, #28]
 800ce52:	6921      	ldr	r1, [r4, #16]
 800ce54:	69a2      	ldr	r2, [r4, #24]
 800ce56:	3801      	subs	r0, #1
 800ce58:	3101      	adds	r1, #1
 800ce5a:	3a01      	subs	r2, #1
 800ce5c:	f7fd f986 	bl	800a16c <GUI_DrawHLine>
 800ce60:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800ce62:	2e02      	cmp	r6, #2
 800ce64:	f340 808c 	ble.w	800cf80 <FRAMEWIN_DrawSkinFlex+0x36c>
 800ce68:	6920      	ldr	r0, [r4, #16]
 800ce6a:	69a2      	ldr	r2, [r4, #24]
 800ce6c:	69e4      	ldr	r4, [r4, #28]
 800ce6e:	f100 0802 	add.w	r8, r0, #2
 800ce72:	68a8      	ldr	r0, [r5, #8]
 800ce74:	1e97      	subs	r7, r2, #2
 800ce76:	f7fe f89a 	bl	800afae <GUI_SetColor>
 800ce7a:	1ba1      	subs	r1, r4, r6
 800ce7c:	4640      	mov	r0, r8
 800ce7e:	3101      	adds	r1, #1
 800ce80:	463a      	mov	r2, r7
 800ce82:	1ea3      	subs	r3, r4, #2
 800ce84:	f7fd f9ee 	bl	800a264 <GUI_FillRect>
 800ce88:	e07a      	b.n	800cf80 <FRAMEWIN_DrawSkinFlex+0x36c>
 800ce8a:	bf00      	nop
 800ce8c:	20000144 	.word	0x20000144
 800ce90:	20000118 	.word	0x20000118
 800ce94:	8a20      	ldrh	r0, [r4, #16]
 800ce96:	8aa1      	ldrh	r1, [r4, #20]
 800ce98:	8b22      	ldrh	r2, [r4, #24]
 800ce9a:	8ba3      	ldrh	r3, [r4, #28]
 800ce9c:	68ec      	ldr	r4, [r5, #12]
 800ce9e:	9400      	str	r4, [sp, #0]
 800cea0:	692c      	ldr	r4, [r5, #16]
 800cea2:	f8ad 001c 	strh.w	r0, [sp, #28]
 800cea6:	f8ad 101e 	strh.w	r1, [sp, #30]
 800ceaa:	f8ad 2020 	strh.w	r2, [sp, #32]
 800ceae:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ceb2:	9401      	str	r4, [sp, #4]
 800ceb4:	b200      	sxth	r0, r0
 800ceb6:	b209      	sxth	r1, r1
 800ceb8:	b212      	sxth	r2, r2
 800ceba:	b21b      	sxth	r3, r3
 800cebc:	f002 fc4e 	bl	800f75c <GUI_DrawGradientV>
 800cec0:	e05e      	b.n	800cf80 <FRAMEWIN_DrawSkinFlex+0x36c>
 800cec2:	8b2b      	ldrh	r3, [r5, #24]
 800cec4:	6922      	ldr	r2, [r4, #16]
 800cec6:	6820      	ldr	r0, [r4, #0]
 800cec8:	441a      	add	r2, r3
 800ceca:	f8ad 201c 	strh.w	r2, [sp, #28]
 800cece:	6962      	ldr	r2, [r4, #20]
 800ced0:	f8ad 201e 	strh.w	r2, [sp, #30]
 800ced4:	69a2      	ldr	r2, [r4, #24]
 800ced6:	1ad3      	subs	r3, r2, r3
 800ced8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cedc:	69e3      	ldr	r3, [r4, #28]
 800cede:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cee2:	f7fe fcc5 	bl	800b870 <GUI_ALLOC_LockH>
 800cee6:	6f03      	ldr	r3, [r0, #112]	; 0x70
 800cee8:	9005      	str	r0, [sp, #20]
 800ceea:	b1fb      	cbz	r3, 800cf2c <FRAMEWIN_DrawSkinFlex+0x318>
 800ceec:	2002      	movs	r0, #2
 800ceee:	f7fe f899 	bl	800b024 <GUI_SetTextMode>
 800cef2:	9b05      	ldr	r3, [sp, #20]
 800cef4:	f8b3 207c 	ldrh.w	r2, [r3, #124]	; 0x7c
 800cef8:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800cefc:	320e      	adds	r2, #14
 800cefe:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800cf02:	6898      	ldr	r0, [r3, #8]
 800cf04:	f7fe f853 	bl	800afae <GUI_SetColor>
 800cf08:	9b05      	ldr	r3, [sp, #20]
 800cf0a:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800cf0c:	f7fe f854 	bl	800afb8 <GUI_SetFont>
 800cf10:	9b05      	ldr	r3, [sp, #20]
 800cf12:	6f18      	ldr	r0, [r3, #112]	; 0x70
 800cf14:	f7fe fcac 	bl	800b870 <GUI_ALLOC_LockH>
 800cf18:	9b05      	ldr	r3, [sp, #20]
 800cf1a:	9006      	str	r0, [sp, #24]
 800cf1c:	a907      	add	r1, sp, #28
 800cf1e:	f9b3 205a 	ldrsh.w	r2, [r3, #90]	; 0x5a
 800cf22:	f7fd fc2a 	bl	800a77a <GUI_DispStringInRect>
 800cf26:	a806      	add	r0, sp, #24
 800cf28:	f7fe fcb0 	bl	800b88c <GUI_ALLOC_UnlockH>
 800cf2c:	a805      	add	r0, sp, #20
 800cf2e:	f7fe fcad 	bl	800b88c <GUI_ALLOC_UnlockH>
 800cf32:	e025      	b.n	800cf80 <FRAMEWIN_DrawSkinFlex+0x36c>
 800cf34:	6923      	ldr	r3, [r4, #16]
 800cf36:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cf3a:	6963      	ldr	r3, [r4, #20]
 800cf3c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cf40:	69a3      	ldr	r3, [r4, #24]
 800cf42:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cf46:	68a8      	ldr	r0, [r5, #8]
 800cf48:	69e3      	ldr	r3, [r4, #28]
 800cf4a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cf4e:	f7fe f82e 	bl	800afae <GUI_SetColor>
 800cf52:	a807      	add	r0, sp, #28
 800cf54:	f7fd f9a8 	bl	800a2a8 <GUI_FillRectEx>
 800cf58:	e012      	b.n	800cf80 <FRAMEWIN_DrawSkinFlex+0x36c>
 800cf5a:	6820      	ldr	r0, [r4, #0]
 800cf5c:	f7fe fc88 	bl	800b870 <GUI_ALLOC_LockH>
 800cf60:	ab10      	add	r3, sp, #64	; 0x40
 800cf62:	f8b0 205a 	ldrh.w	r2, [r0, #90]	; 0x5a
 800cf66:	f843 0d2c 	str.w	r0, [r3, #-44]!
 800cf6a:	f042 020c 	orr.w	r2, r2, #12
 800cf6e:	f8a0 205a 	strh.w	r2, [r0, #90]	; 0x5a
 800cf72:	4618      	mov	r0, r3
 800cf74:	f7fe fc8a 	bl	800b88c <GUI_ALLOC_UnlockH>
 800cf78:	6820      	ldr	r0, [r4, #0]
 800cf7a:	f7f7 fbaf 	bl	80046dc <WM_SetHasTrans>
 800cf7e:	e004      	b.n	800cf8a <FRAMEWIN_DrawSkinFlex+0x376>
 800cf80:	2600      	movs	r6, #0
 800cf82:	e002      	b.n	800cf8a <FRAMEWIN_DrawSkinFlex+0x376>
 800cf84:	1c98      	adds	r0, r3, #2
 800cf86:	4647      	mov	r7, r8
 800cf88:	e6f7      	b.n	800cd7a <FRAMEWIN_DrawSkinFlex+0x166>
 800cf8a:	4630      	mov	r0, r6
 800cf8c:	b010      	add	sp, #64	; 0x40
 800cf8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cf92:	bf00      	nop

0800cf94 <_GetBorderSize>:
 800cf94:	b570      	push	{r4, r5, r6, lr}
 800cf96:	b08a      	sub	sp, #40	; 0x28
 800cf98:	4605      	mov	r5, r0
 800cf9a:	460c      	mov	r4, r1
 800cf9c:	f7fe fc68 	bl	800b870 <GUI_ALLOC_LockH>
 800cfa0:	ab0a      	add	r3, sp, #40	; 0x28
 800cfa2:	6d06      	ldr	r6, [r0, #80]	; 0x50
 800cfa4:	f843 0d28 	str.w	r0, [r3, #-40]!
 800cfa8:	4668      	mov	r0, sp
 800cfaa:	f7fe fc6f 	bl	800b88c <GUI_ALLOC_UnlockH>
 800cfae:	9501      	str	r5, [sp, #4]
 800cfb0:	2c03      	cmp	r4, #3
 800cfb2:	d80b      	bhi.n	800cfcc <_GetBorderSize+0x38>
 800cfb4:	e8df f004 	tbb	[pc, r4]
 800cfb8:	08060402 	.word	0x08060402
 800cfbc:	2318      	movs	r3, #24
 800cfbe:	e004      	b.n	800cfca <_GetBorderSize+0x36>
 800cfc0:	2316      	movs	r3, #22
 800cfc2:	e002      	b.n	800cfca <_GetBorderSize+0x36>
 800cfc4:	2315      	movs	r3, #21
 800cfc6:	e000      	b.n	800cfca <_GetBorderSize+0x36>
 800cfc8:	2317      	movs	r3, #23
 800cfca:	9302      	str	r3, [sp, #8]
 800cfcc:	a801      	add	r0, sp, #4
 800cfce:	47b0      	blx	r6
 800cfd0:	b00a      	add	sp, #40	; 0x28
 800cfd2:	bd70      	pop	{r4, r5, r6, pc}

0800cfd4 <_Create>:
 800cfd4:	b530      	push	{r4, r5, lr}
 800cfd6:	b08b      	sub	sp, #44	; 0x2c
 800cfd8:	4605      	mov	r5, r0
 800cfda:	f7fe fc49 	bl	800b870 <GUI_ALLOC_LockH>
 800cfde:	ab0a      	add	r3, sp, #40	; 0x28
 800cfe0:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 800cfe2:	f843 0d28 	str.w	r0, [r3, #-40]!
 800cfe6:	4668      	mov	r0, sp
 800cfe8:	6894      	ldr	r4, [r2, #8]
 800cfea:	f7fe fc4f 	bl	800b88c <GUI_ALLOC_UnlockH>
 800cfee:	a80a      	add	r0, sp, #40	; 0x28
 800cff0:	2300      	movs	r3, #0
 800cff2:	9302      	str	r3, [sp, #8]
 800cff4:	f840 5d24 	str.w	r5, [r0, #-36]!
 800cff8:	6863      	ldr	r3, [r4, #4]
 800cffa:	4798      	blx	r3
 800cffc:	b00b      	add	sp, #44	; 0x2c
 800cffe:	bd30      	pop	{r4, r5, pc}

0800d000 <_Paint>:
 800d000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d004:	b091      	sub	sp, #68	; 0x44
 800d006:	4604      	mov	r4, r0
 800d008:	f7fe fc32 	bl	800b870 <GUI_ALLOC_LockH>
 800d00c:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 800d00e:	6b46      	ldr	r6, [r0, #52]	; 0x34
 800d010:	9603      	str	r6, [sp, #12]
 800d012:	9006      	str	r0, [sp, #24]
 800d014:	689e      	ldr	r6, [r3, #8]
 800d016:	6d05      	ldr	r5, [r0, #80]	; 0x50
 800d018:	f7f6 fee9 	bl	8003dee <FRAMEWIN__CalcTitleHeight>
 800d01c:	4683      	mov	fp, r0
 800d01e:	a810      	add	r0, sp, #64	; 0x40
 800d020:	f850 2d28 	ldr.w	r2, [r0, #-40]!
 800d024:	f8b2 2058 	ldrh.w	r2, [r2, #88]	; 0x58
 800d028:	9204      	str	r2, [sp, #16]
 800d02a:	f7fe fc2f 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d02e:	4620      	mov	r0, r4
 800d030:	f7f8 f8b2 	bl	8005198 <WM_GetWindowSizeX>
 800d034:	4681      	mov	r9, r0
 800d036:	4620      	mov	r0, r4
 800d038:	f7f8 f8c3 	bl	80051c2 <WM_GetWindowSizeY>
 800d03c:	6832      	ldr	r2, [r6, #0]
 800d03e:	2101      	movs	r1, #1
 800d040:	4680      	mov	r8, r0
 800d042:	4620      	mov	r0, r4
 800d044:	4790      	blx	r2
 800d046:	6832      	ldr	r2, [r6, #0]
 800d048:	2103      	movs	r1, #3
 800d04a:	4607      	mov	r7, r0
 800d04c:	4620      	mov	r0, r4
 800d04e:	4790      	blx	r2
 800d050:	6832      	ldr	r2, [r6, #0]
 800d052:	2100      	movs	r1, #0
 800d054:	4682      	mov	sl, r0
 800d056:	4620      	mov	r0, r4
 800d058:	4790      	blx	r2
 800d05a:	6833      	ldr	r3, [r6, #0]
 800d05c:	9002      	str	r0, [sp, #8]
 800d05e:	2102      	movs	r1, #2
 800d060:	4620      	mov	r0, r4
 800d062:	4798      	blx	r3
 800d064:	9005      	str	r0, [sp, #20]
 800d066:	2000      	movs	r0, #0
 800d068:	9407      	str	r4, [sp, #28]
 800d06a:	f7f9 f851 	bl	8006110 <WM__InitIVRSearch>
 800d06e:	2800      	cmp	r0, #0
 800d070:	d044      	beq.n	800d0fc <_Paint+0xfc>
 800d072:	2300      	movs	r3, #0
 800d074:	930c      	str	r3, [sp, #48]	; 0x30
 800d076:	930b      	str	r3, [sp, #44]	; 0x2c
 800d078:	f109 33ff 	add.w	r3, r9, #4294967295
 800d07c:	930d      	str	r3, [sp, #52]	; 0x34
 800d07e:	f108 33ff 	add.w	r3, r8, #4294967295
 800d082:	930e      	str	r3, [sp, #56]	; 0x38
 800d084:	230b      	movs	r3, #11
 800d086:	9308      	str	r3, [sp, #32]
 800d088:	a807      	add	r0, sp, #28
 800d08a:	47a8      	blx	r5
 800d08c:	9b02      	ldr	r3, [sp, #8]
 800d08e:	9e04      	ldr	r6, [sp, #16]
 800d090:	970b      	str	r7, [sp, #44]	; 0x2c
 800d092:	445b      	add	r3, fp
 800d094:	fa03 f086 	sxtah	r0, r3, r6
 800d098:	9e05      	ldr	r6, [sp, #20]
 800d09a:	930c      	str	r3, [sp, #48]	; 0x30
 800d09c:	ebc6 0108 	rsb	r1, r6, r8
 800d0a0:	ebca 0209 	rsb	r2, sl, r9
 800d0a4:	3801      	subs	r0, #1
 800d0a6:	3901      	subs	r1, #1
 800d0a8:	3a01      	subs	r2, #1
 800d0aa:	4288      	cmp	r0, r1
 800d0ac:	bfd4      	ite	le
 800d0ae:	900e      	strle	r0, [sp, #56]	; 0x38
 800d0b0:	910e      	strgt	r1, [sp, #56]	; 0x38
 800d0b2:	210e      	movs	r1, #14
 800d0b4:	9108      	str	r1, [sp, #32]
 800d0b6:	e88d 000c 	stmia.w	sp, {r2, r3}
 800d0ba:	920d      	str	r2, [sp, #52]	; 0x34
 800d0bc:	a807      	add	r0, sp, #28
 800d0be:	47a8      	blx	r5
 800d0c0:	9b01      	ldr	r3, [sp, #4]
 800d0c2:	9a00      	ldr	r2, [sp, #0]
 800d0c4:	9e02      	ldr	r6, [sp, #8]
 800d0c6:	920d      	str	r2, [sp, #52]	; 0x34
 800d0c8:	3b01      	subs	r3, #1
 800d0ca:	930e      	str	r3, [sp, #56]	; 0x38
 800d0cc:	2305      	movs	r3, #5
 800d0ce:	9308      	str	r3, [sp, #32]
 800d0d0:	970b      	str	r7, [sp, #44]	; 0x2c
 800d0d2:	960c      	str	r6, [sp, #48]	; 0x30
 800d0d4:	a807      	add	r0, sp, #28
 800d0d6:	47a8      	blx	r5
 800d0d8:	a90b      	add	r1, sp, #44	; 0x2c
 800d0da:	aa0d      	add	r2, sp, #52	; 0x34
 800d0dc:	4620      	mov	r0, r4
 800d0de:	f7f6 fe95 	bl	8003e0c <FRAMEWIN__GetTitleLimits>
 800d0e2:	2002      	movs	r0, #2
 800d0e4:	f7fd ff9e 	bl	800b024 <GUI_SetTextMode>
 800d0e8:	9803      	ldr	r0, [sp, #12]
 800d0ea:	f7fd ff65 	bl	800afb8 <GUI_SetFont>
 800d0ee:	2312      	movs	r3, #18
 800d0f0:	9308      	str	r3, [sp, #32]
 800d0f2:	a807      	add	r0, sp, #28
 800d0f4:	47a8      	blx	r5
 800d0f6:	f7f8 ff49 	bl	8005f8c <WM__GetNextIVR>
 800d0fa:	e7b8      	b.n	800d06e <_Paint+0x6e>
 800d0fc:	b011      	add	sp, #68	; 0x44
 800d0fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d102 <_cbTimer>:
 800d102:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d104:	4604      	mov	r4, r0
 800d106:	2100      	movs	r1, #0
 800d108:	4668      	mov	r0, sp
 800d10a:	2210      	movs	r2, #16
 800d10c:	f002 ffee 	bl	80100ec <memset>
 800d110:	6860      	ldr	r0, [r4, #4]
 800d112:	b150      	cbz	r0, 800d12a <_cbTimer+0x28>
 800d114:	f7fe fba2 	bl	800b85c <GUI_ALLOC_h2p>
 800d118:	f240 1313 	movw	r3, #275	; 0x113
 800d11c:	6840      	ldr	r0, [r0, #4]
 800d11e:	9300      	str	r3, [sp, #0]
 800d120:	4669      	mov	r1, sp
 800d122:	6863      	ldr	r3, [r4, #4]
 800d124:	9303      	str	r3, [sp, #12]
 800d126:	f7f8 fc2e 	bl	8005986 <WM_SendMessage>
 800d12a:	b004      	add	sp, #16
 800d12c:	bd10      	pop	{r4, pc}

0800d12e <WM_DeleteTimer>:
 800d12e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d130:	4605      	mov	r5, r0
 800d132:	b168      	cbz	r0, 800d150 <WM_DeleteTimer+0x22>
 800d134:	f7fe fb9c 	bl	800b870 <GUI_ALLOC_LockH>
 800d138:	ac02      	add	r4, sp, #8
 800d13a:	f844 0d04 	str.w	r0, [r4, #-4]!
 800d13e:	6800      	ldr	r0, [r0, #0]
 800d140:	f7fc fd00 	bl	8009b44 <GUI_TIMER_Delete>
 800d144:	4620      	mov	r0, r4
 800d146:	f7fe fba1 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d14a:	4628      	mov	r0, r5
 800d14c:	f7fe fbca 	bl	800b8e4 <GUI_ALLOC_Free>
 800d150:	b003      	add	sp, #12
 800d152:	bd30      	pop	{r4, r5, pc}

0800d154 <WM__DeleteAssocTimer>:
 800d154:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d156:	4605      	mov	r5, r0
 800d158:	a801      	add	r0, sp, #4
 800d15a:	f7fc fc71 	bl	8009a40 <GUI_TIMER__GetFirstTimer>
 800d15e:	4604      	mov	r4, r0
 800d160:	b1dc      	cbz	r4, 800d19a <WM__DeleteAssocTimer+0x46>
 800d162:	4620      	mov	r0, r4
 800d164:	2101      	movs	r1, #1
 800d166:	f7fc fd48 	bl	8009bfa <GUI_TIMER_GetFlag>
 800d16a:	9b01      	ldr	r3, [sp, #4]
 800d16c:	b183      	cbz	r3, 800d190 <WM__DeleteAssocTimer+0x3c>
 800d16e:	b178      	cbz	r0, 800d190 <WM__DeleteAssocTimer+0x3c>
 800d170:	4618      	mov	r0, r3
 800d172:	f7fe fb73 	bl	800b85c <GUI_ALLOC_h2p>
 800d176:	6843      	ldr	r3, [r0, #4]
 800d178:	42ab      	cmp	r3, r5
 800d17a:	d109      	bne.n	800d190 <WM__DeleteAssocTimer+0x3c>
 800d17c:	4620      	mov	r0, r4
 800d17e:	a901      	add	r1, sp, #4
 800d180:	9e01      	ldr	r6, [sp, #4]
 800d182:	f7fc fc75 	bl	8009a70 <GUI_TIMER__GetNextTimerLin>
 800d186:	4604      	mov	r4, r0
 800d188:	4630      	mov	r0, r6
 800d18a:	f7ff ffd0 	bl	800d12e <WM_DeleteTimer>
 800d18e:	e7e7      	b.n	800d160 <WM__DeleteAssocTimer+0xc>
 800d190:	4620      	mov	r0, r4
 800d192:	a901      	add	r1, sp, #4
 800d194:	f7fc fc6c 	bl	8009a70 <GUI_TIMER__GetNextTimerLin>
 800d198:	e7e1      	b.n	800d15e <WM__DeleteAssocTimer+0xa>
 800d19a:	b002      	add	sp, #8
 800d19c:	bd70      	pop	{r4, r5, r6, pc}
	...

0800d1a0 <WM_CreateTimer>:
 800d1a0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800d1a4:	4680      	mov	r8, r0
 800d1a6:	200c      	movs	r0, #12
 800d1a8:	460f      	mov	r7, r1
 800d1aa:	4616      	mov	r6, r2
 800d1ac:	f7fe fd5a 	bl	800bc64 <GUI_ALLOC_AllocZero>
 800d1b0:	4604      	mov	r4, r0
 800d1b2:	b1f0      	cbz	r0, 800d1f2 <WM_CreateTimer+0x52>
 800d1b4:	f7fc fd36 	bl	8009c24 <GUI_GetTime>
 800d1b8:	4622      	mov	r2, r4
 800d1ba:	1981      	adds	r1, r0, r6
 800d1bc:	2301      	movs	r3, #1
 800d1be:	480f      	ldr	r0, [pc, #60]	; (800d1fc <WM_CreateTimer+0x5c>)
 800d1c0:	f7fc fc72 	bl	8009aa8 <GUI_TIMER_Create>
 800d1c4:	4605      	mov	r5, r0
 800d1c6:	4620      	mov	r0, r4
 800d1c8:	b185      	cbz	r5, 800d1ec <WM_CreateTimer+0x4c>
 800d1ca:	f7fe fb51 	bl	800b870 <GUI_ALLOC_LockH>
 800d1ce:	4603      	mov	r3, r0
 800d1d0:	a802      	add	r0, sp, #8
 800d1d2:	f8c3 8004 	str.w	r8, [r3, #4]
 800d1d6:	f840 3d04 	str.w	r3, [r0, #-4]!
 800d1da:	609f      	str	r7, [r3, #8]
 800d1dc:	601d      	str	r5, [r3, #0]
 800d1de:	f7fe fb55 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d1e2:	4628      	mov	r0, r5
 800d1e4:	4631      	mov	r1, r6
 800d1e6:	f7fc fce1 	bl	8009bac <GUI_TIMER_SetPeriod>
 800d1ea:	e002      	b.n	800d1f2 <WM_CreateTimer+0x52>
 800d1ec:	f7fe fb7a 	bl	800b8e4 <GUI_ALLOC_Free>
 800d1f0:	462c      	mov	r4, r5
 800d1f2:	4620      	mov	r0, r4
 800d1f4:	b002      	add	sp, #8
 800d1f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d1fa:	bf00      	nop
 800d1fc:	0800d103 	.word	0x0800d103

0800d200 <WM_RestartTimer>:
 800d200:	b513      	push	{r0, r1, r4, lr}
 800d202:	460c      	mov	r4, r1
 800d204:	b180      	cbz	r0, 800d228 <WM_RestartTimer+0x28>
 800d206:	f7fe fb33 	bl	800b870 <GUI_ALLOC_LockH>
 800d20a:	9001      	str	r0, [sp, #4]
 800d20c:	b11c      	cbz	r4, 800d216 <WM_RestartTimer+0x16>
 800d20e:	6800      	ldr	r0, [r0, #0]
 800d210:	4621      	mov	r1, r4
 800d212:	f7fc fccb 	bl	8009bac <GUI_TIMER_SetPeriod>
 800d216:	ac02      	add	r4, sp, #8
 800d218:	f854 3d04 	ldr.w	r3, [r4, #-4]!
 800d21c:	6818      	ldr	r0, [r3, #0]
 800d21e:	f7fc fcd3 	bl	8009bc8 <GUI_TIMER_Restart>
 800d222:	4620      	mov	r0, r4
 800d224:	f7fe fb32 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d228:	b002      	add	sp, #8
 800d22a:	bd10      	pop	{r4, pc}

0800d22c <_Convert16>:
 800d22c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d230:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800d234:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800d238:	4605      	mov	r5, r0
 800d23a:	460e      	mov	r6, r1
 800d23c:	4690      	mov	r8, r2
 800d23e:	461f      	mov	r7, r3
 800d240:	4614      	mov	r4, r2
 800d242:	4689      	mov	r9, r1
 800d244:	f835 0b02 	ldrh.w	r0, [r5], #2
 800d248:	47d8      	blx	fp
 800d24a:	47d0      	blx	sl
 800d24c:	3c01      	subs	r4, #1
 800d24e:	f849 0b04 	str.w	r0, [r9], #4
 800d252:	d1f7      	bne.n	800d244 <_Convert16+0x18>
 800d254:	2f1f      	cmp	r7, #31
 800d256:	d806      	bhi.n	800d266 <_Convert16+0x3a>
 800d258:	4630      	mov	r0, r6
 800d25a:	4641      	mov	r1, r8
 800d25c:	463a      	mov	r2, r7
 800d25e:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d262:	f001 bf03 	b.w	800f06c <GUI__CompactPixelIndices>
 800d266:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d26a <_Convert8>:
 800d26a:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d26e:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800d272:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800d276:	4605      	mov	r5, r0
 800d278:	460e      	mov	r6, r1
 800d27a:	4690      	mov	r8, r2
 800d27c:	461f      	mov	r7, r3
 800d27e:	4689      	mov	r9, r1
 800d280:	4604      	mov	r4, r0
 800d282:	f814 0b01 	ldrb.w	r0, [r4], #1
 800d286:	47d8      	blx	fp
 800d288:	47d0      	blx	sl
 800d28a:	1b2b      	subs	r3, r5, r4
 800d28c:	4443      	add	r3, r8
 800d28e:	f849 0b04 	str.w	r0, [r9], #4
 800d292:	2b00      	cmp	r3, #0
 800d294:	d1f5      	bne.n	800d282 <_Convert8+0x18>
 800d296:	2f1f      	cmp	r7, #31
 800d298:	d806      	bhi.n	800d2a8 <_Convert8+0x3e>
 800d29a:	4630      	mov	r0, r6
 800d29c:	4641      	mov	r1, r8
 800d29e:	463a      	mov	r2, r7
 800d2a0:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2a4:	f001 bee2 	b.w	800f06c <GUI__CompactPixelIndices>
 800d2a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d2ac <GUI_MEMDEV__WriteToActiveOpaque>:
 800d2ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2b0:	b09d      	sub	sp, #116	; 0x74
 800d2b2:	4606      	mov	r6, r0
 800d2b4:	910f      	str	r1, [sp, #60]	; 0x3c
 800d2b6:	920d      	str	r2, [sp, #52]	; 0x34
 800d2b8:	2800      	cmp	r0, #0
 800d2ba:	f000 8386 	beq.w	800d9ca <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d2be:	f7fe fad7 	bl	800b870 <GUI_ALLOC_LockH>
 800d2c2:	ab1c      	add	r3, sp, #112	; 0x70
 800d2c4:	6944      	ldr	r4, [r0, #20]
 800d2c6:	f843 0d1c 	str.w	r0, [r3, #-28]!
 800d2ca:	4618      	mov	r0, r3
 800d2cc:	f7fe fade 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d2d0:	4630      	mov	r0, r6
 800d2d2:	f7fa f921 	bl	8007518 <GUI_MEMDEV_GetBitsPerPixel>
 800d2d6:	2808      	cmp	r0, #8
 800d2d8:	4601      	mov	r1, r0
 800d2da:	dd02      	ble.n	800d2e2 <GUI_MEMDEV__WriteToActiveOpaque+0x36>
 800d2dc:	2c00      	cmp	r4, #0
 800d2de:	f000 81c3 	beq.w	800d668 <GUI_MEMDEV__WriteToActiveOpaque+0x3bc>
 800d2e2:	2201      	movs	r2, #1
 800d2e4:	f04f 0800 	mov.w	r8, #0
 800d2e8:	4630      	mov	r0, r6
 800d2ea:	921b      	str	r2, [sp, #108]	; 0x6c
 800d2ec:	920b      	str	r2, [sp, #44]	; 0x2c
 800d2ee:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 800d2f2:	f7fe fabd 	bl	800b870 <GUI_ALLOC_LockH>
 800d2f6:	6803      	ldr	r3, [r0, #0]
 800d2f8:	f8df a60c 	ldr.w	sl, [pc, #1548]	; 800d908 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>
 800d2fc:	691b      	ldr	r3, [r3, #16]
 800d2fe:	f9b0 100a 	ldrsh.w	r1, [r0, #10]
 800d302:	685b      	ldr	r3, [r3, #4]
 800d304:	930e      	str	r3, [sp, #56]	; 0x38
 800d306:	f10d 0b70 	add.w	fp, sp, #112	; 0x70
 800d30a:	f8da 3000 	ldr.w	r3, [sl]
 800d30e:	f84b 0d14 	str.w	r0, [fp, #-20]!
 800d312:	6904      	ldr	r4, [r0, #16]
 800d314:	6945      	ldr	r5, [r0, #20]
 800d316:	f8d0 900c 	ldr.w	r9, [r0, #12]
 800d31a:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 800d31e:	7c58      	ldrb	r0, [r3, #17]
 800d320:	9112      	str	r1, [sp, #72]	; 0x48
 800d322:	f7fb fb17 	bl	8008954 <GUI_GetBitsPerPixelEx>
 800d326:	f8da 3000 	ldr.w	r3, [sl]
 800d32a:	9010      	str	r0, [sp, #64]	; 0x40
 800d32c:	7c58      	ldrb	r0, [r3, #17]
 800d32e:	f7fb fb2f 	bl	8008990 <GUI_GetpfIndex2ColorEx>
 800d332:	4603      	mov	r3, r0
 800d334:	4658      	mov	r0, fp
 800d336:	9309      	str	r3, [sp, #36]	; 0x24
 800d338:	f7fe faa8 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d33c:	2c08      	cmp	r4, #8
 800d33e:	4651      	mov	r1, sl
 800d340:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d342:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d344:	d904      	bls.n	800d350 <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 800d346:	2c10      	cmp	r4, #16
 800d348:	bf8c      	ite	hi
 800d34a:	2204      	movhi	r2, #4
 800d34c:	2202      	movls	r2, #2
 800d34e:	e005      	b.n	800d35c <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 800d350:	2c01      	cmp	r4, #1
 800d352:	d103      	bne.n	800d35c <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 800d354:	9411      	str	r4, [sp, #68]	; 0x44
 800d356:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 800d35a:	e000      	b.n	800d35e <GUI_MEMDEV__WriteToActiveOpaque+0xb2>
 800d35c:	9211      	str	r2, [sp, #68]	; 0x44
 800d35e:	980e      	ldr	r0, [sp, #56]	; 0x38
 800d360:	4298      	cmp	r0, r3
 800d362:	f000 80e2 	beq.w	800d52a <GUI_MEMDEV__WriteToActiveOpaque+0x27e>
 800d366:	680b      	ldr	r3, [r1, #0]
 800d368:	7c58      	ldrb	r0, [r3, #17]
 800d36a:	f7fb fb19 	bl	80089a0 <GUI_GetpfColor2IndexEx>
 800d36e:	9013      	str	r0, [sp, #76]	; 0x4c
 800d370:	00b8      	lsls	r0, r7, #2
 800d372:	f7fe fc49 	bl	800bc08 <GUI_ALLOC_AllocNoInit>
 800d376:	900c      	str	r0, [sp, #48]	; 0x30
 800d378:	2800      	cmp	r0, #0
 800d37a:	f000 8326 	beq.w	800d9ca <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d37e:	4630      	mov	r0, r6
 800d380:	f7f9 fa62 	bl	8006848 <GUI_MEMDEV_GetDataPtr>
 800d384:	4606      	mov	r6, r0
 800d386:	2d00      	cmp	r5, #0
 800d388:	f000 80be 	beq.w	800d508 <GUI_MEMDEV__WriteToActiveOpaque+0x25c>
 800d38c:	4628      	mov	r0, r5
 800d38e:	f7fe fa6f 	bl	800b870 <GUI_ALLOC_LockH>
 800d392:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 800d396:	9018      	str	r0, [sp, #96]	; 0x60
 800d398:	f04f 0a00 	mov.w	sl, #0
 800d39c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800d39e:	4592      	cmp	sl, r2
 800d3a0:	f280 80ae 	bge.w	800d500 <GUI_MEMDEV__WriteToActiveOpaque+0x254>
 800d3a4:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d3a6:	2300      	movs	r3, #0
 800d3a8:	9319      	str	r3, [sp, #100]	; 0x64
 800d3aa:	6883      	ldr	r3, [r0, #8]
 800d3ac:	a919      	add	r1, sp, #100	; 0x64
 800d3ae:	695b      	ldr	r3, [r3, #20]
 800d3b0:	4652      	mov	r2, sl
 800d3b2:	4798      	blx	r3
 800d3b4:	42b8      	cmp	r0, r7
 800d3b6:	4605      	mov	r5, r0
 800d3b8:	d12f      	bne.n	800d41a <GUI_MEMDEV__WriteToActiveOpaque+0x16e>
 800d3ba:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d3bc:	f7fe fa58 	bl	800b870 <GUI_ALLOC_LockH>
 800d3c0:	2c08      	cmp	r4, #8
 800d3c2:	4601      	mov	r1, r0
 800d3c4:	9016      	str	r0, [sp, #88]	; 0x58
 800d3c6:	d909      	bls.n	800d3dc <GUI_MEMDEV__WriteToActiveOpaque+0x130>
 800d3c8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d3ca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800d3cc:	9200      	str	r2, [sp, #0]
 800d3ce:	9301      	str	r3, [sp, #4]
 800d3d0:	4630      	mov	r0, r6
 800d3d2:	463a      	mov	r2, r7
 800d3d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d3d6:	f7ff ff29 	bl	800d22c <_Convert16>
 800d3da:	e008      	b.n	800d3ee <GUI_MEMDEV__WriteToActiveOpaque+0x142>
 800d3dc:	980e      	ldr	r0, [sp, #56]	; 0x38
 800d3de:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800d3e0:	9000      	str	r0, [sp, #0]
 800d3e2:	9201      	str	r2, [sp, #4]
 800d3e4:	4630      	mov	r0, r6
 800d3e6:	463a      	mov	r2, r7
 800d3e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d3ea:	f7ff ff3e 	bl	800d26a <_Convert8>
 800d3ee:	2301      	movs	r3, #1
 800d3f0:	9810      	ldr	r0, [sp, #64]	; 0x40
 800d3f2:	9002      	str	r0, [sp, #8]
 800d3f4:	ad1c      	add	r5, sp, #112	; 0x70
 800d3f6:	2200      	movs	r2, #0
 800d3f8:	9300      	str	r3, [sp, #0]
 800d3fa:	9301      	str	r3, [sp, #4]
 800d3fc:	9203      	str	r2, [sp, #12]
 800d3fe:	f855 2d18 	ldr.w	r2, [r5, #-24]!
 800d402:	9204      	str	r2, [sp, #16]
 800d404:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d406:	f8cd 8014 	str.w	r8, [sp, #20]
 800d40a:	4659      	mov	r1, fp
 800d40c:	463a      	mov	r2, r7
 800d40e:	f7fb fce3 	bl	8008dd8 <LCD_DrawBitmap>
 800d412:	4628      	mov	r0, r5
 800d414:	f7fe fa3a 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d418:	e060      	b.n	800d4dc <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 800d41a:	2c01      	cmp	r4, #1
 800d41c:	d15c      	bne.n	800d4d8 <GUI_MEMDEV__WriteToActiveOpaque+0x22c>
 800d41e:	2d00      	cmp	r5, #0
 800d420:	d05c      	beq.n	800d4dc <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 800d422:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d424:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800d426:	f8cd 900c 	str.w	r9, [sp, #12]
 800d42a:	2208      	movs	r2, #8
 800d42c:	fb90 f2f2 	sdiv	r2, r0, r2
 800d430:	4432      	add	r2, r6
 800d432:	2301      	movs	r3, #1
 800d434:	9204      	str	r2, [sp, #16]
 800d436:	f000 0207 	and.w	r2, r0, #7
 800d43a:	9300      	str	r3, [sp, #0]
 800d43c:	4408      	add	r0, r1
 800d43e:	9301      	str	r3, [sp, #4]
 800d440:	9302      	str	r3, [sp, #8]
 800d442:	9206      	str	r2, [sp, #24]
 800d444:	4659      	mov	r1, fp
 800d446:	462a      	mov	r2, r5
 800d448:	f8cd 8014 	str.w	r8, [sp, #20]
 800d44c:	f7fb fbe8 	bl	8008c20 <LCD__DrawBitmap_1bpp>
 800d450:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d452:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d454:	441d      	add	r5, r3
 800d456:	6883      	ldr	r3, [r0, #8]
 800d458:	9519      	str	r5, [sp, #100]	; 0x64
 800d45a:	695b      	ldr	r3, [r3, #20]
 800d45c:	a919      	add	r1, sp, #100	; 0x64
 800d45e:	4652      	mov	r2, sl
 800d460:	4798      	blx	r3
 800d462:	4605      	mov	r5, r0
 800d464:	e7db      	b.n	800d41e <GUI_MEMDEV__WriteToActiveOpaque+0x172>
 800d466:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d468:	f7fe fa02 	bl	800b870 <GUI_ALLOC_LockH>
 800d46c:	2c08      	cmp	r4, #8
 800d46e:	4601      	mov	r1, r0
 800d470:	9016      	str	r0, [sp, #88]	; 0x58
 800d472:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d474:	d938      	bls.n	800d4e8 <GUI_MEMDEV__WriteToActiveOpaque+0x23c>
 800d476:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d478:	9200      	str	r2, [sp, #0]
 800d47a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800d47c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800d47e:	9301      	str	r3, [sp, #4]
 800d480:	fb00 6002 	mla	r0, r0, r2, r6
 800d484:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d486:	462a      	mov	r2, r5
 800d488:	f7ff fed0 	bl	800d22c <_Convert16>
 800d48c:	2301      	movs	r3, #1
 800d48e:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 800d492:	9810      	ldr	r0, [sp, #64]	; 0x40
 800d494:	9300      	str	r3, [sp, #0]
 800d496:	2200      	movs	r2, #0
 800d498:	9301      	str	r3, [sp, #4]
 800d49a:	9002      	str	r0, [sp, #8]
 800d49c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800d49e:	9203      	str	r2, [sp, #12]
 800d4a0:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d4a2:	f85c 2d18 	ldr.w	r2, [ip, #-24]!
 800d4a6:	9204      	str	r2, [sp, #16]
 800d4a8:	4408      	add	r0, r1
 800d4aa:	462a      	mov	r2, r5
 800d4ac:	4659      	mov	r1, fp
 800d4ae:	f8cd 8014 	str.w	r8, [sp, #20]
 800d4b2:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 800d4b6:	f7fb fc8f 	bl	8008dd8 <LCD_DrawBitmap>
 800d4ba:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 800d4be:	4660      	mov	r0, ip
 800d4c0:	f7fe f9e4 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d4c4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d4c6:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d4c8:	441d      	add	r5, r3
 800d4ca:	6883      	ldr	r3, [r0, #8]
 800d4cc:	9519      	str	r5, [sp, #100]	; 0x64
 800d4ce:	695b      	ldr	r3, [r3, #20]
 800d4d0:	a919      	add	r1, sp, #100	; 0x64
 800d4d2:	4652      	mov	r2, sl
 800d4d4:	4798      	blx	r3
 800d4d6:	4605      	mov	r5, r0
 800d4d8:	2d00      	cmp	r5, #0
 800d4da:	d1c4      	bne.n	800d466 <GUI_MEMDEV__WriteToActiveOpaque+0x1ba>
 800d4dc:	444e      	add	r6, r9
 800d4de:	f10a 0a01 	add.w	sl, sl, #1
 800d4e2:	f10b 0b01 	add.w	fp, fp, #1
 800d4e6:	e759      	b.n	800d39c <GUI_MEMDEV__WriteToActiveOpaque+0xf0>
 800d4e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d4ea:	9300      	str	r3, [sp, #0]
 800d4ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d4ee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800d4f0:	9201      	str	r2, [sp, #4]
 800d4f2:	fb00 6003 	mla	r0, r0, r3, r6
 800d4f6:	462a      	mov	r2, r5
 800d4f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d4fa:	f7ff feb6 	bl	800d26a <_Convert8>
 800d4fe:	e7c5      	b.n	800d48c <GUI_MEMDEV__WriteToActiveOpaque+0x1e0>
 800d500:	a818      	add	r0, sp, #96	; 0x60
 800d502:	f7fe f9c3 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d506:	e00e      	b.n	800d526 <GUI_MEMDEV__WriteToActiveOpaque+0x27a>
 800d508:	2301      	movs	r3, #1
 800d50a:	9300      	str	r3, [sp, #0]
 800d50c:	9301      	str	r3, [sp, #4]
 800d50e:	9004      	str	r0, [sp, #16]
 800d510:	9402      	str	r4, [sp, #8]
 800d512:	f8cd 900c 	str.w	r9, [sp, #12]
 800d516:	f8cd 8014 	str.w	r8, [sp, #20]
 800d51a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d51c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d51e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d520:	463a      	mov	r2, r7
 800d522:	f7fb fc59 	bl	8008dd8 <LCD_DrawBitmap>
 800d526:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d528:	e24d      	b.n	800d9c6 <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 800d52a:	4630      	mov	r0, r6
 800d52c:	f7f9 f98c 	bl	8006848 <GUI_MEMDEV_GetDataPtr>
 800d530:	4606      	mov	r6, r0
 800d532:	2d00      	cmp	r5, #0
 800d534:	f000 808a 	beq.w	800d64c <GUI_MEMDEV__WriteToActiveOpaque+0x3a0>
 800d538:	4628      	mov	r0, r5
 800d53a:	f7fe f999 	bl	800b870 <GUI_ALLOC_LockH>
 800d53e:	2500      	movs	r5, #0
 800d540:	9018      	str	r0, [sp, #96]	; 0x60
 800d542:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d544:	429d      	cmp	r5, r3
 800d546:	da7d      	bge.n	800d644 <GUI_MEMDEV__WriteToActiveOpaque+0x398>
 800d548:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d54a:	2300      	movs	r3, #0
 800d54c:	9319      	str	r3, [sp, #100]	; 0x64
 800d54e:	6883      	ldr	r3, [r0, #8]
 800d550:	a919      	add	r1, sp, #100	; 0x64
 800d552:	695b      	ldr	r3, [r3, #20]
 800d554:	462a      	mov	r2, r5
 800d556:	4798      	blx	r3
 800d558:	42b8      	cmp	r0, r7
 800d55a:	4682      	mov	sl, r0
 800d55c:	d124      	bne.n	800d5a8 <GUI_MEMDEV__WriteToActiveOpaque+0x2fc>
 800d55e:	46aa      	mov	sl, r5
 800d560:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d562:	6883      	ldr	r3, [r0, #8]
 800d564:	f10a 0b01 	add.w	fp, sl, #1
 800d568:	695b      	ldr	r3, [r3, #20]
 800d56a:	a919      	add	r1, sp, #100	; 0x64
 800d56c:	465a      	mov	r2, fp
 800d56e:	4798      	blx	r3
 800d570:	42b8      	cmp	r0, r7
 800d572:	d101      	bne.n	800d578 <GUI_MEMDEV__WriteToActiveOpaque+0x2cc>
 800d574:	46da      	mov	sl, fp
 800d576:	e7f3      	b.n	800d560 <GUI_MEMDEV__WriteToActiveOpaque+0x2b4>
 800d578:	ebc5 0b0a 	rsb	fp, r5, sl
 800d57c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d57e:	9604      	str	r6, [sp, #16]
 800d580:	2301      	movs	r3, #1
 800d582:	f10b 0b01 	add.w	fp, fp, #1
 800d586:	9300      	str	r3, [sp, #0]
 800d588:	9301      	str	r3, [sp, #4]
 800d58a:	4429      	add	r1, r5
 800d58c:	9402      	str	r4, [sp, #8]
 800d58e:	f8cd 900c 	str.w	r9, [sp, #12]
 800d592:	f8cd 8014 	str.w	r8, [sp, #20]
 800d596:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d598:	463a      	mov	r2, r7
 800d59a:	465b      	mov	r3, fp
 800d59c:	f7fb fc1c 	bl	8008dd8 <LCD_DrawBitmap>
 800d5a0:	fb09 660b 	mla	r6, r9, fp, r6
 800d5a4:	4655      	mov	r5, sl
 800d5a6:	e04b      	b.n	800d640 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 800d5a8:	2c01      	cmp	r4, #1
 800d5aa:	d127      	bne.n	800d5fc <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 800d5ac:	f1ba 0f00 	cmp.w	sl, #0
 800d5b0:	d022      	beq.n	800d5f8 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 800d5b2:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d5b4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800d5b6:	f8cd 900c 	str.w	r9, [sp, #12]
 800d5ba:	2208      	movs	r2, #8
 800d5bc:	fb90 f2f2 	sdiv	r2, r0, r2
 800d5c0:	4432      	add	r2, r6
 800d5c2:	9204      	str	r2, [sp, #16]
 800d5c4:	f000 0207 	and.w	r2, r0, #7
 800d5c8:	4408      	add	r0, r1
 800d5ca:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d5cc:	9206      	str	r2, [sp, #24]
 800d5ce:	2301      	movs	r3, #1
 800d5d0:	4652      	mov	r2, sl
 800d5d2:	9300      	str	r3, [sp, #0]
 800d5d4:	9301      	str	r3, [sp, #4]
 800d5d6:	9302      	str	r3, [sp, #8]
 800d5d8:	4429      	add	r1, r5
 800d5da:	f8cd 8014 	str.w	r8, [sp, #20]
 800d5de:	f7fb fb1f 	bl	8008c20 <LCD__DrawBitmap_1bpp>
 800d5e2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d5e4:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d5e6:	4453      	add	r3, sl
 800d5e8:	9319      	str	r3, [sp, #100]	; 0x64
 800d5ea:	6883      	ldr	r3, [r0, #8]
 800d5ec:	a919      	add	r1, sp, #100	; 0x64
 800d5ee:	695b      	ldr	r3, [r3, #20]
 800d5f0:	462a      	mov	r2, r5
 800d5f2:	4798      	blx	r3
 800d5f4:	4682      	mov	sl, r0
 800d5f6:	e7d9      	b.n	800d5ac <GUI_MEMDEV__WriteToActiveOpaque+0x300>
 800d5f8:	444e      	add	r6, r9
 800d5fa:	e021      	b.n	800d640 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 800d5fc:	f1ba 0f00 	cmp.w	sl, #0
 800d600:	d0fa      	beq.n	800d5f8 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 800d602:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d604:	9911      	ldr	r1, [sp, #68]	; 0x44
 800d606:	9402      	str	r4, [sp, #8]
 800d608:	fb00 6201 	mla	r2, r0, r1, r6
 800d60c:	9204      	str	r2, [sp, #16]
 800d60e:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d610:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800d612:	f8cd 900c 	str.w	r9, [sp, #12]
 800d616:	2301      	movs	r3, #1
 800d618:	4410      	add	r0, r2
 800d61a:	9300      	str	r3, [sp, #0]
 800d61c:	4652      	mov	r2, sl
 800d61e:	9301      	str	r3, [sp, #4]
 800d620:	4429      	add	r1, r5
 800d622:	f8cd 8014 	str.w	r8, [sp, #20]
 800d626:	f7fb fbd7 	bl	8008dd8 <LCD_DrawBitmap>
 800d62a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d62c:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d62e:	4453      	add	r3, sl
 800d630:	9319      	str	r3, [sp, #100]	; 0x64
 800d632:	6883      	ldr	r3, [r0, #8]
 800d634:	a919      	add	r1, sp, #100	; 0x64
 800d636:	695b      	ldr	r3, [r3, #20]
 800d638:	462a      	mov	r2, r5
 800d63a:	4798      	blx	r3
 800d63c:	4682      	mov	sl, r0
 800d63e:	e7dd      	b.n	800d5fc <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 800d640:	3501      	adds	r5, #1
 800d642:	e77e      	b.n	800d542 <GUI_MEMDEV__WriteToActiveOpaque+0x296>
 800d644:	a818      	add	r0, sp, #96	; 0x60
 800d646:	f7fe f921 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d64a:	e1be      	b.n	800d9ca <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d64c:	2301      	movs	r3, #1
 800d64e:	9300      	str	r3, [sp, #0]
 800d650:	9301      	str	r3, [sp, #4]
 800d652:	9004      	str	r0, [sp, #16]
 800d654:	9402      	str	r4, [sp, #8]
 800d656:	f8cd 900c 	str.w	r9, [sp, #12]
 800d65a:	f8cd 8014 	str.w	r8, [sp, #20]
 800d65e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d660:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d662:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d664:	463a      	mov	r2, r7
 800d666:	e041      	b.n	800d6ec <GUI_MEMDEV__WriteToActiveOpaque+0x440>
 800d668:	4630      	mov	r0, r6
 800d66a:	910a      	str	r1, [sp, #40]	; 0x28
 800d66c:	f7fe f900 	bl	800b870 <GUI_ALLOC_LockH>
 800d670:	4682      	mov	sl, r0
 800d672:	a81c      	add	r0, sp, #112	; 0x70
 800d674:	f8ba 200a 	ldrh.w	r2, [sl, #10]
 800d678:	f840 ad10 	str.w	sl, [r0, #-16]!
 800d67c:	f8da 4000 	ldr.w	r4, [sl]
 800d680:	9210      	str	r2, [sp, #64]	; 0x40
 800d682:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800d686:	f8ba 7008 	ldrh.w	r7, [sl, #8]
 800d68a:	4c9e      	ldr	r4, [pc, #632]	; (800d904 <GUI_MEMDEV__WriteToActiveOpaque+0x658>)
 800d68c:	b213      	sxth	r3, r2
 800d68e:	f8da 200c 	ldr.w	r2, [sl, #12]
 800d692:	920b      	str	r2, [sp, #44]	; 0x2c
 800d694:	9309      	str	r3, [sp, #36]	; 0x24
 800d696:	f7fe f8f9 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d69a:	f8d9 0004 	ldr.w	r0, [r9, #4]
 800d69e:	900e      	str	r0, [sp, #56]	; 0x38
 800d6a0:	4899      	ldr	r0, [pc, #612]	; (800d908 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>)
 800d6a2:	6800      	ldr	r0, [r0, #0]
 800d6a4:	7c40      	ldrb	r0, [r0, #17]
 800d6a6:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
 800d6aa:	6925      	ldr	r5, [r4, #16]
 800d6ac:	f8d5 8000 	ldr.w	r8, [r5]
 800d6b0:	f7fb f950 	bl	8008954 <GUI_GetBitsPerPixelEx>
 800d6b4:	2808      	cmp	r0, #8
 800d6b6:	fa0f fb87 	sxth.w	fp, r7
 800d6ba:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d6bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d6be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d6c0:	d904      	bls.n	800d6cc <GUI_MEMDEV__WriteToActiveOpaque+0x420>
 800d6c2:	2810      	cmp	r0, #16
 800d6c4:	bf8c      	ite	hi
 800d6c6:	2404      	movhi	r4, #4
 800d6c8:	2402      	movls	r4, #2
 800d6ca:	e000      	b.n	800d6ce <GUI_MEMDEV__WriteToActiveOpaque+0x422>
 800d6cc:	2401      	movs	r4, #1
 800d6ce:	45a9      	cmp	r9, r5
 800d6d0:	d10f      	bne.n	800d6f2 <GUI_MEMDEV__WriteToActiveOpaque+0x446>
 800d6d2:	2001      	movs	r0, #1
 800d6d4:	9203      	str	r2, [sp, #12]
 800d6d6:	f10a 0218 	add.w	r2, sl, #24
 800d6da:	9000      	str	r0, [sp, #0]
 800d6dc:	9001      	str	r0, [sp, #4]
 800d6de:	9102      	str	r1, [sp, #8]
 800d6e0:	9204      	str	r2, [sp, #16]
 800d6e2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d6e4:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d6e6:	2200      	movs	r2, #0
 800d6e8:	9205      	str	r2, [sp, #20]
 800d6ea:	465a      	mov	r2, fp
 800d6ec:	f7fb fb74 	bl	8008dd8 <LCD_DrawBitmap>
 800d6f0:	e16b      	b.n	800d9ca <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d6f2:	2920      	cmp	r1, #32
 800d6f4:	f040 808e 	bne.w	800d814 <GUI_MEMDEV__WriteToActiveOpaque+0x568>
 800d6f8:	fb0b f004 	mul.w	r0, fp, r4
 800d6fc:	f7fe fa84 	bl	800bc08 <GUI_ALLOC_AllocNoInit>
 800d700:	900e      	str	r0, [sp, #56]	; 0x38
 800d702:	2800      	cmp	r0, #0
 800d704:	f000 8161 	beq.w	800d9ca <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d708:	f7fe f8b2 	bl	800b870 <GUI_ALLOC_LockH>
 800d70c:	901a      	str	r0, [sp, #104]	; 0x68
 800d70e:	4630      	mov	r0, r6
 800d710:	f7fe f8ae 	bl	800b870 <GUI_ALLOC_LockH>
 800d714:	9018      	str	r0, [sp, #96]	; 0x60
 800d716:	692b      	ldr	r3, [r5, #16]
 800d718:	f100 0a18 	add.w	sl, r0, #24
 800d71c:	ea4f 068b 	mov.w	r6, fp, lsl #2
 800d720:	ea4f 09c4 	mov.w	r9, r4, lsl #3
 800d724:	2b00      	cmp	r3, #0
 800d726:	d02f      	beq.n	800d788 <GUI_MEMDEV__WriteToActiveOpaque+0x4dc>
 800d728:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 800d72c:	2c02      	cmp	r4, #2
 800d72e:	d003      	beq.n	800d738 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 800d730:	2c04      	cmp	r4, #4
 800d732:	d001      	beq.n	800d738 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 800d734:	2c01      	cmp	r4, #1
 800d736:	d106      	bne.n	800d746 <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 800d738:	4650      	mov	r0, sl
 800d73a:	692f      	ldr	r7, [r5, #16]
 800d73c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d73e:	465a      	mov	r2, fp
 800d740:	4623      	mov	r3, r4
 800d742:	47b8      	blx	r7
 800d744:	44b2      	add	sl, r6
 800d746:	2301      	movs	r3, #1
 800d748:	2200      	movs	r2, #0
 800d74a:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d74c:	9300      	str	r3, [sp, #0]
 800d74e:	9301      	str	r3, [sp, #4]
 800d750:	9203      	str	r2, [sp, #12]
 800d752:	9104      	str	r1, [sp, #16]
 800d754:	9205      	str	r2, [sp, #20]
 800d756:	4641      	mov	r1, r8
 800d758:	465a      	mov	r2, fp
 800d75a:	f8cd 9008 	str.w	r9, [sp, #8]
 800d75e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d760:	f7fb fb3a 	bl	8008dd8 <LCD_DrawBitmap>
 800d764:	9910      	ldr	r1, [sp, #64]	; 0x40
 800d766:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d768:	f108 0701 	add.w	r7, r8, #1
 800d76c:	fa02 f381 	sxtah	r3, r2, r1
 800d770:	42bb      	cmp	r3, r7
 800d772:	d107      	bne.n	800d784 <GUI_MEMDEV__WriteToActiveOpaque+0x4d8>
 800d774:	a818      	add	r0, sp, #96	; 0x60
 800d776:	f7fe f889 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d77a:	a81a      	add	r0, sp, #104	; 0x68
 800d77c:	f7fe f886 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d780:	980e      	ldr	r0, [sp, #56]	; 0x38
 800d782:	e120      	b.n	800d9c6 <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 800d784:	46b8      	mov	r8, r7
 800d786:	e7d1      	b.n	800d72c <GUI_MEMDEV__WriteToActiveOpaque+0x480>
 800d788:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800d78a:	2c02      	cmp	r4, #2
 800d78c:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800d78e:	d00e      	beq.n	800d7ae <GUI_MEMDEV__WriteToActiveOpaque+0x502>
 800d790:	2c04      	cmp	r4, #4
 800d792:	d018      	beq.n	800d7c6 <GUI_MEMDEV__WriteToActiveOpaque+0x51a>
 800d794:	2c01      	cmp	r4, #1
 800d796:	d125      	bne.n	800d7e4 <GUI_MEMDEV__WriteToActiveOpaque+0x538>
 800d798:	2300      	movs	r3, #0
 800d79a:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 800d79e:	9309      	str	r3, [sp, #36]	; 0x24
 800d7a0:	47c0      	blx	r8
 800d7a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d7a4:	54f8      	strb	r0, [r7, r3]
 800d7a6:	3301      	adds	r3, #1
 800d7a8:	459b      	cmp	fp, r3
 800d7aa:	d1f6      	bne.n	800d79a <GUI_MEMDEV__WriteToActiveOpaque+0x4ee>
 800d7ac:	e019      	b.n	800d7e2 <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 800d7ae:	2300      	movs	r3, #0
 800d7b0:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 800d7b4:	9309      	str	r3, [sp, #36]	; 0x24
 800d7b6:	47c0      	blx	r8
 800d7b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d7ba:	f827 0013 	strh.w	r0, [r7, r3, lsl #1]
 800d7be:	3301      	adds	r3, #1
 800d7c0:	459b      	cmp	fp, r3
 800d7c2:	d1f5      	bne.n	800d7b0 <GUI_MEMDEV__WriteToActiveOpaque+0x504>
 800d7c4:	e00d      	b.n	800d7e2 <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 800d7c6:	465a      	mov	r2, fp
 800d7c8:	2300      	movs	r3, #0
 800d7ca:	f85a 0003 	ldr.w	r0, [sl, r3]
 800d7ce:	920b      	str	r2, [sp, #44]	; 0x2c
 800d7d0:	9309      	str	r3, [sp, #36]	; 0x24
 800d7d2:	47c0      	blx	r8
 800d7d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d7d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d7d8:	3a01      	subs	r2, #1
 800d7da:	50f8      	str	r0, [r7, r3]
 800d7dc:	f103 0304 	add.w	r3, r3, #4
 800d7e0:	d1f3      	bne.n	800d7ca <GUI_MEMDEV__WriteToActiveOpaque+0x51e>
 800d7e2:	44b2      	add	sl, r6
 800d7e4:	2301      	movs	r3, #1
 800d7e6:	2200      	movs	r2, #0
 800d7e8:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d7ea:	9300      	str	r3, [sp, #0]
 800d7ec:	9301      	str	r3, [sp, #4]
 800d7ee:	9203      	str	r2, [sp, #12]
 800d7f0:	9104      	str	r1, [sp, #16]
 800d7f2:	9205      	str	r2, [sp, #20]
 800d7f4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d7f6:	f8cd 9008 	str.w	r9, [sp, #8]
 800d7fa:	4629      	mov	r1, r5
 800d7fc:	465a      	mov	r2, fp
 800d7fe:	f7fb faeb 	bl	8008dd8 <LCD_DrawBitmap>
 800d802:	9810      	ldr	r0, [sp, #64]	; 0x40
 800d804:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d806:	1c6f      	adds	r7, r5, #1
 800d808:	fa01 f380 	sxtah	r3, r1, r0
 800d80c:	42bb      	cmp	r3, r7
 800d80e:	d0b1      	beq.n	800d774 <GUI_MEMDEV__WriteToActiveOpaque+0x4c8>
 800d810:	463d      	mov	r5, r7
 800d812:	e7ba      	b.n	800d78a <GUI_MEMDEV__WriteToActiveOpaque+0x4de>
 800d814:	2910      	cmp	r1, #16
 800d816:	f040 80d8 	bne.w	800d9ca <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d81a:	fa0f fa87 	sxth.w	sl, r7
 800d81e:	fb0a f004 	mul.w	r0, sl, r4
 800d822:	f7fe f9f1 	bl	800bc08 <GUI_ALLOC_AllocNoInit>
 800d826:	9012      	str	r0, [sp, #72]	; 0x48
 800d828:	2800      	cmp	r0, #0
 800d82a:	f000 80ce 	beq.w	800d9ca <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d82e:	f7fe f81f 	bl	800b870 <GUI_ALLOC_LockH>
 800d832:	901a      	str	r0, [sp, #104]	; 0x68
 800d834:	4630      	mov	r0, r6
 800d836:	f7fe f81b 	bl	800b870 <GUI_ALLOC_LockH>
 800d83a:	9018      	str	r0, [sp, #96]	; 0x60
 800d83c:	692b      	ldr	r3, [r5, #16]
 800d83e:	f100 0618 	add.w	r6, r0, #24
 800d842:	b113      	cbz	r3, 800d84a <GUI_MEMDEV__WriteToActiveOpaque+0x59e>
 800d844:	f8d9 3014 	ldr.w	r3, [r9, #20]
 800d848:	b92b      	cbnz	r3, 800d856 <GUI_MEMDEV__WriteToActiveOpaque+0x5aa>
 800d84a:	00e2      	lsls	r2, r4, #3
 800d84c:	b23f      	sxth	r7, r7
 800d84e:	9211      	str	r2, [sp, #68]	; 0x44
 800d850:	007f      	lsls	r7, r7, #1
 800d852:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800d854:	e088      	b.n	800d968 <GUI_MEMDEV__WriteToActiveOpaque+0x6bc>
 800d856:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 800d85a:	0080      	lsls	r0, r0, #2
 800d85c:	f7fe f9d4 	bl	800bc08 <GUI_ALLOC_AllocNoInit>
 800d860:	9011      	str	r0, [sp, #68]	; 0x44
 800d862:	b118      	cbz	r0, 800d86c <GUI_MEMDEV__WriteToActiveOpaque+0x5c0>
 800d864:	f7fe f804 	bl	800b870 <GUI_ALLOC_LockH>
 800d868:	9019      	str	r0, [sp, #100]	; 0x64
 800d86a:	e001      	b.n	800d870 <GUI_MEMDEV__WriteToActiveOpaque+0x5c4>
 800d86c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d86e:	9319      	str	r3, [sp, #100]	; 0x64
 800d870:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d872:	2b00      	cmp	r3, #0
 800d874:	f000 80a0 	beq.w	800d9b8 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800d878:	b23f      	sxth	r7, r7
 800d87a:	007f      	lsls	r7, r7, #1
 800d87c:	970e      	str	r7, [sp, #56]	; 0x38
 800d87e:	00e7      	lsls	r7, r4, #3
 800d880:	9713      	str	r7, [sp, #76]	; 0x4c
 800d882:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800d884:	970c      	str	r7, [sp, #48]	; 0x30
 800d886:	2c02      	cmp	r4, #2
 800d888:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800d88c:	d004      	beq.n	800d898 <GUI_MEMDEV__WriteToActiveOpaque+0x5ec>
 800d88e:	2c04      	cmp	r4, #4
 800d890:	d007      	beq.n	800d8a2 <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 800d892:	2c01      	cmp	r4, #1
 800d894:	d114      	bne.n	800d8c0 <GUI_MEMDEV__WriteToActiveOpaque+0x614>
 800d896:	e004      	b.n	800d8a2 <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 800d898:	4630      	mov	r0, r6
 800d89a:	9919      	ldr	r1, [sp, #100]	; 0x64
 800d89c:	4652      	mov	r2, sl
 800d89e:	4623      	mov	r3, r4
 800d8a0:	e003      	b.n	800d8aa <GUI_MEMDEV__WriteToActiveOpaque+0x5fe>
 800d8a2:	9919      	ldr	r1, [sp, #100]	; 0x64
 800d8a4:	4630      	mov	r0, r6
 800d8a6:	4652      	mov	r2, sl
 800d8a8:	2302      	movs	r3, #2
 800d8aa:	f8d9 7014 	ldr.w	r7, [r9, #20]
 800d8ae:	47b8      	blx	r7
 800d8b0:	692f      	ldr	r7, [r5, #16]
 800d8b2:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d8b4:	4641      	mov	r1, r8
 800d8b6:	4652      	mov	r2, sl
 800d8b8:	4623      	mov	r3, r4
 800d8ba:	47b8      	blx	r7
 800d8bc:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800d8be:	443e      	add	r6, r7
 800d8c0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800d8c2:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d8c4:	9104      	str	r1, [sp, #16]
 800d8c6:	2301      	movs	r3, #1
 800d8c8:	2200      	movs	r2, #0
 800d8ca:	f107 0801 	add.w	r8, r7, #1
 800d8ce:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 800d8d0:	9300      	str	r3, [sp, #0]
 800d8d2:	9301      	str	r3, [sp, #4]
 800d8d4:	9702      	str	r7, [sp, #8]
 800d8d6:	9203      	str	r2, [sp, #12]
 800d8d8:	9205      	str	r2, [sp, #20]
 800d8da:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d8dc:	990c      	ldr	r1, [sp, #48]	; 0x30
 800d8de:	465a      	mov	r2, fp
 800d8e0:	f7fb fa7a 	bl	8008dd8 <LCD_DrawBitmap>
 800d8e4:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800d8e6:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d8e8:	fa00 f387 	sxtah	r3, r0, r7
 800d8ec:	4543      	cmp	r3, r8
 800d8ee:	d002      	beq.n	800d8f6 <GUI_MEMDEV__WriteToActiveOpaque+0x64a>
 800d8f0:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800d8f4:	e7c7      	b.n	800d886 <GUI_MEMDEV__WriteToActiveOpaque+0x5da>
 800d8f6:	a819      	add	r0, sp, #100	; 0x64
 800d8f8:	f7fd ffc8 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d8fc:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d8fe:	f7fd fff1 	bl	800b8e4 <GUI_ALLOC_Free>
 800d902:	e059      	b.n	800d9b8 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800d904:	20002d24 	.word	0x20002d24
 800d908:	200000b8 	.word	0x200000b8
 800d90c:	2c04      	cmp	r4, #4
 800d90e:	d041      	beq.n	800d994 <GUI_MEMDEV__WriteToActiveOpaque+0x6e8>
 800d910:	2c01      	cmp	r4, #1
 800d912:	d111      	bne.n	800d938 <GUI_MEMDEV__WriteToActiveOpaque+0x68c>
 800d914:	464a      	mov	r2, r9
 800d916:	4631      	mov	r1, r6
 800d918:	f831 0b02 	ldrh.w	r0, [r1], #2
 800d91c:	910a      	str	r1, [sp, #40]	; 0x28
 800d91e:	920b      	str	r2, [sp, #44]	; 0x2c
 800d920:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d922:	4798      	blx	r3
 800d924:	47c0      	blx	r8
 800d926:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d928:	f802 0b01 	strb.w	r0, [r2], #1
 800d92c:	eb09 000a 	add.w	r0, r9, sl
 800d930:	4282      	cmp	r2, r0
 800d932:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d934:	d1f0      	bne.n	800d918 <GUI_MEMDEV__WriteToActiveOpaque+0x66c>
 800d936:	443e      	add	r6, r7
 800d938:	2301      	movs	r3, #1
 800d93a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d93c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d93e:	9300      	str	r3, [sp, #0]
 800d940:	2200      	movs	r2, #0
 800d942:	9301      	str	r3, [sp, #4]
 800d944:	9002      	str	r0, [sp, #8]
 800d946:	9203      	str	r2, [sp, #12]
 800d948:	9104      	str	r1, [sp, #16]
 800d94a:	9205      	str	r2, [sp, #20]
 800d94c:	4629      	mov	r1, r5
 800d94e:	465a      	mov	r2, fp
 800d950:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d952:	f7fb fa41 	bl	8008dd8 <LCD_DrawBitmap>
 800d956:	9910      	ldr	r1, [sp, #64]	; 0x40
 800d958:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d95a:	f105 0901 	add.w	r9, r5, #1
 800d95e:	fa02 f381 	sxtah	r3, r2, r1
 800d962:	454b      	cmp	r3, r9
 800d964:	d028      	beq.n	800d9b8 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800d966:	464d      	mov	r5, r9
 800d968:	2c02      	cmp	r4, #2
 800d96a:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
 800d96e:	d1cd      	bne.n	800d90c <GUI_MEMDEV__WriteToActiveOpaque+0x660>
 800d970:	464b      	mov	r3, r9
 800d972:	4631      	mov	r1, r6
 800d974:	46d9      	mov	r9, fp
 800d976:	f831 0b02 	ldrh.w	r0, [r1], #2
 800d97a:	910a      	str	r1, [sp, #40]	; 0x28
 800d97c:	9309      	str	r3, [sp, #36]	; 0x24
 800d97e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d980:	4790      	blx	r2
 800d982:	47c0      	blx	r8
 800d984:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d986:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d988:	f823 0b02 	strh.w	r0, [r3], #2
 800d98c:	f1b9 0901 	subs.w	r9, r9, #1
 800d990:	d1f1      	bne.n	800d976 <GUI_MEMDEV__WriteToActiveOpaque+0x6ca>
 800d992:	e7d0      	b.n	800d936 <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 800d994:	464b      	mov	r3, r9
 800d996:	4631      	mov	r1, r6
 800d998:	46d9      	mov	r9, fp
 800d99a:	f831 0b02 	ldrh.w	r0, [r1], #2
 800d99e:	910a      	str	r1, [sp, #40]	; 0x28
 800d9a0:	9309      	str	r3, [sp, #36]	; 0x24
 800d9a2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d9a4:	4790      	blx	r2
 800d9a6:	47c0      	blx	r8
 800d9a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d9aa:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d9ac:	f843 0b04 	str.w	r0, [r3], #4
 800d9b0:	f1b9 0901 	subs.w	r9, r9, #1
 800d9b4:	d1f1      	bne.n	800d99a <GUI_MEMDEV__WriteToActiveOpaque+0x6ee>
 800d9b6:	e7be      	b.n	800d936 <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 800d9b8:	a818      	add	r0, sp, #96	; 0x60
 800d9ba:	f7fd ff67 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d9be:	a81a      	add	r0, sp, #104	; 0x68
 800d9c0:	f7fd ff64 	bl	800b88c <GUI_ALLOC_UnlockH>
 800d9c4:	9812      	ldr	r0, [sp, #72]	; 0x48
 800d9c6:	f7fd ff8d 	bl	800b8e4 <GUI_ALLOC_Free>
 800d9ca:	b01d      	add	sp, #116	; 0x74
 800d9cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d9d0 <GUI_MEMDEV__WriteToActiveAlpha>:
 800d9d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d9d4:	4d5f      	ldr	r5, [pc, #380]	; (800db54 <GUI_MEMDEV__WriteToActiveAlpha+0x184>)
 800d9d6:	4f60      	ldr	r7, [pc, #384]	; (800db58 <GUI_MEMDEV__WriteToActiveAlpha+0x188>)
 800d9d8:	682b      	ldr	r3, [r5, #0]
 800d9da:	7c5b      	ldrb	r3, [r3, #17]
 800d9dc:	b091      	sub	sp, #68	; 0x44
 800d9de:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 800d9e2:	900d      	str	r0, [sp, #52]	; 0x34
 800d9e4:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800d9e8:	460e      	mov	r6, r1
 800d9ea:	4614      	mov	r4, r2
 800d9ec:	f7fd ff40 	bl	800b870 <GUI_ALLOC_LockH>
 800d9f0:	4602      	mov	r2, r0
 800d9f2:	a810      	add	r0, sp, #64	; 0x40
 800d9f4:	6813      	ldr	r3, [r2, #0]
 800d9f6:	f840 2d08 	str.w	r2, [r0, #-8]!
 800d9fa:	691b      	ldr	r3, [r3, #16]
 800d9fc:	f8b2 a008 	ldrh.w	sl, [r2, #8]
 800da00:	685b      	ldr	r3, [r3, #4]
 800da02:	f8b2 900a 	ldrh.w	r9, [r2, #10]
 800da06:	9309      	str	r3, [sp, #36]	; 0x24
 800da08:	f7fd ff40 	bl	800b88c <GUI_ALLOC_UnlockH>
 800da0c:	682b      	ldr	r3, [r5, #0]
 800da0e:	7c5b      	ldrb	r3, [r3, #17]
 800da10:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 800da14:	68c3      	ldr	r3, [r0, #12]
 800da16:	2108      	movs	r1, #8
 800da18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800da1a:	4798      	blx	r3
 800da1c:	2817      	cmp	r0, #23
 800da1e:	bf88      	it	hi
 800da20:	2020      	movhi	r0, #32
 800da22:	9008      	str	r0, [sp, #32]
 800da24:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800da28:	f8d8 2000 	ldr.w	r2, [r8]
 800da2c:	910a      	str	r1, [sp, #40]	; 0x28
 800da2e:	2000      	movs	r0, #0
 800da30:	920b      	str	r2, [sp, #44]	; 0x2c
 800da32:	f7fb fef3 	bl	800981c <GUI__AllocAlphaBuffer>
 800da36:	2800      	cmp	r0, #0
 800da38:	f040 8089 	bne.w	800db4e <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800da3c:	682a      	ldr	r2, [r5, #0]
 800da3e:	fa0f f78a 	sxth.w	r7, sl
 800da42:	19f5      	adds	r5, r6, r7
 800da44:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
 800da48:	3d01      	subs	r5, #1
 800da4a:	1aed      	subs	r5, r5, r3
 800da4c:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 800da50:	2d00      	cmp	r5, #0
 800da52:	bfcc      	ite	gt
 800da54:	ebc5 0507 	rsbgt	r5, r5, r7
 800da58:	463d      	movle	r5, r7
 800da5a:	42b3      	cmp	r3, r6
 800da5c:	bfc3      	ittte	gt
 800da5e:	ebc6 0103 	rsbgt	r1, r6, r3
 800da62:	ebc1 0505 	rsbgt	r5, r1, r5
 800da66:	461e      	movgt	r6, r3
 800da68:	2100      	movle	r1, #0
 800da6a:	2d00      	cmp	r5, #0
 800da6c:	dd6f      	ble.n	800db4e <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800da6e:	fa0f f389 	sxth.w	r3, r9
 800da72:	18e0      	adds	r0, r4, r3
 800da74:	f9b2 c00e 	ldrsh.w	ip, [r2, #14]
 800da78:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 800da7c:	3801      	subs	r0, #1
 800da7e:	ebcc 0000 	rsb	r0, ip, r0
 800da82:	2800      	cmp	r0, #0
 800da84:	bfc8      	it	gt
 800da86:	ebc0 0303 	rsbgt	r3, r0, r3
 800da8a:	4294      	cmp	r4, r2
 800da8c:	bfbd      	ittte	lt
 800da8e:	ebc4 0b02 	rsblt	fp, r4, r2
 800da92:	ebcb 0303 	rsblt	r3, fp, r3
 800da96:	4614      	movlt	r4, r2
 800da98:	f04f 0b00 	movge.w	fp, #0
 800da9c:	2b00      	cmp	r3, #0
 800da9e:	dd56      	ble.n	800db4e <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800daa0:	fb07 1b0b 	mla	fp, r7, fp, r1
 800daa4:	18e3      	adds	r3, r4, r3
 800daa6:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800daaa:	930c      	str	r3, [sp, #48]	; 0x30
 800daac:	980d      	ldr	r0, [sp, #52]	; 0x34
 800daae:	f7f8 fecb 	bl	8006848 <GUI_MEMDEV_GetDataPtr>
 800dab2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dab4:	9300      	str	r3, [sp, #0]
 800dab6:	ab0f      	add	r3, sp, #60	; 0x3c
 800dab8:	eb00 020b 	add.w	r2, r0, fp
 800dabc:	9301      	str	r3, [sp, #4]
 800dabe:	4630      	mov	r0, r6
 800dac0:	4621      	mov	r1, r4
 800dac2:	462b      	mov	r3, r5
 800dac4:	f7fb fdc0 	bl	8009648 <GUI__DoAlphaBlending>
 800dac8:	4681      	mov	r9, r0
 800daca:	2800      	cmp	r0, #0
 800dacc:	d03f      	beq.n	800db4e <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800dace:	4b23      	ldr	r3, [pc, #140]	; (800db5c <GUI_MEMDEV__WriteToActiveAlpha+0x18c>)
 800dad0:	990a      	ldr	r1, [sp, #40]	; 0x28
 800dad2:	4299      	cmp	r1, r3
 800dad4:	d01e      	beq.n	800db14 <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800dad6:	4629      	mov	r1, r5
 800dad8:	9a08      	ldr	r2, [sp, #32]
 800dada:	4643      	mov	r3, r8
 800dadc:	f001 fc50 	bl	800f380 <GUI__CompactPixelIndicesEx>
 800dae0:	b9c0      	cbnz	r0, 800db14 <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800dae2:	f8d8 c010 	ldr.w	ip, [r8, #16]
 800dae6:	f1bc 0f00 	cmp.w	ip, #0
 800daea:	d006      	beq.n	800dafa <GUI_MEMDEV__WriteToActiveAlpha+0x12a>
 800daec:	4648      	mov	r0, r9
 800daee:	4649      	mov	r1, r9
 800daf0:	fa0f f28a 	sxth.w	r2, sl
 800daf4:	2304      	movs	r3, #4
 800daf6:	47e0      	blx	ip
 800daf8:	e00c      	b.n	800db14 <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800dafa:	464a      	mov	r2, r9
 800dafc:	463b      	mov	r3, r7
 800dafe:	6810      	ldr	r0, [r2, #0]
 800db00:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800db02:	9206      	str	r2, [sp, #24]
 800db04:	9307      	str	r3, [sp, #28]
 800db06:	4788      	blx	r1
 800db08:	9b07      	ldr	r3, [sp, #28]
 800db0a:	9a06      	ldr	r2, [sp, #24]
 800db0c:	3b01      	subs	r3, #1
 800db0e:	f842 0b04 	str.w	r0, [r2], #4
 800db12:	d1f4      	bne.n	800dafe <GUI_MEMDEV__WriteToActiveAlpha+0x12e>
 800db14:	9a08      	ldr	r2, [sp, #32]
 800db16:	9202      	str	r2, [sp, #8]
 800db18:	2301      	movs	r3, #1
 800db1a:	2200      	movs	r2, #0
 800db1c:	f104 0c01 	add.w	ip, r4, #1
 800db20:	9300      	str	r3, [sp, #0]
 800db22:	9301      	str	r3, [sp, #4]
 800db24:	9203      	str	r2, [sp, #12]
 800db26:	9205      	str	r2, [sp, #20]
 800db28:	f8cd 9010 	str.w	r9, [sp, #16]
 800db2c:	4630      	mov	r0, r6
 800db2e:	4621      	mov	r1, r4
 800db30:	462a      	mov	r2, r5
 800db32:	f8cd c01c 	str.w	ip, [sp, #28]
 800db36:	f7fb f94f 	bl	8008dd8 <LCD_DrawBitmap>
 800db3a:	2304      	movs	r3, #4
 800db3c:	fb1a bb03 	smlabb	fp, sl, r3, fp
 800db40:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800db44:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800db46:	459c      	cmp	ip, r3
 800db48:	d001      	beq.n	800db4e <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800db4a:	4664      	mov	r4, ip
 800db4c:	e7ae      	b.n	800daac <GUI_MEMDEV__WriteToActiveAlpha+0xdc>
 800db4e:	b011      	add	sp, #68	; 0x44
 800db50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800db54:	200000b8 	.word	0x200000b8
 800db58:	20002d24 	.word	0x20002d24
 800db5c:	0800be77 	.word	0x0800be77

0800db60 <GUI_MEMDEV_WriteAt>:
 800db60:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800db62:	460c      	mov	r4, r1
 800db64:	4615      	mov	r5, r2
 800db66:	4606      	mov	r6, r0
 800db68:	b330      	cbz	r0, 800dbb8 <GUI_MEMDEV_WriteAt+0x58>
 800db6a:	f7fd fe81 	bl	800b870 <GUI_ALLOC_LockH>
 800db6e:	4a13      	ldr	r2, [pc, #76]	; (800dbbc <GUI_MEMDEV_WriteAt+0x5c>)
 800db70:	8943      	ldrh	r3, [r0, #10]
 800db72:	9001      	str	r0, [sp, #4]
 800db74:	4294      	cmp	r4, r2
 800db76:	8902      	ldrh	r2, [r0, #8]
 800db78:	bf04      	itt	eq
 800db7a:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 800db7e:	f9b0 5006 	ldrsheq.w	r5, [r0, #6]
 800db82:	f8ad 4008 	strh.w	r4, [sp, #8]
 800db86:	3a01      	subs	r2, #1
 800db88:	3b01      	subs	r3, #1
 800db8a:	4422      	add	r2, r4
 800db8c:	442b      	add	r3, r5
 800db8e:	a801      	add	r0, sp, #4
 800db90:	f8ad 200c 	strh.w	r2, [sp, #12]
 800db94:	f8ad 500a 	strh.w	r5, [sp, #10]
 800db98:	f8ad 300e 	strh.w	r3, [sp, #14]
 800db9c:	f7fd fe76 	bl	800b88c <GUI_ALLOC_UnlockH>
 800dba0:	a802      	add	r0, sp, #8
 800dba2:	f7f8 fab5 	bl	8006110 <WM__InitIVRSearch>
 800dba6:	b138      	cbz	r0, 800dbb8 <GUI_MEMDEV_WriteAt+0x58>
 800dba8:	4630      	mov	r0, r6
 800dbaa:	4621      	mov	r1, r4
 800dbac:	462a      	mov	r2, r5
 800dbae:	f7f9 fc15 	bl	80073dc <GUI_MEMDEV__WriteToActiveAt>
 800dbb2:	f7f8 f9eb 	bl	8005f8c <WM__GetNextIVR>
 800dbb6:	e7f6      	b.n	800dba6 <GUI_MEMDEV_WriteAt+0x46>
 800dbb8:	b004      	add	sp, #16
 800dbba:	bd70      	pop	{r4, r5, r6, pc}
 800dbbc:	fffff001 	.word	0xfffff001

0800dbc0 <GUI_MEMDEV_Write>:
 800dbc0:	4901      	ldr	r1, [pc, #4]	; (800dbc8 <GUI_MEMDEV_Write+0x8>)
 800dbc2:	460a      	mov	r2, r1
 800dbc4:	f7ff bfcc 	b.w	800db60 <GUI_MEMDEV_WriteAt>
 800dbc8:	fffff001 	.word	0xfffff001

0800dbcc <GUI_USAGE_BM_AddPixel>:
 800dbcc:	4603      	mov	r3, r0
 800dbce:	b510      	push	{r4, lr}
 800dbd0:	f933 4b14 	ldrsh.w	r4, [r3], #20
 800dbd4:	1b09      	subs	r1, r1, r4
 800dbd6:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800dbda:	6900      	ldr	r0, [r0, #16]
 800dbdc:	1b12      	subs	r2, r2, r4
 800dbde:	fb00 3302 	mla	r3, r0, r2, r3
 800dbe2:	10c8      	asrs	r0, r1, #3
 800dbe4:	2280      	movs	r2, #128	; 0x80
 800dbe6:	f001 0107 	and.w	r1, r1, #7
 800dbea:	fa42 f101 	asr.w	r1, r2, r1
 800dbee:	5c1a      	ldrb	r2, [r3, r0]
 800dbf0:	4311      	orrs	r1, r2
 800dbf2:	5419      	strb	r1, [r3, r0]
 800dbf4:	bd10      	pop	{r4, pc}

0800dbf6 <GUI_USAGE_BM_GetNextDirty>:
 800dbf6:	b570      	push	{r4, r5, r6, lr}
 800dbf8:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800dbfc:	680b      	ldr	r3, [r1, #0]
 800dbfe:	8886      	ldrh	r6, [r0, #4]
 800dc00:	42a2      	cmp	r2, r4
 800dc02:	da41      	bge.n	800dc88 <GUI_USAGE_BM_GetNextDirty+0x92>
 800dc04:	b236      	sxth	r6, r6
 800dc06:	42b3      	cmp	r3, r6
 800dc08:	6904      	ldr	r4, [r0, #16]
 800dc0a:	da3d      	bge.n	800dc88 <GUI_USAGE_BM_GetNextDirty+0x92>
 800dc0c:	3014      	adds	r0, #20
 800dc0e:	fb04 0202 	mla	r2, r4, r2, r0
 800dc12:	10dd      	asrs	r5, r3, #3
 800dc14:	1e70      	subs	r0, r6, #1
 800dc16:	1954      	adds	r4, r2, r5
 800dc18:	ebc5 00e0 	rsb	r0, r5, r0, asr #3
 800dc1c:	5d55      	ldrb	r5, [r2, r5]
 800dc1e:	f003 0207 	and.w	r2, r3, #7
 800dc22:	fa05 f202 	lsl.w	r2, r5, r2
 800dc26:	3401      	adds	r4, #1
 800dc28:	b2d2      	uxtb	r2, r2
 800dc2a:	b93a      	cbnz	r2, 800dc3c <GUI_USAGE_BM_GetNextDirty+0x46>
 800dc2c:	b368      	cbz	r0, 800dc8a <GUI_USAGE_BM_GetNextDirty+0x94>
 800dc2e:	3308      	adds	r3, #8
 800dc30:	f814 2b01 	ldrb.w	r2, [r4], #1
 800dc34:	3801      	subs	r0, #1
 800dc36:	f023 0307 	bic.w	r3, r3, #7
 800dc3a:	e7f6      	b.n	800dc2a <GUI_USAGE_BM_GetNextDirty+0x34>
 800dc3c:	0615      	lsls	r5, r2, #24
 800dc3e:	d403      	bmi.n	800dc48 <GUI_USAGE_BM_GetNextDirty+0x52>
 800dc40:	0052      	lsls	r2, r2, #1
 800dc42:	b2d2      	uxtb	r2, r2
 800dc44:	3301      	adds	r3, #1
 800dc46:	e7f9      	b.n	800dc3c <GUI_USAGE_BM_GetNextDirty+0x46>
 800dc48:	2aff      	cmp	r2, #255	; 0xff
 800dc4a:	461d      	mov	r5, r3
 800dc4c:	d005      	beq.n	800dc5a <GUI_USAGE_BM_GetNextDirty+0x64>
 800dc4e:	0656      	lsls	r6, r2, #25
 800dc50:	d504      	bpl.n	800dc5c <GUI_USAGE_BM_GetNextDirty+0x66>
 800dc52:	0052      	lsls	r2, r2, #1
 800dc54:	b2d2      	uxtb	r2, r2
 800dc56:	3301      	adds	r3, #1
 800dc58:	e7f9      	b.n	800dc4e <GUI_USAGE_BM_GetNextDirty+0x58>
 800dc5a:	3307      	adds	r3, #7
 800dc5c:	f003 0207 	and.w	r2, r3, #7
 800dc60:	2a07      	cmp	r2, #7
 800dc62:	d10d      	bne.n	800dc80 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800dc64:	3801      	subs	r0, #1
 800dc66:	d40b      	bmi.n	800dc80 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800dc68:	f814 2b01 	ldrb.w	r2, [r4], #1
 800dc6c:	2aff      	cmp	r2, #255	; 0xff
 800dc6e:	d101      	bne.n	800dc74 <GUI_USAGE_BM_GetNextDirty+0x7e>
 800dc70:	3308      	adds	r3, #8
 800dc72:	e7f7      	b.n	800dc64 <GUI_USAGE_BM_GetNextDirty+0x6e>
 800dc74:	0610      	lsls	r0, r2, #24
 800dc76:	d503      	bpl.n	800dc80 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800dc78:	0052      	lsls	r2, r2, #1
 800dc7a:	b2d2      	uxtb	r2, r2
 800dc7c:	3301      	adds	r3, #1
 800dc7e:	e7f9      	b.n	800dc74 <GUI_USAGE_BM_GetNextDirty+0x7e>
 800dc80:	1b58      	subs	r0, r3, r5
 800dc82:	600d      	str	r5, [r1, #0]
 800dc84:	3001      	adds	r0, #1
 800dc86:	bd70      	pop	{r4, r5, r6, pc}
 800dc88:	2000      	movs	r0, #0
 800dc8a:	bd70      	pop	{r4, r5, r6, pc}

0800dc8c <_GUI_USAGE_BM_Delete>:
 800dc8c:	f7fd be2a 	b.w	800b8e4 <GUI_ALLOC_Free>

0800dc90 <GUI_USAGE_BM_Clear>:
 800dc90:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800dc94:	6902      	ldr	r2, [r0, #16]
 800dc96:	2100      	movs	r1, #0
 800dc98:	3014      	adds	r0, #20
 800dc9a:	435a      	muls	r2, r3
 800dc9c:	f002 ba26 	b.w	80100ec <memset>

0800dca0 <GUI_USAGE_BM_AddHLine>:
 800dca0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dca2:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dca6:	1b09      	subs	r1, r1, r4
 800dca8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800dcac:	42a1      	cmp	r1, r4
 800dcae:	da2f      	bge.n	800dd10 <GUI_USAGE_BM_AddHLine+0x70>
 800dcb0:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 800dcb4:	440b      	add	r3, r1
 800dcb6:	f100 0414 	add.w	r4, r0, #20
 800dcba:	3b01      	subs	r3, #1
 800dcbc:	6900      	ldr	r0, [r0, #16]
 800dcbe:	1b52      	subs	r2, r2, r5
 800dcc0:	43de      	mvns	r6, r3
 800dcc2:	fb00 4202 	mla	r2, r0, r2, r4
 800dcc6:	f001 0707 	and.w	r7, r1, #7
 800dcca:	10cc      	asrs	r4, r1, #3
 800dccc:	f006 0607 	and.w	r6, r6, #7
 800dcd0:	21ff      	movs	r1, #255	; 0xff
 800dcd2:	fa41 f707 	asr.w	r7, r1, r7
 800dcd6:	fa01 f606 	lsl.w	r6, r1, r6
 800dcda:	ebd4 03e3 	rsbs	r3, r4, r3, asr #3
 800dcde:	eb02 0504 	add.w	r5, r2, r4
 800dce2:	b2ff      	uxtb	r7, r7
 800dce4:	b2f6      	uxtb	r6, r6
 800dce6:	5d10      	ldrb	r0, [r2, r4]
 800dce8:	d103      	bne.n	800dcf2 <GUI_USAGE_BM_AddHLine+0x52>
 800dcea:	403e      	ands	r6, r7
 800dcec:	4330      	orrs	r0, r6
 800dcee:	5510      	strb	r0, [r2, r4]
 800dcf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dcf2:	4338      	orrs	r0, r7
 800dcf4:	5510      	strb	r0, [r2, r4]
 800dcf6:	1e5c      	subs	r4, r3, #1
 800dcf8:	2c00      	cmp	r4, #0
 800dcfa:	f105 0501 	add.w	r5, r5, #1
 800dcfe:	dd04      	ble.n	800dd0a <GUI_USAGE_BM_AddHLine+0x6a>
 800dd00:	4628      	mov	r0, r5
 800dd02:	4622      	mov	r2, r4
 800dd04:	f002 f9f2 	bl	80100ec <memset>
 800dd08:	4425      	add	r5, r4
 800dd0a:	782b      	ldrb	r3, [r5, #0]
 800dd0c:	431e      	orrs	r6, r3
 800dd0e:	702e      	strb	r6, [r5, #0]
 800dd10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800dd14 <GUI_USAGE_BM_Create>:
 800dd14:	e92d 4fd3 	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, sl, fp, lr}
 800dd18:	f102 060f 	add.w	r6, r2, #15
 800dd1c:	1136      	asrs	r6, r6, #4
 800dd1e:	0076      	lsls	r6, r6, #1
 800dd20:	4682      	mov	sl, r0
 800dd22:	fb06 f003 	mul.w	r0, r6, r3
 800dd26:	3014      	adds	r0, #20
 800dd28:	4689      	mov	r9, r1
 800dd2a:	4690      	mov	r8, r2
 800dd2c:	461f      	mov	r7, r3
 800dd2e:	f7fd ff99 	bl	800bc64 <GUI_ALLOC_AllocZero>
 800dd32:	4683      	mov	fp, r0
 800dd34:	b198      	cbz	r0, 800dd5e <GUI_USAGE_BM_Create+0x4a>
 800dd36:	f7fd fd9b 	bl	800b870 <GUI_ALLOC_LockH>
 800dd3a:	4604      	mov	r4, r0
 800dd3c:	4b0a      	ldr	r3, [pc, #40]	; (800dd68 <GUI_USAGE_BM_Create+0x54>)
 800dd3e:	60a3      	str	r3, [r4, #8]
 800dd40:	a802      	add	r0, sp, #8
 800dd42:	2301      	movs	r3, #1
 800dd44:	f840 4d04 	str.w	r4, [r0, #-4]!
 800dd48:	f8a4 8004 	strh.w	r8, [r4, #4]
 800dd4c:	f8a4 a000 	strh.w	sl, [r4]
 800dd50:	f8a4 9002 	strh.w	r9, [r4, #2]
 800dd54:	80e7      	strh	r7, [r4, #6]
 800dd56:	81a3      	strh	r3, [r4, #12]
 800dd58:	6126      	str	r6, [r4, #16]
 800dd5a:	f7fd fd97 	bl	800b88c <GUI_ALLOC_UnlockH>
 800dd5e:	4658      	mov	r0, fp
 800dd60:	b002      	add	sp, #8
 800dd62:	e8bd 8fd0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
 800dd66:	bf00      	nop
 800dd68:	080124a8 	.word	0x080124a8

0800dd6c <GUI_USAGE_DecUseCnt>:
 800dd6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dd6e:	4605      	mov	r5, r0
 800dd70:	f7fd fd7e 	bl	800b870 <GUI_ALLOC_LockH>
 800dd74:	4602      	mov	r2, r0
 800dd76:	a802      	add	r0, sp, #8
 800dd78:	8994      	ldrh	r4, [r2, #12]
 800dd7a:	f840 2d04 	str.w	r2, [r0, #-4]!
 800dd7e:	3c01      	subs	r4, #1
 800dd80:	b2a4      	uxth	r4, r4
 800dd82:	8194      	strh	r4, [r2, #12]
 800dd84:	f7fd fd82 	bl	800b88c <GUI_ALLOC_UnlockH>
 800dd88:	b914      	cbnz	r4, 800dd90 <GUI_USAGE_DecUseCnt+0x24>
 800dd8a:	4628      	mov	r0, r5
 800dd8c:	f7fd fdaa 	bl	800b8e4 <GUI_ALLOC_Free>
 800dd90:	b003      	add	sp, #12
 800dd92:	bd30      	pop	{r4, r5, pc}

0800dd94 <GUI_USAGE_AddRect>:
 800dd94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dd98:	4605      	mov	r5, r0
 800dd9a:	4688      	mov	r8, r1
 800dd9c:	4617      	mov	r7, r2
 800dd9e:	4699      	mov	r9, r3
 800dda0:	68a8      	ldr	r0, [r5, #8]
 800dda2:	464b      	mov	r3, r9
 800dda4:	6846      	ldr	r6, [r0, #4]
 800dda6:	4641      	mov	r1, r8
 800dda8:	4628      	mov	r0, r5
 800ddaa:	1c54      	adds	r4, r2, #1
 800ddac:	47b0      	blx	r6
 800ddae:	9b08      	ldr	r3, [sp, #32]
 800ddb0:	443b      	add	r3, r7
 800ddb2:	42a3      	cmp	r3, r4
 800ddb4:	d001      	beq.n	800ddba <GUI_USAGE_AddRect+0x26>
 800ddb6:	4622      	mov	r2, r4
 800ddb8:	e7f2      	b.n	800dda0 <GUI_USAGE_AddRect+0xc>
 800ddba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0800ddc0 <GUI_MEMDEV_ReduceYSize>:
 800ddc0:	b513      	push	{r0, r1, r4, lr}
 800ddc2:	460c      	mov	r4, r1
 800ddc4:	b918      	cbnz	r0, 800ddce <GUI_MEMDEV_ReduceYSize+0xe>
 800ddc6:	4b08      	ldr	r3, [pc, #32]	; (800dde8 <GUI_MEMDEV_ReduceYSize+0x28>)
 800ddc8:	681b      	ldr	r3, [r3, #0]
 800ddca:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800ddcc:	b150      	cbz	r0, 800dde4 <GUI_MEMDEV_ReduceYSize+0x24>
 800ddce:	f7fd fd4f 	bl	800b870 <GUI_ALLOC_LockH>
 800ddd2:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ddd6:	9001      	str	r0, [sp, #4]
 800ddd8:	429c      	cmp	r4, r3
 800ddda:	bfb8      	it	lt
 800dddc:	8144      	strhlt	r4, [r0, #10]
 800ddde:	a801      	add	r0, sp, #4
 800dde0:	f7fd fd54 	bl	800b88c <GUI_ALLOC_UnlockH>
 800dde4:	b002      	add	sp, #8
 800dde6:	bd10      	pop	{r4, pc}
 800dde8:	200000b8 	.word	0x200000b8

0800ddec <GUI_MEMDEV_Clear>:
 800ddec:	b513      	push	{r0, r1, r4, lr}
 800ddee:	b918      	cbnz	r0, 800ddf8 <GUI_MEMDEV_Clear+0xc>
 800ddf0:	4b0d      	ldr	r3, [pc, #52]	; (800de28 <GUI_MEMDEV_Clear+0x3c>)
 800ddf2:	681b      	ldr	r3, [r3, #0]
 800ddf4:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800ddf6:	b1a8      	cbz	r0, 800de24 <GUI_MEMDEV_Clear+0x38>
 800ddf8:	f7fd fd3a 	bl	800b870 <GUI_ALLOC_LockH>
 800ddfc:	ab02      	add	r3, sp, #8
 800ddfe:	6944      	ldr	r4, [r0, #20]
 800de00:	f843 0d08 	str.w	r0, [r3, #-8]!
 800de04:	4668      	mov	r0, sp
 800de06:	f7fd fd41 	bl	800b88c <GUI_ALLOC_UnlockH>
 800de0a:	b15c      	cbz	r4, 800de24 <GUI_MEMDEV_Clear+0x38>
 800de0c:	4620      	mov	r0, r4
 800de0e:	f7fd fd2f 	bl	800b870 <GUI_ALLOC_LockH>
 800de12:	ac02      	add	r4, sp, #8
 800de14:	6883      	ldr	r3, [r0, #8]
 800de16:	f844 0d04 	str.w	r0, [r4, #-4]!
 800de1a:	689b      	ldr	r3, [r3, #8]
 800de1c:	4798      	blx	r3
 800de1e:	4620      	mov	r0, r4
 800de20:	f7fd fd34 	bl	800b88c <GUI_ALLOC_UnlockH>
 800de24:	b002      	add	sp, #8
 800de26:	bd10      	pop	{r4, pc}
 800de28:	200000b8 	.word	0x200000b8

0800de2c <_GetDevData>:
 800de2c:	4802      	ldr	r0, [pc, #8]	; (800de38 <_GetDevData+0xc>)
 800de2e:	2901      	cmp	r1, #1
 800de30:	bf18      	it	ne
 800de32:	2000      	movne	r0, #0
 800de34:	4770      	bx	lr
 800de36:	bf00      	nop
 800de38:	08012500 	.word	0x08012500

0800de3c <_GetDevFunc>:
 800de3c:	4802      	ldr	r0, [pc, #8]	; (800de48 <_GetDevFunc+0xc>)
 800de3e:	2916      	cmp	r1, #22
 800de40:	bf18      	it	ne
 800de42:	2000      	movne	r0, #0
 800de44:	4770      	bx	lr
 800de46:	bf00      	nop
 800de48:	0800d2ad 	.word	0x0800d2ad

0800de4c <_SetOrg>:
 800de4c:	6800      	ldr	r0, [r0, #0]
 800de4e:	b508      	push	{r3, lr}
 800de50:	b110      	cbz	r0, 800de58 <_SetOrg+0xc>
 800de52:	68c3      	ldr	r3, [r0, #12]
 800de54:	6a1b      	ldr	r3, [r3, #32]
 800de56:	4798      	blx	r3
 800de58:	bd08      	pop	{r3, pc}

0800de5a <_GetRect>:
 800de5a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800de5c:	6880      	ldr	r0, [r0, #8]
 800de5e:	460c      	mov	r4, r1
 800de60:	f7fd fd06 	bl	800b870 <GUI_ALLOC_LockH>
 800de64:	4603      	mov	r3, r0
 800de66:	a802      	add	r0, sp, #8
 800de68:	8899      	ldrh	r1, [r3, #4]
 800de6a:	88da      	ldrh	r2, [r3, #6]
 800de6c:	891d      	ldrh	r5, [r3, #8]
 800de6e:	f840 3d04 	str.w	r3, [r0, #-4]!
 800de72:	895b      	ldrh	r3, [r3, #10]
 800de74:	8021      	strh	r1, [r4, #0]
 800de76:	8062      	strh	r2, [r4, #2]
 800de78:	4429      	add	r1, r5
 800de7a:	441a      	add	r2, r3
 800de7c:	3901      	subs	r1, #1
 800de7e:	3a01      	subs	r2, #1
 800de80:	80a1      	strh	r1, [r4, #4]
 800de82:	80e2      	strh	r2, [r4, #6]
 800de84:	f7fd fd02 	bl	800b88c <GUI_ALLOC_UnlockH>
 800de88:	b003      	add	sp, #12
 800de8a:	bd30      	pop	{r4, r5, pc}

0800de8c <_XY2PTR>:
 800de8c:	4b0e      	ldr	r3, [pc, #56]	; (800dec8 <_XY2PTR+0x3c>)
 800de8e:	681b      	ldr	r3, [r3, #0]
 800de90:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800de92:	4605      	mov	r5, r0
 800de94:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800de96:	460e      	mov	r6, r1
 800de98:	f7fd fcea 	bl	800b870 <GUI_ALLOC_LockH>
 800de9c:	4603      	mov	r3, r0
 800de9e:	a802      	add	r0, sp, #8
 800dea0:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 800dea4:	f840 3d04 	str.w	r3, [r0, #-4]!
 800dea8:	f103 0118 	add.w	r1, r3, #24
 800deac:	1b36      	subs	r6, r6, r4
 800deae:	68dc      	ldr	r4, [r3, #12]
 800deb0:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800deb4:	fb04 1406 	mla	r4, r4, r6, r1
 800deb8:	1aed      	subs	r5, r5, r3
 800deba:	f7fd fce7 	bl	800b88c <GUI_ALLOC_UnlockH>
 800debe:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800dec2:	4620      	mov	r0, r4
 800dec4:	b002      	add	sp, #8
 800dec6:	bd70      	pop	{r4, r5, r6, pc}
 800dec8:	200000b8 	.word	0x200000b8

0800decc <_GetPixelIndex>:
 800decc:	b508      	push	{r3, lr}
 800dece:	4608      	mov	r0, r1
 800ded0:	4611      	mov	r1, r2
 800ded2:	f7ff ffdb 	bl	800de8c <_XY2PTR>
 800ded6:	8800      	ldrh	r0, [r0, #0]
 800ded8:	bd08      	pop	{r3, pc}
	...

0800dedc <_XorPixel>:
 800dedc:	4b14      	ldr	r3, [pc, #80]	; (800df30 <_XorPixel+0x54>)
 800dede:	681b      	ldr	r3, [r3, #0]
 800dee0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800dee2:	4607      	mov	r7, r0
 800dee4:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800dee6:	4615      	mov	r5, r2
 800dee8:	460e      	mov	r6, r1
 800deea:	f7fd fcc1 	bl	800b870 <GUI_ALLOC_LockH>
 800deee:	4629      	mov	r1, r5
 800def0:	9000      	str	r0, [sp, #0]
 800def2:	4630      	mov	r0, r6
 800def4:	f7ff ffca 	bl	800de8c <_XY2PTR>
 800def8:	693b      	ldr	r3, [r7, #16]
 800defa:	4604      	mov	r4, r0
 800defc:	689b      	ldr	r3, [r3, #8]
 800defe:	4798      	blx	r3
 800df00:	8823      	ldrh	r3, [r4, #0]
 800df02:	4058      	eors	r0, r3
 800df04:	9b00      	ldr	r3, [sp, #0]
 800df06:	8020      	strh	r0, [r4, #0]
 800df08:	6958      	ldr	r0, [r3, #20]
 800df0a:	b160      	cbz	r0, 800df26 <_XorPixel+0x4a>
 800df0c:	f7fd fcb0 	bl	800b870 <GUI_ALLOC_LockH>
 800df10:	ac02      	add	r4, sp, #8
 800df12:	6883      	ldr	r3, [r0, #8]
 800df14:	f844 0d04 	str.w	r0, [r4, #-4]!
 800df18:	681b      	ldr	r3, [r3, #0]
 800df1a:	4631      	mov	r1, r6
 800df1c:	462a      	mov	r2, r5
 800df1e:	4798      	blx	r3
 800df20:	4620      	mov	r0, r4
 800df22:	f7fd fcb3 	bl	800b88c <GUI_ALLOC_UnlockH>
 800df26:	4668      	mov	r0, sp
 800df28:	f7fd fcb0 	bl	800b88c <GUI_ALLOC_UnlockH>
 800df2c:	b003      	add	sp, #12
 800df2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800df30:	200000b8 	.word	0x200000b8

0800df34 <_SetPixelIndex>:
 800df34:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800df36:	461c      	mov	r4, r3
 800df38:	4b10      	ldr	r3, [pc, #64]	; (800df7c <_SetPixelIndex+0x48>)
 800df3a:	681b      	ldr	r3, [r3, #0]
 800df3c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800df3e:	460e      	mov	r6, r1
 800df40:	4615      	mov	r5, r2
 800df42:	f7fd fc95 	bl	800b870 <GUI_ALLOC_LockH>
 800df46:	4629      	mov	r1, r5
 800df48:	9000      	str	r0, [sp, #0]
 800df4a:	4630      	mov	r0, r6
 800df4c:	f7ff ff9e 	bl	800de8c <_XY2PTR>
 800df50:	9b00      	ldr	r3, [sp, #0]
 800df52:	8004      	strh	r4, [r0, #0]
 800df54:	6958      	ldr	r0, [r3, #20]
 800df56:	b160      	cbz	r0, 800df72 <_SetPixelIndex+0x3e>
 800df58:	f7fd fc8a 	bl	800b870 <GUI_ALLOC_LockH>
 800df5c:	ac02      	add	r4, sp, #8
 800df5e:	6883      	ldr	r3, [r0, #8]
 800df60:	f844 0d04 	str.w	r0, [r4, #-4]!
 800df64:	681b      	ldr	r3, [r3, #0]
 800df66:	4631      	mov	r1, r6
 800df68:	462a      	mov	r2, r5
 800df6a:	4798      	blx	r3
 800df6c:	4620      	mov	r0, r4
 800df6e:	f7fd fc8d 	bl	800b88c <GUI_ALLOC_UnlockH>
 800df72:	4668      	mov	r0, sp
 800df74:	f7fd fc8a 	bl	800b88c <GUI_ALLOC_UnlockH>
 800df78:	b002      	add	sp, #8
 800df7a:	bd70      	pop	{r4, r5, r6, pc}
 800df7c:	200000b8 	.word	0x200000b8

0800df80 <_DrawVLine>:
 800df80:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800df84:	4d2c      	ldr	r5, [pc, #176]	; (800e038 <_DrawVLine+0xb8>)
 800df86:	461e      	mov	r6, r3
 800df88:	682b      	ldr	r3, [r5, #0]
 800df8a:	4681      	mov	r9, r0
 800df8c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800df8e:	460f      	mov	r7, r1
 800df90:	4614      	mov	r4, r2
 800df92:	f7fd fc6d 	bl	800b870 <GUI_ALLOC_LockH>
 800df96:	9000      	str	r0, [sp, #0]
 800df98:	6940      	ldr	r0, [r0, #20]
 800df9a:	46aa      	mov	sl, r5
 800df9c:	b108      	cbz	r0, 800dfa2 <_DrawVLine+0x22>
 800df9e:	f7fd fc67 	bl	800b870 <GUI_ALLOC_LockH>
 800dfa2:	9001      	str	r0, [sp, #4]
 800dfa4:	4621      	mov	r1, r4
 800dfa6:	4638      	mov	r0, r7
 800dfa8:	f7ff ff70 	bl	800de8c <_XY2PTR>
 800dfac:	9b00      	ldr	r3, [sp, #0]
 800dfae:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800dfb2:	f8da 3000 	ldr.w	r3, [sl]
 800dfb6:	7c1a      	ldrb	r2, [r3, #16]
 800dfb8:	07d2      	lsls	r2, r2, #31
 800dfba:	4605      	mov	r5, r0
 800dfbc:	d51f      	bpl.n	800dffe <_DrawVLine+0x7e>
 800dfbe:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800dfc2:	689b      	ldr	r3, [r3, #8]
 800dfc4:	4798      	blx	r3
 800dfc6:	fa1f f880 	uxth.w	r8, r0
 800dfca:	9801      	ldr	r0, [sp, #4]
 800dfcc:	b120      	cbz	r0, 800dfd8 <_DrawVLine+0x58>
 800dfce:	6883      	ldr	r3, [r0, #8]
 800dfd0:	4639      	mov	r1, r7
 800dfd2:	681b      	ldr	r3, [r3, #0]
 800dfd4:	4622      	mov	r2, r4
 800dfd6:	4798      	blx	r3
 800dfd8:	882b      	ldrh	r3, [r5, #0]
 800dfda:	ea88 0303 	eor.w	r3, r8, r3
 800dfde:	802b      	strh	r3, [r5, #0]
 800dfe0:	9b00      	ldr	r3, [sp, #0]
 800dfe2:	3401      	adds	r4, #1
 800dfe4:	68db      	ldr	r3, [r3, #12]
 800dfe6:	42b4      	cmp	r4, r6
 800dfe8:	441d      	add	r5, r3
 800dfea:	ddee      	ble.n	800dfca <_DrawVLine+0x4a>
 800dfec:	4668      	mov	r0, sp
 800dfee:	f7fd fc4d 	bl	800b88c <GUI_ALLOC_UnlockH>
 800dff2:	9b01      	ldr	r3, [sp, #4]
 800dff4:	b1eb      	cbz	r3, 800e032 <_DrawVLine+0xb2>
 800dff6:	a801      	add	r0, sp, #4
 800dff8:	f7fd fc48 	bl	800b88c <GUI_ALLOC_UnlockH>
 800dffc:	e019      	b.n	800e032 <_DrawVLine+0xb2>
 800dffe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e000:	f8d3 9000 	ldr.w	r9, [r3]
 800e004:	9b01      	ldr	r3, [sp, #4]
 800e006:	b163      	cbz	r3, 800e022 <_DrawVLine+0xa2>
 800e008:	9801      	ldr	r0, [sp, #4]
 800e00a:	6883      	ldr	r3, [r0, #8]
 800e00c:	4622      	mov	r2, r4
 800e00e:	681b      	ldr	r3, [r3, #0]
 800e010:	4639      	mov	r1, r7
 800e012:	3401      	adds	r4, #1
 800e014:	4798      	blx	r3
 800e016:	42b4      	cmp	r4, r6
 800e018:	f8a5 9000 	strh.w	r9, [r5]
 800e01c:	4445      	add	r5, r8
 800e01e:	ddf3      	ble.n	800e008 <_DrawVLine+0x88>
 800e020:	e7e4      	b.n	800dfec <_DrawVLine+0x6c>
 800e022:	1b34      	subs	r4, r6, r4
 800e024:	3401      	adds	r4, #1
 800e026:	3c01      	subs	r4, #1
 800e028:	f8a5 9000 	strh.w	r9, [r5]
 800e02c:	4445      	add	r5, r8
 800e02e:	d1fa      	bne.n	800e026 <_DrawVLine+0xa6>
 800e030:	e7dc      	b.n	800dfec <_DrawVLine+0x6c>
 800e032:	b002      	add	sp, #8
 800e034:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e038:	200000b8 	.word	0x200000b8

0800e03c <_FillRect>:
 800e03c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e040:	4f2a      	ldr	r7, [pc, #168]	; (800e0ec <_FillRect+0xb0>)
 800e042:	4614      	mov	r4, r2
 800e044:	683a      	ldr	r2, [r7, #0]
 800e046:	4698      	mov	r8, r3
 800e048:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 800e04a:	b087      	sub	sp, #28
 800e04c:	681b      	ldr	r3, [r3, #0]
 800e04e:	9302      	str	r3, [sp, #8]
 800e050:	4682      	mov	sl, r0
 800e052:	6e10      	ldr	r0, [r2, #96]	; 0x60
 800e054:	460e      	mov	r6, r1
 800e056:	f7fd fc0b 	bl	800b870 <GUI_ALLOC_LockH>
 800e05a:	4621      	mov	r1, r4
 800e05c:	9004      	str	r0, [sp, #16]
 800e05e:	4630      	mov	r0, r6
 800e060:	f7ff ff14 	bl	800de8c <_XY2PTR>
 800e064:	9a04      	ldr	r2, [sp, #16]
 800e066:	4605      	mov	r5, r0
 800e068:	6950      	ldr	r0, [r2, #20]
 800e06a:	68d3      	ldr	r3, [r2, #12]
 800e06c:	9303      	str	r3, [sp, #12]
 800e06e:	ebc6 0908 	rsb	r9, r6, r8
 800e072:	f109 0801 	add.w	r8, r9, #1
 800e076:	46bb      	mov	fp, r7
 800e078:	b180      	cbz	r0, 800e09c <_FillRect+0x60>
 800e07a:	f7fd fbf9 	bl	800b870 <GUI_ALLOC_LockH>
 800e07e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e080:	af06      	add	r7, sp, #24
 800e082:	1b13      	subs	r3, r2, r4
 800e084:	f847 0d04 	str.w	r0, [r7, #-4]!
 800e088:	3301      	adds	r3, #1
 800e08a:	9300      	str	r3, [sp, #0]
 800e08c:	4631      	mov	r1, r6
 800e08e:	4622      	mov	r2, r4
 800e090:	4643      	mov	r3, r8
 800e092:	f7ff fe7f 	bl	800dd94 <GUI_USAGE_AddRect>
 800e096:	4638      	mov	r0, r7
 800e098:	f7fd fbf8 	bl	800b88c <GUI_ALLOC_UnlockH>
 800e09c:	ea4f 0649 	mov.w	r6, r9, lsl #1
 800e0a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e0a2:	429c      	cmp	r4, r3
 800e0a4:	dc1c      	bgt.n	800e0e0 <_FillRect+0xa4>
 800e0a6:	f8db 3000 	ldr.w	r3, [fp]
 800e0aa:	7c1b      	ldrb	r3, [r3, #16]
 800e0ac:	07db      	lsls	r3, r3, #31
 800e0ae:	d50d      	bpl.n	800e0cc <_FillRect+0x90>
 800e0b0:	f8da 3010 	ldr.w	r3, [sl, #16]
 800e0b4:	689b      	ldr	r3, [r3, #8]
 800e0b6:	4798      	blx	r3
 800e0b8:	19aa      	adds	r2, r5, r6
 800e0ba:	b280      	uxth	r0, r0
 800e0bc:	1eab      	subs	r3, r5, #2
 800e0be:	8859      	ldrh	r1, [r3, #2]
 800e0c0:	4041      	eors	r1, r0
 800e0c2:	f823 1f02 	strh.w	r1, [r3, #2]!
 800e0c6:	4293      	cmp	r3, r2
 800e0c8:	d1f9      	bne.n	800e0be <_FillRect+0x82>
 800e0ca:	e005      	b.n	800e0d8 <_FillRect+0x9c>
 800e0cc:	9b02      	ldr	r3, [sp, #8]
 800e0ce:	4628      	mov	r0, r5
 800e0d0:	b299      	uxth	r1, r3
 800e0d2:	4642      	mov	r2, r8
 800e0d4:	f7fb f8c9 	bl	800926a <GUI__memset16>
 800e0d8:	9a03      	ldr	r2, [sp, #12]
 800e0da:	3401      	adds	r4, #1
 800e0dc:	4415      	add	r5, r2
 800e0de:	e7df      	b.n	800e0a0 <_FillRect+0x64>
 800e0e0:	a804      	add	r0, sp, #16
 800e0e2:	f7fd fbd3 	bl	800b88c <GUI_ALLOC_UnlockH>
 800e0e6:	b007      	add	sp, #28
 800e0e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e0ec:	200000b8 	.word	0x200000b8

0800e0f0 <_DrawHLine>:
 800e0f0:	b507      	push	{r0, r1, r2, lr}
 800e0f2:	9200      	str	r2, [sp, #0]
 800e0f4:	f7ff ffa2 	bl	800e03c <_FillRect>
 800e0f8:	b003      	add	sp, #12
 800e0fa:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800e100 <_DrawBitmap>:
 800e100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e104:	4c8b      	ldr	r4, [pc, #556]	; (800e334 <_DrawBitmap+0x234>)
 800e106:	b093      	sub	sp, #76	; 0x4c
 800e108:	469b      	mov	fp, r3
 800e10a:	6823      	ldr	r3, [r4, #0]
 800e10c:	900d      	str	r0, [sp, #52]	; 0x34
 800e10e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800e110:	9207      	str	r2, [sp, #28]
 800e112:	460d      	mov	r5, r1
 800e114:	f8dd a07c 	ldr.w	sl, [sp, #124]	; 0x7c
 800e118:	f7fd fbaa 	bl	800b870 <GUI_ALLOC_LockH>
 800e11c:	9010      	str	r0, [sp, #64]	; 0x40
 800e11e:	6940      	ldr	r0, [r0, #20]
 800e120:	b108      	cbz	r0, 800e126 <_DrawBitmap+0x26>
 800e122:	f7fd fba5 	bl	800b870 <GUI_ALLOC_LockH>
 800e126:	9011      	str	r0, [sp, #68]	; 0x44
 800e128:	a812      	add	r0, sp, #72	; 0x48
 800e12a:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 800e12e:	68db      	ldr	r3, [r3, #12]
 800e130:	9308      	str	r3, [sp, #32]
 800e132:	f7fd fbab 	bl	800b88c <GUI_ALLOC_UnlockH>
 800e136:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e138:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e13a:	442e      	add	r6, r5
 800e13c:	9604      	str	r6, [sp, #16]
 800e13e:	b150      	cbz	r0, 800e156 <_DrawBitmap+0x56>
 800e140:	6823      	ldr	r3, [r4, #0]
 800e142:	7c1b      	ldrb	r3, [r3, #16]
 800e144:	0799      	lsls	r1, r3, #30
 800e146:	d106      	bne.n	800e156 <_DrawBitmap+0x56>
 800e148:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800e14a:	9700      	str	r7, [sp, #0]
 800e14c:	4631      	mov	r1, r6
 800e14e:	9a07      	ldr	r2, [sp, #28]
 800e150:	465b      	mov	r3, fp
 800e152:	f7ff fe1f 	bl	800dd94 <GUI_USAGE_AddRect>
 800e156:	9804      	ldr	r0, [sp, #16]
 800e158:	9907      	ldr	r1, [sp, #28]
 800e15a:	f7ff fe97 	bl	800de8c <_XY2PTR>
 800e15e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800e160:	2e10      	cmp	r6, #16
 800e162:	4604      	mov	r4, r0
 800e164:	d13a      	bne.n	800e1dc <_DrawBitmap+0xdc>
 800e166:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e168:	b11b      	cbz	r3, 800e172 <_DrawBitmap+0x72>
 800e16a:	ea4f 064b 	mov.w	r6, fp, lsl #1
 800e16e:	2500      	movs	r5, #0
 800e170:	e014      	b.n	800e19c <_DrawBitmap+0x9c>
 800e172:	4b71      	ldr	r3, [pc, #452]	; (800e338 <_DrawBitmap+0x238>)
 800e174:	681d      	ldr	r5, [r3, #0]
 800e176:	2d00      	cmp	r5, #0
 800e178:	d0f7      	beq.n	800e16a <_DrawBitmap+0x6a>
 800e17a:	9e08      	ldr	r6, [sp, #32]
 800e17c:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e17e:	9600      	str	r6, [sp, #0]
 800e180:	9701      	str	r7, [sp, #4]
 800e182:	4651      	mov	r1, sl
 800e184:	465a      	mov	r2, fp
 800e186:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800e188:	47a8      	blx	r5
 800e18a:	e349      	b.n	800e820 <_DrawBitmap+0x720>
 800e18c:	f1ba 0f00 	cmp.w	sl, #0
 800e190:	d10a      	bne.n	800e1a8 <_DrawBitmap+0xa8>
 800e192:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e194:	44ba      	add	sl, r7
 800e196:	9f08      	ldr	r7, [sp, #32]
 800e198:	3501      	adds	r5, #1
 800e19a:	443c      	add	r4, r7
 800e19c:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800e19e:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 800e1a2:	42bd      	cmp	r5, r7
 800e1a4:	dbf2      	blt.n	800e18c <_DrawBitmap+0x8c>
 800e1a6:	e014      	b.n	800e1d2 <_DrawBitmap+0xd2>
 800e1a8:	2c00      	cmp	r4, #0
 800e1aa:	d0f2      	beq.n	800e192 <_DrawBitmap+0x92>
 800e1ac:	4b63      	ldr	r3, [pc, #396]	; (800e33c <_DrawBitmap+0x23c>)
 800e1ae:	4620      	mov	r0, r4
 800e1b0:	681b      	ldr	r3, [r3, #0]
 800e1b2:	4651      	mov	r1, sl
 800e1b4:	4632      	mov	r2, r6
 800e1b6:	4798      	blx	r3
 800e1b8:	f1b8 0f00 	cmp.w	r8, #0
 800e1bc:	d0e9      	beq.n	800e192 <_DrawBitmap+0x92>
 800e1be:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800e1c2:	9a07      	ldr	r2, [sp, #28]
 800e1c4:	685f      	ldr	r7, [r3, #4]
 800e1c6:	9904      	ldr	r1, [sp, #16]
 800e1c8:	4640      	mov	r0, r8
 800e1ca:	442a      	add	r2, r5
 800e1cc:	465b      	mov	r3, fp
 800e1ce:	47b8      	blx	r7
 800e1d0:	e7df      	b.n	800e192 <_DrawBitmap+0x92>
 800e1d2:	f1b8 0f00 	cmp.w	r8, #0
 800e1d6:	f040 8320 	bne.w	800e81a <_DrawBitmap+0x71a>
 800e1da:	e321      	b.n	800e820 <_DrawBitmap+0x720>
 800e1dc:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800e1de:	2e17      	cmp	r6, #23
 800e1e0:	dd38      	ble.n	800e254 <_DrawBitmap+0x154>
 800e1e2:	2600      	movs	r6, #0
 800e1e4:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800e1e6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800e1e8:	42be      	cmp	r6, r7
 800e1ea:	f280 809e 	bge.w	800e32a <_DrawBitmap+0x22a>
 800e1ee:	9f07      	ldr	r7, [sp, #28]
 800e1f0:	4437      	add	r7, r6
 800e1f2:	f1ba 0f00 	cmp.w	sl, #0
 800e1f6:	d027      	beq.n	800e248 <_DrawBitmap+0x148>
 800e1f8:	b334      	cbz	r4, 800e248 <_DrawBitmap+0x148>
 800e1fa:	b13d      	cbz	r5, 800e20c <_DrawBitmap+0x10c>
 800e1fc:	68ab      	ldr	r3, [r5, #8]
 800e1fe:	9904      	ldr	r1, [sp, #16]
 800e200:	f8d3 c004 	ldr.w	ip, [r3, #4]
 800e204:	4628      	mov	r0, r5
 800e206:	463a      	mov	r2, r7
 800e208:	465b      	mov	r3, fp
 800e20a:	47e0      	blx	ip
 800e20c:	1ea3      	subs	r3, r4, #2
 800e20e:	f1aa 0904 	sub.w	r9, sl, #4
 800e212:	9303      	str	r3, [sp, #12]
 800e214:	46d8      	mov	r8, fp
 800e216:	9b04      	ldr	r3, [sp, #16]
 800e218:	980d      	ldr	r0, [sp, #52]	; 0x34
 800e21a:	445b      	add	r3, fp
 800e21c:	ebc8 0103 	rsb	r1, r8, r3
 800e220:	6903      	ldr	r3, [r0, #16]
 800e222:	f859 0f04 	ldr.w	r0, [r9, #4]!
 800e226:	681b      	ldr	r3, [r3, #0]
 800e228:	9102      	str	r1, [sp, #8]
 800e22a:	4798      	blx	r3
 800e22c:	9b03      	ldr	r3, [sp, #12]
 800e22e:	9902      	ldr	r1, [sp, #8]
 800e230:	f823 0f02 	strh.w	r0, [r3, #2]!
 800e234:	9303      	str	r3, [sp, #12]
 800e236:	b125      	cbz	r5, 800e242 <_DrawBitmap+0x142>
 800e238:	68ab      	ldr	r3, [r5, #8]
 800e23a:	4628      	mov	r0, r5
 800e23c:	681b      	ldr	r3, [r3, #0]
 800e23e:	463a      	mov	r2, r7
 800e240:	4798      	blx	r3
 800e242:	f1b8 0801 	subs.w	r8, r8, #1
 800e246:	d1e6      	bne.n	800e216 <_DrawBitmap+0x116>
 800e248:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e24a:	44ba      	add	sl, r7
 800e24c:	9f08      	ldr	r7, [sp, #32]
 800e24e:	3601      	adds	r6, #1
 800e250:	443c      	add	r4, r7
 800e252:	e7c7      	b.n	800e1e4 <_DrawBitmap+0xe4>
 800e254:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800e256:	2e08      	cmp	r6, #8
 800e258:	f100 0402 	add.w	r4, r0, #2
 800e25c:	d170      	bne.n	800e340 <_DrawBitmap+0x240>
 800e25e:	9e07      	ldr	r6, [sp, #28]
 800e260:	9f07      	ldr	r7, [sp, #28]
 800e262:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800e264:	1bf3      	subs	r3, r6, r7
 800e266:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800e268:	42bb      	cmp	r3, r7
 800e26a:	f1a4 0002 	sub.w	r0, r4, #2
 800e26e:	da5c      	bge.n	800e32a <_DrawBitmap+0x22a>
 800e270:	4b30      	ldr	r3, [pc, #192]	; (800e334 <_DrawBitmap+0x234>)
 800e272:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e274:	681b      	ldr	r3, [r3, #0]
 800e276:	7c1b      	ldrb	r3, [r3, #16]
 800e278:	b367      	cbz	r7, 800e2d4 <_DrawBitmap+0x1d4>
 800e27a:	f013 0303 	ands.w	r3, r3, #3
 800e27e:	d004      	beq.n	800e28a <_DrawBitmap+0x18a>
 800e280:	2b02      	cmp	r3, #2
 800e282:	d14c      	bne.n	800e31e <_DrawBitmap+0x21e>
 800e284:	46a0      	mov	r8, r4
 800e286:	9f04      	ldr	r7, [sp, #16]
 800e288:	e01d      	b.n	800e2c6 <_DrawBitmap+0x1c6>
 800e28a:	f81a 2003 	ldrb.w	r2, [sl, r3]
 800e28e:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e290:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 800e294:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 800e298:	3301      	adds	r3, #1
 800e29a:	455b      	cmp	r3, fp
 800e29c:	d1f5      	bne.n	800e28a <_DrawBitmap+0x18a>
 800e29e:	e03e      	b.n	800e31e <_DrawBitmap+0x21e>
 800e2a0:	9921      	ldr	r1, [sp, #132]	; 0x84
 800e2a2:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800e2a6:	f828 3c02 	strh.w	r3, [r8, #-2]
 800e2aa:	b12d      	cbz	r5, 800e2b8 <_DrawBitmap+0x1b8>
 800e2ac:	68ab      	ldr	r3, [r5, #8]
 800e2ae:	4628      	mov	r0, r5
 800e2b0:	681b      	ldr	r3, [r3, #0]
 800e2b2:	4639      	mov	r1, r7
 800e2b4:	4632      	mov	r2, r6
 800e2b6:	4798      	blx	r3
 800e2b8:	9b04      	ldr	r3, [sp, #16]
 800e2ba:	3701      	adds	r7, #1
 800e2bc:	445b      	add	r3, fp
 800e2be:	42bb      	cmp	r3, r7
 800e2c0:	f108 0802 	add.w	r8, r8, #2
 800e2c4:	d02b      	beq.n	800e31e <_DrawBitmap+0x21e>
 800e2c6:	9804      	ldr	r0, [sp, #16]
 800e2c8:	ebc0 030a 	rsb	r3, r0, sl
 800e2cc:	5ddb      	ldrb	r3, [r3, r7]
 800e2ce:	2b00      	cmp	r3, #0
 800e2d0:	d0f2      	beq.n	800e2b8 <_DrawBitmap+0x1b8>
 800e2d2:	e7e5      	b.n	800e2a0 <_DrawBitmap+0x1a0>
 800e2d4:	f013 0303 	ands.w	r3, r3, #3
 800e2d8:	d004      	beq.n	800e2e4 <_DrawBitmap+0x1e4>
 800e2da:	2b02      	cmp	r3, #2
 800e2dc:	d11f      	bne.n	800e31e <_DrawBitmap+0x21e>
 800e2de:	46a0      	mov	r8, r4
 800e2e0:	9f04      	ldr	r7, [sp, #16]
 800e2e2:	e015      	b.n	800e310 <_DrawBitmap+0x210>
 800e2e4:	4b15      	ldr	r3, [pc, #84]	; (800e33c <_DrawBitmap+0x23c>)
 800e2e6:	4651      	mov	r1, sl
 800e2e8:	681b      	ldr	r3, [r3, #0]
 800e2ea:	465a      	mov	r2, fp
 800e2ec:	4798      	blx	r3
 800e2ee:	e016      	b.n	800e31e <_DrawBitmap+0x21e>
 800e2f0:	f828 3c02 	strh.w	r3, [r8, #-2]
 800e2f4:	b12d      	cbz	r5, 800e302 <_DrawBitmap+0x202>
 800e2f6:	68ab      	ldr	r3, [r5, #8]
 800e2f8:	4628      	mov	r0, r5
 800e2fa:	681b      	ldr	r3, [r3, #0]
 800e2fc:	4639      	mov	r1, r7
 800e2fe:	4632      	mov	r2, r6
 800e300:	4798      	blx	r3
 800e302:	9b04      	ldr	r3, [sp, #16]
 800e304:	3701      	adds	r7, #1
 800e306:	445b      	add	r3, fp
 800e308:	42bb      	cmp	r3, r7
 800e30a:	f108 0802 	add.w	r8, r8, #2
 800e30e:	d006      	beq.n	800e31e <_DrawBitmap+0x21e>
 800e310:	9a04      	ldr	r2, [sp, #16]
 800e312:	ebc2 030a 	rsb	r3, r2, sl
 800e316:	5ddb      	ldrb	r3, [r3, r7]
 800e318:	2b00      	cmp	r3, #0
 800e31a:	d0f2      	beq.n	800e302 <_DrawBitmap+0x202>
 800e31c:	e7e8      	b.n	800e2f0 <_DrawBitmap+0x1f0>
 800e31e:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e320:	44ba      	add	sl, r7
 800e322:	9f08      	ldr	r7, [sp, #32]
 800e324:	3601      	adds	r6, #1
 800e326:	443c      	add	r4, r7
 800e328:	e79a      	b.n	800e260 <_DrawBitmap+0x160>
 800e32a:	2d00      	cmp	r5, #0
 800e32c:	f040 8275 	bne.w	800e81a <_DrawBitmap+0x71a>
 800e330:	e276      	b.n	800e820 <_DrawBitmap+0x720>
 800e332:	bf00      	nop
 800e334:	200000b8 	.word	0x200000b8
 800e338:	20002c3c 	.word	0x20002c3c
 800e33c:	200000a8 	.word	0x200000a8
 800e340:	9e21      	ldr	r6, [sp, #132]	; 0x84
 800e342:	4bab      	ldr	r3, [pc, #684]	; (800e5f0 <_DrawBitmap+0x4f0>)
 800e344:	9f20      	ldr	r7, [sp, #128]	; 0x80
 800e346:	9409      	str	r4, [sp, #36]	; 0x24
 800e348:	2e00      	cmp	r6, #0
 800e34a:	bf08      	it	eq
 800e34c:	461e      	moveq	r6, r3
 800e34e:	9621      	str	r6, [sp, #132]	; 0x84
 800e350:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e352:	0076      	lsls	r6, r6, #1
 800e354:	960e      	str	r6, [sp, #56]	; 0x38
 800e356:	00bf      	lsls	r7, r7, #2
 800e358:	9e07      	ldr	r6, [sp, #28]
 800e35a:	970f      	str	r7, [sp, #60]	; 0x3c
 800e35c:	9605      	str	r6, [sp, #20]
 800e35e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e360:	9e05      	ldr	r6, [sp, #20]
 800e362:	9f07      	ldr	r7, [sp, #28]
 800e364:	1e9c      	subs	r4, r3, #2
 800e366:	1bf3      	subs	r3, r6, r7
 800e368:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 800e36a:	42b3      	cmp	r3, r6
 800e36c:	f280 8253 	bge.w	800e816 <_DrawBitmap+0x716>
 800e370:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800e372:	2f02      	cmp	r7, #2
 800e374:	f000 80d9 	beq.w	800e52a <_DrawBitmap+0x42a>
 800e378:	2f04      	cmp	r7, #4
 800e37a:	f000 8178 	beq.w	800e66e <_DrawBitmap+0x56e>
 800e37e:	2f01      	cmp	r7, #1
 800e380:	f040 823f 	bne.w	800e802 <_DrawBitmap+0x702>
 800e384:	f8df 9270 	ldr.w	r9, [pc, #624]	; 800e5f8 <_DrawBitmap+0x4f8>
 800e388:	f8d9 3000 	ldr.w	r3, [r9]
 800e38c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800e38e:	f7fd fa6f 	bl	800b870 <GUI_ALLOC_LockH>
 800e392:	f89a 3000 	ldrb.w	r3, [sl]
 800e396:	4a97      	ldr	r2, [pc, #604]	; (800e5f4 <_DrawBitmap+0x4f4>)
 800e398:	9010      	str	r0, [sp, #64]	; 0x40
 800e39a:	5cd5      	ldrb	r5, [r2, r3]
 800e39c:	f8d9 3000 	ldr.w	r3, [r9]
 800e3a0:	9820      	ldr	r0, [sp, #128]	; 0x80
 800e3a2:	7c1b      	ldrb	r3, [r3, #16]
 800e3a4:	9f11      	ldr	r7, [sp, #68]	; 0x44
 800e3a6:	f003 0303 	and.w	r3, r3, #3
 800e3aa:	2b02      	cmp	r3, #2
 800e3ac:	465e      	mov	r6, fp
 800e3ae:	f1c0 0808 	rsb	r8, r0, #8
 800e3b2:	fa45 f500 	asr.w	r5, r5, r0
 800e3b6:	d022      	beq.n	800e3fe <_DrawBitmap+0x2fe>
 800e3b8:	2b03      	cmp	r3, #3
 800e3ba:	d062      	beq.n	800e482 <_DrawBitmap+0x382>
 800e3bc:	2b01      	cmp	r3, #1
 800e3be:	d060      	beq.n	800e482 <_DrawBitmap+0x382>
 800e3c0:	4652      	mov	r2, sl
 800e3c2:	4546      	cmp	r6, r8
 800e3c4:	bf38      	it	cc
 800e3c6:	46b0      	movcc	r8, r6
 800e3c8:	ebc8 0606 	rsb	r6, r8, r6
 800e3cc:	4643      	mov	r3, r8
 800e3ce:	4621      	mov	r1, r4
 800e3d0:	f005 0001 	and.w	r0, r5, #1
 800e3d4:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e3d6:	3b01      	subs	r3, #1
 800e3d8:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 800e3dc:	f821 0b02 	strh.w	r0, [r1], #2
 800e3e0:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800e3e4:	d1f4      	bne.n	800e3d0 <_DrawBitmap+0x2d0>
 800e3e6:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e3ea:	2e00      	cmp	r6, #0
 800e3ec:	f000 8099 	beq.w	800e522 <_DrawBitmap+0x422>
 800e3f0:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800e3f4:	497f      	ldr	r1, [pc, #508]	; (800e5f4 <_DrawBitmap+0x4f4>)
 800e3f6:	f04f 0808 	mov.w	r8, #8
 800e3fa:	5ccd      	ldrb	r5, [r1, r3]
 800e3fc:	e7e1      	b.n	800e3c2 <_DrawBitmap+0x2c2>
 800e3fe:	9821      	ldr	r0, [sp, #132]	; 0x84
 800e400:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800e404:	f8b0 c004 	ldrh.w	ip, [r0, #4]
 800e408:	f8cd a018 	str.w	sl, [sp, #24]
 800e40c:	4546      	cmp	r6, r8
 800e40e:	bf38      	it	cc
 800e410:	46b0      	movcc	r8, r6
 800e412:	ebc8 0606 	rsb	r6, r8, r6
 800e416:	b32f      	cbz	r7, 800e464 <_DrawBitmap+0x364>
 800e418:	b91d      	cbnz	r5, 800e422 <_DrawBitmap+0x322>
 800e41a:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e41e:	44c1      	add	r9, r8
 800e420:	e024      	b.n	800e46c <_DrawBitmap+0x36c>
 800e422:	07ea      	lsls	r2, r5, #31
 800e424:	d50b      	bpl.n	800e43e <_DrawBitmap+0x33e>
 800e426:	68bb      	ldr	r3, [r7, #8]
 800e428:	9a05      	ldr	r2, [sp, #20]
 800e42a:	681b      	ldr	r3, [r3, #0]
 800e42c:	f8cd c008 	str.w	ip, [sp, #8]
 800e430:	4638      	mov	r0, r7
 800e432:	4649      	mov	r1, r9
 800e434:	4798      	blx	r3
 800e436:	f8dd c008 	ldr.w	ip, [sp, #8]
 800e43a:	f8a4 c000 	strh.w	ip, [r4]
 800e43e:	f1b8 0801 	subs.w	r8, r8, #1
 800e442:	f109 0901 	add.w	r9, r9, #1
 800e446:	f104 0402 	add.w	r4, r4, #2
 800e44a:	d00f      	beq.n	800e46c <_DrawBitmap+0x36c>
 800e44c:	086d      	lsrs	r5, r5, #1
 800e44e:	e7e3      	b.n	800e418 <_DrawBitmap+0x318>
 800e450:	07eb      	lsls	r3, r5, #31
 800e452:	bf48      	it	mi
 800e454:	f8a4 c000 	strhmi.w	ip, [r4]
 800e458:	f1b8 0801 	subs.w	r8, r8, #1
 800e45c:	f104 0402 	add.w	r4, r4, #2
 800e460:	d004      	beq.n	800e46c <_DrawBitmap+0x36c>
 800e462:	086d      	lsrs	r5, r5, #1
 800e464:	2d00      	cmp	r5, #0
 800e466:	d1f3      	bne.n	800e450 <_DrawBitmap+0x350>
 800e468:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e46c:	2e00      	cmp	r6, #0
 800e46e:	d058      	beq.n	800e522 <_DrawBitmap+0x422>
 800e470:	9906      	ldr	r1, [sp, #24]
 800e472:	4a60      	ldr	r2, [pc, #384]	; (800e5f4 <_DrawBitmap+0x4f4>)
 800e474:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800e478:	9106      	str	r1, [sp, #24]
 800e47a:	5cd5      	ldrb	r5, [r2, r3]
 800e47c:	f04f 0808 	mov.w	r8, #8
 800e480:	e7c4      	b.n	800e40c <_DrawBitmap+0x30c>
 800e482:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e484:	6913      	ldr	r3, [r2, #16]
 800e486:	689b      	ldr	r3, [r3, #8]
 800e488:	4798      	blx	r3
 800e48a:	9b04      	ldr	r3, [sp, #16]
 800e48c:	930b      	str	r3, [sp, #44]	; 0x2c
 800e48e:	b280      	uxth	r0, r0
 800e490:	900a      	str	r0, [sp, #40]	; 0x28
 800e492:	f10a 0901 	add.w	r9, sl, #1
 800e496:	4546      	cmp	r6, r8
 800e498:	bf38      	it	cc
 800e49a:	46b0      	movcc	r8, r6
 800e49c:	ebc8 0606 	rsb	r6, r8, r6
 800e4a0:	1ca3      	adds	r3, r4, #2
 800e4a2:	b31f      	cbz	r7, 800e4ec <_DrawBitmap+0x3ec>
 800e4a4:	f8cd 8018 	str.w	r8, [sp, #24]
 800e4a8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800e4aa:	9a06      	ldr	r2, [sp, #24]
 800e4ac:	4440      	add	r0, r8
 800e4ae:	900c      	str	r0, [sp, #48]	; 0x30
 800e4b0:	1a81      	subs	r1, r0, r2
 800e4b2:	07e8      	lsls	r0, r5, #31
 800e4b4:	d50d      	bpl.n	800e4d2 <_DrawBitmap+0x3d2>
 800e4b6:	68ba      	ldr	r2, [r7, #8]
 800e4b8:	4638      	mov	r0, r7
 800e4ba:	f8d2 c000 	ldr.w	ip, [r2]
 800e4be:	9a05      	ldr	r2, [sp, #20]
 800e4c0:	9302      	str	r3, [sp, #8]
 800e4c2:	47e0      	blx	ip
 800e4c4:	9b02      	ldr	r3, [sp, #8]
 800e4c6:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e4c8:	f833 2c02 	ldrh.w	r2, [r3, #-2]
 800e4cc:	4042      	eors	r2, r0
 800e4ce:	f823 2c02 	strh.w	r2, [r3, #-2]
 800e4d2:	9906      	ldr	r1, [sp, #24]
 800e4d4:	3901      	subs	r1, #1
 800e4d6:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800e4da:	f103 0302 	add.w	r3, r3, #2
 800e4de:	9106      	str	r1, [sp, #24]
 800e4e0:	d1e2      	bne.n	800e4a8 <_DrawBitmap+0x3a8>
 800e4e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e4e4:	930b      	str	r3, [sp, #44]	; 0x2c
 800e4e6:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e4ea:	e010      	b.n	800e50e <_DrawBitmap+0x40e>
 800e4ec:	4642      	mov	r2, r8
 800e4ee:	07e9      	lsls	r1, r5, #31
 800e4f0:	d505      	bpl.n	800e4fe <_DrawBitmap+0x3fe>
 800e4f2:	f833 1c02 	ldrh.w	r1, [r3, #-2]
 800e4f6:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e4f8:	4041      	eors	r1, r0
 800e4fa:	f823 1c02 	strh.w	r1, [r3, #-2]
 800e4fe:	3a01      	subs	r2, #1
 800e500:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800e504:	f103 0302 	add.w	r3, r3, #2
 800e508:	d1f1      	bne.n	800e4ee <_DrawBitmap+0x3ee>
 800e50a:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e50e:	b146      	cbz	r6, 800e522 <_DrawBitmap+0x422>
 800e510:	f899 3000 	ldrb.w	r3, [r9]
 800e514:	4a37      	ldr	r2, [pc, #220]	; (800e5f4 <_DrawBitmap+0x4f4>)
 800e516:	f109 0901 	add.w	r9, r9, #1
 800e51a:	5cd5      	ldrb	r5, [r2, r3]
 800e51c:	f04f 0808 	mov.w	r8, #8
 800e520:	e7b9      	b.n	800e496 <_DrawBitmap+0x396>
 800e522:	a810      	add	r0, sp, #64	; 0x40
 800e524:	f7fd f9b2 	bl	800b88c <GUI_ALLOC_UnlockH>
 800e528:	e16b      	b.n	800e802 <_DrawBitmap+0x702>
 800e52a:	4b33      	ldr	r3, [pc, #204]	; (800e5f8 <_DrawBitmap+0x4f8>)
 800e52c:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e52e:	681b      	ldr	r3, [r3, #0]
 800e530:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800e532:	7c1b      	ldrb	r3, [r3, #16]
 800e534:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
 800e538:	f1c6 0504 	rsb	r5, r6, #4
 800e53c:	f89a 6000 	ldrb.w	r6, [sl]
 800e540:	f003 0303 	and.w	r3, r3, #3
 800e544:	40be      	lsls	r6, r7
 800e546:	2b01      	cmp	r3, #1
 800e548:	b2ed      	uxtb	r5, r5
 800e54a:	b2f6      	uxtb	r6, r6
 800e54c:	d06a      	beq.n	800e624 <_DrawBitmap+0x524>
 800e54e:	d308      	bcc.n	800e562 <_DrawBitmap+0x462>
 800e550:	2b02      	cmp	r3, #2
 800e552:	f040 8156 	bne.w	800e802 <_DrawBitmap+0x702>
 800e556:	f8cd a018 	str.w	sl, [sp, #24]
 800e55a:	465f      	mov	r7, fp
 800e55c:	f8dd c010 	ldr.w	ip, [sp, #16]
 800e560:	e03e      	b.n	800e5e0 <_DrawBitmap+0x4e0>
 800e562:	4652      	mov	r2, sl
 800e564:	465b      	mov	r3, fp
 800e566:	429d      	cmp	r5, r3
 800e568:	bfc8      	it	gt
 800e56a:	b2dd      	uxtbgt	r5, r3
 800e56c:	1b5b      	subs	r3, r3, r5
 800e56e:	4629      	mov	r1, r5
 800e570:	4620      	mov	r0, r4
 800e572:	ea4f 1c96 	mov.w	ip, r6, lsr #6
 800e576:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e578:	3901      	subs	r1, #1
 800e57a:	f857 c02c 	ldr.w	ip, [r7, ip, lsl #2]
 800e57e:	f820 cb02 	strh.w	ip, [r0], #2
 800e582:	00b6      	lsls	r6, r6, #2
 800e584:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800e588:	b2f6      	uxtb	r6, r6
 800e58a:	d1f2      	bne.n	800e572 <_DrawBitmap+0x472>
 800e58c:	3d01      	subs	r5, #1
 800e58e:	b2ed      	uxtb	r5, r5
 800e590:	3501      	adds	r5, #1
 800e592:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800e596:	2b00      	cmp	r3, #0
 800e598:	f000 8133 	beq.w	800e802 <_DrawBitmap+0x702>
 800e59c:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800e5a0:	2504      	movs	r5, #4
 800e5a2:	e7e0      	b.n	800e566 <_DrawBitmap+0x466>
 800e5a4:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800e5a8:	eb08 010c 	add.w	r1, r8, ip
 800e5ac:	d126      	bne.n	800e5fc <_DrawBitmap+0x4fc>
 800e5ae:	f108 0801 	add.w	r8, r8, #1
 800e5b2:	fa5f f388 	uxtb.w	r3, r8
 800e5b6:	00b6      	lsls	r6, r6, #2
 800e5b8:	429d      	cmp	r5, r3
 800e5ba:	b2f6      	uxtb	r6, r6
 800e5bc:	d1f2      	bne.n	800e5a4 <_DrawBitmap+0x4a4>
 800e5be:	3d01      	subs	r5, #1
 800e5c0:	b2ed      	uxtb	r5, r5
 800e5c2:	1c6b      	adds	r3, r5, #1
 800e5c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e5c8:	f10c 0301 	add.w	r3, ip, #1
 800e5cc:	eb03 0c05 	add.w	ip, r3, r5
 800e5d0:	2f00      	cmp	r7, #0
 800e5d2:	f000 8116 	beq.w	800e802 <_DrawBitmap+0x702>
 800e5d6:	9b06      	ldr	r3, [sp, #24]
 800e5d8:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800e5dc:	9306      	str	r3, [sp, #24]
 800e5de:	2504      	movs	r5, #4
 800e5e0:	42bd      	cmp	r5, r7
 800e5e2:	bfc8      	it	gt
 800e5e4:	b2fd      	uxtbgt	r5, r7
 800e5e6:	1b7f      	subs	r7, r7, r5
 800e5e8:	f04f 0800 	mov.w	r8, #0
 800e5ec:	e7da      	b.n	800e5a4 <_DrawBitmap+0x4a4>
 800e5ee:	bf00      	nop
 800e5f0:	080124c0 	.word	0x080124c0
 800e5f4:	080122dc 	.word	0x080122dc
 800e5f8:	200000b8 	.word	0x200000b8
 800e5fc:	09b3      	lsrs	r3, r6, #6
 800e5fe:	9821      	ldr	r0, [sp, #132]	; 0x84
 800e600:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800e604:	f824 3018 	strh.w	r3, [r4, r8, lsl #1]
 800e608:	f1b9 0f00 	cmp.w	r9, #0
 800e60c:	d0cf      	beq.n	800e5ae <_DrawBitmap+0x4ae>
 800e60e:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800e612:	9a05      	ldr	r2, [sp, #20]
 800e614:	681b      	ldr	r3, [r3, #0]
 800e616:	f8cd c008 	str.w	ip, [sp, #8]
 800e61a:	4648      	mov	r0, r9
 800e61c:	4798      	blx	r3
 800e61e:	f8dd c008 	ldr.w	ip, [sp, #8]
 800e622:	e7c4      	b.n	800e5ae <_DrawBitmap+0x4ae>
 800e624:	4651      	mov	r1, sl
 800e626:	465b      	mov	r3, fp
 800e628:	429d      	cmp	r5, r3
 800e62a:	bfc8      	it	gt
 800e62c:	b2dd      	uxtbgt	r5, r3
 800e62e:	1b5b      	subs	r3, r3, r5
 800e630:	1ca2      	adds	r2, r4, #2
 800e632:	4628      	mov	r0, r5
 800e634:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800e638:	d005      	beq.n	800e646 <_DrawBitmap+0x546>
 800e63a:	f832 7c02 	ldrh.w	r7, [r2, #-2]
 800e63e:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 800e642:	f822 7c02 	strh.w	r7, [r2, #-2]
 800e646:	3801      	subs	r0, #1
 800e648:	00b6      	lsls	r6, r6, #2
 800e64a:	f010 00ff 	ands.w	r0, r0, #255	; 0xff
 800e64e:	b2f6      	uxtb	r6, r6
 800e650:	f102 0202 	add.w	r2, r2, #2
 800e654:	d1ee      	bne.n	800e634 <_DrawBitmap+0x534>
 800e656:	3d01      	subs	r5, #1
 800e658:	b2ed      	uxtb	r5, r5
 800e65a:	3501      	adds	r5, #1
 800e65c:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800e660:	2b00      	cmp	r3, #0
 800e662:	f000 80ce 	beq.w	800e802 <_DrawBitmap+0x702>
 800e666:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800e66a:	2504      	movs	r5, #4
 800e66c:	e7dc      	b.n	800e628 <_DrawBitmap+0x528>
 800e66e:	4a6e      	ldr	r2, [pc, #440]	; (800e828 <_DrawBitmap+0x728>)
 800e670:	f89a 3000 	ldrb.w	r3, [sl]
 800e674:	6812      	ldr	r2, [r2, #0]
 800e676:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800e678:	7c12      	ldrb	r2, [r2, #16]
 800e67a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800e67c:	f002 0203 	and.w	r2, r2, #3
 800e680:	40bb      	lsls	r3, r7
 800e682:	2a01      	cmp	r2, #1
 800e684:	b2dd      	uxtb	r5, r3
 800e686:	f000 8095 	beq.w	800e7b4 <_DrawBitmap+0x6b4>
 800e68a:	d302      	bcc.n	800e692 <_DrawBitmap+0x592>
 800e68c:	2a02      	cmp	r2, #2
 800e68e:	d036      	beq.n	800e6fe <_DrawBitmap+0x5fe>
 800e690:	e0b7      	b.n	800e802 <_DrawBitmap+0x702>
 800e692:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e694:	b166      	cbz	r6, 800e6b0 <_DrawBitmap+0x5b0>
 800e696:	092d      	lsrs	r5, r5, #4
 800e698:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e69a:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 800e69e:	8023      	strh	r3, [r4, #0]
 800e6a0:	f10a 0201 	add.w	r2, sl, #1
 800e6a4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800e6a6:	f89a 5001 	ldrb.w	r5, [sl, #1]
 800e6aa:	f10b 33ff 	add.w	r3, fp, #4294967295
 800e6ae:	e001      	b.n	800e6b4 <_DrawBitmap+0x5b4>
 800e6b0:	465b      	mov	r3, fp
 800e6b2:	4652      	mov	r2, sl
 800e6b4:	2b01      	cmp	r3, #1
 800e6b6:	dd19      	ble.n	800e6ec <_DrawBitmap+0x5ec>
 800e6b8:	1058      	asrs	r0, r3, #1
 800e6ba:	1d21      	adds	r1, r4, #4
 800e6bc:	f003 0301 	and.w	r3, r3, #1
 800e6c0:	eb02 0c00 	add.w	ip, r2, r0
 800e6c4:	092f      	lsrs	r7, r5, #4
 800e6c6:	9e21      	ldr	r6, [sp, #132]	; 0x84
 800e6c8:	f005 050f 	and.w	r5, r5, #15
 800e6cc:	f856 7027 	ldr.w	r7, [r6, r7, lsl #2]
 800e6d0:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 800e6d4:	f821 7c04 	strh.w	r7, [r1, #-4]
 800e6d8:	f821 5c02 	strh.w	r5, [r1, #-2]
 800e6dc:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 800e6e0:	4562      	cmp	r2, ip
 800e6e2:	f101 0104 	add.w	r1, r1, #4
 800e6e6:	d1ed      	bne.n	800e6c4 <_DrawBitmap+0x5c4>
 800e6e8:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 800e6ec:	2b00      	cmp	r3, #0
 800e6ee:	f000 8088 	beq.w	800e802 <_DrawBitmap+0x702>
 800e6f2:	092d      	lsrs	r5, r5, #4
 800e6f4:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e6f6:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 800e6fa:	8023      	strh	r3, [r4, #0]
 800e6fc:	e081      	b.n	800e802 <_DrawBitmap+0x702>
 800e6fe:	9f20      	ldr	r7, [sp, #128]	; 0x80
 800e700:	b1c7      	cbz	r7, 800e734 <_DrawBitmap+0x634>
 800e702:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 800e706:	d00b      	beq.n	800e720 <_DrawBitmap+0x620>
 800e708:	092d      	lsrs	r5, r5, #4
 800e70a:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e70c:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 800e710:	8023      	strh	r3, [r4, #0]
 800e712:	b12e      	cbz	r6, 800e720 <_DrawBitmap+0x620>
 800e714:	68b3      	ldr	r3, [r6, #8]
 800e716:	9904      	ldr	r1, [sp, #16]
 800e718:	681b      	ldr	r3, [r3, #0]
 800e71a:	9a05      	ldr	r2, [sp, #20]
 800e71c:	4630      	mov	r0, r6
 800e71e:	4798      	blx	r3
 800e720:	9804      	ldr	r0, [sp, #16]
 800e722:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800e724:	f89a 5001 	ldrb.w	r5, [sl, #1]
 800e728:	1c47      	adds	r7, r0, #1
 800e72a:	f10b 39ff 	add.w	r9, fp, #4294967295
 800e72e:	f10a 0801 	add.w	r8, sl, #1
 800e732:	e00f      	b.n	800e754 <_DrawBitmap+0x654>
 800e734:	46d9      	mov	r9, fp
 800e736:	46d0      	mov	r8, sl
 800e738:	9f04      	ldr	r7, [sp, #16]
 800e73a:	e00b      	b.n	800e754 <_DrawBitmap+0x654>
 800e73c:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 800e740:	d10c      	bne.n	800e75c <_DrawBitmap+0x65c>
 800e742:	f015 050f 	ands.w	r5, r5, #15
 800e746:	d117      	bne.n	800e778 <_DrawBitmap+0x678>
 800e748:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 800e74c:	3404      	adds	r4, #4
 800e74e:	3702      	adds	r7, #2
 800e750:	f1a9 0902 	sub.w	r9, r9, #2
 800e754:	f1b9 0f01 	cmp.w	r9, #1
 800e758:	dcf0      	bgt.n	800e73c <_DrawBitmap+0x63c>
 800e75a:	e01a      	b.n	800e792 <_DrawBitmap+0x692>
 800e75c:	092b      	lsrs	r3, r5, #4
 800e75e:	9921      	ldr	r1, [sp, #132]	; 0x84
 800e760:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800e764:	8023      	strh	r3, [r4, #0]
 800e766:	2e00      	cmp	r6, #0
 800e768:	d0eb      	beq.n	800e742 <_DrawBitmap+0x642>
 800e76a:	68b3      	ldr	r3, [r6, #8]
 800e76c:	9a05      	ldr	r2, [sp, #20]
 800e76e:	681b      	ldr	r3, [r3, #0]
 800e770:	4630      	mov	r0, r6
 800e772:	4639      	mov	r1, r7
 800e774:	4798      	blx	r3
 800e776:	e7e4      	b.n	800e742 <_DrawBitmap+0x642>
 800e778:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e77a:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
 800e77e:	8063      	strh	r3, [r4, #2]
 800e780:	2e00      	cmp	r6, #0
 800e782:	d0e1      	beq.n	800e748 <_DrawBitmap+0x648>
 800e784:	68b3      	ldr	r3, [r6, #8]
 800e786:	9a05      	ldr	r2, [sp, #20]
 800e788:	681b      	ldr	r3, [r3, #0]
 800e78a:	4630      	mov	r0, r6
 800e78c:	1c79      	adds	r1, r7, #1
 800e78e:	4798      	blx	r3
 800e790:	e7da      	b.n	800e748 <_DrawBitmap+0x648>
 800e792:	f1b9 0f00 	cmp.w	r9, #0
 800e796:	d034      	beq.n	800e802 <_DrawBitmap+0x702>
 800e798:	092d      	lsrs	r5, r5, #4
 800e79a:	d032      	beq.n	800e802 <_DrawBitmap+0x702>
 800e79c:	9821      	ldr	r0, [sp, #132]	; 0x84
 800e79e:	f850 3025 	ldr.w	r3, [r0, r5, lsl #2]
 800e7a2:	8023      	strh	r3, [r4, #0]
 800e7a4:	b36e      	cbz	r6, 800e802 <_DrawBitmap+0x702>
 800e7a6:	68b3      	ldr	r3, [r6, #8]
 800e7a8:	9a05      	ldr	r2, [sp, #20]
 800e7aa:	681b      	ldr	r3, [r3, #0]
 800e7ac:	4630      	mov	r0, r6
 800e7ae:	4639      	mov	r1, r7
 800e7b0:	4798      	blx	r3
 800e7b2:	e026      	b.n	800e802 <_DrawBitmap+0x702>
 800e7b4:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e7b6:	f1c6 0302 	rsb	r3, r6, #2
 800e7ba:	b2db      	uxtb	r3, r3
 800e7bc:	4650      	mov	r0, sl
 800e7be:	465a      	mov	r2, fp
 800e7c0:	4293      	cmp	r3, r2
 800e7c2:	bfc8      	it	gt
 800e7c4:	b2d3      	uxtbgt	r3, r2
 800e7c6:	1ad2      	subs	r2, r2, r3
 800e7c8:	1ca1      	adds	r1, r4, #2
 800e7ca:	461e      	mov	r6, r3
 800e7cc:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 800e7d0:	d005      	beq.n	800e7de <_DrawBitmap+0x6de>
 800e7d2:	f831 7c02 	ldrh.w	r7, [r1, #-2]
 800e7d6:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 800e7da:	f821 7c02 	strh.w	r7, [r1, #-2]
 800e7de:	3e01      	subs	r6, #1
 800e7e0:	012d      	lsls	r5, r5, #4
 800e7e2:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
 800e7e6:	b2ed      	uxtb	r5, r5
 800e7e8:	f101 0102 	add.w	r1, r1, #2
 800e7ec:	d1ee      	bne.n	800e7cc <_DrawBitmap+0x6cc>
 800e7ee:	3b01      	subs	r3, #1
 800e7f0:	b2db      	uxtb	r3, r3
 800e7f2:	3301      	adds	r3, #1
 800e7f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e7f8:	b11a      	cbz	r2, 800e802 <_DrawBitmap+0x702>
 800e7fa:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 800e7fe:	2302      	movs	r3, #2
 800e800:	e7de      	b.n	800e7c0 <_DrawBitmap+0x6c0>
 800e802:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e804:	9b05      	ldr	r3, [sp, #20]
 800e806:	9e08      	ldr	r6, [sp, #32]
 800e808:	44ba      	add	sl, r7
 800e80a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800e80c:	3301      	adds	r3, #1
 800e80e:	4437      	add	r7, r6
 800e810:	9305      	str	r3, [sp, #20]
 800e812:	9709      	str	r7, [sp, #36]	; 0x24
 800e814:	e5a3      	b.n	800e35e <_DrawBitmap+0x25e>
 800e816:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e818:	b113      	cbz	r3, 800e820 <_DrawBitmap+0x720>
 800e81a:	a811      	add	r0, sp, #68	; 0x44
 800e81c:	f7fd f836 	bl	800b88c <GUI_ALLOC_UnlockH>
 800e820:	b013      	add	sp, #76	; 0x4c
 800e822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e826:	bf00      	nop
 800e828:	200000b8 	.word	0x200000b8

0800e82c <_GetDevProp>:
 800e82c:	2908      	cmp	r1, #8
 800e82e:	b508      	push	{r3, lr}
 800e830:	d008      	beq.n	800e844 <_GetDevProp+0x18>
 800e832:	6800      	ldr	r0, [r0, #0]
 800e834:	b118      	cbz	r0, 800e83e <_GetDevProp+0x12>
 800e836:	68c3      	ldr	r3, [r0, #12]
 800e838:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e83a:	4798      	blx	r3
 800e83c:	bd08      	pop	{r3, pc}
 800e83e:	f04f 30ff 	mov.w	r0, #4294967295
 800e842:	bd08      	pop	{r3, pc}
 800e844:	2010      	movs	r0, #16
 800e846:	bd08      	pop	{r3, pc}

0800e848 <LCD_SelectLCD>:
 800e848:	b510      	push	{r4, lr}
 800e84a:	4b0d      	ldr	r3, [pc, #52]	; (800e880 <LCD_SelectLCD+0x38>)
 800e84c:	681a      	ldr	r2, [r3, #0]
 800e84e:	7c51      	ldrb	r1, [r2, #17]
 800e850:	4a0c      	ldr	r2, [pc, #48]	; (800e884 <LCD_SelectLCD+0x3c>)
 800e852:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 800e856:	461c      	mov	r4, r3
 800e858:	b140      	cbz	r0, 800e86c <LCD_SelectLCD+0x24>
 800e85a:	68c3      	ldr	r3, [r0, #12]
 800e85c:	b113      	cbz	r3, 800e864 <LCD_SelectLCD+0x1c>
 800e85e:	681b      	ldr	r3, [r3, #0]
 800e860:	2b04      	cmp	r3, #4
 800e862:	d001      	beq.n	800e868 <LCD_SelectLCD+0x20>
 800e864:	6800      	ldr	r0, [r0, #0]
 800e866:	e7f7      	b.n	800e858 <LCD_SelectLCD+0x10>
 800e868:	f7fc f87c 	bl	800a964 <GUI_DEVICE_Unlink>
 800e86c:	6823      	ldr	r3, [r4, #0]
 800e86e:	2200      	movs	r2, #0
 800e870:	661a      	str	r2, [r3, #96]	; 0x60
 800e872:	f103 0208 	add.w	r2, r3, #8
 800e876:	615a      	str	r2, [r3, #20]
 800e878:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e87c:	f7fa bbb8 	b.w	8008ff0 <LCD_SetClipRectMax>
 800e880:	200000b8 	.word	0x200000b8
 800e884:	20002d24 	.word	0x20002d24

0800e888 <LCD_ReadRectEx>:
 800e888:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e88c:	b087      	sub	sp, #28
 800e88e:	4617      	mov	r7, r2
 800e890:	9304      	str	r3, [sp, #16]
 800e892:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e894:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800e896:	68da      	ldr	r2, [r3, #12]
 800e898:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800e89a:	f8d2 8014 	ldr.w	r8, [r2, #20]
 800e89e:	4606      	mov	r6, r0
 800e8a0:	460d      	mov	r5, r1
 800e8a2:	b973      	cbnz	r3, 800e8c2 <LCD_ReadRectEx+0x3a>
 800e8a4:	4b71      	ldr	r3, [pc, #452]	; (800ea6c <LCD_ReadRectEx+0x1e4>)
 800e8a6:	681b      	ldr	r3, [r3, #0]
 800e8a8:	7c58      	ldrb	r0, [r3, #17]
 800e8aa:	f7fa f853 	bl	8008954 <GUI_GetBitsPerPixelEx>
 800e8ae:	2808      	cmp	r0, #8
 800e8b0:	4682      	mov	sl, r0
 800e8b2:	dd15      	ble.n	800e8e0 <LCD_ReadRectEx+0x58>
 800e8b4:	2810      	cmp	r0, #16
 800e8b6:	bfcc      	ite	gt
 800e8b8:	f04f 0904 	movgt.w	r9, #4
 800e8bc:	f04f 0902 	movle.w	r9, #2
 800e8c0:	e010      	b.n	800e8e4 <LCD_ReadRectEx+0x5c>
 800e8c2:	a811      	add	r0, sp, #68	; 0x44
 800e8c4:	2101      	movs	r1, #1
 800e8c6:	4798      	blx	r3
 800e8c8:	4684      	mov	ip, r0
 800e8ca:	2800      	cmp	r0, #0
 800e8cc:	d0ea      	beq.n	800e8a4 <LCD_ReadRectEx+0x1c>
 800e8ce:	9b04      	ldr	r3, [sp, #16]
 800e8d0:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e8d2:	e88d 0018 	stmia.w	sp, {r3, r4}
 800e8d6:	4631      	mov	r1, r6
 800e8d8:	462a      	mov	r2, r5
 800e8da:	463b      	mov	r3, r7
 800e8dc:	47e0      	blx	ip
 800e8de:	e0c1      	b.n	800ea64 <LCD_ReadRectEx+0x1dc>
 800e8e0:	f04f 0901 	mov.w	r9, #1
 800e8e4:	f04f 0b00 	mov.w	fp, #0
 800e8e8:	9b04      	ldr	r3, [sp, #16]
 800e8ea:	429d      	cmp	r5, r3
 800e8ec:	f300 80ba 	bgt.w	800ea64 <LCD_ReadRectEx+0x1dc>
 800e8f0:	f1b9 0f02 	cmp.w	r9, #2
 800e8f4:	d009      	beq.n	800e90a <LCD_ReadRectEx+0x82>
 800e8f6:	f1b9 0f04 	cmp.w	r9, #4
 800e8fa:	d004      	beq.n	800e906 <LCD_ReadRectEx+0x7e>
 800e8fc:	f1b9 0f01 	cmp.w	r9, #1
 800e900:	f040 80ae 	bne.w	800ea60 <LCD_ReadRectEx+0x1d8>
 800e904:	e003      	b.n	800e90e <LCD_ReadRectEx+0x86>
 800e906:	46b4      	mov	ip, r6
 800e908:	e09b      	b.n	800ea42 <LCD_ReadRectEx+0x1ba>
 800e90a:	46b4      	mov	ip, r6
 800e90c:	e08a      	b.n	800ea24 <LCD_ReadRectEx+0x19c>
 800e90e:	f10a 32ff 	add.w	r2, sl, #4294967295
 800e912:	2a07      	cmp	r2, #7
 800e914:	f200 80a4 	bhi.w	800ea60 <LCD_ReadRectEx+0x1d8>
 800e918:	e8df f002 	tbb	[pc, r2]
 800e91c:	0606080a 	.word	0x0606080a
 800e920:	04040404 	.word	0x04040404
 800e924:	46b4      	mov	ip, r6
 800e926:	e066      	b.n	800e9f6 <LCD_ReadRectEx+0x16e>
 800e928:	46b4      	mov	ip, r6
 800e92a:	e047      	b.n	800e9bc <LCD_ReadRectEx+0x134>
 800e92c:	46b4      	mov	ip, r6
 800e92e:	e022      	b.n	800e976 <LCD_ReadRectEx+0xee>
 800e930:	46b4      	mov	ip, r6
 800e932:	45bc      	cmp	ip, r7
 800e934:	f300 8094 	bgt.w	800ea60 <LCD_ReadRectEx+0x1d8>
 800e938:	4661      	mov	r1, ip
 800e93a:	462a      	mov	r2, r5
 800e93c:	f8cd c00c 	str.w	ip, [sp, #12]
 800e940:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e942:	47c0      	blx	r8
 800e944:	f1cb 0207 	rsb	r2, fp, #7
 800e948:	fa00 f202 	lsl.w	r2, r0, r2
 800e94c:	f64f 717f 	movw	r1, #65407	; 0xff7f
 800e950:	7820      	ldrb	r0, [r4, #0]
 800e952:	fa41 f10b 	asr.w	r1, r1, fp
 800e956:	4001      	ands	r1, r0
 800e958:	430a      	orrs	r2, r1
 800e95a:	7022      	strb	r2, [r4, #0]
 800e95c:	f10b 0301 	add.w	r3, fp, #1
 800e960:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e964:	f023 0207 	bic.w	r2, r3, #7
 800e968:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 800e96c:	fa43 fb02 	asr.w	fp, r3, r2
 800e970:	f10c 0c01 	add.w	ip, ip, #1
 800e974:	e7dd      	b.n	800e932 <LCD_ReadRectEx+0xaa>
 800e976:	45bc      	cmp	ip, r7
 800e978:	dc72      	bgt.n	800ea60 <LCD_ReadRectEx+0x1d8>
 800e97a:	4661      	mov	r1, ip
 800e97c:	462a      	mov	r2, r5
 800e97e:	f8cd c00c 	str.w	ip, [sp, #12]
 800e982:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e984:	47c0      	blx	r8
 800e986:	ea4f 024b 	mov.w	r2, fp, lsl #1
 800e98a:	f1c2 0106 	rsb	r1, r2, #6
 800e98e:	fa00 f101 	lsl.w	r1, r0, r1
 800e992:	f64f 703f 	movw	r0, #65343	; 0xff3f
 800e996:	fa40 f202 	asr.w	r2, r0, r2
 800e99a:	7820      	ldrb	r0, [r4, #0]
 800e99c:	4002      	ands	r2, r0
 800e99e:	4311      	orrs	r1, r2
 800e9a0:	7021      	strb	r1, [r4, #0]
 800e9a2:	f10b 0301 	add.w	r3, fp, #1
 800e9a6:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e9aa:	f023 0203 	bic.w	r2, r3, #3
 800e9ae:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 800e9b2:	fa43 fb02 	asr.w	fp, r3, r2
 800e9b6:	f10c 0c01 	add.w	ip, ip, #1
 800e9ba:	e7dc      	b.n	800e976 <LCD_ReadRectEx+0xee>
 800e9bc:	45bc      	cmp	ip, r7
 800e9be:	dc4f      	bgt.n	800ea60 <LCD_ReadRectEx+0x1d8>
 800e9c0:	4661      	mov	r1, ip
 800e9c2:	462a      	mov	r2, r5
 800e9c4:	f8cd c00c 	str.w	ip, [sp, #12]
 800e9c8:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e9ca:	47c0      	blx	r8
 800e9cc:	ea4f 028b 	mov.w	r2, fp, lsl #2
 800e9d0:	f1c2 0104 	rsb	r1, r2, #4
 800e9d4:	fa00 f101 	lsl.w	r1, r0, r1
 800e9d8:	200f      	movs	r0, #15
 800e9da:	fa00 f202 	lsl.w	r2, r0, r2
 800e9de:	7820      	ldrb	r0, [r4, #0]
 800e9e0:	4002      	ands	r2, r0
 800e9e2:	4311      	orrs	r1, r2
 800e9e4:	7021      	strb	r1, [r4, #0]
 800e9e6:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e9ea:	445c      	add	r4, fp
 800e9ec:	f10c 0c01 	add.w	ip, ip, #1
 800e9f0:	f08b 0b01 	eor.w	fp, fp, #1
 800e9f4:	e7e2      	b.n	800e9bc <LCD_ReadRectEx+0x134>
 800e9f6:	4273      	negs	r3, r6
 800e9f8:	1ba2      	subs	r2, r4, r6
 800e9fa:	45bc      	cmp	ip, r7
 800e9fc:	9305      	str	r3, [sp, #20]
 800e9fe:	4462      	add	r2, ip
 800ea00:	dc0e      	bgt.n	800ea20 <LCD_ReadRectEx+0x198>
 800ea02:	4661      	mov	r1, ip
 800ea04:	462a      	mov	r2, r5
 800ea06:	f8cd c00c 	str.w	ip, [sp, #12]
 800ea0a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ea0c:	47c0      	blx	r8
 800ea0e:	9a05      	ldr	r2, [sp, #20]
 800ea10:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800ea14:	4422      	add	r2, r4
 800ea16:	f802 000c 	strb.w	r0, [r2, ip]
 800ea1a:	f10c 0c01 	add.w	ip, ip, #1
 800ea1e:	e7ea      	b.n	800e9f6 <LCD_ReadRectEx+0x16e>
 800ea20:	4614      	mov	r4, r2
 800ea22:	e01d      	b.n	800ea60 <LCD_ReadRectEx+0x1d8>
 800ea24:	45bc      	cmp	ip, r7
 800ea26:	dc1b      	bgt.n	800ea60 <LCD_ReadRectEx+0x1d8>
 800ea28:	4661      	mov	r1, ip
 800ea2a:	f8cd c00c 	str.w	ip, [sp, #12]
 800ea2e:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ea30:	462a      	mov	r2, r5
 800ea32:	47c0      	blx	r8
 800ea34:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800ea38:	f824 0b02 	strh.w	r0, [r4], #2
 800ea3c:	f10c 0c01 	add.w	ip, ip, #1
 800ea40:	e7f0      	b.n	800ea24 <LCD_ReadRectEx+0x19c>
 800ea42:	45bc      	cmp	ip, r7
 800ea44:	dc0c      	bgt.n	800ea60 <LCD_ReadRectEx+0x1d8>
 800ea46:	4661      	mov	r1, ip
 800ea48:	f8cd c00c 	str.w	ip, [sp, #12]
 800ea4c:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ea4e:	462a      	mov	r2, r5
 800ea50:	47c0      	blx	r8
 800ea52:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800ea56:	f844 0b04 	str.w	r0, [r4], #4
 800ea5a:	f10c 0c01 	add.w	ip, ip, #1
 800ea5e:	e7f0      	b.n	800ea42 <LCD_ReadRectEx+0x1ba>
 800ea60:	3501      	adds	r5, #1
 800ea62:	e741      	b.n	800e8e8 <LCD_ReadRectEx+0x60>
 800ea64:	b007      	add	sp, #28
 800ea66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea6a:	bf00      	nop
 800ea6c:	200000b8 	.word	0x200000b8

0800ea70 <GUI_ReadRectEx>:
 800ea70:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ea72:	4d16      	ldr	r5, [pc, #88]	; (800eacc <GUI_ReadRectEx+0x5c>)
 800ea74:	9e05      	ldr	r6, [sp, #20]
 800ea76:	682d      	ldr	r5, [r5, #0]
 800ea78:	9c06      	ldr	r4, [sp, #24]
 800ea7a:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 800ea7e:	42b8      	cmp	r0, r7
 800ea80:	bfb8      	it	lt
 800ea82:	4638      	movlt	r0, r7
 800ea84:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 800ea88:	42ba      	cmp	r2, r7
 800ea8a:	bfa8      	it	ge
 800ea8c:	463a      	movge	r2, r7
 800ea8e:	4282      	cmp	r2, r0
 800ea90:	db1b      	blt.n	800eaca <GUI_ReadRectEx+0x5a>
 800ea92:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800ea96:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 800ea9a:	42b9      	cmp	r1, r7
 800ea9c:	bfb8      	it	lt
 800ea9e:	4639      	movlt	r1, r7
 800eaa0:	42ab      	cmp	r3, r5
 800eaa2:	bfa8      	it	ge
 800eaa4:	462b      	movge	r3, r5
 800eaa6:	428b      	cmp	r3, r1
 800eaa8:	db0f      	blt.n	800eaca <GUI_ReadRectEx+0x5a>
 800eaaa:	68e5      	ldr	r5, [r4, #12]
 800eaac:	682d      	ldr	r5, [r5, #0]
 800eaae:	f035 0704 	bics.w	r7, r5, #4
 800eab2:	d105      	bne.n	800eac0 <GUI_ReadRectEx+0x50>
 800eab4:	9605      	str	r6, [sp, #20]
 800eab6:	9406      	str	r4, [sp, #24]
 800eab8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800eabc:	f7ff bee4 	b.w	800e888 <LCD_ReadRectEx>
 800eac0:	6825      	ldr	r5, [r4, #0]
 800eac2:	2d00      	cmp	r5, #0
 800eac4:	d0f6      	beq.n	800eab4 <GUI_ReadRectEx+0x44>
 800eac6:	462c      	mov	r4, r5
 800eac8:	e7ef      	b.n	800eaaa <GUI_ReadRectEx+0x3a>
 800eaca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eacc:	200000b8 	.word	0x200000b8

0800ead0 <LCD_GetBkColorIndex>:
 800ead0:	4b02      	ldr	r3, [pc, #8]	; (800eadc <LCD_GetBkColorIndex+0xc>)
 800ead2:	681b      	ldr	r3, [r3, #0]
 800ead4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ead6:	6818      	ldr	r0, [r3, #0]
 800ead8:	4770      	bx	lr
 800eada:	bf00      	nop
 800eadc:	200000b8 	.word	0x200000b8

0800eae0 <LCD_GetColorIndex>:
 800eae0:	4b02      	ldr	r3, [pc, #8]	; (800eaec <LCD_GetColorIndex+0xc>)
 800eae2:	681b      	ldr	r3, [r3, #0]
 800eae4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800eae6:	6818      	ldr	r0, [r3, #0]
 800eae8:	4770      	bx	lr
 800eaea:	bf00      	nop
 800eaec:	200000b8 	.word	0x200000b8

0800eaf0 <_OnExit>:
 800eaf0:	b510      	push	{r4, lr}
 800eaf2:	4c04      	ldr	r4, [pc, #16]	; (800eb04 <_OnExit+0x14>)
 800eaf4:	6820      	ldr	r0, [r4, #0]
 800eaf6:	f7fc fea7 	bl	800b848 <GUI_ALLOC_FreeFixedBlock>
 800eafa:	4a03      	ldr	r2, [pc, #12]	; (800eb08 <_OnExit+0x18>)
 800eafc:	2300      	movs	r3, #0
 800eafe:	6023      	str	r3, [r4, #0]
 800eb00:	6013      	str	r3, [r2, #0]
 800eb02:	bd10      	pop	{r4, pc}
 800eb04:	20002e24 	.word	0x20002e24
 800eb08:	20002c40 	.word	0x20002c40

0800eb0c <LCD_InitColors>:
 800eb0c:	b538      	push	{r3, r4, r5, lr}
 800eb0e:	4d09      	ldr	r5, [pc, #36]	; (800eb34 <LCD_InitColors+0x28>)
 800eb10:	682c      	ldr	r4, [r5, #0]
 800eb12:	b95c      	cbnz	r4, 800eb2c <LCD_InitColors+0x20>
 800eb14:	4b08      	ldr	r3, [pc, #32]	; (800eb38 <LCD_InitColors+0x2c>)
 800eb16:	6818      	ldr	r0, [r3, #0]
 800eb18:	0080      	lsls	r0, r0, #2
 800eb1a:	f7fc ff79 	bl	800ba10 <GUI_ALLOC_GetFixedBlock>
 800eb1e:	6028      	str	r0, [r5, #0]
 800eb20:	b130      	cbz	r0, 800eb30 <LCD_InitColors+0x24>
 800eb22:	4806      	ldr	r0, [pc, #24]	; (800eb3c <LCD_InitColors+0x30>)
 800eb24:	4b06      	ldr	r3, [pc, #24]	; (800eb40 <LCD_InitColors+0x34>)
 800eb26:	6003      	str	r3, [r0, #0]
 800eb28:	f7fc f83e 	bl	800aba8 <GUI__RegisterExit>
 800eb2c:	2000      	movs	r0, #0
 800eb2e:	bd38      	pop	{r3, r4, r5, pc}
 800eb30:	2001      	movs	r0, #1
 800eb32:	bd38      	pop	{r3, r4, r5, pc}
 800eb34:	20002e24 	.word	0x20002e24
 800eb38:	20000184 	.word	0x20000184
 800eb3c:	20002c44 	.word	0x20002c44
 800eb40:	0800eaf1 	.word	0x0800eaf1

0800eb44 <LCD_InitLUT>:
 800eb44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800eb48:	f001 fa5b 	bl	8010002 <LCD_GetNumLayers>
 800eb4c:	2400      	movs	r4, #0
 800eb4e:	4680      	mov	r8, r0
 800eb50:	4544      	cmp	r4, r8
 800eb52:	da2c      	bge.n	800ebae <LCD_InitLUT+0x6a>
 800eb54:	4620      	mov	r0, r4
 800eb56:	f7fb fecd 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 800eb5a:	b330      	cbz	r0, 800ebaa <LCD_InitLUT+0x66>
 800eb5c:	4e15      	ldr	r6, [pc, #84]	; (800ebb4 <LCD_InitLUT+0x70>)
 800eb5e:	6833      	ldr	r3, [r6, #0]
 800eb60:	4620      	mov	r0, r4
 800eb62:	f893 9011 	ldrb.w	r9, [r3, #17]
 800eb66:	745c      	strb	r4, [r3, #17]
 800eb68:	f7f9 fed6 	bl	8008918 <LCD_GetBitsPerPixelEx>
 800eb6c:	2808      	cmp	r0, #8
 800eb6e:	dd03      	ble.n	800eb78 <LCD_InitLUT+0x34>
 800eb70:	6833      	ldr	r3, [r6, #0]
 800eb72:	f883 9011 	strb.w	r9, [r3, #17]
 800eb76:	e018      	b.n	800ebaa <LCD_InitLUT+0x66>
 800eb78:	4b0f      	ldr	r3, [pc, #60]	; (800ebb8 <LCD_InitLUT+0x74>)
 800eb7a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 800eb7e:	691a      	ldr	r2, [r3, #16]
 800eb80:	4b0e      	ldr	r3, [pc, #56]	; (800ebbc <LCD_InitLUT+0x78>)
 800eb82:	429a      	cmp	r2, r3
 800eb84:	d0f4      	beq.n	800eb70 <LCD_InitLUT+0x2c>
 800eb86:	4620      	mov	r0, r4
 800eb88:	f7f9 fec9 	bl	800891e <LCD_GetNumColorsEx>
 800eb8c:	2500      	movs	r5, #0
 800eb8e:	4682      	mov	sl, r0
 800eb90:	4555      	cmp	r5, sl
 800eb92:	daed      	bge.n	800eb70 <LCD_InitLUT+0x2c>
 800eb94:	b2ef      	uxtb	r7, r5
 800eb96:	4638      	mov	r0, r7
 800eb98:	f7fa fa9e 	bl	80090d8 <LCD_Index2Color>
 800eb9c:	4639      	mov	r1, r7
 800eb9e:	4602      	mov	r2, r0
 800eba0:	4620      	mov	r0, r4
 800eba2:	f7f9 fe75 	bl	8008890 <LCD_SetLUTEntryEx>
 800eba6:	3501      	adds	r5, #1
 800eba8:	e7f2      	b.n	800eb90 <LCD_InitLUT+0x4c>
 800ebaa:	3401      	adds	r4, #1
 800ebac:	e7d0      	b.n	800eb50 <LCD_InitLUT+0xc>
 800ebae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ebb2:	bf00      	nop
 800ebb4:	200000b8 	.word	0x200000b8
 800ebb8:	20002d24 	.word	0x20002d24
 800ebbc:	08012fa8 	.word	0x08012fa8

0800ebc0 <LCD_AA_SetAndMask>:
 800ebc0:	4b02      	ldr	r3, [pc, #8]	; (800ebcc <LCD_AA_SetAndMask+0xc>)
 800ebc2:	681a      	ldr	r2, [r3, #0]
 800ebc4:	6018      	str	r0, [r3, #0]
 800ebc6:	4610      	mov	r0, r2
 800ebc8:	4770      	bx	lr
 800ebca:	bf00      	nop
 800ebcc:	20000188 	.word	0x20000188

0800ebd0 <_GetWordWrap>:
 800ebd0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800ebd4:	2500      	movs	r5, #0
 800ebd6:	9001      	str	r0, [sp, #4]
 800ebd8:	4689      	mov	r9, r1
 800ebda:	4690      	mov	r8, r2
 800ebdc:	46aa      	mov	sl, r5
 800ebde:	462e      	mov	r6, r5
 800ebe0:	462c      	mov	r4, r5
 800ebe2:	462f      	mov	r7, r5
 800ebe4:	a801      	add	r0, sp, #4
 800ebe6:	f7fa fe3d 	bl	8009864 <GUI_UC__GetCharCodeInc>
 800ebea:	2d00      	cmp	r5, #0
 800ebec:	bf08      	it	eq
 800ebee:	4605      	moveq	r5, r0
 800ebf0:	b108      	cbz	r0, 800ebf6 <_GetWordWrap+0x26>
 800ebf2:	280a      	cmp	r0, #10
 800ebf4:	d10b      	bne.n	800ec0e <_GetWordWrap+0x3e>
 800ebf6:	4626      	mov	r6, r4
 800ebf8:	2e00      	cmp	r6, #0
 800ebfa:	bf18      	it	ne
 800ebfc:	4634      	movne	r4, r6
 800ebfe:	f1b8 0f00 	cmp.w	r8, #0
 800ec02:	d025      	beq.n	800ec50 <_GetWordWrap+0x80>
 800ec04:	ebca 0707 	rsb	r7, sl, r7
 800ec08:	f8c8 7000 	str.w	r7, [r8]
 800ec0c:	e020      	b.n	800ec50 <_GetWordWrap+0x80>
 800ec0e:	2820      	cmp	r0, #32
 800ec10:	d01c      	beq.n	800ec4c <_GetWordWrap+0x7c>
 800ec12:	2d20      	cmp	r5, #32
 800ec14:	d00e      	beq.n	800ec34 <_GetWordWrap+0x64>
 800ec16:	4b10      	ldr	r3, [pc, #64]	; (800ec58 <_GetWordWrap+0x88>)
 800ec18:	6819      	ldr	r1, [r3, #0]
 800ec1a:	4b10      	ldr	r3, [pc, #64]	; (800ec5c <_GetWordWrap+0x8c>)
 800ec1c:	681a      	ldr	r2, [r3, #0]
 800ec1e:	2300      	movs	r3, #0
 800ec20:	4293      	cmp	r3, r2
 800ec22:	da09      	bge.n	800ec38 <_GetWordWrap+0x68>
 800ec24:	f831 e013 	ldrh.w	lr, [r1, r3, lsl #1]
 800ec28:	4586      	cmp	lr, r0
 800ec2a:	d101      	bne.n	800ec30 <_GetWordWrap+0x60>
 800ec2c:	1c66      	adds	r6, r4, #1
 800ec2e:	e003      	b.n	800ec38 <_GetWordWrap+0x68>
 800ec30:	3301      	adds	r3, #1
 800ec32:	e7f5      	b.n	800ec20 <_GetWordWrap+0x50>
 800ec34:	4626      	mov	r6, r4
 800ec36:	2500      	movs	r5, #0
 800ec38:	f7fc fd22 	bl	800b680 <GUI_GetCharDistX>
 800ec3c:	4407      	add	r7, r0
 800ec3e:	454f      	cmp	r7, r9
 800ec40:	4682      	mov	sl, r0
 800ec42:	dd01      	ble.n	800ec48 <_GetWordWrap+0x78>
 800ec44:	2c00      	cmp	r4, #0
 800ec46:	d1d7      	bne.n	800ebf8 <_GetWordWrap+0x28>
 800ec48:	3401      	adds	r4, #1
 800ec4a:	e7cb      	b.n	800ebe4 <_GetWordWrap+0x14>
 800ec4c:	4626      	mov	r6, r4
 800ec4e:	e7f3      	b.n	800ec38 <_GetWordWrap+0x68>
 800ec50:	4620      	mov	r0, r4
 800ec52:	b002      	add	sp, #8
 800ec54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ec58:	20002c4c 	.word	0x20002c4c
 800ec5c:	20002c50 	.word	0x20002c50

0800ec60 <_GetCharWrap>:
 800ec60:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ec62:	2400      	movs	r4, #0
 800ec64:	9001      	str	r0, [sp, #4]
 800ec66:	460e      	mov	r6, r1
 800ec68:	4625      	mov	r5, r4
 800ec6a:	a801      	add	r0, sp, #4
 800ec6c:	f7fa fdfa 	bl	8009864 <GUI_UC__GetCharCodeInc>
 800ec70:	4607      	mov	r7, r0
 800ec72:	b148      	cbz	r0, 800ec88 <_GetCharWrap+0x28>
 800ec74:	f7fc fd04 	bl	800b680 <GUI_GetCharDistX>
 800ec78:	4405      	add	r5, r0
 800ec7a:	b10c      	cbz	r4, 800ec80 <_GetCharWrap+0x20>
 800ec7c:	42b5      	cmp	r5, r6
 800ec7e:	dc03      	bgt.n	800ec88 <_GetCharWrap+0x28>
 800ec80:	2f0a      	cmp	r7, #10
 800ec82:	d001      	beq.n	800ec88 <_GetCharWrap+0x28>
 800ec84:	3401      	adds	r4, #1
 800ec86:	e7f0      	b.n	800ec6a <_GetCharWrap+0xa>
 800ec88:	4620      	mov	r0, r4
 800ec8a:	b003      	add	sp, #12
 800ec8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800ec90 <_WrapGetNumCharsDisp>:
 800ec90:	2a01      	cmp	r2, #1
 800ec92:	b510      	push	{r4, lr}
 800ec94:	d005      	beq.n	800eca2 <_WrapGetNumCharsDisp+0x12>
 800ec96:	2a02      	cmp	r2, #2
 800ec98:	d108      	bne.n	800ecac <_WrapGetNumCharsDisp+0x1c>
 800ec9a:	4b07      	ldr	r3, [pc, #28]	; (800ecb8 <_WrapGetNumCharsDisp+0x28>)
 800ec9c:	681b      	ldr	r3, [r3, #0]
 800ec9e:	4798      	blx	r3
 800eca0:	bd10      	pop	{r4, pc}
 800eca2:	4a06      	ldr	r2, [pc, #24]	; (800ecbc <_WrapGetNumCharsDisp+0x2c>)
 800eca4:	6814      	ldr	r4, [r2, #0]
 800eca6:	461a      	mov	r2, r3
 800eca8:	47a0      	blx	r4
 800ecaa:	bd10      	pop	{r4, pc}
 800ecac:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800ecb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ecb4:	f7fc bc12 	b.w	800b4dc <GUI__GetLineNumChars>
 800ecb8:	2000018c 	.word	0x2000018c
 800ecbc:	20000190 	.word	0x20000190

0800ecc0 <GUI__WrapGetNumCharsDisp>:
 800ecc0:	2300      	movs	r3, #0
 800ecc2:	f7ff bfe5 	b.w	800ec90 <_WrapGetNumCharsDisp>

0800ecc6 <GUI__WrapGetNumCharsToNextLine>:
 800ecc6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ecc8:	b085      	sub	sp, #20
 800ecca:	ab03      	add	r3, sp, #12
 800eccc:	4617      	mov	r7, r2
 800ecce:	460e      	mov	r6, r1
 800ecd0:	9001      	str	r0, [sp, #4]
 800ecd2:	f7ff ffdd 	bl	800ec90 <_WrapGetNumCharsDisp>
 800ecd6:	9d01      	ldr	r5, [sp, #4]
 800ecd8:	4604      	mov	r4, r0
 800ecda:	4621      	mov	r1, r4
 800ecdc:	4628      	mov	r0, r5
 800ecde:	f7fa fdd5 	bl	800988c <GUI_UC__NumChars2NumBytes>
 800ece2:	4428      	add	r0, r5
 800ece4:	ad04      	add	r5, sp, #16
 800ece6:	f845 0d0c 	str.w	r0, [r5, #-12]!
 800ecea:	4628      	mov	r0, r5
 800ecec:	f7fa fdba 	bl	8009864 <GUI_UC__GetCharCodeInc>
 800ecf0:	280a      	cmp	r0, #10
 800ecf2:	d101      	bne.n	800ecf8 <GUI__WrapGetNumCharsToNextLine+0x32>
 800ecf4:	3401      	adds	r4, #1
 800ecf6:	e012      	b.n	800ed1e <GUI__WrapGetNumCharsToNextLine+0x58>
 800ecf8:	2f01      	cmp	r7, #1
 800ecfa:	d110      	bne.n	800ed1e <GUI__WrapGetNumCharsToNextLine+0x58>
 800ecfc:	2820      	cmp	r0, #32
 800ecfe:	d10e      	bne.n	800ed1e <GUI__WrapGetNumCharsToNextLine+0x58>
 800ed00:	f7fc fcbe 	bl	800b680 <GUI_GetCharDistX>
 800ed04:	4607      	mov	r7, r0
 800ed06:	9b03      	ldr	r3, [sp, #12]
 800ed08:	429e      	cmp	r6, r3
 800ed0a:	db08      	blt.n	800ed1e <GUI__WrapGetNumCharsToNextLine+0x58>
 800ed0c:	443b      	add	r3, r7
 800ed0e:	4628      	mov	r0, r5
 800ed10:	9303      	str	r3, [sp, #12]
 800ed12:	f7fa fda7 	bl	8009864 <GUI_UC__GetCharCodeInc>
 800ed16:	2820      	cmp	r0, #32
 800ed18:	f104 0401 	add.w	r4, r4, #1
 800ed1c:	d0f3      	beq.n	800ed06 <GUI__WrapGetNumCharsToNextLine+0x40>
 800ed1e:	4620      	mov	r0, r4
 800ed20:	b005      	add	sp, #20
 800ed22:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ed24 <GUI__WrapGetNumBytesToNextLine>:
 800ed24:	b510      	push	{r4, lr}
 800ed26:	4604      	mov	r4, r0
 800ed28:	f7ff ffcd 	bl	800ecc6 <GUI__WrapGetNumCharsToNextLine>
 800ed2c:	4601      	mov	r1, r0
 800ed2e:	4620      	mov	r0, r4
 800ed30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ed34:	f7fa bdaa 	b.w	800988c <GUI_UC__NumChars2NumBytes>

0800ed38 <GUI__ExpandPixelIndicesEx>:
 800ed38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ed3c:	1e0c      	subs	r4, r1, #0
 800ed3e:	4605      	mov	r5, r0
 800ed40:	f340 80b3 	ble.w	800eeaa <GUI__ExpandPixelIndicesEx+0x172>
 800ed44:	2a08      	cmp	r2, #8
 800ed46:	685f      	ldr	r7, [r3, #4]
 800ed48:	dd04      	ble.n	800ed54 <GUI__ExpandPixelIndicesEx+0x1c>
 800ed4a:	2a10      	cmp	r2, #16
 800ed4c:	f340 8098 	ble.w	800ee80 <GUI__ExpandPixelIndicesEx+0x148>
 800ed50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ed54:	3a01      	subs	r2, #1
 800ed56:	2a07      	cmp	r2, #7
 800ed58:	f200 80a7 	bhi.w	800eeaa <GUI__ExpandPixelIndicesEx+0x172>
 800ed5c:	e8df f002 	tbb	[pc, r2]
 800ed60:	58a52d04 	.word	0x58a52d04
 800ed64:	83a5a5a5 	.word	0x83a5a5a5
 800ed68:	1e66      	subs	r6, r4, #1
 800ed6a:	10f2      	asrs	r2, r6, #3
 800ed6c:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800ed70:	3b01      	subs	r3, #1
 800ed72:	eb05 0802 	add.w	r8, r5, r2
 800ed76:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800ed7a:	f006 0607 	and.w	r6, r6, #7
 800ed7e:	f815 a002 	ldrb.w	sl, [r5, r2]
 800ed82:	2580      	movs	r5, #128	; 0x80
 800ed84:	4135      	asrs	r5, r6
 800ed86:	f108 38ff 	add.w	r8, r8, #4294967295
 800ed8a:	b2ed      	uxtb	r5, r5
 800ed8c:	f1c6 0307 	rsb	r3, r6, #7
 800ed90:	ea0a 0005 	and.w	r0, sl, r5
 800ed94:	4118      	asrs	r0, r3
 800ed96:	47b8      	blx	r7
 800ed98:	f849 0904 	str.w	r0, [r9], #-4
 800ed9c:	b936      	cbnz	r6, 800edac <GUI__ExpandPixelIndicesEx+0x74>
 800ed9e:	f898 a000 	ldrb.w	sl, [r8]
 800eda2:	2501      	movs	r5, #1
 800eda4:	f108 38ff 	add.w	r8, r8, #4294967295
 800eda8:	2607      	movs	r6, #7
 800edaa:	e002      	b.n	800edb2 <GUI__ExpandPixelIndicesEx+0x7a>
 800edac:	006d      	lsls	r5, r5, #1
 800edae:	3e01      	subs	r6, #1
 800edb0:	b2ed      	uxtb	r5, r5
 800edb2:	3c01      	subs	r4, #1
 800edb4:	d1ea      	bne.n	800ed8c <GUI__ExpandPixelIndicesEx+0x54>
 800edb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800edba:	1e66      	subs	r6, r4, #1
 800edbc:	10b2      	asrs	r2, r6, #2
 800edbe:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800edc2:	3b01      	subs	r3, #1
 800edc4:	f006 0603 	and.w	r6, r6, #3
 800edc8:	eb05 0802 	add.w	r8, r5, r2
 800edcc:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800edd0:	f815 a002 	ldrb.w	sl, [r5, r2]
 800edd4:	0073      	lsls	r3, r6, #1
 800edd6:	25c0      	movs	r5, #192	; 0xc0
 800edd8:	411d      	asrs	r5, r3
 800edda:	f108 38ff 	add.w	r8, r8, #4294967295
 800edde:	b2ed      	uxtb	r5, r5
 800ede0:	0073      	lsls	r3, r6, #1
 800ede2:	f1c3 0306 	rsb	r3, r3, #6
 800ede6:	ea0a 0005 	and.w	r0, sl, r5
 800edea:	4118      	asrs	r0, r3
 800edec:	47b8      	blx	r7
 800edee:	f849 0904 	str.w	r0, [r9], #-4
 800edf2:	b936      	cbnz	r6, 800ee02 <GUI__ExpandPixelIndicesEx+0xca>
 800edf4:	2503      	movs	r5, #3
 800edf6:	f898 a000 	ldrb.w	sl, [r8]
 800edfa:	462e      	mov	r6, r5
 800edfc:	f108 38ff 	add.w	r8, r8, #4294967295
 800ee00:	e002      	b.n	800ee08 <GUI__ExpandPixelIndicesEx+0xd0>
 800ee02:	00ad      	lsls	r5, r5, #2
 800ee04:	3e01      	subs	r6, #1
 800ee06:	b2ed      	uxtb	r5, r5
 800ee08:	3c01      	subs	r4, #1
 800ee0a:	d1e9      	bne.n	800ede0 <GUI__ExpandPixelIndicesEx+0xa8>
 800ee0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ee10:	1e66      	subs	r6, r4, #1
 800ee12:	1072      	asrs	r2, r6, #1
 800ee14:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800ee18:	3b01      	subs	r3, #1
 800ee1a:	f006 0601 	and.w	r6, r6, #1
 800ee1e:	eb05 0802 	add.w	r8, r5, r2
 800ee22:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800ee26:	f815 a002 	ldrb.w	sl, [r5, r2]
 800ee2a:	00b3      	lsls	r3, r6, #2
 800ee2c:	25f0      	movs	r5, #240	; 0xf0
 800ee2e:	411d      	asrs	r5, r3
 800ee30:	f108 38ff 	add.w	r8, r8, #4294967295
 800ee34:	b2ed      	uxtb	r5, r5
 800ee36:	00b3      	lsls	r3, r6, #2
 800ee38:	f1c3 0304 	rsb	r3, r3, #4
 800ee3c:	ea0a 0005 	and.w	r0, sl, r5
 800ee40:	4118      	asrs	r0, r3
 800ee42:	47b8      	blx	r7
 800ee44:	f849 0904 	str.w	r0, [r9], #-4
 800ee48:	b936      	cbnz	r6, 800ee58 <GUI__ExpandPixelIndicesEx+0x120>
 800ee4a:	f898 a000 	ldrb.w	sl, [r8]
 800ee4e:	250f      	movs	r5, #15
 800ee50:	f108 38ff 	add.w	r8, r8, #4294967295
 800ee54:	2601      	movs	r6, #1
 800ee56:	e002      	b.n	800ee5e <GUI__ExpandPixelIndicesEx+0x126>
 800ee58:	012d      	lsls	r5, r5, #4
 800ee5a:	b2ed      	uxtb	r5, r5
 800ee5c:	2600      	movs	r6, #0
 800ee5e:	3c01      	subs	r4, #1
 800ee60:	d1e9      	bne.n	800ee36 <GUI__ExpandPixelIndicesEx+0xfe>
 800ee62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ee66:	192e      	adds	r6, r5, r4
 800ee68:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 800ee6c:	1b34      	subs	r4, r6, r4
 800ee6e:	f816 0d01 	ldrb.w	r0, [r6, #-1]!
 800ee72:	47b8      	blx	r7
 800ee74:	42a6      	cmp	r6, r4
 800ee76:	f845 0d04 	str.w	r0, [r5, #-4]!
 800ee7a:	d1f8      	bne.n	800ee6e <GUI__ExpandPixelIndicesEx+0x136>
 800ee7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ee80:	695e      	ldr	r6, [r3, #20]
 800ee82:	b12e      	cbz	r6, 800ee90 <GUI__ExpandPixelIndicesEx+0x158>
 800ee84:	4629      	mov	r1, r5
 800ee86:	4622      	mov	r2, r4
 800ee88:	2302      	movs	r3, #2
 800ee8a:	47b0      	blx	r6
 800ee8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ee90:	0064      	lsls	r4, r4, #1
 800ee92:	4425      	add	r5, r4
 800ee94:	192e      	adds	r6, r5, r4
 800ee96:	1b2c      	subs	r4, r5, r4
 800ee98:	f835 0d02 	ldrh.w	r0, [r5, #-2]!
 800ee9c:	47b8      	blx	r7
 800ee9e:	42a5      	cmp	r5, r4
 800eea0:	f846 0d04 	str.w	r0, [r6, #-4]!
 800eea4:	d1f8      	bne.n	800ee98 <GUI__ExpandPixelIndicesEx+0x160>
 800eea6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eeaa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800eeae <_GetTwinArcPara>:
 800eeae:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800eeb2:	fb01 f901 	mul.w	r9, r1, r1
 800eeb6:	1e47      	subs	r7, r0, #1
 800eeb8:	4604      	mov	r4, r0
 800eeba:	4340      	muls	r0, r0
 800eebc:	ebc9 0000 	rsb	r0, r9, r0
 800eec0:	460d      	mov	r5, r1
 800eec2:	4692      	mov	sl, r2
 800eec4:	4698      	mov	r8, r3
 800eec6:	9e08      	ldr	r6, [sp, #32]
 800eec8:	f7fa fa0b 	bl	80092e2 <GUI__sqrt32>
 800eecc:	42bd      	cmp	r5, r7
 800eece:	f8ca 0000 	str.w	r0, [sl]
 800eed2:	da10      	bge.n	800eef6 <_GetTwinArcPara+0x48>
 800eed4:	fb07 f007 	mul.w	r0, r7, r7
 800eed8:	ebc9 0000 	rsb	r0, r9, r0
 800eedc:	f7fa fa01 	bl	80092e2 <GUI__sqrt32>
 800eee0:	3c02      	subs	r4, #2
 800eee2:	42a5      	cmp	r5, r4
 800eee4:	f8c8 0000 	str.w	r0, [r8]
 800eee8:	da03      	bge.n	800eef2 <_GetTwinArcPara+0x44>
 800eeea:	3801      	subs	r0, #1
 800eeec:	6030      	str	r0, [r6, #0]
 800eeee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eef2:	2300      	movs	r3, #0
 800eef4:	e002      	b.n	800eefc <_GetTwinArcPara+0x4e>
 800eef6:	2300      	movs	r3, #0
 800eef8:	f8c8 3000 	str.w	r3, [r8]
 800eefc:	6033      	str	r3, [r6, #0]
 800eefe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800ef04 <GUI__DrawTwinArc2>:
 800ef04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef08:	461c      	mov	r4, r3
 800ef0a:	4b57      	ldr	r3, [pc, #348]	; (800f068 <GUI__DrawTwinArc2+0x164>)
 800ef0c:	681b      	ldr	r3, [r3, #0]
 800ef0e:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 800ef10:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800ef12:	b08b      	sub	sp, #44	; 0x2c
 800ef14:	4415      	add	r5, r2
 800ef16:	1e63      	subs	r3, r4, #1
 800ef18:	19c6      	adds	r6, r0, r7
 800ef1a:	442b      	add	r3, r5
 800ef1c:	440f      	add	r7, r1
 800ef1e:	a808      	add	r0, sp, #32
 800ef20:	f8ad 6020 	strh.w	r6, [sp, #32]
 800ef24:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800ef28:	f8ad 5022 	strh.w	r5, [sp, #34]	; 0x22
 800ef2c:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ef30:	f7f7 f8ee 	bl	8006110 <WM__InitIVRSearch>
 800ef34:	2800      	cmp	r0, #0
 800ef36:	f000 8094 	beq.w	800f062 <GUI__DrawTwinArc2+0x15e>
 800ef3a:	2c00      	cmp	r4, #0
 800ef3c:	dc02      	bgt.n	800ef44 <GUI__DrawTwinArc2+0x40>
 800ef3e:	f7f7 f825 	bl	8005f8c <WM__GetNextIVR>
 800ef42:	e7f7      	b.n	800ef34 <GUI__DrawTwinArc2+0x30>
 800ef44:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ef46:	f7fc f832 	bl	800afae <GUI_SetColor>
 800ef4a:	f104 38ff 	add.w	r8, r4, #4294967295
 800ef4e:	4641      	mov	r1, r8
 800ef50:	f118 38ff 	adds.w	r8, r8, #4294967295
 800ef54:	d324      	bcc.n	800efa0 <GUI__DrawTwinArc2+0x9c>
 800ef56:	ab07      	add	r3, sp, #28
 800ef58:	9300      	str	r3, [sp, #0]
 800ef5a:	4620      	mov	r0, r4
 800ef5c:	aa05      	add	r2, sp, #20
 800ef5e:	ab06      	add	r3, sp, #24
 800ef60:	f7ff ffa5 	bl	800eeae <_GetTwinArcPara>
 800ef64:	f104 39ff 	add.w	r9, r4, #4294967295
 800ef68:	f8dd a018 	ldr.w	sl, [sp, #24]
 800ef6c:	9905      	ldr	r1, [sp, #20]
 800ef6e:	1930      	adds	r0, r6, r4
 800ef70:	44a9      	add	r9, r5
 800ef72:	ebc8 0909 	rsb	r9, r8, r9
 800ef76:	ebc4 0b07 	rsb	fp, r4, r7
 800ef7a:	ebca 0200 	rsb	r2, sl, r0
 800ef7e:	eb0b 0301 	add.w	r3, fp, r1
 800ef82:	1a40      	subs	r0, r0, r1
 800ef84:	3a01      	subs	r2, #1
 800ef86:	4649      	mov	r1, r9
 800ef88:	9302      	str	r3, [sp, #8]
 800ef8a:	f7f9 fdd1 	bl	8008b30 <LCD_DrawHLine>
 800ef8e:	9b02      	ldr	r3, [sp, #8]
 800ef90:	eb0b 000a 	add.w	r0, fp, sl
 800ef94:	3001      	adds	r0, #1
 800ef96:	4649      	mov	r1, r9
 800ef98:	461a      	mov	r2, r3
 800ef9a:	f7f9 fdc9 	bl	8008b30 <LCD_DrawHLine>
 800ef9e:	e7d6      	b.n	800ef4e <GUI__DrawTwinArc2+0x4a>
 800efa0:	2c01      	cmp	r4, #1
 800efa2:	d0cc      	beq.n	800ef3e <GUI__DrawTwinArc2+0x3a>
 800efa4:	9815      	ldr	r0, [sp, #84]	; 0x54
 800efa6:	f7fc f802 	bl	800afae <GUI_SetColor>
 800efaa:	f1a4 0902 	sub.w	r9, r4, #2
 800efae:	eb05 0b04 	add.w	fp, r5, r4
 800efb2:	f105 0802 	add.w	r8, r5, #2
 800efb6:	f1b9 0f00 	cmp.w	r9, #0
 800efba:	d027      	beq.n	800f00c <GUI__DrawTwinArc2+0x108>
 800efbc:	ab07      	add	r3, sp, #28
 800efbe:	4649      	mov	r1, r9
 800efc0:	9300      	str	r3, [sp, #0]
 800efc2:	4620      	mov	r0, r4
 800efc4:	aa05      	add	r2, sp, #20
 800efc6:	ab06      	add	r3, sp, #24
 800efc8:	f7ff ff71 	bl	800eeae <_GetTwinArcPara>
 800efcc:	f8dd a01c 	ldr.w	sl, [sp, #28]
 800efd0:	9906      	ldr	r1, [sp, #24]
 800efd2:	1930      	adds	r0, r6, r4
 800efd4:	1b3b      	subs	r3, r7, r4
 800efd6:	ebca 0200 	rsb	r2, sl, r0
 800efda:	eb03 0c01 	add.w	ip, r3, r1
 800efde:	1a40      	subs	r0, r0, r1
 800efe0:	3a01      	subs	r2, #1
 800efe2:	4641      	mov	r1, r8
 800efe4:	9302      	str	r3, [sp, #8]
 800efe6:	f8cd c00c 	str.w	ip, [sp, #12]
 800efea:	f7f9 fda1 	bl	8008b30 <LCD_DrawHLine>
 800efee:	9b02      	ldr	r3, [sp, #8]
 800eff0:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800eff4:	eb03 000a 	add.w	r0, r3, sl
 800eff8:	4641      	mov	r1, r8
 800effa:	3001      	adds	r0, #1
 800effc:	4662      	mov	r2, ip
 800effe:	f7f9 fd97 	bl	8008b30 <LCD_DrawHLine>
 800f002:	f109 39ff 	add.w	r9, r9, #4294967295
 800f006:	f108 0801 	add.w	r8, r8, #1
 800f00a:	e7d4      	b.n	800efb6 <GUI__DrawTwinArc2+0xb2>
 800f00c:	2c02      	cmp	r4, #2
 800f00e:	d096      	beq.n	800ef3e <GUI__DrawTwinArc2+0x3a>
 800f010:	9816      	ldr	r0, [sp, #88]	; 0x58
 800f012:	f7fb ffcc 	bl	800afae <GUI_SetColor>
 800f016:	f1c4 0303 	rsb	r3, r4, #3
 800f01a:	f1a4 0803 	sub.w	r8, r4, #3
 800f01e:	449b      	add	fp, r3
 800f020:	f1b8 0f00 	cmp.w	r8, #0
 800f024:	d08b      	beq.n	800ef3e <GUI__DrawTwinArc2+0x3a>
 800f026:	ab07      	add	r3, sp, #28
 800f028:	4641      	mov	r1, r8
 800f02a:	9300      	str	r3, [sp, #0]
 800f02c:	4620      	mov	r0, r4
 800f02e:	ab06      	add	r3, sp, #24
 800f030:	aa05      	add	r2, sp, #20
 800f032:	f7ff ff3c 	bl	800eeae <_GetTwinArcPara>
 800f036:	9807      	ldr	r0, [sp, #28]
 800f038:	1932      	adds	r2, r6, r4
 800f03a:	ebc4 0907 	rsb	r9, r4, r7
 800f03e:	4659      	mov	r1, fp
 800f040:	eb09 0a00 	add.w	sl, r9, r0
 800f044:	1a10      	subs	r0, r2, r0
 800f046:	3a01      	subs	r2, #1
 800f048:	f7f9 fd72 	bl	8008b30 <LCD_DrawHLine>
 800f04c:	4659      	mov	r1, fp
 800f04e:	f109 0001 	add.w	r0, r9, #1
 800f052:	4652      	mov	r2, sl
 800f054:	f7f9 fd6c 	bl	8008b30 <LCD_DrawHLine>
 800f058:	f108 38ff 	add.w	r8, r8, #4294967295
 800f05c:	f10b 0b01 	add.w	fp, fp, #1
 800f060:	e7de      	b.n	800f020 <GUI__DrawTwinArc2+0x11c>
 800f062:	b00b      	add	sp, #44	; 0x2c
 800f064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f068:	200000b8 	.word	0x200000b8

0800f06c <GUI__CompactPixelIndices>:
 800f06c:	2a08      	cmp	r2, #8
 800f06e:	b510      	push	{r4, lr}
 800f070:	dd0e      	ble.n	800f090 <GUI__CompactPixelIndices+0x24>
 800f072:	2a10      	cmp	r2, #16
 800f074:	dc0a      	bgt.n	800f08c <GUI__CompactPixelIndices+0x20>
 800f076:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800f07a:	4603      	mov	r3, r0
 800f07c:	f850 2b04 	ldr.w	r2, [r0], #4
 800f080:	f823 2b02 	strh.w	r2, [r3], #2
 800f084:	428b      	cmp	r3, r1
 800f086:	d1f9      	bne.n	800f07c <GUI__CompactPixelIndices+0x10>
 800f088:	2001      	movs	r0, #1
 800f08a:	bd10      	pop	{r4, pc}
 800f08c:	2000      	movs	r0, #0
 800f08e:	bd10      	pop	{r4, pc}
 800f090:	2a02      	cmp	r2, #2
 800f092:	d06d      	beq.n	800f170 <GUI__CompactPixelIndices+0x104>
 800f094:	2a04      	cmp	r2, #4
 800f096:	d054      	beq.n	800f142 <GUI__CompactPixelIndices+0xd6>
 800f098:	2a01      	cmp	r2, #1
 800f09a:	f040 8095 	bne.w	800f1c8 <GUI__CompactPixelIndices+0x15c>
 800f09e:	4604      	mov	r4, r0
 800f0a0:	6803      	ldr	r3, [r0, #0]
 800f0a2:	2901      	cmp	r1, #1
 800f0a4:	ea4f 13c3 	mov.w	r3, r3, lsl #7
 800f0a8:	b2db      	uxtb	r3, r3
 800f0aa:	d047      	beq.n	800f13c <GUI__CompactPixelIndices+0xd0>
 800f0ac:	6842      	ldr	r2, [r0, #4]
 800f0ae:	2902      	cmp	r1, #2
 800f0b0:	f002 0201 	and.w	r2, r2, #1
 800f0b4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800f0b8:	d102      	bne.n	800f0c0 <GUI__CompactPixelIndices+0x54>
 800f0ba:	f100 0208 	add.w	r2, r0, #8
 800f0be:	e03e      	b.n	800f13e <GUI__CompactPixelIndices+0xd2>
 800f0c0:	6882      	ldr	r2, [r0, #8]
 800f0c2:	2903      	cmp	r1, #3
 800f0c4:	f002 0201 	and.w	r2, r2, #1
 800f0c8:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800f0cc:	d102      	bne.n	800f0d4 <GUI__CompactPixelIndices+0x68>
 800f0ce:	f100 020c 	add.w	r2, r0, #12
 800f0d2:	e034      	b.n	800f13e <GUI__CompactPixelIndices+0xd2>
 800f0d4:	68c2      	ldr	r2, [r0, #12]
 800f0d6:	2904      	cmp	r1, #4
 800f0d8:	f002 0201 	and.w	r2, r2, #1
 800f0dc:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 800f0e0:	d102      	bne.n	800f0e8 <GUI__CompactPixelIndices+0x7c>
 800f0e2:	f100 0210 	add.w	r2, r0, #16
 800f0e6:	e02a      	b.n	800f13e <GUI__CompactPixelIndices+0xd2>
 800f0e8:	6902      	ldr	r2, [r0, #16]
 800f0ea:	2905      	cmp	r1, #5
 800f0ec:	f002 0201 	and.w	r2, r2, #1
 800f0f0:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800f0f4:	d102      	bne.n	800f0fc <GUI__CompactPixelIndices+0x90>
 800f0f6:	f100 0214 	add.w	r2, r0, #20
 800f0fa:	e020      	b.n	800f13e <GUI__CompactPixelIndices+0xd2>
 800f0fc:	6942      	ldr	r2, [r0, #20]
 800f0fe:	2906      	cmp	r1, #6
 800f100:	f002 0201 	and.w	r2, r2, #1
 800f104:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 800f108:	d102      	bne.n	800f110 <GUI__CompactPixelIndices+0xa4>
 800f10a:	f100 0218 	add.w	r2, r0, #24
 800f10e:	e016      	b.n	800f13e <GUI__CompactPixelIndices+0xd2>
 800f110:	6982      	ldr	r2, [r0, #24]
 800f112:	3907      	subs	r1, #7
 800f114:	f002 0201 	and.w	r2, r2, #1
 800f118:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 800f11c:	d102      	bne.n	800f124 <GUI__CompactPixelIndices+0xb8>
 800f11e:	f100 021c 	add.w	r2, r0, #28
 800f122:	e005      	b.n	800f130 <GUI__CompactPixelIndices+0xc4>
 800f124:	f100 0220 	add.w	r2, r0, #32
 800f128:	69c0      	ldr	r0, [r0, #28]
 800f12a:	f000 0001 	and.w	r0, r0, #1
 800f12e:	4303      	orrs	r3, r0
 800f130:	f804 3b01 	strb.w	r3, [r4], #1
 800f134:	2900      	cmp	r1, #0
 800f136:	d0a7      	beq.n	800f088 <GUI__CompactPixelIndices+0x1c>
 800f138:	4610      	mov	r0, r2
 800f13a:	e7b1      	b.n	800f0a0 <GUI__CompactPixelIndices+0x34>
 800f13c:	1d02      	adds	r2, r0, #4
 800f13e:	2100      	movs	r1, #0
 800f140:	e7f6      	b.n	800f130 <GUI__CompactPixelIndices+0xc4>
 800f142:	4602      	mov	r2, r0
 800f144:	6803      	ldr	r3, [r0, #0]
 800f146:	2901      	cmp	r1, #1
 800f148:	ea4f 1303 	mov.w	r3, r3, lsl #4
 800f14c:	b2db      	uxtb	r3, r3
 800f14e:	d102      	bne.n	800f156 <GUI__CompactPixelIndices+0xea>
 800f150:	1d04      	adds	r4, r0, #4
 800f152:	2100      	movs	r1, #0
 800f154:	e006      	b.n	800f164 <GUI__CompactPixelIndices+0xf8>
 800f156:	f100 0408 	add.w	r4, r0, #8
 800f15a:	6840      	ldr	r0, [r0, #4]
 800f15c:	f000 000f 	and.w	r0, r0, #15
 800f160:	4303      	orrs	r3, r0
 800f162:	3902      	subs	r1, #2
 800f164:	f802 3b01 	strb.w	r3, [r2], #1
 800f168:	2900      	cmp	r1, #0
 800f16a:	d08d      	beq.n	800f088 <GUI__CompactPixelIndices+0x1c>
 800f16c:	4620      	mov	r0, r4
 800f16e:	e7e9      	b.n	800f144 <GUI__CompactPixelIndices+0xd8>
 800f170:	4604      	mov	r4, r0
 800f172:	6803      	ldr	r3, [r0, #0]
 800f174:	2901      	cmp	r1, #1
 800f176:	ea4f 1383 	mov.w	r3, r3, lsl #6
 800f17a:	b2db      	uxtb	r3, r3
 800f17c:	d021      	beq.n	800f1c2 <GUI__CompactPixelIndices+0x156>
 800f17e:	6842      	ldr	r2, [r0, #4]
 800f180:	2902      	cmp	r1, #2
 800f182:	f002 0203 	and.w	r2, r2, #3
 800f186:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 800f18a:	d102      	bne.n	800f192 <GUI__CompactPixelIndices+0x126>
 800f18c:	f100 0208 	add.w	r2, r0, #8
 800f190:	e018      	b.n	800f1c4 <GUI__CompactPixelIndices+0x158>
 800f192:	6882      	ldr	r2, [r0, #8]
 800f194:	2903      	cmp	r1, #3
 800f196:	f002 0203 	and.w	r2, r2, #3
 800f19a:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 800f19e:	d102      	bne.n	800f1a6 <GUI__CompactPixelIndices+0x13a>
 800f1a0:	f100 020c 	add.w	r2, r0, #12
 800f1a4:	e00e      	b.n	800f1c4 <GUI__CompactPixelIndices+0x158>
 800f1a6:	f100 0210 	add.w	r2, r0, #16
 800f1aa:	68c0      	ldr	r0, [r0, #12]
 800f1ac:	f000 0003 	and.w	r0, r0, #3
 800f1b0:	4303      	orrs	r3, r0
 800f1b2:	3904      	subs	r1, #4
 800f1b4:	f804 3b01 	strb.w	r3, [r4], #1
 800f1b8:	2900      	cmp	r1, #0
 800f1ba:	f43f af65 	beq.w	800f088 <GUI__CompactPixelIndices+0x1c>
 800f1be:	4610      	mov	r0, r2
 800f1c0:	e7d7      	b.n	800f172 <GUI__CompactPixelIndices+0x106>
 800f1c2:	1d02      	adds	r2, r0, #4
 800f1c4:	2100      	movs	r1, #0
 800f1c6:	e7f5      	b.n	800f1b4 <GUI__CompactPixelIndices+0x148>
 800f1c8:	2300      	movs	r3, #0
 800f1ca:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 800f1ce:	54c2      	strb	r2, [r0, r3]
 800f1d0:	3301      	adds	r3, #1
 800f1d2:	428b      	cmp	r3, r1
 800f1d4:	d1f9      	bne.n	800f1ca <GUI__CompactPixelIndices+0x15e>
 800f1d6:	e757      	b.n	800f088 <GUI__CompactPixelIndices+0x1c>

0800f1d8 <GUI__ConvertColor2Index>:
 800f1d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f1dc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800f1e0:	681e      	ldr	r6, [r3, #0]
 800f1e2:	f1b8 0f00 	cmp.w	r8, #0
 800f1e6:	bf08      	it	eq
 800f1e8:	4680      	moveq	r8, r0
 800f1ea:	2a08      	cmp	r2, #8
 800f1ec:	4604      	mov	r4, r0
 800f1ee:	460d      	mov	r5, r1
 800f1f0:	dd05      	ble.n	800f1fe <GUI__ConvertColor2Index+0x26>
 800f1f2:	2a10      	cmp	r2, #16
 800f1f4:	f340 80b6 	ble.w	800f364 <GUI__ConvertColor2Index+0x18c>
 800f1f8:	2000      	movs	r0, #0
 800f1fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f1fe:	3a01      	subs	r2, #1
 800f200:	2a07      	cmp	r2, #7
 800f202:	f200 80a4 	bhi.w	800f34e <GUI__ConvertColor2Index+0x176>
 800f206:	e8df f002 	tbb	[pc, r2]
 800f20a:	6111      	.short	0x6111
 800f20c:	a2a287a2 	.word	0xa2a287a2
 800f210:	92a2      	.short	0x92a2
 800f212:	69e0      	ldr	r0, [r4, #28]
 800f214:	47b0      	blx	r6
 800f216:	4338      	orrs	r0, r7
 800f218:	f104 0920 	add.w	r9, r4, #32
 800f21c:	b2c7      	uxtb	r7, r0
 800f21e:	3d08      	subs	r5, #8
 800f220:	f808 7b01 	strb.w	r7, [r8], #1
 800f224:	2d00      	cmp	r5, #0
 800f226:	f000 8092 	beq.w	800f34e <GUI__ConvertColor2Index+0x176>
 800f22a:	464c      	mov	r4, r9
 800f22c:	6820      	ldr	r0, [r4, #0]
 800f22e:	47b0      	blx	r6
 800f230:	2d01      	cmp	r5, #1
 800f232:	ea4f 10c0 	mov.w	r0, r0, lsl #7
 800f236:	b2c7      	uxtb	r7, r0
 800f238:	f000 808c 	beq.w	800f354 <GUI__ConvertColor2Index+0x17c>
 800f23c:	6860      	ldr	r0, [r4, #4]
 800f23e:	47b0      	blx	r6
 800f240:	2d02      	cmp	r5, #2
 800f242:	ea47 1080 	orr.w	r0, r7, r0, lsl #6
 800f246:	b2c7      	uxtb	r7, r0
 800f248:	d102      	bne.n	800f250 <GUI__ConvertColor2Index+0x78>
 800f24a:	f104 0908 	add.w	r9, r4, #8
 800f24e:	e083      	b.n	800f358 <GUI__ConvertColor2Index+0x180>
 800f250:	68a0      	ldr	r0, [r4, #8]
 800f252:	47b0      	blx	r6
 800f254:	2d03      	cmp	r5, #3
 800f256:	ea47 1040 	orr.w	r0, r7, r0, lsl #5
 800f25a:	b2c7      	uxtb	r7, r0
 800f25c:	d102      	bne.n	800f264 <GUI__ConvertColor2Index+0x8c>
 800f25e:	f104 090c 	add.w	r9, r4, #12
 800f262:	e079      	b.n	800f358 <GUI__ConvertColor2Index+0x180>
 800f264:	68e0      	ldr	r0, [r4, #12]
 800f266:	47b0      	blx	r6
 800f268:	2d04      	cmp	r5, #4
 800f26a:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 800f26e:	b2c7      	uxtb	r7, r0
 800f270:	d102      	bne.n	800f278 <GUI__ConvertColor2Index+0xa0>
 800f272:	f104 0910 	add.w	r9, r4, #16
 800f276:	e06f      	b.n	800f358 <GUI__ConvertColor2Index+0x180>
 800f278:	6920      	ldr	r0, [r4, #16]
 800f27a:	47b0      	blx	r6
 800f27c:	2d05      	cmp	r5, #5
 800f27e:	ea47 00c0 	orr.w	r0, r7, r0, lsl #3
 800f282:	b2c7      	uxtb	r7, r0
 800f284:	d102      	bne.n	800f28c <GUI__ConvertColor2Index+0xb4>
 800f286:	f104 0914 	add.w	r9, r4, #20
 800f28a:	e065      	b.n	800f358 <GUI__ConvertColor2Index+0x180>
 800f28c:	6960      	ldr	r0, [r4, #20]
 800f28e:	47b0      	blx	r6
 800f290:	2d06      	cmp	r5, #6
 800f292:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 800f296:	b2c7      	uxtb	r7, r0
 800f298:	d102      	bne.n	800f2a0 <GUI__ConvertColor2Index+0xc8>
 800f29a:	f104 0918 	add.w	r9, r4, #24
 800f29e:	e05b      	b.n	800f358 <GUI__ConvertColor2Index+0x180>
 800f2a0:	69a0      	ldr	r0, [r4, #24]
 800f2a2:	47b0      	blx	r6
 800f2a4:	2d07      	cmp	r5, #7
 800f2a6:	ea47 0040 	orr.w	r0, r7, r0, lsl #1
 800f2aa:	b2c7      	uxtb	r7, r0
 800f2ac:	d1b1      	bne.n	800f212 <GUI__ConvertColor2Index+0x3a>
 800f2ae:	f104 091c 	add.w	r9, r4, #28
 800f2b2:	e051      	b.n	800f358 <GUI__ConvertColor2Index+0x180>
 800f2b4:	68e0      	ldr	r0, [r4, #12]
 800f2b6:	47b0      	blx	r6
 800f2b8:	4338      	orrs	r0, r7
 800f2ba:	f104 0910 	add.w	r9, r4, #16
 800f2be:	b2c7      	uxtb	r7, r0
 800f2c0:	3d04      	subs	r5, #4
 800f2c2:	f808 7b01 	strb.w	r7, [r8], #1
 800f2c6:	2d00      	cmp	r5, #0
 800f2c8:	d041      	beq.n	800f34e <GUI__ConvertColor2Index+0x176>
 800f2ca:	464c      	mov	r4, r9
 800f2cc:	6820      	ldr	r0, [r4, #0]
 800f2ce:	47b0      	blx	r6
 800f2d0:	2d01      	cmp	r5, #1
 800f2d2:	ea4f 1080 	mov.w	r0, r0, lsl #6
 800f2d6:	b2c7      	uxtb	r7, r0
 800f2d8:	d040      	beq.n	800f35c <GUI__ConvertColor2Index+0x184>
 800f2da:	6860      	ldr	r0, [r4, #4]
 800f2dc:	47b0      	blx	r6
 800f2de:	2d02      	cmp	r5, #2
 800f2e0:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 800f2e4:	b2c7      	uxtb	r7, r0
 800f2e6:	d102      	bne.n	800f2ee <GUI__ConvertColor2Index+0x116>
 800f2e8:	f104 0908 	add.w	r9, r4, #8
 800f2ec:	e038      	b.n	800f360 <GUI__ConvertColor2Index+0x188>
 800f2ee:	68a0      	ldr	r0, [r4, #8]
 800f2f0:	47b0      	blx	r6
 800f2f2:	2d03      	cmp	r5, #3
 800f2f4:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 800f2f8:	b2c7      	uxtb	r7, r0
 800f2fa:	d1db      	bne.n	800f2b4 <GUI__ConvertColor2Index+0xdc>
 800f2fc:	f104 090c 	add.w	r9, r4, #12
 800f300:	e02e      	b.n	800f360 <GUI__ConvertColor2Index+0x188>
 800f302:	6860      	ldr	r0, [r4, #4]
 800f304:	47b0      	blx	r6
 800f306:	4338      	orrs	r0, r7
 800f308:	f104 0908 	add.w	r9, r4, #8
 800f30c:	b2c7      	uxtb	r7, r0
 800f30e:	3d02      	subs	r5, #2
 800f310:	f808 7b01 	strb.w	r7, [r8], #1
 800f314:	b1dd      	cbz	r5, 800f34e <GUI__ConvertColor2Index+0x176>
 800f316:	464c      	mov	r4, r9
 800f318:	6820      	ldr	r0, [r4, #0]
 800f31a:	47b0      	blx	r6
 800f31c:	2d01      	cmp	r5, #1
 800f31e:	ea4f 1000 	mov.w	r0, r0, lsl #4
 800f322:	b2c7      	uxtb	r7, r0
 800f324:	d1ed      	bne.n	800f302 <GUI__ConvertColor2Index+0x12a>
 800f326:	f104 0904 	add.w	r9, r4, #4
 800f32a:	2500      	movs	r5, #0
 800f32c:	e7f0      	b.n	800f310 <GUI__ConvertColor2Index+0x138>
 800f32e:	691f      	ldr	r7, [r3, #16]
 800f330:	b12f      	cbz	r7, 800f33e <GUI__ConvertColor2Index+0x166>
 800f332:	4620      	mov	r0, r4
 800f334:	4641      	mov	r1, r8
 800f336:	462a      	mov	r2, r5
 800f338:	2301      	movs	r3, #1
 800f33a:	47b8      	blx	r7
 800f33c:	e007      	b.n	800f34e <GUI__ConvertColor2Index+0x176>
 800f33e:	f854 0027 	ldr.w	r0, [r4, r7, lsl #2]
 800f342:	47b0      	blx	r6
 800f344:	f808 0007 	strb.w	r0, [r8, r7]
 800f348:	3701      	adds	r7, #1
 800f34a:	42bd      	cmp	r5, r7
 800f34c:	d1f7      	bne.n	800f33e <GUI__ConvertColor2Index+0x166>
 800f34e:	2001      	movs	r0, #1
 800f350:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f354:	f104 0904 	add.w	r9, r4, #4
 800f358:	2500      	movs	r5, #0
 800f35a:	e761      	b.n	800f220 <GUI__ConvertColor2Index+0x48>
 800f35c:	f104 0904 	add.w	r9, r4, #4
 800f360:	2500      	movs	r5, #0
 800f362:	e7ae      	b.n	800f2c2 <GUI__ConvertColor2Index+0xea>
 800f364:	691f      	ldr	r7, [r3, #16]
 800f366:	b11f      	cbz	r7, 800f370 <GUI__ConvertColor2Index+0x198>
 800f368:	4641      	mov	r1, r8
 800f36a:	462a      	mov	r2, r5
 800f36c:	2302      	movs	r3, #2
 800f36e:	e7e4      	b.n	800f33a <GUI__ConvertColor2Index+0x162>
 800f370:	f854 0b04 	ldr.w	r0, [r4], #4
 800f374:	47b0      	blx	r6
 800f376:	3d01      	subs	r5, #1
 800f378:	f828 0b02 	strh.w	r0, [r8], #2
 800f37c:	d1f8      	bne.n	800f370 <GUI__ConvertColor2Index+0x198>
 800f37e:	e7e6      	b.n	800f34e <GUI__ConvertColor2Index+0x176>

0800f380 <GUI__CompactPixelIndicesEx>:
 800f380:	b513      	push	{r0, r1, r4, lr}
 800f382:	2400      	movs	r4, #0
 800f384:	9400      	str	r4, [sp, #0]
 800f386:	f7ff ff27 	bl	800f1d8 <GUI__ConvertColor2Index>
 800f38a:	b002      	add	sp, #8
 800f38c:	bd10      	pop	{r4, pc}

0800f38e <_GetCharCode>:
 800f38e:	7800      	ldrb	r0, [r0, #0]
 800f390:	4770      	bx	lr

0800f392 <_GetCharSize>:
 800f392:	2001      	movs	r0, #1
 800f394:	4770      	bx	lr

0800f396 <_CalcSizeOfChar>:
 800f396:	2001      	movs	r0, #1
 800f398:	4770      	bx	lr

0800f39a <_Encode>:
 800f39a:	7001      	strb	r1, [r0, #0]
 800f39c:	2001      	movs	r0, #1
 800f39e:	4770      	bx	lr

0800f3a0 <_Add>:
 800f3a0:	4a0f      	ldr	r2, [pc, #60]	; (800f3e0 <_Add+0x40>)
 800f3a2:	6813      	ldr	r3, [r2, #0]
 800f3a4:	2b0b      	cmp	r3, #11
 800f3a6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f3a8:	4617      	mov	r7, r2
 800f3aa:	dc18      	bgt.n	800f3de <_Add+0x3e>
 800f3ac:	2b00      	cmp	r3, #0
 800f3ae:	4c0d      	ldr	r4, [pc, #52]	; (800f3e4 <_Add+0x44>)
 800f3b0:	dc01      	bgt.n	800f3b6 <_Add+0x16>
 800f3b2:	2200      	movs	r2, #0
 800f3b4:	e00f      	b.n	800f3d6 <_Add+0x36>
 800f3b6:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 800f3ba:	461a      	mov	r2, r3
 800f3bc:	f831 6d02 	ldrh.w	r6, [r1, #-2]!
 800f3c0:	fa0f fc86 	sxth.w	ip, r6
 800f3c4:	4584      	cmp	ip, r0
 800f3c6:	f102 35ff 	add.w	r5, r2, #4294967295
 800f3ca:	db04      	blt.n	800f3d6 <_Add+0x36>
 800f3cc:	804e      	strh	r6, [r1, #2]
 800f3ce:	2d00      	cmp	r5, #0
 800f3d0:	d0ef      	beq.n	800f3b2 <_Add+0x12>
 800f3d2:	462a      	mov	r2, r5
 800f3d4:	e7f2      	b.n	800f3bc <_Add+0x1c>
 800f3d6:	3301      	adds	r3, #1
 800f3d8:	f824 0012 	strh.w	r0, [r4, r2, lsl #1]
 800f3dc:	603b      	str	r3, [r7, #0]
 800f3de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f3e0:	20002c54 	.word	0x20002c54
 800f3e4:	20002c58 	.word	0x20002c58

0800f3e8 <GL_FillPolygon>:
 800f3e8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3ec:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 800f5a8 <GL_FillPolygon+0x1c0>
 800f3f0:	9101      	str	r1, [sp, #4]
 800f3f2:	4692      	mov	sl, r2
 800f3f4:	4606      	mov	r6, r0
 800f3f6:	f643 74ff 	movw	r4, #16383	; 0x3fff
 800f3fa:	2200      	movs	r2, #0
 800f3fc:	9901      	ldr	r1, [sp, #4]
 800f3fe:	428a      	cmp	r2, r1
 800f400:	da0b      	bge.n	800f41a <GL_FillPolygon+0x32>
 800f402:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 800f406:	3201      	adds	r2, #1
 800f408:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800f40c:	428c      	cmp	r4, r1
 800f40e:	bfa8      	it	ge
 800f410:	460c      	movge	r4, r1
 800f412:	4589      	cmp	r9, r1
 800f414:	bfb8      	it	lt
 800f416:	4689      	movlt	r9, r1
 800f418:	e7f0      	b.n	800f3fc <GL_FillPolygon+0x14>
 800f41a:	4960      	ldr	r1, [pc, #384]	; (800f59c <GL_FillPolygon+0x1b4>)
 800f41c:	680a      	ldr	r2, [r1, #0]
 800f41e:	6952      	ldr	r2, [r2, #20]
 800f420:	468b      	mov	fp, r1
 800f422:	b15a      	cbz	r2, 800f43c <GL_FillPolygon+0x54>
 800f424:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 800f428:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800f42c:	1ac9      	subs	r1, r1, r3
 800f42e:	1ad2      	subs	r2, r2, r3
 800f430:	4589      	cmp	r9, r1
 800f432:	bfa8      	it	ge
 800f434:	4689      	movge	r9, r1
 800f436:	4294      	cmp	r4, r2
 800f438:	bfb8      	it	lt
 800f43a:	4614      	movlt	r4, r2
 800f43c:	eb04 0803 	add.w	r8, r4, r3
 800f440:	454c      	cmp	r4, r9
 800f442:	f300 80a7 	bgt.w	800f594 <GL_FillPolygon+0x1ac>
 800f446:	4b56      	ldr	r3, [pc, #344]	; (800f5a0 <GL_FillPolygon+0x1b8>)
 800f448:	2700      	movs	r7, #0
 800f44a:	601f      	str	r7, [r3, #0]
 800f44c:	4635      	mov	r5, r6
 800f44e:	9901      	ldr	r1, [sp, #4]
 800f450:	428f      	cmp	r7, r1
 800f452:	da55      	bge.n	800f500 <GL_FillPolygon+0x118>
 800f454:	9b01      	ldr	r3, [sp, #4]
 800f456:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f45a:	1e59      	subs	r1, r3, #1
 800f45c:	428f      	cmp	r7, r1
 800f45e:	bfb4      	ite	lt
 800f460:	f107 0c01 	addlt.w	ip, r7, #1
 800f464:	f04f 0c00 	movge.w	ip, #0
 800f468:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800f46c:	eb06 030c 	add.w	r3, r6, ip
 800f470:	42a2      	cmp	r2, r4
 800f472:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f476:	d136      	bne.n	800f4e6 <GL_FillPolygon+0xfe>
 800f478:	42a3      	cmp	r3, r4
 800f47a:	d002      	beq.n	800f482 <GL_FillPolygon+0x9a>
 800f47c:	463a      	mov	r2, r7
 800f47e:	2000      	movs	r0, #0
 800f480:	e01b      	b.n	800f4ba <GL_FillPolygon+0xd2>
 800f482:	f9b5 e000 	ldrsh.w	lr, [r5]
 800f486:	f936 200c 	ldrsh.w	r2, [r6, ip]
 800f48a:	f8db 3000 	ldr.w	r3, [fp]
 800f48e:	44d6      	add	lr, sl
 800f490:	4452      	add	r2, sl
 800f492:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f494:	4596      	cmp	lr, r2
 800f496:	681b      	ldr	r3, [r3, #0]
 800f498:	da02      	bge.n	800f4a0 <GL_FillPolygon+0xb8>
 800f49a:	4670      	mov	r0, lr
 800f49c:	4641      	mov	r1, r8
 800f49e:	e020      	b.n	800f4e2 <GL_FillPolygon+0xfa>
 800f4a0:	4610      	mov	r0, r2
 800f4a2:	4641      	mov	r1, r8
 800f4a4:	4672      	mov	r2, lr
 800f4a6:	e01c      	b.n	800f4e2 <GL_FillPolygon+0xfa>
 800f4a8:	b152      	cbz	r2, 800f4c0 <GL_FillPolygon+0xd8>
 800f4aa:	3a01      	subs	r2, #1
 800f4ac:	eb06 0c82 	add.w	ip, r6, r2, lsl #2
 800f4b0:	f9bc c002 	ldrsh.w	ip, [ip, #2]
 800f4b4:	45a4      	cmp	ip, r4
 800f4b6:	d105      	bne.n	800f4c4 <GL_FillPolygon+0xdc>
 800f4b8:	3001      	adds	r0, #1
 800f4ba:	4288      	cmp	r0, r1
 800f4bc:	dbf4      	blt.n	800f4a8 <GL_FillPolygon+0xc0>
 800f4be:	e01c      	b.n	800f4fa <GL_FillPolygon+0x112>
 800f4c0:	460a      	mov	r2, r1
 800f4c2:	e7f3      	b.n	800f4ac <GL_FillPolygon+0xc4>
 800f4c4:	ebc4 0c0c 	rsb	ip, r4, ip
 800f4c8:	1b1b      	subs	r3, r3, r4
 800f4ca:	ea9c 0f03 	teq	ip, r3
 800f4ce:	f9b5 0000 	ldrsh.w	r0, [r5]
 800f4d2:	d44d      	bmi.n	800f570 <GL_FillPolygon+0x188>
 800f4d4:	f8db 3000 	ldr.w	r3, [fp]
 800f4d8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f4da:	4450      	add	r0, sl
 800f4dc:	681b      	ldr	r3, [r3, #0]
 800f4de:	4641      	mov	r1, r8
 800f4e0:	4602      	mov	r2, r0
 800f4e2:	4798      	blx	r3
 800f4e4:	e009      	b.n	800f4fa <GL_FillPolygon+0x112>
 800f4e6:	42a3      	cmp	r3, r4
 800f4e8:	d007      	beq.n	800f4fa <GL_FillPolygon+0x112>
 800f4ea:	db44      	blt.n	800f576 <GL_FillPolygon+0x18e>
 800f4ec:	42a2      	cmp	r2, r4
 800f4ee:	dd27      	ble.n	800f540 <GL_FillPolygon+0x158>
 800f4f0:	42a3      	cmp	r3, r4
 800f4f2:	dd42      	ble.n	800f57a <GL_FillPolygon+0x192>
 800f4f4:	e001      	b.n	800f4fa <GL_FillPolygon+0x112>
 800f4f6:	42a3      	cmp	r3, r4
 800f4f8:	dd49      	ble.n	800f58e <GL_FillPolygon+0x1a6>
 800f4fa:	3701      	adds	r7, #1
 800f4fc:	3504      	adds	r5, #4
 800f4fe:	e7a6      	b.n	800f44e <GL_FillPolygon+0x66>
 800f500:	2500      	movs	r5, #0
 800f502:	4628      	mov	r0, r5
 800f504:	462f      	mov	r7, r5
 800f506:	4b26      	ldr	r3, [pc, #152]	; (800f5a0 <GL_FillPolygon+0x1b8>)
 800f508:	681b      	ldr	r3, [r3, #0]
 800f50a:	429f      	cmp	r7, r3
 800f50c:	da14      	bge.n	800f538 <GL_FillPolygon+0x150>
 800f50e:	4b25      	ldr	r3, [pc, #148]	; (800f5a4 <GL_FillPolygon+0x1bc>)
 800f510:	f933 3017 	ldrsh.w	r3, [r3, r7, lsl #1]
 800f514:	b15d      	cbz	r5, 800f52e <GL_FillPolygon+0x146>
 800f516:	f8db 2000 	ldr.w	r2, [fp]
 800f51a:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800f51c:	4450      	add	r0, sl
 800f51e:	f8d2 c000 	ldr.w	ip, [r2]
 800f522:	9300      	str	r3, [sp, #0]
 800f524:	eb0a 0203 	add.w	r2, sl, r3
 800f528:	4641      	mov	r1, r8
 800f52a:	47e0      	blx	ip
 800f52c:	9b00      	ldr	r3, [sp, #0]
 800f52e:	f085 0501 	eor.w	r5, r5, #1
 800f532:	3701      	adds	r7, #1
 800f534:	4618      	mov	r0, r3
 800f536:	e7e6      	b.n	800f506 <GL_FillPolygon+0x11e>
 800f538:	3401      	adds	r4, #1
 800f53a:	f108 0801 	add.w	r8, r8, #1
 800f53e:	e77f      	b.n	800f440 <GL_FillPolygon+0x58>
 800f540:	429a      	cmp	r2, r3
 800f542:	dcd8      	bgt.n	800f4f6 <GL_FillPolygon+0x10e>
 800f544:	f9b5 1000 	ldrsh.w	r1, [r5]
 800f548:	f936 000c 	ldrsh.w	r0, [r6, ip]
 800f54c:	ebc2 0e04 	rsb	lr, r2, r4
 800f550:	1a40      	subs	r0, r0, r1
 800f552:	fb0e f000 	mul.w	r0, lr, r0
 800f556:	2800      	cmp	r0, #0
 800f558:	ebc2 0303 	rsb	r3, r2, r3
 800f55c:	bfdb      	ittet	le
 800f55e:	105a      	asrle	r2, r3, #1
 800f560:	f1c2 0201 	rsble	r2, r2, #1
 800f564:	eb00 0063 	addgt.w	r0, r0, r3, asr #1
 800f568:	1880      	addle	r0, r0, r2
 800f56a:	fb90 f0f3 	sdiv	r0, r0, r3
 800f56e:	4408      	add	r0, r1
 800f570:	f7ff ff16 	bl	800f3a0 <_Add>
 800f574:	e7c1      	b.n	800f4fa <GL_FillPolygon+0x112>
 800f576:	42a2      	cmp	r2, r4
 800f578:	dbbf      	blt.n	800f4fa <GL_FillPolygon+0x112>
 800f57a:	429a      	cmp	r2, r3
 800f57c:	ddbd      	ble.n	800f4fa <GL_FillPolygon+0x112>
 800f57e:	4696      	mov	lr, r2
 800f580:	f936 100c 	ldrsh.w	r1, [r6, ip]
 800f584:	f9b5 0000 	ldrsh.w	r0, [r5]
 800f588:	461a      	mov	r2, r3
 800f58a:	4673      	mov	r3, lr
 800f58c:	e7de      	b.n	800f54c <GL_FillPolygon+0x164>
 800f58e:	42a2      	cmp	r2, r4
 800f590:	daf5      	bge.n	800f57e <GL_FillPolygon+0x196>
 800f592:	e7b2      	b.n	800f4fa <GL_FillPolygon+0x112>
 800f594:	b003      	add	sp, #12
 800f596:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f59a:	bf00      	nop
 800f59c:	200000b8 	.word	0x200000b8
 800f5a0:	20002c54 	.word	0x20002c54
 800f5a4:	20002c58 	.word	0x20002c58
 800f5a8:	ffffc001 	.word	0xffffc001

0800f5ac <_DrawGradient>:
 800f5ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5b0:	b08f      	sub	sp, #60	; 0x3c
 800f5b2:	4688      	mov	r8, r1
 800f5b4:	4614      	mov	r4, r2
 800f5b6:	991a      	ldr	r1, [sp, #104]	; 0x68
 800f5b8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800f5ba:	f8dd a060 	ldr.w	sl, [sp, #96]	; 0x60
 800f5be:	f8dd b064 	ldr.w	fp, [sp, #100]	; 0x64
 800f5c2:	9104      	str	r1, [sp, #16]
 800f5c4:	4605      	mov	r5, r0
 800f5c6:	461e      	mov	r6, r3
 800f5c8:	9203      	str	r2, [sp, #12]
 800f5ca:	f7fb fc1c 	bl	800ae06 <GUI_GetColor>
 800f5ce:	45da      	cmp	sl, fp
 800f5d0:	9009      	str	r0, [sp, #36]	; 0x24
 800f5d2:	d109      	bne.n	800f5e8 <_DrawGradient+0x3c>
 800f5d4:	4650      	mov	r0, sl
 800f5d6:	f7f9 fdcf 	bl	8009178 <LCD_SetColor>
 800f5da:	9b03      	ldr	r3, [sp, #12]
 800f5dc:	b113      	cbz	r3, 800f5e4 <_DrawGradient+0x38>
 800f5de:	4628      	mov	r0, r5
 800f5e0:	4641      	mov	r1, r8
 800f5e2:	e09d      	b.n	800f720 <_DrawGradient+0x174>
 800f5e4:	4640      	mov	r0, r8
 800f5e6:	e0a1      	b.n	800f72c <_DrawGradient+0x180>
 800f5e8:	ebb6 0708 	subs.w	r7, r6, r8
 800f5ec:	f000 80b2 	beq.w	800f754 <_DrawGradient+0x1a8>
 800f5f0:	fa5f f28a 	uxtb.w	r2, sl
 800f5f4:	fa5f f38b 	uxtb.w	r3, fp
 800f5f8:	1a9b      	subs	r3, r3, r2
 800f5fa:	930a      	str	r3, [sp, #40]	; 0x28
 800f5fc:	2302      	movs	r3, #2
 800f5fe:	fb97 f3f3 	sdiv	r3, r7, r3
 800f602:	fb02 3207 	mla	r2, r2, r7, r3
 800f606:	f3cb 2107 	ubfx	r1, fp, #8, #8
 800f60a:	9205      	str	r2, [sp, #20]
 800f60c:	f3ca 2207 	ubfx	r2, sl, #8, #8
 800f610:	1a89      	subs	r1, r1, r2
 800f612:	fb02 3207 	mla	r2, r2, r7, r3
 800f616:	910b      	str	r1, [sp, #44]	; 0x2c
 800f618:	9206      	str	r2, [sp, #24]
 800f61a:	f3cb 4107 	ubfx	r1, fp, #16, #8
 800f61e:	f3ca 4207 	ubfx	r2, sl, #16, #8
 800f622:	ea4f 6a1a 	mov.w	sl, sl, lsr #24
 800f626:	1a89      	subs	r1, r1, r2
 800f628:	ebca 6b1b 	rsb	fp, sl, fp, lsr #24
 800f62c:	fb02 3207 	mla	r2, r2, r7, r3
 800f630:	fb0a 3a07 	mla	sl, sl, r7, r3
 800f634:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f636:	910c      	str	r1, [sp, #48]	; 0x30
 800f638:	9207      	str	r2, [sp, #28]
 800f63a:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
 800f63e:	f8cd a020 	str.w	sl, [sp, #32]
 800f642:	f108 33ff 	add.w	r3, r8, #4294967295
 800f646:	f04f 0901 	mov.w	r9, #1
 800f64a:	f103 0a01 	add.w	sl, r3, #1
 800f64e:	45b2      	cmp	sl, r6
 800f650:	dc5b      	bgt.n	800f70a <_DrawGradient+0x15e>
 800f652:	f8dd c014 	ldr.w	ip, [sp, #20]
 800f656:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
 800f65a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f65c:	fb9c fcf7 	sdiv	ip, ip, r7
 800f660:	f8cd c004 	str.w	ip, [sp, #4]
 800f664:	f8dd c014 	ldr.w	ip, [sp, #20]
 800f668:	44f4      	add	ip, lr
 800f66a:	f8cd c014 	str.w	ip, [sp, #20]
 800f66e:	f8dd e02c 	ldr.w	lr, [sp, #44]	; 0x2c
 800f672:	f8dd c018 	ldr.w	ip, [sp, #24]
 800f676:	fb9c f1f7 	sdiv	r1, ip, r7
 800f67a:	44f4      	add	ip, lr
 800f67c:	f8cd c018 	str.w	ip, [sp, #24]
 800f680:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 800f684:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800f688:	fb9c fbf7 	sdiv	fp, ip, r7
 800f68c:	44f4      	add	ip, lr
 800f68e:	f8cd c01c 	str.w	ip, [sp, #28]
 800f692:	f8dd c020 	ldr.w	ip, [sp, #32]
 800f696:	fb9c fef7 	sdiv	lr, ip, r7
 800f69a:	4494      	add	ip, r2
 800f69c:	f8cd c020 	str.w	ip, [sp, #32]
 800f6a0:	f8dd c004 	ldr.w	ip, [sp, #4]
 800f6a4:	ea4f 4b0b 	mov.w	fp, fp, lsl #16
 800f6a8:	ea4b 6b0e 	orr.w	fp, fp, lr, lsl #24
 800f6ac:	ea4c 2201 	orr.w	r2, ip, r1, lsl #8
 800f6b0:	45c2      	cmp	sl, r8
 800f6b2:	ea4b 0b02 	orr.w	fp, fp, r2
 800f6b6:	dd25      	ble.n	800f704 <_DrawGradient+0x158>
 800f6b8:	4583      	cmp	fp, r0
 800f6ba:	d102      	bne.n	800f6c2 <_DrawGradient+0x116>
 800f6bc:	f109 0901 	add.w	r9, r9, #1
 800f6c0:	e020      	b.n	800f704 <_DrawGradient+0x158>
 800f6c2:	9302      	str	r3, [sp, #8]
 800f6c4:	f7f9 fd58 	bl	8009178 <LCD_SetColor>
 800f6c8:	f1b9 0f01 	cmp.w	r9, #1
 800f6cc:	9b02      	ldr	r3, [sp, #8]
 800f6ce:	d00f      	beq.n	800f6f0 <_DrawGradient+0x144>
 800f6d0:	9a03      	ldr	r2, [sp, #12]
 800f6d2:	ebc9 010a 	rsb	r1, r9, sl
 800f6d6:	b112      	cbz	r2, 800f6de <_DrawGradient+0x132>
 800f6d8:	4628      	mov	r0, r5
 800f6da:	4622      	mov	r2, r4
 800f6dc:	e003      	b.n	800f6e6 <_DrawGradient+0x13a>
 800f6de:	4608      	mov	r0, r1
 800f6e0:	461a      	mov	r2, r3
 800f6e2:	4629      	mov	r1, r5
 800f6e4:	4623      	mov	r3, r4
 800f6e6:	f7f9 fa6f 	bl	8008bc8 <LCD_FillRect>
 800f6ea:	f04f 0901 	mov.w	r9, #1
 800f6ee:	e009      	b.n	800f704 <_DrawGradient+0x158>
 800f6f0:	9903      	ldr	r1, [sp, #12]
 800f6f2:	b111      	cbz	r1, 800f6fa <_DrawGradient+0x14e>
 800f6f4:	4628      	mov	r0, r5
 800f6f6:	4619      	mov	r1, r3
 800f6f8:	e001      	b.n	800f6fe <_DrawGradient+0x152>
 800f6fa:	4618      	mov	r0, r3
 800f6fc:	4629      	mov	r1, r5
 800f6fe:	4622      	mov	r2, r4
 800f700:	9b04      	ldr	r3, [sp, #16]
 800f702:	4798      	blx	r3
 800f704:	4653      	mov	r3, sl
 800f706:	4658      	mov	r0, fp
 800f708:	e79f      	b.n	800f64a <_DrawGradient+0x9e>
 800f70a:	f7f9 fd35 	bl	8009178 <LCD_SetColor>
 800f70e:	f1b9 0f01 	cmp.w	r9, #1
 800f712:	d00f      	beq.n	800f734 <_DrawGradient+0x188>
 800f714:	9a03      	ldr	r2, [sp, #12]
 800f716:	ebc9 0106 	rsb	r1, r9, r6
 800f71a:	b132      	cbz	r2, 800f72a <_DrawGradient+0x17e>
 800f71c:	4628      	mov	r0, r5
 800f71e:	3101      	adds	r1, #1
 800f720:	4622      	mov	r2, r4
 800f722:	4633      	mov	r3, r6
 800f724:	f7f9 fa50 	bl	8008bc8 <LCD_FillRect>
 800f728:	e00e      	b.n	800f748 <_DrawGradient+0x19c>
 800f72a:	1c48      	adds	r0, r1, #1
 800f72c:	4629      	mov	r1, r5
 800f72e:	4632      	mov	r2, r6
 800f730:	4623      	mov	r3, r4
 800f732:	e7f7      	b.n	800f724 <_DrawGradient+0x178>
 800f734:	9b03      	ldr	r3, [sp, #12]
 800f736:	b113      	cbz	r3, 800f73e <_DrawGradient+0x192>
 800f738:	4628      	mov	r0, r5
 800f73a:	4631      	mov	r1, r6
 800f73c:	e001      	b.n	800f742 <_DrawGradient+0x196>
 800f73e:	4630      	mov	r0, r6
 800f740:	4629      	mov	r1, r5
 800f742:	4622      	mov	r2, r4
 800f744:	9b04      	ldr	r3, [sp, #16]
 800f746:	4798      	blx	r3
 800f748:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f74a:	b00f      	add	sp, #60	; 0x3c
 800f74c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f750:	f7f9 bd12 	b.w	8009178 <LCD_SetColor>
 800f754:	b00f      	add	sp, #60	; 0x3c
 800f756:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800f75c <GUI_DrawGradientV>:
 800f75c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f760:	4c15      	ldr	r4, [pc, #84]	; (800f7b8 <GUI_DrawGradientV+0x5c>)
 800f762:	6824      	ldr	r4, [r4, #0]
 800f764:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800f766:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800f768:	b087      	sub	sp, #28
 800f76a:	eb00 0905 	add.w	r9, r0, r5
 800f76e:	eb01 0804 	add.w	r8, r1, r4
 800f772:	4415      	add	r5, r2
 800f774:	441c      	add	r4, r3
 800f776:	a804      	add	r0, sp, #16
 800f778:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800f77a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800f77c:	f8ad 9010 	strh.w	r9, [sp, #16]
 800f780:	f8ad 5014 	strh.w	r5, [sp, #20]
 800f784:	f8ad 8012 	strh.w	r8, [sp, #18]
 800f788:	f8ad 4016 	strh.w	r4, [sp, #22]
 800f78c:	f7f6 fcc0 	bl	8006110 <WM__InitIVRSearch>
 800f790:	b170      	cbz	r0, 800f7b0 <GUI_DrawGradientV+0x54>
 800f792:	4b0a      	ldr	r3, [pc, #40]	; (800f7bc <GUI_DrawGradientV+0x60>)
 800f794:	9302      	str	r3, [sp, #8]
 800f796:	2301      	movs	r3, #1
 800f798:	9303      	str	r3, [sp, #12]
 800f79a:	4648      	mov	r0, r9
 800f79c:	4641      	mov	r1, r8
 800f79e:	462a      	mov	r2, r5
 800f7a0:	4623      	mov	r3, r4
 800f7a2:	9700      	str	r7, [sp, #0]
 800f7a4:	9601      	str	r6, [sp, #4]
 800f7a6:	f7ff ff01 	bl	800f5ac <_DrawGradient>
 800f7aa:	f7f6 fbef 	bl	8005f8c <WM__GetNextIVR>
 800f7ae:	e7ef      	b.n	800f790 <GUI_DrawGradientV+0x34>
 800f7b0:	b007      	add	sp, #28
 800f7b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f7b6:	bf00      	nop
 800f7b8:	200000b8 	.word	0x200000b8
 800f7bc:	08008b31 	.word	0x08008b31

0800f7c0 <GUI_DrawGradientH>:
 800f7c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f7c4:	4c15      	ldr	r4, [pc, #84]	; (800f81c <GUI_DrawGradientH+0x5c>)
 800f7c6:	6825      	ldr	r5, [r4, #0]
 800f7c8:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 800f7ca:	6d2d      	ldr	r5, [r5, #80]	; 0x50
 800f7cc:	b087      	sub	sp, #28
 800f7ce:	eb00 0804 	add.w	r8, r0, r4
 800f7d2:	eb01 0905 	add.w	r9, r1, r5
 800f7d6:	4414      	add	r4, r2
 800f7d8:	441d      	add	r5, r3
 800f7da:	a804      	add	r0, sp, #16
 800f7dc:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800f7de:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800f7e0:	f8ad 8010 	strh.w	r8, [sp, #16]
 800f7e4:	f8ad 4014 	strh.w	r4, [sp, #20]
 800f7e8:	f8ad 9012 	strh.w	r9, [sp, #18]
 800f7ec:	f8ad 5016 	strh.w	r5, [sp, #22]
 800f7f0:	f7f6 fc8e 	bl	8006110 <WM__InitIVRSearch>
 800f7f4:	b170      	cbz	r0, 800f814 <GUI_DrawGradientH+0x54>
 800f7f6:	4b0a      	ldr	r3, [pc, #40]	; (800f820 <GUI_DrawGradientH+0x60>)
 800f7f8:	9302      	str	r3, [sp, #8]
 800f7fa:	2300      	movs	r3, #0
 800f7fc:	9303      	str	r3, [sp, #12]
 800f7fe:	4648      	mov	r0, r9
 800f800:	4641      	mov	r1, r8
 800f802:	462a      	mov	r2, r5
 800f804:	4623      	mov	r3, r4
 800f806:	9700      	str	r7, [sp, #0]
 800f808:	9601      	str	r6, [sp, #4]
 800f80a:	f7ff fecf 	bl	800f5ac <_DrawGradient>
 800f80e:	f7f6 fbbd 	bl	8005f8c <WM__GetNextIVR>
 800f812:	e7ef      	b.n	800f7f4 <GUI_DrawGradientH+0x34>
 800f814:	b007      	add	sp, #28
 800f816:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f81a:	bf00      	nop
 800f81c:	200000b8 	.word	0x200000b8
 800f820:	08008b7d 	.word	0x08008b7d

0800f824 <_GetIndexMask_0>:
 800f824:	b508      	push	{r3, lr}
 800f826:	f7f9 f88d 	bl	8008944 <LCD_GetNumColors>
 800f82a:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 800f82e:	d010      	beq.n	800f852 <_GetIndexMask_0+0x2e>
 800f830:	287f      	cmp	r0, #127	; 0x7f
 800f832:	d810      	bhi.n	800f856 <_GetIndexMask_0+0x32>
 800f834:	283f      	cmp	r0, #63	; 0x3f
 800f836:	d810      	bhi.n	800f85a <_GetIndexMask_0+0x36>
 800f838:	281f      	cmp	r0, #31
 800f83a:	d810      	bhi.n	800f85e <_GetIndexMask_0+0x3a>
 800f83c:	280f      	cmp	r0, #15
 800f83e:	d810      	bhi.n	800f862 <_GetIndexMask_0+0x3e>
 800f840:	2807      	cmp	r0, #7
 800f842:	d810      	bhi.n	800f866 <_GetIndexMask_0+0x42>
 800f844:	2803      	cmp	r0, #3
 800f846:	d810      	bhi.n	800f86a <_GetIndexMask_0+0x46>
 800f848:	2801      	cmp	r0, #1
 800f84a:	bf94      	ite	ls
 800f84c:	2000      	movls	r0, #0
 800f84e:	2001      	movhi	r0, #1
 800f850:	e00c      	b.n	800f86c <_GetIndexMask_0+0x48>
 800f852:	2008      	movs	r0, #8
 800f854:	e00a      	b.n	800f86c <_GetIndexMask_0+0x48>
 800f856:	2007      	movs	r0, #7
 800f858:	e008      	b.n	800f86c <_GetIndexMask_0+0x48>
 800f85a:	2006      	movs	r0, #6
 800f85c:	e006      	b.n	800f86c <_GetIndexMask_0+0x48>
 800f85e:	2005      	movs	r0, #5
 800f860:	e004      	b.n	800f86c <_GetIndexMask_0+0x48>
 800f862:	2004      	movs	r0, #4
 800f864:	e002      	b.n	800f86c <_GetIndexMask_0+0x48>
 800f866:	2003      	movs	r0, #3
 800f868:	e000      	b.n	800f86c <_GetIndexMask_0+0x48>
 800f86a:	2002      	movs	r0, #2
 800f86c:	2301      	movs	r3, #1
 800f86e:	fa03 f000 	lsl.w	r0, r3, r0
 800f872:	3801      	subs	r0, #1
 800f874:	bd08      	pop	{r3, pc}

0800f876 <_Index2Color_0>:
 800f876:	b538      	push	{r3, r4, r5, lr}
 800f878:	4604      	mov	r4, r0
 800f87a:	f7f9 f863 	bl	8008944 <LCD_GetNumColors>
 800f87e:	4605      	mov	r5, r0
 800f880:	f7f9 f87e 	bl	8008980 <LCD_GetPalette>
 800f884:	42ac      	cmp	r4, r5
 800f886:	d203      	bcs.n	800f890 <_Index2Color_0+0x1a>
 800f888:	b118      	cbz	r0, 800f892 <_Index2Color_0+0x1c>
 800f88a:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800f88e:	bd38      	pop	{r3, r4, r5, pc}
 800f890:	2000      	movs	r0, #0
 800f892:	bd38      	pop	{r3, r4, r5, pc}

0800f894 <_Color2Index_0>:
 800f894:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f898:	4682      	mov	sl, r0
 800f89a:	f7f9 f853 	bl	8008944 <LCD_GetNumColors>
 800f89e:	4681      	mov	r9, r0
 800f8a0:	f7f9 f86e 	bl	8008980 <LCD_GetPalette>
 800f8a4:	4605      	mov	r5, r0
 800f8a6:	b1e0      	cbz	r0, 800f8e2 <_Color2Index_0+0x4e>
 800f8a8:	2300      	movs	r3, #0
 800f8aa:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
 800f8ae:	4592      	cmp	sl, r2
 800f8b0:	d019      	beq.n	800f8e6 <_Color2Index_0+0x52>
 800f8b2:	3301      	adds	r3, #1
 800f8b4:	454b      	cmp	r3, r9
 800f8b6:	dbf8      	blt.n	800f8aa <_Color2Index_0+0x16>
 800f8b8:	2700      	movs	r7, #0
 800f8ba:	f06f 487f 	mvn.w	r8, #4278190080	; 0xff000000
 800f8be:	463c      	mov	r4, r7
 800f8c0:	f855 1024 	ldr.w	r1, [r5, r4, lsl #2]
 800f8c4:	4650      	mov	r0, sl
 800f8c6:	f7fb fa6b 	bl	800ada0 <GUI_CalcColorDist>
 800f8ca:	4626      	mov	r6, r4
 800f8cc:	4540      	cmp	r0, r8
 800f8ce:	f104 0401 	add.w	r4, r4, #1
 800f8d2:	bf24      	itt	cs
 800f8d4:	4640      	movcs	r0, r8
 800f8d6:	463e      	movcs	r6, r7
 800f8d8:	454c      	cmp	r4, r9
 800f8da:	da07      	bge.n	800f8ec <_Color2Index_0+0x58>
 800f8dc:	4680      	mov	r8, r0
 800f8de:	4637      	mov	r7, r6
 800f8e0:	e7ee      	b.n	800f8c0 <_Color2Index_0+0x2c>
 800f8e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f8e6:	4618      	mov	r0, r3
 800f8e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f8ec:	4630      	mov	r0, r6
 800f8ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800f8f4 <_DrawDownRect>:
 800f8f4:	b510      	push	{r4, lr}
 800f8f6:	b09c      	sub	sp, #112	; 0x70
 800f8f8:	4604      	mov	r4, r0
 800f8fa:	4668      	mov	r0, sp
 800f8fc:	f7fb fb38 	bl	800af70 <GUI_SaveContext_W>
 800f900:	4b09      	ldr	r3, [pc, #36]	; (800f928 <_DrawDownRect+0x34>)
 800f902:	6818      	ldr	r0, [r3, #0]
 800f904:	f7f9 fc38 	bl	8009178 <LCD_SetColor>
 800f908:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f90c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f910:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f914:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f918:	f7fc f9ea 	bl	800bcf0 <GUI_DrawRect>
 800f91c:	4668      	mov	r0, sp
 800f91e:	f7fb fb31 	bl	800af84 <GUI_RestoreContext>
 800f922:	b01c      	add	sp, #112	; 0x70
 800f924:	bd10      	pop	{r4, pc}
 800f926:	bf00      	nop
 800f928:	20002c70 	.word	0x20002c70

0800f92c <_DrawUpRect>:
 800f92c:	b510      	push	{r4, lr}
 800f92e:	b09c      	sub	sp, #112	; 0x70
 800f930:	4604      	mov	r4, r0
 800f932:	4668      	mov	r0, sp
 800f934:	f7fb fb1c 	bl	800af70 <GUI_SaveContext_W>
 800f938:	4b09      	ldr	r3, [pc, #36]	; (800f960 <_DrawUpRect+0x34>)
 800f93a:	6818      	ldr	r0, [r3, #0]
 800f93c:	f7f9 fc1c 	bl	8009178 <LCD_SetColor>
 800f940:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f944:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f948:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f94c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f950:	f7fc f9ce 	bl	800bcf0 <GUI_DrawRect>
 800f954:	4668      	mov	r0, sp
 800f956:	f7fb fb15 	bl	800af84 <GUI_RestoreContext>
 800f95a:	b01c      	add	sp, #112	; 0x70
 800f95c:	bd10      	pop	{r4, pc}
 800f95e:	bf00      	nop
 800f960:	20002c70 	.word	0x20002c70

0800f964 <_DrawDown>:
 800f964:	b507      	push	{r0, r1, r2, lr}
 800f966:	4668      	mov	r0, sp
 800f968:	f7f5 f8a0 	bl	8004aac <WM_GetClientRect>
 800f96c:	4668      	mov	r0, sp
 800f96e:	f7ff ffc1 	bl	800f8f4 <_DrawDownRect>
 800f972:	b003      	add	sp, #12
 800f974:	f85d fb04 	ldr.w	pc, [sp], #4

0800f978 <_DrawUp>:
 800f978:	b507      	push	{r0, r1, r2, lr}
 800f97a:	4668      	mov	r0, sp
 800f97c:	f7f5 f896 	bl	8004aac <WM_GetClientRect>
 800f980:	4668      	mov	r0, sp
 800f982:	f7ff ffd3 	bl	800f92c <_DrawUpRect>
 800f986:	b003      	add	sp, #12
 800f988:	f85d fb04 	ldr.w	pc, [sp], #4

0800f98c <_GetArrowPara>:
 800f98c:	b510      	push	{r4, lr}
 800f98e:	b121      	cbz	r1, 800f99a <_GetArrowPara+0xe>
 800f990:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800f994:	f9b0 1000 	ldrsh.w	r1, [r0]
 800f998:	e003      	b.n	800f9a2 <_GetArrowPara+0x16>
 800f99a:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800f99e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f9a2:	1a61      	subs	r1, r4, r1
 800f9a4:	3101      	adds	r1, #1
 800f9a6:	1f0c      	subs	r4, r1, #4
 800f9a8:	2003      	movs	r0, #3
 800f9aa:	fb94 f0f0 	sdiv	r0, r4, r0
 800f9ae:	6010      	str	r0, [r2, #0]
 800f9b0:	1a08      	subs	r0, r1, r0
 800f9b2:	eba1 0160 	sub.w	r1, r1, r0, asr #1
 800f9b6:	3901      	subs	r1, #1
 800f9b8:	6019      	str	r1, [r3, #0]
 800f9ba:	bd10      	pop	{r4, pc}

0800f9bc <_DrawGraspH>:
 800f9bc:	b570      	push	{r4, r5, r6, lr}
 800f9be:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f9c2:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800f9c6:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 800f9ca:	441e      	add	r6, r3
 800f9cc:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800f9d0:	6a88      	ldr	r0, [r1, #40]	; 0x28
 800f9d2:	1b5c      	subs	r4, r3, r5
 800f9d4:	3403      	adds	r4, #3
 800f9d6:	10a4      	asrs	r4, r4, #2
 800f9d8:	4425      	add	r5, r4
 800f9da:	1076      	asrs	r6, r6, #1
 800f9dc:	1b1c      	subs	r4, r3, r4
 800f9de:	f7fb fae6 	bl	800afae <GUI_SetColor>
 800f9e2:	4630      	mov	r0, r6
 800f9e4:	4629      	mov	r1, r5
 800f9e6:	4622      	mov	r2, r4
 800f9e8:	f7fa fc1a 	bl	800a220 <GUI_DrawVLine>
 800f9ec:	1cb0      	adds	r0, r6, #2
 800f9ee:	4629      	mov	r1, r5
 800f9f0:	4622      	mov	r2, r4
 800f9f2:	f7fa fc15 	bl	800a220 <GUI_DrawVLine>
 800f9f6:	1d30      	adds	r0, r6, #4
 800f9f8:	4629      	mov	r1, r5
 800f9fa:	4622      	mov	r2, r4
 800f9fc:	f7fa fc10 	bl	800a220 <GUI_DrawVLine>
 800fa00:	1eb0      	subs	r0, r6, #2
 800fa02:	4629      	mov	r1, r5
 800fa04:	4622      	mov	r2, r4
 800fa06:	f7fa fc0b 	bl	800a220 <GUI_DrawVLine>
 800fa0a:	1f30      	subs	r0, r6, #4
 800fa0c:	4629      	mov	r1, r5
 800fa0e:	4622      	mov	r2, r4
 800fa10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fa14:	f7fa bc04 	b.w	800a220 <GUI_DrawVLine>

0800fa18 <_DrawGraspV>:
 800fa18:	b570      	push	{r4, r5, r6, lr}
 800fa1a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800fa1e:	f9b0 6006 	ldrsh.w	r6, [r0, #6]
 800fa22:	f9b0 5000 	ldrsh.w	r5, [r0]
 800fa26:	441e      	add	r6, r3
 800fa28:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fa2c:	6a88      	ldr	r0, [r1, #40]	; 0x28
 800fa2e:	1b5c      	subs	r4, r3, r5
 800fa30:	3403      	adds	r4, #3
 800fa32:	10a4      	asrs	r4, r4, #2
 800fa34:	4425      	add	r5, r4
 800fa36:	1076      	asrs	r6, r6, #1
 800fa38:	1b1c      	subs	r4, r3, r4
 800fa3a:	f7fb fab8 	bl	800afae <GUI_SetColor>
 800fa3e:	4630      	mov	r0, r6
 800fa40:	4629      	mov	r1, r5
 800fa42:	4622      	mov	r2, r4
 800fa44:	f7fa fb92 	bl	800a16c <GUI_DrawHLine>
 800fa48:	1cb0      	adds	r0, r6, #2
 800fa4a:	4629      	mov	r1, r5
 800fa4c:	4622      	mov	r2, r4
 800fa4e:	f7fa fb8d 	bl	800a16c <GUI_DrawHLine>
 800fa52:	1d30      	adds	r0, r6, #4
 800fa54:	4629      	mov	r1, r5
 800fa56:	4622      	mov	r2, r4
 800fa58:	f7fa fb88 	bl	800a16c <GUI_DrawHLine>
 800fa5c:	1eb0      	subs	r0, r6, #2
 800fa5e:	4629      	mov	r1, r5
 800fa60:	4622      	mov	r2, r4
 800fa62:	f7fa fb83 	bl	800a16c <GUI_DrawHLine>
 800fa66:	1f30      	subs	r0, r6, #4
 800fa68:	4629      	mov	r1, r5
 800fa6a:	4622      	mov	r2, r4
 800fa6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fa70:	f7fa bb7c 	b.w	800a16c <GUI_DrawHLine>

0800fa74 <_DrawFrame>:
 800fa74:	b538      	push	{r3, r4, r5, lr}
 800fa76:	4604      	mov	r4, r0
 800fa78:	6808      	ldr	r0, [r1, #0]
 800fa7a:	460d      	mov	r5, r1
 800fa7c:	f7fb fa97 	bl	800afae <GUI_SetColor>
 800fa80:	f9b4 1000 	ldrsh.w	r1, [r4]
 800fa84:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fa88:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 800fa8c:	3101      	adds	r1, #1
 800fa8e:	3a01      	subs	r2, #1
 800fa90:	f7fa fb6c 	bl	800a16c <GUI_DrawHLine>
 800fa94:	f9b4 1000 	ldrsh.w	r1, [r4]
 800fa98:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fa9c:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 800faa0:	3101      	adds	r1, #1
 800faa2:	3a01      	subs	r2, #1
 800faa4:	f7fa fb62 	bl	800a16c <GUI_DrawHLine>
 800faa8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800faac:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fab0:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fab4:	3101      	adds	r1, #1
 800fab6:	3a01      	subs	r2, #1
 800fab8:	f7fa fbb2 	bl	800a220 <GUI_DrawVLine>
 800fabc:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fac0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fac4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800fac8:	3101      	adds	r1, #1
 800faca:	3a01      	subs	r2, #1
 800facc:	f7fa fba8 	bl	800a220 <GUI_DrawVLine>
 800fad0:	6868      	ldr	r0, [r5, #4]
 800fad2:	f7fb fa6c 	bl	800afae <GUI_SetColor>
 800fad6:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 800fada:	f9b4 1000 	ldrsh.w	r1, [r4]
 800fade:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fae2:	3001      	adds	r0, #1
 800fae4:	3101      	adds	r1, #1
 800fae6:	3a01      	subs	r2, #1
 800fae8:	f7fa fb40 	bl	800a16c <GUI_DrawHLine>
 800faec:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 800faf0:	f9b4 1000 	ldrsh.w	r1, [r4]
 800faf4:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800faf8:	3801      	subs	r0, #1
 800fafa:	3101      	adds	r1, #1
 800fafc:	3a01      	subs	r2, #1
 800fafe:	f7fa fb35 	bl	800a16c <GUI_DrawHLine>
 800fb02:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fb06:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fb0a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fb0e:	3001      	adds	r0, #1
 800fb10:	3102      	adds	r1, #2
 800fb12:	3a02      	subs	r2, #2
 800fb14:	f7fa fb84 	bl	800a220 <GUI_DrawVLine>
 800fb18:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800fb1c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fb20:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fb24:	3102      	adds	r1, #2
 800fb26:	3a02      	subs	r2, #2
 800fb28:	3801      	subs	r0, #1
 800fb2a:	f7fa fb79 	bl	800a220 <GUI_DrawVLine>
 800fb2e:	68a8      	ldr	r0, [r5, #8]
 800fb30:	f7fb fa3d 	bl	800afae <GUI_SetColor>
 800fb34:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fb38:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fb3c:	f7fa fb3a 	bl	800a1b4 <GUI_DrawPixel>
 800fb40:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fb44:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800fb48:	f7fa fb34 	bl	800a1b4 <GUI_DrawPixel>
 800fb4c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800fb50:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fb54:	f7fa fb2e 	bl	800a1b4 <GUI_DrawPixel>
 800fb58:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800fb5c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800fb60:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800fb64:	f7fa bb26 	b.w	800a1b4 <GUI_DrawPixel>

0800fb68 <_DrawBackgroundH>:
 800fb68:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fb6a:	4604      	mov	r4, r0
 800fb6c:	460d      	mov	r5, r1
 800fb6e:	f7ff ff81 	bl	800fa74 <_DrawFrame>
 800fb72:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fb76:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800fb7a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fb7e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fb82:	68ee      	ldr	r6, [r5, #12]
 800fb84:	9600      	str	r6, [sp, #0]
 800fb86:	440b      	add	r3, r1
 800fb88:	692e      	ldr	r6, [r5, #16]
 800fb8a:	9601      	str	r6, [sp, #4]
 800fb8c:	3002      	adds	r0, #2
 800fb8e:	3102      	adds	r1, #2
 800fb90:	3a02      	subs	r2, #2
 800fb92:	105b      	asrs	r3, r3, #1
 800fb94:	f7ff fde2 	bl	800f75c <GUI_DrawGradientV>
 800fb98:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800fb9c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fba0:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fba4:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fba8:	696c      	ldr	r4, [r5, #20]
 800fbaa:	9400      	str	r4, [sp, #0]
 800fbac:	4419      	add	r1, r3
 800fbae:	69ac      	ldr	r4, [r5, #24]
 800fbb0:	9401      	str	r4, [sp, #4]
 800fbb2:	1049      	asrs	r1, r1, #1
 800fbb4:	3002      	adds	r0, #2
 800fbb6:	3101      	adds	r1, #1
 800fbb8:	3a02      	subs	r2, #2
 800fbba:	3b02      	subs	r3, #2
 800fbbc:	f7ff fdce 	bl	800f75c <GUI_DrawGradientV>
 800fbc0:	b002      	add	sp, #8
 800fbc2:	bd70      	pop	{r4, r5, r6, pc}

0800fbc4 <_DrawBackgroundV>:
 800fbc4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fbc6:	4604      	mov	r4, r0
 800fbc8:	460d      	mov	r5, r1
 800fbca:	f7ff ff53 	bl	800fa74 <_DrawFrame>
 800fbce:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fbd2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fbd6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fbda:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800fbde:	68ee      	ldr	r6, [r5, #12]
 800fbe0:	9600      	str	r6, [sp, #0]
 800fbe2:	4402      	add	r2, r0
 800fbe4:	692e      	ldr	r6, [r5, #16]
 800fbe6:	9601      	str	r6, [sp, #4]
 800fbe8:	3002      	adds	r0, #2
 800fbea:	3102      	adds	r1, #2
 800fbec:	1052      	asrs	r2, r2, #1
 800fbee:	3b02      	subs	r3, #2
 800fbf0:	f7ff fde6 	bl	800f7c0 <GUI_DrawGradientH>
 800fbf4:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800fbf8:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fbfc:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fc00:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800fc04:	696c      	ldr	r4, [r5, #20]
 800fc06:	9400      	str	r4, [sp, #0]
 800fc08:	4410      	add	r0, r2
 800fc0a:	69ac      	ldr	r4, [r5, #24]
 800fc0c:	9401      	str	r4, [sp, #4]
 800fc0e:	1040      	asrs	r0, r0, #1
 800fc10:	3001      	adds	r0, #1
 800fc12:	3102      	adds	r1, #2
 800fc14:	3a02      	subs	r2, #2
 800fc16:	3b02      	subs	r3, #2
 800fc18:	f7ff fdd2 	bl	800f7c0 <GUI_DrawGradientH>
 800fc1c:	b002      	add	sp, #8
 800fc1e:	bd70      	pop	{r4, r5, r6, pc}

0800fc20 <SCROLLBAR_DrawSkinFlex>:
 800fc20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fc24:	4604      	mov	r4, r0
 800fc26:	b08b      	sub	sp, #44	; 0x2c
 800fc28:	6800      	ldr	r0, [r0, #0]
 800fc2a:	f7fb fe21 	bl	800b870 <GUI_ALLOC_LockH>
 800fc2e:	4607      	mov	r7, r0
 800fc30:	a80a      	add	r0, sp, #40	; 0x28
 800fc32:	ae06      	add	r6, sp, #24
 800fc34:	f840 7d1c 	str.w	r7, [r0, #-28]!
 800fc38:	f7fb fe28 	bl	800b88c <GUI_ALLOC_UnlockH>
 800fc3c:	6923      	ldr	r3, [r4, #16]
 800fc3e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800fc42:	6963      	ldr	r3, [r4, #20]
 800fc44:	f8ad 301a 	strh.w	r3, [sp, #26]
 800fc48:	69a3      	ldr	r3, [r4, #24]
 800fc4a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800fc4e:	69e3      	ldr	r3, [r4, #28]
 800fc50:	f8ad 301e 	strh.w	r3, [sp, #30]
 800fc54:	6a25      	ldr	r5, [r4, #32]
 800fc56:	e896 0003 	ldmia.w	r6, {r0, r1}
 800fc5a:	682b      	ldr	r3, [r5, #0]
 800fc5c:	f10d 0820 	add.w	r8, sp, #32
 800fc60:	e888 0003 	stmia.w	r8, {r0, r1}
 800fc64:	b153      	cbz	r3, 800fc7c <SCROLLBAR_DrawSkinFlex+0x5c>
 800fc66:	4638      	mov	r0, r7
 800fc68:	4631      	mov	r1, r6
 800fc6a:	4632      	mov	r2, r6
 800fc6c:	f7fc f94d 	bl	800bf0a <WIDGET__RotateRect90>
 800fc70:	f8df 913c 	ldr.w	r9, [pc, #316]	; 800fdb0 <SCROLLBAR_DrawSkinFlex+0x190>
 800fc74:	f8df c13c 	ldr.w	ip, [pc, #316]	; 800fdb4 <SCROLLBAR_DrawSkinFlex+0x194>
 800fc78:	4b49      	ldr	r3, [pc, #292]	; (800fda0 <SCROLLBAR_DrawSkinFlex+0x180>)
 800fc7a:	e004      	b.n	800fc86 <SCROLLBAR_DrawSkinFlex+0x66>
 800fc7c:	f8df 9138 	ldr.w	r9, [pc, #312]	; 800fdb8 <SCROLLBAR_DrawSkinFlex+0x198>
 800fc80:	f8df c138 	ldr.w	ip, [pc, #312]	; 800fdbc <SCROLLBAR_DrawSkinFlex+0x19c>
 800fc84:	4b47      	ldr	r3, [pc, #284]	; (800fda4 <SCROLLBAR_DrawSkinFlex+0x184>)
 800fc86:	6862      	ldr	r2, [r4, #4]
 800fc88:	3a08      	subs	r2, #8
 800fc8a:	2a11      	cmp	r2, #17
 800fc8c:	f200 8083 	bhi.w	800fd96 <SCROLLBAR_DrawSkinFlex+0x176>
 800fc90:	e8df f002 	tbb	[pc, r2]
 800fc94:	81815f13 	.word	0x81815f13
 800fc98:	81818134 	.word	0x81818134
 800fc9c:	43813434 	.word	0x43813434
 800fca0:	81818181 	.word	0x81818181
 800fca4:	0981      	.short	0x0981
 800fca6:	682b      	ldr	r3, [r5, #0]
 800fca8:	b113      	cbz	r3, 800fcb0 <SCROLLBAR_DrawSkinFlex+0x90>
 800fcaa:	69a0      	ldr	r0, [r4, #24]
 800fcac:	6923      	ldr	r3, [r4, #16]
 800fcae:	e001      	b.n	800fcb4 <SCROLLBAR_DrawSkinFlex+0x94>
 800fcb0:	69e0      	ldr	r0, [r4, #28]
 800fcb2:	6963      	ldr	r3, [r4, #20]
 800fcb4:	1ac0      	subs	r0, r0, r3
 800fcb6:	3001      	adds	r0, #1
 800fcb8:	e06e      	b.n	800fd98 <SCROLLBAR_DrawSkinFlex+0x178>
 800fcba:	686a      	ldr	r2, [r5, #4]
 800fcbc:	493a      	ldr	r1, [pc, #232]	; (800fda8 <SCROLLBAR_DrawSkinFlex+0x188>)
 800fcbe:	4c3b      	ldr	r4, [pc, #236]	; (800fdac <SCROLLBAR_DrawSkinFlex+0x18c>)
 800fcc0:	2a02      	cmp	r2, #2
 800fcc2:	bf08      	it	eq
 800fcc4:	460c      	moveq	r4, r1
 800fcc6:	4630      	mov	r0, r6
 800fcc8:	4621      	mov	r1, r4
 800fcca:	4798      	blx	r3
 800fccc:	6829      	ldr	r1, [r5, #0]
 800fcce:	aa04      	add	r2, sp, #16
 800fcd0:	ab05      	add	r3, sp, #20
 800fcd2:	4640      	mov	r0, r8
 800fcd4:	f7ff fe5a 	bl	800f98c <_GetArrowPara>
 800fcd8:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800fcda:	f7fb f968 	bl	800afae <GUI_SetColor>
 800fcde:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800fce2:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 800fce6:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 800fcea:	1ad2      	subs	r2, r2, r3
 800fcec:	f04f 33ff 	mov.w	r3, #4294967295
 800fcf0:	9300      	str	r3, [sp, #0]
 800fcf2:	9b05      	ldr	r3, [sp, #20]
 800fcf4:	3201      	adds	r2, #1
 800fcf6:	4638      	mov	r0, r7
 800fcf8:	4419      	add	r1, r3
 800fcfa:	e048      	b.n	800fd8e <SCROLLBAR_DrawSkinFlex+0x16e>
 800fcfc:	4c2b      	ldr	r4, [pc, #172]	; (800fdac <SCROLLBAR_DrawSkinFlex+0x18c>)
 800fcfe:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800fd02:	69e5      	ldr	r5, [r4, #28]
 800fd04:	9500      	str	r5, [sp, #0]
 800fd06:	6a24      	ldr	r4, [r4, #32]
 800fd08:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800fd0c:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 800fd10:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800fd14:	9401      	str	r4, [sp, #4]
 800fd16:	47e0      	blx	ip
 800fd18:	e03d      	b.n	800fd96 <SCROLLBAR_DrawSkinFlex+0x176>
 800fd1a:	686a      	ldr	r2, [r5, #4]
 800fd1c:	4922      	ldr	r1, [pc, #136]	; (800fda8 <SCROLLBAR_DrawSkinFlex+0x188>)
 800fd1e:	4c23      	ldr	r4, [pc, #140]	; (800fdac <SCROLLBAR_DrawSkinFlex+0x18c>)
 800fd20:	2a03      	cmp	r2, #3
 800fd22:	bf08      	it	eq
 800fd24:	460c      	moveq	r4, r1
 800fd26:	4630      	mov	r0, r6
 800fd28:	4621      	mov	r1, r4
 800fd2a:	4798      	blx	r3
 800fd2c:	682b      	ldr	r3, [r5, #0]
 800fd2e:	b123      	cbz	r3, 800fd3a <SCROLLBAR_DrawSkinFlex+0x11a>
 800fd30:	f9bd 201e 	ldrsh.w	r2, [sp, #30]
 800fd34:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800fd38:	e003      	b.n	800fd42 <SCROLLBAR_DrawSkinFlex+0x122>
 800fd3a:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 800fd3e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800fd42:	1ad3      	subs	r3, r2, r3
 800fd44:	3301      	adds	r3, #1
 800fd46:	2b0e      	cmp	r3, #14
 800fd48:	dd25      	ble.n	800fd96 <SCROLLBAR_DrawSkinFlex+0x176>
 800fd4a:	4630      	mov	r0, r6
 800fd4c:	4621      	mov	r1, r4
 800fd4e:	47c8      	blx	r9
 800fd50:	e021      	b.n	800fd96 <SCROLLBAR_DrawSkinFlex+0x176>
 800fd52:	686a      	ldr	r2, [r5, #4]
 800fd54:	4914      	ldr	r1, [pc, #80]	; (800fda8 <SCROLLBAR_DrawSkinFlex+0x188>)
 800fd56:	4c15      	ldr	r4, [pc, #84]	; (800fdac <SCROLLBAR_DrawSkinFlex+0x18c>)
 800fd58:	2a01      	cmp	r2, #1
 800fd5a:	bf08      	it	eq
 800fd5c:	460c      	moveq	r4, r1
 800fd5e:	4630      	mov	r0, r6
 800fd60:	4621      	mov	r1, r4
 800fd62:	4798      	blx	r3
 800fd64:	6829      	ldr	r1, [r5, #0]
 800fd66:	aa04      	add	r2, sp, #16
 800fd68:	ab05      	add	r3, sp, #20
 800fd6a:	4640      	mov	r0, r8
 800fd6c:	f7ff fe0e 	bl	800f98c <_GetArrowPara>
 800fd70:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800fd72:	f7fb f91c 	bl	800afae <GUI_SetColor>
 800fd76:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800fd7a:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 800fd7e:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	; 0x24
 800fd82:	1ad2      	subs	r2, r2, r3
 800fd84:	2301      	movs	r3, #1
 800fd86:	9300      	str	r3, [sp, #0]
 800fd88:	9b05      	ldr	r3, [sp, #20]
 800fd8a:	4638      	mov	r0, r7
 800fd8c:	1ac9      	subs	r1, r1, r3
 800fd8e:	1052      	asrs	r2, r2, #1
 800fd90:	9b04      	ldr	r3, [sp, #16]
 800fd92:	f7fc f9eb 	bl	800c16c <WIDGET__DrawTriangle>
 800fd96:	2000      	movs	r0, #0
 800fd98:	b00b      	add	sp, #44	; 0x2c
 800fd9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fd9e:	bf00      	nop
 800fda0:	0800fbc5 	.word	0x0800fbc5
 800fda4:	0800fb69 	.word	0x0800fb69
 800fda8:	20000194 	.word	0x20000194
 800fdac:	200001c0 	.word	0x200001c0
 800fdb0:	0800fa19 	.word	0x0800fa19
 800fdb4:	0800f7c1 	.word	0x0800f7c1
 800fdb8:	0800f9bd 	.word	0x0800f9bd
 800fdbc:	0800f75d 	.word	0x0800f75d

0800fdc0 <_Create>:
 800fdc0:	b530      	push	{r4, r5, lr}
 800fdc2:	b08d      	sub	sp, #52	; 0x34
 800fdc4:	4605      	mov	r5, r0
 800fdc6:	f7fb fd53 	bl	800b870 <GUI_ALLOC_LockH>
 800fdca:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800fdcc:	6c04      	ldr	r4, [r0, #64]	; 0x40
 800fdce:	9000      	str	r0, [sp, #0]
 800fdd0:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800fdd4:	9301      	str	r3, [sp, #4]
 800fdd6:	4b07      	ldr	r3, [pc, #28]	; (800fdf4 <_Create+0x34>)
 800fdd8:	6483      	str	r3, [r0, #72]	; 0x48
 800fdda:	4668      	mov	r0, sp
 800fddc:	f7fb fd56 	bl	800b88c <GUI_ALLOC_UnlockH>
 800fde0:	2300      	movs	r3, #0
 800fde2:	9304      	str	r3, [sp, #16]
 800fde4:	ab01      	add	r3, sp, #4
 800fde6:	9503      	str	r5, [sp, #12]
 800fde8:	930b      	str	r3, [sp, #44]	; 0x2c
 800fdea:	a803      	add	r0, sp, #12
 800fdec:	47a0      	blx	r4
 800fdee:	b00d      	add	sp, #52	; 0x34
 800fdf0:	bd30      	pop	{r4, r5, pc}
 800fdf2:	bf00      	nop
 800fdf4:	0800fdf9 	.word	0x0800fdf9

0800fdf8 <_CalcPositions>:
 800fdf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fdfc:	b090      	sub	sp, #64	; 0x40
 800fdfe:	4605      	mov	r5, r0
 800fe00:	460c      	mov	r4, r1
 800fe02:	f7fb fd35 	bl	800b870 <GUI_ALLOC_LockH>
 800fe06:	4603      	mov	r3, r0
 800fe08:	9000      	str	r0, [sp, #0]
 800fe0a:	c803      	ldmia	r0, {r0, r1}
 800fe0c:	ae03      	add	r6, sp, #12
 800fe0e:	e886 0003 	stmia.w	r6, {r0, r1}
 800fe12:	8e58      	ldrh	r0, [r3, #50]	; 0x32
 800fe14:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800fe18:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 800fe1c:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800fe20:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 800fe24:	920e      	str	r2, [sp, #56]	; 0x38
 800fe26:	f000 0008 	and.w	r0, r0, #8
 800fe2a:	2800      	cmp	r0, #0
 800fe2c:	bf0c      	ite	eq
 800fe2e:	4608      	moveq	r0, r1
 800fe30:	4610      	movne	r0, r2
 800fe32:	61a0      	str	r0, [r4, #24]
 800fe34:	bf0c      	ite	eq
 800fe36:	2000      	moveq	r0, #0
 800fe38:	2001      	movne	r0, #1
 800fe3a:	aa01      	add	r2, sp, #4
 800fe3c:	9001      	str	r0, [sp, #4]
 800fe3e:	2019      	movs	r0, #25
 800fe40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800fe42:	9008      	str	r0, [sp, #32]
 800fe44:	9507      	str	r5, [sp, #28]
 800fe46:	920f      	str	r2, [sp, #60]	; 0x3c
 800fe48:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800fe4c:	970c      	str	r7, [sp, #48]	; 0x30
 800fe4e:	910d      	str	r1, [sp, #52]	; 0x34
 800fe50:	a807      	add	r0, sp, #28
 800fe52:	4798      	blx	r3
 800fe54:	9b00      	ldr	r3, [sp, #0]
 800fe56:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 800fe5a:	2aff      	cmp	r2, #255	; 0xff
 800fe5c:	4605      	mov	r5, r0
 800fe5e:	d111      	bne.n	800fe84 <_CalcPositions+0x8c>
 800fe60:	6998      	ldr	r0, [r3, #24]
 800fe62:	f7f4 ff4b 	bl	8004cfc <WM_GetScrollbarV>
 800fe66:	b168      	cbz	r0, 800fe84 <_CalcPositions+0x8c>
 800fe68:	a905      	add	r1, sp, #20
 800fe6a:	f7f4 ff60 	bl	8004d2e <WM_GetWindowRectEx>
 800fe6e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800fe72:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800fe76:	429a      	cmp	r2, r3
 800fe78:	d104      	bne.n	800fe84 <_CalcPositions+0x8c>
 800fe7a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800fe7e:	3b01      	subs	r3, #1
 800fe80:	f8ad 3010 	strh.w	r3, [sp, #16]
 800fe84:	9b00      	ldr	r3, [sp, #0]
 800fe86:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 800fe8a:	2afe      	cmp	r2, #254	; 0xfe
 800fe8c:	d111      	bne.n	800feb2 <_CalcPositions+0xba>
 800fe8e:	6998      	ldr	r0, [r3, #24]
 800fe90:	f7f4 ff2f 	bl	8004cf2 <WM_GetScrollbarH>
 800fe94:	b168      	cbz	r0, 800feb2 <_CalcPositions+0xba>
 800fe96:	a905      	add	r1, sp, #20
 800fe98:	f7f4 ff49 	bl	8004d2e <WM_GetWindowRectEx>
 800fe9c:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800fea0:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800fea4:	429a      	cmp	r2, r3
 800fea6:	d104      	bne.n	800feb2 <_CalcPositions+0xba>
 800fea8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800feac:	3b01      	subs	r3, #1
 800feae:	f8ad 3012 	strh.w	r3, [sp, #18]
 800feb2:	427a      	negs	r2, r7
 800feb4:	4630      	mov	r0, r6
 800feb6:	f1c8 0100 	rsb	r1, r8, #0
 800feba:	f7fa fff0 	bl	800ae9e <GUI_MoveRect>
 800febe:	9800      	ldr	r0, [sp, #0]
 800fec0:	4631      	mov	r1, r6
 800fec2:	f7fc f9ac 	bl	800c21e <SCROLLBAR__Rect2VRect>
 800fec6:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800feca:	f9bd a010 	ldrsh.w	sl, [sp, #16]
 800fece:	9b00      	ldr	r3, [sp, #0]
 800fed0:	ebc2 0a0a 	rsb	sl, r2, sl
 800fed4:	f8d3 904c 	ldr.w	r9, [r3, #76]	; 0x4c
 800fed8:	6d58      	ldr	r0, [r3, #84]	; 0x54
 800feda:	f10a 0601 	add.w	r6, sl, #1
 800fede:	eba6 0645 	sub.w	r6, r6, r5, lsl #1
 800fee2:	4649      	mov	r1, r9
 800fee4:	4370      	muls	r0, r6
 800fee6:	f7f9 f94f 	bl	8009188 <GUI__DivideRound32>
 800feea:	4b17      	ldr	r3, [pc, #92]	; (800ff48 <_CalcPositions+0x150>)
 800feec:	f8c4 a014 	str.w	sl, [r4, #20]
 800fef0:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fef4:	1c5a      	adds	r2, r3, #1
 800fef6:	4282      	cmp	r2, r0
 800fef8:	bfa8      	it	ge
 800fefa:	1c98      	addge	r0, r3, #2
 800fefc:	42b0      	cmp	r0, r6
 800fefe:	bfb4      	ite	lt
 800ff00:	4607      	movlt	r7, r0
 800ff02:	4637      	movge	r7, r6
 800ff04:	ebc7 0806 	rsb	r8, r7, r6
 800ff08:	442e      	add	r6, r5
 800ff0a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ff0e:	6126      	str	r6, [r4, #16]
 800ff10:	ae10      	add	r6, sp, #64	; 0x40
 800ff12:	6023      	str	r3, [r4, #0]
 800ff14:	1e6b      	subs	r3, r5, #1
 800ff16:	6063      	str	r3, [r4, #4]
 800ff18:	f856 3d40 	ldr.w	r3, [r6, #-64]!
 800ff1c:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800ff1e:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800ff20:	fb00 f008 	mul.w	r0, r0, r8
 800ff24:	ebc1 0109 	rsb	r1, r1, r9
 800ff28:	f7f9 f92e 	bl	8009188 <GUI__DivideRound32>
 800ff2c:	4428      	add	r0, r5
 800ff2e:	19c5      	adds	r5, r0, r7
 800ff30:	3d01      	subs	r5, #1
 800ff32:	60a0      	str	r0, [r4, #8]
 800ff34:	60e5      	str	r5, [r4, #12]
 800ff36:	f8c4 801c 	str.w	r8, [r4, #28]
 800ff3a:	6227      	str	r7, [r4, #32]
 800ff3c:	4668      	mov	r0, sp
 800ff3e:	f7fb fca5 	bl	800b88c <GUI_ALLOC_UnlockH>
 800ff42:	b010      	add	sp, #64	; 0x40
 800ff44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ff48:	200000e2 	.word	0x200000e2

0800ff4c <_Paint>:
 800ff4c:	b570      	push	{r4, r5, r6, lr}
 800ff4e:	b098      	sub	sp, #96	; 0x60
 800ff50:	4606      	mov	r6, r0
 800ff52:	f7fb fc8d 	bl	800b870 <GUI_ALLOC_LockH>
 800ff56:	6d83      	ldr	r3, [r0, #88]	; 0x58
 800ff58:	9305      	str	r3, [sp, #20]
 800ff5a:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800ff5c:	6c04      	ldr	r4, [r0, #64]	; 0x40
 800ff5e:	9001      	str	r0, [sp, #4]
 800ff60:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800ff64:	a906      	add	r1, sp, #24
 800ff66:	4605      	mov	r5, r0
 800ff68:	4630      	mov	r0, r6
 800ff6a:	9304      	str	r3, [sp, #16]
 800ff6c:	f7ff ff44 	bl	800fdf8 <_CalcPositions>
 800ff70:	a801      	add	r0, sp, #4
 800ff72:	f7fb fc8b 	bl	800b88c <GUI_ALLOC_UnlockH>
 800ff76:	a902      	add	r1, sp, #8
 800ff78:	4628      	mov	r0, r5
 800ff7a:	f7fb ffd8 	bl	800bf2e <WIDGET__GetClientRect>
 800ff7e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800ff82:	9314      	str	r3, [sp, #80]	; 0x50
 800ff84:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ff88:	9316      	str	r3, [sp, #88]	; 0x58
 800ff8a:	ab04      	add	r3, sp, #16
 800ff8c:	9317      	str	r3, [sp, #92]	; 0x5c
 800ff8e:	2308      	movs	r3, #8
 800ff90:	9310      	str	r3, [sp, #64]	; 0x40
 800ff92:	9b06      	ldr	r3, [sp, #24]
 800ff94:	9313      	str	r3, [sp, #76]	; 0x4c
 800ff96:	9b07      	ldr	r3, [sp, #28]
 800ff98:	9315      	str	r3, [sp, #84]	; 0x54
 800ff9a:	960f      	str	r6, [sp, #60]	; 0x3c
 800ff9c:	a80f      	add	r0, sp, #60	; 0x3c
 800ff9e:	47a0      	blx	r4
 800ffa0:	2310      	movs	r3, #16
 800ffa2:	9310      	str	r3, [sp, #64]	; 0x40
 800ffa4:	9b07      	ldr	r3, [sp, #28]
 800ffa6:	3301      	adds	r3, #1
 800ffa8:	9313      	str	r3, [sp, #76]	; 0x4c
 800ffaa:	9b08      	ldr	r3, [sp, #32]
 800ffac:	3b01      	subs	r3, #1
 800ffae:	9315      	str	r3, [sp, #84]	; 0x54
 800ffb0:	a80f      	add	r0, sp, #60	; 0x3c
 800ffb2:	47a0      	blx	r4
 800ffb4:	2311      	movs	r3, #17
 800ffb6:	9310      	str	r3, [sp, #64]	; 0x40
 800ffb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ffba:	3301      	adds	r3, #1
 800ffbc:	9313      	str	r3, [sp, #76]	; 0x4c
 800ffbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ffc0:	3b01      	subs	r3, #1
 800ffc2:	9315      	str	r3, [sp, #84]	; 0x54
 800ffc4:	a80f      	add	r0, sp, #60	; 0x3c
 800ffc6:	47a0      	blx	r4
 800ffc8:	2313      	movs	r3, #19
 800ffca:	9310      	str	r3, [sp, #64]	; 0x40
 800ffcc:	9b08      	ldr	r3, [sp, #32]
 800ffce:	9313      	str	r3, [sp, #76]	; 0x4c
 800ffd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ffd2:	9315      	str	r3, [sp, #84]	; 0x54
 800ffd4:	a80f      	add	r0, sp, #60	; 0x3c
 800ffd6:	47a0      	blx	r4
 800ffd8:	2309      	movs	r3, #9
 800ffda:	9310      	str	r3, [sp, #64]	; 0x40
 800ffdc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ffde:	9313      	str	r3, [sp, #76]	; 0x4c
 800ffe0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ffe2:	9315      	str	r3, [sp, #84]	; 0x54
 800ffe4:	a80f      	add	r0, sp, #60	; 0x3c
 800ffe6:	47a0      	blx	r4
 800ffe8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ffea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ffec:	429a      	cmp	r2, r3
 800ffee:	d006      	beq.n	800fffe <_Paint+0xb2>
 800fff0:	210c      	movs	r1, #12
 800fff2:	3201      	adds	r2, #1
 800fff4:	9110      	str	r1, [sp, #64]	; 0x40
 800fff6:	9213      	str	r2, [sp, #76]	; 0x4c
 800fff8:	9315      	str	r3, [sp, #84]	; 0x54
 800fffa:	a80f      	add	r0, sp, #60	; 0x3c
 800fffc:	47a0      	blx	r4
 800fffe:	b018      	add	sp, #96	; 0x60
 8010000:	bd70      	pop	{r4, r5, r6, pc}

08010002 <LCD_GetNumLayers>:
 8010002:	b510      	push	{r4, lr}
 8010004:	2000      	movs	r0, #0
 8010006:	f7fa fc75 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 801000a:	1c04      	adds	r4, r0, #0
 801000c:	f04f 0001 	mov.w	r0, #1
 8010010:	bf18      	it	ne
 8010012:	2401      	movne	r4, #1
 8010014:	f7fa fc6e 	bl	800a8f4 <GUI_DEVICE__GetpDriver>
 8010018:	b100      	cbz	r0, 801001c <LCD_GetNumLayers+0x1a>
 801001a:	3401      	adds	r4, #1
 801001c:	4620      	mov	r0, r4
 801001e:	bd10      	pop	{r4, pc}

08010020 <__libc_init_array>:
 8010020:	b570      	push	{r4, r5, r6, lr}
 8010022:	4d0d      	ldr	r5, [pc, #52]	; (8010058 <__libc_init_array+0x38>)
 8010024:	4c0d      	ldr	r4, [pc, #52]	; (801005c <__libc_init_array+0x3c>)
 8010026:	1b64      	subs	r4, r4, r5
 8010028:	10a4      	asrs	r4, r4, #2
 801002a:	2600      	movs	r6, #0
 801002c:	42a6      	cmp	r6, r4
 801002e:	d109      	bne.n	8010044 <__libc_init_array+0x24>
 8010030:	4d0b      	ldr	r5, [pc, #44]	; (8010060 <__libc_init_array+0x40>)
 8010032:	4c0c      	ldr	r4, [pc, #48]	; (8010064 <__libc_init_array+0x44>)
 8010034:	f000 f8ac 	bl	8010190 <_init>
 8010038:	1b64      	subs	r4, r4, r5
 801003a:	10a4      	asrs	r4, r4, #2
 801003c:	2600      	movs	r6, #0
 801003e:	42a6      	cmp	r6, r4
 8010040:	d105      	bne.n	801004e <__libc_init_array+0x2e>
 8010042:	bd70      	pop	{r4, r5, r6, pc}
 8010044:	f855 3b04 	ldr.w	r3, [r5], #4
 8010048:	4798      	blx	r3
 801004a:	3601      	adds	r6, #1
 801004c:	e7ee      	b.n	801002c <__libc_init_array+0xc>
 801004e:	f855 3b04 	ldr.w	r3, [r5], #4
 8010052:	4798      	blx	r3
 8010054:	3601      	adds	r6, #1
 8010056:	e7f2      	b.n	801003e <__libc_init_array+0x1e>
 8010058:	0801300c 	.word	0x0801300c
 801005c:	0801300c 	.word	0x0801300c
 8010060:	0801300c 	.word	0x0801300c
 8010064:	08013010 	.word	0x08013010

08010068 <__itoa>:
 8010068:	1e93      	subs	r3, r2, #2
 801006a:	2b22      	cmp	r3, #34	; 0x22
 801006c:	b510      	push	{r4, lr}
 801006e:	460c      	mov	r4, r1
 8010070:	d904      	bls.n	801007c <__itoa+0x14>
 8010072:	2300      	movs	r3, #0
 8010074:	700b      	strb	r3, [r1, #0]
 8010076:	461c      	mov	r4, r3
 8010078:	4620      	mov	r0, r4
 801007a:	bd10      	pop	{r4, pc}
 801007c:	2a0a      	cmp	r2, #10
 801007e:	d109      	bne.n	8010094 <__itoa+0x2c>
 8010080:	2800      	cmp	r0, #0
 8010082:	da07      	bge.n	8010094 <__itoa+0x2c>
 8010084:	232d      	movs	r3, #45	; 0x2d
 8010086:	700b      	strb	r3, [r1, #0]
 8010088:	4240      	negs	r0, r0
 801008a:	2101      	movs	r1, #1
 801008c:	4421      	add	r1, r4
 801008e:	f000 f83d 	bl	801010c <__utoa>
 8010092:	e7f1      	b.n	8010078 <__itoa+0x10>
 8010094:	2100      	movs	r1, #0
 8010096:	e7f9      	b.n	801008c <__itoa+0x24>

08010098 <itoa>:
 8010098:	f7ff bfe6 	b.w	8010068 <__itoa>

0801009c <memcpy>:
 801009c:	440a      	add	r2, r1
 801009e:	4291      	cmp	r1, r2
 80100a0:	f100 33ff 	add.w	r3, r0, #4294967295
 80100a4:	d100      	bne.n	80100a8 <memcpy+0xc>
 80100a6:	4770      	bx	lr
 80100a8:	b510      	push	{r4, lr}
 80100aa:	f811 4b01 	ldrb.w	r4, [r1], #1
 80100ae:	f803 4f01 	strb.w	r4, [r3, #1]!
 80100b2:	4291      	cmp	r1, r2
 80100b4:	d1f9      	bne.n	80100aa <memcpy+0xe>
 80100b6:	bd10      	pop	{r4, pc}

080100b8 <memmove>:
 80100b8:	4288      	cmp	r0, r1
 80100ba:	b510      	push	{r4, lr}
 80100bc:	eb01 0402 	add.w	r4, r1, r2
 80100c0:	d902      	bls.n	80100c8 <memmove+0x10>
 80100c2:	4284      	cmp	r4, r0
 80100c4:	4623      	mov	r3, r4
 80100c6:	d807      	bhi.n	80100d8 <memmove+0x20>
 80100c8:	1e43      	subs	r3, r0, #1
 80100ca:	42a1      	cmp	r1, r4
 80100cc:	d008      	beq.n	80100e0 <memmove+0x28>
 80100ce:	f811 2b01 	ldrb.w	r2, [r1], #1
 80100d2:	f803 2f01 	strb.w	r2, [r3, #1]!
 80100d6:	e7f8      	b.n	80100ca <memmove+0x12>
 80100d8:	4402      	add	r2, r0
 80100da:	4601      	mov	r1, r0
 80100dc:	428a      	cmp	r2, r1
 80100de:	d100      	bne.n	80100e2 <memmove+0x2a>
 80100e0:	bd10      	pop	{r4, pc}
 80100e2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80100e6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80100ea:	e7f7      	b.n	80100dc <memmove+0x24>

080100ec <memset>:
 80100ec:	4402      	add	r2, r0
 80100ee:	4603      	mov	r3, r0
 80100f0:	4293      	cmp	r3, r2
 80100f2:	d100      	bne.n	80100f6 <memset+0xa>
 80100f4:	4770      	bx	lr
 80100f6:	f803 1b01 	strb.w	r1, [r3], #1
 80100fa:	e7f9      	b.n	80100f0 <memset+0x4>

080100fc <strcpy>:
 80100fc:	4603      	mov	r3, r0
 80100fe:	f811 2b01 	ldrb.w	r2, [r1], #1
 8010102:	f803 2b01 	strb.w	r2, [r3], #1
 8010106:	2a00      	cmp	r2, #0
 8010108:	d1f9      	bne.n	80100fe <strcpy+0x2>
 801010a:	4770      	bx	lr

0801010c <__utoa>:
 801010c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801010e:	4c1f      	ldr	r4, [pc, #124]	; (801018c <__utoa+0x80>)
 8010110:	b08b      	sub	sp, #44	; 0x2c
 8010112:	4605      	mov	r5, r0
 8010114:	460b      	mov	r3, r1
 8010116:	466e      	mov	r6, sp
 8010118:	f104 0c20 	add.w	ip, r4, #32
 801011c:	6820      	ldr	r0, [r4, #0]
 801011e:	6861      	ldr	r1, [r4, #4]
 8010120:	4637      	mov	r7, r6
 8010122:	c703      	stmia	r7!, {r0, r1}
 8010124:	3408      	adds	r4, #8
 8010126:	4564      	cmp	r4, ip
 8010128:	463e      	mov	r6, r7
 801012a:	d1f7      	bne.n	801011c <__utoa+0x10>
 801012c:	7921      	ldrb	r1, [r4, #4]
 801012e:	7139      	strb	r1, [r7, #4]
 8010130:	1e91      	subs	r1, r2, #2
 8010132:	6820      	ldr	r0, [r4, #0]
 8010134:	6038      	str	r0, [r7, #0]
 8010136:	2922      	cmp	r1, #34	; 0x22
 8010138:	f04f 0100 	mov.w	r1, #0
 801013c:	d904      	bls.n	8010148 <__utoa+0x3c>
 801013e:	7019      	strb	r1, [r3, #0]
 8010140:	460b      	mov	r3, r1
 8010142:	4618      	mov	r0, r3
 8010144:	b00b      	add	sp, #44	; 0x2c
 8010146:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010148:	1e58      	subs	r0, r3, #1
 801014a:	4684      	mov	ip, r0
 801014c:	fbb5 f7f2 	udiv	r7, r5, r2
 8010150:	fb02 5617 	mls	r6, r2, r7, r5
 8010154:	3628      	adds	r6, #40	; 0x28
 8010156:	446e      	add	r6, sp
 8010158:	460c      	mov	r4, r1
 801015a:	f816 6c28 	ldrb.w	r6, [r6, #-40]
 801015e:	f80c 6f01 	strb.w	r6, [ip, #1]!
 8010162:	462e      	mov	r6, r5
 8010164:	42b2      	cmp	r2, r6
 8010166:	f101 0101 	add.w	r1, r1, #1
 801016a:	463d      	mov	r5, r7
 801016c:	d9ee      	bls.n	801014c <__utoa+0x40>
 801016e:	2200      	movs	r2, #0
 8010170:	545a      	strb	r2, [r3, r1]
 8010172:	1919      	adds	r1, r3, r4
 8010174:	1aa5      	subs	r5, r4, r2
 8010176:	42aa      	cmp	r2, r5
 8010178:	dae3      	bge.n	8010142 <__utoa+0x36>
 801017a:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 801017e:	780e      	ldrb	r6, [r1, #0]
 8010180:	7006      	strb	r6, [r0, #0]
 8010182:	3201      	adds	r2, #1
 8010184:	f801 5901 	strb.w	r5, [r1], #-1
 8010188:	e7f4      	b.n	8010174 <__utoa+0x68>
 801018a:	bf00      	nop
 801018c:	08012fdc 	.word	0x08012fdc

08010190 <_init>:
 8010190:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010192:	bf00      	nop
 8010194:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8010196:	bc08      	pop	{r3}
 8010198:	469e      	mov	lr, r3
 801019a:	4770      	bx	lr

0801019c <_fini>:
 801019c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801019e:	bf00      	nop
 80101a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80101a2:	bc08      	pop	{r3}
 80101a4:	469e      	mov	lr, r3
 80101a6:	4770      	bx	lr
